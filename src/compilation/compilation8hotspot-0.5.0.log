<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='6197' time_ms='1503308237118'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.144-b01
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.144-b01) for linux-amd64 JRE (1.8.0_144-b01), built on Jul 21 2017 21:57:33 by &quot;java_re&quot; with gcc 4.3.0 20080428 (Red Hat 4.3.0-8)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -XX:+LogCompilation -XX:+PrintAssembly -XX:LogFile=compilation8hotspot.log -Dfile.encoding=utf-8 
</args>
<command>
com.github.marschall.charsequences.ParseUuidCompilation
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.144-b01
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=/home/marschall/bin/java/jdk1.8.0_144/jre/lib/ext:/usr/java/packages/lib/ext
java.endorsed.dirs=/home/marschall/bin/java/jdk1.8.0_144/jre/lib/endorsed
sun.boot.library.path=/home/marschall/bin/java/jdk1.8.0_144/jre/lib/amd64
java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
java.home=/home/marschall/bin/java/jdk1.8.0_144/jre
java.class.path=/home/marschall/git/charsequences/target/test-classes:/home/marschall/git/charsequences/target/classes:/home/marschall/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/marschall/.m2/repository/org/hamcrest/hamcrest-junit/2.0.0.0/hamcrest-junit-2.0.0.0.jar:/home/marschall/.m2/repository/org/hamcrest/java-hamcrest/2.0.0.0/java-hamcrest-2.0.0.0.jar:/home/marschall/.m2/repository/org/openjdk/jmh/jmh-core/1.19/jmh-core-1.19.jar:/home/marschall/.m2/repository/net/sf/jopt-simple/jopt-simple/4.6/jopt-simple-4.6.jar:/home/marschall/.m2/repository/org/apache/commons/commons-math3/3.2/commons-math3-3.2.jar:/home/marschall/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.19/jmh-generator-annprocess-1.19.jar:/home/marschall/.m2/repository/org/openjdk/jol/jol-core/0.8/jol-core-0.8.jar
sun.boot.class.path=/home/marschall/bin/java/jdk1.8.0_144/jre/lib/resources.jar:/home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar:/home/marschall/bin/java/jdk1.8.0_144/jre/lib/sunrsasign.jar:/home/marschall/bin/java/jdk1.8.0_144/jre/lib/jsse.jar:/home/marschall/bin/java/jdk1.8.0_144/jre/lib/jce.jar:/home/marschall/bin/java/jdk1.8.0_144/jre/lib/charsets.jar:/home/marschall/bin/java/jdk1.8.0_144/jre/lib/jfr.jar:/home/marschall/bin/java/jdk1.8.0_144/jre/classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=utf-8
sun.java.command=com.github.marschall.charsequences.ParseUuidCompilation
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='140406105003776'/>
[Opened /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Object from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.Serializable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Comparable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.CharSequence from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.String from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.AnnotatedElement from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.GenericDeclaration from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Type from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Class from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Cloneable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.System from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Throwable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Error from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ThreadDeath from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Exception from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.RuntimeException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.SecurityManager from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.AccessControlContext from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.SecureClassLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ReflectiveOperationException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassNotFoundException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.LinkageError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.NoClassDefFoundError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassCastException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ArrayStoreException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.VirtualMachineError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.OutOfMemoryError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.StackOverflowError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.IllegalMonitorStateException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.SoftReference from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.WeakReference from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.FinalReference from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.PhantomReference from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Cleaner from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Runnable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Thread from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Thread$UncaughtExceptionHandler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ThreadGroup from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Map from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Dictionary from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Hashtable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Properties from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.AccessibleObject from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Member from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Field from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Parameter from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Executable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Method from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Constructor from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.MagicAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessor from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessor from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingClassLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.ConstantPool from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessor from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeFieldAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeStaticFieldAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.annotation.Annotation from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.CallerSensitive from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandle from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.DirectMethodHandle from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MemberName from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleNatives from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodType from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.BootstrapMethodError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.CallSite from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.ConstantCallSite from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MutableCallSite from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.VolatileCallSite from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Appendable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.AbstractStringBuilder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.StringBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.StringBuilder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Unsafe from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.AutoCloseable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.Closeable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.InputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.ByteArrayInputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.File from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.net.URL from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.jar.Manifest from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Launcher from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.CodeSource from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.StackTraceElement from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.Buffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Boolean from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Character from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Number from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Float from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Double from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Byte from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Short from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Integer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Long from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.NullPointerException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ArithmeticException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamField from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Comparator from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.String$CaseInsensitiveComparator from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.Guard from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.Permission from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.BasicPermission from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.RuntimePermission from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.AccessController from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectPermission from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.PrivilegedAction from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$GetReflectionFactoryAction from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.cert.Certificate from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Iterable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.List from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.RandomAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.AbstractCollection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.AbstractList from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Vector from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Stack from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$Lock from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$ReferenceHandler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.InterruptedException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.ArrayList from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Set from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.AbstractSet from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptySet from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyList from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.AbstractMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableCollection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableList from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableRandomAccessList from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Null from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Lock from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaLangRefAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.SharedSecrets from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.IncompatibleClassChangeError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.NoSuchMethodError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.Reflection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.HashMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Map$Entry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.HashMap$Node from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.VM from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Entry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Math from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer$FinalizerThread from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.Charset from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.spi.CharsetProvider from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.FastCharsetProvider from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.util.PreHashedMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Aliases from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Classes from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Cache from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicInteger from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Class$3 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Class$ReflectionData from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Class$Atomic from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.AbstractRepository from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.GenericDeclRepository from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.ClassRepository from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Class$AnnotationData from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.annotation.AnnotationType from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$ClassValueMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Modifier from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.LangReflectAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Arrays from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.HistoricallyNamedCharset from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.Unicode from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Class$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.NativeConstructorAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingConstructorAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.StringCoding from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap$Entry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringDecoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayDecoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetDecoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Decoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.CodingErrorAction from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Hashtable$EntrySet from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedCollection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedSet from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Objects from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Enumeration from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Iterator from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Enumerator from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Runtime from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Version from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FileInputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaIOFileDescriptorAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.Flushable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.OutputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FileOutputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FilterInputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.BufferedInputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.PrivilegedExceptionAction from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.misc.ReflectUtil from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FilterOutputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.PrintStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.BufferedOutputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.Writer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.OutputStreamWriter from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamEncoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.security.action.GetPropertyAction from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayEncoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetEncoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Encoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.ByteBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.HeapByteBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.Bits from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.ByteOrder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicLong from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaNioAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.Bits$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.BufferedWriter from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.DefaultFileSystem from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FileSystem from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.UnixFileSystem from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Enum from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.File$PathStatus from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.file.Watchable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.file.Path from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringEncoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$3 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$Entry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$Entry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$NativeLibrary from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Terminator from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.SignalHandler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Terminator$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Signal from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.NativeSignalHandler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Integer$IntegerCache from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.OSEnvironment from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaLangAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.System$2 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.IllegalArgumentException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Compiler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Compiler$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandlerFactory from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$Factory from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.security.util.Debug from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$ParallelLoaders from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$Entry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$SetFromMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$KeySet from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaNetAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader$7 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.StringTokenizer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.MetaIndex from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Readable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.Reader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.BufferedReader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.InputStreamReader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FileReader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamDecoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.CharBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.HeapCharBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$Cache from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$2 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Array from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.HashMap$TreeNode from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FileInputStream$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.net.www.ParseUtil from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.BitSet from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Locale from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Locale$Cache from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.Lock from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.ReentrantLock from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Segment from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Node from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CounterCell from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CollectionView from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$KeySetView from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ValuesView from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$EntrySetView from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Cache from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Key from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache$CacheEntry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Locale$LocaleKey from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleUtils from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.CharacterData from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.CharacterDataLatin1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.net.Parts from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.Handler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$JavaSecurityAccessImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityProtectionDomainAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$2 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$Key from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.Principal from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.HashSet from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.jar.Handler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.SystemClassLoaderAction from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140404519728896'/>
<thread_logfile thread='140404519728896' filename='/tmp/hs_c140404519728896_pid6197.log'/>
<writer thread='140404521834240'/>
<thread_logfile thread='140404521834240' filename='/tmp/hs_c140404521834240_pid6197.log'/>
<writer thread='140404520781568'/>
<thread_logfile thread='140404520781568' filename='/tmp/hs_c140404520781568_pid6197.log'/>
<writer thread='140404518676224'/>
<thread_logfile thread='140404518676224' filename='/tmp/hs_c140404518676224_pid6197.log'/>
<writer thread='140406105003776'/>
[Loaded java.lang.invoke.MethodHandleImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<task_queued compile_id='1' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='256' iicount='256' level='3' stamp='0.054' comment='tiered' hot_count='256'/>
<task_queued compile_id='2' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='256' iicount='256' level='3' stamp='0.054' comment='tiered' hot_count='256'/>
<task_queued compile_id='3' method='java/lang/Math min (II)I' bytes='11' count='640' iicount='640' level='3' stamp='0.055' comment='tiered' hot_count='640'/>
[Loaded java.util.function.Function from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$2 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$3 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140404518676224'/>
Loaded disassembler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/amd64/server/hsdis-amd64.so
Decoding compiled method 0x00007fb2c10fd9d0:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb2bd4907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fb2c10fdb40: mov    %eax,-0x14000(%rsp)
  0x00007fb2c10fdb47: push   %rbp
  0x00007fb2c10fdb48: sub    $0x30,%rsp
  0x00007fb2c10fdb4c: movabs $0x7fb2bd563ce8,%rax  ;   {metadata(method data for {method} {0x00007fb2bd4907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb2c10fdb56: mov    0xdc(%rax),%edi
  0x00007fb2c10fdb5c: add    $0x8,%edi
  0x00007fb2c10fdb5f: mov    %edi,0xdc(%rax)
  0x00007fb2c10fdb65: movabs $0x7fb2bd4907a8,%rax  ;   {metadata({method} {0x00007fb2bd4907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb2c10fdb6f: and    $0x1ff8,%edi
  0x00007fb2c10fdb75: cmp    $0x0,%edi
  0x00007fb2c10fdb78: je     0x00007fb2c10fdbdd  ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x00007fb2c10fdb7e: cmp    %edx,%esi
  0x00007fb2c10fdb80: movabs $0x7fb2bd563ce8,%rax  ;   {metadata(method data for {method} {0x00007fb2bd4907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb2c10fdb8a: movabs $0x108,%rdi
  0x00007fb2c10fdb94: jg     0x00007fb2c10fdba4
  0x00007fb2c10fdb9a: movabs $0x118,%rdi
  0x00007fb2c10fdba4: mov    (%rax,%rdi,1),%rbx
  0x00007fb2c10fdba8: lea    0x1(%rbx),%rbx
  0x00007fb2c10fdbac: mov    %rbx,(%rax,%rdi,1)
  0x00007fb2c10fdbb0: jg     0x00007fb2c10fdbcb  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x00007fb2c10fdbb6: movabs $0x7fb2bd563ce8,%rax  ;   {metadata(method data for {method} {0x00007fb2bd4907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb2c10fdbc0: incl   0x128(%rax)
  0x00007fb2c10fdbc6: jmpq   0x00007fb2c10fdbce  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x00007fb2c10fdbcb: mov    %rdx,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x00007fb2c10fdbce: mov    %rsi,%rax
  0x00007fb2c10fdbd1: add    $0x30,%rsp
  0x00007fb2c10fdbd5: pop    %rbp
  0x00007fb2c10fdbd6: test   %eax,0x16f57524(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c10fdbdc: retq   
  0x00007fb2c10fdbdd: mov    %rax,0x8(%rsp)
  0x00007fb2c10fdbe2: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c10fdbea: callq  0x00007fb2c10feb20  ; OopMap{off=175}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x00007fb2c10fdbef: jmp    0x00007fb2c10fdb7e
  0x00007fb2c10fdbf1: nop
  0x00007fb2c10fdbf2: nop
  0x00007fb2c10fdbf3: mov    0x2a8(%r15),%rax
  0x00007fb2c10fdbfa: movabs $0x0,%r10
  0x00007fb2c10fdc04: mov    %r10,0x2a8(%r15)
  0x00007fb2c10fdc0b: movabs $0x0,%r10
  0x00007fb2c10fdc15: mov    %r10,0x2b0(%r15)
  0x00007fb2c10fdc1c: add    $0x30,%rsp
  0x00007fb2c10fdc20: pop    %rbp
  0x00007fb2c10fdc21: jmpq   0x00007fb2c106c3e0  ;   {runtime_call}
  0x00007fb2c10fdc26: hlt    
  0x00007fb2c10fdc27: hlt    
  0x00007fb2c10fdc28: hlt    
  0x00007fb2c10fdc29: hlt    
  0x00007fb2c10fdc2a: hlt    
  0x00007fb2c10fdc2b: hlt    
  0x00007fb2c10fdc2c: hlt    
  0x00007fb2c10fdc2d: hlt    
  0x00007fb2c10fdc2e: hlt    
  0x00007fb2c10fdc2f: hlt    
  0x00007fb2c10fdc30: hlt    
  0x00007fb2c10fdc31: hlt    
  0x00007fb2c10fdc32: hlt    
  0x00007fb2c10fdc33: hlt    
  0x00007fb2c10fdc34: hlt    
  0x00007fb2c10fdc35: hlt    
  0x00007fb2c10fdc36: hlt    
  0x00007fb2c10fdc37: hlt    
  0x00007fb2c10fdc38: hlt    
  0x00007fb2c10fdc39: hlt    
  0x00007fb2c10fdc3a: hlt    
  0x00007fb2c10fdc3b: hlt    
  0x00007fb2c10fdc3c: hlt    
  0x00007fb2c10fdc3d: hlt    
  0x00007fb2c10fdc3e: hlt    
  0x00007fb2c10fdc3f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb2c10fdc40: callq  0x00007fb2c106cfe0  ;   {no_reloc}
  0x00007fb2c10fdc45: mov    %rsp,-0x28(%rsp)
  0x00007fb2c10fdc4a: sub    $0x80,%rsp
  0x00007fb2c10fdc51: mov    %rax,0x78(%rsp)
  0x00007fb2c10fdc56: mov    %rcx,0x70(%rsp)
  0x00007fb2c10fdc5b: mov    %rdx,0x68(%rsp)
  0x00007fb2c10fdc60: mov    %rbx,0x60(%rsp)
  0x00007fb2c10fdc65: mov    %rbp,0x50(%rsp)
  0x00007fb2c10fdc6a: mov    %rsi,0x48(%rsp)
  0x00007fb2c10fdc6f: mov    %rdi,0x40(%rsp)
  0x00007fb2c10fdc74: mov    %r8,0x38(%rsp)
  0x00007fb2c10fdc79: mov    %r9,0x30(%rsp)
  0x00007fb2c10fdc7e: mov    %r10,0x28(%rsp)
  0x00007fb2c10fdc83: mov    %r11,0x20(%rsp)
  0x00007fb2c10fdc88: mov    %r12,0x18(%rsp)
  0x00007fb2c10fdc8d: mov    %r13,0x10(%rsp)
  0x00007fb2c10fdc92: mov    %r14,0x8(%rsp)
  0x00007fb2c10fdc97: mov    %r15,(%rsp)
  0x00007fb2c10fdc9b: movabs $0x7fb2d6f4df36,%rdi  ;   {external_word}
  0x00007fb2c10fdca5: movabs $0x7fb2c10fdc45,%rsi  ;   {internal_word}
  0x00007fb2c10fdcaf: mov    %rsp,%rdx
  0x00007fb2c10fdcb2: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c10fdcb6: callq  0x00007fb2d6c79990  ;   {runtime_call}
  0x00007fb2c10fdcbb: hlt    
[Deopt Handler Code]
  0x00007fb2c10fdcbc: movabs $0x7fb2c10fdcbc,%r10  ;   {section_word}
  0x00007fb2c10fdcc6: push   %r10
  0x00007fb2c10fdcc8: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c10fdccd: hlt    
  0x00007fb2c10fdcce: hlt    
  0x00007fb2c10fdccf: hlt    
<nmethod compile_id='3' compiler='C1' level='3' entry='0x00007fb2c10fdb40' size='936' address='0x00007fb2c10fd9d0' relocation_offset='296' insts_offset='368' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='816' dependencies_offset='928' method='java/lang/Math min (II)I' bytes='11' count='640' iicount='640' stamp='0.063'/>
<writer thread='140406105003776'/>
[Loaded java.lang.ClassValue from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$4 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Entry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Identity from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Version from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MemberName$Factory from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140404518676224'/>
Decoding compiled method 0x00007fb2c10fce10:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fb2bd39e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x00007fb2c10fcfe0: mov    0x8(%rsi),%r10d
  0x00007fb2c10fcfe4: shl    $0x3,%r10
  0x00007fb2c10fcfe8: cmp    %rax,%r10
  0x00007fb2c10fcfeb: jne    0x00007fb2c1045e20  ;   {runtime_call}
  0x00007fb2c10fcff1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c10fcffc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb2c10fd000: mov    %eax,-0x14000(%rsp)
  0x00007fb2c10fd007: push   %rbp
  0x00007fb2c10fd008: sub    $0x60,%rsp
  0x00007fb2c10fd00c: movabs $0x7fb2bd5796c0,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd39e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c10fd016: mov    0xdc(%rdi),%ebx
  0x00007fb2c10fd01c: add    $0x8,%ebx
  0x00007fb2c10fd01f: mov    %ebx,0xdc(%rdi)
  0x00007fb2c10fd025: movabs $0x7fb2bd39e1a0,%rdi  ;   {metadata({method} {0x00007fb2bd39e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c10fd02f: and    $0x1ff8,%ebx
  0x00007fb2c10fd035: cmp    $0x0,%ebx
  0x00007fb2c10fd038: je     0x00007fb2c10fd306  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x00007fb2c10fd03e: mov    %rsi,%rdi
  0x00007fb2c10fd041: movabs $0x7fb2bd5796c0,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd39e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c10fd04b: addq   $0x1,0x108(%rbx)
  0x00007fb2c10fd053: movabs $0x7fb2bd511108,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd39b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb2c10fd05d: mov    0xdc(%rdi),%ebx
  0x00007fb2c10fd063: add    $0x8,%ebx
  0x00007fb2c10fd066: mov    %ebx,0xdc(%rdi)
  0x00007fb2c10fd06c: movabs $0x7fb2bd39b480,%rdi  ;   {metadata({method} {0x00007fb2bd39b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb2c10fd076: and    $0x7ffff8,%ebx
  0x00007fb2c10fd07c: cmp    $0x0,%ebx
  0x00007fb2c10fd07f: je     0x00007fb2c10fd31d
  0x00007fb2c10fd085: cmp    $0x0,%ecx
  0x00007fb2c10fd088: movabs $0x7fb2bd5796c0,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd39e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c10fd092: movabs $0x118,%rbx
  0x00007fb2c10fd09c: jge    0x00007fb2c10fd0ac
  0x00007fb2c10fd0a2: movabs $0x128,%rbx
  0x00007fb2c10fd0ac: mov    (%rdi,%rbx,1),%rax
  0x00007fb2c10fd0b0: lea    0x1(%rax),%rax
  0x00007fb2c10fd0b4: mov    %rax,(%rdi,%rbx,1)
  0x00007fb2c10fd0b8: jl     0x00007fb2c10fd2c6  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x00007fb2c10fd0be: cmp    $0x0,%r8d
  0x00007fb2c10fd0c2: movabs $0x7fb2bd5796c0,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd39e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c10fd0cc: movabs $0x148,%rbx
  0x00007fb2c10fd0d6: jg     0x00007fb2c10fd0e6
  0x00007fb2c10fd0dc: movabs $0x158,%rbx
  0x00007fb2c10fd0e6: mov    (%rdi,%rbx,1),%rax
  0x00007fb2c10fd0ea: lea    0x1(%rax),%rax
  0x00007fb2c10fd0ee: mov    %rax,(%rdi,%rbx,1)
  0x00007fb2c10fd0f2: jg     0x00007fb2c10fd16d  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x00007fb2c10fd0f8: cmp    $0x0,%r8d
  0x00007fb2c10fd0fc: movabs $0x7fb2bd5796c0,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd39e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c10fd106: movabs $0x168,%rbx
  0x00007fb2c10fd110: jge    0x00007fb2c10fd120
  0x00007fb2c10fd116: movabs $0x178,%rbx
  0x00007fb2c10fd120: mov    (%rdi,%rbx,1),%rax
  0x00007fb2c10fd124: lea    0x1(%rax),%rax
  0x00007fb2c10fd128: mov    %rax,(%rdi,%rbx,1)
  0x00007fb2c10fd12c: jl     0x00007fb2c10fd286  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x00007fb2c10fd132: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x00007fb2c10fd334
  0x00007fb2c10fd135: cmp    %edi,%ecx
  0x00007fb2c10fd137: movabs $0x7fb2bd5796c0,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd39e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c10fd141: movabs $0x198,%rbx
  0x00007fb2c10fd14b: jg     0x00007fb2c10fd15b
  0x00007fb2c10fd151: movabs $0x1a8,%rbx
  0x00007fb2c10fd15b: mov    (%rdi,%rbx,1),%rax
  0x00007fb2c10fd15f: lea    0x1(%rax),%rax
  0x00007fb2c10fd163: mov    %rax,(%rdi,%rbx,1)
  0x00007fb2c10fd167: jle    0x00007fb2c10fd202  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x00007fb2c10fd16d: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x00007fb2c10fd339
  0x00007fb2c10fd170: sub    %r8d,%edi
  0x00007fb2c10fd173: cmp    %edi,%ecx
  0x00007fb2c10fd175: movabs $0x7fb2bd5796c0,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd39e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c10fd17f: movabs $0x1b8,%rbx
  0x00007fb2c10fd189: jle    0x00007fb2c10fd199
  0x00007fb2c10fd18f: movabs $0x1c8,%rbx
  0x00007fb2c10fd199: mov    (%rdi,%rbx,1),%rax
  0x00007fb2c10fd19d: lea    0x1(%rax),%rax
  0x00007fb2c10fd1a1: mov    %rax,(%rdi,%rbx,1)
  0x00007fb2c10fd1a5: jg     0x00007fb2c10fd23c  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x00007fb2c10fd1ab: mov    %rsi,0x38(%rsp)
  0x00007fb2c10fd1b0: movabs $0x7fb2bd5796c0,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd39e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c10fd1ba: addq   $0x1,0x1e8(%rdi)
  0x00007fb2c10fd1c2: add    %ecx,%r8d
  0x00007fb2c10fd1c5: mov    %rdx,%rsi
  0x00007fb2c10fd1c8: mov    %rcx,%rdx
  0x00007fb2c10fd1cb: mov    %r8,%rcx           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x00007fb2c10fd1ce: nop
  0x00007fb2c10fd1cf: callq  0x00007fb2c1046420  ; OopMap{[56]=Oop off=500}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x00007fb2c10fd1d4: mov    0x38(%rsp),%rsi
  0x00007fb2c10fd1d9: mov    %rax,%r10
  0x00007fb2c10fd1dc: shr    $0x3,%r10
  0x00007fb2c10fd1e0: mov    %r10d,0xc(%rsi)
  0x00007fb2c10fd1e4: shr    $0x9,%rsi
  0x00007fb2c10fd1e8: movabs $0x7fb2bd1ff000,%rdx
  0x00007fb2c10fd1f2: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x00007fb2c10fd1f6: add    $0x60,%rsp
  0x00007fb2c10fd1fa: pop    %rbp
  0x00007fb2c10fd1fb: test   %eax,0x16f57eff(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c10fd201: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x00007fb2c10fd202: movabs $0x670b8a5e8,%rdx  ;   {oop(&quot;&quot;)}
  0x00007fb2c10fd20c: mov    0xc(%rdx),%edx     ; implicit exception: dispatches to 0x00007fb2c10fd33e
  0x00007fb2c10fd20f: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)

  0x00007fb2c10fd213: mov    %rdx,%r10
  0x00007fb2c10fd216: shr    $0x3,%r10
  0x00007fb2c10fd21a: mov    %r10d,0xc(%rsi)
  0x00007fb2c10fd21e: shr    $0x9,%rsi
  0x00007fb2c10fd222: movabs $0x7fb2bd1ff000,%rdx
  0x00007fb2c10fd22c: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x00007fb2c10fd230: add    $0x60,%rsp
  0x00007fb2c10fd234: pop    %rbp
  0x00007fb2c10fd235: test   %eax,0x16f57ec5(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c10fd23b: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x00007fb2c10fd23c: nopl   0x0(%rax)
  0x00007fb2c10fd240: jmpq   0x00007fb2c10fd352  ;   {no_reloc}
  0x00007fb2c10fd245: add    %al,(%rax)
  0x00007fb2c10fd247: add    %al,(%rax)
  0x00007fb2c10fd249: add    %ch,%cl
  0x00007fb2c10fd24b: or     $0x48000001,%eax   ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x00007fb2c10fd250: mov    %eax,%edx
  0x00007fb2c10fd252: movabs $0x7fb2bd5796c0,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd39e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c10fd25c: addq   $0x1,0x1d8(%rsi)
  0x00007fb2c10fd264: add    %ecx,%r8d
  0x00007fb2c10fd267: mov    %r8,%rdx
  0x00007fb2c10fd26a: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x00007fb2c10fd26d: mov    %rax,0x40(%rsp)
  0x00007fb2c10fd272: nop
  0x00007fb2c10fd273: nop
  0x00007fb2c10fd274: nop
  0x00007fb2c10fd275: nop
  0x00007fb2c10fd276: nop
  0x00007fb2c10fd277: callq  0x00007fb2c1046020  ; OopMap{[64]=Oop off=668}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x00007fb2c10fd27c: mov    0x40(%rsp),%rax
  0x00007fb2c10fd281: jmpq   0x00007fb2c10fd3e0  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x00007fb2c10fd286: xchg   %ax,%ax
  0x00007fb2c10fd288: jmpq   0x00007fb2c10fd378  ;   {no_reloc}
  0x00007fb2c10fd28d: add    %al,(%rax)
  0x00007fb2c10fd28f: add    %al,(%rax)
  0x00007fb2c10fd291: add    %ch,%cl
  0x00007fb2c10fd293: jmp    0x00007fb2c10fd295
  0x00007fb2c10fd295: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x00007fb2c10fd297: mov    %rax,%rdx
  0x00007fb2c10fd29a: movabs $0x7fb2bd5796c0,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd39e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c10fd2a4: addq   $0x1,0x188(%rsi)
  0x00007fb2c10fd2ac: mov    %r8,%rdx
  0x00007fb2c10fd2af: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x00007fb2c10fd2b2: mov    %rax,0x48(%rsp)
  0x00007fb2c10fd2b7: callq  0x00007fb2c1046020  ; OopMap{[72]=Oop off=732}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x00007fb2c10fd2bc: mov    0x48(%rsp),%rax
  0x00007fb2c10fd2c1: jmpq   0x00007fb2c10fd3e0  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x00007fb2c10fd2c6: xchg   %ax,%ax
  0x00007fb2c10fd2c8: jmpq   0x00007fb2c10fd39e  ;   {no_reloc}
  0x00007fb2c10fd2cd: add    %al,(%rax)
  0x00007fb2c10fd2cf: add    %al,(%rax)
  0x00007fb2c10fd2d1: add    %ch,%cl
  0x00007fb2c10fd2d3: roll   (%rax)
  0x00007fb2c10fd2d5: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x00007fb2c10fd2d7: mov    %rax,%rdx
  0x00007fb2c10fd2da: movabs $0x7fb2bd5796c0,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd39e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c10fd2e4: addq   $0x1,0x138(%rsi)
  0x00007fb2c10fd2ec: mov    %rcx,%rdx
  0x00007fb2c10fd2ef: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x00007fb2c10fd2f2: mov    %rax,0x50(%rsp)
  0x00007fb2c10fd2f7: callq  0x00007fb2c1046020  ; OopMap{[80]=Oop off=796}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x00007fb2c10fd2fc: mov    0x50(%rsp),%rax
  0x00007fb2c10fd301: jmpq   0x00007fb2c10fd3e0
  0x00007fb2c10fd306: mov    %rdi,0x8(%rsp)
  0x00007fb2c10fd30b: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c10fd313: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop rdx=Oop off=824}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x00007fb2c10fd318: jmpq   0x00007fb2c10fd03e
  0x00007fb2c10fd31d: mov    %rdi,0x8(%rsp)
  0x00007fb2c10fd322: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c10fd32a: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop rdx=Oop off=847}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x00007fb2c10fd32f: jmpq   0x00007fb2c10fd085
  0x00007fb2c10fd334: callq  0x00007fb2c106ee40  ; OopMap{rsi=Oop rdx=Oop off=857}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x00007fb2c10fd339: callq  0x00007fb2c106ee40  ; OopMap{rsi=Oop rdx=Oop off=862}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x00007fb2c10fd33e: callq  0x00007fb2c106ee40  ; OopMap{rsi=Oop off=867}
                                                ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x00007fb2c10fd343: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb2c10fd34d: mov    $0xa050f00,%eax
  0x00007fb2c10fd352: callq  0x00007fb2c10ffe60  ; OopMap{off=887}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x00007fb2c10fd357: jmpq   0x00007fb2c10fd240
  0x00007fb2c10fd35c: mov    %rdx,%rdx
  0x00007fb2c10fd35f: callq  0x00007fb2c106e920  ; OopMap{off=900}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x00007fb2c10fd364: jmpq   0x00007fb2c10fd24f
  0x00007fb2c10fd369: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb2c10fd373: mov    $0xa050f00,%eax
  0x00007fb2c10fd378: callq  0x00007fb2c10ffe60  ; OopMap{off=925}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x00007fb2c10fd37d: jmpq   0x00007fb2c10fd288
  0x00007fb2c10fd382: mov    %rdx,%rdx
  0x00007fb2c10fd385: callq  0x00007fb2c106e920  ; OopMap{off=938}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x00007fb2c10fd38a: jmpq   0x00007fb2c10fd297
  0x00007fb2c10fd38f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb2c10fd399: mov    $0xa050f00,%eax
  0x00007fb2c10fd39e: callq  0x00007fb2c10ffe60  ; OopMap{off=963}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x00007fb2c10fd3a3: jmpq   0x00007fb2c10fd2c8
  0x00007fb2c10fd3a8: mov    %rdx,%rdx
  0x00007fb2c10fd3ab: callq  0x00007fb2c106e920  ; OopMap{off=976}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x00007fb2c10fd3b0: jmpq   0x00007fb2c10fd2d7
  0x00007fb2c10fd3b5: nop
  0x00007fb2c10fd3b6: nop
  0x00007fb2c10fd3b7: mov    0x2a8(%r15),%rax
  0x00007fb2c10fd3be: movabs $0x0,%r10
  0x00007fb2c10fd3c8: mov    %r10,0x2a8(%r15)
  0x00007fb2c10fd3cf: movabs $0x0,%r10
  0x00007fb2c10fd3d9: mov    %r10,0x2b0(%r15)
  0x00007fb2c10fd3e0: add    $0x60,%rsp
  0x00007fb2c10fd3e4: pop    %rbp
  0x00007fb2c10fd3e5: jmpq   0x00007fb2c106c3e0  ;   {runtime_call}
  0x00007fb2c10fd3ea: hlt    
  0x00007fb2c10fd3eb: hlt    
  0x00007fb2c10fd3ec: hlt    
  0x00007fb2c10fd3ed: hlt    
  0x00007fb2c10fd3ee: hlt    
  0x00007fb2c10fd3ef: hlt    
  0x00007fb2c10fd3f0: hlt    
  0x00007fb2c10fd3f1: hlt    
  0x00007fb2c10fd3f2: hlt    
  0x00007fb2c10fd3f3: hlt    
  0x00007fb2c10fd3f4: hlt    
  0x00007fb2c10fd3f5: hlt    
  0x00007fb2c10fd3f6: hlt    
  0x00007fb2c10fd3f7: hlt    
  0x00007fb2c10fd3f8: hlt    
  0x00007fb2c10fd3f9: hlt    
  0x00007fb2c10fd3fa: hlt    
  0x00007fb2c10fd3fb: hlt    
  0x00007fb2c10fd3fc: hlt    
  0x00007fb2c10fd3fd: hlt    
  0x00007fb2c10fd3fe: hlt    
  0x00007fb2c10fd3ff: hlt    
[Stub Code]
  0x00007fb2c10fd400: nop                       ;   {no_reloc}
  0x00007fb2c10fd401: nop
  0x00007fb2c10fd402: nop
  0x00007fb2c10fd403: nop
  0x00007fb2c10fd404: nop
  0x00007fb2c10fd405: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c10fd40f: jmpq   0x00007fb2c10fd40f  ;   {runtime_call}
  0x00007fb2c10fd414: nop
  0x00007fb2c10fd415: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c10fd41f: jmpq   0x00007fb2c10fd41f  ;   {runtime_call}
  0x00007fb2c10fd424: nop
  0x00007fb2c10fd425: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c10fd42f: jmpq   0x00007fb2c10fd42f  ;   {runtime_call}
  0x00007fb2c10fd434: nop
  0x00007fb2c10fd435: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c10fd43f: jmpq   0x00007fb2c10fd43f  ;   {runtime_call}
[Exception Handler]
  0x00007fb2c10fd444: callq  0x00007fb2c106cfe0  ;   {runtime_call}
  0x00007fb2c10fd449: mov    %rsp,-0x28(%rsp)
  0x00007fb2c10fd44e: sub    $0x80,%rsp
  0x00007fb2c10fd455: mov    %rax,0x78(%rsp)
  0x00007fb2c10fd45a: mov    %rcx,0x70(%rsp)
  0x00007fb2c10fd45f: mov    %rdx,0x68(%rsp)
  0x00007fb2c10fd464: mov    %rbx,0x60(%rsp)
  0x00007fb2c10fd469: mov    %rbp,0x50(%rsp)
  0x00007fb2c10fd46e: mov    %rsi,0x48(%rsp)
  0x00007fb2c10fd473: mov    %rdi,0x40(%rsp)
  0x00007fb2c10fd478: mov    %r8,0x38(%rsp)
  0x00007fb2c10fd47d: mov    %r9,0x30(%rsp)
  0x00007fb2c10fd482: mov    %r10,0x28(%rsp)
  0x00007fb2c10fd487: mov    %r11,0x20(%rsp)
  0x00007fb2c10fd48c: mov    %r12,0x18(%rsp)
  0x00007fb2c10fd491: mov    %r13,0x10(%rsp)
  0x00007fb2c10fd496: mov    %r14,0x8(%rsp)
  0x00007fb2c10fd49b: mov    %r15,(%rsp)
  0x00007fb2c10fd49f: movabs $0x7fb2d6f4df36,%rdi  ;   {external_word}
  0x00007fb2c10fd4a9: movabs $0x7fb2c10fd449,%rsi  ;   {internal_word}
  0x00007fb2c10fd4b3: mov    %rsp,%rdx
  0x00007fb2c10fd4b6: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c10fd4ba: callq  0x00007fb2d6c79990  ;   {runtime_call}
  0x00007fb2c10fd4bf: hlt    
[Deopt Handler Code]
  0x00007fb2c10fd4c0: movabs $0x7fb2c10fd4c0,%r10  ;   {section_word}
  0x00007fb2c10fd4ca: push   %r10
  0x00007fb2c10fd4cc: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c10fd4d1: hlt    
  0x00007fb2c10fd4d2: hlt    
  0x00007fb2c10fd4d3: hlt    
  0x00007fb2c10fd4d4: hlt    
  0x00007fb2c10fd4d5: hlt    
  0x00007fb2c10fd4d6: hlt    
  0x00007fb2c10fd4d7: hlt    
<nmethod compile_id='1' compiler='C1' level='3' entry='0x00007fb2c10fcfe0' size='2704' address='0x00007fb2c10fce10' relocation_offset='296' insts_offset='464' stub_offset='1520' scopes_data_offset='1752' scopes_pcs_offset='2040' dependencies_offset='2664' nul_chk_table_offset='2672' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='256' iicount='256' stamp='0.066'/>
<writer thread='140406105003776'/>
[Loaded java.lang.invoke.MethodHandleStatics from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<task_queued compile_id='4' method='java/lang/String hashCode ()I' bytes='55' count='416' backedge_count='6144' iicount='416' level='3' stamp='0.066' comment='tiered' hot_count='416'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
<writer thread='140404518676224'/>
Decoding compiled method 0x00007fb2c1102150:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb2bd4b5658} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0xb0]  (sp of caller)
  0x00007fb2c1102360: mov    %eax,-0x14000(%rsp)
  0x00007fb2c1102367: push   %rbp
  0x00007fb2c1102368: sub    $0xa0,%rsp
  0x00007fb2c110236f: mov    %rsi,%r8
  0x00007fb2c1102372: mov    %rdx,%r9
  0x00007fb2c1102375: movabs $0x7fb2bd57af10,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd4b5658} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fb2c110237f: mov    0xdc(%rbx),%edx
  0x00007fb2c1102385: add    $0x8,%edx
  0x00007fb2c1102388: mov    %edx,0xdc(%rbx)
  0x00007fb2c110238e: movabs $0x7fb2bd4b5658,%rbx  ;   {metadata({method} {0x00007fb2bd4b5658} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fb2c1102398: and    $0x1ff8,%edx
  0x00007fb2c110239e: cmp    $0x0,%edx
  0x00007fb2c11023a1: je     0x00007fb2c1102c01  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x00007fb2c11023a7: mov    %rcx,%r11
  0x00007fb2c11023aa: sub    %r9d,%r11d
  0x00007fb2c11023ad: cmp    $0x0,%r11d
  0x00007fb2c11023b1: movabs $0x7fb2bd57af10,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd4b5658} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fb2c11023bb: movabs $0x108,%rdx
  0x00007fb2c11023c5: jge    0x00007fb2c11023d5
  0x00007fb2c11023cb: movabs $0x118,%rdx
  0x00007fb2c11023d5: mov    (%rbx,%rdx,1),%rsi
  0x00007fb2c11023d9: lea    0x1(%rsi),%rsi
  0x00007fb2c11023dd: mov    %rsi,(%rbx,%rdx,1)
  0x00007fb2c11023e1: jl     0x00007fb2c11025a4  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x00007fb2c11023e7: mov    %r11,%rbx
  0x00007fb2c11023ea: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00007fb2c11023f4: movslq %ebx,%rbx
  0x00007fb2c11023f7: mov    %rbx,%rdi
  0x00007fb2c11023fa: cmp    $0xffffff,%rbx
  0x00007fb2c1102401: ja     0x00007fb2c1102c18
  0x00007fb2c1102407: movabs $0x17,%rsi
  0x00007fb2c1102411: lea    (%rsi,%rbx,2),%rsi
  0x00007fb2c1102415: and    $0xfffffffffffffff8,%rsi
  0x00007fb2c1102419: mov    0x60(%r15),%rax
  0x00007fb2c110241d: lea    (%rax,%rsi,1),%rsi
  0x00007fb2c1102421: cmp    0x70(%r15),%rsi
  0x00007fb2c1102425: ja     0x00007fb2c1102c18
  0x00007fb2c110242b: mov    %rsi,0x60(%r15)
  0x00007fb2c110242f: sub    %rax,%rsi
  0x00007fb2c1102432: movq   $0x1,(%rax)
  0x00007fb2c1102439: mov    %rdx,%rcx
  0x00007fb2c110243c: shr    $0x3,%rcx
  0x00007fb2c1102440: mov    %ecx,0x8(%rax)
  0x00007fb2c1102443: mov    %ebx,0xc(%rax)
  0x00007fb2c1102446: sub    $0x10,%rsi
  0x00007fb2c110244a: je     0x00007fb2c1102461
  0x00007fb2c1102450: xor    %rbx,%rbx
  0x00007fb2c1102453: shr    $0x3,%rsi
  0x00007fb2c1102457: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fb2c110245c: dec    %rsi
  0x00007fb2c110245f: jne    0x00007fb2c1102457  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x00007fb2c1102461: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x00007fb2c1102c22
  0x00007fb2c1102465: sub    %r9d,%esi
  0x00007fb2c1102468: movabs $0x7fb2bd57af10,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd4b5658} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fb2c1102472: addq   $0x1,0x208(%rdx)
  0x00007fb2c110247a: movabs $0x7fb2bd563ce8,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd4907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb2c1102484: mov    0xdc(%rdx),%ecx
  0x00007fb2c110248a: add    $0x8,%ecx
  0x00007fb2c110248d: mov    %ecx,0xdc(%rdx)
  0x00007fb2c1102493: movabs $0x7fb2bd4907a8,%rdx  ;   {metadata({method} {0x00007fb2bd4907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb2c110249d: and    $0x7ffff8,%ecx
  0x00007fb2c11024a3: cmp    $0x0,%ecx
  0x00007fb2c11024a6: je     0x00007fb2c1102c27
  0x00007fb2c11024ac: cmp    %r11d,%esi
  0x00007fb2c11024af: movabs $0x7fb2bd563ce8,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd4907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb2c11024b9: movabs $0x108,%rcx
  0x00007fb2c11024c3: jg     0x00007fb2c11024d3
  0x00007fb2c11024c9: movabs $0x118,%rcx
  0x00007fb2c11024d3: mov    (%rdx,%rcx,1),%rdi
  0x00007fb2c11024d7: lea    0x1(%rdi),%rdi
  0x00007fb2c11024db: mov    %rdi,(%rdx,%rcx,1)
  0x00007fb2c11024df: jg     0x00007fb2c11024fd  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00007fb2c11024e5: movabs $0x7fb2bd563ce8,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd4907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb2c11024ef: incl   0x128(%rdx)
  0x00007fb2c11024f5: mov    %rsi,%rdi
  0x00007fb2c11024f8: jmpq   0x00007fb2c1102500  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00007fb2c11024fd: mov    %r11,%rdi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00007fb2c1102500: movabs $0x7fb2bd57af10,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd4b5658} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fb2c110250a: addq   $0x1,0x218(%rsi)
  0x00007fb2c1102512: mov    %r8,%rsi
  0x00007fb2c1102515: mov    %r9,%rdx
  0x00007fb2c1102518: mov    %rax,%rcx
  0x00007fb2c110251b: mov    $0x0,%r8d
  0x00007fb2c1102521: mov    %rdi,%r9
  0x00007fb2c1102524: mov    %rax,0x70(%rsp)
  0x00007fb2c1102529: test   %edx,%edx
  0x00007fb2c110252b: jl     0x00007fb2c1102c3e
  0x00007fb2c1102531: lea    (%rdx,%r9,1),%rdi
  0x00007fb2c1102535: cmp    0xc(%rsi),%edi
  0x00007fb2c1102538: ja     0x00007fb2c1102c3e
  0x00007fb2c110253e: lea    (%r8,%r9,1),%rdi
  0x00007fb2c1102542: cmp    0xc(%rcx),%edi
  0x00007fb2c1102545: ja     0x00007fb2c1102c3e
  0x00007fb2c110254b: test   %r9d,%r9d
  0x00007fb2c110254e: jl     0x00007fb2c1102c3e
  0x00007fb2c1102554: je     0x00007fb2c1102590
  0x00007fb2c110255a: movslq %edx,%rdx
  0x00007fb2c110255d: movslq %r8d,%r8
  0x00007fb2c1102560: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007fb2c1102565: lea    0x10(%rcx,%r8,2),%rsi
  0x00007fb2c110256a: mov    %r9,%rdx
  0x00007fb2c110256d: test   $0xf,%esp
  0x00007fb2c1102573: je     0x00007fb2c110258b
  0x00007fb2c1102579: sub    $0x8,%rsp
  0x00007fb2c110257d: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007fb2c1102582: add    $0x8,%rsp
  0x00007fb2c1102586: jmpq   0x00007fb2c1102590
  0x00007fb2c110258b: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x00007fb2c1102590: mov    0x70(%rsp),%rax
  0x00007fb2c1102595: add    $0xa0,%rsp
  0x00007fb2c110259c: pop    %rbp
  0x00007fb2c110259d: test   %eax,0x16f52b5d(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c11025a3: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x00007fb2c11025a4: mov    %ecx,0x80(%rsp)
  0x00007fb2c11025ab: nopl   0x0(%rax,%rax,1)
  0x00007fb2c11025b0: jmpq   0x00007fb2c1102c58  ;   {no_reloc}
  0x00007fb2c11025b5: add    %al,(%rax)
  0x00007fb2c11025b7: add    %al,(%rax)
  0x00007fb2c11025b9: add    %cl,-0x75(%rcx)
  0x00007fb2c11025bc: rex.RXB (bad) 
  0x00007fb2c11025be: lea    0x20(%rax),%rdi
  0x00007fb2c11025c2: cmp    0x70(%r15),%rdi
  0x00007fb2c11025c6: ja     0x00007fb2c1102c62
  0x00007fb2c11025cc: mov    %rdi,0x60(%r15)
  0x00007fb2c11025d0: mov    0xa8(%rdx),%rcx
  0x00007fb2c11025d7: mov    %rcx,(%rax)
  0x00007fb2c11025da: mov    %rdx,%rcx
  0x00007fb2c11025dd: shr    $0x3,%rcx
  0x00007fb2c11025e1: mov    %ecx,0x8(%rax)
  0x00007fb2c11025e4: xor    %rcx,%rcx
  0x00007fb2c11025e7: mov    %ecx,0xc(%rax)
  0x00007fb2c11025ea: xor    %rcx,%rcx
  0x00007fb2c11025ed: mov    %rcx,0x10(%rax)
  0x00007fb2c11025f1: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x00007fb2c11025f5: data16 xchg %ax,%ax
  0x00007fb2c11025f8: jmpq   0x00007fb2c1102c7e  ;   {no_reloc}
  0x00007fb2c11025fd: add    %al,(%rax)
  0x00007fb2c11025ff: add    %al,(%rax)
  0x00007fb2c1102601: add    %cl,-0x77(%rax)
  0x00007fb2c1102604: test   %ah,(%rax,%rcx,4)
  0x00007fb2c1102607: add    %al,(%rax)
  0x00007fb2c1102609: add    %cl,-0x75(%rcx)
  0x00007fb2c110260c: rex.RXB (bad) 
  0x00007fb2c110260e: lea    0x18(%rax),%rdi
  0x00007fb2c1102612: cmp    0x70(%r15),%rdi
  0x00007fb2c1102616: ja     0x00007fb2c1102c88
  0x00007fb2c110261c: mov    %rdi,0x60(%r15)
  0x00007fb2c1102620: mov    0xa8(%rdx),%rcx
  0x00007fb2c1102627: mov    %rcx,(%rax)
  0x00007fb2c110262a: mov    %rdx,%rcx
  0x00007fb2c110262d: shr    $0x3,%rcx
  0x00007fb2c1102631: mov    %ecx,0x8(%rax)
  0x00007fb2c1102634: xor    %rcx,%rcx
  0x00007fb2c1102637: mov    %ecx,0xc(%rax)
  0x00007fb2c110263a: xor    %rcx,%rcx
  0x00007fb2c110263d: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x00007fb2c1102641: mov    %rax,%rbx
  0x00007fb2c1102644: movabs $0x7fb2bd57af10,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd4b5658} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fb2c110264e: addq   $0x1,0x128(%rdx)
  0x00007fb2c1102656: movabs $0x7fb2bd57ec20,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd4130f0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fb2c1102660: mov    0xdc(%rbx),%edx
  0x00007fb2c1102666: add    $0x8,%edx
  0x00007fb2c1102669: mov    %edx,0xdc(%rbx)
  0x00007fb2c110266f: movabs $0x7fb2bd4130f0,%rbx  ;   {metadata({method} {0x00007fb2bd4130f0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fb2c1102679: and    $0x7ffff8,%edx
  0x00007fb2c110267f: cmp    $0x0,%edx
  0x00007fb2c1102682: je     0x00007fb2c1102c95
  0x00007fb2c1102688: mov    %rax,%rbx
  0x00007fb2c110268b: movabs $0x7fb2bd57ec20,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd4130f0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fb2c1102695: addq   $0x1,0x108(%rdx)
  0x00007fb2c110269d: movabs $0x7fb2bd57f320,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd40f420} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb2c11026a7: mov    0xdc(%rbx),%edx
  0x00007fb2c11026ad: add    $0x8,%edx
  0x00007fb2c11026b0: mov    %edx,0xdc(%rbx)
  0x00007fb2c11026b6: movabs $0x7fb2bd40f420,%rbx  ;   {metadata({method} {0x00007fb2bd40f420} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb2c11026c0: and    $0x7ffff8,%edx
  0x00007fb2c11026c6: cmp    $0x0,%edx
  0x00007fb2c11026c9: je     0x00007fb2c1102cac
  0x00007fb2c11026cf: mov    %rax,%rbx
  0x00007fb2c11026d2: movabs $0x7fb2bd57f320,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd40f420} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb2c11026dc: addq   $0x1,0x108(%rdx)
  0x00007fb2c11026e4: movabs $0x7fb2bd511108,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd39b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb2c11026ee: mov    0xdc(%rbx),%edx
  0x00007fb2c11026f4: add    $0x8,%edx
  0x00007fb2c11026f7: mov    %edx,0xdc(%rbx)
  0x00007fb2c11026fd: movabs $0x7fb2bd39b480,%rbx  ;   {metadata({method} {0x00007fb2bd39b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb2c1102707: and    $0x7ffff8,%edx
  0x00007fb2c110270d: cmp    $0x0,%edx
  0x00007fb2c1102710: je     0x00007fb2c1102cc3
  0x00007fb2c1102716: mov    $0x10,%ebx
  0x00007fb2c110271b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00007fb2c1102725: mov    %rax,%r13
  0x00007fb2c1102728: movslq %ebx,%rbx
  0x00007fb2c110272b: mov    %rbx,%rdi
  0x00007fb2c110272e: cmp    $0xffffff,%rbx
  0x00007fb2c1102735: ja     0x00007fb2c1102cda
  0x00007fb2c110273b: movabs $0x17,%rsi
  0x00007fb2c1102745: lea    (%rsi,%rbx,2),%rsi
  0x00007fb2c1102749: and    $0xfffffffffffffff8,%rsi
  0x00007fb2c110274d: mov    0x60(%r15),%rax
  0x00007fb2c1102751: lea    (%rax,%rsi,1),%rsi
  0x00007fb2c1102755: cmp    0x70(%r15),%rsi
  0x00007fb2c1102759: ja     0x00007fb2c1102cda
  0x00007fb2c110275f: mov    %rsi,0x60(%r15)
  0x00007fb2c1102763: sub    %rax,%rsi
  0x00007fb2c1102766: movq   $0x1,(%rax)
  0x00007fb2c110276d: mov    %rdx,%rcx
  0x00007fb2c1102770: shr    $0x3,%rcx
  0x00007fb2c1102774: mov    %ecx,0x8(%rax)
  0x00007fb2c1102777: mov    %ebx,0xc(%rax)
  0x00007fb2c110277a: sub    $0x10,%rsi
  0x00007fb2c110277e: je     0x00007fb2c1102795
  0x00007fb2c1102784: xor    %rbx,%rbx
  0x00007fb2c1102787: shr    $0x3,%rsi
  0x00007fb2c110278b: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fb2c1102790: dec    %rsi
  0x00007fb2c1102793: jne    0x00007fb2c110278b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x00007fb2c1102795: mov    %rax,%r10
  0x00007fb2c1102798: shr    $0x3,%r10
  0x00007fb2c110279c: mov    %r10d,0x10(%r13)
  0x00007fb2c11027a0: mov    %r13,%rax
  0x00007fb2c11027a3: shr    $0x9,%rax
  0x00007fb2c11027a7: movabs $0x7fb2bd1ff000,%rdx
  0x00007fb2c11027b1: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x00007fb2c11027b5: mov    %r13,%rax
  0x00007fb2c11027b8: movabs $0x7fb2bd57af10,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd4b5658} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fb2c11027c2: mov    0x8(%rax),%eax
  0x00007fb2c11027c5: shl    $0x3,%rax
  0x00007fb2c11027c9: cmp    0x140(%rdx),%rax
  0x00007fb2c11027d0: jne    0x00007fb2c11027df
  0x00007fb2c11027d2: addq   $0x1,0x148(%rdx)
  0x00007fb2c11027da: jmpq   0x00007fb2c1102845
  0x00007fb2c11027df: cmp    0x150(%rdx),%rax
  0x00007fb2c11027e6: jne    0x00007fb2c11027f5
  0x00007fb2c11027e8: addq   $0x1,0x158(%rdx)
  0x00007fb2c11027f0: jmpq   0x00007fb2c1102845
  0x00007fb2c11027f5: cmpq   $0x0,0x140(%rdx)
  0x00007fb2c1102800: jne    0x00007fb2c1102819
  0x00007fb2c1102802: mov    %rax,0x140(%rdx)
  0x00007fb2c1102809: movq   $0x1,0x148(%rdx)
  0x00007fb2c1102814: jmpq   0x00007fb2c1102845
  0x00007fb2c1102819: cmpq   $0x0,0x150(%rdx)
  0x00007fb2c1102824: jne    0x00007fb2c110283d
  0x00007fb2c1102826: mov    %rax,0x150(%rdx)
  0x00007fb2c110282d: movq   $0x1,0x158(%rdx)
  0x00007fb2c1102838: jmpq   0x00007fb2c1102845
  0x00007fb2c110283d: addq   $0x1,0x138(%rdx)
  0x00007fb2c1102845: movabs $0x7fb2bd57fca8,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd4138c8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fb2c110284f: mov    0xdc(%rdx),%esi
  0x00007fb2c1102855: add    $0x8,%esi
  0x00007fb2c1102858: mov    %esi,0xdc(%rdx)
  0x00007fb2c110285e: movabs $0x7fb2bd4138c8,%rdx  ;   {metadata({method} {0x00007fb2bd4138c8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fb2c1102868: and    $0x7ffff8,%esi
  0x00007fb2c110286e: cmp    $0x0,%esi
  0x00007fb2c1102871: je     0x00007fb2c1102ce4
  0x00007fb2c1102877: mov    %r13,%rax
  0x00007fb2c110287a: movabs $0x7fb2bd57fca8,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd4138c8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fb2c1102884: addq   $0x1,0x108(%rdx)
  0x00007fb2c110288c: mov    %r9,%rdx
  0x00007fb2c110288f: mov    %r13,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x00007fb2c1102892: mov    %r13,0x78(%rsp)
  0x00007fb2c1102897: callq  0x00007fb2c1046020  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007fb2c110289c: mov    0x78(%rsp),%rax
  0x00007fb2c11028a1: movabs $0x7fb2bd57af10,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd4b5658} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fb2c11028ab: mov    0x8(%rax),%eax
  0x00007fb2c11028ae: shl    $0x3,%rax
  0x00007fb2c11028b2: cmp    0x170(%rdx),%rax
  0x00007fb2c11028b9: jne    0x00007fb2c11028c8
  0x00007fb2c11028bb: addq   $0x1,0x178(%rdx)
  0x00007fb2c11028c3: jmpq   0x00007fb2c110292e
  0x00007fb2c11028c8: cmp    0x180(%rdx),%rax
  0x00007fb2c11028cf: jne    0x00007fb2c11028de
  0x00007fb2c11028d1: addq   $0x1,0x188(%rdx)
  0x00007fb2c11028d9: jmpq   0x00007fb2c110292e
  0x00007fb2c11028de: cmpq   $0x0,0x170(%rdx)
  0x00007fb2c11028e9: jne    0x00007fb2c1102902
  0x00007fb2c11028eb: mov    %rax,0x170(%rdx)
  0x00007fb2c11028f2: movq   $0x1,0x178(%rdx)
  0x00007fb2c11028fd: jmpq   0x00007fb2c110292e
  0x00007fb2c1102902: cmpq   $0x0,0x180(%rdx)
  0x00007fb2c110290d: jne    0x00007fb2c1102926
  0x00007fb2c110290f: mov    %rax,0x180(%rdx)
  0x00007fb2c1102916: movq   $0x1,0x188(%rdx)
  0x00007fb2c1102921: jmpq   0x00007fb2c110292e
  0x00007fb2c1102926: addq   $0x1,0x168(%rdx)
  0x00007fb2c110292e: movabs $0x7fb2bd580be8,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd413408} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fb2c1102938: mov    0xdc(%rdx),%esi
  0x00007fb2c110293e: add    $0x8,%esi
  0x00007fb2c1102941: mov    %esi,0xdc(%rdx)
  0x00007fb2c1102947: movabs $0x7fb2bd413408,%rdx  ;   {metadata({method} {0x00007fb2bd413408} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fb2c1102951: and    $0x7ffff8,%esi
  0x00007fb2c1102957: cmp    $0x0,%esi
  0x00007fb2c110295a: je     0x00007fb2c1102cfb
  0x00007fb2c1102960: mov    0x78(%rsp),%rax
  0x00007fb2c1102965: movabs $0x7fb2bd580be8,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd413408} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fb2c110296f: addq   $0x1,0x108(%rdx)
  0x00007fb2c1102977: movabs $0x67108a3e0,%rdx  ;   {oop(&quot; &gt; &quot;)}
  0x00007fb2c1102981: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x00007fb2c1102986: nop
  0x00007fb2c1102987: callq  0x00007fb2c1046020  ; OopMap{[120]=Oop [136]=Oop off=1580}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007fb2c110298c: mov    0x78(%rsp),%rax
  0x00007fb2c1102991: movabs $0x7fb2bd57af10,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd4b5658} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fb2c110299b: mov    0x8(%rax),%eax
  0x00007fb2c110299e: shl    $0x3,%rax
  0x00007fb2c11029a2: cmp    0x1a0(%rdx),%rax
  0x00007fb2c11029a9: jne    0x00007fb2c11029b8
  0x00007fb2c11029ab: addq   $0x1,0x1a8(%rdx)
  0x00007fb2c11029b3: jmpq   0x00007fb2c1102a1e
  0x00007fb2c11029b8: cmp    0x1b0(%rdx),%rax
  0x00007fb2c11029bf: jne    0x00007fb2c11029ce
  0x00007fb2c11029c1: addq   $0x1,0x1b8(%rdx)
  0x00007fb2c11029c9: jmpq   0x00007fb2c1102a1e
  0x00007fb2c11029ce: cmpq   $0x0,0x1a0(%rdx)
  0x00007fb2c11029d9: jne    0x00007fb2c11029f2
  0x00007fb2c11029db: mov    %rax,0x1a0(%rdx)
  0x00007fb2c11029e2: movq   $0x1,0x1a8(%rdx)
  0x00007fb2c11029ed: jmpq   0x00007fb2c1102a1e
  0x00007fb2c11029f2: cmpq   $0x0,0x1b0(%rdx)
  0x00007fb2c11029fd: jne    0x00007fb2c1102a16
  0x00007fb2c11029ff: mov    %rax,0x1b0(%rdx)
  0x00007fb2c1102a06: movq   $0x1,0x1b8(%rdx)
  0x00007fb2c1102a11: jmpq   0x00007fb2c1102a1e
  0x00007fb2c1102a16: addq   $0x1,0x198(%rdx)
  0x00007fb2c1102a1e: movabs $0x7fb2bd57fca8,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd4138c8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fb2c1102a28: mov    0xdc(%rdx),%esi
  0x00007fb2c1102a2e: add    $0x8,%esi
  0x00007fb2c1102a31: mov    %esi,0xdc(%rdx)
  0x00007fb2c1102a37: movabs $0x7fb2bd4138c8,%rdx  ;   {metadata({method} {0x00007fb2bd4138c8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fb2c1102a41: and    $0x7ffff8,%esi
  0x00007fb2c1102a47: cmp    $0x0,%esi
  0x00007fb2c1102a4a: je     0x00007fb2c1102d12
  0x00007fb2c1102a50: mov    0x78(%rsp),%rax
  0x00007fb2c1102a55: movabs $0x7fb2bd57fca8,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd4138c8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fb2c1102a5f: addq   $0x1,0x108(%rdx)
  0x00007fb2c1102a67: mov    0x80(%rsp),%edx
  0x00007fb2c1102a6e: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x00007fb2c1102a73: nop
  0x00007fb2c1102a74: nop
  0x00007fb2c1102a75: nop
  0x00007fb2c1102a76: nop
  0x00007fb2c1102a77: callq  0x00007fb2c1046020  ; OopMap{[120]=Oop [136]=Oop off=1820}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007fb2c1102a7c: mov    0x78(%rsp),%rax
  0x00007fb2c1102a81: movabs $0x7fb2bd57af10,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd4b5658} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fb2c1102a8b: mov    0x8(%rax),%eax
  0x00007fb2c1102a8e: shl    $0x3,%rax
  0x00007fb2c1102a92: cmp    0x1d0(%rdx),%rax
  0x00007fb2c1102a99: jne    0x00007fb2c1102aa8
  0x00007fb2c1102a9b: addq   $0x1,0x1d8(%rdx)
  0x00007fb2c1102aa3: jmpq   0x00007fb2c1102b0e
  0x00007fb2c1102aa8: cmp    0x1e0(%rdx),%rax
  0x00007fb2c1102aaf: jne    0x00007fb2c1102abe
  0x00007fb2c1102ab1: addq   $0x1,0x1e8(%rdx)
  0x00007fb2c1102ab9: jmpq   0x00007fb2c1102b0e
  0x00007fb2c1102abe: cmpq   $0x0,0x1d0(%rdx)
  0x00007fb2c1102ac9: jne    0x00007fb2c1102ae2
  0x00007fb2c1102acb: mov    %rax,0x1d0(%rdx)
  0x00007fb2c1102ad2: movq   $0x1,0x1d8(%rdx)
  0x00007fb2c1102add: jmpq   0x00007fb2c1102b0e
  0x00007fb2c1102ae2: cmpq   $0x0,0x1e0(%rdx)
  0x00007fb2c1102aed: jne    0x00007fb2c1102b06
  0x00007fb2c1102aef: mov    %rax,0x1e0(%rdx)
  0x00007fb2c1102af6: movq   $0x1,0x1e8(%rdx)
  0x00007fb2c1102b01: jmpq   0x00007fb2c1102b0e
  0x00007fb2c1102b06: addq   $0x1,0x1c8(%rdx)
  0x00007fb2c1102b0e: movabs $0x7fb2bd580fb0,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd4147b8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fb2c1102b18: mov    0xdc(%rdx),%esi
  0x00007fb2c1102b1e: add    $0x8,%esi
  0x00007fb2c1102b21: mov    %esi,0xdc(%rdx)
  0x00007fb2c1102b27: movabs $0x7fb2bd4147b8,%rdx  ;   {metadata({method} {0x00007fb2bd4147b8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fb2c1102b31: and    $0x7ffff8,%esi
  0x00007fb2c1102b37: cmp    $0x0,%esi
  0x00007fb2c1102b3a: je     0x00007fb2c1102d29
  0x00007fb2c1102b40: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007fb2c1102b4a: mov    0x60(%r15),%rax
  0x00007fb2c1102b4e: lea    0x18(%rax),%rdi
  0x00007fb2c1102b52: cmp    0x70(%r15),%rdi
  0x00007fb2c1102b56: ja     0x00007fb2c1102d40
  0x00007fb2c1102b5c: mov    %rdi,0x60(%r15)
  0x00007fb2c1102b60: mov    0xa8(%rdx),%rcx
  0x00007fb2c1102b67: mov    %rcx,(%rax)
  0x00007fb2c1102b6a: mov    %rdx,%rcx
  0x00007fb2c1102b6d: shr    $0x3,%rcx
  0x00007fb2c1102b71: mov    %ecx,0x8(%rax)
  0x00007fb2c1102b74: xor    %rcx,%rcx
  0x00007fb2c1102b77: mov    %ecx,0xc(%rax)
  0x00007fb2c1102b7a: xor    %rcx,%rcx
  0x00007fb2c1102b7d: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007fb2c1102b81: mov    0x78(%rsp),%rdx
  0x00007fb2c1102b86: mov    0x10(%rdx),%ecx
  0x00007fb2c1102b89: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007fb2c1102b8d: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007fb2c1102b91: mov    %rax,%rdx
  0x00007fb2c1102b94: movabs $0x7fb2bd580fb0,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd4147b8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fb2c1102b9e: addq   $0x1,0x108(%rsi)
  0x00007fb2c1102ba6: mov    %rcx,%rdx
  0x00007fb2c1102ba9: mov    $0x0,%ecx
  0x00007fb2c1102bae: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007fb2c1102bb1: mov    %rax,0x90(%rsp)
  0x00007fb2c1102bb9: nop
  0x00007fb2c1102bba: nop
  0x00007fb2c1102bbb: nop
  0x00007fb2c1102bbc: nop
  0x00007fb2c1102bbd: nop
  0x00007fb2c1102bbe: nop
  0x00007fb2c1102bbf: callq  0x00007fb2c1046020  ; OopMap{[136]=Oop [144]=Oop off=2148}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007fb2c1102bc4: mov    0x88(%rsp),%rax
  0x00007fb2c1102bcc: movabs $0x7fb2bd57af10,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd4b5658} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fb2c1102bd6: addq   $0x1,0x1f8(%rdx)
  0x00007fb2c1102bde: mov    0x90(%rsp),%rdx
  0x00007fb2c1102be6: mov    0x88(%rsp),%rsi    ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x00007fb2c1102bee: nop
  0x00007fb2c1102bef: callq  0x00007fb2c1046020  ; OopMap{[136]=Oop off=2196}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007fb2c1102bf4: mov    0x88(%rsp),%rax
  0x00007fb2c1102bfc: jmpq   0x00007fb2c1102d78
  0x00007fb2c1102c01: mov    %rbx,0x8(%rsp)
  0x00007fb2c1102c06: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c1102c0e: callq  0x00007fb2c10feb20  ; OopMap{r8=Oop off=2227}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x00007fb2c1102c13: jmpq   0x00007fb2c11023a7
  0x00007fb2c1102c18: callq  0x00007fb2c106dc20  ; OopMap{r8=Oop off=2237}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x00007fb2c1102c1d: jmpq   0x00007fb2c1102461
  0x00007fb2c1102c22: callq  0x00007fb2c106ee40  ; OopMap{r8=Oop rax=Oop off=2247}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x00007fb2c1102c27: mov    %rdx,0x8(%rsp)
  0x00007fb2c1102c2c: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c1102c34: callq  0x00007fb2c10feb20  ; OopMap{r8=Oop rax=Oop off=2265}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x00007fb2c1102c39: jmpq   0x00007fb2c11024ac
  0x00007fb2c1102c3e: nop
  0x00007fb2c1102c3f: callq  0x00007fb2c1046420  ; OopMap{[112]=Oop off=2276}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x00007fb2c1102c44: jmpq   0x00007fb2c1102590
  0x00007fb2c1102c49: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb2c1102c53: mov    $0xa050f00,%eax
  0x00007fb2c1102c58: callq  0x00007fb2c10ffe60  ; OopMap{off=2301}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x00007fb2c1102c5d: jmpq   0x00007fb2c11025b0
  0x00007fb2c1102c62: mov    %rdx,%rdx
  0x00007fb2c1102c65: callq  0x00007fb2c106e520  ; OopMap{off=2314}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x00007fb2c1102c6a: jmpq   0x00007fb2c11025f5
  0x00007fb2c1102c6f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb2c1102c79: mov    $0xa050f00,%eax
  0x00007fb2c1102c7e: callq  0x00007fb2c10ffe60  ; OopMap{rax=Oop off=2339}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x00007fb2c1102c83: jmpq   0x00007fb2c11025f8
  0x00007fb2c1102c88: mov    %rdx,%rdx
  0x00007fb2c1102c8b: callq  0x00007fb2c106e520  ; OopMap{[136]=Oop off=2352}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x00007fb2c1102c90: jmpq   0x00007fb2c1102641
  0x00007fb2c1102c95: mov    %rbx,0x8(%rsp)
  0x00007fb2c1102c9a: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c1102ca2: callq  0x00007fb2c10feb20  ; OopMap{[136]=Oop rax=Oop off=2375}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007fb2c1102ca7: jmpq   0x00007fb2c1102688
  0x00007fb2c1102cac: mov    %rbx,0x8(%rsp)
  0x00007fb2c1102cb1: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c1102cb9: callq  0x00007fb2c10feb20  ; OopMap{[136]=Oop rax=Oop off=2398}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007fb2c1102cbe: jmpq   0x00007fb2c11026cf
  0x00007fb2c1102cc3: mov    %rbx,0x8(%rsp)
  0x00007fb2c1102cc8: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c1102cd0: callq  0x00007fb2c10feb20  ; OopMap{[136]=Oop rax=Oop off=2421}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007fb2c1102cd5: jmpq   0x00007fb2c1102716
  0x00007fb2c1102cda: callq  0x00007fb2c106dc20  ; OopMap{[136]=Oop r13=Oop off=2431}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007fb2c1102cdf: jmpq   0x00007fb2c1102795
  0x00007fb2c1102ce4: mov    %rdx,0x8(%rsp)
  0x00007fb2c1102ce9: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c1102cf1: callq  0x00007fb2c10feb20  ; OopMap{[136]=Oop r13=Oop off=2454}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x00007fb2c1102cf6: jmpq   0x00007fb2c1102877
  0x00007fb2c1102cfb: mov    %rdx,0x8(%rsp)
  0x00007fb2c1102d00: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c1102d08: callq  0x00007fb2c10feb20  ; OopMap{[120]=Oop [136]=Oop off=2477}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x00007fb2c1102d0d: jmpq   0x00007fb2c1102960
  0x00007fb2c1102d12: mov    %rdx,0x8(%rsp)
  0x00007fb2c1102d17: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c1102d1f: callq  0x00007fb2c10feb20  ; OopMap{[120]=Oop [136]=Oop off=2500}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x00007fb2c1102d24: jmpq   0x00007fb2c1102a50
  0x00007fb2c1102d29: mov    %rdx,0x8(%rsp)
  0x00007fb2c1102d2e: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c1102d36: callq  0x00007fb2c10feb20  ; OopMap{[120]=Oop [136]=Oop off=2523}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x00007fb2c1102d3b: jmpq   0x00007fb2c1102b40
  0x00007fb2c1102d40: mov    %rdx,%rdx
  0x00007fb2c1102d43: callq  0x00007fb2c106e520  ; OopMap{[120]=Oop [136]=Oop off=2536}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x00007fb2c1102d48: jmpq   0x00007fb2c1102b81
  0x00007fb2c1102d4d: nop
  0x00007fb2c1102d4e: nop
  0x00007fb2c1102d4f: mov    0x2a8(%r15),%rax
  0x00007fb2c1102d56: movabs $0x0,%r10
  0x00007fb2c1102d60: mov    %r10,0x2a8(%r15)
  0x00007fb2c1102d67: movabs $0x0,%r10
  0x00007fb2c1102d71: mov    %r10,0x2b0(%r15)
  0x00007fb2c1102d78: add    $0xa0,%rsp
  0x00007fb2c1102d7f: pop    %rbp
  0x00007fb2c1102d80: jmpq   0x00007fb2c106c3e0  ;   {runtime_call}
  0x00007fb2c1102d85: hlt    
  0x00007fb2c1102d86: hlt    
  0x00007fb2c1102d87: hlt    
  0x00007fb2c1102d88: hlt    
  0x00007fb2c1102d89: hlt    
  0x00007fb2c1102d8a: hlt    
  0x00007fb2c1102d8b: hlt    
  0x00007fb2c1102d8c: hlt    
  0x00007fb2c1102d8d: hlt    
  0x00007fb2c1102d8e: hlt    
  0x00007fb2c1102d8f: hlt    
  0x00007fb2c1102d90: hlt    
  0x00007fb2c1102d91: hlt    
  0x00007fb2c1102d92: hlt    
  0x00007fb2c1102d93: hlt    
  0x00007fb2c1102d94: hlt    
  0x00007fb2c1102d95: hlt    
  0x00007fb2c1102d96: hlt    
  0x00007fb2c1102d97: hlt    
  0x00007fb2c1102d98: hlt    
  0x00007fb2c1102d99: hlt    
  0x00007fb2c1102d9a: hlt    
  0x00007fb2c1102d9b: hlt    
  0x00007fb2c1102d9c: hlt    
  0x00007fb2c1102d9d: hlt    
  0x00007fb2c1102d9e: hlt    
  0x00007fb2c1102d9f: hlt    
[Stub Code]
  0x00007fb2c1102da0: nop                       ;   {no_reloc}
  0x00007fb2c1102da1: nop
  0x00007fb2c1102da2: nop
  0x00007fb2c1102da3: nop
  0x00007fb2c1102da4: nop
  0x00007fb2c1102da5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c1102daf: jmpq   0x00007fb2c1102daf  ;   {runtime_call}
  0x00007fb2c1102db4: nop
  0x00007fb2c1102db5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c1102dbf: jmpq   0x00007fb2c1102dbf  ;   {runtime_call}
  0x00007fb2c1102dc4: nop
  0x00007fb2c1102dc5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c1102dcf: jmpq   0x00007fb2c1102dcf  ;   {runtime_call}
  0x00007fb2c1102dd4: nop
  0x00007fb2c1102dd5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c1102ddf: jmpq   0x00007fb2c1102ddf  ;   {runtime_call}
  0x00007fb2c1102de4: nop
  0x00007fb2c1102de5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c1102def: jmpq   0x00007fb2c1102def  ;   {runtime_call}
  0x00007fb2c1102df4: nop
  0x00007fb2c1102df5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c1102dff: jmpq   0x00007fb2c1102dff  ;   {runtime_call}
[Exception Handler]
  0x00007fb2c1102e04: callq  0x00007fb2c106cfe0  ;   {runtime_call}
  0x00007fb2c1102e09: mov    %rsp,-0x28(%rsp)
  0x00007fb2c1102e0e: sub    $0x80,%rsp
  0x00007fb2c1102e15: mov    %rax,0x78(%rsp)
  0x00007fb2c1102e1a: mov    %rcx,0x70(%rsp)
  0x00007fb2c1102e1f: mov    %rdx,0x68(%rsp)
  0x00007fb2c1102e24: mov    %rbx,0x60(%rsp)
  0x00007fb2c1102e29: mov    %rbp,0x50(%rsp)
  0x00007fb2c1102e2e: mov    %rsi,0x48(%rsp)
  0x00007fb2c1102e33: mov    %rdi,0x40(%rsp)
  0x00007fb2c1102e38: mov    %r8,0x38(%rsp)
  0x00007fb2c1102e3d: mov    %r9,0x30(%rsp)
  0x00007fb2c1102e42: mov    %r10,0x28(%rsp)
  0x00007fb2c1102e47: mov    %r11,0x20(%rsp)
  0x00007fb2c1102e4c: mov    %r12,0x18(%rsp)
  0x00007fb2c1102e51: mov    %r13,0x10(%rsp)
  0x00007fb2c1102e56: mov    %r14,0x8(%rsp)
  0x00007fb2c1102e5b: mov    %r15,(%rsp)
  0x00007fb2c1102e5f: movabs $0x7fb2d6f4df36,%rdi  ;   {external_word}
  0x00007fb2c1102e69: movabs $0x7fb2c1102e09,%rsi  ;   {internal_word}
  0x00007fb2c1102e73: mov    %rsp,%rdx
  0x00007fb2c1102e76: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c1102e7a: callq  0x00007fb2d6c79990  ;   {runtime_call}
  0x00007fb2c1102e7f: hlt    
[Deopt Handler Code]
  0x00007fb2c1102e80: movabs $0x7fb2c1102e80,%r10  ;   {section_word}
  0x00007fb2c1102e8a: push   %r10
  0x00007fb2c1102e8c: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c1102e91: hlt    
  0x00007fb2c1102e92: hlt    
  0x00007fb2c1102e93: hlt    
  0x00007fb2c1102e94: hlt    
  0x00007fb2c1102e95: hlt    
  0x00007fb2c1102e96: hlt    
  0x00007fb2c1102e97: hlt    
<nmethod compile_id='2' compiler='C1' level='3' entry='0x00007fb2c1102360' size='4856' address='0x00007fb2c1102150' relocation_offset='296' insts_offset='528' stub_offset='3152' scopes_data_offset='3472' scopes_pcs_offset='4096' dependencies_offset='4832' nul_chk_table_offset='4840' oops_offset='3400' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='256' iicount='256' stamp='0.072'/>
Decoding compiled method 0x00007fb2c1100fd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fb2bd3a0000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb2c1101140: mov    0x8(%rsi),%r10d
  0x00007fb2c1101144: shl    $0x3,%r10
  0x00007fb2c1101148: cmp    %rax,%r10
  0x00007fb2c110114b: jne    0x00007fb2c1045e20  ;   {runtime_call}
  0x00007fb2c1101151: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c110115c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb2c1101160: mov    %eax,-0x14000(%rsp)
  0x00007fb2c1101167: push   %rbp
  0x00007fb2c1101168: sub    $0x30,%rsp
  0x00007fb2c110116c: movabs $0x7fb2bd563b50,%rax  ;   {metadata(method data for {method} {0x00007fb2bd3a0000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c1101176: mov    0xdc(%rax),%edi
  0x00007fb2c110117c: add    $0x8,%edi
  0x00007fb2c110117f: mov    %edi,0xdc(%rax)
  0x00007fb2c1101185: movabs $0x7fb2bd3a0000,%rax  ;   {metadata({method} {0x00007fb2bd3a0000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110118f: and    $0x1ff8,%edi
  0x00007fb2c1101195: cmp    $0x0,%edi
  0x00007fb2c1101198: je     0x00007fb2c11012d1  ;*aload_0
                                                ; - java.lang.String::hashCode@0 (line 1466)

  0x00007fb2c110119e: mov    0x10(%rsi),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x00007fb2c11011a1: cmp    $0x0,%eax
  0x00007fb2c11011a4: movabs $0x7fb2bd563b50,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd3a0000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c11011ae: movabs $0x108,%rbx
  0x00007fb2c11011b8: jne    0x00007fb2c11011c8
  0x00007fb2c11011be: movabs $0x118,%rbx
  0x00007fb2c11011c8: mov    (%rdi,%rbx,1),%rdx
  0x00007fb2c11011cc: lea    0x1(%rdx),%rdx
  0x00007fb2c11011d0: mov    %rdx,(%rdi,%rbx,1)
  0x00007fb2c11011d4: jne    0x00007fb2c11012c5  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x00007fb2c11011da: mov    0xc(%rsi),%edi
  0x00007fb2c11011dd: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x00007fb2c11011e1: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x00007fb2c11012e8
  0x00007fb2c11011e4: cmp    $0x0,%ebx
  0x00007fb2c11011e7: movabs $0x7fb2bd563b50,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd3a0000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c11011f1: movabs $0x128,%rcx
  0x00007fb2c11011fb: jle    0x00007fb2c110120b
  0x00007fb2c1101201: movabs $0x138,%rcx
  0x00007fb2c110120b: mov    (%rdx,%rcx,1),%r8
  0x00007fb2c110120f: lea    0x1(%r8),%r8
  0x00007fb2c1101213: mov    %r8,(%rdx,%rcx,1)
  0x00007fb2c1101217: jle    0x00007fb2c11012c5  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x00007fb2c110121d: mov    $0x0,%edx
  0x00007fb2c1101222: jmpq   0x00007fb2c110128a  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x00007fb2c1101227: nop
  0x00007fb2c1101228: movslq %edx,%rcx
  0x00007fb2c110122b: movzwl 0x10(%rdi,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x00007fb2c1101230: mov    %rax,%r8
  0x00007fb2c1101233: shl    $0x5,%eax
  0x00007fb2c1101236: sub    %r8d,%eax
  0x00007fb2c1101239: add    %ecx,%eax
  0x00007fb2c110123b: inc    %edx
  0x00007fb2c110123d: movabs $0x7fb2bd563b50,%rcx  ;   {metadata(method data for {method} {0x00007fb2bd3a0000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c1101247: mov    0xe0(%rcx),%r8d
  0x00007fb2c110124e: add    $0x8,%r8d
  0x00007fb2c1101252: mov    %r8d,0xe0(%rcx)
  0x00007fb2c1101259: movabs $0x7fb2bd3a0000,%rcx  ;   {metadata({method} {0x00007fb2bd3a0000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c1101263: and    $0xfff8,%r8d
  0x00007fb2c110126a: cmp    $0x0,%r8d
  0x00007fb2c110126e: je     0x00007fb2c11012ed  ; OopMap{rdi=Oop rsi=Oop off=308}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x00007fb2c1101274: test   %eax,0x16f53e86(%rip)        # 0x00007fb2d8055100
                                                ;   {poll}
  0x00007fb2c110127a: movabs $0x7fb2bd563b50,%rcx  ;   {metadata(method data for {method} {0x00007fb2bd3a0000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c1101284: incl   0x168(%rcx)        ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x00007fb2c110128a: cmp    %ebx,%edx
  0x00007fb2c110128c: movabs $0x7fb2bd563b50,%rcx  ;   {metadata(method data for {method} {0x00007fb2bd3a0000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c1101296: movabs $0x148,%r8
  0x00007fb2c11012a0: jge    0x00007fb2c11012b0
  0x00007fb2c11012a6: movabs $0x158,%r8
  0x00007fb2c11012b0: mov    (%rcx,%r8,1),%r9
  0x00007fb2c11012b4: lea    0x1(%r9),%r9
  0x00007fb2c11012b8: mov    %r9,(%rcx,%r8,1)
  0x00007fb2c11012bc: jl     0x00007fb2c1101228  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x00007fb2c11012c2: mov    %eax,0x10(%rsi)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x00007fb2c11012c5: add    $0x30,%rsp
  0x00007fb2c11012c9: pop    %rbp
  0x00007fb2c11012ca: test   %eax,0x16f53e30(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c11012d0: retq   
  0x00007fb2c11012d1: mov    %rax,0x8(%rsp)
  0x00007fb2c11012d6: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c11012de: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)
                                                ;   {runtime_call}
  0x00007fb2c11012e3: jmpq   0x00007fb2c110119e
  0x00007fb2c11012e8: callq  0x00007fb2c106ee40  ; OopMap{rsi=Oop rdi=Oop off=429}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x00007fb2c11012ed: mov    %rcx,0x8(%rsp)
  0x00007fb2c11012f2: movq   $0x2d,(%rsp)
  0x00007fb2c11012fa: callq  0x00007fb2c10feb20  ; OopMap{rdi=Oop rsi=Oop off=447}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)
                                                ;   {runtime_call}
  0x00007fb2c11012ff: jmpq   0x00007fb2c1101274
  0x00007fb2c1101304: nop
  0x00007fb2c1101305: nop
  0x00007fb2c1101306: mov    0x2a8(%r15),%rax
  0x00007fb2c110130d: movabs $0x0,%r10
  0x00007fb2c1101317: mov    %r10,0x2a8(%r15)
  0x00007fb2c110131e: movabs $0x0,%r10
  0x00007fb2c1101328: mov    %r10,0x2b0(%r15)
  0x00007fb2c110132f: add    $0x30,%rsp
  0x00007fb2c1101333: pop    %rbp
  0x00007fb2c1101334: jmpq   0x00007fb2c106c3e0  ;   {runtime_call}
  0x00007fb2c1101339: hlt    
  0x00007fb2c110133a: hlt    
  0x00007fb2c110133b: hlt    
  0x00007fb2c110133c: hlt    
  0x00007fb2c110133d: hlt    
  0x00007fb2c110133e: hlt    
  0x00007fb2c110133f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb2c1101340: callq  0x00007fb2c106cfe0  ;   {no_reloc}
  0x00007fb2c1101345: mov    %rsp,-0x28(%rsp)
  0x00007fb2c110134a: sub    $0x80,%rsp
  0x00007fb2c1101351: mov    %rax,0x78(%rsp)
  0x00007fb2c1101356: mov    %rcx,0x70(%rsp)
  0x00007fb2c110135b: mov    %rdx,0x68(%rsp)
  0x00007fb2c1101360: mov    %rbx,0x60(%rsp)
  0x00007fb2c1101365: mov    %rbp,0x50(%rsp)
  0x00007fb2c110136a: mov    %rsi,0x48(%rsp)
  0x00007fb2c110136f: mov    %rdi,0x40(%rsp)
  0x00007fb2c1101374: mov    %r8,0x38(%rsp)
  0x00007fb2c1101379: mov    %r9,0x30(%rsp)
  0x00007fb2c110137e: mov    %r10,0x28(%rsp)
  0x00007fb2c1101383: mov    %r11,0x20(%rsp)
  0x00007fb2c1101388: mov    %r12,0x18(%rsp)
  0x00007fb2c110138d: mov    %r13,0x10(%rsp)
  0x00007fb2c1101392: mov    %r14,0x8(%rsp)
  0x00007fb2c1101397: mov    %r15,(%rsp)
  0x00007fb2c110139b: movabs $0x7fb2d6f4df36,%rdi  ;   {external_word}
  0x00007fb2c11013a5: movabs $0x7fb2c1101345,%rsi  ;   {internal_word}
  0x00007fb2c11013af: mov    %rsp,%rdx
  0x00007fb2c11013b2: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c11013b6: callq  0x00007fb2d6c79990  ;   {runtime_call}
  0x00007fb2c11013bb: hlt    
[Deopt Handler Code]
  0x00007fb2c11013bc: movabs $0x7fb2c11013bc,%r10  ;   {section_word}
  0x00007fb2c11013c6: push   %r10
  0x00007fb2c11013c8: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c11013cd: hlt    
  0x00007fb2c11013ce: hlt    
  0x00007fb2c11013cf: hlt    
<nmethod compile_id='4' compiler='C1' level='3' entry='0x00007fb2c1101140' size='1448' address='0x00007fb2c1100fd0' relocation_offset='296' insts_offset='368' stub_offset='880' scopes_data_offset='1032' scopes_pcs_offset='1152' dependencies_offset='1424' nul_chk_table_offset='1432' method='java/lang/String hashCode ()I' bytes='55' count='424' backedge_count='6519' iicount='424' stamp='0.073'/>
<writer thread='140406105003776'/>
<task_queued compile_id='5' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='384' backedge_count='1316' iicount='384' level='3' stamp='0.073' comment='tiered' hot_count='384'/>
[Loaded sun.misc.PostVMInitHook from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicBoolean from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140404518676224'/>
Decoding compiled method 0x00007fb2c11005d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fb2bd39f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi
<writer thread='140406105003776'/>
[Loaded sun.usagetracker.UsageTrackerClient$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140404518676224'/>
:rsi                    = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb2c1100760: mov    0x8(%rsi),%r10d
  0x00007fb2c1100764: shl    $0x3,%r10
  0x00007fb2c1100768: cmp    %rax,%r10
  0x00007fb2c110076b: jne    0x00007fb2c1045e20  ;   {runtime_call}
  0x00007fb2c1100771: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c110077c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb2c1100780: mov    %eax,-0x14000(%rsp)
  0x00007fb2c1100787: push   %rbp
  0x00007fb2c1100788: sub    $0x30,%rsp
  0x00007fb2c110078c: movabs $0x7fb2bd582fa0,%rax  ;   {metadata(method data for {method} {0x00007fb2bd39f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c1100796: mov    0xdc(%rax),%edi
  0x00007fb2c110079c: add    $0x8,%edi
  0x00007fb2c110079f: mov    %edi,0xdc(%rax)
  0x00007fb2c11007a5: movabs $0x7fb2bd39f618,%rax  ;   {metadata({method} {0x00007fb2bd39f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c11007af: and    $0x1ff8,%edi
  0x00007fb2c11007b5: cmp    $0x0,%edi
  0x00007fb2c11007b8: je     0x00007fb2c1100b86  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 977)

  0x00007fb2c11007be: cmp    %rdx,%rsi
  0x00007fb2c11007c1: movabs $0x7fb2bd582fa0,%rax  ;   {metadata(method data for {method} {0x00007fb2bd39f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c11007cb: movabs $0x108,%rdi
  0x00007fb2c11007d5: jne    0x00007fb2c11007e5
  0x00007fb2c11007db: movabs $0x118,%rdi
  0x00007fb2c11007e5: mov    (%rax,%rdi,1),%rbx
  0x00007fb2c11007e9: lea    0x1(%rbx),%rbx
  0x00007fb2c11007ed: mov    %rbx,(%rax,%rdi,1)
  0x00007fb2c11007f1: je     0x00007fb2c1100b75  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x00007fb2c11007f7: cmp    $0x0,%rdx
  0x00007fb2c11007fb: jne    0x00007fb2c1100816
  0x00007fb2c11007fd: movabs $0x7fb2bd582fa0,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd39f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c1100807: orl    $0x100,0x120(%rbx)
  0x00007fb2c1100811: jmpq   0x00007fb2c11008d6
  0x00007fb2c1100816: movabs $0x7c00016d0,%rcx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007fb2c1100820: mov    0x8(%rdx),%edi
  0x00007fb2c1100823: shl    $0x3,%rdi
  0x00007fb2c1100827: cmp    %rdi,%rcx
  0x00007fb2c110082a: jne    0x00007fb2c11008ba
  0x00007fb2c1100830: movabs $0x7fb2bd582fa0,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd39f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110083a: mov    0x8(%rdx),%ecx
  0x00007fb2c110083d: shl    $0x3,%rcx
  0x00007fb2c1100841: cmp    0x130(%rbx),%rcx
  0x00007fb2c1100848: jne    0x00007fb2c1100857
  0x00007fb2c110084a: addq   $0x1,0x138(%rbx)
  0x00007fb2c1100852: jmpq   0x00007fb2c11008db
  0x00007fb2c1100857: cmp    0x140(%rbx),%rcx
  0x00007fb2c110085e: jne    0x00007fb2c110086d
  0x00007fb2c1100860: addq   $0x1,0x148(%rbx)
  0x00007fb2c1100868: jmpq   0x00007fb2c11008db
  0x00007fb2c110086d: cmpq   $0x0,0x130(%rbx)
  0x00007fb2c1100878: jne    0x00007fb2c1100891
  0x00007fb2c110087a: mov    %rcx,0x130(%rbx)
  0x00007fb2c1100881: movq   $0x1,0x138(%rbx)
  0x00007fb2c110088c: jmpq   0x00007fb2c11008db
  0x00007fb2c1100891: cmpq   $0x0,0x140(%rbx)
  0x00007fb2c110089c: jne    0x00007fb2c11008b5
  0x00007fb2c110089e: mov    %rcx,0x140(%rbx)
  0x00007fb2c11008a5: movq   $0x1,0x148(%rbx)
  0x00007fb2c11008b0: jmpq   0x00007fb2c11008db
  0x00007fb2c11008b5: jmpq   0x00007fb2c11008db
  0x00007fb2c11008ba: movabs $0x7fb2bd582fa0,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd39f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c11008c4: subq   $0x1,0x128(%rbx)
  0x00007fb2c11008cc: jmpq   0x00007fb2c11008d6
  0x00007fb2c11008d1: jmpq   0x00007fb2c11008db
  0x00007fb2c11008d6: xor    %rax,%rax
  0x00007fb2c11008d9: jmp    0x00007fb2c11008e5
  0x00007fb2c11008db: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x00007fb2c11008e5: cmp    $0x0,%eax
  0x00007fb2c11008e8: movabs $0x7fb2bd582fa0,%rax  ;   {metadata(method data for {method} {0x00007fb2bd39f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c11008f2: movabs $0x158,%rdi
  0x00007fb2c11008fc: je     0x00007fb2c110090c
  0x00007fb2c1100902: movabs $0x168,%rdi
  0x00007fb2c110090c: mov    (%rax,%rdi,1),%rbx
  0x00007fb2c1100910: lea    0x1(%rbx),%rbx
  0x00007fb2c1100914: mov    %rbx,(%rax,%rdi,1)
  0x00007fb2c1100918: je     0x00007fb2c1100b64  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 980)

  0x00007fb2c110091e: cmp    $0x0,%rdx
  0x00007fb2c1100922: jne    0x00007fb2c110093d
  0x00007fb2c1100924: movabs $0x7fb2bd582fa0,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd39f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110092e: orl    $0x100,0x170(%rbx)
  0x00007fb2c1100938: jmpq   0x00007fb2c11009fd
  0x00007fb2c110093d: movabs $0x7c00016d0,%rax  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007fb2c1100947: mov    0x8(%rdx),%edi
  0x00007fb2c110094a: shl    $0x3,%rdi
  0x00007fb2c110094e: cmp    %rdi,%rax
  0x00007fb2c1100951: jne    0x00007fb2c11009e1
  0x00007fb2c1100957: movabs $0x7fb2bd582fa0,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd39f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c1100961: mov    0x8(%rdx),%eax
  0x00007fb2c1100964: shl    $0x3,%rax
  0x00007fb2c1100968: cmp    0x180(%rbx),%rax
  0x00007fb2c110096f: jne    0x00007fb2c110097e
  0x00007fb2c1100971: addq   $0x1,0x188(%rbx)
  0x00007fb2c1100979: jmpq   0x00007fb2c11009fd
  0x00007fb2c110097e: cmp    0x190(%rbx),%rax
  0x00007fb2c1100985: jne    0x00007fb2c1100994
  0x00007fb2c1100987: addq   $0x1,0x198(%rbx)
  0x00007fb2c110098f: jmpq   0x00007fb2c11009fd
  0x00007fb2c1100994: cmpq   $0x0,0x180(%rbx)
  0x00007fb2c110099f: jne    0x00007fb2c11009b8
  0x00007fb2c11009a1: mov    %rax,0x180(%rbx)
  0x00007fb2c11009a8: movq   $0x1,0x188(%rbx)
  0x00007fb2c11009b3: jmpq   0x00007fb2c11009fd
  0x00007fb2c11009b8: cmpq   $0x0,0x190(%rbx)
  0x00007fb2c11009c3: jne    0x00007fb2c11009dc
  0x00007fb2c11009c5: mov    %rax,0x190(%rbx)
  0x00007fb2c11009cc: movq   $0x1,0x198(%rbx)
  0x00007fb2c11009d7: jmpq   0x00007fb2c11009fd
  0x00007fb2c11009dc: jmpq   0x00007fb2c11009fd
  0x00007fb2c11009e1: movabs $0x7fb2bd582fa0,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd39f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c11009eb: subq   $0x1,0x178(%rbx)
  0x00007fb2c11009f3: jmpq   0x00007fb2c1100b9d
  0x00007fb2c11009f8: jmpq   0x00007fb2c11009fd
  0x00007fb2c11009fd: mov    %rdx,%rax          ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)

  0x00007fb2c1100a00: mov    0xc(%rsi),%esi
  0x00007fb2c1100a03: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x00007fb2c1100a07: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x00007fb2c1100ba6
  0x00007fb2c1100a0a: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x00007fb2c1100bab
  0x00007fb2c1100a0d: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x00007fb2c1100a11: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x00007fb2c1100bb0
  0x00007fb2c1100a14: cmp    %ebx,%edi
  0x00007fb2c1100a16: movabs $0x7fb2bd582fa0,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd39f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c1100a20: movabs $0x1a8,%rdx
  0x00007fb2c1100a2a: jne    0x00007fb2c1100a3a
  0x00007fb2c1100a30: movabs $0x1b8,%rdx
  0x00007fb2c1100a3a: mov    (%rbx,%rdx,1),%rcx
  0x00007fb2c1100a3e: lea    0x1(%rcx),%rcx
  0x00007fb2c1100a42: mov    %rcx,(%rbx,%rdx,1)
  0x00007fb2c1100a46: jne    0x00007fb2c1100b64  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x00007fb2c1100a4c: mov    $0x0,%ebx
  0x00007fb2c1100a51: jmpq   0x00007fb2c1100aff  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 987)

  0x00007fb2c1100a56: xchg   %ax,%ax
  0x00007fb2c1100a58: movslq %ebx,%rdi
  0x00007fb2c1100a5b: cmp    0xc(%rsi),%ebx
  0x00007fb2c1100a5e: jae    0x00007fb2c1100bb5
  0x00007fb2c1100a64: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00007fb2c1100a69: movslq %ebx,%rcx
  0x00007fb2c1100a6c: cmp    0xc(%rax),%ebx
  0x00007fb2c1100a6f: jae    0x00007fb2c1100bbe
  0x00007fb2c1100a75: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00007fb2c1100a7a: cmp    %ecx,%edi
  0x00007fb2c1100a7c: movabs $0x7fb2bd582fa0,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd39f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c1100a86: movabs $0x1e8,%rcx
  0x00007fb2c1100a90: je     0x00007fb2c1100aa0
  0x00007fb2c1100a96: movabs $0x1f8,%rcx
  0x00007fb2c1100aa0: mov    (%rdi,%rcx,1),%r8
  0x00007fb2c1100aa4: lea    0x1(%r8),%r8
  0x00007fb2c1100aa8: mov    %r8,(%rdi,%rcx,1)
  0x00007fb2c1100aac: jne    0x00007fb2c1100b42  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00007fb2c1100ab2: inc    %ebx
  0x00007fb2c1100ab4: movabs $0x7fb2bd582fa0,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd39f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c1100abe: mov    0xe0(%rdi),%ecx
  0x00007fb2c1100ac4: add    $0x8,%ecx
  0x00007fb2c1100ac7: mov    %ecx,0xe0(%rdi)
  0x00007fb2c1100acd: movabs $0x7fb2bd39f618,%rdi  ;   {metadata({method} {0x00007fb2bd39f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c1100ad7: and    $0xfff8,%ecx
  0x00007fb2c1100add: cmp    $0x0,%ecx
  0x00007fb2c1100ae0: je     0x00007fb2c1100bc7  ; OopMap{rax=Oop rsi=Oop off=902}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x00007fb2c1100ae6: test   %eax,0x16f54614(%rip)        # 0x00007fb2d8055100
                                                ;   {poll}
  0x00007fb2c1100aec: movabs $0x7fb2bd582fa0,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd39f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c1100af6: incl   0x208(%rdi)
  0x00007fb2c1100afc: mov    %rdx,%rdi          ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x00007fb2c1100aff: mov    %rdi,%rdx
  0x00007fb2c1100b02: dec    %edx
  0x00007fb2c1100b04: cmp    $0x0,%edi
  0x00007fb2c1100b07: movabs $0x7fb2bd582fa0,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd39f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c1100b11: movabs $0x1c8,%rcx
  0x00007fb2c1100b1b: je     0x00007fb2c1100b2b
  0x00007fb2c1100b21: movabs $0x1d8,%rcx
  0x00007fb2c1100b2b: mov    (%rdi,%rcx,1),%r8
  0x00007fb2c1100b2f: lea    0x1(%r8),%r8
  0x00007fb2c1100b33: mov    %r8,(%rdi,%rcx,1)
  0x00007fb2c1100b37: je     0x00007fb2c1100b53
  0x00007fb2c1100b3d: jmpq   0x00007fb2c1100a58  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x00007fb2c1100b42: mov    $0x0,%eax
  0x00007fb2c1100b47: add    $0x30,%rsp
  0x00007fb2c1100b4b: pop    %rbp
  0x00007fb2c1100b4c: test   %eax,0x16f545ae(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c1100b52: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 989)

  0x00007fb2c1100b53: mov    $0x1,%eax
  0x00007fb2c1100b58: add    $0x30,%rsp
  0x00007fb2c1100b5c: pop    %rbp
  0x00007fb2c1100b5d: test   %eax,0x16f5459d(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c1100b63: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 992)

  0x00007fb2c1100b64: mov    $0x0,%eax
  0x00007fb2c1100b69: add    $0x30,%rsp
  0x00007fb2c1100b6d: pop    %rbp
  0x00007fb2c1100b6e: test   %eax,0x16f5458c(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c1100b74: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 995)

  0x00007fb2c1100b75: mov    $0x1,%eax
  0x00007fb2c1100b7a: add    $0x30,%rsp
  0x00007fb2c1100b7e: pop    %rbp
  0x00007fb2c1100b7f: test   %eax,0x16f5457b(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c1100b85: retq   
  0x00007fb2c1100b86: mov    %rax,0x8(%rsp)
  0x00007fb2c1100b8b: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c1100b93: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop rdx=Oop off=1080}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x00007fb2c1100b98: jmpq   0x00007fb2c11007be
  0x00007fb2c1100b9d: mov    %rdx,(%rsp)
  0x00007fb2c1100ba1: callq  0x00007fb2c106cb80  ; OopMap{rsi=Oop off=1094}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x00007fb2c1100ba6: callq  0x00007fb2c106ee40  ; OopMap{rax=Oop rsi=Oop off=1099}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x00007fb2c1100bab: callq  0x00007fb2c106ee40  ; OopMap{rsi=Oop off=1104}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x00007fb2c1100bb0: callq  0x00007fb2c106ee40  ; OopMap{rsi=Oop rax=Oop off=1109}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x00007fb2c1100bb5: mov    %rbx,(%rsp)
  0x00007fb2c1100bb9: callq  0x00007fb2c106be00  ; OopMap{rax=Oop rsi=Oop off=1118}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x00007fb2c1100bbe: mov    %rbx,(%rsp)
  0x00007fb2c1100bc2: callq  0x00007fb2c106be00  ; OopMap{rax=Oop rsi=Oop off=1127}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x00007fb2c1100bc7: mov    %rdi,0x8(%rsp)
  0x00007fb2c1100bcc: movq   $0x4a,(%rsp)
  0x00007fb2c1100bd4: callq  0x00007fb2c10feb20  ; OopMap{rax=Oop rsi=Oop off=1145}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x00007fb2c1100bd9: jmpq   0x00007fb2c1100ae6
  0x00007fb2c1100bde: nop
  0x00007fb2c1100bdf: nop
  0x00007fb2c1100be0: mov    0x2a8(%r15),%rax
  0x00007fb2c1100be7: movabs $0x0,%r10
  0x00007fb2c1100bf1: mov    %r10,0x2a8(%r15)
  0x00007fb2c1100bf8: movabs $0x0,%r10
  0x00007fb2c1100c02: mov    %r10,0x2b0(%r15)
  0x00007fb2c1100c09: add    $0x30,%rsp
  0x00007fb2c1100c0d: pop    %rbp
  0x00007fb2c1100c0e: jmpq   0x00007fb2c106c3e0  ;   {runtime_call}
  0x00007fb2c1100c13: hlt    
  0x00007fb2c1100c14: hlt    
  0x00007fb2c1100c15: hlt    
  0x00007fb2c1100c16: hlt    
  0x00007fb2c1100c17: hlt    
  0x00007fb2c1100c18: hlt    
  0x00007fb2c1100c19: hlt    
  0x00007fb2c1100c1a: hlt    
  0x00007fb2c1100c1b: hlt    
  0x00007fb2c1100c1c: hlt    
  0x00007fb2c1100c1d: hlt    
  0x00007fb2c1100c1e: hlt    
  0x00007fb2c1100c1f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb2c1100c20: callq  0x00007fb2c106cfe0  ;   {no_reloc}
  0x00007fb2c1100c25: mov    %rsp,-0x28(%rsp)
  0x00007fb2c1100c2a: sub    $0x80,%rsp
  0x00007fb2c1100c31: mov    %rax,0x78(%rsp)
  0x00007fb2c1100c36: mov    %rcx,0x70(%rsp)
  0x00007fb2c1100c3b: mov    %rdx,0x68(%rsp)
  0x00007fb2c1100c40: mov    %rbx,0x60(%rsp)
  0x00007fb2c1100c45: mov    %rbp,0x50(%rsp)
  0x00007fb2c1100c4a: mov    %rsi,0x48(%rsp)
  0x00007fb2c1100c4f: mov    %rdi,0x40(%rsp)
  0x00007fb2c1100c54: mov    %r8,0x38(%rsp)
  0x00007fb2c1100c59: mov    %r9,0x30(%rsp)
  0x00007fb2c1100c5e: mov    %r10,0x28(%rsp)
  0x00007fb2c1100c63: mov    %r11,0x20(%rsp)
  0x00007fb2c1100c68: mov    %r12,0x18(%rsp)
  0x00007fb2c1100c6d: mov    %r13,0x10(%rsp)
  0x00007fb2c1100c72: mov    %r14,0x8(%rsp)
  0x00007fb2c1100c77: mov    %r15,(%rsp)
  0x00007fb2c1100c7b: movabs $0x7fb2d6f4df36,%rdi  ;   {external_word}
  0x00007fb2c1100c85: movabs $0x7fb2c1100c25,%rsi  ;   {internal_word}
  0x00007fb2c1100c8f: mov    %rsp,%rdx
  0x00007fb2c1100c92: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c1100c96: callq  0x00007fb2d6c79990  ;   {runtime_call}
  0x00007fb2c1100c9b: hlt    
[Deopt Handler Code]
  0x00007fb2c1100c9c: movabs $0x7fb2c1100c9c,%r10  ;   {section_word}
  0x00007fb2c1100ca6: push   %r10
  0x00007fb2c1100ca8: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c1100cad: hlt    
  0x00007fb2c1100cae: hlt    
  0x00007fb2c1100caf: hlt    
<nmethod compile_id='5' compiler='C1' level='3' entry='0x00007fb2c1100760' size='2504' address='0x00007fb2c11005d0' relocation_offset='296' insts_offset='400' stub_offset='1616' scopes_data_offset='1768' scopes_pcs_offset='1984' dependencies_offset='2464' nul_chk_table_offset='2472' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='387' backedge_count='1356' iicount='387' stamp='0.076'/>
<writer thread='140406105003776'/>
[Loaded sun.usagetracker.UsageTrackerClient$4 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient$3 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<task_queued compile_id='6' method='java/lang/String charAt (I)C' bytes='29' count='2304' iicount='2304' level='3' stamp='0.076' comment='tiered' hot_count='2304'/>
<writer thread='140404518676224'/>
Decoding compiled method 0x00007fb2c1104a90:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fb2bd39edb0} &apos;char
<writer thread='140406105003776'/>
[Loaded java.io.FileOutputStream$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140404518676224'/>
At&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fb2c1104c00: mov    0x8(%rsi),%r10d
  0x00007fb2c1104c04: shl    $0x3,%r10
  0x00007fb2c1104c08: cmp    %rax,%r10
  0x00007fb2c1104c0b: jne    0x00007fb2c1045e20  ;   {runtime_call}
  0x00007fb2c1104c11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c1104c1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb2c1104c20: mov    %eax,-0x14000(%rsp)
  0x00007fb2c1104c27: push   %rbp
  0x00007fb2c1104c28: sub    $0x30,%rsp
  0x00007fb2c1104c2c: mov    %rdx,%rdi
  0x00007fb2c1104c2f: movabs $0x7fb2bd52e720,%rax  ;   {metadata(method data for {method} {0x00007fb2bd39edb0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c1104c39: mov    0xdc(%rax),%edx
  0x00007fb2c1104c3f: add    $0x8,%edx
  0x00007fb2c1104c42: mov    %edx,0xdc(%rax)
  0x00007fb2c1104c48: movabs $0x7fb2bd39edb0,%rax  ;   {metadata({method} {0x00007fb2bd39edb0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c1104c52: and    $0x1ff8,%edx
  0x00007fb2c1104c58: cmp    $0x0,%edx
  0x00007fb2c1104c5b: je     0x00007fb2c1104d36  ;*iload_1
                                                ; - java.lang.String::charAt@0 (line 657)

  0x00007fb2c1104c61: cmp    $0x0,%edi
  0x00007fb2c1104c64: movabs $0x7fb2bd52e720,%rax  ;   {metadata(method data for {method} {0x00007fb2bd39edb0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c1104c6e: movabs $0x108,%rdx
  0x00007fb2c1104c78: jl     0x00007fb2c1104c88
  0x00007fb2c1104c7e: movabs $0x118,%rdx
  0x00007fb2c1104c88: mov    (%rax,%rdx,1),%rbx
  0x00007fb2c1104c8c: lea    0x1(%rbx),%rbx
  0x00007fb2c1104c90: mov    %rbx,(%rax,%rdx,1)
  0x00007fb2c1104c94: jl     0x00007fb2c1104cf6  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x00007fb2c1104c9a: mov    0xc(%rsi),%eax
  0x00007fb2c1104c9d: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x00007fb2c1104ca1: mov    0xc(%rax),%edx     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x00007fb2c1104d4d
  0x00007fb2c1104ca4: cmp    %edx,%edi
  0x00007fb2c1104ca6: movabs $0x7fb2bd52e720,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd39edb0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c1104cb0: movabs $0x128,%rsi
  0x00007fb2c1104cba: jl     0x00007fb2c1104cca
  0x00007fb2c1104cc0: movabs $0x138,%rsi
  0x00007fb2c1104cca: mov    (%rdx,%rsi,1),%rbx
  0x00007fb2c1104cce: lea    0x1(%rbx),%rbx
  0x00007fb2c1104cd2: mov    %rbx,(%rdx,%rsi,1)
  0x00007fb2c1104cd6: jge    0x00007fb2c1104cf6  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x00007fb2c1104cdc: movslq %edi,%rdi
  0x00007fb2c1104cdf: movzwl 0x10(%rax,%rdi,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x00007fb2c1104ce4: and    $0xffff,%eax
  0x00007fb2c1104cea: add    $0x30,%rsp
  0x00007fb2c1104cee: pop    %rbp
  0x00007fb2c1104cef: test   %eax,0x16f5040b(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c1104cf5: retq                      ;*ireturn
                                                ; - java.lang.String::charAt@28 (line 660)

  0x00007fb2c1104cf6: xchg   %ax,%ax
  0x00007fb2c1104cf8: jmpq   0x00007fb2c1104d61  ;   {no_reloc}
  0x00007fb2c1104cfd: add    %al,(%rax)
  0x00007fb2c1104cff: add    %al,(%rax)
  0x00007fb2c1104d01: add    %ch,%cl
  0x00007fb2c1104d03: add    %al,%fs:(%rax)
  0x00007fb2c1104d06: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)

  0x00007fb2c1104d09: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00007fb2bd39edb0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c1104d0c: and    %ah,%bh
  0x00007fb2c1104d0e: push   %rdx
  0x00007fb2c1104d0f: mov    $0x7fb2,%ebp
  0x00007fb2c1104d14: addq   $0x1,0x148(%rsi)
  0x00007fb2c1104d1c: mov    %rdi,%rdx
  0x00007fb2c1104d1f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)

  0x00007fb2c1104d22: mov    %rax,0x20(%rsp)
  0x00007fb2c1104d27: callq  0x00007fb2c1046020  ; OopMap{[32]=Oop off=300}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ;   {optimized virtual_call}
  0x00007fb2c1104d2c: mov    0x20(%rsp),%rax
  0x00007fb2c1104d31: jmpq   0x00007fb2c1104da0
  0x00007fb2c1104d36: mov    %rax,0x8(%rsp)
  0x00007fb2c1104d3b: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c1104d43: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop off=328}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ;   {runtime_call}
  0x00007fb2c1104d48: jmpq   0x00007fb2c1104c61
  0x00007fb2c1104d4d: callq  0x00007fb2c106ee40  ; OopMap{rax=Oop off=338}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x00007fb2c1104d52: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb2c1104d5c: mov    $0xa050f00,%eax
  0x00007fb2c1104d61: callq  0x00007fb2c10ffe60  ; OopMap{off=358}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x00007fb2c1104d66: jmp    0x00007fb2c1104cf8
  0x00007fb2c1104d68: nop
  0x00007fb2c1104d69: nop
  0x00007fb2c1104d6a: nop
  0x00007fb2c1104d6b: mov    %rdx,%rdx
  0x00007fb2c1104d6e: callq  0x00007fb2c106e920  ; OopMap{off=371}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x00007fb2c1104d73: jmp    0x00007fb2c1104d07
  0x00007fb2c1104d75: nop
  0x00007fb2c1104d76: nop
  0x00007fb2c1104d77: mov    0x2a8(%r15),%rax
  0x00007fb2c1104d7e: movabs $0x0,%r10
  0x00007fb2c1104d88: mov    %r10,0x2a8(%r15)
  0x00007fb2c1104d8f: movabs $0x0,%r10
  0x00007fb2c1104d99: mov    %r10,0x2b0(%r15)
  0x00007fb2c1104da0: add    $0x30,%rsp
  0x00007fb2c1104da4: pop    %rbp
  0x00007fb2c1104da5: jmpq   0x00007fb2c106c3e0  ;   {runtime_call}
  0x00007fb2c1104daa: hlt    
  0x00007fb2c1104dab: hlt    
  0x00007fb2c1104dac: hlt    
  0x00007fb2c1104dad: hlt    
  0x00007fb2c1104dae: hlt    
  0x00007fb2c1104daf: hlt    
  0x00007fb2c1104db0: hlt    
  0x00007fb2c1104db1: hlt    
  0x00007fb2c1104db2: hlt    
  0x00007fb2c1104db3: hlt    
  0x00007fb2c1104db4: hlt    
  0x00007fb2c1104db5: hlt    
  0x00007fb2c1104db6: hlt    
  0x00007fb2c1104db7: hlt    
  0x00007fb2c1104db8: hlt    
  0x00007fb2c1104db9: hlt    
  0x00007fb2c1104dba: hlt    
  0x00007fb2c1104dbb: hlt    
  0x00007fb2c1104dbc: hlt    
  0x00007fb2c1104dbd: hlt    
  0x00007fb2c1104dbe: hlt    
  0x00007fb2c1104dbf: hlt    
[Stub Code]
  0x00007fb2c1104dc0: nop                       ;   {no_reloc}
  0x00007fb2c1104dc1: nop
  0x00007fb2c1104dc2: nop
  0x00007fb2c1104dc3: nop
  0x00007fb2c1104dc4: nop
  0x00007fb2c1104dc5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c1104dcf: jmpq   0x00007fb2c1104dcf  ;   {runtime_call}
[Exception Handler]
  0x00007fb2c1104dd4: callq  0x00007fb2c106cfe0  ;   {runtime_call}
  0x00007fb2c1104dd9: mov    %rsp,-0x28(%rsp)
  0x00007fb2c1104dde: sub    $0x80,%rsp
  0x00007fb2c1104de5: mov    %rax,0x78(%rsp)
  0x00007fb2c1104dea: mov    %rcx,0x70(%rsp)
  0x00007fb2c1104def: mov    %rdx,0x68(%rsp)
  0x00007fb2c1104df4: mov    %rbx,0x60(%rsp)
  0x00007fb2c1104df9: mov    %rbp,0x50(%rsp)
  0x00007fb2c1104dfe: mov    %rsi,0x48(%rsp)
  0x00007fb2c1104e03: mov    %rdi,0x40(%rsp)
  0x00007fb2c1104e08: mov    %r8,0x38(%rsp)
  0x00007fb2c1104e0d: mov    %r9,0x30(%rsp)
  0x00007fb2c1104e12: mov    %r10,0x28(%rsp)
  0x00007fb2c1104e17: mov    %r11,0x20(%rsp)
  0x00007fb2c1104e1c: mov    %r12,0x18(%rsp)
  0x00007fb2c1104e21: mov    %r13,0x10(%rsp)
  0x00007fb2c1104e26: mov    %r14,0x8(%rsp)
  0x00007fb2c1104e2b: mov    %r15,(%rsp)
  0x00007fb2c1104e2f: movabs $0x7fb2d6f4df36,%rdi  ;   {external_word}
  0x00007fb2c1104e39: movabs $0x7fb2c1104dd9,%rsi  ;   {internal_word}
  0x00007fb2c1104e43: mov    %rsp,%rdx
  0x00007fb2c1104e46: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c1104e4a: callq  0x00007fb2d6c79990  ;   {runtime_call}
  0x00007fb2c1104e4f: hlt    
[Deopt Handler Code]
  0x00007fb2c1104e50: movabs $0x7fb2c1104e50,%r10  ;   {section_word}
  0x00007fb2c1104e5a: push   %r10
  0x00007fb2c1104e5c: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c1104e61: hlt    
  0x00007fb2c1104e62: hlt    
  0x00007fb2c1104e63: hlt    
  0x00007fb2c1104e64: hlt    
  0x00007fb2c1104e65: hlt    
  0x00007fb2c1104e66: hlt    
  0x00007fb2c1104e67: hlt    
<nmethod compile_id='6' compiler='C1' level='3' entry='0x00007fb2c1104c00' size='1376' address='0x00007fb2c1104a90' relocation_offset='296' insts_offset='368' stub_offset='816' scopes_data_offset='992' scopes_pcs_offset='1096' dependencies_offset='1352' nul_chk_table_offset='1360' method='java/lang/String charAt (I)C' bytes='29' count='2566' iicount='2566' stamp='0.078'/>
<writer thread='140406105003776'/>
[Loaded sun.launcher.LauncherHelper from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
Decoding compiled method 0x00007fb2c11042d0:
Code:
[Entry Point]
  # {method} {0x00007fb2bd3b4930} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x00007fb2c1104440: mov    0x8(%rsi),%r10d
  0x00007fb2c1104444: shl    $0x3,%r10
  0x00007fb2c1104448: cmp    %r10,%rax
  0x00007fb2c110444b: je     0x00007fb2c1104458
  0x00007fb2c1104451: jmpq   0x00007fb2c1045e20  ;   {runtime_call}
  0x00007fb2c1104456: xchg   %ax,%ax
[Verified Entry Point]
  0x00007fb2c1104458: mov    %eax,-0x14000(%rsp)
  0x00007fb2c110445f: push   %rbp
  0x00007fb2c1104460: mov    %rsp,%rbp
  0x00007fb2c1104463: sub    $0x50,%rsp
  0x00007fb2c1104467: mov    %r9,(%rsp)
  0x00007fb2c110446b: mov    %r8,%r9
  0x00007fb2c110446e: mov    %rcx,0x18(%rsp)
  0x00007fb2c1104473: cmp    $0x0,%rcx
  0x00007fb2c1104477: lea    0x18(%rsp),%r8
  0x00007fb2c110447c: cmove  0x18(%rsp),%r8
  0x00007fb2c1104482: mov    %rdx,%rcx
  0x00007fb2c1104485: mov    %rsi,0x8(%rsp)
  0x00007fb2c110448a: cmp    $0x0,%rsi
  0x00007fb2c110448e: lea    0x8(%rsp),%rdx
  0x00007fb2c1104493: cmove  0x8(%rsp),%rdx
  0x00007fb2c1104499: movabs $0x670b80c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007fb2c11044a3: mov    %r14,0x38(%rsp)
  0x00007fb2c11044a8: lea    0x38(%rsp),%r14
  0x00007fb2c11044ad: mov    %r14,%rsi          ; OopMap{[24]=Oop [8]=Oop [56]=Oop off=112}
  0x00007fb2c11044b0: movabs $0x7fb2c11044b0,%r10  ;   {section_word}
  0x00007fb2c11044ba: mov    %r10,0x1e0(%r15)
  0x00007fb2c11044c1: mov    %rsp,0x1d8(%r15)
  0x00007fb2c11044c8: cmpb   $0x0,0x162f4cd3(%rip)        # 0x00007fb2d73f91a2
                                                ;   {external_word}
  0x00007fb2c11044cf: je     0x00007fb2c1104513
  0x00007fb2c11044d5: push   %rsi
  0x00007fb2c11044d6: push   %rdx
  0x00007fb2c11044d7: push   %rcx
  0x00007fb2c11044d8: push   %r8
  0x00007fb2c11044da: push   %r9
  0x00007fb2c11044dc: movabs $0x7fb2bd3b4930,%rsi  ;   {metadata({method} {0x00007fb2bd3b4930} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00007fb2c11044e6: mov    %r15,%rdi
  0x00007fb2c11044e9: test   $0xf,%esp
  0x00007fb2c11044ef: je     0x00007fb2c1104507
  0x00007fb2c11044f5: sub    $0x8,%rsp
  0x00007fb2c11044f9: callq  0x00007fb2d6e04390  ;   {runtime_call}
  0x00007fb2c11044fe: add    $0x8,%rsp
  0x00007fb2c1104502: jmpq   0x00007fb2c110450c
  0x00007fb2c1104507: callq  0x00007fb2d6e04390  ;   {runtime_call}
  0x00007fb2c110450c: pop    %r9
  0x00007fb2c110450e: pop    %r8
  0x00007fb2c1104510: pop    %rcx
  0x00007fb2c1104511: pop    %rdx
  0x00007fb2c1104512: pop    %rsi
  0x00007fb2c1104513: lea    0x1f8(%r15),%rdi
  0x00007fb2c110451a: movl   $0x4,0x270(%r15)
  0x00007fb2c1104525: callq  0x00007fb2d6b65080  ;   {runtime_call}
  0x00007fb2c110452a: vzeroupper 
  0x00007fb2c110452d: movl   $0x5,0x270(%r15)
  0x00007fb2c1104538: mov    %r15d,%ecx
  0x00007fb2c110453b: shr    $0x4,%ecx
  0x00007fb2c110453e: and    $0xffc,%ecx
  0x00007fb2c1104544: movabs $0x7fb2d8054000,%r10  ;   {external_word}
  0x00007fb2c110454e: mov    %ecx,(%r10,%rcx,1)
  0x00007fb2c1104552: cmpl   $0x0,0x163045c4(%rip)        # 0x00007fb2d7408b20
                                                ;   {external_word}
  0x00007fb2c110455c: jne    0x00007fb2c1104570
  0x00007fb2c1104562: cmpl   $0x0,0x30(%r15)
  0x00007fb2c110456a: je     0x00007fb2c1104589
  0x00007fb2c1104570: mov    %r15,%rdi
  0x00007fb2c1104573: mov    %rsp,%r12
  0x00007fb2c1104576: sub    $0x0,%rsp
  0x00007fb2c110457a: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c110457e: callq  0x00007fb2d6eb4960  ;   {runtime_call}
  0x00007fb2c1104583: mov    %r12,%rsp
  0x00007fb2c1104586: xor    %r12,%r12
  0x00007fb2c1104589: movl   $0x8,0x270(%r15)
  0x00007fb2c1104594: cmpl   $0x1,0x29c(%r15)
  0x00007fb2c110459f: je     0x00007fb2c1104627
  0x00007fb2c11045a5: cmpb   $0x0,0x162f4bf6(%rip)        # 0x00007fb2d73f91a2
                                                ;   {external_word}
  0x00007fb2c11045ac: je     0x00007fb2c11045e2
  0x00007fb2c11045b2: movabs $0x7fb2bd3b4930,%rsi  ;   {metadata({method} {0x00007fb2bd3b4930} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00007fb2c11045bc: mov    %r15,%rdi
  0x00007fb2c11045bf: test   $0xf,%esp
  0x00007fb2c11045c5: je     0x00007fb2c11045dd
  0x00007fb2c11045cb: sub    $0x8,%rsp
  0x00007fb2c11045cf: callq  0x00007fb2d6e04380  ;   {runtime_call}
  0x00007fb2c11045d4: add    $0x8,%rsp
  0x00007fb2c11045d8: jmpq   0x00007fb2c11045e2
  0x00007fb2c11045dd: callq  0x00007fb2d6e04380  ;   {runtime_call}
  0x00007fb2c11045e2: movabs $0x0,%r10
  0x00007fb2c11045ec: mov    %r10,0x1d8(%r15)
  0x00007fb2c11045f3: movabs $0x0,%r10
  0x00007fb2c11045fd: mov    %r10,0x1e0(%r15)
  0x00007fb2c1104604: mov    0x38(%r15),%rcx
  0x00007fb2c1104608: movl   $0x0,0x100(%rcx)
  0x00007fb2c1104612: leaveq 
  0x00007fb2c1104613: cmpq   $0x0,0x8(%r15)
  0x00007fb2c110461b: jne    0x00007fb2c1104622
  0x00007fb2c1104621: retq   
  0x00007fb2c1104622: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00007fb2c1104627: mov    %rsp,%r12
  0x00007fb2c110462a: sub    $0x0,%rsp
  0x00007fb2c110462e: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c1104632: callq  0x00007fb2d6e04360  ;   {runtime_call}
  0x00007fb2c1104637: mov    %r12,%rsp
  0x00007fb2c110463a: xor    %r12,%r12
  0x00007fb2c110463d: jmpq   0x00007fb2c11045a5
  0x00007fb2c1104642: hlt    
  0x00007fb2c1104643: hlt    
  0x00007fb2c1104644: hlt    
  0x00007fb2c1104645: hlt    
  0x00007fb2c1104646: hlt    
  0x00007fb2c1104647: hlt    
<nmethod compile_id='7' compile_kind='c2n' level='0' entry='0x00007fb2c1104440' size='888' address='0x00007fb2c11042d0' relocation_offset='296' consts_offset='888' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='640' iicount='640' stamp='0.079'/>
[Loaded sun.net.util.URLUtil from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$3 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$Loader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.zip.ZipConstants from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaUtilZipFileAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<task_queued compile_id='8' method='java/lang/String indexOf (II)I' bytes='70' count='169' backedge_count='5120' iicount='169' level='3' stamp='0.080' comment='tiered' hot_count='169'/>
<task_queued compile_id='9' method='java/lang/String length ()I' bytes='6' count='512' iicount='512' level='3' stamp='0.080' comment='tiered' hot_count='512'/>
<task_queued compile_id='10' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1664' iicount='1664' level='3' stamp='0.080' comment='tiered' hot_count='1664'/>
[Loaded sun.misc.URLClassPath$FileLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Resource from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$FileLoader$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Package from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.ByteBuffered from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.PerfCounter from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140404518676224'/>
Decoding compiled method 0x00007fb2c110dd90:
Code:
<writer thread='140406105003776'/>
[Loaded sun.misc.Perf$GetPerfAction from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140404518676224'/>
[Entry Point]
[Constants]
  # {method} {0x00007fb2bd3a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fb2c110df20: mov    0x8(%rsi),%r10d
  0x00007fb2c110df24: shl    $0x3,%r10
  0x00007fb2c110df28: cmp    %rax,%r10
  0x00007fb2c110df2b: jne    0x00007fb2c1045e20  ;   {runtime_call}
  0x00007fb2c110df31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c110df3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb2c110df40: mov    %eax,-0x14000(%rsp)
  0x00007fb2c110df47: push   %rbp
  0x00007fb2c110df48: sub    $0x30,%rsp
  0x00007fb2c110df4c: movabs $0x7fb2bd59bf70,%rax  ;   {metadata(method data for {method} {0x00007fb2bd3a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110df56: mov    0xdc(%rax),%edi
  0x00007fb2c110df5c: add    $0x8,%edi
  0x00007fb2c110df5f: mov    %edi,0xdc(%rax)
  0x00007fb2c110df65: movabs $0x7fb2bd3a0180,%rax  ;   {metadata({method} {0x00007fb2bd3a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110df6f: and    $0x1ff8,%edi
  0x00007fb2c110df75: cmp    $0x0,%edi
  0x00007fb2c110df78: je     0x00007fb2c110e181  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1546)

  0x00007fb2c110df7e: mov    0xc(%rsi),%eax
  0x00007fb2c110df81: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x00007fb2c110df85: mov    0xc(%rax),%edi     ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x00007fb2c110e198
  0x00007fb2c110df88: cmp    $0x0,%ecx
  0x00007fb2c110df8b: movabs $0x7fb2bd59bf70,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd3a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110df95: movabs $0x108,%r8
  0x00007fb2c110df9f: jge    0x00007fb2c110dfaf
  0x00007fb2c110dfa5: movabs $0x118,%r8
  0x00007fb2c110dfaf: mov    (%rbx,%r8,1),%r9
  0x00007fb2c110dfb3: lea    0x1(%r9),%r9
  0x00007fb2c110dfb7: mov    %r9,(%rbx,%r8,1)
  0x00007fb2c110dfbb: jge    0x00007fb2c110dfdb  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x00007fb2c110dfc1: movabs $0x7fb2bd59bf70,%rcx  ;   {metadata(method data for {method} {0x00007fb2bd3a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110dfcb: incl   0x128(%rcx)
  0x00007fb2c110dfd1: mov    $0x0,%ecx
  0x00007fb2c110dfd6: jmpq   0x00007fb2c110e013  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1548)

  0x00007fb2c110dfdb: cmp    %edi,%ecx
  0x00007fb2c110dfdd: movabs $0x7fb2bd59bf70,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd3a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110dfe7: movabs $0x140,%r8
  0x00007fb2c110dff1: jl     0x00007fb2c110e001
  0x00007fb2c110dff7: movabs $0x150,%r8
  0x00007fb2c110e001: mov    (%rbx,%r8,1),%r9
  0x00007fb2c110e005: lea    0x1(%r9),%r9
  0x00007fb2c110e009: mov    %r9,(%rbx,%r8,1)
  0x00007fb2c110e00d: jge    0x00007fb2c110e170  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x00007fb2c110e013: cmp    $0x10000,%edx
  0x00007fb2c110e019: movabs $0x7fb2bd59bf70,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd3a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110e023: movabs $0x160,%r8
  0x00007fb2c110e02d: jge    0x00007fb2c110e03d
  0x00007fb2c110e033: movabs $0x170,%r8
  0x00007fb2c110e03d: mov    (%rbx,%r8,1),%r9
  0x00007fb2c110e041: lea    0x1(%r9),%r9
  0x00007fb2c110e045: mov    %r9,(%rbx,%r8,1)
  0x00007fb2c110e049: jge    0x00007fb2c110e148
  0x00007fb2c110e04f: jmpq   0x00007fb2c110e0eb  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x00007fb2c110e054: nopl   0x0(%rax)
  0x00007fb2c110e058: movslq %ecx,%rsi
  0x00007fb2c110e05b: cmp    0xc(%rax),%ecx
  0x00007fb2c110e05e: jae    0x00007fb2c110e19d
  0x00007fb2c110e064: movzwl 0x10(%rax,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00007fb2c110e069: cmp    %edx,%esi
  0x00007fb2c110e06b: movabs $0x7fb2bd59bf70,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd3a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110e075: movabs $0x1a0,%rbx
  0x00007fb2c110e07f: jne    0x00007fb2c110e08f
  0x00007fb2c110e085: movabs $0x1b0,%rbx
  0x00007fb2c110e08f: mov    (%rsi,%rbx,1),%r8
  0x00007fb2c110e093: lea    0x1(%r8),%r8
  0x00007fb2c110e097: mov    %r8,(%rsi,%rbx,1)
  0x00007fb2c110e09b: je     0x00007fb2c110e128  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00007fb2c110e0a1: inc    %ecx
  0x00007fb2c110e0a3: movabs $0x7fb2bd59bf70,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd3a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110e0ad: mov    0xe0(%rsi),%ebx
  0x00007fb2c110e0b3: add    $0x8,%ebx
  0x00007fb2c110e0b6: mov    %ebx,0xe0(%rsi)
  0x00007fb2c110e0bc: movabs $0x7fb2bd3a0180,%rsi  ;   {metadata({method} {0x00007fb2bd3a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110e0c6: and    $0xfff8,%ebx
  0x00007fb2c110e0cc: cmp    $0x0,%ebx
  0x00007fb2c110e0cf: je     0x00007fb2c110e1a6  ; OopMap{rax=Oop off=437}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x00007fb2c110e0d5: test   %eax,0x16f47025(%rip)        # 0x00007fb2d8055100
                                                ;   {poll}
  0x00007fb2c110e0db: movabs $0x7fb2bd59bf70,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd3a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110e0e5: incl   0x1c0(%rsi)        ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x00007fb2c110e0eb: cmp    %edi,%ecx
  0x00007fb2c110e0ed: movabs $0x7fb2bd59bf70,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd3a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110e0f7: movabs $0x180,%rbx
  0x00007fb2c110e101: jge    0x00007fb2c110e111
  0x00007fb2c110e107: movabs $0x190,%rbx
  0x00007fb2c110e111: mov    (%rsi,%rbx,1),%r8
  0x00007fb2c110e115: lea    0x1(%r8),%r8
  0x00007fb2c110e119: mov    %r8,(%rsi,%rbx,1)
  0x00007fb2c110e11d: jge    0x00007fb2c110e137
  0x00007fb2c110e123: jmpq   0x00007fb2c110e058  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00007fb2c110e128: mov    %rcx,%rax
  0x00007fb2c110e12b: add    $0x30,%rsp
  0x00007fb2c110e12f: pop    %rbp
  0x00007fb2c110e130: test   %eax,0x16f46fca(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c110e136: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@54 (line 1560)

  0x00007fb2c110e137: mov    $0xffffffff,%eax
  0x00007fb2c110e13c: add    $0x30,%rsp
  0x00007fb2c110e140: pop    %rbp
  0x00007fb2c110e141: test   %eax,0x16f46fb9(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c110e147: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@62 (line 1563)

  0x00007fb2c110e148: mov    %rsi,%rdi
  0x00007fb2c110e14b: movabs $0x7fb2bd59bf70,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd3a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110e155: addq   $0x1,0x1d8(%rbx)
  0x00007fb2c110e15d: nop
  0x00007fb2c110e15e: nop
  0x00007fb2c110e15f: callq  0x00007fb2c1046020  ; OopMap{off=580}
                                                ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1565)
                                                ;   {optimized virtual_call}
  0x00007fb2c110e164: add    $0x30,%rsp
  0x00007fb2c110e168: pop    %rbp
  0x00007fb2c110e169: test   %eax,0x16f46f91(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c110e16f: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@69 (line 1565)

  0x00007fb2c110e170: mov    $0xffffffff,%eax
  0x00007fb2c110e175: add    $0x30,%rsp
  0x00007fb2c110e179: pop    %rbp
  0x00007fb2c110e17a: test   %eax,0x16f46f80(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c110e180: retq   
  0x00007fb2c110e181: mov    %rax,0x8(%rsp)
  0x00007fb2c110e186: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c110e18e: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop off=627}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)
                                                ;   {runtime_call}
  0x00007fb2c110e193: jmpq   0x00007fb2c110df7e
  0x00007fb2c110e198: callq  0x00007fb2c106ee40  ; OopMap{rsi=Oop rax=Oop off=637}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x00007fb2c110e19d: mov    %rcx,(%rsp)
  0x00007fb2c110e1a1: callq  0x00007fb2c106be00  ; OopMap{rax=Oop off=646}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x00007fb2c110e1a6: mov    %rsi,0x8(%rsp)
  0x00007fb2c110e1ab: movq   $0x3a,(%rsp)
  0x00007fb2c110e1b3: callq  0x00007fb2c10feb20  ; OopMap{rax=Oop off=664}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)
                                                ;   {runtime_call}
  0x00007fb2c110e1b8: jmpq   0x00007fb2c110e0d5
  0x00007fb2c110e1bd: nop
  0x00007fb2c110e1be: nop
  0x00007fb2c110e1bf: mov    0x2a8(%r15),%rax
  0x00007fb2c110e1c6: movabs $0x0,%r10
  0x00007fb2c110e1d0: mov    %r10,0x2a8(%r15)
  0x00007fb2c110e1d7: movabs $0x0,%r10
  0x00007fb2c110e1e1: mov    %r10,0x2b0(%r15)
  0x00007fb2c110e1e8: add    $0x30,%rsp
  0x00007fb2c110e1ec: pop    %rbp
  0x00007fb2c110e1ed: jmpq   0x00007fb2c106c3e0  ;   {runtime_call}
  0x00007fb2c110e1f2: hlt    
  0x00007fb2c110e1f3: hlt    
  0x00007fb2c110e1f4: hlt    
  0x00007fb2c110e1f5: hlt    
  0x00007fb2c110e1f6: hlt    
  0x00007fb2c110e1f7: hlt    
  0x00007fb2c110e1f8: hlt    
  0x00007fb2c110e1f9: hlt    
  0x00007fb2c110e1fa: hlt    
  0x00007fb2c110e1fb: hlt    
  0x00007fb2c110e1fc: hlt    
  0x00007fb2c110e1fd: hlt    
  0x00007fb2c110e1fe: hlt    
  0x00007fb2c110e1ff: hlt    
[Stub Code]
  0x00007fb2c110e200: nop                       ;   {no_reloc}
  0x00007fb2c110e201: nop
  0x00007fb2c110e202: nop
  0x00007fb2c110e203: nop
  0x00007fb2c110e204: nop
  0x00007fb2c110e205: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c110e20f: jmpq   0x00007fb2c110e20f  ;   {runtime_call}
[Exception Handler]
  0x00007fb2c110e214: callq  0x00007fb2c106cfe0  ;   {runtime_call}
  0x00007fb2c110e219: mov    %rsp,-0x28(%rsp)
  0x00007fb2c110e21e: sub    $0x80,%rsp
  0x00007fb2c110e225: mov    %rax,0x78(%rsp)
  0x00007fb2c110e22a: mov    %rcx,0x70(%rsp)
  0x00007fb2c110e22f: mov    %rdx,0x68(%rsp)
  0x00007fb2c110e234: mov    %rbx,0x60(%rsp)
  0x00007fb2c110e239: mov    %rbp,0x50(%rsp)
  0x00007fb2c110e23e: mov    %rsi,0x48(%rsp)
  0x00007fb2c110e243: mov    %rdi,0x40(%rsp)
  0x00007fb2c110e248: mov    %r8,0x38(%rsp)
  0x00007fb2c110e24d: mov    %r9,0x30(%rsp)
  0x00007fb2c110e252: mov    %r10,0x28(%rsp)
  0x00007fb2c110e257: mov    %r11,0x20(%rsp)
  0x00007fb2c110e25c: mov    %r12,0x18(%rsp)
  0x00007fb2c110e261: mov    %r13,0x10(%rsp)
  0x00007fb2c110e266: mov    %r14,0x8(%rsp)
  0x00007fb2c110e26b: mov    %r15,(%rsp)
  0x00007fb2c110e26f: movabs $0x7fb2d6f4df36,%rdi  ;   {external_word}
  0x00007fb2c110e279: movabs $0x7fb2c110e219,%rsi  ;   {internal_word}
  0x00007fb2c110e283: mov    %rsp,%rdx
  0x00007fb2c110e286: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c110e28a: callq  0x00007fb2d6c79990  ;   {runtime_call}
  0x00007fb2c110e28f: hlt    
[Deopt Handler Code]
  0x00007fb2c110e290: movabs $0x7fb2c110e290,%r10  ;   {section_word}
  0x00007fb2c110e29a: push   %r10
  0x00007fb2c110e29c: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c110e2a1: hlt    
  0x00007fb2c110e2a2: hlt    
  0x00007fb2c110e2a3: hlt    
  0x00007fb2c110e2a4: hlt    
  0x00007fb2c110e2a5: hlt    
  0x00007fb2c110e2a6: hlt    
  0x00007fb2c110e2a7: hlt    
<nmethod compile_id='8' compiler='C1' level='3' entry='0x00007fb2c110df20' size='1848' address='0x00007fb2c110dd90' relocation_offset='296' insts_offset='400' stub_offset='1136' scopes_data_offset='1312' scopes_pcs_offset='1472' dependencies_offset='1824' nul_chk_table_offset='1832' method='java/lang/String indexOf (II)I' bytes='70' count='214' backedge_count='7331' iicount='214' stamp='0.084'/>
Decoding compiled method 0x00007fb2c1103b50:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fb2bd39b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb2c1103cc0: mov    0x8(%rsi),%r10d
  0x00007fb2c1103cc4: shl    $0x3,%r10
  0x00007fb2c1103cc8: cmp    %rax,%r10
  0x00007fb2c1103ccb: jne    0x00007fb2c1045e20  ;   {runtime_call}
  0x00007fb2c1103cd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c1103cdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb2c1103ce0: mov    %eax,-0x14000(%rsp)
  0x00007fb2c1103ce7: push   %rbp
  0x00007fb2c1103ce8: sub    $0x30,%rsp
  0x00007fb2c1103cec: movabs $0x7fb2bd511108,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd39b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb2c1103cf6: mov    0xdc(%rdi),%ebx
  0x00007fb2c1103cfc: add    $0x8,%ebx
  0x00007fb2c1103cff: mov    %ebx,0xdc(%rdi)
<writer thread='140406105003776'/>
[Loaded sun.misc.Perf from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140404518676224'/>
  0x00007fb2c1103d05: movabs $0x7fb2bd39b480,%rdi  ;   {metadata({method} {0x00007fb2bd39b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb2c1103d0f: and    $0x1ff8,%ebx
  0x00007fb2c1103d15: cmp    $0x0,%ebx
  0x00007fb2c1103d18: je     0x00007fb2c1103d37
  0x00007fb2c1103d1e: mov    %rsi,%rdi          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x00007fb2c1103d21: mov    %rsi,0x20(%rsp)
  0x00007fb2c1103d26: callq  0x00007fb2c106eba0  ; OopMap{[32]=Oop off=107}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x00007fb2c1103d2b: add    $0x30,%rsp
  0x00007fb2c1103d2f: pop    %rbp
  0x00007fb2c1103d30: test   %eax,0x16f513ca(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c1103d36: retq   
  0x00007fb2c1103d37: mov    %rdi,0x8(%rsp)
  0x00007fb2c1103d3c: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c1103d44: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ;   {runtime_call}
  0x00007fb2c1103d49: jmp    0x00007fb2c1103d1e
  0x00007fb2c1103d4b: nop
  0x00007fb2c1103d4c: nop
  0x00007fb2c1103d4d: mov    0x2a8(%r15),%rax
  0x00007fb2c1103d54: movabs $0x0,%r10
  0x00007fb2c1103d5e: mov    %r10,0x2a8(%r15)
  0x00007fb2c1103d65: movabs $0x0,%r10
  0x00007fb2c1103d6f: mov    %r10,0x2b0(%r15)
  0x00007fb2c1103d76: add    $0x30,%rsp
  0x00007fb2c1103d7a: pop    %rbp
  0x00007fb2c1103d7b: jmpq   0x00007fb2c106c3e0  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x00007fb2c1103d80: callq  0x00007fb2c106cfe0  ;   {no_reloc}
  0x00007fb2c1103d85: mov    %rsp,-0x28(%rsp)
  0x00007fb2c1103d8a: sub    $0x80,%rsp
  0x00007fb2c1103d91: mov    %rax,0x78(%rsp)
  0x00007fb2c1103d96: mov    %rcx,0x70(%rsp)
  0x00007fb2c1103d9b: mov    %rdx,0x68(%rsp)
  0x00007fb2c1103da0: mov    %rbx,0x60(%rsp)
  0x00007fb2c1103da5: mov    %rbp,0x50(%rsp)
  0x00007fb2c1103daa: mov    %rsi,0x48(%rsp)
  0x00007fb2c1103daf: mov    %rdi,0x40(%rsp)
  0x00007fb2c1103db4: mov    %r8,0x38(%rsp)
  0x00007fb2c1103db9: mov    %r9,0x30(%rsp)
  0x00007fb2c1103dbe: mov    %r10,0x28(%rsp)
  0x00007fb2c1103dc3: mov    %r11,0x20(%rsp)
  0x00007fb2c1103dc8: mov    %r12,0x18(%rsp)
  0x00007fb2c1103dcd: mov    %r13,0x10(%rsp)
  0x00007fb2c1103dd2: mov    %r14,0x8(%rsp)
  0x00007fb2c1103dd7: mov    %r15,(%rsp)
  0x00007fb2c1103ddb: movabs $0x7fb2d6f4df36,%rdi  ;   {external_word}
  0x00007fb2c1103de5: movabs $0x7fb2c1103d85,%rsi  ;   {internal_word}
  0x00007fb2c1103def: mov    %rsp,%rdx
  0x00007fb2c1103df2: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c1103df6: callq  0x00007fb2d6c79990  ;   {runtime_call}
  0x00007fb2c1103dfb: hlt    
[Deopt Handler Code]
  0x00007fb2c1103dfc: movabs $0x7fb2c1103dfc,%r10  ;   {section_word}
  0x00007fb2c1103e06: push   %r10
  0x00007fb2c1103e08: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c1103e0d: hlt    
  0x00007fb2c1103e0e: hlt    
  0x00007fb2c1103e0f: hlt    
<nmethod compile_id='10' compiler='C1' level='3' entry='0x00007fb2c1103cc0' size='832' address='0x00007fb2c1103b50' relocation_offset='296' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='744' dependencies_offset='824' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1799' iicount='1799' stamp='0.085'/>
<writer thread='140406105003776'/>
[Loaded sun.misc.PerfCounter$CoreCounters from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140404518676224'/>
Decoding compiled method 0x00007fb2c110d7d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fb2bd39ec60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb2c110d940: 
<writer thread='140406105003776'/>
[Loaded sun.nio.ch.DirectBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140404518676224'/>
mov    0x8(%rsi),%r10d
  0x00007fb2c110d944: shl    $0x3,%r10
  0x00007fb2c110d948: cmp    %rax,%r10
  0x00007fb2c110d94b: jne    0x00007fb2c1045e20  ;   {runtime_call}
  0x00007fb2c110d951: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c110d95c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb2c110d960: mov    %eax,-0x14000(%rsp)
  0x00007fb2c110d967: push   %rbp
  0x00007fb2c110d968: sub    $0x30,%rsp
  0x00007fb2c110d96c: movabs $0x7fb2bd59afb0,%rax  ;   {metadata(method data for {method} {0x00007fb2bd39ec60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110d976: mov    0xdc(%rax),%edi
  0x00007fb2c110d97c: add    $0x8,%edi
  0x00007fb2c110d97f: mov    %edi,0xdc(%rax)
  0x00007fb2c110d985: movabs $0x7fb2bd39ec60,%rax  ;   {metadata({method} {0x00007fb2bd39ec60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110d98f: and    $0x1ff8,%edi
  0x00007fb2c110d995: cmp    $0x0,%edi
  0x00007fb2c110d998: je     0x00007fb2c110d9b4  ;*aload_0
                                                ; - java.lang.String::length@0 (line 623)

  0x00007fb2c110d99e: mov    0xc(%rsi),%eax
  0x00007fb2c110d9a1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x00007fb2c110d9a5: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x00007fb2c110d9c8
  0x00007fb2c110d9a8: add    $0x30,%rsp
  0x00007fb2c110d9ac: pop    %rbp
  0x00007fb2c110d9ad: test   %eax,0x16f4774d(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c110d9b3: retq   
  0x00007fb2c110d9b4: mov    %rax,0x8(%rsp)
  0x00007fb2c110d9b9: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c110d9c1: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop off=134}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ;   {runtime_call}
  0x00007fb2c110d9c6: jmp    0x00007fb2c110d99e
  0x00007fb2c110d9c8: callq  0x00007fb2c106ee40  ; OopMap{off=141}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x00007fb2c110d9cd: nop
  0x00007fb2c110d9ce: nop
  0x00007fb2c110d9cf: mov    0x2a8(%r15),%rax
  0x00007fb2c110d9d6: movabs $0x0,%r10
  0x00007fb2c110d9e0: mov    %r10,0x2a8(%r15)
  0x00007fb2c110d9e7: movabs $0x0,%r10
  0x00007fb2c110d9f1: mov    %r10,0x2b0(%r15)
  0x00007fb2c110d9f8: add    $0x30,%rsp
  0x00007fb2c110d9fc: pop    %rbp
  0x00007fb2c110d9fd: jmpq   0x00007fb2c106c3e0  ;   {runtime_call}
  0x00007fb2c110da02: hlt    
  0x00007fb2c110da03: hlt    
  0x00007fb2c110da04: hlt    
  0x00007fb2c110da05: hlt    
  0x00007fb2c110da06: hlt    
  0x00007fb2c110da07: hlt    
  0x00007fb2c110da08: hlt    
  0x00007fb2c110da09: hlt    
  0x00007fb2c110da0a: hlt    
  0x00007fb2c110da0b: hlt    
  0x00007fb2c110da0c: hlt    
  0x00007fb2c110da0d: hlt    
  0x00007fb2c110da0e: hlt    
  0x00007fb2c110da0f: hlt    
  0x00007fb2c110da10: hlt    
  0x00007fb2c110da11: hlt    
  0x00007fb2c110da12: hlt    
  0x00007fb2c110da13: hlt    
  0x00007fb2c110da14: hlt    
  0x00007fb2c110da15: hlt    
  0x00007fb2c110da16: hlt    
  0x00007fb2c110da17: hlt    
  0x00007fb2c110da18: hlt    
  0x00007fb2c110da19: hlt    
  0x00007fb2c110da1a: hlt    
  0x00007fb2c110da1b: hlt    
  0x00007fb2c110da1c: hlt    
  0x00007fb2c110da1d: hlt    
  0x00007fb2c110da1e: hlt    
  0x00007fb2c110da1f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb2c110da20: callq  0x00007fb2c106cfe0  ;   {no_reloc}
  0x00007fb2c110da25: mov    %rsp,-0x28(%rsp)
  0x00007fb2c110da2a: sub    $0x80,%rsp
  0x00007fb2c110da31: mov    %rax,0x78(%rsp)
  0x00007fb2c110da36: mov    %rcx,0x70(%rsp)
  0x00007fb2c110da3b: mov    %rdx,0x68(%rsp)
  0x00007fb2c110da40: mov    %rbx,0x60(%rsp)
  0x00007fb2c110da45: mov    %rbp,0x50(%rsp)
  0x00007fb2c110da4a: mov    %rsi,0x48(%rsp)
  0x00007fb2c110da4f: mov    %rdi,0x40(%rsp)
  0x00007fb2c110da54: mov    %r8,0x38(%rsp)
  0x00007fb2c110da59: mov    %r9,0x30(%rsp)
  0x00007fb2c110da5e: mov    %r10,0x28(%rsp)
  0x00007fb2c110da63: mov    %r11,0x20(%rsp)
  0x00007fb2c110da68: mov    %r12,0x18(%rsp)
  0x00007fb2c110da6d: mov    %r13,0x10(%rsp)
  0x00007fb2c110da72: mov    %r14,0x8(%rsp)
  0x00007fb2c110da77: mov    %r15,(%rsp)
  0x00007fb2c110da7b: movabs $0x7fb2d6f4df36,%rdi  ;   {external_word}
  0x00007fb2c110da85: movabs $0x7fb2c110da25,%rsi  ;   {internal_word}
  0x00007fb2c110da8f: mov    %rsp,%rdx
  0x00007fb2c110da92: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c110da96: callq  0x00007fb2d6c79990  ;   {runtime_call}
  0x00007fb2c110da9b: hlt    
[Deopt Handler Code]
  0x00007fb2c110da9c: movabs $0x7fb2c110da9c,%r10  ;   {section_word}
  0x00007fb2c110daa6: push   %r10
  0x00007fb2c110daa8: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c110daad: hlt    
  0x00007fb2c110daae: hlt    
  0x00007fb2c110daaf: hlt    
<nmethod compile_id='9' compiler='C1' level='3' entry='0x00007fb2c110d940' size='920' address='0x00007fb2c110d7d0' relocation_offset='296' insts_offset='368' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' nul_chk_table_offset='904' method='java/lang/String length ()I' bytes='6' count='679' iicount='679' stamp='0.085'/>
<writer thread='140406105003776'/>
[Loaded java.nio.MappedByteBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.DirectByteBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.LongBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.DirectLongBufferU from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.PermissionCollection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.Permissions from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<task_queued compile_id='11' method='java/lang/String getChars (II[CI)V' bytes='62' count='256' iicount='256' level='3' stamp='0.086' comment='tiered' hot_count='256'/>
<task_queued compile_id='12' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='259' iicount='259' level='3' stamp='0.086' comment='tiered' hot_count='259'/>
[Loaded java.net.URLConnection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.net.www.URLConnection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.FileURLConnection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.net.www.MessageHeader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FilePermission from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FilePermission$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140404518676224'/>
Decoding compiled method 0x00007fb2c110e510:
Code:
[Entry Point]
[Constants]
  # {method}
<writer thread='140406105003776'/>
[Loaded java.io.FilePermissionCollection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140404518676224'/>
 {0x00007fb2bd40fff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0xf0]  (sp of caller)
  0x00007fb2c110e6e0: mov    0x8(%rsi),%r10d
  0x00007fb2c110e6e4: shl    $0x3,%r10
  0x00007fb2c110e6e8: cmp    %rax,%r10
  0x00007fb2c110e6eb: jne    0x00007fb2c1045e20  ;   {runtime_call}
  0x00007fb2c110e6f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c110e6fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb2c110e700: mov    %eax,-0x14000(%rsp)
  0x00007fb2c110e707: push   %rbp
  0x00007fb2c110e708: sub    $0xe0,%rsp
  0x00007fb2c110e70f: mov    %rsi,0xb8(%rsp)
  0x00007fb2c110e717: movabs $0x7fb2bd580d80,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd40fff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb2c110e721: mov    0xdc(%rdi),%ebx
  0x00007fb2c110e727: add    $0x8,%ebx
  0x00007fb2c110e72a: mov    %ebx,0xdc(%rdi)
  0x00007fb2c110e730: movabs $0x7fb2bd40fff8,%rdi  ;   {metadata({method} {0x00007fb2bd40fff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb2c110e73a: and    $0x1ff8,%ebx
  0x00007fb2c110e740: cmp    $0x0,%ebx
  0x00007fb2c110e743: je     0x00007fb2c110ec73  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x00007fb2c110e749: cmp    $0x0,%rdx
  0x00007fb2c110e74d: movabs $0x7fb2bd580d80,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd40fff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb2c110e757: movabs $0x108,%rbx
  0x00007fb2c110e761: jne    0x00007fb2c110e771
  0x00007fb2c110e767: movabs $0x118,%rbx
  0x00007fb2c110e771: mov    (%rdi,%rbx,1),%rax
  0x00007fb2c110e775: lea    0x1(%rax),%rax
  0x00007fb2c110e779: mov    %rax,(%rdi,%rbx,1)
  0x00007fb2c110e77d: je     0x00007fb2c110ec43  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x00007fb2c110e783: cmp    (%rdx),%rax        ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x00007fb2c110ec8a
  0x00007fb2c110e786: mov    %rdx,%rdi
  0x00007fb2c110e789: movabs $0x7fb2bd580d80,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd40fff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb2c110e793: mov    0x8(%rdi),%edi
  0x00007fb2c110e796: shl    $0x3,%rdi
  0x00007fb2c110e79a: cmp    0x140(%rbx),%rdi
  0x00007fb2c110e7a1: jne    0x00007fb2c110e7b0
  0x00007fb2c110e7a3: addq   $0x1,0x148(%rbx)
  0x00007fb2c110e7ab: jmpq   0x00007fb2c110e816
  0x00007fb2c110e7b0: cmp    0x150(%rbx),%rdi
  0x00007fb2c110e7b7: jne    0x00007fb2c110e7c6
  0x00007fb2c110e7b9: addq   $0x1,0x158(%rbx)
  0x00007fb2c110e7c1: jmpq   0x00007fb2c110e816
  0x00007fb2c110e7c6: cmpq   $0x0,0x140(%rbx)
  0x00007fb2c110e7d1: jne    0x00007fb2c110e7ea
  0x00007fb2c110e7d3: mov    %rdi,0x140(%rbx)
  0x00007fb2c110e7da: movq   $0x1,0x148(%rbx)
  0x00007fb2c110e7e5: jmpq   0x00007fb2c110e816
  0x00007fb2c110e7ea: cmpq   $0x0,0x150(%rbx)
  0x00007fb2c110e7f5: jne    0x00007fb2c110e80e
  0x00007fb2c110e7f7: mov    %rdi,0x150(%rbx)
  0x00007fb2c110e7fe: movq   $0x1,0x158(%rbx)
  0x00007fb2c110e809: jmpq   0x00007fb2c110e816
  0x00007fb2c110e80e: addq   $0x1,0x138(%rbx)
  0x00007fb2c110e816: movabs $0x7fb2bd59afb0,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd39ec60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110e820: mov    0xdc(%rdi),%ebx
  0x00007fb2c110e826: add    $0x8,%ebx
  0x00007fb2c110e829: mov    %ebx,0xdc(%rdi)
  0x00007fb2c110e82f: movabs $0x7fb2bd39ec60,%rdi  ;   {metadata({method} {0x00007fb2bd39ec60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110e839: and    $0x7ffff8,%ebx
  0x00007fb2c110e83f: cmp    $0x0,%ebx
  0x00007fb2c110e842: je     0x00007fb2c110ec8f
  0x00007fb2c110e848: mov    0xc(%rdx),%edi
  0x00007fb2c110e84b: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x00007fb2c110e84f: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x00007fb2c110eca6
  0x00007fb2c110e852: mov    %edi,0xac(%rsp)
  0x00007fb2c110e859: mov    0xc(%rsi),%ebx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x00007fb2c110e85c: add    %edi,%ebx
  0x00007fb2c110e85e: mov    %rsi,%rax
  0x00007fb2c110e861: movabs $0x7fb2bd580d80,%rcx  ;   {metadata(method data for {method} {0x00007fb2bd40fff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb2c110e86b: addq   $0x1,0x168(%rcx)
  0x00007fb2c110e873: movabs $0x7fb2bd5b5798,%rax  ;   {metadata(method data for {method} {0x00007fb2bd40f6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb2c110e87d: mov    0xdc(%rax),%ecx
  0x00007fb2c110e883: add    $0x8,%ecx
  0x00007fb2c110e886: mov    %ecx,0xdc(%rax)
  0x00007fb2c110e88c: movabs $0x7fb2bd40f6a0,%rax  ;   {metadata({method} {0x00007fb2bd40f6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb2c110e896: and    $0x7ffff8,%ecx
  0x00007fb2c110e89c: cmp    $0x0,%ecx
  0x00007fb2c110e89f: je     0x00007fb2c110ecab
  0x00007fb2c110e8a5: mov    0x10(%rsi),%eax
  0x00007fb2c110e8a8: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fb2c110e8ac: mov    0xc(%rax),%ecx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x00007fb2c110ecc2
  0x00007fb2c110e8af: mov    %rbx,%r8
  0x00007fb2c110e8b2: sub    %ecx,%r8d
  0x00007fb2c110e8b5: cmp    $0x0,%r8d
  0x00007fb2c110e8b9: movabs $0x7fb2bd5b5798,%r8  ;   {metadata(method data for {method} {0x00007fb2bd40f6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb2c110e8c3: movabs $0x108,%r9
  0x00007fb2c110e8cd: jle    0x00007fb2c110e8dd
  0x00007fb2c110e8d3: movabs $0x118,%r9
  0x00007fb2c110e8dd: mov    (%r8,%r9,1),%r11
  0x00007fb2c110e8e1: lea    0x1(%r11),%r11
  0x00007fb2c110e8e5: mov    %r11,(%r8,%r9,1)
  0x00007fb2c110e8e9: jg     0x00007fb2c110e8fc  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fb2c110e8ef: mov    %rdx,0xc0(%rsp)
  0x00007fb2c110e8f7: jmpq   0x00007fb2c110eb5b  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fb2c110e8fc: mov    %ecx,0xa8(%rsp)
  0x00007fb2c110e903: mov    %rax,0xb0(%rsp)
  0x00007fb2c110e90b: mov    %rdx,0xc0(%rsp)
  0x00007fb2c110e913: mov    %rsi,%r8
  0x00007fb2c110e916: movabs $0x7fb2bd5b5798,%r9  ;   {metadata(method data for {method} {0x00007fb2bd40f6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb2c110e920: addq   $0x1,0x128(%r9)
  0x00007fb2c110e928: mov    %rbx,%rdx
  0x00007fb2c110e92b: mov    %rsi,%rbx
  0x00007fb2c110e92e: mov    %rbx,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fb2c110e931: nop
  0x00007fb2c110e932: nop
  0x00007fb2c110e933: nop
  0x00007fb2c110e934: nop
  0x00007fb2c110e935: nop
  0x00007fb2c110e936: nop
  0x00007fb2c110e937: callq  0x00007fb2c1046020  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=604}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x00007fb2c110e93c: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fb2c110e93f: movabs $0x7fb2bd5b5798,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd40f6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb2c110e949: addq   $0x1,0x138(%rbx)
  0x00007fb2c110e951: movabs $0x7fb2bd5b80b8,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd4b4e90} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fb2c110e95b: mov    0xdc(%rbx),%edx
  0x00007fb2c110e961: add    $0x8,%edx
  0x00007fb2c110e964: mov    %edx,0xdc(%rbx)
  0x00007fb2c110e96a: movabs $0x7fb2bd4b4e90,%rbx  ;   {metadata({method} {0x00007fb2bd4b4e90} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fb2c110e974: and    $0x7ffff8,%edx
  0x00007fb2c110e97a: cmp    $0x0,%edx
  0x00007fb2c110e97d: je     0x00007fb2c110ecc7
  0x00007fb2c110e983: mov    %r8,%rbx
  0x00007fb2c110e986: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00007fb2c110e990: movslq %ebx,%rbx
  0x00007fb2c110e993: mov    %rbx,%rdi
  0x00007fb2c110e996: cmp    $0xffffff,%rbx
  0x00007fb2c110e99d: ja     0x00007fb2c110ecde
  0x00007fb2c110e9a3: movabs $0x17,%rsi
  0x00007fb2c110e9ad: lea    (%rsi,%rbx,2),%rsi
  0x00007fb2c110e9b1: and    $0xfffffffffffffff8,%rsi
  0x00007fb2c110e9b5: mov    0x60(%r15),%rax
  0x00007fb2c110e9b9: lea    (%rax,%rsi,1),%rsi
  0x00007fb2c110e9bd: cmp    0x70(%r15),%rsi
  0x00007fb2c110e9c1: ja     0x00007fb2c110ecde
  0x00007fb2c110e9c7: mov    %rsi,0x60(%r15)
  0x00007fb2c110e9cb: sub    %rax,%rsi
  0x00007fb2c110e9ce: movq   $0x1,(%rax)
  0x00007fb2c110e9d5: mov    %rdx,%rcx
  0x00007fb2c110e9d8: shr    $0x3,%rcx
  0x00007fb2c110e9dc: mov    %ecx,0x8(%rax)
  0x00007fb2c110e9df: mov    %ebx,0xc(%rax)
  0x00007fb2c110e9e2: sub    $0x10,%rsi
  0x00007fb2c110e9e6: je     0x00007fb2c110e9fd
  0x00007fb2c110e9ec: xor    %rbx,%rbx
  0x00007fb2c110e9ef: shr    $0x3,%rsi
  0x00007fb2c110e9f3: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fb2c110e9f8: dec    %rsi
  0x00007fb2c110e9fb: jne    0x00007fb2c110e9f3  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fb2c110e9fd: movabs $0x7fb2bd5b80b8,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd4b4e90} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fb2c110ea07: addq   $0x1,0x108(%rsi)
  0x00007fb2c110ea0f: movabs $0x7fb2bd563ce8,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd4907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb2c110ea19: mov    0xdc(%rsi),%edx
  0x00007fb2c110ea1f: add    $0x8,%edx
  0x00007fb2c110ea22: mov    %edx,0xdc(%rsi)
  0x00007fb2c110ea28: movabs $0x7fb2bd4907a8,%rsi  ;   {metadata({method} {0x00007fb2bd4907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb2c110ea32: and    $0x7ffff8,%edx
  0x00007fb2c110ea38: cmp    $0x0,%edx
  0x00007fb2c110ea3b: je     0x00007fb2c110ece8
  0x00007fb2c110ea41: mov    0xa8(%rsp),%ecx
  0x00007fb2c110ea48: cmp    %r8d,%ecx
  0x00007fb2c110ea4b: movabs $0x7fb2bd563ce8,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd4907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb2c110ea55: movabs $0x108,%rdx
  0x00007fb2c110ea5f: jg     0x00007fb2c110ea6f
  0x00007fb2c110ea65: movabs $0x118,%rdx
  0x00007fb2c110ea6f: mov    (%rsi,%rdx,1),%r9
  0x00007fb2c110ea73: lea    0x1(%r9),%r9
  0x00007fb2c110ea77: mov    %r9,(%rsi,%rdx,1)
  0x00007fb2c110ea7b: jg     0x00007fb2c110ea99  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fb2c110ea81: movabs $0x7fb2bd563ce8,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd4907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb2c110ea8b: incl   0x128(%rsi)
  0x00007fb2c110ea91: mov    %rcx,%r9
  0x00007fb2c110ea94: jmpq   0x00007fb2c110ea9c  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fb2c110ea99: mov    %r8,%r9            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fb2c110ea9c: mov    0xb0(%rsp),%rsi
  0x00007fb2c110eaa4: movabs $0x7fb2bd5b80b8,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd4b4e90} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fb2c110eaae: addq   $0x1,0x118(%rdx)
  0x00007fb2c110eab6: mov    $0x0,%edx
  0x00007fb2c110eabb: mov    %rax,%rcx
  0x00007fb2c110eabe: mov    $0x0,%r8d
  0x00007fb2c110eac4: mov    %rax,0xc8(%rsp)
  0x00007fb2c110eacc: lea    (%rdx,%r9,1),%rdi
  0x00007fb2c110ead0: cmp    0xc(%rsi),%edi
  0x00007fb2c110ead3: ja     0x00007fb2c110ecff
  0x00007fb2c110ead9: lea    (%r8,%r9,1),%rdi
  0x00007fb2c110eadd: cmp    0xc(%rcx),%edi
  0x00007fb2c110eae0: ja     0x00007fb2c110ecff
  0x00007fb2c110eae6: test   %r9d,%r9d
  0x00007fb2c110eae9: jl     0x00007fb2c110ecff
  0x00007fb2c110eaef: je     0x00007fb2c110eb2b
  0x00007fb2c110eaf5: movslq %edx,%rdx
  0x00007fb2c110eaf8: movslq %r8d,%r8
  0x00007fb2c110eafb: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007fb2c110eb00: lea    0x10(%rcx,%r8,2),%rsi
  0x00007fb2c110eb05: mov    %r9,%rdx
  0x00007fb2c110eb08: test   $0xf,%esp
  0x00007fb2c110eb0e: je     0x00007fb2c110eb26
  0x00007fb2c110eb14: sub    $0x8,%rsp
  0x00007fb2c110eb18: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007fb2c110eb1d: add    $0x8,%rsp
  0x00007fb2c110eb21: jmpq   0x00007fb2c110eb2b
  0x00007fb2c110eb26: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007fb2c110eb2b: mov    0xc8(%rsp),%rax
  0x00007fb2c110eb33: mov    0xb8(%rsp),%rsi
  0x00007fb2c110eb3b: mov    %rax,%r10
  0x00007fb2c110eb3e: shr    $0x3,%r10
  0x00007fb2c110eb42: mov    %r10d,0x10(%rsi)
  0x00007fb2c110eb46: mov    %rsi,%rdx
  0x00007fb2c110eb49: shr    $0x9,%rdx
  0x00007fb2c110eb4d: movabs $0x7fb2bd1ff000,%rcx
  0x00007fb2c110eb57: movb   $0x0,(%rdx,%rcx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fb2c110eb5b: mov    0xac(%rsp),%ebx
  0x00007fb2c110eb62: mov    0xc0(%rsp),%rdi
  0x00007fb2c110eb6a: mov    0x10(%rsi),%r8d
  0x00007fb2c110eb6e: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x00007fb2c110eb72: mov    0xc(%rsi),%r9d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x00007fb2c110eb76: mov    %rdi,%rdx
  0x00007fb2c110eb79: movabs $0x7fb2bd580d80,%rcx  ;   {metadata(method data for {method} {0x00007fb2bd40fff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb2c110eb83: mov    0x8(%rdx),%edx
  0x00007fb2c110eb86: shl    $0x3,%rdx
  0x00007fb2c110eb8a: cmp    0x180(%rcx),%rdx
  0x00007fb2c110eb91: jne    0x00007fb2c110eba0
  0x00007fb2c110eb93: addq   $0x1,0x188(%rcx)
  0x00007fb2c110eb9b: jmpq   0x00007fb2c110ec06
  0x00007fb2c110eba0: cmp    0x190(%rcx),%rdx
  0x00007fb2c110eba7: jne    0x00007fb2c110ebb6
  0x00007fb2c110eba9: addq   $0x1,0x198(%rcx)
  0x00007fb2c110ebb1: jmpq   0x00007fb2c110ec06
  0x00007fb2c110ebb6: cmpq   $0x0,0x180(%rcx)
  0x00007fb2c110ebc1: jne    0x00007fb2c110ebda
  0x00007fb2c110ebc3: mov    %rdx,0x180(%rcx)
  0x00007fb2c110ebca: movq   $0x1,0x188(%rcx)
  0x00007fb2c110ebd5: jmpq   0x00007fb2c110ec06
  0x00007fb2c110ebda: cmpq   $0x0,0x190(%rcx)
  0x00007fb2c110ebe5: jne    0x00007fb2c110ebfe
  0x00007fb2c110ebe7: mov    %rdx,0x190(%rcx)
  0x00007fb2c110ebee: movq   $0x1,0x198(%rcx)
  0x00007fb2c110ebf9: jmpq   0x00007fb2c110ec06
  0x00007fb2c110ebfe: addq   $0x1,0x178(%rcx)
  0x00007fb2c110ec06: mov    $0x0,%edx
  0x00007fb2c110ec0b: mov    %rbx,%rcx
  0x00007fb2c110ec0e: mov    %rdi,%rsi          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x00007fb2c110ec11: nop
  0x00007fb2c110ec12: nop
  0x00007fb2c110ec13: nop
  0x00007fb2c110ec14: nop
  0x00007fb2c110ec15: nop
  0x00007fb2c110ec16: nop
  0x00007fb2c110ec17: callq  0x00007fb2c1046020  ; OopMap{[184]=Oop off=1340}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x00007fb2c110ec1c: mov    0xb8(%rsp),%rsi
  0x00007fb2c110ec24: mov    0xc(%rsi),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x00007fb2c110ec27: add    0xac(%rsp),%eax
  0x00007fb2c110ec2e: mov    %eax,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x00007fb2c110ec31: mov    %rsi,%rax
  0x00007fb2c110ec34: add    $0xe0,%rsp
  0x00007fb2c110ec3b: pop    %rbp
  0x00007fb2c110ec3c: test   %eax,0x16f464be(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c110ec42: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x00007fb2c110ec43: mov    %rsi,%rdi
  0x00007fb2c110ec46: movabs $0x7fb2bd580d80,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd40fff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb2c110ec50: addq   $0x1,0x128(%rbx)
  0x00007fb2c110ec58: nop
  0x00007fb2c110ec59: nop
  0x00007fb2c110ec5a: nop
  0x00007fb2c110ec5b: nop
  0x00007fb2c110ec5c: nop
  0x00007fb2c110ec5d: nop
  0x00007fb2c110ec5e: nop
  0x00007fb2c110ec5f: callq  0x00007fb2c1046020  ; OopMap{off=1412}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x00007fb2c110ec64: add    $0xe0,%rsp
  0x00007fb2c110ec6b: pop    %rbp
  0x00007fb2c110ec6c: test   %eax,0x16f4648e(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c110ec72: retq   
  0x00007fb2c110ec73: mov    %rdi,0x8(%rsp)
  0x00007fb2c110ec78: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c110ec80: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1445}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x00007fb2c110ec85: jmpq   0x00007fb2c110e749
  0x00007fb2c110ec8a: callq  0x00007fb2c106ee40  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1455}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00007fb2c110ec8f: mov    %rdi,0x8(%rsp)
  0x00007fb2c110ec94: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c110ec9c: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1473}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00007fb2c110eca1: jmpq   0x00007fb2c110e848
  0x00007fb2c110eca6: callq  0x00007fb2c106ee40  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1483}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00007fb2c110ecab: mov    %rax,0x8(%rsp)
  0x00007fb2c110ecb0: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c110ecb8: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1501}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007fb2c110ecbd: jmpq   0x00007fb2c110e8a5
  0x00007fb2c110ecc2: callq  0x00007fb2c106ee40  ; OopMap{rsi=Oop [184]=Oop rdx=Oop rax=Oop off=1511}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007fb2c110ecc7: mov    %rbx,0x8(%rsp)
  0x00007fb2c110eccc: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c110ecd4: callq  0x00007fb2c10feb20  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1529}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007fb2c110ecd9: jmpq   0x00007fb2c110e983
  0x00007fb2c110ecde: callq  0x00007fb2c106dc20  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1539}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007fb2c110ece3: jmpq   0x00007fb2c110e9fd
  0x00007fb2c110ece8: mov    %rsi,0x8(%rsp)
  0x00007fb2c110eced: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c110ecf5: callq  0x00007fb2c10feb20  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1562}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007fb2c110ecfa: jmpq   0x00007fb2c110ea41
  0x00007fb2c110ecff: callq  0x00007fb2c1046420  ; OopMap{[184]=Oop [192]=Oop [200]=Oop off=1572}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x00007fb2c110ed04: jmpq   0x00007fb2c110eb2b
  0x00007fb2c110ed09: nop
  0x00007fb2c110ed0a: nop
  0x00007fb2c110ed0b: mov    0x2a8(%r15),%rax
  0x00007fb2c110ed12: movabs $0x0,%r10
  0x00007fb2c110ed1c: mov    %r10,0x2a8(%r15)
  0x00007fb2c110ed23: movabs $0x0,%r10
  0x00007fb2c110ed2d: mov    %r10,0x2b0(%r15)
  0x00007fb2c110ed34: add    $0xe0,%rsp
  0x00007fb2c110ed3b: pop    %rbp
  0x00007fb2c110ed3c: jmpq   0x00007fb2c106c3e0  ;   {runtime_call}
  0x00007fb2c110ed41: hlt    
  0x00007fb2c110ed42: hlt    
  0x00007fb2c110ed43: hlt    
  0x00007fb2c110ed44: hlt    
  0x00007fb2c110ed45: hlt    
  0x00007fb2c110ed46: hlt    
  0x00007fb2c110ed47: hlt    
  0x00007fb2c110ed48: hlt    
  0x00007fb2c110ed49: hlt    
  0x00007fb2c110ed4a: hlt    
  0x00007fb2c110ed4b: hlt    
  0x00007fb2c110ed4c: hlt    
  0x00007fb2c110ed4d: hlt    
  0x00007fb2c110ed4e: hlt    
  0x00007fb2c110ed4f: hlt    
  0x00007fb2c110ed50: hlt    
  0x00007fb2c110ed51: hlt    
  0x00007fb2c110ed52: hlt    
  0x00007fb2c110ed53: hlt    
  0x00007fb2c110ed54: hlt    
  0x00007fb2c110ed55: hlt    
  0x00007fb2c110ed56: hlt    
  0x00007fb2c110ed57: hlt    
  0x00007fb2c110ed58: hlt    
  0x00007fb2c110ed59: hlt    
  0x00007fb2c110ed5a: hlt    
  0x00007fb2c110ed5b: hlt    
  0x00007fb2c110ed5c: hlt    
  0x00007fb2c110ed5d: hlt    
  0x00007fb2c110ed5e: hlt    
  0x00007fb2c110ed5f: hlt    
[Stub Code]
  0x00007fb2c110ed60: nop                       ;   {no_reloc}
  0x00007fb2c110ed61: nop
  0x00007fb2c110ed62: nop
  0x00007fb2c110ed63: nop
  0x00007fb2c110ed64: nop
  0x00007fb2c110ed65: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c110ed6f: jmpq   0x00007fb2c110ed6f  ;   {runtime_call}
  0x00007fb2c110ed74: nop
  0x00007fb2c110ed75: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c110ed7f: jmpq   0x00007fb2c110ed7f  ;   {runtime_call}
  0x00007fb2c110ed84: nop
  0x00007fb2c110ed85: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c110ed8f: jmpq   0x00007fb2c110ed8f  ;   {runtime_call}
  0x00007fb2c110ed94: nop
  0x00007fb2c110ed95: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c110ed9f: jmpq   0x00007fb2c110ed9f  ;   {runtime_call}
[Exception Handler]
  0x00007fb2c110eda4: callq  0x00007fb2c106cfe0  ;   {runtime_call}
  0x00007fb2c110eda9: mov    %rsp,-0x28(%rsp)
  0x00007fb2c110edae: sub    $0x80,%rsp
  0x00007fb2c110edb5: mov    %rax,0x78(%rsp)
  0x00007fb2c110edba: mov    %rcx,0x70(%rsp)
  0x00007fb2c110edbf: mov    %rdx,0x68(%rsp)
  0x00007fb2c110edc4: mov    %rbx,0x60(%rsp)
  0x00007fb2c110edc9: mov    %rbp,0x50(%rsp)
  0x00007fb2c110edce: mov    %rsi,0x48(%rsp)
  0x00007fb2c110edd3: mov    %rdi,0x40(%rsp)
  0x00007fb2c110edd8: mov    %r8,0x38(%rsp)
  0x00007fb2c110eddd: mov    %r9,0x30(%rsp)
  0x00007fb2c110ede2: mov    %r10,0x28(%rsp)
  0x00007fb2c110ede7: mov    %r11,0x20(%rsp)
  0x00007fb2c110edec: mov    %r12,0x18(%rsp)
  0x00007fb2c110edf1: mov    %r13,0x10(%rsp)
  0x00007fb2c110edf6: mov    %r14,0x8(%rsp)
  0x00007fb2c110edfb: mov    %r15,(%rsp)
  0x00007fb2c110edff: movabs $0x7fb2d6f4df36,%rdi  ;   {external_word}
  0x00007fb2c110ee09: movabs $0x7fb2c110eda9,%rsi  ;   {internal_word}
  0x00007fb2c110ee13: mov    %rsp,%rdx
  0x00007fb2c110ee16: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c110ee1a: callq  0x00007fb2d6c79990  ;   {runtime_call}
  0x00007fb2c110ee1f: hlt    
[Deopt Handler Code]
  0x00007fb2c110ee20: movabs $0x7fb2c110ee20,%r10  ;   {section_word}
  0x00007fb2c110ee2a: push   %r10
  0x00007fb2c110ee2c: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c110ee31: hlt    
  0x00007fb2c110ee32: hlt    
  0x00007fb2c110ee33: hlt    
  0x00007fb2c110ee34: hlt    
  0x00007fb2c110ee35: hlt    
  0x00007fb2c110ee36: hlt    
  0x00007fb2c110ee37: hlt    
<nmethod compile_id='12' compiler='C1' level='3' entry='0x00007fb2c110e6e0' size='3456' address='0x00007fb2c110e510' relocation_offset='296' insts_offset='464' stub_offset='2128' scopes_data_offset='2384' scopes_pcs_offset='2792' dependencies_offset='3416' nul_chk_table_offset='3424' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='263' iicount='263' stamp='0.090'/>
<writer thread='140406105003776'/>
[Loaded java.security.AllPermission from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.UnresolvedPermission from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.BasicPermissionCollection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140404518676224'/>
Decoding compiled method 0x00007fb2c110f2d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fb2bd39f208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8:r8     = &apos;[C&apos;
  # parm3:    r9        = int
  #           [sp+0x70]  (sp of caller)
  0x00007fb2c110f480: mov    0x8(%rsi),%r10d
  0x00007fb2c110f484: shl    $0x3,%r10
  0x00007fb2c110f488: cmp    %rax,%r10
  0x00007fb2c110f48b: jne    0x00007fb2c1045e20  ;   {runtime_call}
  0x00007fb2c110f491: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c110f49c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb2c110f4a0: mov    %eax,-0x14000(%rsp)
  0x00007fb2c110f4a7: push   %rbp
  0x00007fb2c110f4a8: sub    $0x60,%rsp
  0x00007fb2c110f4ac: mov    %rdx,%rdi
  0x00007fb2c110f4af: movabs $0x7fb2bd5b9fd0,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd39f208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110f4b9: mov    0xdc(%rdx),%ebx
  0x00007fb2c110f4bf: add    $0x8,%ebx
  0x00007fb2c110f4c2: mov    %ebx,0xdc(%rdx)
  0x00007fb2c110f4c8: movabs $0x7fb2bd39f208,%rdx  ;   {metadata({method} {0x00007fb2bd39f208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110f4d2: and    $0x1ff8,%ebx
  0x00007fb2c110f4d8: cmp    $0x0,%ebx
  0x00007fb2c110f4db: je     0x00007fb2c110f706  ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 817)

  0x00007fb2c110f4e1: cmp    $0x0,%edi
  0x00007fb2c110f4e4: movabs $0x7fb2bd5b9fd0,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd39f208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110f4ee: movabs $0x108,%rbx
  0x00007fb2c110f4f8: jge    0x00007fb2c110f508
  0x00007fb2c110f4fe: movabs $0x118,%rbx
  0x00007fb2c110f508: mov    (%rdx,%rbx,1),%rax
  0x00007fb2c110f50c: lea    0x1(%rax),%rax
  0x00007fb2c110f510: mov    %rax,(%rdx,%rbx,1)
  0x00007fb2c110f514: jl     0x00007fb2c110f6c6  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x00007fb2c110f51a: mov    0xc(%rsi),%esi
  0x00007fb2c110f51d: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x00007fb2c110f521: mov    0xc(%rsi),%edx     ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x00007fb2c110f71d
  0x00007fb2c110f524: cmp    %edx,%ecx
  0x00007fb2c110f526: movabs $0x7fb2bd5b9fd0,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd39f208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110f530: movabs $0x138,%rbx
  0x00007fb2c110f53a: jle    0x00007fb2c110f54a
  0x00007fb2c110f540: movabs $0x148,%rbx
  0x00007fb2c110f54a: mov    (%rdx,%rbx,1),%rax
  0x00007fb2c110f54e: lea    0x1(%rax),%rax
  0x00007fb2c110f552: mov    %rax,(%rdx,%rbx,1)
  0x00007fb2c110f556: jg     0x00007fb2c110f686  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x00007fb2c110f55c: cmp    %ecx,%edi
  0x00007fb2c110f55e: movabs $0x7fb2bd5b9fd0,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd39f208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110f568: movabs $0x168,%rbx
  0x00007fb2c110f572: jle    0x00007fb2c110f582
  0x00007fb2c110f578: movabs $0x178,%rbx
  0x00007fb2c110f582: mov    (%rdx,%rbx,1),%rax
  0x00007fb2c110f586: lea    0x1(%rax),%rax
  0x00007fb2c110f58a: mov    %rax,(%rdx,%rbx,1)
  0x00007fb2c110f58e: jg     0x00007fb2c110f63c  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x00007fb2c110f594: movabs $0x7fb2bd5b9fd0,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd39f208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110f59e: addq   $0x1,0x198(%rdx)
  0x00007fb2c110f5a6: mov    %rcx,%rbx
  0x00007fb2c110f5a9: sub    %edi,%ebx
  0x00007fb2c110f5ab: mov    %rdi,%rdx
  0x00007fb2c110f5ae: mov    %r8,%rcx
  0x00007fb2c110f5b1: mov    %r9,%r8
  0x00007fb2c110f5b4: mov    %rbx,%r9
  0x00007fb2c110f5b7: test   %rcx,%rcx
  0x00007fb2c110f5ba: je     0x00007fb2c110f722
  0x00007fb2c110f5c0: test   %edx,%edx
  0x00007fb2c110f5c2: jl     0x00007fb2c110f722
  0x00007fb2c110f5c8: test   %r8d,%r8d
  0x00007fb2c110f5cb: jl     0x00007fb2c110f722
  0x00007fb2c110f5d1: lea    (%rdx,%r9,1),%rdi
  0x00007fb2c110f5d5: cmp    0xc(%rsi),%edi
  0x00007fb2c110f5d8: ja     0x00007fb2c110f722
  0x00007fb2c110f5de: lea    (%r8,%r9,1),%rdi
  0x00007fb2c110f5e2: cmp    0xc(%rcx),%edi
  0x00007fb2c110f5e5: ja     0x00007fb2c110f722
  0x00007fb2c110f5eb: test   %r9d,%r9d
  0x00007fb2c110f5ee: jl     0x00007fb2c110f722
  0x00007fb2c110f5f4: je     0x00007fb2c110f630
  0x00007fb2c110f5fa: movslq %edx,%rdx
  0x00007fb2c110f5fd: movslq %r8d,%r8
  0x00007fb2c110f600: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007fb2c110f605: lea    0x10(%rcx,%r8,2),%rsi
  0x00007fb2c110f60a: mov    %r9,%rdx
  0x00007fb2c110f60d: test   $0xf,%esp
  0x00007fb2c110f613: je     0x00007fb2c110f62b
  0x00007fb2c110f619: sub    $0x8,%rsp
  0x00007fb2c110f61d: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x00007fb2c110f622: add    $0x8,%rsp
  0x00007fb2c110f626: jmpq   0x00007fb2c110f630
  0x00007fb2c110f62b: callq  Stub::jshort_arraycopy  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {runtime_call}
  0x00007fb2c110f630: add    $0x60,%rsp
  0x00007fb2c110f634: pop    %rbp
  0x00007fb2c110f635: test   %eax,0x16f45ac5(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c110f63b: retq                      ;*return
                                                ; - java.lang.String::getChars@61 (line 827)

  0x00007fb2c110f63c: nopl   0x0(%rax)
  0x00007fb2c110f640: jmpq   0x00007fb2c110f740  ;   {no_reloc}
  0x00007fb2c110f645: add    %al,(%rax)
  0x00007fb2c110f647: add    %al,(%rax)
  0x00007fb2c110f649: add    %ch,%cl
  0x00007fb2c110f64b: sti    
  0x00007fb2c110f64c: add    %al,(%rax)
  0x00007fb2c110f64e: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@36 (line 824)

  0x00007fb2c110f651: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00007fb2bd39f208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110f654: rcrb   0x7fb2bd5b(%rdi)
  0x00007fb2c110f65a: add    %al,(%rax)
  0x00007fb2c110f65c: addq   $0x1,0x188(%rsi)
  0x00007fb2c110f664: sub    %edi,%ecx
  0x00007fb2c110f666: mov    %rcx,%rdx
  0x00007fb2c110f669: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)

  0x00007fb2c110f66c: mov    %rax,0x38(%rsp)
  0x00007fb2c110f671: nop
  0x00007fb2c110f672: nop
  0x00007fb2c110f673: nop
  0x00007fb2c110f674: nop
  0x00007fb2c110f675: nop
  0x00007fb2c110f676: nop
  0x00007fb2c110f677: callq  0x00007fb2c1046020  ; OopMap{[56]=Oop off=508}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x00007fb2c110f67c: mov    0x38(%rsp),%rax
  0x00007fb2c110f681: jmpq   0x00007fb2c110f7ce  ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x00007fb2c110f686: xchg   %ax,%ax
  0x00007fb2c110f688: jmpq   0x00007fb2c110f766  ;   {no_reloc}
  0x00007fb2c110f68d: add    %al,(%rax)
  0x00007fb2c110f68f: add    %al,(%rax)
  0x00007fb2c110f691: add    %ch,%cl
  0x00007fb2c110f693: flds   (%rax)
  0x00007fb2c110f695: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@22 (line 821)

  0x00007fb2c110f697: mov    %rax,%rdx
  0x00007fb2c110f69a: movabs $0x7fb2bd5b9fd0,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd39f208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110f6a4: addq   $0x1,0x158(%rsi)
  0x00007fb2c110f6ac: mov    %rcx,%rdx
  0x00007fb2c110f6af: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)

  0x00007fb2c110f6b2: mov    %rax,0x40(%rsp)
  0x00007fb2c110f6b7: callq  0x00007fb2c1046020  ; OopMap{[64]=Oop off=572}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x00007fb2c110f6bc: mov    0x40(%rsp),%rax
  0x00007fb2c110f6c1: jmpq   0x00007fb2c110f7ce  ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x00007fb2c110f6c6: xchg   %ax,%ax
  0x00007fb2c110f6c8: jmpq   0x00007fb2c110f78c  ;   {no_reloc}
  0x00007fb2c110f6cd: add    %al,(%rax)
  0x00007fb2c110f6cf: add    %al,(%rax)
  0x00007fb2c110f6d1: add    %ch,%cl
  0x00007fb2c110f6d3: mov    $0x48000000,%edi   ;*new  ; - java.lang.String::getChars@4 (line 818)

  0x00007fb2c110f6d8: mov    %eax,%edx
  0x00007fb2c110f6da: movabs $0x7fb2bd5b9fd0,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd39f208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110f6e4: addq   $0x1,0x128(%rsi)
  0x00007fb2c110f6ec: mov    %rdi,%rdx
  0x00007fb2c110f6ef: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)

  0x00007fb2c110f6f2: mov    %rax,0x48(%rsp)
  0x00007fb2c110f6f7: callq  0x00007fb2c1046020  ; OopMap{[72]=Oop off=636}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x00007fb2c110f6fc: mov    0x48(%rsp),%rax
  0x00007fb2c110f701: jmpq   0x00007fb2c110f7ce
  0x00007fb2c110f706: mov    %rdx,0x8(%rsp)
  0x00007fb2c110f70b: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c110f713: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop r8=Oop off=664}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x00007fb2c110f718: jmpq   0x00007fb2c110f4e1
  0x00007fb2c110f71d: callq  0x00007fb2c106ee40  ; OopMap{r8=Oop rsi=Oop off=674}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x00007fb2c110f722: nop
  0x00007fb2c110f723: nop
  0x00007fb2c110f724: nop
  0x00007fb2c110f725: nop
  0x00007fb2c110f726: nop
  0x00007fb2c110f727: callq  0x00007fb2c1046420  ; OopMap{off=684}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x00007fb2c110f72c: jmpq   0x00007fb2c110f630
  0x00007fb2c110f731: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb2c110f73b: mov    $0xa050f00,%eax
  0x00007fb2c110f740: callq  0x00007fb2c10ffe60  ; OopMap{off=709}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x00007fb2c110f745: jmpq   0x00007fb2c110f640
  0x00007fb2c110f74a: mov    %rdx,%rdx
  0x00007fb2c110f74d: callq  0x00007fb2c106e920  ; OopMap{off=722}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x00007fb2c110f752: jmpq   0x00007fb2c110f64f
  0x00007fb2c110f757: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb2c110f761: mov    $0xa050f00,%eax
  0x00007fb2c110f766: callq  0x00007fb2c10ffe60  ; OopMap{off=747}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x00007fb2c110f76b: jmpq   0x00007fb2c110f688
  0x00007fb2c110f770: mov    %rdx,%rdx
  0x00007fb2c110f773: callq  0x00007fb2c106e920  ; OopMap{off=760}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x00007fb2c110f778: jmpq   0x00007fb2c110f697
  0x00007fb2c110f77d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb2c110f787: mov    $0xa050f00,%eax
  0x00007fb2c110f78c: callq  0x00007fb2c10ffe60  ; OopMap{off=785}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x00007fb2c110f791: jmpq   0x00007fb2c110f6c8
  0x00007fb2c110f796: mov    %rdx,%rdx
  0x00007fb2c110f799: callq  0x00007fb2c106e920  ; OopMap{off=798}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x00007fb2c110f79e: jmpq   0x00007fb2c110f6d7
  0x00007fb2c110f7a3: nop
  0x00007fb2c110f7a4: nop
  0x00007fb2c110f7a5: mov    0x2a8(%r15),%rax
  0x00007fb2c110f7ac: movabs $0x0,%r10
  0x00007fb2c110f7b6: mov    %r10,0x2a8(%r15)
  0x00007fb2c110f7bd: movabs $0x0,%r10
  0x00007fb2c110f7c7: mov    %r10,0x2b0(%r15)
  0x00007fb2c110f7ce: add    $0x60,%rsp
  0x00007fb2c110f7d2: pop    %rbp
  0x00007fb2c110f7d3: jmpq   0x00007fb2c106c3e0  ;   {runtime_call}
  0x00007fb2c110f7d8: hlt    
  0x00007fb2c110f7d9: hlt    
  0x00007fb2c110f7da: hlt    
  0x00007fb2c110f7db: hlt    
  0x00007fb2c110f7dc: hlt    
  0x00007fb2c110f7dd: hlt    
  0x00007fb2c110f7de: hlt    
  0x00007fb2c110f7df: hlt    
[Stub Code]
  0x00007fb2c110f7e0: nop                       ;   {no_reloc}
  0x00007fb2c110f7e1: nop
  0x00007fb2c110f7e2: nop
  0x00007fb2c110f7e3: nop
  0x00007fb2c110f7e4: nop
  0x00007fb2c110f7e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c110f7ef: jmpq   0x00007fb2c110f7ef  ;   {runtime_call}
  0x00007fb2c110f7f4: nop
  0x00007fb2c110f7f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c110f7ff: jmpq   0x00007fb2c110f7ff  ;   {runtime_call}
  0x00007fb2c110f804: nop
  0x00007fb2c110f805: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c110f80f: jmpq   0x00007fb2c110f80f  ;   {runtime_call}
  0x00007fb2c110f814: nop
  0x00007fb2c110f815: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c110f81f: jmpq   0x00007fb2c110f81f  ;   {runtime_call}
[Exception Handler]
  0x00007fb2c110f824: callq  0x00007fb2c106cfe0  ;   {runtime_call}
  0x00007fb2c110f829: mov    %rsp,-0x28(%rsp)
  0x00007fb2c110f82e: sub    $0x80,%rsp
  0x00007fb2c110f835: mov    %rax,0x78(%rsp)
  0x00007fb2c110f83a: mov    %rcx,0x70(%rsp)
  0x00007fb2c110f83f: mov    %rdx,0x68(%rsp)
  0x00007fb2c110f844: mov    %rbx,0x60(%rsp)
  0x00007fb2c110f849: mov    %rbp,0x50(%rsp)
  0x00007fb2c110f84e: mov    %rsi,0x48(%rsp)
  0x00007fb2c110f853: mov    %rdi,0x40(%rsp)
  0x00007fb2c110f858: mov    %r8,0x38(%rsp)
  0x00007fb2c110f85d: mov    %r9,0x30(%rsp)
  0x00007fb2c110f862: mov    %r10,0x28(%rsp)
  0x00007fb2c110f867: mov    %r11,0x20(%rsp)
  0x00007fb2c110f86c: mov    %r12,0x18(%rsp)
  0x00007fb2c110f871: mov    %r13,0x10(%rsp)
  0x00007fb2c110f876: mov    %r14,0x8(%rsp)
  0x00007fb2c110f87b: mov    %r15,(%rsp)
  0x00007fb2c110f87f: movabs $0x7fb2d6f4df36,%rdi  ;   {external_word}
  0x00007fb2c110f889: movabs $0x7fb2c110f829,%rsi  ;   {internal_word}
  0x00007fb2c110f893: mov    %rsp,%rdx
  0x00007fb2c110f896: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c110f89a: callq  0x00007fb2d6c79990  ;   {runtime_call}
  0x00007fb2c110f89f: hlt    
[Deopt Handler Code]
  0x00007fb2c110f8a0: movabs $0x7fb2c110f8a0,%r10  ;   {section_word}
  0x00007fb2c110f8aa: push   %r10
  0x00007fb2c110f8ac: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c110f8b1: hlt    
  0x00007fb2c110f8b2: hlt    
  0x00007fb2c110f8b3: hlt    
  0x00007fb2c110f8b4: hlt    
  0x00007fb2c110f8b5: hlt    
  0x00007fb2c110f8b6: hlt    
  0x00007fb2c110f8b7: hlt    
<nmethod compile_id='11' compiler='C1' level='3' entry='0x00007fb2c110f480' size='2256' address='0x00007fb2c110f2d0' relocation_offset='296' insts_offset='432' stub_offset='1296' scopes_data_offset='1520' scopes_pcs_offset='1752' dependencies_offset='2232' nul_chk_table_offset='2240' method='java/lang/String getChars (II[CI)V' bytes='62' count='272' iicount='272' stamp='0.092'/>
<writer thread='140406105003776'/>
[Loaded com.github.marschall.charsequences.ParseUuidCompilation from file:/home/marschall/git/charsequences/target/test-classes/]
[Loaded sun.launcher.LauncherHelper$FXHelper from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Class$MethodArray from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Void from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded com.github.marschall.charsequences.CharSequences from file:/home/marschall/git/charsequences/target/classes/]
[Loaded java.lang.AssertionError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<task_queued compile_id='13' method='java/lang/String indexOf (I)I' bytes='7' count='256' iicount='256' level='3' stamp='0.093' comment='tiered' hot_count='256'/>
[Loaded java.lang.NumberFormatException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ForwardingNode from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.IndexOutOfBoundsException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140404518676224'/>
Decoding compiled method 0x00007fb2c110cf90:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fb2bd3a0098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fb2c110d100: mov    0x8(%rsi),%r10d
<writer thread='140406105003776'/>
[Loaded java.util.UUID from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140404518676224'/>
  0x00007fb2c110d104: shl    $0x3,%r10
  0x00007fb2c110d108: cmp    %rax,%r10
  0x00007fb2c110d10b: jne    0x00007fb2c1045e20  ;   {runtime_call}
  0x00007fb2c110d111: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c110d11c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb2c110d120: mov    %eax,-0x14000(%rsp)
  0x00007fb2c110d127: push   %rbp
  0x00007fb2c110d128: sub    $0x30,%rsp
  0x00007fb2c110d12c: movabs $0x7fb2bd5c8258,%rcx  ;   {metadata(method data for {method} {0x00007fb2bd3a0098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110d136: mov    0xdc(%rcx),%edi
  0x00007fb2c110d13c: add    $0x8,%edi
  0x00007fb2c110d13f: mov    %edi,0xdc(%rcx)
  0x00007fb2c110d145: movabs $0x7fb2bd3a0098,%rcx  ;   {metadata({method} {0x00007fb2bd3a0098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110d14f: and    $0x1ff8,%edi
  0x00007fb2c110d155: cmp    $0x0,%edi
  0x00007fb2c110d158: je     0x00007fb2c110d208  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x00007fb2c110d15e: mov    %rsi,%rcx
  0x00007fb2c110d161: movabs $0x7fb2bd5c8258,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd3a0098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb2c110d16b: mov    0x8(%rcx),%ecx
  0x00007fb2c110d16e: shl    $0x3,%rcx
  0x00007fb2c110d172: cmp    0x110(%rdi),%rcx
  0x00007fb2c110d179: jne    0x00007fb2c110d188
  0x00007fb2c110d17b: addq   $0x1,0x118(%rdi)
  0x00007fb2c110d183: jmpq   0x00007fb2c110d1ee
  0x00007fb2c110d188: cmp    0x120(%rdi),%rcx
  0x00007fb2c110d18f: jne    0x00007fb2c110d19e
  0x00007fb2c110d191: addq   $0x1,0x128(%rdi)
  0x00007fb2c110d199: jmpq   0x00007fb2c110d1ee
  0x00007fb2c110d19e: cmpq   $0x0,0x110(%rdi)
  0x00007fb2c110d1a9: jne    0x00007fb2c110d1c2
  0x00007fb2c110d1ab: mov    %rcx,0x110(%rdi)
  0x00007fb2c110d1b2: movq   $0x1,0x118(%rdi)
  0x00007fb2c110d1bd: jmpq   0x00007fb2c110d1ee
  0x00007fb2c110d1c2: cmpq   $0x0,0x120(%rdi)
  0x00007fb2c110d1cd: jne    0x00007fb2c110d1e6
  0x00007fb2c110d1cf: mov    %rcx,0x120(%rdi)
  0x00007fb2c110d1d6: movq   $0x1,0x128(%rdi)
  0x00007fb2c110d1e1: jmpq   0x00007fb2c110d1ee
  0x00007fb2c110d1e6: addq   $0x1,0x108(%rdi)
  0x00007fb2c110d1ee: mov    $0x0,%ecx          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x00007fb2c110d1f3: nop
  0x00007fb2c110d1f4: nop
  0x00007fb2c110d1f5: nop
  0x00007fb2c110d1f6: nop
  0x00007fb2c110d1f7: callq  0x00007fb2c1046020  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x00007fb2c110d1fc: add    $0x30,%rsp
  0x00007fb2c110d200: pop    %rbp
  0x00007fb2c110d201: test   %eax,0x16f47ef9(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c110d207: retq   
  0x00007fb2c110d208: mov    %rcx,0x8(%rsp)
  0x00007fb2c110d20d: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c110d215: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x00007fb2c110d21a: jmpq   0x00007fb2c110d15e
  0x00007fb2c110d21f: nop
  0x00007fb2c110d220: nop
  0x00007fb2c110d221: mov    0x2a8(%r15),%rax
  0x00007fb2c110d228: movabs $0x0,%r10
  0x00007fb2c110d232: mov    %r10,0x2a8(%r15)
  0x00007fb2c110d239: movabs $0x0,%r10
  0x00007fb2c110d243: mov    %r10,0x2b0(%r15)
  0x00007fb2c110d24a: add    $0x30,%rsp
  0x00007fb2c110d24e: pop    %rbp
  0x00007fb2c110d24f: jmpq   0x00007fb2c106c3e0  ;   {runtime_call}
  0x00007fb2c110d254: hlt    
  0x00007fb2c110d255: hlt    
  0x00007fb2c110d256: hlt    
  0x00007fb2c110d257: hlt    
  0x00007fb2c110d258: hlt    
  0x00007fb2c110d259: hlt    
  0x00007fb2c110d25a: hlt    
  0x00007fb2c110d25b: hlt    
  0x00007fb2c110d25c: hlt    
  0x00007fb2c110d25d: hlt    
  0x00007fb2c110d25e: hlt    
  0x00007fb2c110d25f: hlt    
[Stub Code]
  0x00007fb2c110d260: nop                       ;   {no_reloc}
  0x00007fb2c110d261: nop
  0x00007fb2c110d262: nop
  0x00007fb2c110d263: nop
  0x00007fb2c110d264: nop
  0x00007fb2c110d265: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c110d26f: jmpq   0x00007fb2c110d26f  ;   {runtime_call}
[Exception Handler]
  0x00007fb2c110d274: callq  0x00007fb2c106cfe0  ;   {runtime_call}
  0x00007fb2c110d279: mov    %rsp,-0x28(%rsp)
  0x00007fb2c110d27e: sub    $0x80,%rsp
  0x00007fb2c110d285: mov    %rax,0x78(%rsp)
  0x00007fb2c110d28a: mov    %rcx,0x70(%rsp)
  0x00007fb2c110d28f: mov    %rdx,0x68(%rsp)
  0x00007fb2c110d294: mov    %rbx,0x60(%rsp)
  0x00007fb2c110d299: mov    %rbp,0x50(%rsp)
  0x00007fb2c110d29e: mov    %rsi,0x48(%rsp)
  0x00007fb2c110d2a3: mov    %rdi,0x40(%rsp)
  0x00007fb2c110d2a8: mov    %r8,0x38(%rsp)
  0x00007fb2c110d2ad: mov    %r9,0x30(%rsp)
  0x00007fb2c110d2b2: mov    %r10,0x28(%rsp)
  0x00007fb2c110d2b7: mov    %r11,0x20(%rsp)
  0x00007fb2c110d2bc: mov    %r12,0x18(%rsp)
  0x00007fb2c110d2c1: mov    %r13,0x10(%rsp)
  0x00007fb2c110d2c6: mov    %r14,0x8(%rsp)
  0x00007fb2c110d2cb: mov    %r15,(%rsp)
  0x00007fb2c110d2cf: movabs $0x7fb2d6f4df36,%rdi  ;   {external_word}
  0x00007fb2c110d2d9: movabs $0x7fb2c110d279,%rsi  ;   {internal_word}
  0x00007fb2c110d2e3: mov    %rsp,%rdx
  0x00007fb2c110d2e6: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c110d2ea: callq  0x00007fb2d6c79990  ;   {runtime_call}
  0x00007fb2c110d2ef: hlt    
[Deopt Handler Code]
  0x00007fb2c110d2f0: movabs $0x7fb2c110d2f0,%r10  ;   {section_word}
  0x00007fb2c110d2fa: push   %r10
  0x00007fb2c110d2fc: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c110d301: hlt    
  0x00007fb2c110d302: hlt    
  0x00007fb2c110d303: hlt    
  0x00007fb2c110d304: hlt    
  0x00007fb2c110d305: hlt    
  0x00007fb2c110d306: hlt    
  0x00007fb2c110d307: hlt    
<nmethod compile_id='13' compiler='C1' level='3' entry='0x00007fb2c110d100' size='1040' address='0x00007fb2c110cf90' relocation_offset='296' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String indexOf (I)I' bytes='7' count='266' iicount='266' stamp='0.112'/>
<writer thread='140406105003776'/>
<task_queued compile_id='14' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='65' count='256' iicount='256' level='3' stamp='0.112' comment='tiered' hot_count='256'/>
<task_queued compile_id='15' method='java/lang/String charAt (I)C' bytes='29' count='5632' iicount='5632' stamp='0.112' comment='tiered' hot_count='5632'/>
<writer thread='140404518676224'/>
Decoding compiled method 0x00007fb2c110fbd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb2bd79d3d8} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;
  # parm0:    rsi       = char
  #           [sp+0x40]  (sp of caller)
  0x00007fb2c110fd60: mov    %eax,-0x14000(%rsp)
  0x00007fb2c110fd67: push   %rbp
  0x00007fb2c110fd68: sub    $0x30,%rsp
  0x00007fb2c110fd6c: movabs $0x7fb2bd79d830,%rax  ;   {metadata(method data for {method} {0x00007fb2bd79d3d8} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c110fd76: mov    0xdc(%rax),%edx
  0x00007fb2c110fd7c: add    $0x8,%edx
  0x00007fb2c110fd7f: mov    %edx,0xdc(%rax)
  0x00007fb2c110fd85: movabs $0x7fb2bd79d3d8,%rax  ;   {metadata({method} {0x00007fb2bd79d3d8} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c110fd8f: and    $0x1ff8,%edx
  0x00007fb2c110fd95: cmp    $0x0,%edx
  0x00007fb2c110fd98: je     0x00007fb2c110ffa6  ;*iload_0
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@0 (line 492)

  0x00007fb2c110fd9e: cmp    $0x30,%esi
  0x00007fb2c110fda1: movabs $0x7fb2bd79d830,%rax  ;   {metadata(method data for {method} {0x00007fb2bd79d3d8} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c110fdab: movabs $0x108,%rdx
  0x00007fb2c110fdb5: jl     0x00007fb2c110fdc5
  0x00007fb2c110fdbb: movabs $0x118,%rdx
  0x00007fb2c110fdc5: mov    (%rax,%rdx,1),%rdi
  0x00007fb2c110fdc9: lea    0x1(%rdi),%rdi
  0x00007fb2c110fdcd: mov    %rdi,(%rax,%rdx,1)
  0x00007fb2c110fdd1: jl     0x00007fb2c110fe10  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)

  0x00007fb2c110fdd7: cmp    $0x39,%esi
  0x00007fb2c110fdda: movabs $0x7fb2bd79d830,%rax  ;   {metadata(method data for {method} {0x00007fb2bd79d3d8} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c110fde4: movabs $0x128,%rdx
  0x00007fb2c110fdee: jg     0x00007fb2c110fdfe
  0x00007fb2c110fdf4: movabs $0x138,%rdx
  0x00007fb2c110fdfe: mov    (%rax,%rdx,1),%rdi
  0x00007fb2c110fe02: lea    0x1(%rdi),%rdi
  0x00007fb2c110fe06: mov    %rdi,(%rax,%rdx,1)
  0x00007fb2c110fe0a: jle    0x00007fb2c110ff1e  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)

  0x00007fb2c110fe10: cmp    $0x61,%esi
  0x00007fb2c110fe13: movabs $0x7fb2bd79d830,%rax  ;   {metadata(method data for {method} {0x00007fb2bd79d3d8} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c110fe1d: movabs $0x148,%rdx
  0x00007fb2c110fe27: jl     0x00007fb2c110fe37
  0x00007fb2c110fe2d: movabs $0x158,%rdx
  0x00007fb2c110fe37: mov    (%rax,%rdx,1),%rdi
  0x00007fb2c110fe3b: lea    0x1(%rdi),%rdi
  0x00007fb2c110fe3f: mov    %rdi,(%rax,%rdx,1)
  0x00007fb2c110fe43: jl     0x00007fb2c110fe82  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)

  0x00007fb2c110fe49: cmp    $0x66,%esi
  0x00007fb2c110fe4c: movabs $0x7fb2bd79d830,%rax  ;   {metadata(method data for {method} {0x00007fb2bd79d3d8} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c110fe56: movabs $0x168,%rdx
  0x00007fb2c110fe60: jg     0x00007fb2c110fe70
  0x00007fb2c110fe66: movabs $0x178,%rdx
  0x00007fb2c110fe70: mov    (%rax,%rdx,1),%rdi
  0x00007fb2c110fe74: lea    0x1(%rdi),%rdi
  0x00007fb2c110fe78: mov    %rdi,(%rax,%rdx,1)
  0x00007fb2c110fe7c: jle    0x00007fb2c110ff09  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)

  0x00007fb2c110fe82: cmp    $0x41,%esi
  0x00007fb2c110fe85: movabs $0x7fb2bd79d830,%rax  ;   {metadata(method data for {method} {0x00007fb2bd79d3d8} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c110fe8f: movabs $0x188,%rdx
  0x00007fb2c110fe99: jl     0x00007fb2c110fea9
  0x00007fb2c110fe9f: movabs $0x198,%rdx
  0x00007fb2c110fea9: mov    (%rax,%rdx,1),%rdi
  0x00007fb2c110fead: lea    0x1(%rdi),%rdi
  0x00007fb2c110feb1: mov    %rdi,(%rax,%rdx,1)
  0x00007fb2c110feb5: jl     0x00007fb2c110ff30  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@40 (line 498)

  0x00007fb2c110febb: cmp    $0x46,%esi
  0x00007fb2c110febe: movabs $0x7fb2bd79d830,%rax  ;   {metadata(method data for {method} {0x00007fb2bd79d3d8} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c110fec8: movabs $0x1a8,%rdx
  0x00007fb2c110fed2: jg     0x00007fb2c110fee2
  0x00007fb2c110fed8: movabs $0x1b8,%rdx
  0x00007fb2c110fee2: mov    (%rax,%rdx,1),%rdi
  0x00007fb2c110fee6: lea    0x1(%rdi),%rdi
  0x00007fb2c110feea: mov    %rdi,(%rax,%rdx,1)
  0x00007fb2c110feee: jg     0x00007fb2c110ff30  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@46 (line 498)

  0x00007fb2c110fef4: sub    $0x41,%esi
  0x00007fb2c110fef7: add    $0xa,%esi
  0x00007fb2c110fefa: mov    %rsi,%rax
  0x00007fb2c110fefd: add    $0x30,%rsp
  0x00007fb2c110ff01: pop    %rbp
  0x00007fb2c110ff02: test   %eax,0x16f451f8(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c110ff08: retq                      ;*ireturn
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@56 (line 499)

  0x00007fb2c110ff09: sub    $0x61,%esi
  0x00007fb2c110ff0c: add    $0xa,%esi
  0x00007fb2c110ff0f: mov    %rsi,%rax
  0x00007fb2c110ff12: add    $0x30,%rsp
  0x00007fb2c110ff16: pop    %rbp
  0x00007fb2c110ff17: test   %eax,0x16f451e3(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c110ff1d: retq                      ;*ireturn
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@36 (line 496)

  0x00007fb2c110ff1e: sub    $0x30,%esi
  0x00007fb2c110ff21: mov    %rsi,%rax
  0x00007fb2c110ff24: add    $0x30,%rsp
  0x00007fb2c110ff28: pop    %rbp
  0x00007fb2c110ff29: test   %eax,0x16f451d1(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c110ff2f: retq                      ;*ireturn
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@16 (line 493)

  0x00007fb2c110ff30: jmpq   0x00007fb2c110ffcc  ;   {no_reloc}
  0x00007fb2c110ff35: add    %al,(%rax)
  0x00007fb2c110ff37: add    %al,(%rax)
  0x00007fb2c110ff39: add    %cl,-0x75(%rcx)
  0x00007fb2c110ff3c: rex.RXB (bad) 
  0x00007fb2c110ff3e: lea    0x20(%rax),%rdi
  0x00007fb2c110ff42: cmp    0x70(%r15),%rdi
  0x00007fb2c110ff46: ja     0x00007fb2c110ffd6
  0x00007fb2c110ff4c: mov    %rdi,0x60(%r15)
  0x00007fb2c110ff50: mov    0xa8(%rdx),%rcx
  0x00007fb2c110ff57: mov    %rcx,(%rax)
  0x00007fb2c110ff5a: mov    %rdx,%rcx
  0x00007fb2c110ff5d: shr    $0x3,%rcx
  0x00007fb2c110ff61: mov    %ecx,0x8(%rax)
  0x00007fb2c110ff64: xor    %rcx,%rcx
  0x00007fb2c110ff67: mov    %ecx,0xc(%rax)
  0x00007fb2c110ff6a: xor    %rcx,%rcx
  0x00007fb2c110ff6d: mov    %rcx,0x10(%rax)
  0x00007fb2c110ff71: mov    %rcx,0x18(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::hexDigit@57 (line 501)

  0x00007fb2c110ff75: mov    %rax,%rsi
  0x00007fb2c110ff78: movabs $0x7fb2bd79d830,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd79d3d8} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c110ff82: addq   $0x1,0x1c8(%rdi)
  0x00007fb2c110ff8a: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@61 (line 501)

  0x00007fb2c110ff8d: mov    %rax,0x20(%rsp)
  0x00007fb2c110ff92: nop
  0x00007fb2c110ff93: nop
  0x00007fb2c110ff94: nop
  0x00007fb2c110ff95: nop
  0x00007fb2c110ff96: nop
  0x00007fb2c110ff97: callq  0x00007fb2c1046020  ; OopMap{[32]=Oop off=572}
                                                ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@61 (line 501)
                                                ;   {optimized virtual_call}
  0x00007fb2c110ff9c: mov    0x20(%rsp),%rax
  0x00007fb2c110ffa1: jmpq   0x00007fb2c111000b
  0x00007fb2c110ffa6: mov    %rax,0x8(%rsp)
  0x00007fb2c110ffab: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c110ffb3: callq  0x00007fb2c10feb20  ; OopMap{off=600}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@-1 (line 492)
                                                ;   {runtime_call}
  0x00007fb2c110ffb8: jmpq   0x00007fb2c110fd9e
  0x00007fb2c110ffbd: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb2c110ffc7: mov    $0xa050f00,%eax
  0x00007fb2c110ffcc: callq  0x00007fb2c10ffe60  ; OopMap{off=625}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::hexDigit@57 (line 501)
                                                ;   {runtime_call}
  0x00007fb2c110ffd1: jmpq   0x00007fb2c110ff30
  0x00007fb2c110ffd6: mov    %rdx,%rdx
  0x00007fb2c110ffd9: callq  0x00007fb2c106e520  ; OopMap{off=638}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::hexDigit@57 (line 501)
                                                ;   {runtime_call}
  0x00007fb2c110ffde: jmp    0x00007fb2c110ff75
  0x00007fb2c110ffe0: nop
  0x00007fb2c110ffe1: nop
  0x00007fb2c110ffe2: mov    0x2a8(%r15),%rax
  0x00007fb2c110ffe9: movabs $0x0,%r10
  0x00007fb2c110fff3: mov    %r10,0x2a8(%r15)
  0x00007fb2c110fffa: movabs $0x0,%r10
  0x00007fb2c1110004: mov    %r10,0x2b0(%r15)
  0x00007fb2c111000b: add    $0x30,%rsp
  0x00007fb2c111000f: pop    %rbp
  0x00007fb2c1110010: jmpq   0x00007fb2c106c3e0  ;   {runtime_call}
  0x00007fb2c1110015: hlt    
  0x00007fb2c1110016: hlt    
  0x00007fb2c1110017: hlt    
  0x00007fb2c1110018: hlt    
  0x00007fb2c1110019: hlt    
  0x00007fb2c111001a: hlt    
  0x00007fb2c111001b: hlt    
  0x00007fb2c111001c: hlt    
  0x00007fb2c111001d: hlt    
  0x00007fb2c111001e: hlt    
  0x00007fb2c111001f: hlt    
[Stub Code]
  0x00007fb2c1110020: nop                       ;   {no_reloc}
  0x00007fb2c1110021: nop
  0x00007fb2c1110022: nop
  0x00007fb2c1110023: nop
  0x00007fb2c1110024: nop
  0x00007fb2c1110025: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c111002f: jmpq   0x00007fb2c111002f  ;   {runtime_call}
[Exception Handler]
  0x00007fb2c1110034: callq  0x00007fb2c106cfe0  ;   {runtime_call}
  0x00007fb2c1110039: mov    %rsp,-0x28(%rsp)
  0x00007fb2c111003e: sub    $0x80,%rsp
  0x00007fb2c1110045: mov    %rax,0x78(%rsp)
  0x00007fb2c111004a: mov    %rcx,0x70(%rsp)
  0x00007fb2c111004f: mov    %rdx,0x68(%rsp)
  0x00007fb2c1110054: mov    %rbx,0x60(%rsp)
  0x00007fb2c1110059: mov    %rbp,0x50(%rsp)
  0x00007fb2c111005e: mov    %rsi,0x48(%rsp)
  0x00007fb2c1110063: mov    %rdi,0x40(%rsp)
  0x00007fb2c1110068: mov    %r8,0x38(%rsp)
  0x00007fb2c111006d: mov    %r9,0x30(%rsp)
  0x00007fb2c1110072: mov    %r10,0x28(%rsp)
  0x00007fb2c1110077: mov    %r11,0x20(%rsp)
  0x00007fb2c111007c: mov    %r12,0x18(%rsp)
  0x00007fb2c1110081: mov    %r13,0x10(%rsp)
  0x00007fb2c1110086: mov    %r14,0x8(%rsp)
  0x00007fb2c111008b: mov    %r15,(%rsp)
  0x00007fb2c111008f: movabs $0x7fb2d6f4df36,%rdi  ;   {external_word}
  0x00007fb2c1110099: movabs $0x7fb2c1110039,%rsi  ;   {internal_word}
  0x00007fb2c11100a3: mov    %rsp,%rdx
  0x00007fb2c11100a6: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c11100aa: callq  0x00007fb2d6c79990  ;   {runtime_call}
  0x00007fb2c11100af: hlt    
[Deopt Handler Code]
  0x00007fb2c11100b0: movabs $0x7fb2c11100b0,%r10  ;   {section_word}
  0x00007fb2c11100ba: push   %r10
  0x00007fb2c11100bc: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c11100c1: hlt    
  0x00007fb2c11100c2: hlt    
  0x00007fb2c11100c3: hlt    
  0x00007fb2c11100c4: hlt    
  0x00007fb2c11100c5: hlt    
  0x00007fb2c11100c6: hlt    
  0x00007fb2c11100c7: hlt    
<nmethod compile_id='14' compiler='C1' level='3' entry='0x00007fb2c110fd60' size='1688' address='0x00007fb2c110fbd0' relocation_offset='296' insts_offset='400' stub_offset='1104' scopes_data_offset='1288' scopes_pcs_offset='1392' dependencies_offset='1680' oops_offset='1272' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='65' count='4064' iicount='4064' stamp='0.114'/>
<writer thread='140404521834240'/>
Decoding compiled method 0x00007fb2c1112f50:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fb2bd39edb0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x00007fb2c11130a0: mov    0x8(%rsi),%r10d
  0x00007fb2c11130a4: shl    $0x3,%r10
  0x00007fb2c11130a8: cmp    %r10,%rax
  0x00007fb2c11130ab: jne    0x00007fb2c1045e20  ;   {runtime_call}
  0x00007fb2c11130b1: data16 xchg %ax,%ax
  0x00007fb2c11130b4: nopl   0x0(%rax,%rax,1)
  0x00007fb2c11130bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb2c11130c0: mov    %eax,-0x14000(%rsp)
  0x00007fb2c11130c7: push   %rbp
  0x00007fb2c11130c8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x00007fb2c11130cc: test   %edx,%edx
  0x00007fb2c11130ce: jl     0x00007fb2c111310d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x00007fb2c11130d0: mov    0xc(%rsi),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x00007fb2c11130d4: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x00007fb2c111313d
  0x00007fb2c11130d9: cmp    %ebp,%edx
  0x00007fb2c11130db: jge    0x00007fb2c1113125  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x00007fb2c11130dd: cmp    %ebp,%edx
  0x00007fb2c11130df: jae    0x00007fb2c11130f7
  0x00007fb2c11130e1: shl    $0x3,%r10
  0x00007fb2c11130e5: movzwl 0x10(%r10,%rdx,2),%eax
  0x00007fb2c11130eb: add    $0x20,%rsp
  0x00007fb2c11130ef: pop    %rbp
  0x00007fb2c11130f0: test   %eax,0x16f41f0a(%rip)        # 0x00007fb2d8055000
                                                ;   {poll_return}
  0x00007fb2c11130f6: retq   
  0x00007fb2c11130f7: mov    $0xffffffe4,%esi
  0x00007fb2c11130fc: mov    %edx,%ebp
  0x00007fb2c11130fe: mov    %r10d,(%rsp)
  0x00007fb2c1113102: nop
  0x00007fb2c1113103: callq  0x00007fb2c10051a0  ; OopMap{[0]=NarrowOop off=104}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x00007fb2c1113108: callq  0x00007fb2d6d60a20  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x00007fb2c111310d: mov    %rsi,%rbp
  0x00007fb2c1113110: mov    %edx,0x4(%rsp)
  0x00007fb2c1113114: mov    $0xffffff65,%esi
  0x00007fb2c1113119: xchg   %ax,%ax
  0x00007fb2c111311b: callq  0x00007fb2c10051a0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x00007fb2c1113120: callq  0x00007fb2d6d60a20  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x00007fb2c1113125: mov    %rsi,(%rsp)
  0x00007fb2c1113129: mov    %edx,0xc(%rsp)
  0x00007fb2c111312d: mov    $0xffffff65,%esi
  0x00007fb2c1113132: nop
  0x00007fb2c1113133: callq  0x00007fb2c10051a0  ; OopMap{[0]=Oop off=152}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x00007fb2c1113138: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x00007fb2c111313d: mov    $0xfffffff6,%esi
  0x00007fb2c1113142: nop
  0x00007fb2c1113143: callq  0x00007fb2c10051a0  ; OopMap{off=168}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x00007fb2c1113148: callq  0x00007fb2d6d60a20  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x00007fb2c111314d: hlt    
  0x00007fb2c111314e: hlt    
  0x00007fb2c111314f: hlt    
  0x00007fb2c1113150: hlt    
  0x00007fb2c1113151: hlt    
  0x00007fb2c1113152: hlt    
  0x00007fb2c1113153: hlt    
  0x00007fb2c1113154: hlt    
  0x00007fb2c1113155: hlt    
  0x00007fb2c1113156: hlt    
  0x00007fb2c1113157: hlt    
  0x00007fb2c1113158: hlt    
  0x00007fb2c1113159: hlt    
  0x00007fb2c111315a: hlt    
  0x00007fb2c111315b: hlt    
  0x00007fb2c111315c: hlt    
  0x00007fb2c111315d: hlt    
  0x00007fb2c111315e: hlt    
  0x00007fb2c111315f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb2c1113160: jmpq   0x00007fb2c106c760  ;   {no_reloc}
[Deopt Handler Code]
  0x00007fb2c1113165: callq  0x00007fb2c111316a
  0x00007fb2c111316a: subq   $0x5,(%rsp)
  0x00007fb2c111316f: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c1113174: hlt    
  0x00007fb2c1113175: hlt    
  0x00007fb2c1113176: hlt    
  0x00007fb2c1113177: hlt    
<nmethod compile_id='15' compiler='C2' level='4' entry='0x00007fb2c11130a0' size='928' address='0x00007fb2c1112f50' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='664' dependencies_offset='904' nul_chk_table_offset='912' method='java/lang/String charAt (I)C' bytes='29' count='8489' iicount='8489' stamp='0.115'/>
<make_not_entrant thread='140404521834240' compile_id='6' compiler='C1' level='3' stamp='0.115'/>
<writer thread='140406105003776'/>
<task_queued compile_id='16' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='314' count='128' backedge_count='4064' iicount='128' level='3' stamp='0.115' comment='tiered' hot_count='128'/>
<task_queued compile_id='17' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='65' count='5632' iicount='5632' stamp='0.115' comment='tiered' hot_count='5632'/>
<task_queued compile_id='18' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='256' iicount='256' level='3' stamp='0.115' comment='tiered' hot_count='256'/>
Decoding compiled method 0x00007fb2c1112bd0:
Code:
[Entry Point]
  # {method} {0x00007fb2bd3b49c8} &apos;identityHashCode&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fb2c1112d40: mov    0x8(%rsi),%r10d
  0x00007fb2c1112d44: shl    $0x3,%r10
  0x00007fb2c1112d48: cmp    %r10,%rax
  0x00007fb2c1112d4b: je     0x00007fb2c1112d58
  0x00007fb2c1112d51: jmpq   0x00007fb2c1045e20  ;   {runtime_call}
  0x00007fb2c1112d56: xchg   %ax,%ax
[Verified Entry Point]
  0x00007fb2c1112d58: mov    %eax,-0x14000(%rsp)
  0x00007fb2c1112d5f: push   %rbp
  0x00007fb2c1112d60: mov    %rsp,%rbp
  0x00007fb2c1112d63: sub    $0x40,%rsp
  0x00007fb2c1112d67: mov    %rsi,(%rsp)
  0x00007fb2c1112d6b: cmp    $0x0,%rsi
  0x00007fb2c1112d6f: lea    (%rsp),%rdx
  0x00007fb2c1112d73: cmove  (%rsp),%rdx
  0x00007fb2c1112d78: movabs $0x670b80c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007fb2c1112d82: mov    %r14,0x30(%rsp)
  0x00007fb2c1112d87: lea    0x30(%rsp),%r14
  0x00007fb2c1112d8c: mov    %r14,%rsi          ; OopMap{[0]=Oop [48]=Oop off=79}
  0x00007fb2c1112d8f: movabs $0x7fb2c1112d8f,%r10  ;   {section_word}
  0x00007fb2c1112d99: mov    %r10,0x1e0(%r15)
  0x00007fb2c1112da0: mov    %rsp,0x1d8(%r15)
  0x00007fb2c1112da7: cmpb   $0x0,0x162e63f4(%rip)        # 0x00007fb2d73f91a2
                                                ;   {external_word}
  0x00007fb2c1112dae: je     0x00007fb2c1112de8
  0x00007fb2c1112db4: push   %rsi
  0x00007fb2c1112db5: push   %rdx
  0x00007fb2c1112db6: movabs $0x7fb2bd3b49c8,%rsi  ;   {metadata({method} {0x00007fb2bd3b49c8} &apos;identityHashCode&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/lang/System&apos;)}
  0x00007fb2c1112dc0: mov    %r15,%rdi
  0x00007fb2c1112dc3: test   $0xf,%esp
  0x00007fb2c1112dc9: je     0x00007fb2c1112de1
  0x00007fb2c1112dcf: sub    $0x8,%rsp
  0x00007fb2c1112dd3: callq  0x00007fb2d6e04390  ;   {runtime_call}
  0x00007fb2c1112dd8: add    $0x8,%rsp
  0x00007fb2c1112ddc: jmpq   0x00007fb2c1112de6
  0x00007fb2c1112de1: callq  0x00007fb2d6e04390  ;   {runtime_call}
  0x00007fb2c1112de6: pop    %rdx
  0x00007fb2c1112de7: pop    %rsi
  0x00007fb2c1112de8: lea    0x1f8(%r15),%rdi
  0x00007fb2c1112def: movl   $0x4,0x270(%r15)
  0x00007fb2c1112dfa: callq  0x00007fb2d5b05cc0  ;   {runtime_call}
  0x00007fb2c1112dff: vzeroupper 
  0x00007fb2c1112e02: movl   $0x5,0x270(%r15)
  0x00007fb2c1112e0d: mov    %r15d,%ecx
  0x00007fb2c1112e10: shr    $0x4,%ecx
  0x00007fb2c1112e13: and    $0xffc,%ecx
  0x00007fb2c1112e19: movabs $0x7fb2d8054000,%r10  ;   {external_word}
  0x00007fb2c1112e23: mov    %ecx,(%r10,%rcx,1)
  0x00007fb2c1112e27: cmpl   $0x0,0x162f5cef(%rip)        # 0x00007fb2d7408b20
                                                ;   {external_word}
  0x00007fb2c1112e31: jne    0x00007fb2c1112e45
  0x00007fb2c1112e37: cmpl   $0x0,0x30(%r15)
  0x00007fb2c1112e3f: je     0x00007fb2c1112e66
  0x00007fb2c1112e45: mov    %rax,-0x8(%rbp)
  0x00007fb2c1112e49: mov    %r15,%rdi
  0x00007fb2c1112e4c: mov    %rsp,%r12
  0x00007fb2c1112e4f: sub    $0x0,%rsp
  0x00007fb2c1112e53: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c1112e57: callq  0x00007fb2d6eb4960  ;   {runtime_call}
  0x00007fb2c1112e5c: mov    %r12,%rsp
  0x00007fb2c1112e5f: xor    %r12,%r12
  0x00007fb2c1112e62: mov    -0x8(%rbp),%rax
  0x00007fb2c1112e66: movl   $0x8,0x270(%r15)
  0x00007fb2c1112e71: cmpl   $0x1,0x29c(%r15)
  0x00007fb2c1112e7c: je     0x00007fb2c1112f0c
  0x00007fb2c1112e82: cmpb   $0x0,0x162e6319(%rip)        # 0x00007fb2d73f91a2
                                                ;   {external_word}
  0x00007fb2c1112e89: je     0x00007fb2c1112ec7
  0x00007fb2c1112e8f: mov    %rax,-0x8(%rbp)
  0x00007fb2c1112e93: movabs $0x7fb2bd3b49c8,%rsi  ;   {metadata({method} {0x00007fb2bd3b49c8} &apos;identityHashCode&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/lang/System&apos;)}
  0x00007fb2c1112e9d: mov    %r15,%rdi
  0x00007fb2c1112ea0: test   $0xf,%esp
  0x00007fb2c1112ea6: je     0x00007fb2c1112ebe
  0x00007fb2c1112eac: sub    $0x8,%rsp
  0x00007fb2c1112eb0: callq  0x00007fb2d6e04380  ;   {runtime_call}
  0x00007fb2c1112eb5: add    $0x8,%rsp
  0x00007fb2c1112eb9: jmpq   0x00007fb2c1112ec3
  0x00007fb2c1112ebe: callq  0x00007fb2d6e04380  ;   {runtime_call}
  0x00007fb2c1112ec3: mov    -0x8(%rbp),%rax
  0x00007fb2c1112ec7: movabs $0x0,%r10
  0x00007fb2c1112ed1: mov    %r10,0x1d8(%r15)
  0x00007fb2c1112ed8: movabs $0x0,%r10
  0x00007fb2c1112ee2: mov    %r10,0x1e0(%r15)
  0x00007fb2c1112ee9: mov    0x38(%r15),%rcx
  0x00007fb2c1112eed: movl   $0x0,0x100(%rcx)
  0x00007fb2c1112ef7: leaveq 
  0x00007fb2c1112ef8: cmpq   $0x0,0x8(%r15)
  0x00007fb2c1112f00: jne    0x00007fb2c1112f07
  0x00007fb2c1112f06: retq   
  0x00007fb2c1112f07: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00007fb2c1112f0c: mov    %rax,-0x8(%rbp)
  0x00007fb2c1112f10: mov    %rsp,%r12
  0x00007fb2c1112f13: sub    $0x0,%rsp
  0x00007fb2c1112f17: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c1112f1b: callq  0x00007fb2d6e04360  ;   {runtime_call}
  0x00007fb2c1112f20: mov    %r12,%rsp
  0x00007fb2c1112f23: xor    %r12,%r12
  0x00007fb2c1112f26: mov    -0x8(%rbp),%rax
  0x00007fb2c1112f2a: jmpq   0x00007fb2c1112e82
  0x00007fb2c1112f2f: hlt    
<nmethod compile_id='19' compile_kind='c2n' level='0' entry='0x00007fb2c1112d40' size='864' address='0x00007fb2c1112bd0' relocation_offset='296' consts_offset='864' insts_offset='368' method='java/lang/System identityHashCode (Ljava/lang/Object;)I' bytes='0' count='256' iicount='256' stamp='0.116'/>
<writer thread='140404520781568'/>
Decoding compiled method 0x00007fb2c1111350:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb2bd79d3d8} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;
  # parm0:    rsi       = char
  #           [sp+0x30]  (sp of caller)
  0x00007fb2c11114a0: mov    %eax,-0x14000(%rsp)
  0x00007fb2c11114a7: push   %rbp
  0x00007fb2c11114a8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@-1 (line 492)

  0x00007fb2c11114ac: cmp    $0x30,%esi
  0x00007fb2c11114af: jl     0x00007fb2c11114d8  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)

  0x00007fb2c11114b1: cmp    $0x39,%esi
  0x00007fb2c11114b4: jle    0x00007fb2c11114c7  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)

  0x00007fb2c11114b6: cmp    $0x61,%esi
  0x00007fb2c11114b9: jl     0x00007fb2c11114ed  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)

  0x00007fb2c11114bb: cmp    $0x66,%esi
  0x00007fb2c11114be: jg     0x00007fb2c1111501  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)

  0x00007fb2c11114c0: mov    %esi,%eax
  0x00007fb2c11114c2: add    $0xffffffa9,%eax   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)

  0x00007fb2c11114c5: jmp    0x00007fb2c11114cc
  0x00007fb2c11114c7: mov    %esi,%eax
  0x00007fb2c11114c9: add    $0xffffffd0,%eax   ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@-1 (line 492)

  0x00007fb2c11114cc: add    $0x20,%rsp
  0x00007fb2c11114d0: pop    %rbp
  0x00007fb2c11114d1: test   %eax,0x16f43b29(%rip)        # 0x00007fb2d8055000
                                                ;   {poll_return}
  0x00007fb2c11114d7: retq   
  0x00007fb2c11114d8: mov    %esi,(%rsp)
  0x00007fb2c11114db: mov    $0xffffff65,%esi
  0x00007fb2c11114e0: data16 xchg %ax,%ax
  0x00007fb2c11114e3: callq  0x00007fb2c10051a0  ; OopMap{off=72}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ;   {runtime_call}
  0x00007fb2c11114e8: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ;   {runtime_call}
  0x00007fb2c11114ed: mov    %esi,(%rsp)
  0x00007fb2c11114f0: mov    $0xffffff65,%esi
  0x00007fb2c11114f5: xchg   %ax,%ax
  0x00007fb2c11114f7: callq  0x00007fb2c10051a0  ; OopMap{off=92}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ;   {runtime_call}
  0x00007fb2c11114fc: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ;   {runtime_call}
  0x00007fb2c1111501: mov    %esi,(%rsp)
  0x00007fb2c1111504: mov    $0xffffff65,%esi
  0x00007fb2c1111509: xchg   %ax,%ax
  0x00007fb2c111150b: callq  0x00007fb2c10051a0  ; OopMap{off=112}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ;   {runtime_call}
  0x00007fb2c1111510: callq  0x00007fb2d6d60a20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ;   {runtime_call}
  0x00007fb2c1111515: hlt    
  0x00007fb2c1111516: hlt    
  0x00007fb2c1111517: hlt    
  0x00007fb2c1111518: hlt    
  0x00007fb2c1111519: hlt    
  0x00007fb2c111151a: hlt    
  0x00007fb2c111151b: hlt    
  0x00007fb2c111151c: hlt    
  0x00007fb2c111151d: hlt    
  0x00007fb2c111151e: hlt    
  0x00007fb2c111151f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb2c1111520: jmpq   0x00007fb2c106c760  ;   {no_reloc}
[Deopt Handler Code]
  0x00007fb2c1111525: callq  0x00007fb2c111152a
  0x00007fb2c111152a: subq   $0x5,(%rsp)
  0x00007fb2c111152f: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c1111534: hlt    
  0x00007fb2c1111535: hlt    
  0x00007fb2c1111536: hlt    
  0x00007fb2c1111537: hlt    
<nmethod compile_id='17' compiler='C2' level='4' entry='0x00007fb2c11114a0' size='832' address='0x00007fb2c1111350' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='504' scopes_pcs_offset='584' dependencies_offset='824' oops_offset='488' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='65' count='11680' iicount='11680' stamp='0.116'/>
<make_not_entrant thread='140404520781568' compile_id='14' compiler='C1' level='3' stamp='0.116'/>
<writer thread='140406105003776'/>
<task_queued compile_id='20' method='java/util/UUID &lt;init&gt; (JJ)V' bytes='15' count='365' iicount='365' level='3' stamp='0.116' comment='tiered' hot_count='365'/>
<task_queued compile_id='21' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='2560' iicount='2560' level='1' stamp='0.117' comment='tiered' hot_count='2560'/>
<task_queued compile_id='22' method='java/lang/String length ()I' bytes='6' count='1536' iicount='1536' level='1' stamp='0.117' comment='tiered' hot_count='1536'/>
<writer thread='140404518676224'/>
Decoding compiled method 0x00007fb2c1114a90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/CharSequence&apos;
  #           [sp+0xe0]  (sp of caller)
  0x00007fb2c1114de0: mov    %eax,-0x14000(%rsp)
  0x00007fb2c1114de7: push   %rbp
  0x00007fb2c1114de8: sub    $0xd0,%rsp
  0x00007fb2c1114def: mov    %rsi,0x60(%rsp)
  0x00007fb2c1114df4: movabs $0x7fb2bd79e028,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1114dfe: mov    0xdc(%rdi),%ebx
  0x00007fb2c1114e04: add    $0x8,%ebx
  0x00007fb2c1114e07: mov    %ebx,0xdc(%rdi)
  0x00007fb2c1114e0d: movabs $0x7fb2bd79d2d0,%rdi  ;   {metadata({method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1114e17: and    $0x1ff8,%ebx
  0x00007fb2c1114e1d: cmp    $0x0,%ebx
  0x00007fb2c1114e20: je     0x00007fb2c1116001  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@0 (line 455)

  0x00007fb2c1114e26: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00007fb2c1116018
  0x00007fb2c1114e29: mov    %rsi,%rdi
  0x00007fb2c1114e2c: movabs $0x7fb2bd79e028,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1114e36: mov    0x8(%rdi),%edi
  0x00007fb2c1114e39: shl    $0x3,%rdi
  0x00007fb2c1114e3d: cmp    0x110(%rbx),%rdi
  0x00007fb2c1114e44: jne    0x00007fb2c1114e53
  0x00007fb2c1114e46: addq   $0x1,0x118(%rbx)
  0x00007fb2c1114e4e: jmpq   0x00007fb2c1114eb9
  0x00007fb2c1114e53: cmp    0x120(%rbx),%rdi
  0x00007fb2c1114e5a: jne    0x00007fb2c1114e69
  0x00007fb2c1114e5c: addq   $0x1,0x128(%rbx)
  0x00007fb2c1114e64: jmpq   0x00007fb2c1114eb9
  0x00007fb2c1114e69: cmpq   $0x0,0x110(%rbx)
  0x00007fb2c1114e74: jne    0x00007fb2c1114e8d
  0x00007fb2c1114e76: mov    %rdi,0x110(%rbx)
  0x00007fb2c1114e7d: movq   $0x1,0x118(%rbx)
  0x00007fb2c1114e88: jmpq   0x00007fb2c1114eb9
  0x00007fb2c1114e8d: cmpq   $0x0,0x120(%rbx)
  0x00007fb2c1114e98: jne    0x00007fb2c1114eb1
  0x00007fb2c1114e9a: mov    %rdi,0x120(%rbx)
  0x00007fb2c1114ea1: movq   $0x1,0x128(%rbx)
  0x00007fb2c1114eac: jmpq   0x00007fb2c1114eb9
  0x00007fb2c1114eb1: addq   $0x1,0x108(%rbx)
  0x00007fb2c1114eb9: mov    %rsi,%rdi
  0x00007fb2c1114ebc: mov    %rdi,%rsi          ;*invokeinterface length
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)

  0x00007fb2c1114ebf: nop
  0x00007fb2c1114ec0: nop
  0x00007fb2c1114ec1: nop
  0x00007fb2c1114ec2: nop
  0x00007fb2c1114ec3: nop
  0x00007fb2c1114ec4: nop
  0x00007fb2c1114ec5: movabs $0xffffffffffffffff,%rax
  0x00007fb2c1114ecf: callq  0x00007fb2c1046220  ; OopMap{[96]=Oop off=244}
                                                ;*invokeinterface length
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ;   {virtual_call}
  0x00007fb2c1114ed4: cmp    $0x24,%eax
  0x00007fb2c1114ed7: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1114ee1: movabs $0x138,%rsi
  0x00007fb2c1114eeb: je     0x00007fb2c1114efb
  0x00007fb2c1114ef1: movabs $0x148,%rsi
  0x00007fb2c1114efb: mov    (%rdx,%rsi,1),%rdi
  0x00007fb2c1114eff: lea    0x1(%rdi),%rdi
  0x00007fb2c1114f03: mov    %rdi,(%rdx,%rsi,1)
  0x00007fb2c1114f07: jne    0x00007fb2c1115dc9  ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@8 (line 455)

  0x00007fb2c1114f0d: mov    0x60(%rsp),%rsi
  0x00007fb2c1114f12: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1114f1c: mov    0x8(%rsi),%esi
  0x00007fb2c1114f1f: shl    $0x3,%rsi
  0x00007fb2c1114f23: cmp    0x1e0(%rdx),%rsi
  0x00007fb2c1114f2a: jne    0x00007fb2c1114f39
  0x00007fb2c1114f2c: addq   $0x1,0x1e8(%rdx)
  0x00007fb2c1114f34: jmpq   0x00007fb2c1114f9f
  0x00007fb2c1114f39: cmp    0x1f0(%rdx),%rsi
  0x00007fb2c1114f40: jne    0x00007fb2c1114f4f
  0x00007fb2c1114f42: addq   $0x1,0x1f8(%rdx)
  0x00007fb2c1114f4a: jmpq   0x00007fb2c1114f9f
  0x00007fb2c1114f4f: cmpq   $0x0,0x1e0(%rdx)
  0x00007fb2c1114f5a: jne    0x00007fb2c1114f73
  0x00007fb2c1114f5c: mov    %rsi,0x1e0(%rdx)
  0x00007fb2c1114f63: movq   $0x1,0x1e8(%rdx)
  0x00007fb2c1114f6e: jmpq   0x00007fb2c1114f9f
  0x00007fb2c1114f73: cmpq   $0x0,0x1f0(%rdx)
  0x00007fb2c1114f7e: jne    0x00007fb2c1114f97
  0x00007fb2c1114f80: mov    %rsi,0x1f0(%rdx)
  0x00007fb2c1114f87: movq   $0x1,0x1f8(%rdx)
  0x00007fb2c1114f92: jmpq   0x00007fb2c1114f9f
  0x00007fb2c1114f97: addq   $0x1,0x1d8(%rdx)
  0x00007fb2c1114f9f: mov    $0x8,%edx
  0x00007fb2c1114fa4: mov    0x60(%rsp),%rsi    ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@38 (line 458)

  0x00007fb2c1114fa9: nop
  0x00007fb2c1114faa: nop
  0x00007fb2c1114fab: nop
  0x00007fb2c1114fac: nop
  0x00007fb2c1114fad: movabs $0xffffffffffffffff,%rax
  0x00007fb2c1114fb7: callq  0x00007fb2c1046220  ; OopMap{[96]=Oop off=476}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@38 (line 458)
                                                ;   {virtual_call}
  0x00007fb2c1114fbc: cmp    $0x2d,%eax
  0x00007fb2c1114fbf: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1114fc9: movabs $0x208,%rsi
  0x00007fb2c1114fd3: jne    0x00007fb2c1114fe3
  0x00007fb2c1114fd9: movabs $0x218,%rsi
  0x00007fb2c1114fe3: mov    (%rdx,%rsi,1),%rdi
  0x00007fb2c1114fe7: lea    0x1(%rdi),%rdi
  0x00007fb2c1114feb: mov    %rdi,(%rdx,%rsi,1)
  0x00007fb2c1114fef: jne    0x00007fb2c1115b96  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@45 (line 458)

  0x00007fb2c1114ff5: mov    0x60(%rsp),%rsi
  0x00007fb2c1114ffa: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115004: mov    0x8(%rsi),%esi
  0x00007fb2c1115007: shl    $0x3,%rsi
  0x00007fb2c111500b: cmp    0x230(%rdx),%rsi
  0x00007fb2c1115012: jne    0x00007fb2c1115021
  0x00007fb2c1115014: addq   $0x1,0x238(%rdx)
  0x00007fb2c111501c: jmpq   0x00007fb2c1115087
  0x00007fb2c1115021: cmp    0x240(%rdx),%rsi
  0x00007fb2c1115028: jne    0x00007fb2c1115037
  0x00007fb2c111502a: addq   $0x1,0x248(%rdx)
  0x00007fb2c1115032: jmpq   0x00007fb2c1115087
  0x00007fb2c1115037: cmpq   $0x0,0x230(%rdx)
  0x00007fb2c1115042: jne    0x00007fb2c111505b
  0x00007fb2c1115044: mov    %rsi,0x230(%rdx)
  0x00007fb2c111504b: movq   $0x1,0x238(%rdx)
  0x00007fb2c1115056: jmpq   0x00007fb2c1115087
  0x00007fb2c111505b: cmpq   $0x0,0x240(%rdx)
  0x00007fb2c1115066: jne    0x00007fb2c111507f
  0x00007fb2c1115068: mov    %rsi,0x240(%rdx)
  0x00007fb2c111506f: movq   $0x1,0x248(%rdx)
  0x00007fb2c111507a: jmpq   0x00007fb2c1115087
  0x00007fb2c111507f: addq   $0x1,0x228(%rdx)
  0x00007fb2c1115087: mov    $0xd,%edx
  0x00007fb2c111508c: mov    0x60(%rsp),%rsi    ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@51 (line 458)

  0x00007fb2c1115091: nop
  0x00007fb2c1115092: nop
  0x00007fb2c1115093: nop
  0x00007fb2c1115094: nop
  0x00007fb2c1115095: movabs $0xffffffffffffffff,%rax
  0x00007fb2c111509f: callq  0x00007fb2c1046220  ; OopMap{[96]=Oop off=708}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@51 (line 458)
                                                ;   {virtual_call}
  0x00007fb2c11150a4: cmp    $0x2d,%eax
  0x00007fb2c11150a7: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c11150b1: movabs $0x258,%rsi
  0x00007fb2c11150bb: jne    0x00007fb2c11150cb
  0x00007fb2c11150c1: movabs $0x268,%rsi
  0x00007fb2c11150cb: mov    (%rdx,%rsi,1),%rdi
  0x00007fb2c11150cf: lea    0x1(%rdi),%rdi
  0x00007fb2c11150d3: mov    %rdi,(%rdx,%rsi,1)
  0x00007fb2c11150d7: jne    0x00007fb2c1115b96  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@58 (line 458)

  0x00007fb2c11150dd: mov    0x60(%rsp),%rsi
  0x00007fb2c11150e2: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c11150ec: mov    0x8(%rsi),%esi
  0x00007fb2c11150ef: shl    $0x3,%rsi
  0x00007fb2c11150f3: cmp    0x280(%rdx),%rsi
  0x00007fb2c11150fa: jne    0x00007fb2c1115109
  0x00007fb2c11150fc: addq   $0x1,0x288(%rdx)
  0x00007fb2c1115104: jmpq   0x00007fb2c111516f
  0x00007fb2c1115109: cmp    0x290(%rdx),%rsi
  0x00007fb2c1115110: jne    0x00007fb2c111511f
  0x00007fb2c1115112: addq   $0x1,0x298(%rdx)
  0x00007fb2c111511a: jmpq   0x00007fb2c111516f
  0x00007fb2c111511f: cmpq   $0x0,0x280(%rdx)
  0x00007fb2c111512a: jne    0x00007fb2c1115143
  0x00007fb2c111512c: mov    %rsi,0x280(%rdx)
  0x00007fb2c1115133: movq   $0x1,0x288(%rdx)
  0x00007fb2c111513e: jmpq   0x00007fb2c111516f
  0x00007fb2c1115143: cmpq   $0x0,0x290(%rdx)
  0x00007fb2c111514e: jne    0x00007fb2c1115167
  0x00007fb2c1115150: mov    %rsi,0x290(%rdx)
  0x00007fb2c1115157: movq   $0x1,0x298(%rdx)
  0x00007fb2c1115162: jmpq   0x00007fb2c111516f
  0x00007fb2c1115167: addq   $0x1,0x278(%rdx)
  0x00007fb2c111516f: mov    $0x12,%edx
  0x00007fb2c1115174: mov    0x60(%rsp),%rsi    ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@64 (line 458)

  0x00007fb2c1115179: nop
  0x00007fb2c111517a: nop
  0x00007fb2c111517b: nop
  0x00007fb2c111517c: nop
  0x00007fb2c111517d: movabs $0xffffffffffffffff,%rax
  0x00007fb2c1115187: callq  0x00007fb2c1046220  ; OopMap{[96]=Oop off=940}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@64 (line 458)
                                                ;   {virtual_call}
  0x00007fb2c111518c: cmp    $0x2d,%eax
  0x00007fb2c111518f: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115199: movabs $0x2a8,%rsi
  0x00007fb2c11151a3: jne    0x00007fb2c11151b3
  0x00007fb2c11151a9: movabs $0x2b8,%rsi
  0x00007fb2c11151b3: mov    (%rdx,%rsi,1),%rdi
  0x00007fb2c11151b7: lea    0x1(%rdi),%rdi
  0x00007fb2c11151bb: mov    %rdi,(%rdx,%rsi,1)
  0x00007fb2c11151bf: jne    0x00007fb2c1115b96  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@71 (line 458)

  0x00007fb2c11151c5: mov    0x60(%rsp),%rsi
  0x00007fb2c11151ca: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c11151d4: mov    0x8(%rsi),%esi
  0x00007fb2c11151d7: shl    $0x3,%rsi
  0x00007fb2c11151db: cmp    0x2d0(%rdx),%rsi
  0x00007fb2c11151e2: jne    0x00007fb2c11151f1
  0x00007fb2c11151e4: addq   $0x1,0x2d8(%rdx)
  0x00007fb2c11151ec: jmpq   0x00007fb2c1115257
  0x00007fb2c11151f1: cmp    0x2e0(%rdx),%rsi
  0x00007fb2c11151f8: jne    0x00007fb2c1115207
  0x00007fb2c11151fa: addq   $0x1,0x2e8(%rdx)
  0x00007fb2c1115202: jmpq   0x00007fb2c1115257
  0x00007fb2c1115207: cmpq   $0x0,0x2d0(%rdx)
  0x00007fb2c1115212: jne    0x00007fb2c111522b
  0x00007fb2c1115214: mov    %rsi,0x2d0(%rdx)
  0x00007fb2c111521b: movq   $0x1,0x2d8(%rdx)
  0x00007fb2c1115226: jmpq   0x00007fb2c1115257
  0x00007fb2c111522b: cmpq   $0x0,0x2e0(%rdx)
  0x00007fb2c1115236: jne    0x00007fb2c111524f
  0x00007fb2c1115238: mov    %rsi,0x2e0(%rdx)
  0x00007fb2c111523f: movq   $0x1,0x2e8(%rdx)
  0x00007fb2c111524a: jmpq   0x00007fb2c1115257
  0x00007fb2c111524f: addq   $0x1,0x2c8(%rdx)
  0x00007fb2c1115257: mov    $0x17,%edx
  0x00007fb2c111525c: mov    0x60(%rsp),%rsi    ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@77 (line 458)

  0x00007fb2c1115261: nop
  0x00007fb2c1115262: nop
  0x00007fb2c1115263: nop
  0x00007fb2c1115264: nop
  0x00007fb2c1115265: movabs $0xffffffffffffffff,%rax
  0x00007fb2c111526f: callq  0x00007fb2c1046220  ; OopMap{[96]=Oop off=1172}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@77 (line 458)
                                                ;   {virtual_call}
  0x00007fb2c1115274: cmp    $0x2d,%eax
  0x00007fb2c1115277: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115281: movabs $0x2f8,%rsi
  0x00007fb2c111528b: je     0x00007fb2c111529b
  0x00007fb2c1115291: movabs $0x308,%rsi
  0x00007fb2c111529b: mov    (%rdx,%rsi,1),%rdi
  0x00007fb2c111529f: lea    0x1(%rdi),%rdi
  0x00007fb2c11152a3: mov    %rdi,(%rdx,%rsi,1)
  0x00007fb2c11152a7: jne    0x00007fb2c1115b96  ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@84 (line 458)

  0x00007fb2c11152ad: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c11152b7: incl   0x398(%rdx)
  0x00007fb2c11152bd: mov    $0x0,%edi
  0x00007fb2c11152c2: movabs $0x0,%rbx
  0x00007fb2c11152cc: jmpq   0x00007fb2c11153bd  ;*goto
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@118 (line 465)

  0x00007fb2c11152d1: nopl   0x0(%rax)
  0x00007fb2c11152d8: mov    %rsi,%rdx
  0x00007fb2c11152db: movabs $0x7fb2bd79e028,%rax  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c11152e5: mov    0x8(%rdx),%edx
  0x00007fb2c11152e8: shl    $0x3,%rdx
  0x00007fb2c11152ec: cmp    0x3b8(%rax),%rdx
  0x00007fb2c11152f3: jne    0x00007fb2c1115302
  0x00007fb2c11152f5: addq   $0x1,0x3c0(%rax)
  0x00007fb2c11152fd: jmpq   0x00007fb2c1115368
  0x00007fb2c1115302: cmp    0x3c8(%rax),%rdx
  0x00007fb2c1115309: jne    0x00007fb2c1115318
  0x00007fb2c111530b: addq   $0x1,0x3d0(%rax)
  0x00007fb2c1115313: jmpq   0x00007fb2c1115368
  0x00007fb2c1115318: cmpq   $0x0,0x3b8(%rax)
  0x00007fb2c1115323: jne    0x00007fb2c111533c
  0x00007fb2c1115325: mov    %rdx,0x3b8(%rax)
  0x00007fb2c111532c: movq   $0x1,0x3c0(%rax)
  0x00007fb2c1115337: jmpq   0x00007fb2c1115368
  0x00007fb2c111533c: cmpq   $0x0,0x3c8(%rax)
  0x00007fb2c1115347: jne    0x00007fb2c1115360
  0x00007fb2c1115349: mov    %rdx,0x3c8(%rax)
  0x00007fb2c1115350: movq   $0x1,0x3d0(%rax)
  0x00007fb2c111535b: jmpq   0x00007fb2c1115368
  0x00007fb2c1115360: addq   $0x1,0x3b0(%rax)
  0x00007fb2c1115368: mov    %rdi,%rdx
  0x00007fb2c111536b: mov    %rsi,%rax
  0x00007fb2c111536e: mov    %rax,%rsi          ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)

  0x00007fb2c1115371: mov    %edi,0x70(%rsp)
  0x00007fb2c1115375: movabs $0xffffffffffffffff,%rax
  0x00007fb2c111537f: callq  0x00007fb2c1046220  ; OopMap{[96]=Oop off=1444}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)
                                                ;   {virtual_call}
  0x00007fb2c1115384: movabs $0x7fb2bd79e028,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c111538e: addq   $0x1,0x3e0(%rsi)
  0x00007fb2c1115396: mov    %rax,%rsi          ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c1115399: nop
  0x00007fb2c111539a: nop
  0x00007fb2c111539b: nop
  0x00007fb2c111539c: nop
  0x00007fb2c111539d: nop
  0x00007fb2c111539e: nop
  0x00007fb2c111539f: callq  0x00007fb2c1046420  ; OopMap{[96]=Oop off=1476}
                                                ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ;   {static_call}
  0x00007fb2c11153a4: mov    $0x4,%ecx
  0x00007fb2c11153a9: mov    0x68(%rsp),%rbx
  0x00007fb2c11153ae: shl    %cl,%rbx
  0x00007fb2c11153b1: movslq %eax,%rax
  0x00007fb2c11153b4: or     %rax,%rbx
  0x00007fb2c11153b7: mov    0x70(%rsp),%edi
  0x00007fb2c11153bb: inc    %edi
  0x00007fb2c11153bd: mov    %rbx,0x68(%rsp)
  0x00007fb2c11153c2: mov    0x60(%rsp),%rsi
  0x00007fb2c11153c7: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c11153d1: mov    0xe0(%rdx),%eax
  0x00007fb2c11153d7: add    $0x8,%eax
  0x00007fb2c11153da: mov    %eax,0xe0(%rdx)
  0x00007fb2c11153e0: movabs $0x7fb2bd79d2d0,%rdx  ;   {metadata({method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c11153ea: and    $0xfff8,%eax
  0x00007fb2c11153f0: cmp    $0x0,%eax
  0x00007fb2c11153f3: je     0x00007fb2c111601d  ; OopMap{rsi=Oop [96]=Oop off=1561}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@149 (line 465)

  0x00007fb2c11153f9: test   %eax,0x16f3fd01(%rip)        # 0x00007fb2d8055100
                                                ;   {poll}
  0x00007fb2c11153ff: cmp    $0x8,%edi
  0x00007fb2c1115402: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c111540c: movabs $0x3f0,%rax
  0x00007fb2c1115416: jl     0x00007fb2c1115426
  0x00007fb2c111541c: movabs $0x400,%rax
  0x00007fb2c1115426: mov    (%rdx,%rax,1),%rcx
  0x00007fb2c111542a: lea    0x1(%rcx),%rcx
  0x00007fb2c111542e: mov    %rcx,(%rdx,%rax,1)
  0x00007fb2c1115432: jl     0x00007fb2c11152d8  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@149 (line 465)

  0x00007fb2c1115438: mov    0x68(%rsp),%rbx
  0x00007fb2c111543d: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115447: incl   0x410(%rdx)
  0x00007fb2c111544d: mov    $0x9,%edi
  0x00007fb2c1115452: jmpq   0x00007fb2c111553d  ;*goto
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@156 (line 469)

  0x00007fb2c1115457: nop
  0x00007fb2c1115458: mov    %rsi,%rdx
  0x00007fb2c111545b: movabs $0x7fb2bd79e028,%rax  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115465: mov    0x8(%rdx),%edx
  0x00007fb2c1115468: shl    $0x3,%rdx
  0x00007fb2c111546c: cmp    0x430(%rax),%rdx
  0x00007fb2c1115473: jne    0x00007fb2c1115482
  0x00007fb2c1115475: addq   $0x1,0x438(%rax)
  0x00007fb2c111547d: jmpq   0x00007fb2c11154e8
  0x00007fb2c1115482: cmp    0x440(%rax),%rdx
  0x00007fb2c1115489: jne    0x00007fb2c1115498
  0x00007fb2c111548b: addq   $0x1,0x448(%rax)
  0x00007fb2c1115493: jmpq   0x00007fb2c11154e8
  0x00007fb2c1115498: cmpq   $0x0,0x430(%rax)
  0x00007fb2c11154a3: jne    0x00007fb2c11154bc
  0x00007fb2c11154a5: mov    %rdx,0x430(%rax)
  0x00007fb2c11154ac: movq   $0x1,0x438(%rax)
  0x00007fb2c11154b7: jmpq   0x00007fb2c11154e8
  0x00007fb2c11154bc: cmpq   $0x0,0x440(%rax)
  0x00007fb2c11154c7: jne    0x00007fb2c11154e0
  0x00007fb2c11154c9: mov    %rdx,0x440(%rax)
  0x00007fb2c11154d0: movq   $0x1,0x448(%rax)
  0x00007fb2c11154db: jmpq   0x00007fb2c11154e8
  0x00007fb2c11154e0: addq   $0x1,0x428(%rax)
  0x00007fb2c11154e8: mov    %rdi,%rdx
  0x00007fb2c11154eb: mov    %rsi,%rax
  0x00007fb2c11154ee: mov    %rax,%rsi          ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)

  0x00007fb2c11154f1: mov    %edi,0x74(%rsp)
  0x00007fb2c11154f5: movabs $0xffffffffffffffff,%rax
  0x00007fb2c11154ff: callq  0x00007fb2c1046220  ; OopMap{[96]=Oop off=1828}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)
                                                ;   {virtual_call}
  0x00007fb2c1115504: movabs $0x7fb2bd79e028,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c111550e: addq   $0x1,0x458(%rsi)
  0x00007fb2c1115516: mov    %rax,%rsi          ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c1115519: nop
  0x00007fb2c111551a: nop
  0x00007fb2c111551b: nop
  0x00007fb2c111551c: nop
  0x00007fb2c111551d: nop
  0x00007fb2c111551e: nop
  0x00007fb2c111551f: callq  0x00007fb2c1046420  ; OopMap{[96]=Oop off=1860}
                                                ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ;   {static_call}
  0x00007fb2c1115524: mov    $0x4,%ecx
  0x00007fb2c1115529: mov    0x78(%rsp),%rbx
  0x00007fb2c111552e: shl    %cl,%rbx
  0x00007fb2c1115531: movslq %eax,%rax
  0x00007fb2c1115534: or     %rax,%rbx
  0x00007fb2c1115537: mov    0x74(%rsp),%edi
  0x00007fb2c111553b: inc    %edi
  0x00007fb2c111553d: mov    %rbx,0x78(%rsp)
  0x00007fb2c1115542: mov    0x60(%rsp),%rsi
  0x00007fb2c1115547: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115551: mov    0xe0(%rdx),%eax
  0x00007fb2c1115557: add    $0x8,%eax
  0x00007fb2c111555a: mov    %eax,0xe0(%rdx)
  0x00007fb2c1115560: movabs $0x7fb2bd79d2d0,%rdx  ;   {metadata({method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c111556a: and    $0xfff8,%eax
  0x00007fb2c1115570: cmp    $0x0,%eax
  0x00007fb2c1115573: je     0x00007fb2c1116034  ; OopMap{rsi=Oop [96]=Oop off=1945}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@187 (line 469)

  0x00007fb2c1115579: test   %eax,0x16f3fb81(%rip)        # 0x00007fb2d8055100
                                                ;   {poll}
  0x00007fb2c111557f: cmp    $0xd,%edi
  0x00007fb2c1115582: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c111558c: movabs $0x468,%rax
  0x00007fb2c1115596: jl     0x00007fb2c11155a6
  0x00007fb2c111559c: movabs $0x478,%rax
  0x00007fb2c11155a6: mov    (%rdx,%rax,1),%rcx
  0x00007fb2c11155aa: lea    0x1(%rcx),%rcx
  0x00007fb2c11155ae: mov    %rcx,(%rdx,%rax,1)
  0x00007fb2c11155b2: jl     0x00007fb2c1115458  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@187 (line 469)

  0x00007fb2c11155b8: mov    0x78(%rsp),%rbx
  0x00007fb2c11155bd: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c11155c7: incl   0x488(%rdx)
  0x00007fb2c11155cd: mov    $0xe,%edi
  0x00007fb2c11155d2: jmpq   0x00007fb2c11156cb  ;*goto
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@194 (line 473)

  0x00007fb2c11155d7: nop
  0x00007fb2c11155d8: mov    %rsi,%rdx
  0x00007fb2c11155db: movabs $0x7fb2bd79e028,%rax  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c11155e5: mov    0x8(%rdx),%edx
  0x00007fb2c11155e8: shl    $0x3,%rdx
  0x00007fb2c11155ec: cmp    0x4a8(%rax),%rdx
  0x00007fb2c11155f3: jne    0x00007fb2c1115602
  0x00007fb2c11155f5: addq   $0x1,0x4b0(%rax)
  0x00007fb2c11155fd: jmpq   0x00007fb2c1115668
  0x00007fb2c1115602: cmp    0x4b8(%rax),%rdx
  0x00007fb2c1115609: jne    0x00007fb2c1115618
  0x00007fb2c111560b: addq   $0x1,0x4c0(%rax)
  0x00007fb2c1115613: jmpq   0x00007fb2c1115668
  0x00007fb2c1115618: cmpq   $0x0,0x4a8(%rax)
  0x00007fb2c1115623: jne    0x00007fb2c111563c
  0x00007fb2c1115625: mov    %rdx,0x4a8(%rax)
  0x00007fb2c111562c: movq   $0x1,0x4b0(%rax)
  0x00007fb2c1115637: jmpq   0x00007fb2c1115668
  0x00007fb2c111563c: cmpq   $0x0,0x4b8(%rax)
  0x00007fb2c1115647: jne    0x00007fb2c1115660
  0x00007fb2c1115649: mov    %rdx,0x4b8(%rax)
  0x00007fb2c1115650: movq   $0x1,0x4c0(%rax)
  0x00007fb2c111565b: jmpq   0x00007fb2c1115668
  0x00007fb2c1115660: addq   $0x1,0x4a0(%rax)
  0x00007fb2c1115668: mov    %rdi,%rdx
  0x00007fb2c111566b: mov    %rsi,%rax
  0x00007fb2c111566e: mov    %rax,%rsi          ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)

  0x00007fb2c1115671: mov    %edi,0x88(%rsp)
  0x00007fb2c1115678: nop
  0x00007fb2c1115679: nop
  0x00007fb2c111567a: nop
  0x00007fb2c111567b: nop
  0x00007fb2c111567c: nop
  0x00007fb2c111567d: movabs $0xffffffffffffffff,%rax
  0x00007fb2c1115687: callq  0x00007fb2c1046220  ; OopMap{[96]=Oop off=2220}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)
                                                ;   {virtual_call}
  0x00007fb2c111568c: movabs $0x7fb2bd79e028,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115696: addq   $0x1,0x4d0(%rsi)
  0x00007fb2c111569e: mov    %rax,%rsi          ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c11156a1: nop
  0x00007fb2c11156a2: nop
  0x00007fb2c11156a3: nop
  0x00007fb2c11156a4: nop
  0x00007fb2c11156a5: nop
  0x00007fb2c11156a6: nop
  0x00007fb2c11156a7: callq  0x00007fb2c1046420  ; OopMap{[96]=Oop off=2252}
                                                ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ;   {static_call}
  0x00007fb2c11156ac: mov    $0x4,%ecx
  0x00007fb2c11156b1: mov    0x80(%rsp),%rbx
  0x00007fb2c11156b9: shl    %cl,%rbx
  0x00007fb2c11156bc: movslq %eax,%rax
  0x00007fb2c11156bf: or     %rax,%rbx
  0x00007fb2c11156c2: mov    0x88(%rsp),%edi
  0x00007fb2c11156c9: inc    %edi
  0x00007fb2c11156cb: mov    %rbx,0x80(%rsp)
  0x00007fb2c11156d3: mov    0x60(%rsp),%rsi
  0x00007fb2c11156d8: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c11156e2: mov    0xe0(%rdx),%eax
  0x00007fb2c11156e8: add    $0x8,%eax
  0x00007fb2c11156eb: mov    %eax,0xe0(%rdx)
  0x00007fb2c11156f1: movabs $0x7fb2bd79d2d0,%rdx  ;   {metadata({method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c11156fb: and    $0xfff8,%eax
  0x00007fb2c1115701: cmp    $0x0,%eax
  0x00007fb2c1115704: je     0x00007fb2c111604b  ; OopMap{rsi=Oop [96]=Oop off=2346}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@225 (line 473)

  0x00007fb2c111570a: test   %eax,0x16f3f9f0(%rip)        # 0x00007fb2d8055100
                                                ;   {poll}
  0x00007fb2c1115710: cmp    $0x12,%edi
  0x00007fb2c1115713: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c111571d: movabs $0x4e0,%rax
  0x00007fb2c1115727: jl     0x00007fb2c1115737
  0x00007fb2c111572d: movabs $0x4f0,%rax
  0x00007fb2c1115737: mov    (%rdx,%rax,1),%rcx
  0x00007fb2c111573b: lea    0x1(%rcx),%rcx
  0x00007fb2c111573f: mov    %rcx,(%rdx,%rax,1)
  0x00007fb2c1115743: jl     0x00007fb2c11155d8  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@225 (line 473)

  0x00007fb2c1115749: mov    0x80(%rsp),%rbx
  0x00007fb2c1115751: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c111575b: incl   0x500(%rdx)
  0x00007fb2c1115761: mov    $0x13,%edi
  0x00007fb2c1115766: movabs $0x0,%rax
  0x00007fb2c1115770: mov    %rax,0x90(%rsp)
  0x00007fb2c1115778: mov    %rbx,0x80(%rsp)
  0x00007fb2c1115780: jmpq   0x00007fb2c1115886  ;*goto
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@232 (line 479)

  0x00007fb2c1115785: data16 xchg %ax,%ax
  0x00007fb2c1115788: mov    %rsi,%rdx
  0x00007fb2c111578b: movabs $0x7fb2bd79e028,%rcx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115795: mov    0x8(%rdx),%edx
  0x00007fb2c1115798: shl    $0x3,%rdx
  0x00007fb2c111579c: cmp    0x520(%rcx),%rdx
  0x00007fb2c11157a3: jne    0x00007fb2c11157b2
  0x00007fb2c11157a5: addq   $0x1,0x528(%rcx)
  0x00007fb2c11157ad: jmpq   0x00007fb2c1115818
  0x00007fb2c11157b2: cmp    0x530(%rcx),%rdx
  0x00007fb2c11157b9: jne    0x00007fb2c11157c8
  0x00007fb2c11157bb: addq   $0x1,0x538(%rcx)
  0x00007fb2c11157c3: jmpq   0x00007fb2c1115818
  0x00007fb2c11157c8: cmpq   $0x0,0x520(%rcx)
  0x00007fb2c11157d3: jne    0x00007fb2c11157ec
  0x00007fb2c11157d5: mov    %rdx,0x520(%rcx)
  0x00007fb2c11157dc: movq   $0x1,0x528(%rcx)
  0x00007fb2c11157e7: jmpq   0x00007fb2c1115818
  0x00007fb2c11157ec: cmpq   $0x0,0x530(%rcx)
  0x00007fb2c11157f7: jne    0x00007fb2c1115810
  0x00007fb2c11157f9: mov    %rdx,0x530(%rcx)
  0x00007fb2c1115800: movq   $0x1,0x538(%rcx)
  0x00007fb2c111580b: jmpq   0x00007fb2c1115818
  0x00007fb2c1115810: addq   $0x1,0x518(%rcx)
  0x00007fb2c1115818: mov    %rdi,%rdx
  0x00007fb2c111581b: mov    %rsi,%rcx
  0x00007fb2c111581e: mov    %rcx,%rsi          ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)

  0x00007fb2c1115821: mov    %edi,0x8c(%rsp)
  0x00007fb2c1115828: nop
  0x00007fb2c1115829: nop
  0x00007fb2c111582a: nop
  0x00007fb2c111582b: nop
  0x00007fb2c111582c: nop
  0x00007fb2c111582d: movabs $0xffffffffffffffff,%rax
  0x00007fb2c1115837: callq  0x00007fb2c1046220  ; OopMap{[96]=Oop off=2652}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)
                                                ;   {virtual_call}
  0x00007fb2c111583c: movabs $0x7fb2bd79e028,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115846: addq   $0x1,0x548(%rsi)
  0x00007fb2c111584e: mov    %rax,%rsi          ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c1115851: nop
  0x00007fb2c1115852: nop
  0x00007fb2c1115853: nop
  0x00007fb2c1115854: nop
  0x00007fb2c1115855: nop
  0x00007fb2c1115856: nop
  0x00007fb2c1115857: callq  0x00007fb2c1046420  ; OopMap{[96]=Oop off=2684}
                                                ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ;   {static_call}
  0x00007fb2c111585c: mov    $0x4,%ecx
  0x00007fb2c1115861: mov    0x90(%rsp),%rdx
  0x00007fb2c1115869: shl    %cl,%rdx
  0x00007fb2c111586c: movslq %eax,%rax
  0x00007fb2c111586f: or     %rax,%rdx
  0x00007fb2c1115872: mov    0x8c(%rsp),%edi
  0x00007fb2c1115879: inc    %edi
  0x00007fb2c111587b: mov    %rdx,%rax          ;*iload
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@259 (line 479)

  0x00007fb2c111587e: mov    %rax,0x90(%rsp)
  0x00007fb2c1115886: mov    0x60(%rsp),%rsi
  0x00007fb2c111588b: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115895: mov    0xe0(%rdx),%ecx
  0x00007fb2c111589b: add    $0x8,%ecx
  0x00007fb2c111589e: mov    %ecx,0xe0(%rdx)
  0x00007fb2c11158a4: movabs $0x7fb2bd79d2d0,%rdx  ;   {metadata({method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c11158ae: and    $0xfff8,%ecx
  0x00007fb2c11158b4: cmp    $0x0,%ecx
  0x00007fb2c11158b7: je     0x00007fb2c1116062  ; OopMap{rsi=Oop [96]=Oop off=2781}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@263 (line 479)

  0x00007fb2c11158bd: test   %eax,0x16f3f83d(%rip)        # 0x00007fb2d8055100
                                                ;   {poll}
  0x00007fb2c11158c3: cmp    $0x17,%edi
  0x00007fb2c11158c6: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c11158d0: movabs $0x558,%rcx
  0x00007fb2c11158da: jl     0x00007fb2c11158ea
  0x00007fb2c11158e0: movabs $0x568,%rcx
  0x00007fb2c11158ea: mov    (%rdx,%rcx,1),%r8
  0x00007fb2c11158ee: lea    0x1(%r8),%r8
  0x00007fb2c11158f2: mov    %r8,(%rdx,%rcx,1)
  0x00007fb2c11158f6: jl     0x00007fb2c1115788  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@263 (line 479)

  0x00007fb2c11158fc: mov    0x90(%rsp),%rax
  0x00007fb2c1115904: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c111590e: incl   0x578(%rdx)
  0x00007fb2c1115914: mov    $0x18,%edi
  0x00007fb2c1115919: mov    %rax,0x98(%rsp)
  0x00007fb2c1115921: jmpq   0x00007fb2c1115a26  ;*goto
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@270 (line 483)

  0x00007fb2c1115926: xchg   %ax,%ax
  0x00007fb2c1115928: mov    %rsi,%rdx
  0x00007fb2c111592b: movabs $0x7fb2bd79e028,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115935: mov    0x8(%rdx),%edx
  0x00007fb2c1115938: shl    $0x3,%rdx
  0x00007fb2c111593c: cmp    0x598(%rbx),%rdx
  0x00007fb2c1115943: jne    0x00007fb2c1115952
  0x00007fb2c1115945: addq   $0x1,0x5a0(%rbx)
  0x00007fb2c111594d: jmpq   0x00007fb2c11159b8
  0x00007fb2c1115952: cmp    0x5a8(%rbx),%rdx
  0x00007fb2c1115959: jne    0x00007fb2c1115968
  0x00007fb2c111595b: addq   $0x1,0x5b0(%rbx)
  0x00007fb2c1115963: jmpq   0x00007fb2c11159b8
  0x00007fb2c1115968: cmpq   $0x0,0x598(%rbx)
  0x00007fb2c1115973: jne    0x00007fb2c111598c
  0x00007fb2c1115975: mov    %rdx,0x598(%rbx)
  0x00007fb2c111597c: movq   $0x1,0x5a0(%rbx)
  0x00007fb2c1115987: jmpq   0x00007fb2c11159b8
  0x00007fb2c111598c: cmpq   $0x0,0x5a8(%rbx)
  0x00007fb2c1115997: jne    0x00007fb2c11159b0
  0x00007fb2c1115999: mov    %rdx,0x5a8(%rbx)
  0x00007fb2c11159a0: movq   $0x1,0x5b0(%rbx)
  0x00007fb2c11159ab: jmpq   0x00007fb2c11159b8
  0x00007fb2c11159b0: addq   $0x1,0x590(%rbx)
  0x00007fb2c11159b8: mov    %rdi,%rdx
  0x00007fb2c11159bb: mov    %rsi,%rbx
  0x00007fb2c11159be: mov    %rbx,%rsi          ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c11159c1: mov    %edi,0xa0(%rsp)
  0x00007fb2c11159c8: nop
  0x00007fb2c11159c9: nop
  0x00007fb2c11159ca: nop
  0x00007fb2c11159cb: nop
  0x00007fb2c11159cc: nop
  0x00007fb2c11159cd: movabs $0xffffffffffffffff,%rax
  0x00007fb2c11159d7: callq  0x00007fb2c1046220  ; OopMap{[96]=Oop off=3068}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)
                                                ;   {virtual_call}
  0x00007fb2c11159dc: movabs $0x7fb2bd79e028,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c11159e6: addq   $0x1,0x5c0(%rsi)
  0x00007fb2c11159ee: mov    %rax,%rsi          ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c11159f1: nop
  0x00007fb2c11159f2: nop
  0x00007fb2c11159f3: nop
  0x00007fb2c11159f4: nop
  0x00007fb2c11159f5: nop
  0x00007fb2c11159f6: nop
  0x00007fb2c11159f7: callq  0x00007fb2c1046420  ; OopMap{[96]=Oop off=3100}
                                                ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ;   {static_call}
  0x00007fb2c11159fc: mov    $0x4,%ecx
  0x00007fb2c1115a01: mov    0x98(%rsp),%rdx
  0x00007fb2c1115a09: shl    %cl,%rdx
  0x00007fb2c1115a0c: movslq %eax,%rax
  0x00007fb2c1115a0f: or     %rax,%rdx
  0x00007fb2c1115a12: mov    0xa0(%rsp),%edi
  0x00007fb2c1115a19: inc    %edi
  0x00007fb2c1115a1b: mov    %rdx,%rbx          ;*iload
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@297 (line 483)

  0x00007fb2c1115a1e: mov    %rbx,0x98(%rsp)
  0x00007fb2c1115a26: mov    0x60(%rsp),%rsi
  0x00007fb2c1115a2b: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115a35: mov    0xe0(%rdx),%ebx
  0x00007fb2c1115a3b: add    $0x8,%ebx
  0x00007fb2c1115a3e: mov    %ebx,0xe0(%rdx)
  0x00007fb2c1115a44: movabs $0x7fb2bd79d2d0,%rdx  ;   {metadata({method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115a4e: and    $0xfff8,%ebx
  0x00007fb2c1115a54: cmp    $0x0,%ebx
  0x00007fb2c1115a57: je     0x00007fb2c1116079  ; OopMap{rsi=Oop [96]=Oop off=3197}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@301 (line 483)

  0x00007fb2c1115a5d: test   %eax,0x16f3f69d(%rip)        # 0x00007fb2d8055100
                                                ;   {poll}
  0x00007fb2c1115a63: cmp    $0x24,%edi
  0x00007fb2c1115a66: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115a70: movabs $0x5d0,%rbx
  0x00007fb2c1115a7a: jl     0x00007fb2c1115a8a
  0x00007fb2c1115a80: movabs $0x5e0,%rbx
  0x00007fb2c1115a8a: mov    (%rdx,%rbx,1),%rcx
  0x00007fb2c1115a8e: lea    0x1(%rcx),%rcx
  0x00007fb2c1115a92: mov    %rcx,(%rdx,%rbx,1)
  0x00007fb2c1115a96: jl     0x00007fb2c1115928  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@301 (line 483)

  0x00007fb2c1115a9c: mov    0x98(%rsp),%rbx
  0x00007fb2c1115aa4: mov    0x80(%rsp),%r8
  0x00007fb2c1115aac: movabs $0x7c00434f0,%rdx  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007fb2c1115ab6: mov    0x60(%r15),%rax
  0x00007fb2c1115aba: lea    0x20(%rax),%rdi
  0x00007fb2c1115abe: cmp    0x70(%r15),%rdi
  0x00007fb2c1115ac2: ja     0x00007fb2c1116090
  0x00007fb2c1115ac8: mov    %rdi,0x60(%r15)
  0x00007fb2c1115acc: mov    0xa8(%rdx),%rcx
  0x00007fb2c1115ad3: mov    %rcx,(%rax)
  0x00007fb2c1115ad6: mov    %rdx,%rcx
  0x00007fb2c1115ad9: shr    $0x3,%rcx
  0x00007fb2c1115add: mov    %ecx,0x8(%rax)
  0x00007fb2c1115ae0: xor    %rcx,%rcx
  0x00007fb2c1115ae3: mov    %ecx,0xc(%rax)
  0x00007fb2c1115ae6: xor    %rcx,%rcx
  0x00007fb2c1115ae9: mov    %rcx,0x10(%rax)
  0x00007fb2c1115aed: mov    %rcx,0x18(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@304 (line 488)

  0x00007fb2c1115af1: mov    %rax,%rdx
  0x00007fb2c1115af4: movabs $0x7fb2bd79e028,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115afe: addq   $0x1,0x5f0(%rsi)
  0x00007fb2c1115b06: movabs $0x7fb2bd5ca820,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd5c95d0} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007fb2c1115b10: mov    0xdc(%rdx),%esi
  0x00007fb2c1115b16: add    $0x8,%esi
  0x00007fb2c1115b19: mov    %esi,0xdc(%rdx)
  0x00007fb2c1115b1f: movabs $0x7fb2bd5c95d0,%rdx  ;   {metadata({method} {0x00007fb2bd5c95d0} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007fb2c1115b29: and    $0x7ffff8,%esi
  0x00007fb2c1115b2f: cmp    $0x0,%esi
  0x00007fb2c1115b32: je     0x00007fb2c111609d
  0x00007fb2c1115b38: mov    %rax,%rdx
  0x00007fb2c1115b3b: movabs $0x7fb2bd5ca820,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd5c95d0} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007fb2c1115b45: addq   $0x1,0x108(%rsi)
  0x00007fb2c1115b4d: movabs $0x7fb2bd511108,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd39b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb2c1115b57: mov    0xdc(%rdx),%esi
  0x00007fb2c1115b5d: add    $0x8,%esi
  0x00007fb2c1115b60: mov    %esi,0xdc(%rdx)
  0x00007fb2c1115b66: movabs $0x7fb2bd39b480,%rdx  ;   {metadata({method} {0x00007fb2bd39b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb2c1115b70: and    $0x7ffff8,%esi
  0x00007fb2c1115b76: cmp    $0x0,%esi
  0x00007fb2c1115b79: je     0x00007fb2c11160b4
  0x00007fb2c1115b7f: mov    %r8,0x10(%rax)     ;*putfield mostSigBits
                                                ; - java.util.UUID::&lt;init&gt;@6 (line 129)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@310 (line 488)

  0x00007fb2c1115b83: mov    %rbx,0x18(%rax)    ;*putfield leastSigBits
                                                ; - java.util.UUID::&lt;init&gt;@11 (line 130)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@310 (line 488)

  0x00007fb2c1115b87: add    $0xd0,%rsp
  0x00007fb2c1115b8e: pop    %rbp
  0x00007fb2c1115b8f: test   %eax,0x16f3f56b(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c1115b95: retq                      ;*areturn
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@313 (line 488)

  0x00007fb2c1115b96: xchg   %ax,%ax
  0x00007fb2c1115b98: jmpq   0x00007fb2c11160da  ;   {no_reloc}
  0x00007fb2c1115b9d: add    %al,(%rax)
  0x00007fb2c1115b9f: add    %al,(%rax)
  0x00007fb2c1115ba1: add    %cl,-0x75(%rcx)
  0x00007fb2c1115ba4: rex.RXB (bad) 
  0x00007fb2c1115ba6: lea    0x20(%rax),%rdi
  0x00007fb2c1115baa: cmp    0x70(%r15),%rdi
  0x00007fb2c1115bae: ja     0x00007fb2c11160e4
  0x00007fb2c1115bb4: mov    %rdi,0x60(%r15)
  0x00007fb2c1115bb8: mov    0xa8(%rdx),%rcx
  0x00007fb2c1115bbf: mov    %rcx,(%rax)
  0x00007fb2c1115bc2: mov    %rdx,%rcx
  0x00007fb2c1115bc5: shr    $0x3,%rcx
  0x00007fb2c1115bc9: mov    %ecx,0x8(%rax)
  0x00007fb2c1115bcc: xor    %rcx,%rcx
  0x00007fb2c1115bcf: mov    %ecx,0xc(%rax)
  0x00007fb2c1115bd2: xor    %rcx,%rcx
  0x00007fb2c1115bd5: mov    %rcx,0x10(%rax)
  0x00007fb2c1115bd9: mov    %rcx,0x18(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@87 (line 459)

  0x00007fb2c1115bdd: data16 xchg %ax,%ax
  0x00007fb2c1115be0: jmpq   0x00007fb2c1116100  ;   {no_reloc}
  0x00007fb2c1115be5: add    %al,(%rax)
  0x00007fb2c1115be7: add    %al,(%rax)
  0x00007fb2c1115be9: add    %cl,-0x77(%rax)
  0x00007fb2c1115bec: test   %ah,(%rax,%rsi,4)
  0x00007fb2c1115bef: add    %al,(%rax)
  0x00007fb2c1115bf1: add    %ch,%cl
  0x00007fb2c1115bf3: adc    -0x74b80000(%rip),%eax        # 0x00007fb24c595bf9
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 459)

  0x00007fb2c1115bf9: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115bfc: sub    %ah,%al
  0x00007fb2c1115bfe: jns    0x00007fb2c1115bbd
  0x00007fb2c1115c00: mov    $0x7f,%dl
  0x00007fb2c1115c02: add    %al,(%rax)
  0x00007fb2c1115c04: addq   $0x1,0x318(%rsi)
  0x00007fb2c1115c0c: movabs $0x670bf0f60,%rdx  ;   {oop(&quot;Invalid UUID string: &quot;)}
  0x00007fb2c1115c16: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@97 (line 459)

  0x00007fb2c1115c19: mov    %rax,0xa8(%rsp)
  0x00007fb2c1115c21: nop
  0x00007fb2c1115c22: nop
  0x00007fb2c1115c23: nop
  0x00007fb2c1115c24: nop
  0x00007fb2c1115c25: nop
  0x00007fb2c1115c26: nop
  0x00007fb2c1115c27: callq  0x00007fb2c1046020  ; OopMap{[96]=Oop [168]=Oop [176]=Oop off=3660}
                                                ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@97 (line 459)
                                                ;   {optimized virtual_call}
  0x00007fb2c1115c2c: mov    0xa8(%rsp),%rax
  0x00007fb2c1115c34: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115c3e: mov    0x8(%rax),%eax
  0x00007fb2c1115c41: shl    $0x3,%rax
  0x00007fb2c1115c45: cmp    0x330(%rdx),%rax
  0x00007fb2c1115c4c: jne    0x00007fb2c1115c5b
  0x00007fb2c1115c4e: addq   $0x1,0x338(%rdx)
  0x00007fb2c1115c56: jmpq   0x00007fb2c1115cc1
  0x00007fb2c1115c5b: cmp    0x340(%rdx),%rax
  0x00007fb2c1115c62: jne    0x00007fb2c1115c71
  0x00007fb2c1115c64: addq   $0x1,0x348(%rdx)
  0x00007fb2c1115c6c: jmpq   0x00007fb2c1115cc1
  0x00007fb2c1115c71: cmpq   $0x0,0x330(%rdx)
  0x00007fb2c1115c7c: jne    0x00007fb2c1115c95
  0x00007fb2c1115c7e: mov    %rax,0x330(%rdx)
  0x00007fb2c1115c85: movq   $0x1,0x338(%rdx)
  0x00007fb2c1115c90: jmpq   0x00007fb2c1115cc1
  0x00007fb2c1115c95: cmpq   $0x0,0x340(%rdx)
  0x00007fb2c1115ca0: jne    0x00007fb2c1115cb9
  0x00007fb2c1115ca2: mov    %rax,0x340(%rdx)
  0x00007fb2c1115ca9: movq   $0x1,0x348(%rdx)
  0x00007fb2c1115cb4: jmpq   0x00007fb2c1115cc1
  0x00007fb2c1115cb9: addq   $0x1,0x328(%rdx)
  0x00007fb2c1115cc1: mov    0x60(%rsp),%rdx
  0x00007fb2c1115cc6: mov    0xa8(%rsp),%rsi    ;*invokevirtual append
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@101 (line 459)

  0x00007fb2c1115cce: nop
  0x00007fb2c1115ccf: nop
  0x00007fb2c1115cd0: nop
  0x00007fb2c1115cd1: nop
  0x00007fb2c1115cd2: nop
  0x00007fb2c1115cd3: nop
  0x00007fb2c1115cd4: nop
  0x00007fb2c1115cd5: movabs $0xffffffffffffffff,%rax
  0x00007fb2c1115cdf: callq  0x00007fb2c1046220  ; OopMap{[176]=Oop off=3844}
                                                ;*invokevirtual append
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@101 (line 459)
                                                ;   {virtual_call}
  0x00007fb2c1115ce4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00007fb2c1116117
  0x00007fb2c1115ce7: mov    %rax,%rsi
  0x00007fb2c1115cea: movabs $0x7fb2bd79e028,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115cf4: mov    0x8(%rsi),%esi
  0x00007fb2c1115cf7: shl    $0x3,%rsi
  0x00007fb2c1115cfb: cmp    0x360(%rdi),%rsi
  0x00007fb2c1115d02: jne    0x00007fb2c1115d11
  0x00007fb2c1115d04: addq   $0x1,0x368(%rdi)
  0x00007fb2c1115d0c: jmpq   0x00007fb2c1115d77
  0x00007fb2c1115d11: cmp    0x370(%rdi),%rsi
  0x00007fb2c1115d18: jne    0x00007fb2c1115d27
  0x00007fb2c1115d1a: addq   $0x1,0x378(%rdi)
  0x00007fb2c1115d22: jmpq   0x00007fb2c1115d77
  0x00007fb2c1115d27: cmpq   $0x0,0x360(%rdi)
  0x00007fb2c1115d32: jne    0x00007fb2c1115d4b
  0x00007fb2c1115d34: mov    %rsi,0x360(%rdi)
  0x00007fb2c1115d3b: movq   $0x1,0x368(%rdi)
  0x00007fb2c1115d46: jmpq   0x00007fb2c1115d77
  0x00007fb2c1115d4b: cmpq   $0x0,0x370(%rdi)
  0x00007fb2c1115d56: jne    0x00007fb2c1115d6f
  0x00007fb2c1115d58: mov    %rsi,0x370(%rdi)
  0x00007fb2c1115d5f: movq   $0x1,0x378(%rdi)
  0x00007fb2c1115d6a: jmpq   0x00007fb2c1115d77
  0x00007fb2c1115d6f: addq   $0x1,0x358(%rdi)
  0x00007fb2c1115d77: mov    %rax,%rsi          ;*invokevirtual toString
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 459)

  0x00007fb2c1115d7a: nop
  0x00007fb2c1115d7b: nop
  0x00007fb2c1115d7c: nop
  0x00007fb2c1115d7d: movabs $0xffffffffffffffff,%rax
  0x00007fb2c1115d87: callq  0x00007fb2c1046220  ; OopMap{[176]=Oop off=4012}
                                                ;*invokevirtual toString
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 459)
                                                ;   {virtual_call}
  0x00007fb2c1115d8c: mov    0xb0(%rsp),%rdx
  0x00007fb2c1115d94: movabs $0x7fb2bd79e028,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115d9e: addq   $0x1,0x388(%rsi)
  0x00007fb2c1115da6: mov    %rax,%rdx
  0x00007fb2c1115da9: mov    0xb0(%rsp),%rsi    ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@107 (line 459)

  0x00007fb2c1115db1: nop
  0x00007fb2c1115db2: nop
  0x00007fb2c1115db3: nop
  0x00007fb2c1115db4: nop
  0x00007fb2c1115db5: nop
  0x00007fb2c1115db6: nop
  0x00007fb2c1115db7: callq  0x00007fb2c1046020  ; OopMap{[176]=Oop off=4060}
                                                ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@107 (line 459)
                                                ;   {optimized virtual_call}
  0x00007fb2c1115dbc: mov    0xb0(%rsp),%rax
  0x00007fb2c1115dc4: jmpq   0x00007fb2c1116198  ;*athrow
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@110 (line 459)

  0x00007fb2c1115dc9: nopl   0x0(%rax)
  0x00007fb2c1115dd0: jmpq   0x00007fb2c111612b  ;   {no_reloc}
  0x00007fb2c1115dd5: add    %al,(%rax)
  0x00007fb2c1115dd7: add    %al,(%rax)
  0x00007fb2c1115dd9: add    %cl,-0x75(%rcx)
  0x00007fb2c1115ddc: rex.RXB (bad) 
  0x00007fb2c1115dde: lea    0x20(%rax),%rdi
  0x00007fb2c1115de2: cmp    0x70(%r15),%rdi
  0x00007fb2c1115de6: ja     0x00007fb2c1116135
  0x00007fb2c1115dec: mov    %rdi,0x60(%r15)
  0x00007fb2c1115df0: mov    0xa8(%rdx),%rcx
  0x00007fb2c1115df7: mov    %rcx,(%rax)
  0x00007fb2c1115dfa: mov    %rdx,%rcx
  0x00007fb2c1115dfd: shr    $0x3,%rcx
  0x00007fb2c1115e01: mov    %ecx,0x8(%rax)
  0x00007fb2c1115e04: xor    %rcx,%rcx
  0x00007fb2c1115e07: mov    %ecx,0xc(%rax)
  0x00007fb2c1115e0a: xor    %rcx,%rcx
  0x00007fb2c1115e0d: mov    %rcx,0x10(%rax)
  0x00007fb2c1115e11: mov    %rcx,0x18(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@11 (line 456)

  0x00007fb2c1115e15: data16 xchg %ax,%ax
  0x00007fb2c1115e18: jmpq   0x00007fb2c1116151  ;   {no_reloc}
  0x00007fb2c1115e1d: add    %al,(%rax)
  0x00007fb2c1115e1f: add    %al,(%rax)
  0x00007fb2c1115e21: add    %cl,-0x77(%rax)
  0x00007fb2c1115e24: test   %ah,(%rax,%rax,8)
  0x00007fb2c1115e27: add    %al,(%rax)
  0x00007fb2c1115e29: add    %ch,%cl
  0x00007fb2c1115e2b: sub    $0x3,%al
  0x00007fb2c1115e2d: add    %al,(%rax)         ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@15 (line 456)

  0x00007fb2c1115e2f: mov    %rax,%rdx
  0x00007fb2c1115e32: movabs $0x7fb2bd79e028,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115e3c: addq   $0x1,0x158(%rsi)
  0x00007fb2c1115e44: movabs $0x670bf0f60,%rdx  ;   {oop(&quot;Invalid UUID string: &quot;)}
  0x00007fb2c1115e4e: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@21 (line 456)

  0x00007fb2c1115e51: mov    %rax,0xb8(%rsp)
  0x00007fb2c1115e59: nop
  0x00007fb2c1115e5a: nop
  0x00007fb2c1115e5b: nop
  0x00007fb2c1115e5c: nop
  0x00007fb2c1115e5d: nop
  0x00007fb2c1115e5e: nop
  0x00007fb2c1115e5f: callq  0x00007fb2c1046020  ; OopMap{[184]=Oop [192]=Oop [96]=Oop off=4228}
                                                ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@21 (line 456)
                                                ;   {optimized virtual_call}
  0x00007fb2c1115e64: mov    0xb8(%rsp),%rax
  0x00007fb2c1115e6c: movabs $0x7fb2bd79e028,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115e76: mov    0x8(%rax),%eax
  0x00007fb2c1115e79: shl    $0x3,%rax
  0x00007fb2c1115e7d: cmp    0x170(%rdx),%rax
  0x00007fb2c1115e84: jne    0x00007fb2c1115e93
  0x00007fb2c1115e86: addq   $0x1,0x178(%rdx)
  0x00007fb2c1115e8e: jmpq   0x00007fb2c1115ef9
  0x00007fb2c1115e93: cmp    0x180(%rdx),%rax
  0x00007fb2c1115e9a: jne    0x00007fb2c1115ea9
  0x00007fb2c1115e9c: addq   $0x1,0x188(%rdx)
  0x00007fb2c1115ea4: jmpq   0x00007fb2c1115ef9
  0x00007fb2c1115ea9: cmpq   $0x0,0x170(%rdx)
  0x00007fb2c1115eb4: jne    0x00007fb2c1115ecd
  0x00007fb2c1115eb6: mov    %rax,0x170(%rdx)
  0x00007fb2c1115ebd: movq   $0x1,0x178(%rdx)
  0x00007fb2c1115ec8: jmpq   0x00007fb2c1115ef9
  0x00007fb2c1115ecd: cmpq   $0x0,0x180(%rdx)
  0x00007fb2c1115ed8: jne    0x00007fb2c1115ef1
  0x00007fb2c1115eda: mov    %rax,0x180(%rdx)
  0x00007fb2c1115ee1: movq   $0x1,0x188(%rdx)
  0x00007fb2c1115eec: jmpq   0x00007fb2c1115ef9
  0x00007fb2c1115ef1: addq   $0x1,0x168(%rdx)
  0x00007fb2c1115ef9: mov    0x60(%rsp),%rdx
  0x00007fb2c1115efe: mov    0xb8(%rsp),%rsi    ;*invokevirtual append
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@25 (line 456)

  0x00007fb2c1115f06: nop
  0x00007fb2c1115f07: nop
  0x00007fb2c1115f08: nop
  0x00007fb2c1115f09: nop
  0x00007fb2c1115f0a: nop
  0x00007fb2c1115f0b: nop
  0x00007fb2c1115f0c: nop
  0x00007fb2c1115f0d: movabs $0xffffffffffffffff,%rax
  0x00007fb2c1115f17: callq  0x00007fb2c1046220  ; OopMap{[192]=Oop off=4412}
                                                ;*invokevirtual append
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@25 (line 456)
                                                ;   {virtual_call}
  0x00007fb2c1115f1c: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00007fb2c1116168
  0x00007fb2c1115f1f: mov    %rax,%rsi
  0x00007fb2c1115f22: movabs $0x7fb2bd79e028,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115f2c: mov    0x8(%rsi),%esi
  0x00007fb2c1115f2f: shl    $0x3,%rsi
  0x00007fb2c1115f33: cmp    0x1a0(%rdi),%rsi
  0x00007fb2c1115f3a: jne    0x00007fb2c1115f49
  0x00007fb2c1115f3c: addq   $0x1,0x1a8(%rdi)
  0x00007fb2c1115f44: jmpq   0x00007fb2c1115faf
  0x00007fb2c1115f49: cmp    0x1b0(%rdi),%rsi
  0x00007fb2c1115f50: jne    0x00007fb2c1115f5f
  0x00007fb2c1115f52: addq   $0x1,0x1b8(%rdi)
  0x00007fb2c1115f5a: jmpq   0x00007fb2c1115faf
  0x00007fb2c1115f5f: cmpq   $0x0,0x1a0(%rdi)
  0x00007fb2c1115f6a: jne    0x00007fb2c1115f83
  0x00007fb2c1115f6c: mov    %rsi,0x1a0(%rdi)
  0x00007fb2c1115f73: movq   $0x1,0x1a8(%rdi)
  0x00007fb2c1115f7e: jmpq   0x00007fb2c1115faf
  0x00007fb2c1115f83: cmpq   $0x0,0x1b0(%rdi)
  0x00007fb2c1115f8e: jne    0x00007fb2c1115fa7
  0x00007fb2c1115f90: mov    %rsi,0x1b0(%rdi)
  0x00007fb2c1115f97: movq   $0x1,0x1b8(%rdi)
  0x00007fb2c1115fa2: jmpq   0x00007fb2c1115faf
  0x00007fb2c1115fa7: addq   $0x1,0x198(%rdi)
  0x00007fb2c1115faf: mov    %rax,%rsi          ;*invokevirtual toString
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@28 (line 456)

  0x00007fb2c1115fb2: nop
  0x00007fb2c1115fb3: nop
  0x00007fb2c1115fb4: nop
  0x00007fb2c1115fb5: movabs $0xffffffffffffffff,%rax
  0x00007fb2c1115fbf: callq  0x00007fb2c1046220  ; OopMap{[192]=Oop off=4580}
                                                ;*invokevirtual toString
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@28 (line 456)
                                                ;   {virtual_call}
  0x00007fb2c1115fc4: mov    0xc0(%rsp),%rdx
  0x00007fb2c1115fcc: movabs $0x7fb2bd79e028,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fb2c1115fd6: addq   $0x1,0x1c8(%rsi)
  0x00007fb2c1115fde: mov    %rax,%rdx
  0x00007fb2c1115fe1: mov    0xc0(%rsp),%rsi    ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@31 (line 456)

  0x00007fb2c1115fe9: nop
  0x00007fb2c1115fea: nop
  0x00007fb2c1115feb: nop
  0x00007fb2c1115fec: nop
  0x00007fb2c1115fed: nop
  0x00007fb2c1115fee: nop
  0x00007fb2c1115fef: callq  0x00007fb2c1046020  ; OopMap{[192]=Oop off=4628}
                                                ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@31 (line 456)
                                                ;   {optimized virtual_call}
  0x00007fb2c1115ff4: mov    0xc0(%rsp),%rax
  0x00007fb2c1115ffc: jmpq   0x00007fb2c1116198
  0x00007fb2c1116001: mov    %rdi,0x8(%rsp)
  0x00007fb2c1116006: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c111600e: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop [96]=Oop off=4659}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@-1 (line 455)
                                                ;   {runtime_call}
  0x00007fb2c1116013: jmpq   0x00007fb2c1114e26
  0x00007fb2c1116018: callq  0x00007fb2c106ee40  ; OopMap{rsi=Oop [96]=Oop off=4669}
                                                ;*invokeinterface length
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ;   {runtime_call}
  0x00007fb2c111601d: mov    %rdx,0x8(%rsp)
  0x00007fb2c1116022: movq   $0x95,(%rsp)
  0x00007fb2c111602a: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop [96]=Oop off=4687}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@149 (line 465)
                                                ;   {runtime_call}
  0x00007fb2c111602f: jmpq   0x00007fb2c11153f9
  0x00007fb2c1116034: mov    %rdx,0x8(%rsp)
  0x00007fb2c1116039: movq   $0xbb,(%rsp)
  0x00007fb2c1116041: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop [96]=Oop off=4710}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@187 (line 469)
                                                ;   {runtime_call}
  0x00007fb2c1116046: jmpq   0x00007fb2c1115579
  0x00007fb2c111604b: mov    %rdx,0x8(%rsp)
  0x00007fb2c1116050: movq   $0xe1,(%rsp)
  0x00007fb2c1116058: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop [96]=Oop off=4733}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@225 (line 473)
                                                ;   {runtime_call}
  0x00007fb2c111605d: jmpq   0x00007fb2c111570a
  0x00007fb2c1116062: mov    %rdx,0x8(%rsp)
  0x00007fb2c1116067: movq   $0x107,(%rsp)
  0x00007fb2c111606f: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop [96]=Oop off=4756}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@263 (line 479)
                                                ;   {runtime_call}
  0x00007fb2c1116074: jmpq   0x00007fb2c11158bd
  0x00007fb2c1116079: mov    %rdx,0x8(%rsp)
  0x00007fb2c111607e: movq   $0x12d,(%rsp)
  0x00007fb2c1116086: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop [96]=Oop off=4779}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@301 (line 483)
                                                ;   {runtime_call}
  0x00007fb2c111608b: jmpq   0x00007fb2c1115a5d
  0x00007fb2c1116090: mov    %rdx,%rdx
  0x00007fb2c1116093: callq  0x00007fb2c106e520  ; OopMap{off=4792}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@304 (line 488)
                                                ;   {runtime_call}
  0x00007fb2c1116098: jmpq   0x00007fb2c1115af1
  0x00007fb2c111609d: mov    %rdx,0x8(%rsp)
  0x00007fb2c11160a2: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c11160aa: callq  0x00007fb2c10feb20  ; OopMap{rax=Oop off=4815}
                                                ;*synchronization entry
                                                ; - java.util.UUID::&lt;init&gt;@-1 (line 128)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@310 (line 488)
                                                ;   {runtime_call}
  0x00007fb2c11160af: jmpq   0x00007fb2c1115b38
  0x00007fb2c11160b4: mov    %rdx,0x8(%rsp)
  0x00007fb2c11160b9: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c11160c1: callq  0x00007fb2c10feb20  ; OopMap{rax=Oop off=4838}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.UUID::&lt;init&gt;@1 (line 128)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@310 (line 488)
                                                ;   {runtime_call}
  0x00007fb2c11160c6: jmpq   0x00007fb2c1115b7f
  0x00007fb2c11160cb: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb2c11160d5: mov    $0xa050f00,%eax
  0x00007fb2c11160da: callq  0x00007fb2c10ffe60  ; OopMap{[96]=Oop off=4863}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@87 (line 459)
                                                ;   {runtime_call}
  0x00007fb2c11160df: jmpq   0x00007fb2c1115b98
  0x00007fb2c11160e4: mov    %rdx,%rdx
  0x00007fb2c11160e7: callq  0x00007fb2c106e520  ; OopMap{[96]=Oop off=4876}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@87 (line 459)
                                                ;   {runtime_call}
  0x00007fb2c11160ec: jmpq   0x00007fb2c1115bdd
  0x00007fb2c11160f1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb2c11160fb: mov    $0xa050f00,%eax
  0x00007fb2c1116100: callq  0x00007fb2c10ffe60  ; OopMap{[96]=Oop rax=Oop off=4901}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 459)
                                                ;   {runtime_call}
  0x00007fb2c1116105: jmpq   0x00007fb2c1115be0
  0x00007fb2c111610a: mov    %rdx,%rdx
  0x00007fb2c111610d: callq  0x00007fb2c106e920  ; OopMap{[96]=Oop [176]=Oop off=4914}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 459)
                                                ;   {runtime_call}
  0x00007fb2c1116112: jmpq   0x00007fb2c1115bf7
  0x00007fb2c1116117: callq  0x00007fb2c106ee40  ; OopMap{[176]=Oop rax=Oop off=4924}
                                                ;*invokevirtual toString
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 459)
                                                ;   {runtime_call}
  0x00007fb2c111611c: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb2c1116126: mov    $0xa050f00,%eax
  0x00007fb2c111612b: callq  0x00007fb2c10ffe60  ; OopMap{[96]=Oop off=4944}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@11 (line 456)
                                                ;   {runtime_call}
  0x00007fb2c1116130: jmpq   0x00007fb2c1115dd0
  0x00007fb2c1116135: mov    %rdx,%rdx
  0x00007fb2c1116138: callq  0x00007fb2c106e520  ; OopMap{[96]=Oop off=4957}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@11 (line 456)
                                                ;   {runtime_call}
  0x00007fb2c111613d: jmpq   0x00007fb2c1115e15
  0x00007fb2c1116142: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb2c111614c: mov    $0xa050f00,%eax
  0x00007fb2c1116151: callq  0x00007fb2c10ffe60  ; OopMap{[96]=Oop rax=Oop off=4982}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@15 (line 456)
                                                ;   {runtime_call}
  0x00007fb2c1116156: jmpq   0x00007fb2c1115e18
  0x00007fb2c111615b: mov    %rdx,%rdx
  0x00007fb2c111615e: callq  0x00007fb2c106e920  ; OopMap{[96]=Oop [192]=Oop off=4995}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@15 (line 456)
                                                ;   {runtime_call}
  0x00007fb2c1116163: jmpq   0x00007fb2c1115e2f
  0x00007fb2c1116168: callq  0x00007fb2c106ee40  ; OopMap{[192]=Oop rax=Oop off=5005}
                                                ;*invokevirtual toString
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@28 (line 456)
                                                ;   {runtime_call}
  0x00007fb2c111616d: nop
  0x00007fb2c111616e: nop
  0x00007fb2c111616f: mov    0x2a8(%r15),%rax
  0x00007fb2c1116176: movabs $0x0,%r10
  0x00007fb2c1116180: mov    %r10,0x2a8(%r15)
  0x00007fb2c1116187: movabs $0x0,%r10
  0x00007fb2c1116191: mov    %r10,0x2b0(%r15)
  0x00007fb2c1116198: add    $0xd0,%rsp
  0x00007fb2c111619f: pop    %rbp
  0x00007fb2c11161a0: jmpq   0x00007fb2c106c3e0  ;   {runtime_call}
  0x00007fb2c11161a5: hlt    
  0x00007fb2c11161a6: hlt    
  0x00007fb2c11161a7: hlt    
  0x00007fb2c11161a8: hlt    
  0x00007fb2c11161a9: hlt    
  0x00007fb2c11161aa: hlt    
  0x00007fb2c11161ab: hlt    
  0x00007fb2c11161ac: hlt    
  0x00007fb2c11161ad: hlt    
  0x00007fb2c11161ae: hlt    
  0x00007fb2c11161af: hlt    
  0x00007fb2c11161b0: hlt    
  0x00007fb2c11161b1: hlt    
  0x00007fb2c11161b2: hlt    
  0x00007fb2c11161b3: hlt    
  0x00007fb2c11161b4: hlt    
  0x00007fb2c11161b5: hlt    
  0x00007fb2c11161b6: hlt    
  0x00007fb2c11161b7: hlt    
  0x00007fb2c11161b8: hlt    
  0x00007fb2c11161b9: hlt    
  0x00007fb2c11161ba: hlt    
  0x00007fb2c11161bb: hlt    
  0x00007fb2c11161bc: hlt    
  0x00007fb2c11161bd: hlt    
  0x00007fb2c11161be: hlt    
  0x00007fb2c11161bf: hlt    
[Stub Code]
  0x00007fb2c11161c0: nop                       ;   {no_reloc}
  0x00007fb2c11161c1: nop
  0x00007fb2c11161c2: nop
  0x00007fb2c11161c3: nop
  0x00007fb2c11161c4: nop
  0x00007fb2c11161c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c11161cf: jmpq   0x00007fb2c11161cf  ;   {runtime_call}
  0x00007fb2c11161d4: nop
  0x00007fb2c11161d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c11161df: jmpq   0x00007fb2c11161df  ;   {runtime_call}
  0x00007fb2c11161e4: nop
  0x00007fb2c11161e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c11161ef: jmpq   0x00007fb2c11161ef  ;   {runtime_call}
  0x00007fb2c11161f4: nop
  0x00007fb2c11161f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c11161ff: jmpq   0x00007fb2c11161ff  ;   {runtime_call}
  0x00007fb2c1116204: nop
  0x00007fb2c1116205: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c111620f: jmpq   0x00007fb2c111620f  ;   {runtime_call}
  0x00007fb2c1116214: nop
  0x00007fb2c1116215: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c111621f: jmpq   0x00007fb2c111621f  ;   {runtime_call}
  0x00007fb2c1116224: nop
  0x00007fb2c1116225: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c111622f: jmpq   0x00007fb2c111622f  ;   {runtime_call}
  0x00007fb2c1116234: nop
  0x00007fb2c1116235: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c111623f: jmpq   0x00007fb2c111623f  ;   {runtime_call}
  0x00007fb2c1116244: nop
  0x00007fb2c1116245: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c111624f: jmpq   0x00007fb2c111624f  ;   {runtime_call}
  0x00007fb2c1116254: nop
  0x00007fb2c1116255: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c111625f: jmpq   0x00007fb2c111625f  ;   {runtime_call}
  0x00007fb2c1116264: nop
  0x00007fb2c1116265: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c111626f: jmpq   0x00007fb2c111626f  ;   {runtime_call}
  0x00007fb2c1116274: nop
  0x00007fb2c1116275: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c111627f: jmpq   0x00007fb2c111627f  ;   {runtime_call}
  0x00007fb2c1116284: nop
  0x00007fb2c1116285: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c111628f: jmpq   0x00007fb2c111628f  ;   {runtime_call}
  0x00007fb2c1116294: nop
  0x00007fb2c1116295: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c111629f: jmpq   0x00007fb2c111629f  ;   {runtime_call}
  0x00007fb2c11162a4: nop
  0x00007fb2c11162a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c11162af: jmpq   0x00007fb2c11162af  ;   {runtime_call}
  0x00007fb2c11162b4: nop
  0x00007fb2c11162b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c11162bf: jmpq   0x00007fb2c11162bf  ;   {runtime_call}
  0x00007fb2c11162c4: nop
  0x00007fb2c11162c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c11162cf: jmpq   0x00007fb2c11162cf  ;   {runtime_call}
  0x00007fb2c11162d4: nop
  0x00007fb2c11162d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c11162df: jmpq   0x00007fb2c11162df  ;   {runtime_call}
  0x00007fb2c11162e4: nop
  0x00007fb2c11162e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c11162ef: jmpq   0x00007fb2c11162ef  ;   {runtime_call}
  0x00007fb2c11162f4: nop
  0x00007fb2c11162f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c11162ff: jmpq   0x00007fb2c11162ff  ;   {runtime_call}
  0x00007fb2c1116304: nop
  0x00007fb2c1116305: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c111630f: jmpq   0x00007fb2c111630f  ;   {runtime_call}
  0x00007fb2c1116314: nop
  0x00007fb2c1116315: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c111631f: jmpq   0x00007fb2c111631f  ;   {runtime_call}
  0x00007fb2c1116324: nop
  0x00007fb2c1116325: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c111632f: jmpq   0x00007fb2c111632f  ;   {runtime_call}
[Exception Handler]
  0x00007fb2c1116334: callq  0x00007fb2c106cfe0  ;   {runtime_call}
  0x00007fb2c1116339: mov    %rsp,-0x28(%rsp)
  0x00007fb2c111633e: sub    $0x80,%rsp
  0x00007fb2c1116345: mov    %rax,0x78(%rsp)
  0x00007fb2c111634a: mov    %rcx,0x70(%rsp)
  0x00007fb2c111634f: mov    %rdx,0x68(%rsp)
  0x00007fb2c1116354: mov    %rbx,0x60(%rsp)
  0x00007fb2c1116359: mov    %rbp,0x50(%rsp)
  0x00007fb2c111635e: mov    %rsi,0x48(%rsp)
  0x00007fb2c1116363: mov    %rdi,0x40(%rsp)
  0x00007fb2c1116368: mov    %r8,0x38(%rsp)
  0x00007fb2c111636d: mov    %r9,0x30(%rsp)
  0x00007fb2c1116372: mov    %r10,0x28(%rsp)
  0x00007fb2c1116377: mov    %r11,0x20(%rsp)
  0x00007fb2c111637c: mov    %r12,0x18(%rsp)
  0x00007fb2c1116381: mov    %r13,0x10(%rsp)
  0x00007fb2c1116386: mov    %r14,0x8(%rsp)
  0x00007fb2c111638b: mov    %r15,(%rsp)
  0x00007fb2c111638f: movabs $0x7fb2d6f4df36,%rdi  ;   {external_word}
  0x00007fb2c1116399: movabs $0x7fb2c1116339,%rsi  ;   {internal_word}
  0x00007fb2c11163a3: mov    %rsp,%rdx
  0x00007fb2c11163a6: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c11163aa: callq  0x00007fb2d6c79990  ;   {runtime_call}
  0x00007fb2c11163af: hlt    
[Deopt Handler Code]
  0x00007fb2c11163b0: movabs $0x7fb2c11163b0,%r10  ;   {section_word}
  0x00007fb2c11163ba: push   %r10
  0x00007fb2c11163bc: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c11163c1: hlt    
  0x00007fb2c11163c2: hlt    
  0x00007fb2c11163c3: hlt    
  0x00007fb2c11163c4: hlt    
  0x00007fb2c11163c5: hlt    
  0x00007fb2c11163c6: hlt    
  0x00007fb2c11163c7: hlt    
<nmethod compile_id='16' compiler='C1' level='3' entry='0x00007fb2c1114de0' size='9288' address='0x00007fb2c1114a90' relocation_offset='296' insts_offset='848' stub_offset='5936' scopes_data_offset='6488' scopes_pcs_offset='7648' dependencies_offset='9248' nul_chk_table_offset='9256' oops_offset='6456' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='314' count='5835' backedge_count='186713' iicount='5836' stamp='0.127'/>
<writer thread='140406105003776'/>
<task_queued compile_id='23' compile_kind='osr' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='314' count='6023' backedge_count='193632' iicount='6023' osr_bci='159' stamp='0.128' comment='tiered' hot_count='193632'/>
<writer thread='140404518676224'/>
Decoding compiled method 0x00007fb2c1111050:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fb2bd39b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb2c11111a0: mov    0x8(%rsi),%r10d
  0x00007fb2c11111a4: shl    $0x3,%r10
  0x00007fb2c11111a8: cmp    %rax,%r10
  0x00007fb2c11111ab: jne    0x00007fb2c1045e20  ;   {runtime_call}
  0x00007fb2c11111b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c11111bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb2c11111c0: mov    %eax,-0x14000(%rsp)
  0x00007fb2c11111c7: push   %rbp
  0x00007fb2c11111c8: sub    $0x30,%rsp
  0x00007fb2c11111cc: mov    %rsi,%rdi          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x00007fb2c11111cf: mov    %rsi,0x20(%rsp)
  0x00007fb2c11111d4: callq  0x00007fb2c106eba0  ; OopMap{[32]=Oop off=57}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x00007fb2c11111d9: add    $0x30,%rsp
  0x00007fb2c11111dd: pop    %rbp
  0x00007fb2c11111de: test   %eax,0x16f43f1c(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c11111e4: retq   
  0x00007fb2c11111e5: nop
  0x00007fb2c11111e6: nop
  0x00007fb2c11111e7: mov    0x2a8(%r15),%rax
  0x00007fb2c11111ee: movabs $0x0,%r10
  0x00007fb2c11111f8: mov    %r10,0x2a8(%r15)
  0x00007fb2c11111ff: movabs $0x0,%r10
  0x00007fb2c1111209: mov    %r10,0x2b0(%r15)
  0x00007fb2c1111210: add    $0x30,%rsp
  0x00007fb2c1111214: pop    %rbp
  0x00007fb2c1111215: jmpq   0x00007fb2c106c3e0  ;   {runtime_call}
  0x00007fb2c111121a: hlt    
  0x00007fb2c111121b: hlt    
  0x00007fb2c111121c: hlt    
  0x00007fb2c111121d: hlt    
  0x00007fb2c111121e: hlt    
  0x00007fb2c111121f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb2c1111220: callq  0x00007fb2c106cfe0  ;   {no_reloc}
  0x00007fb2c1111225: mov    %rsp,-0x28(%rsp)
  0x00007fb2c111122a: sub    $0x80,%rsp
  0x00007fb2c1111231: mov    %rax,0x78(%rsp)
  0x00007fb2c1111236: mov    %rcx,0x70(%rsp)
  0x00007fb2c111123b: mov    %rdx,0x68(%rsp)
  0x00007fb2c1111240: mov    %rbx,0x60(%rsp)
  0x00007fb2c1111245: mov    %rbp,0x50(%rsp)
  0x00007fb2c111124a: mov    %rsi,0x48(%rsp)
  0x00007fb2c111124f: mov    %rdi,0x40(%rsp)
  0x00007fb2c1111254: mov    %r8,0x38(%rsp)
  0x00007fb2c1111259: mov    %r9,0x30(%rsp)
  0x00007fb2c111125e: mov    %r10,0x28(%rsp)
  0x00007fb2c1111263: mov    %r11,0x20(%rsp)
  0x00007fb2c1111268: mov    %r12,0x18(%rsp)
  0x00007fb2c111126d: mov    %r13,0x10(%rsp)
  0x00007fb2c1111272: mov    %r14,0x8(%rsp)
  0x00007fb2c1111277: mov    %r15,(%rsp)
  0x00007fb2c111127b: movabs $0x7fb2d6f4df36,%rdi  ;   {external_word}
  0x00007fb2c1111285: movabs $0x7fb2c1111225,%rsi  ;   {internal_word}
  0x00007fb2c111128f: mov    %rsp,%rdx
  0x00007fb2c1111292: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c1111296: callq  0x00007fb2d6c79990  ;   {runtime_call}
  0x00007fb2c111129b: hlt    
[Deopt Handler Code]
  0x00007fb2c111129c: movabs $0x7fb2c111129c,%r10  ;   {section_word}
  0x00007fb2c11112a6: push   %r10
  0x00007fb2c11112a8: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c11112ad: hlt    
  0x00007fb2c11112ae: hlt    
  0x00007fb2c11112af: hlt    
<nmethod compile_id='21' compiler='C1' level='1' entry='0x00007fb2c11111a0' size='712' address='0x00007fb2c1111050' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='640' dependencies_offset='704' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='9017' iicount='9018' stamp='0.128'/>
<make_not_entrant thread='140404518676224' compile_id='10' compiler='C1' level='3' stamp='0.128'/>
Decoding compiled method 0x00007fb2c1110d10:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fb2bd39ec60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb2c1110e60: mov    0x8(%rsi),%r10d
  0x00007fb2c1110e64: shl    $0x3,%r10
  0x00007fb2c1110e68: cmp    %rax,%r10
  0x00007fb2c1110e6b: jne    0x00007fb2c1045e20  ;   {runtime_call}
  0x00007fb2c1110e71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c1110e7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb2c1110e80: mov    %eax,-0x14000(%rsp)
  0x00007fb2c1110e87: push   %rbp
  0x00007fb2c1110e88: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.String::length@0 (line 623)

  0x00007fb2c1110e8c: mov    0xc(%rsi),%eax
  0x00007fb2c1110e8f: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x00007fb2c1110e93: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x00007fb2c1110ea2
  0x00007fb2c1110e96: add    $0x30,%rsp
  0x00007fb2c1110e9a: pop    %rbp
  0x00007fb2c1110e9b: test   %eax,0x16f4425f(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c1110ea1: retq   
  0x00007fb2c1110ea2: callq  0x00007fb2c106ee40  ; OopMap{off=71}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x00007fb2c1110ea7: nop
  0x00007fb2c1110ea8: nop
  0x00007fb2c1110ea9: mov    0x2a8(%r15),%rax
  0x00007fb2c1110eb0: movabs $0x0,%r10
  0x00007fb2c1110eba: mov    %r10,0x2a8(%r15)
  0x00007fb2c1110ec1: movabs $0x0,%r10
  0x00007fb2c1110ecb: mov    %r10,0x2b0(%r15)
  0x00007fb2c1110ed2: add    $0x30,%rsp
  0x00007fb2c1110ed6: pop    %rbp
  0x00007fb2c1110ed7: jmpq   0x00007fb2c106c3e0  ;   {runtime_call}
  0x00007fb2c1110edc: hlt    
  0x00007fb2c1110edd: hlt    
  0x00007fb2c1110ede: hlt    
  0x00007fb2c1110edf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb2c1110ee0: callq  0x00007fb2c106cfe0  ;   {no_reloc}
  0x00007fb2c1110ee5: mov    %rsp,-0x28(%rsp)
  0x00007fb2c1110eea: sub    $0x80,%rsp
  0x00007fb2c1110ef1: mov    %rax,0x78(%rsp)
  0x00007fb2c1110ef6: mov    %rcx,0x70(%rsp)
  0x00007fb2c1110efb: mov    %rdx,0x68(%rsp)
  0x00007fb2c1110f00: mov    %rbx,0x60(%rsp)
  0x00007fb2c1110f05: mov    %rbp,0x50(%rsp)
  0x00007fb2c1110f0a: mov    %rsi,0x48(%rsp)
  0x00007fb2c1110f0f: mov    %rdi,0x40(%rsp)
  0x00007fb2c1110f14: mov    %r8,0x38(%rsp)
  0x00007fb2c1110f19: mov    %r9,0x30(%rsp)
  0x00007fb2c1110f1e: mov    %r10,0x28(%rsp)
  0x00007fb2c1110f23: mov    %r11,0x20(%rsp)
  0x00007fb2c1110f28: mov    %r12,0x18(%rsp)
  0x00007fb2c1110f2d: mov    %r13,0x10(%rsp)
  0x00007fb2c1110f32: mov    %r14,0x8(%rsp)
  0x00007fb2c1110f37: mov    %r15,(%rsp)
  0x00007fb2c1110f3b: movabs $0x7fb2d6f4df36,%rdi  ;   {external_word}
  0x00007fb2c1110f45: movabs $0x7fb2c1110ee5,%rsi  ;   {internal_word}
  0x00007fb2c1110f4f: mov    %rsp,%rdx
  0x00007fb2c1110f52: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c1110f56: callq  0x00007fb2d6c79990  ;   {runtime_call}
  0x00007fb2c1110f5b: hlt    
[Deopt Handler Code]
  0x00007fb2c1110f5c: movabs $0x7fb2c1110f5c,%r10  ;   {section_word}
  0x00007fb2c1110f66: push   %r10
  0x00007fb2c1110f68: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c1110f6d: hlt    
  0x00007fb2c1110f6e: hlt    
  0x00007fb2c1110f6f: hlt    
<nmethod compile_id='22' compiler='C1' level='1' entry='0x00007fb2c1110e60' size='768' address='0x00007fb2c1110d10' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='648' dependencies_offset='744' nul_chk_table_offset='752' method='java/lang/String length ()I' bytes='6' count='8930' iicount='8931' stamp='0.129'/>
<make_not_entrant thread='140404518676224' compile_id='9' compiler='C1' level='3' stamp='0.129'/>
Decoding compiled method 0x00007fb2c1110950:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fb2bd79b428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb2c1110ac0: mov    0x8(%rsi),%r10d
  0x00007fb2c1110ac4: shl    $0x3,%r10
  0x00007fb2c1110ac8: cmp    %rax,%r10
  0x00007fb2c1110acb: jne    0x00007fb2c1045e20  ;   {runtime_call}
  0x00007fb2c1110ad1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c1110adc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb2c1110ae0: mov    %eax,-0x14000(%rsp)
  0x00007fb2c1110ae7: push   %rbp
  0x00007fb2c1110ae8: sub    $0x30,%rsp
  0x00007fb2c1110aec: movabs $0x7fb2bd79b680,%rdi
  0x00007fb2c1110af6: mov    0x8(%rdi),%ebx
  0x00007fb2c1110af9: add    $0x8,%ebx
  0x00007fb2c1110afc: mov    %ebx,0x8(%rdi)
  0x00007fb2c1110aff: movabs $0x7fb2bd79b428,%rdi  ;   {metadata({method} {0x00007fb2bd79b428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c1110b09: and    $0x3ff8,%ebx
  0x00007fb2c1110b0f: cmp    $0x0,%ebx
  0x00007fb2c1110b12: je     0x00007fb2c1110b38  ;*ldc
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@0 (line 21)

  0x00007fb2c1110b18: movabs $0x670be7490,%rsi  ;*invokestatic uuidFromCharSequence
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {oop(&quot;ba226cf7-d156-4b18-a78a-094736208cc9&quot;)}
  0x00007fb2c1110b22: nop
  0x00007fb2c1110b23: nop
  0x00007fb2c1110b24: nop
  0x00007fb2c1110b25: nop
  0x00007fb2c1110b26: nop
  0x00007fb2c1110b27: callq  0x00007fb2c1046420  ; OopMap{off=108}
                                                ;*invokestatic uuidFromCharSequence
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {static_call}
  0x00007fb2c1110b2c: add    $0x30,%rsp
  0x00007fb2c1110b30: pop    %rbp
  0x00007fb2c1110b31: test   %eax,0x16f445c9(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c1110b37: retq   
  0x00007fb2c1110b38: mov    %rdi,0x8(%rsp)
  0x00007fb2c1110b3d: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c1110b45: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop off=138}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@-1 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1110b4a: jmp    0x00007fb2c1110b18
  0x00007fb2c1110b4c: nop
  0x00007fb2c1110b4d: nop
  0x00007fb2c1110b4e: mov    0x2a8(%r15),%rax
  0x00007fb2c1110b55: movabs $0x0,%r10
  0x00007fb2c1110b5f: mov    %r10,0x2a8(%r15)
  0x00007fb2c1110b66: movabs $0x0,%r10
  0x00007fb2c1110b70: mov    %r10,0x2b0(%r15)
  0x00007fb2c1110b77: add    $0x30,%rsp
  0x00007fb2c1110b7b: pop    %rbp
  0x00007fb2c1110b7c: jmpq   0x00007fb2c106c3e0  ;   {runtime_call}
  0x00007fb2c1110b81: hlt    
  0x00007fb2c1110b82: hlt    
  0x00007fb2c1110b83: hlt    
  0x00007fb2c1110b84: hlt    
  0x00007fb2c1110b85: hlt    
  0x00007fb2c1110b86: hlt    
  0x00007fb2c1110b87: hlt    
  0x00007fb2c1110b88: hlt    
  0x00007fb2c1110b89: hlt    
  0x00007fb2c1110b8a: hlt    
  0x00007fb2c1110b8b: hlt    
  0x00007fb2c1110b8c: hlt    
  0x00007fb2c1110b8d: hlt    
  0x00007fb2c1110b8e: hlt    
  0x00007fb2c1110b8f: hlt    
  0x00007fb2c1110b90: hlt    
  0x00007fb2c1110b91: hlt    
  0x00007fb2c1110b92: hlt    
  0x00007fb2c1110b93: hlt    
  0x00007fb2c1110b94: hlt    
  0x00007fb2c1110b95: hlt    
  0x00007fb2c1110b96: hlt    
  0x00007fb2c1110b97: hlt    
  0x00007fb2c1110b98: hlt    
  0x00007fb2c1110b99: hlt    
  0x00007fb2c1110b9a: hlt    
  0x00007fb2c1110b9b: hlt    
  0x00007fb2c1110b9c: hlt    
  0x00007fb2c1110b9d: hlt    
  0x00007fb2c1110b9e: hlt    
  0x00007fb2c1110b9f: hlt    
[Stub Code]
  0x00007fb2c1110ba0: nop                       ;   {no_reloc}
  0x00007fb2c1110ba1: nop
  0x00007fb2c1110ba2: nop
  0x00007fb2c1110ba3: nop
  0x00007fb2c1110ba4: nop
  0x00007fb2c1110ba5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c1110baf: jmpq   0x00007fb2c1110baf  ;   {runtime_call}
[Exception Handler]
  0x00007fb2c1110bb4: callq  0x00007fb2c106cfe0  ;   {runtime_call}
  0x00007fb2c1110bb9: mov    %rsp,-0x28(%rsp)
  0x00007fb2c1110bbe: sub    $0x80,%rsp
  0x00007fb2c1110bc5: mov    %rax,0x78(%rsp)
  0x00007fb2c1110bca: mov    %rcx,0x70(%rsp)
  0x00007fb2c1110bcf: mov    %rdx,0x68(%rsp)
  0x00007fb2c1110bd4: mov    %rbx,0x60(%rsp)
  0x00007fb2c1110bd9: mov    %rbp,0x50(%rsp)
  0x00007fb2c1110bde: mov    %rsi,0x48(%rsp)
  0x00007fb2c1110be3: mov    %rdi,0x40(%rsp)
  0x00007fb2c1110be8: mov    %r8,0x38(%rsp)
  0x00007fb2c1110bed: mov    %r9,0x30(%rsp)
  0x00007fb2c1110bf2: mov    %r10,0x28(%rsp)
  0x00007fb2c1110bf7: mov    %r11,0x20(%rsp)
  0x00007fb2c1110bfc: mov    %r12,0x18(%rsp)
  0x00007fb2c1110c01: mov    %r13,0x10(%rsp)
  0x00007fb2c1110c06: mov    %r14,0x8(%rsp)
  0x00007fb2c1110c0b: mov    %r15,(%rsp)
  0x00007fb2c1110c0f: movabs $0x7fb2d6f4df36,%rdi  ;   {external_word}
  0x00007fb2c1110c19: movabs $0x7fb2c1110bb9,%rsi  ;   {internal_word}
  0x00007fb2c1110c23: mov    %rsp,%rdx
  0x00007fb2c1110c26: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c1110c2a: callq  0x00007fb2d6c79990  ;   {runtime_call}
  0x00007fb2c1110c2f: hlt    
[Deopt Handler Code]
  0x00007fb2c1110c30: movabs $0x7fb2c1110c30,%r10  ;   {section_word}
  0x00007fb2c1110c3a: push   %r10
  0x00007fb2c1110c3c: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c1110c41: hlt    
  0x00007fb2c1110c42: hlt    
  0x00007fb2c1110c43: hlt    
  0x00007fb2c1110c44: hlt    
  0x00007fb2c1110c45: hlt    
  0x00007fb2c1110c46: hlt    
  0x00007fb2c1110c47: hlt    
<nmethod compile_id='18' compiler='C1' level='2' entry='0x00007fb2c1110ac0' size='912' address='0x00007fb2c1110950' relocation_offset='296' insts_offset='368' stub_offset='592' scopes_data_offset='776' scopes_pcs_offset='808' dependencies_offset='904' oops_offset='760' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='10211' iicount='10212' stamp='0.130'/>
Decoding compiled method 0x00007fb2c11105d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fb2bd5c95d0} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;
  # this:     rsi:rsi   = &apos;java/util/UUID&apos;
  # parm0:    rdx:rdx   = long
  # parm1:    rcx:rcx   = long
  #           [sp+0x40]  (sp of caller)
  0x00007fb2c1110720: mov    0x8(%rsi),%r10d
  0x00007fb2c1110724: shl    $0x3,%r10
  0x00007fb2c1110728: cmp    %rax,%r10
  0x00007fb2c111072b: jne    0x00007fb2c1045e20  ;   {runtime_call}
  0x00007fb2c1110731: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c111073c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb2c1110740: mov    %eax,-0x14000(%rsp)
  0x00007fb2c1110747: push   %rbp
  0x00007fb2c1110748: sub    $0x30,%rsp
  0x00007fb2c111074c: movabs $0x7fb2bd5ca6b0,%rdi
  0x00007fb2c1110756: mov    0x8(%rdi),%ebx
  0x00007fb2c1110759: add    $0x8,%ebx
  0x00007fb2c111075c: mov    %ebx,0x8(%rdi)
  0x00007fb2c111075f: movabs $0x7fb2bd5c95d0,%rdi  ;   {metadata({method} {0x00007fb2bd5c95d0} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007fb2c1110769: and    $0x3ff8,%ebx
  0x00007fb2c111076f: cmp    $0x0,%ebx
  0x00007fb2c1110772: je     0x00007fb2c111078c  ;*aload_0
                                                ; - java.util.UUID::&lt;init&gt;@0 (line 128)

  0x00007fb2c1110778: mov    %rdx,0x10(%rsi)    ;*putfield mostSigBits
                                                ; - java.util.UUID::&lt;init&gt;@6 (line 129)

  0x00007fb2c111077c: mov    %rcx,0x18(%rsi)    ;*putfield leastSigBits
                                                ; - java.util.UUID::&lt;init&gt;@11 (line 130)

  0x00007fb2c1110780: add    $0x30,%rsp
  0x00007fb2c1110784: pop    %rbp
  0x00007fb2c1110785: test   %eax,0x16f44975(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c111078b: retq   
  0x00007fb2c111078c: mov    %rdi,0x8(%rsp)
  0x00007fb2c1110791: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c1110799: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop off=126}
                                                ;*synchronization entry
                                                ; - java.util.UUID::&lt;init&gt;@-1 (line 128)
                                                ;   {runtime_call}
  0x00007fb2c111079e: jmp    0x00007fb2c1110778
  0x00007fb2c11107a0: nop
  0x00007fb2c11107a1: nop
  0x00007fb2c11107a2: mov    0x2a8(%r15),%rax
  0x00007fb2c11107a9: movabs $0x0,%r10
  0x00007fb2c11107b3: mov    %r10,0x2a8(%r15)
  0x00007fb2c11107ba: movabs $0x0,%r10
  0x00007fb2c11107c4: mov    %r10,0x2b0(%r15)
  0x00007fb2c11107cb: add    $0x30,%rsp
  0x00007fb2c11107cf: pop    %rbp
  0x00007fb2c11107d0: jmpq   0x00007fb2c106c3e0  ;   {runtime_call}
  0x00007fb2c11107d5: hlt    
  0x00007fb2c11107d6: hlt    
  0x00007fb2c11107d7: hlt    
  0x00007fb2c11107d8: hlt    
  0x00007fb2c11107d9: hlt    
  0x00007fb2c11107da: hlt    
  0x00007fb2c11107db: hlt    
  0x00007fb2c11107dc: hlt    
  0x00007fb2c11107dd: hlt    
  0x00007fb2c11107de: hlt    
  0x00007fb2c11107df: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb2c11107e0: callq  0x00007fb2c106cfe0  ;   {no_reloc}
  0x00007fb2c11107e5: mov    %rsp,-0x28(%rsp)
  0x00007fb2c11107ea: sub    $0x80,%rsp
  0x00007fb2c11107f1: mov    %rax,0x78(%rsp)
  0x00007fb2c11107f6: mov    %rcx,0x70(%rsp)
  0x00007fb2c11107fb: mov    %rdx,0x68(%rsp)
  0x00007fb2c1110800: mov    %rbx,0x60(%rsp)
  0x00007fb2c1110805: mov    %rbp,0x50(%rsp)
  0x00007fb2c111080a: mov    %rsi,0x48(%rsp)
  0x00007fb2c111080f: mov    %rdi,0x40(%rsp)
  0x00007fb2c1110814: mov    %r8,0x38(%rsp)
  0x00007fb2c1110819: mov    %r9,0x30(%rsp)
  0x00007fb2c111081e: mov    %r10,0x28(%rsp)
  0x00007fb2c1110823: mov    %r11,0x20(%rsp)
  0x00007fb2c1110828: mov    %r12,0x18(%rsp)
  0x00007fb2c111082d: mov    %r13,0x10(%rsp)
  0x00007fb2c1110832: mov    %r14,0x8(%rsp)
  0x00007fb2c1110837: mov    %r15,(%rsp)
  0x00007fb2c111083b: movabs $0x7fb2d6f4df36,%rdi  ;   {external_word}
  0x00007fb2c1110845: movabs $0x7fb2c11107e5,%rsi  ;   {internal_word}
  0x00007fb2c111084f: mov    %rsp,%rdx
  0x00007fb2c1110852: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c1110856: callq  0x00007fb2d6c79990  ;   {runtime_call}
  0x00007fb2c111085b: hlt    
[Deopt Handler Code]
  0x00007fb2c111085c: movabs $0x7fb2c111085c,%r10  ;   {section_word}
  0x00007fb2c1110866: push   %r10
  0x00007fb2c1110868: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c111086d: hlt    
  0x00007fb2c111086e: hlt    
  0x00007fb2c111086f: hlt    
<nmethod compile_id='20' compiler='C1' level='2' entry='0x00007fb2c1110720' size='824' address='0x00007fb2c11105d0' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='720' dependencies_offset='816' method='java/util/UUID &lt;init&gt; (JJ)V' bytes='15' count='11311' iicount='11312' stamp='0.130'/>
<writer thread='140406105003776'/>
<task_queued compile_id='24' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='11754' iicount='11754' stamp='0.131' comment='tiered' hot_count='11754'/>
<writer thread='140404520781568'/>
Decoding compiled method 0x00007fb2c1119110:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;
  0x00007fb2c11192c0: callq  0x00007fb2d6d60a20  ;   {runtime_call}
  0x00007fb2c11192c5: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c11192d0: mov    %eax,-0x14000(%rsp)
  0x00007fb2c11192d7: push   %rbp
  0x00007fb2c11192d8: sub    $0x40,%rsp
  0x00007fb2c11192dc: mov    0x8(%rsi),%ebp
  0x00007fb2c11192df: mov    0x30(%rsi),%r14
  0x00007fb2c11192e3: mov    0x20(%rsi),%rbx
  0x00007fb2c11192e7: mov    0x10(%rsi),%r13
  0x00007fb2c11192eb: mov    %rsi,%rdi
  0x00007fb2c11192ee: movabs $0x7fb2d6e03d80,%r10
  0x00007fb2c11192f8: callq  *%r10
  0x00007fb2c11192fb: test   %r14,%r14
  0x00007fb2c11192fe: je     0x00007fb2c1119a01
  0x00007fb2c1119304: mov    0x8(%r14),%r10d
  0x00007fb2c1119308: movabs $0x0,%rsi
  0x00007fb2c1119312: lea    (%rsi,%r10,8),%rsi
  0x00007fb2c1119316: mov    0x18(%rsi),%r10
  0x00007fb2c111931a: movabs $0x7c00014e8,%rax  ;   {metadata(&apos;java/lang/CharSequence&apos;)}
  0x00007fb2c1119324: cmp    %rax,%r10
  0x00007fb2c1119327: jne    0x00007fb2c11198ed
  0x00007fb2c111932d: mov    0x8(%r14),%r10d
  0x00007fb2c1119331: cmp    $0xf80002da,%r10d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007fb2c1119338: jne    0x00007fb2c1119a04  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@159 (line 470)

  0x00007fb2c111933e: mov    %r14,%rcx          ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)

  0x00007fb2c1119341: mov    0xc(%rcx),%r9d     ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)

  0x00007fb2c1119345: mov    0xc(%r12,%r9,8),%r11d  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)
                                                ; implicit exception: dispatches to 0x00007fb2c1119a04
  0x00007fb2c111934a: cmp    %r11d,%ebp
  0x00007fb2c111934d: jae    0x00007fb2c1119a04
  0x00007fb2c1119353: cmp    $0xc,%r11d
  0x00007fb2c1119357: jbe    0x00007fb2c1119a04
  0x00007fb2c111935d: lea    (%r12,%r9,8),%r14
  0x00007fb2c1119361: mov    %ebp,%r10d
  0x00007fb2c1119364: inc    %r10d
  0x00007fb2c1119367: xor    %r8d,%r8d
  0x00007fb2c111936a: cmp    %r8d,%r10d
  0x00007fb2c111936d: cmovl  %r8d,%r10d
  0x00007fb2c1119371: mov    $0xd,%esi
  0x00007fb2c1119376: cmp    %esi,%r10d
  0x00007fb2c1119379: cmovg  %esi,%r10d         ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@159 (line 470)

  0x00007fb2c111937d: test   %ebp,%ebp
  0x00007fb2c111937f: jl     0x00007fb2c1119a21  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)

  0x00007fb2c1119385: cmp    %r11d,%ebp
  0x00007fb2c1119388: jge    0x00007fb2c1119a95  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)

  0x00007fb2c111938e: movzwl 0x10(%r14,%rbp,2),%r8d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)

  0x00007fb2c1119394: cmp    $0x30,%r8d
  0x00007fb2c1119398: jl     0x00007fb2c1119984  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111939e: cmp    $0x39,%r8d
  0x00007fb2c11193a2: jle    0x00007fb2c11193be  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c11193a4: cmp    $0x61,%r8d
  0x00007fb2c11193a8: jl     0x00007fb2c1119ac0  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c11193ae: cmp    $0x66,%r8d
  0x00007fb2c11193b2: jg     0x00007fb2c1119aec  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c11193b8: add    $0xffffffa9,%r8d   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c11193bc: jmp    0x00007fb2c11193c2
  0x00007fb2c11193be: add    $0xffffffd0,%r8d   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c11193c2: movslq %r8d,%r8
  0x00007fb2c11193c5: shl    $0x4,%rbx
  0x00007fb2c11193c9: or     %r8,%rbx           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 471)

  0x00007fb2c11193cc: inc    %ebp               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@180 (line 469)

  0x00007fb2c11193ce: cmp    %r10d,%ebp
  0x00007fb2c11193d1: jl     0x00007fb2c111937d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@187 (line 469)

  0x00007fb2c11193d3: cmp    %esi,%r11d
  0x00007fb2c11193d6: mov    %r11d,%r10d
  0x00007fb2c11193d9: cmovg  %esi,%r10d
  0x00007fb2c11193dd: mov    %r10d,%edi
  0x00007fb2c11193e0: dec    %edi
  0x00007fb2c11193e2: mov    $0x80000000,%esi
  0x00007fb2c11193e7: cmp    %edi,%r10d
  0x00007fb2c11193ea: cmovl  %esi,%edi
  0x00007fb2c11193ed: cmp    %edi,%ebp
  0x00007fb2c11193ef: jge    0x00007fb2c1119419
  0x00007fb2c11193f1: jmpq   0x00007fb2c11197ea
  0x00007fb2c11193f6: data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c1119400: add    $0xffffffd0,%r8d   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c1119404: movslq %r8d,%r10
  0x00007fb2c1119407: shl    $0x4,%rbx
  0x00007fb2c111940b: or     %r10,%rbx          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 471)

  0x00007fb2c111940e: add    $0x2,%ebp          ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@180 (line 469)

  0x00007fb2c1119411: cmp    %edi,%ebp
  0x00007fb2c1119413: jl     0x00007fb2c11197ea  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@187 (line 469)

  0x00007fb2c1119419: cmp    $0xd,%ebp
  0x00007fb2c111941c: jge    0x00007fb2c1119476
  0x00007fb2c111941e: xchg   %ax,%ax            ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@159 (line 470)

  0x00007fb2c1119420: test   %ebp,%ebp
  0x00007fb2c1119422: jl     0x00007fb2c1119a21  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)

  0x00007fb2c1119428: cmp    %r11d,%ebp
  0x00007fb2c111942b: jge    0x00007fb2c1119a95  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)

  0x00007fb2c1119431: movzwl 0x10(%r14,%rbp,2),%r8d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)

  0x00007fb2c1119437: cmp    $0x30,%r8d
  0x00007fb2c111943b: jl     0x00007fb2c1119984  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c1119441: cmp    $0x39,%r8d
  0x00007fb2c1119445: jle    0x00007fb2c1119461  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c1119447: cmp    $0x61,%r8d
  0x00007fb2c111944b: jl     0x00007fb2c1119ac0  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c1119451: cmp    $0x66,%r8d
  0x00007fb2c1119455: jg     0x00007fb2c1119aec  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111945b: add    $0xffffffa9,%r8d   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111945f: jmp    0x00007fb2c1119465
  0x00007fb2c1119461: add    $0xffffffd0,%r8d   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c1119465: movslq %r8d,%r10
  0x00007fb2c1119468: shl    $0x4,%rbx
  0x00007fb2c111946c: or     %r10,%rbx          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 471)

  0x00007fb2c111946f: inc    %ebp               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@180 (line 469)

  0x00007fb2c1119471: cmp    $0xd,%ebp
  0x00007fb2c1119474: jl     0x00007fb2c1119420
  0x00007fb2c1119476: cmp    $0xe,%r11d
  0x00007fb2c111947a: jbe    0x00007fb2c1119a41
  0x00007fb2c1119480: cmp    $0x11,%r11d
  0x00007fb2c1119484: jbe    0x00007fb2c1119a41  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@197 (line 474)

  0x00007fb2c111948a: cmp    $0xe,%r11d
  0x00007fb2c111948e: jle    0x00007fb2c1119b91  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)

  0x00007fb2c1119494: movzwl 0x2c(%r12,%r9,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)

  0x00007fb2c111949a: cmp    $0x30,%ebp
  0x00007fb2c111949d: jl     0x00007fb2c1119b11  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c11194a3: cmp    $0x39,%ebp
  0x00007fb2c11194a6: jle    0x00007fb2c11194bf  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c11194a8: cmp    $0x61,%ebp
  0x00007fb2c11194ab: jl     0x00007fb2c1119c45  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c11194b1: cmp    $0x66,%ebp
  0x00007fb2c11194b4: jg     0x00007fb2c1119cc5  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c11194ba: add    $0xffffffa9,%ebp   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c11194bd: jmp    0x00007fb2c11194c2
  0x00007fb2c11194bf: add    $0xffffffd0,%ebp   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c11194c2: movslq %ebp,%r10
  0x00007fb2c11194c5: shl    $0x4,%rbx
  0x00007fb2c11194c9: or     %r10,%rbx          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 475)

  0x00007fb2c11194cc: cmp    $0xf,%r11d
  0x00007fb2c11194d0: jle    0x00007fb2c1119b99  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)

  0x00007fb2c11194d6: movzwl 0x2e(%r12,%r9,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)

  0x00007fb2c11194dc: cmp    $0x30,%ebp
  0x00007fb2c11194df: jl     0x00007fb2c1119b19  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c11194e5: cmp    $0x39,%ebp
  0x00007fb2c11194e8: jle    0x00007fb2c1119501  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c11194ea: cmp    $0x61,%ebp
  0x00007fb2c11194ed: jl     0x00007fb2c1119c4d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c11194f3: cmp    $0x66,%ebp
  0x00007fb2c11194f6: jg     0x00007fb2c1119ccd  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c11194fc: add    $0xffffffa9,%ebp   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c11194ff: jmp    0x00007fb2c1119504
  0x00007fb2c1119501: add    $0xffffffd0,%ebp   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c1119504: shl    $0x4,%rbx
  0x00007fb2c1119508: movslq %ebp,%r10
  0x00007fb2c111950b: or     %r10,%rbx          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 475)

  0x00007fb2c111950e: cmp    $0x10,%r11d
  0x00007fb2c1119512: jle    0x00007fb2c1119ba1  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)

  0x00007fb2c1119518: movzwl 0x30(%r12,%r9,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)

  0x00007fb2c111951e: cmp    $0x30,%ebp
  0x00007fb2c1119521: jl     0x00007fb2c1119b21  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c1119527: cmp    $0x39,%ebp
  0x00007fb2c111952a: jle    0x00007fb2c1119543  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111952c: cmp    $0x61,%ebp
  0x00007fb2c111952f: jl     0x00007fb2c1119c55  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c1119535: cmp    $0x66,%ebp
  0x00007fb2c1119538: jg     0x00007fb2c1119cd5  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111953e: add    $0xffffffa9,%ebp   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c1119541: jmp    0x00007fb2c1119546
  0x00007fb2c1119543: add    $0xffffffd0,%ebp   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c1119546: shl    $0x4,%rbx
  0x00007fb2c111954a: movslq %ebp,%r10
  0x00007fb2c111954d: or     %r10,%rbx          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 475)

  0x00007fb2c1119550: cmp    $0x11,%r11d
  0x00007fb2c1119554: jle    0x00007fb2c1119ba9  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)

  0x00007fb2c111955a: movzwl 0x32(%r12,%r9,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)

  0x00007fb2c1119560: cmp    $0x30,%ebp
  0x00007fb2c1119563: jl     0x00007fb2c1119b29  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c1119569: cmp    $0x39,%ebp
  0x00007fb2c111956c: jle    0x00007fb2c1119585  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111956e: cmp    $0x61,%ebp
  0x00007fb2c1119571: jl     0x00007fb2c1119c5d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c1119577: cmp    $0x66,%ebp
  0x00007fb2c111957a: jg     0x00007fb2c1119cdd  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c1119580: add    $0xffffffa9,%ebp   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c1119583: jmp    0x00007fb2c1119588
  0x00007fb2c1119585: add    $0xffffffd0,%ebp   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c1119588: shl    $0x4,%rbx
  0x00007fb2c111958c: movslq %ebp,%r10
  0x00007fb2c111958f: or     %r10,%rbx          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 475)

  0x00007fb2c1119592: cmp    $0x13,%r11d
  0x00007fb2c1119596: jbe    0x00007fb2c1119a5d
  0x00007fb2c111959c: cmp    $0x16,%r11d
  0x00007fb2c11195a0: jbe    0x00007fb2c1119a5d  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@235 (line 480)

  0x00007fb2c11195a6: cmp    $0x13,%r11d
  0x00007fb2c11195aa: jle    0x00007fb2c1119bd9  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)

  0x00007fb2c11195b0: movzwl 0x36(%r12,%r9,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)

  0x00007fb2c11195b6: cmp    $0x30,%ebp
  0x00007fb2c11195b9: jl     0x00007fb2c1119b51  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c11195bf: cmp    $0x39,%ebp
  0x00007fb2c11195c2: jle    0x00007fb2c11195db  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c11195c4: cmp    $0x61,%ebp
  0x00007fb2c11195c7: jl     0x00007fb2c1119c85  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c11195cd: cmp    $0x66,%ebp
  0x00007fb2c11195d0: jg     0x00007fb2c1119d05  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c11195d6: add    $0xffffffa9,%ebp   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c11195d9: jmp    0x00007fb2c11195de
  0x00007fb2c11195db: add    $0xffffffd0,%ebp   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c11195de: movslq %ebp,%r10
  0x00007fb2c11195e1: shl    $0x4,%r13
  0x00007fb2c11195e5: or     %r10,%r13          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 481)

  0x00007fb2c11195e8: cmp    $0x14,%r11d
  0x00007fb2c11195ec: jle    0x00007fb2c1119be1  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)

  0x00007fb2c11195f2: movzwl 0x38(%r12,%r9,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)

  0x00007fb2c11195f8: cmp    $0x30,%ebp
  0x00007fb2c11195fb: jl     0x00007fb2c1119b59  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c1119601: cmp    $0x39,%ebp
  0x00007fb2c1119604: jle    0x00007fb2c111961d  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c1119606: cmp    $0x61,%ebp
  0x00007fb2c1119609: jl     0x00007fb2c1119c8d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111960f: cmp    $0x66,%ebp
  0x00007fb2c1119612: jg     0x00007fb2c1119d0d  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c1119618: add    $0xffffffa9,%ebp   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111961b: jmp    0x00007fb2c1119620
  0x00007fb2c111961d: add    $0xffffffd0,%ebp   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c1119620: shl    $0x4,%r13
  0x00007fb2c1119624: movslq %ebp,%r10
  0x00007fb2c1119627: or     %r10,%r13          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 481)

  0x00007fb2c111962a: cmp    $0x15,%r11d
  0x00007fb2c111962e: jle    0x00007fb2c1119be9  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)

  0x00007fb2c1119634: movzwl 0x3a(%r12,%r9,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)

  0x00007fb2c111963a: cmp    $0x30,%ebp
  0x00007fb2c111963d: jl     0x00007fb2c1119b61  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c1119643: cmp    $0x39,%ebp
  0x00007fb2c1119646: jle    0x00007fb2c111965f  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c1119648: cmp    $0x61,%ebp
  0x00007fb2c111964b: jl     0x00007fb2c1119c95  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c1119651: cmp    $0x66,%ebp
  0x00007fb2c1119654: jg     0x00007fb2c1119d15  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111965a: add    $0xffffffa9,%ebp   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111965d: jmp    0x00007fb2c1119662
  0x00007fb2c111965f: add    $0xffffffd0,%ebp   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c1119662: shl    $0x4,%r13
  0x00007fb2c1119666: movslq %ebp,%r10
  0x00007fb2c1119669: or     %r10,%r13          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 481)

  0x00007fb2c111966c: cmp    $0x16,%r11d
  0x00007fb2c1119670: jle    0x00007fb2c1119bf1  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)

  0x00007fb2c1119676: movzwl 0x3c(%r12,%r9,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)

  0x00007fb2c111967c: cmp    $0x30,%ebp
  0x00007fb2c111967f: jl     0x00007fb2c1119b69  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c1119685: cmp    $0x39,%ebp
  0x00007fb2c1119688: jle    0x00007fb2c11196a1  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111968a: cmp    $0x61,%ebp
  0x00007fb2c111968d: jl     0x00007fb2c1119c9d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c1119693: cmp    $0x66,%ebp
  0x00007fb2c1119696: jg     0x00007fb2c1119d1d  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111969c: add    $0xffffffa9,%ebp   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111969f: jmp    0x00007fb2c11196a4
  0x00007fb2c11196a1: add    $0xffffffd0,%ebp   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c11196a4: shl    $0x4,%r13
  0x00007fb2c11196a8: movslq %ebp,%r10
  0x00007fb2c11196ab: or     %r10,%r13          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 481)

  0x00007fb2c11196ae: cmp    $0x18,%r11d
  0x00007fb2c11196b2: jbe    0x00007fb2c1119a79
  0x00007fb2c11196b8: cmp    $0x23,%r11d
  0x00007fb2c11196bc: jbe    0x00007fb2c1119a79  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@273 (line 484)

  0x00007fb2c11196c2: mov    $0x18,%ebp
  0x00007fb2c11196c7: cmp    $0x18,%r11d
  0x00007fb2c11196cb: jle    0x00007fb2c1119c21  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c11196d1: movzwl 0x40(%r12,%r9,8),%r9d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c11196d7: cmp    $0x30,%r9d
  0x00007fb2c11196db: jl     0x00007fb2c111995b  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c11196e1: cmp    $0x39,%r9d
  0x00007fb2c11196e5: jle    0x00007fb2c1119701  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c11196e7: cmp    $0x61,%r9d
  0x00007fb2c11196eb: jl     0x00007fb2c11199b0  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c11196f1: cmp    $0x66,%r9d
  0x00007fb2c11196f5: jg     0x00007fb2c11199dc  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c11196fb: add    $0xffffffa9,%r9d   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c11196ff: jmp    0x00007fb2c1119705
  0x00007fb2c1119701: add    $0xffffffd0,%r9d   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c1119705: movslq %r9d,%r10
  0x00007fb2c1119708: shl    $0x4,%r13
  0x00007fb2c111970c: or     %r10,%r13          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@292 (line 485)

  0x00007fb2c111970f: mov    $0x24,%r8d
  0x00007fb2c1119715: cmp    %r8d,%r11d
  0x00007fb2c1119718: mov    %r11d,%r10d
  0x00007fb2c111971b: cmovg  %r8d,%r10d
  0x00007fb2c111971f: mov    %r10d,%r8d
  0x00007fb2c1119722: dec    %r8d
  0x00007fb2c1119725: cmp    %r8d,%r10d
  0x00007fb2c1119728: cmovl  %esi,%r8d
  0x00007fb2c111972c: mov    $0x19,%ebp         ;   {no_reloc}
  0x00007fb2c1119731: cmp    $0x19,%r8d
  0x00007fb2c1119735: jg     0x00007fb2c111987c
  0x00007fb2c111973b: cmp    $0x24,%ebp
  0x00007fb2c111973e: jge    0x00007fb2c111978e  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@273 (line 484)

  0x00007fb2c1119740: cmp    %r11d,%ebp
  0x00007fb2c1119743: jge    0x00007fb2c1119c21  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c1119749: movzwl 0x10(%r14,%rbp,2),%r9d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c111974f: cmp    $0x30,%r9d
  0x00007fb2c1119753: jl     0x00007fb2c111995b  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c1119759: cmp    $0x39,%r9d
  0x00007fb2c111975d: jle    0x00007fb2c1119779  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111975f: cmp    $0x61,%r9d
  0x00007fb2c1119763: jl     0x00007fb2c11199b0  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c1119769: cmp    $0x66,%r9d
  0x00007fb2c111976d: jg     0x00007fb2c11199dc  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c1119773: add    $0xffffffa9,%r9d   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c1119777: jmp    0x00007fb2c111977d
  0x00007fb2c1119779: add    $0xffffffd0,%r9d   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111977d: movslq %r9d,%r10
  0x00007fb2c1119780: shl    $0x4,%r13
  0x00007fb2c1119784: or     %r10,%r13          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@292 (line 485)

  0x00007fb2c1119787: inc    %ebp               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@294 (line 483)

  0x00007fb2c1119789: cmp    $0x24,%ebp
  0x00007fb2c111978c: jl     0x00007fb2c1119740  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@301 (line 483)

  0x00007fb2c111978e: mov    0x60(%r15),%rax
  0x00007fb2c1119792: mov    %rax,%r10
  0x00007fb2c1119795: add    $0x20,%r10
  0x00007fb2c1119799: cmp    0x70(%r15),%r10
  0x00007fb2c111979d: jae    0x00007fb2c1119931
  0x00007fb2c11197a3: mov    %r10,0x60(%r15)
  0x00007fb2c11197a7: prefetchw 0xc0(%r10)
  0x00007fb2c11197af: mov    $0xf800869e,%r10d  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007fb2c11197b5: shl    $0x3,%r10
  0x00007fb2c11197b9: mov    0xa8(%r10),%r10
  0x00007fb2c11197c0: mov    %r10,(%rax)
  0x00007fb2c11197c3: movl   $0xf800869e,0x8(%rax)  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007fb2c11197ca: mov    %r12d,0xc(%rax)
  0x00007fb2c11197ce: mov    %r12,0x10(%rax)
  0x00007fb2c11197d2: mov    %r12,0x18(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@304 (line 488)

  0x00007fb2c11197d6: mov    %rbx,0x10(%rax)    ;*putfield mostSigBits
                                                ; - java.util.UUID::&lt;init&gt;@6 (line 129)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@310 (line 488)

  0x00007fb2c11197da: mov    %r13,0x18(%rax)    ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@-1 (line 455)

  0x00007fb2c11197de: add    $0x40,%rsp
  0x00007fb2c11197e2: pop    %rbp
  0x00007fb2c11197e3: test   %eax,0x16f3b817(%rip)        # 0x00007fb2d8055000
                                                ;   {poll_return}
  0x00007fb2c11197e9: retq                      ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@159 (line 470)

  0x00007fb2c11197ea: movzwl 0x10(%r14,%rbp,2),%r10d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)

  0x00007fb2c11197f0: cmp    $0x30,%r10d
  0x00007fb2c11197f4: jl     0x00007fb2c111997d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c11197fa: cmp    $0x39,%r10d
  0x00007fb2c11197fe: jle    0x00007fb2c111981a  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c1119800: cmp    $0x61,%r10d
  0x00007fb2c1119804: jl     0x00007fb2c1119ab9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111980a: cmp    $0x66,%r10d
  0x00007fb2c111980e: jg     0x00007fb2c1119ae5  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c1119814: add    $0xffffffa9,%r10d  ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c1119818: jmp    0x00007fb2c111981e
  0x00007fb2c111981a: add    $0xffffffd0,%r10d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111981e: movslq %ebp,%r8
  0x00007fb2c1119821: movzwl 0x12(%r14,%r8,2),%r8d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)

  0x00007fb2c1119827: shl    $0x4,%rbx
  0x00007fb2c111982b: movslq %r10d,%r10
  0x00007fb2c111982e: or     %r10,%rbx          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 471)

  0x00007fb2c1119831: cmp    $0x30,%r8d
  0x00007fb2c1119835: jl     0x00007fb2c1119982  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111983b: cmp    $0x39,%r8d
  0x00007fb2c111983f: jle    0x00007fb2c1119400  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c1119845: cmp    $0x61,%r8d
  0x00007fb2c1119849: jl     0x00007fb2c1119abe  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111984f: cmp    $0x66,%r8d
  0x00007fb2c1119853: jg     0x00007fb2c1119aea  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c1119859: add    $0xffffffa9,%r8d   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111985d: jmpq   0x00007fb2c1119404
  0x00007fb2c1119862: add    $0xffffffd0,%r9d   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c1119866: shl    $0x4,%r13
  0x00007fb2c111986a: movslq %r9d,%r10
  0x00007fb2c111986d: or     %r10,%r13          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@292 (line 485)

  0x00007fb2c1119870: add    $0x2,%ebp          ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@294 (line 483)

  0x00007fb2c1119873: cmp    %r8d,%ebp
  0x00007fb2c1119876: jge    0x00007fb2c111973b  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@273 (line 484)

  0x00007fb2c111987c: movzwl 0x10(%r14,%rbp,2),%r10d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c1119882: cmp    $0x30,%r10d
  0x00007fb2c1119886: jl     0x00007fb2c1119954  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111988c: cmp    $0x39,%r10d
  0x00007fb2c1119890: jle    0x00007fb2c11198ac  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c1119892: cmp    $0x61,%r10d
  0x00007fb2c1119896: jl     0x00007fb2c11199a9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111989c: cmp    $0x66,%r10d
  0x00007fb2c11198a0: jg     0x00007fb2c11199d5  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c11198a6: add    $0xffffffa9,%r10d  ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c11198aa: jmp    0x00007fb2c11198b0
  0x00007fb2c11198ac: add    $0xffffffd0,%r10d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c11198b0: movzwl 0x12(%r14,%rbp,2),%r9d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c11198b6: shl    $0x4,%r13
  0x00007fb2c11198ba: movslq %r10d,%r10
  0x00007fb2c11198bd: or     %r10,%r13          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@292 (line 485)

  0x00007fb2c11198c0: cmp    $0x30,%r9d
  0x00007fb2c11198c4: jl     0x00007fb2c1119959  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c11198ca: cmp    $0x39,%r9d
  0x00007fb2c11198ce: jle    0x00007fb2c1119862  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c11198d0: cmp    $0x61,%r9d
  0x00007fb2c11198d4: jl     0x00007fb2c11199ae  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c11198da: cmp    $0x66,%r9d
  0x00007fb2c11198de: jg     0x00007fb2c11199da  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c11198e4: add    $0xffffffa9,%r9d   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c11198e8: jmpq   0x00007fb2c1119866
  0x00007fb2c11198ed: push   %rax
  0x00007fb2c11198ee: mov    %rax,%rax
  0x00007fb2c11198f1: mov    0x20(%rsi),%rdi
  0x00007fb2c11198f5: mov    (%rdi),%ecx
  0x00007fb2c11198f7: add    $0x8,%rdi
  0x00007fb2c11198fb: test   %rax,%rax
  0x00007fb2c11198fe: repnz scas %es:(%rdi),%rax
  0x00007fb2c1119901: pop    %rax
  0x00007fb2c1119902: jne    0x00007fb2c111990c
  0x00007fb2c1119908: mov    %rax,0x18(%rsi)
  0x00007fb2c111990c: je     0x00007fb2c111932d
  0x00007fb2c1119912: mov    $0xffffff9d,%esi
  0x00007fb2c1119917: mov    %rbx,(%rsp)
  0x00007fb2c111991b: mov    %r13,0x8(%rsp)
  0x00007fb2c1119920: mov    %r14,0x10(%rsp)
  0x00007fb2c1119925: xchg   %ax,%ax
  0x00007fb2c1119927: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=1644}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@159 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c111992c: callq  0x00007fb2d6d60a20  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@159 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c1119931: mov    %r13,(%rsp)
  0x00007fb2c1119935: mov    %rbx,%rbp          ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c1119938: movabs $0x7c00434f0,%rsi  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007fb2c1119942: nop
  0x00007fb2c1119943: callq  0x00007fb2c106c6a0  ; OopMap{off=1672}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@304 (line 488)
                                                ;   {runtime_call}
  0x00007fb2c1119948: mov    %rbp,%rbx
  0x00007fb2c111994b: mov    (%rsp),%r13
  0x00007fb2c111994f: jmpq   0x00007fb2c11197d6
  0x00007fb2c1119954: mov    %r10d,%r9d
  0x00007fb2c1119957: jmp    0x00007fb2c111995b
  0x00007fb2c1119959: inc    %ebp               ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111995b: mov    $0xffffff65,%esi
  0x00007fb2c1119960: mov    %rbx,(%rsp)
  0x00007fb2c1119964: mov    %r13,0x8(%rsp)
  0x00007fb2c1119969: mov    %r9d,0x14(%rsp)
  0x00007fb2c111996e: mov    %rcx,0x18(%rsp)
  0x00007fb2c1119973: callq  0x00007fb2c10051a0  ; OopMap{[24]=Oop off=1720}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c1119978: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c111997d: mov    %r10d,%r8d
  0x00007fb2c1119980: jmp    0x00007fb2c1119984
  0x00007fb2c1119982: inc    %ebp               ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c1119984: mov    $0xffffff65,%esi
  0x00007fb2c1119989: mov    %rbx,(%rsp)
  0x00007fb2c111998d: mov    %r13,0x8(%rsp)
  0x00007fb2c1119992: mov    %r8d,0x14(%rsp)
  0x00007fb2c1119997: mov    %rcx,0x18(%rsp)
  0x00007fb2c111999c: data16 xchg %ax,%ax
  0x00007fb2c111999f: callq  0x00007fb2c10051a0  ; OopMap{[24]=Oop off=1764}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c11199a4: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c11199a9: mov    %r10d,%r9d
  0x00007fb2c11199ac: jmp    0x00007fb2c11199b0
  0x00007fb2c11199ae: inc    %ebp               ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c11199b0: mov    $0xffffff65,%esi
  0x00007fb2c11199b5: mov    %rbx,(%rsp)
  0x00007fb2c11199b9: mov    %r13,0x8(%rsp)
  0x00007fb2c11199be: mov    %r9d,0x14(%rsp)
  0x00007fb2c11199c3: mov    %rcx,0x18(%rsp)
  0x00007fb2c11199c8: data16 xchg %ax,%ax
  0x00007fb2c11199cb: callq  0x00007fb2c10051a0  ; OopMap{[24]=Oop off=1808}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c11199d0: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c11199d5: mov    %r10d,%r9d
  0x00007fb2c11199d8: jmp    0x00007fb2c11199dc
  0x00007fb2c11199da: inc    %ebp               ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c11199dc: mov    $0xffffff65,%esi
  0x00007fb2c11199e1: mov    %rbx,(%rsp)
  0x00007fb2c11199e5: mov    %r13,0x8(%rsp)
  0x00007fb2c11199ea: mov    %r9d,0x14(%rsp)
  0x00007fb2c11199ef: mov    %rcx,0x18(%rsp)
  0x00007fb2c11199f4: data16 xchg %ax,%ax
  0x00007fb2c11199f7: callq  0x00007fb2c10051a0  ; OopMap{[24]=Oop off=1852}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c11199fc: callq  0x00007fb2d6d60a20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c1119a01: xor    %r14d,%r14d
  0x00007fb2c1119a04: mov    $0xffffff86,%esi
  0x00007fb2c1119a09: mov    %rbx,(%rsp)
  0x00007fb2c1119a0d: mov    %r13,0x8(%rsp)
  0x00007fb2c1119a12: mov    %r14,0x10(%rsp)
  0x00007fb2c1119a17: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=1884}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@159 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c1119a1c: callq  0x00007fb2d6d60a20  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c1119a21: mov    $0xffffff65,%esi
  0x00007fb2c1119a26: mov    %rbx,(%rsp)
  0x00007fb2c1119a2a: mov    %r13,0x8(%rsp)
  0x00007fb2c1119a2f: mov    %rcx,0x20(%rsp)
  0x00007fb2c1119a34: data16 xchg %ax,%ax
  0x00007fb2c1119a37: callq  0x00007fb2c10051a0  ; OopMap{[32]=Oop off=1916}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c1119a3c: callq  0x00007fb2d6d60a20  ;   {runtime_call}
  0x00007fb2c1119a41: mov    $0xffffff86,%esi
  0x00007fb2c1119a46: mov    %rbx,%rbp
  0x00007fb2c1119a49: mov    %r13,(%rsp)
  0x00007fb2c1119a4d: mov    %rcx,0x8(%rsp)
  0x00007fb2c1119a52: nop
  0x00007fb2c1119a53: callq  0x00007fb2c10051a0  ; OopMap{[8]=Oop off=1944}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@197 (line 474)
                                                ;   {runtime_call}
  0x00007fb2c1119a58: callq  0x00007fb2d6d60a20  ;   {runtime_call}
  0x00007fb2c1119a5d: mov    $0xffffff86,%esi
  0x00007fb2c1119a62: mov    %rbx,%rbp
  0x00007fb2c1119a65: mov    %r13,(%rsp)
  0x00007fb2c1119a69: mov    %rcx,0x8(%rsp)
  0x00007fb2c1119a6e: nop
  0x00007fb2c1119a6f: callq  0x00007fb2c10051a0  ; OopMap{[8]=Oop off=1972}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@235 (line 480)
                                                ;   {runtime_call}
  0x00007fb2c1119a74: callq  0x00007fb2d6d60a20  ;   {runtime_call}
  0x00007fb2c1119a79: mov    $0xffffff86,%esi
  0x00007fb2c1119a7e: mov    %rbx,%rbp
  0x00007fb2c1119a81: mov    %r13,(%rsp)
  0x00007fb2c1119a85: mov    %rcx,0x8(%rsp)
  0x00007fb2c1119a8a: nop
  0x00007fb2c1119a8b: callq  0x00007fb2c10051a0  ; OopMap{[8]=Oop off=2000}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@273 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c1119a90: callq  0x00007fb2d6d60a20  ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c1119a95: mov    $0xffffff65,%esi
  0x00007fb2c1119a9a: mov    %rbx,(%rsp)
  0x00007fb2c1119a9e: mov    %r13,0x8(%rsp)
  0x00007fb2c1119aa3: mov    %rcx,0x20(%rsp)
  0x00007fb2c1119aa8: mov    %r11d,0x28(%rsp)
  0x00007fb2c1119aad: xchg   %ax,%ax
  0x00007fb2c1119aaf: callq  0x00007fb2c10051a0  ; OopMap{[32]=Oop off=2036}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c1119ab4: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c1119ab9: mov    %r10d,%r8d
  0x00007fb2c1119abc: jmp    0x00007fb2c1119ac0
  0x00007fb2c1119abe: inc    %ebp               ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c1119ac0: mov    $0xffffff65,%esi
  0x00007fb2c1119ac5: mov    %rbx,(%rsp)
  0x00007fb2c1119ac9: mov    %r13,0x8(%rsp)
  0x00007fb2c1119ace: mov    %r8d,0x14(%rsp)
  0x00007fb2c1119ad3: mov    %rcx,0x18(%rsp)
  0x00007fb2c1119ad8: data16 xchg %ax,%ax
  0x00007fb2c1119adb: callq  0x00007fb2c10051a0  ; OopMap{[24]=Oop off=2080}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c1119ae0: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c1119ae5: mov    %r10d,%r8d
  0x00007fb2c1119ae8: jmp    0x00007fb2c1119aec
  0x00007fb2c1119aea: inc    %ebp               ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c1119aec: mov    $0xffffff65,%esi
  0x00007fb2c1119af1: mov    %rbx,(%rsp)
  0x00007fb2c1119af5: mov    %r13,0x8(%rsp)
  0x00007fb2c1119afa: mov    %r8d,0x14(%rsp)
  0x00007fb2c1119aff: mov    %rcx,0x18(%rsp)
  0x00007fb2c1119b04: data16 xchg %ax,%ax
  0x00007fb2c1119b07: callq  0x00007fb2c10051a0  ; OopMap{[24]=Oop off=2124}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c1119b0c: callq  0x00007fb2d6d60a20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c1119b11: mov    $0xe,%r11d
  0x00007fb2c1119b17: jmp    0x00007fb2c1119b2f
  0x00007fb2c1119b19: mov    $0xf,%r11d
  0x00007fb2c1119b1f: jmp    0x00007fb2c1119b2f
  0x00007fb2c1119b21: mov    $0x10,%r11d
  0x00007fb2c1119b27: jmp    0x00007fb2c1119b2f
  0x00007fb2c1119b29: mov    $0x11,%r11d        ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c1119b2f: mov    $0xffffff65,%esi
  0x00007fb2c1119b34: mov    %rbx,(%rsp)
  0x00007fb2c1119b38: mov    %r13,0x8(%rsp)
  0x00007fb2c1119b3d: mov    %rcx,0x10(%rsp)
  0x00007fb2c1119b42: mov    %r11d,0x18(%rsp)
  0x00007fb2c1119b47: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=2188}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ;   {runtime_call}
  0x00007fb2c1119b4c: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ;   {runtime_call}
  0x00007fb2c1119b51: mov    $0x13,%r10d
  0x00007fb2c1119b57: jmp    0x00007fb2c1119b6f
  0x00007fb2c1119b59: mov    $0x14,%r10d
  0x00007fb2c1119b5f: jmp    0x00007fb2c1119b6f
  0x00007fb2c1119b61: mov    $0x15,%r10d
  0x00007fb2c1119b67: jmp    0x00007fb2c1119b6f
  0x00007fb2c1119b69: mov    $0x16,%r10d        ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c1119b6f: mov    $0xffffff65,%esi
  0x00007fb2c1119b74: mov    %rbx,(%rsp)
  0x00007fb2c1119b78: mov    %r13,0x8(%rsp)
  0x00007fb2c1119b7d: mov    %rcx,0x10(%rsp)
  0x00007fb2c1119b82: mov    %r10d,0x18(%rsp)
  0x00007fb2c1119b87: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=2252}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ;   {runtime_call}
  0x00007fb2c1119b8c: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ;   {runtime_call}
  0x00007fb2c1119b91: mov    $0xe,%r8d
  0x00007fb2c1119b97: jmp    0x00007fb2c1119baf
  0x00007fb2c1119b99: mov    $0xf,%r8d
  0x00007fb2c1119b9f: jmp    0x00007fb2c1119baf
  0x00007fb2c1119ba1: mov    $0x10,%r8d
  0x00007fb2c1119ba7: jmp    0x00007fb2c1119baf
  0x00007fb2c1119ba9: mov    $0x11,%r8d         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)

  0x00007fb2c1119baf: mov    $0xffffff65,%esi
  0x00007fb2c1119bb4: mov    %rbx,%rbp
  0x00007fb2c1119bb7: mov    %r13,(%rsp)
  0x00007fb2c1119bbb: mov    %rcx,0x18(%rsp)
  0x00007fb2c1119bc0: mov    %r8d,0x14(%rsp)
  0x00007fb2c1119bc5: mov    %r8d,0x20(%rsp)
  0x00007fb2c1119bca: mov    %r11d,0x24(%rsp)
  0x00007fb2c1119bcf: callq  0x00007fb2c10051a0  ; OopMap{[24]=Oop off=2324}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)
                                                ;   {runtime_call}
  0x00007fb2c1119bd4: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)
                                                ;   {runtime_call}
  0x00007fb2c1119bd9: mov    $0x13,%r10d
  0x00007fb2c1119bdf: jmp    0x00007fb2c1119bf7
  0x00007fb2c1119be1: mov    $0x14,%r10d
  0x00007fb2c1119be7: jmp    0x00007fb2c1119bf7
  0x00007fb2c1119be9: mov    $0x15,%r10d
  0x00007fb2c1119bef: jmp    0x00007fb2c1119bf7
  0x00007fb2c1119bf1: mov    $0x16,%r10d        ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)

  0x00007fb2c1119bf7: mov    $0xffffff65,%esi
  0x00007fb2c1119bfc: mov    %rbx,%rbp
  0x00007fb2c1119bff: mov    %r13,(%rsp)
  0x00007fb2c1119c03: mov    %rcx,0x18(%rsp)
  0x00007fb2c1119c08: mov    %r10d,0x14(%rsp)
  0x00007fb2c1119c0d: mov    %r10d,0x20(%rsp)
  0x00007fb2c1119c12: mov    %r11d,0x24(%rsp)
  0x00007fb2c1119c17: callq  0x00007fb2c10051a0  ; OopMap{[24]=Oop off=2396}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)
                                                ;   {runtime_call}
  0x00007fb2c1119c1c: callq  0x00007fb2d6d60a20  ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c1119c21: mov    $0xffffff65,%esi
  0x00007fb2c1119c26: mov    %rbx,(%rsp)
  0x00007fb2c1119c2a: mov    %r13,0x8(%rsp)
  0x00007fb2c1119c2f: mov    %rcx,0x20(%rsp)
  0x00007fb2c1119c34: mov    %r11d,0x28(%rsp)
  0x00007fb2c1119c39: xchg   %ax,%ax
  0x00007fb2c1119c3b: callq  0x00007fb2c10051a0  ; OopMap{[32]=Oop off=2432}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c1119c40: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c1119c45: mov    $0xe,%r11d
  0x00007fb2c1119c4b: jmp    0x00007fb2c1119c63
  0x00007fb2c1119c4d: mov    $0xf,%r11d
  0x00007fb2c1119c53: jmp    0x00007fb2c1119c63
  0x00007fb2c1119c55: mov    $0x10,%r11d
  0x00007fb2c1119c5b: jmp    0x00007fb2c1119c63
  0x00007fb2c1119c5d: mov    $0x11,%r11d        ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c1119c63: mov    $0xffffff65,%esi
  0x00007fb2c1119c68: mov    %rbx,(%rsp)
  0x00007fb2c1119c6c: mov    %r13,0x8(%rsp)
  0x00007fb2c1119c71: mov    %rcx,0x10(%rsp)
  0x00007fb2c1119c76: mov    %r11d,0x18(%rsp)
  0x00007fb2c1119c7b: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=2496}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ;   {runtime_call}
  0x00007fb2c1119c80: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ;   {runtime_call}
  0x00007fb2c1119c85: mov    $0x13,%r10d
  0x00007fb2c1119c8b: jmp    0x00007fb2c1119ca3
  0x00007fb2c1119c8d: mov    $0x14,%r10d
  0x00007fb2c1119c93: jmp    0x00007fb2c1119ca3
  0x00007fb2c1119c95: mov    $0x15,%r10d
  0x00007fb2c1119c9b: jmp    0x00007fb2c1119ca3
  0x00007fb2c1119c9d: mov    $0x16,%r10d        ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c1119ca3: mov    $0xffffff65,%esi
  0x00007fb2c1119ca8: mov    %rbx,(%rsp)
  0x00007fb2c1119cac: mov    %r13,0x8(%rsp)
  0x00007fb2c1119cb1: mov    %rcx,0x10(%rsp)
  0x00007fb2c1119cb6: mov    %r10d,0x18(%rsp)
  0x00007fb2c1119cbb: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=2560}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ;   {runtime_call}
  0x00007fb2c1119cc0: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ;   {runtime_call}
  0x00007fb2c1119cc5: mov    $0xe,%r11d
  0x00007fb2c1119ccb: jmp    0x00007fb2c1119ce3
  0x00007fb2c1119ccd: mov    $0xf,%r11d
  0x00007fb2c1119cd3: jmp    0x00007fb2c1119ce3
  0x00007fb2c1119cd5: mov    $0x10,%r11d
  0x00007fb2c1119cdb: jmp    0x00007fb2c1119ce3
  0x00007fb2c1119cdd: mov    $0x11,%r11d        ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c1119ce3: mov    $0xffffff65,%esi
  0x00007fb2c1119ce8: mov    %rbx,(%rsp)
  0x00007fb2c1119cec: mov    %r13,0x8(%rsp)
  0x00007fb2c1119cf1: mov    %rcx,0x10(%rsp)
  0x00007fb2c1119cf6: mov    %r11d,0x18(%rsp)
  0x00007fb2c1119cfb: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=2624}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ;   {runtime_call}
  0x00007fb2c1119d00: callq  0x00007fb2d6d60a20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ;   {runtime_call}
  0x00007fb2c1119d05: mov    $0x13,%r10d
  0x00007fb2c1119d0b: jmp    0x00007fb2c1119d23
  0x00007fb2c1119d0d: mov    $0x14,%r10d
  0x00007fb2c1119d13: jmp    0x00007fb2c1119d23
  0x00007fb2c1119d15: mov    $0x15,%r10d
  0x00007fb2c1119d1b: jmp    0x00007fb2c1119d23
  0x00007fb2c1119d1d: mov    $0x16,%r10d        ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c1119d23: mov    $0xffffff65,%esi
  0x00007fb2c1119d28: mov    %rbx,(%rsp)
  0x00007fb2c1119d2c: mov    %r13,0x8(%rsp)
  0x00007fb2c1119d31: mov    %rcx,0x10(%rsp)
  0x00007fb2c1119d36: mov    %r10d,0x18(%rsp)
  0x00007fb2c1119d3b: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=2688}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ;   {runtime_call}
  0x00007fb2c1119d40: callq  0x00007fb2d6d60a20  ;*new
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@304 (line 488)
                                                ;   {runtime_call}
  0x00007fb2c1119d45: mov    %rax,%rsi
  0x00007fb2c1119d48: add    $0x40,%rsp
  0x00007fb2c1119d4c: pop    %rbp
  0x00007fb2c1119d4d: jmpq   0x00007fb2c1101d60  ;   {runtime_call}
  0x00007fb2c1119d52: hlt    
  0x00007fb2c1119d53: hlt    
  0x00007fb2c1119d54: hlt    
  0x00007fb2c1119d55: hlt    
  0x00007fb2c1119d56: hlt    
  0x00007fb2c1119d57: hlt    
  0x00007fb2c1119d58: hlt    
  0x00007fb2c1119d59: hlt    
  0x00007fb2c1119d5a: hlt    
  0x00007fb2c1119d5b: hlt    
  0x00007fb2c1119d5c: hlt    
  0x00007fb2c1119d5d: hlt    
  0x00007fb2c1119d5e: hlt    
  0x00007fb2c1119d5f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb2c1119d60: jmpq   0x00007fb2c106c760  ;   {no_reloc}
[Deopt Handler Code]
  0x00007fb2c1119d65: callq  0x00007fb2c1119d6a
  0x00007fb2c1119d6a: subq   $0x5,(%rsp)
  0x00007fb2c1119d6f: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c1119d74: hlt    
  0x00007fb2c1119d75: hlt    
  0x00007fb2c1119d76: hlt    
  0x00007fb2c1119d77: hlt    
<nmethod compile_id='23' compile_kind='osr' compiler='C2' level='4' entry='0x00007fb2c11192c0' size='7728' address='0x00007fb2c1119110' relocation_offset='296' insts_offset='432' stub_offset='3152' scopes_data_offset='3232' scopes_pcs_offset='4096' dependencies_offset='7680' handler_table_offset='7688' nul_chk_table_offset='7712' oops_offset='3176' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='314' count='60415' backedge_count='2206160' iicount='60415' stamp='0.163'/>
<writer thread='140406105003776'/>
<task_queued compile_id='25' compile_kind='osr' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='60416' iicount='1' osr_bci='9' level='3' stamp='0.163' comment='tiered' hot_count='60416'/>
<task_queued compile_id='26' compile_kind='osr' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='314' count='60489' backedge_count='2208864' iicount='60489' osr_bci='121' stamp='0.163' comment='tiered' hot_count='2208864'/>
<writer thread='140404518676224'/>
Decoding compiled method 0x00007fb2c11122d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;
  0x00007fb2c1112480: mov    0x8(%rsi),%r10d
  0x00007fb2c1112484: shl    $0x3,%r10
  0x00007fb2c1112488: cmp    %rax,%r10
  0x00007fb2c111248b: jne    0x00007fb2c1045e20  ;   {runtime_call}
  0x00007fb2c1112491: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c111249c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb2c11124a0: mov    %eax,-0x14000(%rsp)
  0x00007fb2c11124a7: push   %rbp
  0x00007fb2c11124a8: sub    $0x50,%rsp
  0x00007fb2c11124ac: movabs $0x7fb2bd79e7c0,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c11124b6: mov    0xdc(%rdi),%ebx
  0x00007fb2c11124bc: add    $0x8,%ebx
  0x00007fb2c11124bf: mov    %ebx,0xdc(%rdi)
  0x00007fb2c11124c5: movabs $0x7fb2bd79b370,%rdi  ;   {metadata({method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c11124cf: and    $0x1ff8,%ebx
  0x00007fb2c11124d5: cmp    $0x0,%ebx
  0x00007fb2c11124d8: je     0x00007fb2c11127a8  ;*aload_0
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@0 (line 9)

  0x00007fb2c11124de: mov    %rsi,%rdi
  0x00007fb2c11124e1: movabs $0x7fb2bd79e7c0,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c11124eb: addq   $0x1,0x108(%rbx)
  0x00007fb2c11124f3: movabs $0x7fb2bd511108,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd39b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb2c11124fd: mov    0xdc(%rdi),%ebx
  0x00007fb2c1112503: add    $0x8,%ebx
  0x00007fb2c1112506: mov    %ebx,0xdc(%rdi)
  0x00007fb2c111250c: movabs $0x7fb2bd39b480,%rdi  ;   {metadata({method} {0x00007fb2bd39b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb2c1112516: and    $0x7ffff8,%ebx
  0x00007fb2c111251c: cmp    $0x0,%ebx
  0x00007fb2c111251f: je     0x00007fb2c11127bf
  0x00007fb2c1112525: movabs $0x7fb2bd79e7c0,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c111252f: incl   0x118(%rdi)
  0x00007fb2c1112535: mov    $0x0,%edi          ;*goto
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@6 (line 11)

  0x00007fb2c111253a: nopw   0x0(%rax,%rax,1)
  0x00007fb2c1112540: movabs $0x7fb2bd79e7c0,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c111254a: mov    0xe0(%rbx),%eax
  0x00007fb2c1112550: add    $0x8,%eax
  0x00007fb2c1112553: mov    %eax,0xe0(%rbx)
  0x00007fb2c1112559: movabs $0x7fb2bd79b370,%rbx  ;   {metadata({method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c1112563: and    $0xfff8,%eax
  0x00007fb2c1112569: cmp    $0x0,%eax
  0x00007fb2c111256c: je     0x00007fb2c11127d6  ; OopMap{rsi=Oop off=242}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)

  0x00007fb2c1112572: test   %eax,0x16f42b88(%rip)        # 0x00007fb2d8055100
                                                ;   {poll}
  0x00007fb2c1112578: cmp    $0xf4240,%edi
  0x00007fb2c111257e: movabs $0x7fb2bd79e7c0,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c1112588: movabs $0x1c0,%rax
  0x00007fb2c1112592: jl     0x00007fb2c11125a2
  0x00007fb2c1112598: movabs $0x1d0,%rax
  0x00007fb2c11125a2: mov    (%rbx,%rax,1),%rdx
  0x00007fb2c11125a6: lea    0x1(%rdx),%rdx
  0x00007fb2c11125aa: mov    %rdx,(%rbx,%rax,1)
  0x00007fb2c11125ae: jge    0x00007fb2c1112764  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)

  0x00007fb2c11125b4: mov    %edi,0x2c(%rsp)
  0x00007fb2c11125b8: cmp    (%rsi),%rax        ;*invokevirtual parse
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ; implicit exception: dispatches to 0x00007fb2c11127ed
  0x00007fb2c11125bb: mov    %rsi,%rbx
  0x00007fb2c11125be: movabs $0x7fb2bd79e7c0,%rax  ;   {metadata(method data for {method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c11125c8: movabs $0x7c0060028,%r10  ;   {metadata(&apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c11125d2: mov    %r10,0x138(%rax)
  0x00007fb2c11125d9: addq   $0x1,0x140(%rax)
  0x00007fb2c11125e1: movabs $0x7fb2bd79e668,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd79b428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c11125eb: mov    0xdc(%rbx),%eax
  0x00007fb2c11125f1: add    $0x8,%eax
  0x00007fb2c11125f4: mov    %eax,0xdc(%rbx)
  0x00007fb2c11125fa: movabs $0x7fb2bd79b428,%rbx  ;   {metadata({method} {0x00007fb2bd79b428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c1112604: and    $0x7ffff8,%eax
  0x00007fb2c111260a: cmp    $0x0,%eax
  0x00007fb2c111260d: je     0x00007fb2c11127f2
  0x00007fb2c1112613: movabs $0x7fb2bd79e668,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd79b428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c111261d: addq   $0x1,0x108(%rbx)
  0x00007fb2c1112625: mov    %rsi,0x38(%rsp)
  0x00007fb2c111262a: movabs $0x670be7490,%rsi  ;*invokestatic uuidFromCharSequence
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {oop(&quot;ba226cf7-d156-4b18-a78a-094736208cc9&quot;)}
  0x00007fb2c1112634: nop
  0x00007fb2c1112635: nop
  0x00007fb2c1112636: nop
  0x00007fb2c1112637: callq  0x00007fb2c1046420  ; OopMap{[56]=Oop off=444}
                                                ;*invokestatic uuidFromCharSequence
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {static_call}
  0x00007fb2c111263c: movabs $0x7fb2bd79e7c0,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c1112646: addq   $0x1,0x160(%rsi)
  0x00007fb2c111264e: mov    %rax,%rsi          ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)

  0x00007fb2c1112651: nop
  0x00007fb2c1112652: nop
  0x00007fb2c1112653: nop
  0x00007fb2c1112654: nop
  0x00007fb2c1112655: nop
  0x00007fb2c1112656: nop
  0x00007fb2c1112657: callq  0x00007fb2c1046420  ; OopMap{[56]=Oop off=476}
                                                ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)
                                                ;   {static_call}
  0x00007fb2c111265c: cmp    $0x1,%eax
  0x00007fb2c111265f: movabs $0x7fb2bd79e7c0,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c1112669: movabs $0x170,%rsi
  0x00007fb2c1112673: jne    0x00007fb2c1112683
  0x00007fb2c1112679: movabs $0x180,%rsi
  0x00007fb2c1112683: mov    (%rdx,%rsi,1),%rdi
  0x00007fb2c1112687: lea    0x1(%rdi),%rdi
  0x00007fb2c111268b: mov    %rdi,(%rdx,%rsi,1)
  0x00007fb2c111268f: jne    0x00007fb2c1112754  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@19 (line 13)

  0x00007fb2c1112695: movabs $0x670b80c78,%rdx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007fb2c111269f: mov    0x6c(%rdx),%esi
  0x00007fb2c11126a2: shl    $0x3,%rsi          ;*getstatic out
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@22 (line 14)

  0x00007fb2c11126a6: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00007fb2c1112809
  0x00007fb2c11126a9: mov    %rsi,%rdx
  0x00007fb2c11126ac: movabs $0x7fb2bd79e7c0,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c11126b6: mov    0x8(%rdx),%edx
  0x00007fb2c11126b9: shl    $0x3,%rdx
  0x00007fb2c11126bd: cmp    0x198(%rdi),%rdx
  0x00007fb2c11126c4: jne    0x00007fb2c11126d3
  0x00007fb2c11126c6: addq   $0x1,0x1a0(%rdi)
  0x00007fb2c11126ce: jmpq   0x00007fb2c1112739
  0x00007fb2c11126d3: cmp    0x1a8(%rdi),%rdx
  0x00007fb2c11126da: jne    0x00007fb2c11126e9
  0x00007fb2c11126dc: addq   $0x1,0x1b0(%rdi)
  0x00007fb2c11126e4: jmpq   0x00007fb2c1112739
  0x00007fb2c11126e9: cmpq   $0x0,0x198(%rdi)
  0x00007fb2c11126f4: jne    0x00007fb2c111270d
  0x00007fb2c11126f6: mov    %rdx,0x198(%rdi)
  0x00007fb2c11126fd: movq   $0x1,0x1a0(%rdi)
  0x00007fb2c1112708: jmpq   0x00007fb2c1112739
  0x00007fb2c111270d: cmpq   $0x0,0x1a8(%rdi)
  0x00007fb2c1112718: jne    0x00007fb2c1112731
  0x00007fb2c111271a: mov    %rdx,0x1a8(%rdi)
  0x00007fb2c1112721: movq   $0x1,0x1b0(%rdi)
  0x00007fb2c111272c: jmpq   0x00007fb2c1112739
  0x00007fb2c1112731: addq   $0x1,0x190(%rdi)
  0x00007fb2c1112739: movabs $0x670c4b6f8,%rdx  ;*invokevirtual println
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {oop(&quot;X&quot;)}
  0x00007fb2c1112743: nop
  0x00007fb2c1112744: nop
  0x00007fb2c1112745: movabs $0xffffffffffffffff,%rax
  0x00007fb2c111274f: callq  0x00007fb2c1046220  ; OopMap{[56]=Oop off=724}
                                                ;*invokevirtual println
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {virtual_call}
  0x00007fb2c1112754: mov    0x2c(%rsp),%edi
  0x00007fb2c1112758: mov    0x38(%rsp),%rsi
  0x00007fb2c111275d: inc    %edi
  0x00007fb2c111275f: jmpq   0x00007fb2c1112540  ;*iload_1
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@33 (line 11)

  0x00007fb2c1112764: add    $0x50,%rsp
  0x00007fb2c1112768: pop    %rbp
  0x00007fb2c1112769: test   %eax,0x16f42991(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c111276f: retq                      ;*return
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@39 (line 18)

  0x00007fb2c1112770: mov    %eax,-0x14000(%rsp)
  0x00007fb2c1112777: push   %rbp
  0x00007fb2c1112778: sub    $0x50,%rsp
  0x00007fb2c111277c: mov    0x10(%rsi),%rbx
  0x00007fb2c1112780: mov    0x8(%rsi),%eax
  0x00007fb2c1112783: mov    %rsi,%rdi
  0x00007fb2c1112786: mov    %rbx,0x30(%rsp)
  0x00007fb2c111278b: mov    %eax,0x28(%rsp)
  0x00007fb2c111278f: callq  0x00007fb2d6e03d80  ;   {runtime_call}
  0x00007fb2c1112794: mov    0x28(%rsp),%eax
  0x00007fb2c1112798: mov    %rax,%rdi
  0x00007fb2c111279b: mov    0x30(%rsp),%rbx
  0x00007fb2c11127a0: mov    %rbx,%rsi
  0x00007fb2c11127a3: jmpq   0x00007fb2c11125b4
  0x00007fb2c11127a8: mov    %rdi,0x8(%rsp)
  0x00007fb2c11127ad: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c11127b5: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop off=826}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@-1 (line 9)
                                                ;   {runtime_call}
  0x00007fb2c11127ba: jmpq   0x00007fb2c11124de
  0x00007fb2c11127bf: mov    %rdi,0x8(%rsp)
  0x00007fb2c11127c4: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c11127cc: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop off=849}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@1 (line 9)
                                                ;   {runtime_call}
  0x00007fb2c11127d1: jmpq   0x00007fb2c1112525
  0x00007fb2c11127d6: mov    %rbx,0x8(%rsp)
  0x00007fb2c11127db: movq   $0x24,(%rsp)
  0x00007fb2c11127e3: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop off=872}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)
                                                ;   {runtime_call}
  0x00007fb2c11127e8: jmpq   0x00007fb2c1112572
  0x00007fb2c11127ed: callq  0x00007fb2c106ee40  ; OopMap{rsi=Oop off=882}
                                                ;*invokevirtual parse
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {runtime_call}
  0x00007fb2c11127f2: mov    %rbx,0x8(%rsp)
  0x00007fb2c11127f7: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c11127ff: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop off=900}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@-1 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {runtime_call}
  0x00007fb2c1112804: jmpq   0x00007fb2c1112613
  0x00007fb2c1112809: callq  0x00007fb2c106ee40  ; OopMap{[56]=Oop rsi=Oop off=910}
                                                ;*invokevirtual println
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {runtime_call}
  0x00007fb2c111280e: nop
  0x00007fb2c111280f: nop
  0x00007fb2c1112810: mov    0x2a8(%r15),%rax
  0x00007fb2c1112817: movabs $0x0,%r10
  0x00007fb2c1112821: mov    %r10,0x2a8(%r15)
  0x00007fb2c1112828: movabs $0x0,%r10
  0x00007fb2c1112832: mov    %r10,0x2b0(%r15)
  0x00007fb2c1112839: add    $0x50,%rsp
  0x00007fb2c111283d: pop    %rbp
  0x00007fb2c111283e: jmpq   0x00007fb2c106c3e0  ;   {runtime_call}
  0x00007fb2c1112843: hlt    
  0x00007fb2c1112844: hlt    
  0x00007fb2c1112845: hlt    
  0x00007fb2c1112846: hlt    
  0x00007fb2c1112847: hlt    
  0x00007fb2c1112848: hlt    
  0x00007fb2c1112849: hlt    
  0x00007fb2c111284a: hlt    
  0x00007fb2c111284b: hlt    
  0x00007fb2c111284c: hlt    
  0x00007fb2c111284d: hlt    
  0x00007fb2c111284e: hlt    
  0x00007fb2c111284f: hlt    
  0x00007fb2c1112850: hlt    
  0x00007fb2c1112851: hlt    
  0x00007fb2c1112852: hlt    
  0x00007fb2c1112853: hlt    
  0x00007fb2c1112854: hlt    
  0x00007fb2c1112855: hlt    
  0x00007fb2c1112856: hlt    
  0x00007fb2c1112857: hlt    
  0x00007fb2c1112858: hlt    
  0x00007fb2c1112859: hlt    
  0x00007fb2c111285a: hlt    
  0x00007fb2c111285b: hlt    
  0x00007fb2c111285c: hlt    
  0x00007fb2c111285d: hlt    
  0x00007fb2c111285e: hlt    
  0x00007fb2c111285f: hlt    
[Stub Code]
  0x00007fb2c1112860: nop                       ;   {no_reloc}
  0x00007fb2c1112861: nop
  0x00007fb2c1112862: nop
  0x00007fb2c1112863: nop
  0x00007fb2c1112864: nop
  0x00007fb2c1112865: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c111286f: jmpq   0x00007fb2c111286f  ;   {runtime_call}
  0x00007fb2c1112874: nop
  0x00007fb2c1112875: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c111287f: jmpq   0x00007fb2c111287f  ;   {runtime_call}
  0x00007fb2c1112884: nop
  0x00007fb2c1112885: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c111288f: jmpq   0x00007fb2c111288f  ;   {runtime_call}
[Exception Handler]
  0x00007fb2c1112894: callq  0x00007fb2c106cfe0  ;   {runtime_call}
  0x00007fb2c1112899: mov    %rsp,-0x28(%rsp)
  0x00007fb2c111289e: sub    $0x80,%rsp
  0x00007fb2c11128a5: mov    %rax,0x78(%rsp)
  0x00007fb2c11128aa: mov    %rcx,0x70(%rsp)
  0x00007fb2c11128af: mov    %rdx,0x68(%rsp)
  0x00007fb2c11128b4: mov    %rbx,0x60(%rsp)
  0x00007fb2c11128b9: mov    %rbp,0x50(%rsp)
  0x00007fb2c11128be: mov    %rsi,0x48(%rsp)
  0x00007fb2c11128c3: mov    %rdi,0x40(%rsp)
  0x00007fb2c11128c8: mov    %r8,0x38(%rsp)
  0x00007fb2c11128cd: mov    %r9,0x30(%rsp)
  0x00007fb2c11128d2: mov    %r10,0x28(%rsp)
  0x00007fb2c11128d7: mov    %r11,0x20(%rsp)
  0x00007fb2c11128dc: mov    %r12,0x18(%rsp)
  0x00007fb2c11128e1: mov    %r13,0x10(%rsp)
  0x00007fb2c11128e6: mov    %r14,0x8(%rsp)
  0x00007fb2c11128eb: mov    %r15,(%rsp)
  0x00007fb2c11128ef: movabs $0x7fb2d6f4df36,%rdi  ;   {external_word}
  0x00007fb2c11128f9: movabs $0x7fb2c1112899,%rsi  ;   {internal_word}
  0x00007fb2c1112903: mov    %rsp,%rdx
  0x00007fb2c1112906: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c111290a: callq  0x00007fb2d6c79990  ;   {runtime_call}
  0x00007fb2c111290f: hlt    
[Deopt Handler Code]
  0x00007fb2c1112910: movabs $0x7fb2c1112910,%r10  ;   {section_word}
  0x00007fb2c111291a: push   %r10
  0x00007fb2c111291c: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c1112921: hlt    
  0x00007fb2c1112922: hlt    
  0x00007fb2c1112923: hlt    
  0x00007fb2c1112924: hlt    
  0x00007fb2c1112925: hlt    
  0x00007fb2c1112926: hlt    
  0x00007fb2c1112927: hlt    
<nmethod compile_id='25' compile_kind='osr' compiler='C1' level='3' entry='0x00007fb2c1112480' size='2264' address='0x00007fb2c11122d0' relocation_offset='296' insts_offset='432' stub_offset='1424' scopes_data_offset='1664' scopes_pcs_offset='1864' dependencies_offset='2232' nul_chk_table_offset='2240' oops_offset='1624' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='64534' iicount='1' stamp='0.166'/>
<writer thread='140404519728896'/>
Decoding compiled method 0x00007fb2c1117390:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fb2bd79b428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb2c1117540: mov    0x8(%rsi),%r10d
  0x00007fb2c1117544: shl    $0x3,%r10
  0x00007fb2c1117548: cmp    %r10,%rax
  0x00007fb2c111754b: jne    0x00007fb2c1045e20  ;   {runtime_call}
  0x00007fb2c1117551: data16 xchg %ax,%ax
  0x00007fb2c1117554: nopl   0x0(%rax,%rax,1)
  0x00007fb2c111755c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb2c1117560: mov    %eax,-0x14000(%rsp)
  0x00007fb2c1117567: push   %rbp
  0x00007fb2c1117568: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@-1 (line 21)

  0x00007fb2c111756c: movabs $0x670be74a8,%r9   ;   {oop([C)}
  0x00007fb2c1117576: movzwl 0x20(%r9),%ebp     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@38 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111757b: cmp    $0x2d,%ebp
  0x00007fb2c111757e: jne    0x00007fb2c1117bf1  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@45 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117584: movzwl 0x2a(%r9),%ebp     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@51 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117589: cmp    $0x2d,%ebp
  0x00007fb2c111758c: jne    0x00007fb2c1117c01  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@58 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117592: movzwl 0x34(%r9),%ebp     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@64 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117597: cmp    $0x2d,%ebp
  0x00007fb2c111759a: jne    0x00007fb2c1117c11  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@71 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11175a0: movzwl 0x3e(%r9),%ebp     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@77 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11175a5: cmp    $0x2d,%ebp
  0x00007fb2c11175a8: jne    0x00007fb2c1117cdd  ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@84 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11175ae: movzwl 0x10(%r9),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11175b3: xor    %edx,%edx
  0x00007fb2c11175b5: cmp    $0x30,%r11d
  0x00007fb2c11175b9: jl     0x00007fb2c1117c21  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11175bf: cmp    $0x39,%r11d
  0x00007fb2c11175c3: jle    0x00007fb2c11175df  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11175c5: cmp    $0x61,%r11d
  0x00007fb2c11175c9: jl     0x00007fb2c1117d0d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11175cf: cmp    $0x66,%r11d
  0x00007fb2c11175d3: jg     0x00007fb2c1117dc9  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11175d9: add    $0xffffffa9,%r11d  ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11175dd: jmp    0x00007fb2c11175e3
  0x00007fb2c11175df: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11175e3: movslq %r11d,%r10         ;*i2l  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@139 (line 467)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11175e6: mov    $0x1,%ecx
  0x00007fb2c11175eb: xor    %r8d,%r8d
  0x00007fb2c11175ee: jmp    0x00007fb2c1117606
  0x00007fb2c11175f0: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11175f4: movslq %r11d,%r11
  0x00007fb2c11175f7: shl    $0x4,%r10
  0x00007fb2c11175fb: or     %r11,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 467)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11175fe: add    $0x2,%ecx          ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@142 (line 465)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117601: cmp    $0x7,%ecx
  0x00007fb2c1117604: jge    0x00007fb2c1117675  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@121 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117606: movzwl 0x10(%r9,%rcx,2),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111760c: cmp    $0x30,%edi
  0x00007fb2c111760f: jl     0x00007fb2c1117b35  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117615: cmp    $0x39,%edi
  0x00007fb2c1117618: jle    0x00007fb2c1117631  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111761a: cmp    $0x61,%edi
  0x00007fb2c111761d: jl     0x00007fb2c1117ba9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117623: cmp    $0x66,%edi
  0x00007fb2c1117626: jg     0x00007fb2c1117bcd  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111762c: add    $0xffffffa9,%edi   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111762f: jmp    0x00007fb2c1117634
  0x00007fb2c1117631: add    $0xffffffd0,%edi   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117634: movzwl 0x12(%r9,%rcx,2),%r11d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111763a: mov    %ecx,%edx
  0x00007fb2c111763c: inc    %edx               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@142 (line 465)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111763e: movslq %edi,%rbx
  0x00007fb2c1117641: shl    $0x4,%r10
  0x00007fb2c1117645: or     %rbx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 467)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117648: cmp    $0x30,%r11d
  0x00007fb2c111764c: jl     0x00007fb2c1117b3a  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117652: cmp    $0x39,%r11d
  0x00007fb2c1117656: jle    0x00007fb2c11175f0  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117658: cmp    $0x61,%r11d
  0x00007fb2c111765c: jl     0x00007fb2c1117bae  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117662: cmp    $0x66,%r11d
  0x00007fb2c1117666: jg     0x00007fb2c1117bd2  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111766c: add    $0xffffffa9,%r11d  ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117670: jmpq   0x00007fb2c11175f4
  0x00007fb2c1117675: cmp    $0x8,%ecx
  0x00007fb2c1117678: jge    0x00007fb2c11176c1
  0x00007fb2c111767a: xchg   %ax,%ax            ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@121 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111767c: movzwl 0x10(%r9,%rcx,2),%r11d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117682: cmp    $0x30,%r11d
  0x00007fb2c1117686: jl     0x00007fb2c1117b3c  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111768c: cmp    $0x39,%r11d
  0x00007fb2c1117690: jle    0x00007fb2c11176ac  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117692: cmp    $0x61,%r11d
  0x00007fb2c1117696: jl     0x00007fb2c1117bb0  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111769c: cmp    $0x66,%r11d
  0x00007fb2c11176a0: jg     0x00007fb2c1117bd4  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11176a6: add    $0xffffffa9,%r11d  ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11176aa: jmp    0x00007fb2c11176b0
  0x00007fb2c11176ac: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11176b0: movslq %r11d,%r11
  0x00007fb2c11176b3: shl    $0x4,%r10
  0x00007fb2c11176b7: or     %r11,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 467)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11176ba: inc    %ecx               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@142 (line 465)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11176bc: cmp    $0x8,%ecx
  0x00007fb2c11176bf: jl     0x00007fb2c111767c  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@159 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11176c1: movzwl 0x22(%r9),%ebx     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11176c6: cmp    $0x30,%ebx
  0x00007fb2c11176c9: jl     0x00007fb2c1117c29  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11176cf: cmp    $0x39,%ebx
  0x00007fb2c11176d2: jle    0x00007fb2c11176eb  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11176d4: cmp    $0x61,%ebx
  0x00007fb2c11176d7: jl     0x00007fb2c1117d15  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11176dd: cmp    $0x66,%ebx
  0x00007fb2c11176e0: jg     0x00007fb2c1117dd1  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11176e6: add    $0xffffffa9,%ebx   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11176e9: jmp    0x00007fb2c11176ee
  0x00007fb2c11176eb: add    $0xffffffd0,%ebx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11176ee: movzwl 0x24(%r9),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11176f3: shl    $0x4,%r10
  0x00007fb2c11176f7: movslq %ebx,%rcx
  0x00007fb2c11176fa: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 471)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11176fd: cmp    $0x30,%r11d
  0x00007fb2c1117701: jl     0x00007fb2c1117c3c  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117707: cmp    $0x39,%r11d
  0x00007fb2c111770b: jle    0x00007fb2c1117727  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111770d: cmp    $0x61,%r11d
  0x00007fb2c1117711: jl     0x00007fb2c1117d28  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117717: cmp    $0x66,%r11d
  0x00007fb2c111771b: jg     0x00007fb2c1117de4  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117721: add    $0xffffffa9,%r11d  ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117725: jmp    0x00007fb2c111772b
  0x00007fb2c1117727: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111772b: movzwl 0x26(%r9),%ebx     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117730: shl    $0x4,%r10
  0x00007fb2c1117734: movslq %r11d,%r11
  0x00007fb2c1117737: or     %r11,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 471)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111773a: cmp    $0x30,%ebx
  0x00007fb2c111773d: jl     0x00007fb2c1117c31  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117743: cmp    $0x39,%ebx
  0x00007fb2c1117746: jle    0x00007fb2c111775f  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117748: cmp    $0x61,%ebx
  0x00007fb2c111774b: jl     0x00007fb2c1117d1d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117751: cmp    $0x66,%ebx
  0x00007fb2c1117754: jg     0x00007fb2c1117dd9  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111775a: add    $0xffffffa9,%ebx   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111775d: jmp    0x00007fb2c1117762
  0x00007fb2c111775f: add    $0xffffffd0,%ebx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117762: movzwl 0x28(%r9),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117767: shl    $0x4,%r10
  0x00007fb2c111776b: movslq %ebx,%rcx
  0x00007fb2c111776e: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 471)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117771: cmp    $0x30,%r11d
  0x00007fb2c1117775: jl     0x00007fb2c1117c44  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111777b: cmp    $0x39,%r11d
  0x00007fb2c111777f: jle    0x00007fb2c111779b  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117781: cmp    $0x61,%r11d
  0x00007fb2c1117785: jl     0x00007fb2c1117d30  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111778b: cmp    $0x66,%r11d
  0x00007fb2c111778f: jg     0x00007fb2c1117dec  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117795: add    $0xffffffa9,%r11d  ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117799: jmp    0x00007fb2c111779f
  0x00007fb2c111779b: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111779f: movzwl 0x2c(%r9),%ecx     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11177a4: shl    $0x4,%r10
  0x00007fb2c11177a8: movslq %r11d,%r11
  0x00007fb2c11177ab: or     %r11,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 471)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11177ae: cmp    $0x30,%ecx
  0x00007fb2c11177b1: jl     0x00007fb2c1117c65  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11177b7: cmp    $0x39,%ecx
  0x00007fb2c11177ba: jle    0x00007fb2c11177d3  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11177bc: cmp    $0x61,%ecx
  0x00007fb2c11177bf: jl     0x00007fb2c1117d51  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11177c5: cmp    $0x66,%ecx
  0x00007fb2c11177c8: jg     0x00007fb2c1117e0d  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11177ce: add    $0xffffffa9,%ecx   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11177d1: jmp    0x00007fb2c11177d6
  0x00007fb2c11177d3: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11177d6: movzwl 0x2e(%r9),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11177db: shl    $0x4,%r10
  0x00007fb2c11177df: movslq %ecx,%rcx
  0x00007fb2c11177e2: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 475)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11177e5: cmp    $0x30,%r11d
  0x00007fb2c11177e9: jl     0x00007fb2c1117c78  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11177ef: cmp    $0x39,%r11d
  0x00007fb2c11177f3: jle    0x00007fb2c111780f  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11177f5: cmp    $0x61,%r11d
  0x00007fb2c11177f9: jl     0x00007fb2c1117d64  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11177ff: cmp    $0x66,%r11d
  0x00007fb2c1117803: jg     0x00007fb2c1117e20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117809: add    $0xffffffa9,%r11d  ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111780d: jmp    0x00007fb2c1117813
  0x00007fb2c111780f: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117813: movzwl 0x30(%r9),%ecx     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117818: shl    $0x4,%r10
  0x00007fb2c111781c: movslq %r11d,%r11
  0x00007fb2c111781f: or     %r11,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 475)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117822: cmp    $0x30,%ecx
  0x00007fb2c1117825: jl     0x00007fb2c1117c6d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111782b: cmp    $0x39,%ecx
  0x00007fb2c111782e: jle    0x00007fb2c1117847  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117830: cmp    $0x61,%ecx
  0x00007fb2c1117833: jl     0x00007fb2c1117d59  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117839: cmp    $0x66,%ecx
  0x00007fb2c111783c: jg     0x00007fb2c1117e15  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117842: add    $0xffffffa9,%ecx   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117845: jmp    0x00007fb2c111784a
  0x00007fb2c1117847: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111784a: movzwl 0x32(%r9),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111784f: shl    $0x4,%r10
  0x00007fb2c1117853: movslq %ecx,%rcx
  0x00007fb2c1117856: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 475)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117859: cmp    $0x30,%r11d
  0x00007fb2c111785d: jl     0x00007fb2c1117c80  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117863: cmp    $0x39,%r11d
  0x00007fb2c1117867: jle    0x00007fb2c1117883  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117869: cmp    $0x61,%r11d
  0x00007fb2c111786d: jl     0x00007fb2c1117d6c  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117873: cmp    $0x66,%r11d
  0x00007fb2c1117877: jg     0x00007fb2c1117e28  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111787d: add    $0xffffffa9,%r11d  ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117881: jmp    0x00007fb2c1117887
  0x00007fb2c1117883: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117887: movzwl 0x36(%r9),%ecx     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111788c: shl    $0x4,%r10
  0x00007fb2c1117890: movslq %r11d,%r11
  0x00007fb2c1117893: or     %r11,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 475)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117896: cmp    $0x30,%ecx
  0x00007fb2c1117899: jl     0x00007fb2c1117ca1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111789f: cmp    $0x39,%ecx
  0x00007fb2c11178a2: jle    0x00007fb2c11178bb  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11178a4: cmp    $0x61,%ecx
  0x00007fb2c11178a7: jl     0x00007fb2c1117d8d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11178ad: cmp    $0x66,%ecx
  0x00007fb2c11178b0: jg     0x00007fb2c1117e49  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11178b6: add    $0xffffffa9,%ecx   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11178b9: jmp    0x00007fb2c11178be
  0x00007fb2c11178bb: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11178be: movzwl 0x38(%r9),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11178c3: movslq %ecx,%r8           ;*i2l  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@253 (line 481)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11178c6: cmp    $0x30,%r11d
  0x00007fb2c11178ca: jl     0x00007fb2c1117cb2  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11178d0: cmp    $0x39,%r11d
  0x00007fb2c11178d4: jle    0x00007fb2c11178f0  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11178d6: cmp    $0x61,%r11d
  0x00007fb2c11178da: jl     0x00007fb2c1117d9e  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11178e0: cmp    $0x66,%r11d
  0x00007fb2c11178e4: jg     0x00007fb2c1117e5a  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11178ea: add    $0xffffffa9,%r11d  ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11178ee: jmp    0x00007fb2c11178f4
  0x00007fb2c11178f0: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11178f4: movzwl 0x3a(%r9),%ecx     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11178f9: movslq %r11d,%r11
  0x00007fb2c11178fc: shl    $0x4,%r8
  0x00007fb2c1117900: or     %r11,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 481)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117903: cmp    $0x30,%ecx
  0x00007fb2c1117906: jl     0x00007fb2c1117ca8  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111790c: cmp    $0x39,%ecx
  0x00007fb2c111790f: jle    0x00007fb2c1117928  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117911: cmp    $0x61,%ecx
  0x00007fb2c1117914: jl     0x00007fb2c1117d94  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111791a: cmp    $0x66,%ecx
  0x00007fb2c111791d: jg     0x00007fb2c1117e50  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117923: add    $0xffffffa9,%ecx   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117926: jmp    0x00007fb2c111792b
  0x00007fb2c1117928: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111792b: movzwl 0x3c(%r9),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117930: movslq %ecx,%rcx
  0x00007fb2c1117933: shl    $0x4,%r8
  0x00007fb2c1117937: or     %rcx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 481)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111793a: cmp    $0x30,%r11d
  0x00007fb2c111793e: jl     0x00007fb2c1117cb9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117944: cmp    $0x39,%r11d
  0x00007fb2c1117948: jle    0x00007fb2c1117964  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111794a: cmp    $0x61,%r11d
  0x00007fb2c111794e: jl     0x00007fb2c1117da5  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117954: cmp    $0x66,%r11d
  0x00007fb2c1117958: jg     0x00007fb2c1117e61  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111795e: add    $0xffffffa9,%r11d  ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117962: jmp    0x00007fb2c1117968
  0x00007fb2c1117964: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117968: movzwl 0x40(%r9),%ecx     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {no_reloc}
  0x00007fb2c111796d: movslq %r11d,%r11
  0x00007fb2c1117970: shl    $0x4,%r8
  0x00007fb2c1117974: or     %r11,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 481)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117977: mov    $0x18,%edi
  0x00007fb2c111797c: cmp    $0x30,%ecx
  0x00007fb2c111797f: jl     0x00007fb2c1117b12  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117985: cmp    $0x39,%ecx
  0x00007fb2c1117988: jle    0x00007fb2c11179a1  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111798a: cmp    $0x61,%ecx
  0x00007fb2c111798d: jl     0x00007fb2c1117b5e  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117993: cmp    $0x66,%ecx
  0x00007fb2c1117996: jg     0x00007fb2c1117b86  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111799c: add    $0xffffffa9,%ecx   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c111799f: jmp    0x00007fb2c11179a4
  0x00007fb2c11179a1: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11179a4: movslq %ecx,%r11
  0x00007fb2c11179a7: shl    $0x4,%r8
  0x00007fb2c11179ab: or     %r11,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@292 (line 485)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11179ae: mov    $0x19,%r11d
  0x00007fb2c11179b4: jmp    0x00007fb2c11179d7
  0x00007fb2c11179b6: data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c11179c0: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11179c3: movslq %ecx,%rcx
  0x00007fb2c11179c6: shl    $0x4,%r8
  0x00007fb2c11179ca: or     %rcx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@292 (line 485)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11179cd: add    $0x2,%r11d         ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@294 (line 483)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11179d1: cmp    $0x23,%r11d
  0x00007fb2c11179d5: jge    0x00007fb2c1117a3f  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@273 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11179d7: movzwl 0x10(%r9,%r11,2),%ebx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11179dd: cmp    $0x30,%ebx
  0x00007fb2c11179e0: jl     0x00007fb2c1117b0d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11179e6: cmp    $0x39,%ebx
  0x00007fb2c11179e9: jle    0x00007fb2c1117a02  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11179eb: cmp    $0x61,%ebx
  0x00007fb2c11179ee: jl     0x00007fb2c1117b59  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11179f4: cmp    $0x66,%ebx
  0x00007fb2c11179f7: jg     0x00007fb2c1117b81  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c11179fd: add    $0xffffffa9,%ebx   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a00: jmp    0x00007fb2c1117a05
  0x00007fb2c1117a02: add    $0xffffffd0,%ebx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a05: movzwl 0x12(%r9,%r11,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a0b: mov    %r11d,%edi
  0x00007fb2c1117a0e: inc    %edi               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@294 (line 483)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a10: movslq %ebx,%rbx
  0x00007fb2c1117a13: shl    $0x4,%r8
  0x00007fb2c1117a17: or     %rbx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@292 (line 485)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a1a: cmp    $0x30,%ecx
  0x00007fb2c1117a1d: jl     0x00007fb2c1117b12  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a23: cmp    $0x39,%ecx
  0x00007fb2c1117a26: jle    0x00007fb2c11179c0  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a28: cmp    $0x61,%ecx
  0x00007fb2c1117a2b: jl     0x00007fb2c1117b5e  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a31: cmp    $0x66,%ecx
  0x00007fb2c1117a34: jg     0x00007fb2c1117b86  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a3a: add    $0xffffffa9,%ecx   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a3d: jmp    0x00007fb2c11179c3
  0x00007fb2c1117a3f: cmp    $0x24,%r11d
  0x00007fb2c1117a43: jge    0x00007fb2c1117a93
  0x00007fb2c1117a45: data16 xchg %ax,%ax       ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@273 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a48: cmp    $0x24,%r11d
  0x00007fb2c1117a4c: jge    0x00007fb2c1117ced  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a52: movzwl 0x10(%r9,%r11,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a58: cmp    $0x30,%ecx
  0x00007fb2c1117a5b: jl     0x00007fb2c1117b15  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a61: cmp    $0x39,%ecx
  0x00007fb2c1117a64: jle    0x00007fb2c1117a7d  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a66: cmp    $0x61,%ecx
  0x00007fb2c1117a69: jl     0x00007fb2c1117b61  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a6f: cmp    $0x66,%ecx
  0x00007fb2c1117a72: jg     0x00007fb2c1117b89  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a78: add    $0xffffffa9,%ecx   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a7b: jmp    0x00007fb2c1117a80
  0x00007fb2c1117a7d: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a80: movslq %ecx,%rcx
  0x00007fb2c1117a83: shl    $0x4,%r8
  0x00007fb2c1117a87: or     %rcx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@292 (line 485)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a8a: inc    %r11d              ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@294 (line 483)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a8d: cmp    $0x24,%r11d
  0x00007fb2c1117a91: jl     0x00007fb2c1117a48  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@301 (line 483)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117a93: mov    0x60(%r15),%rax
  0x00007fb2c1117a97: mov    %rax,%r11
  0x00007fb2c1117a9a: add    $0x20,%r11
  0x00007fb2c1117a9e: cmp    0x70(%r15),%r11
  0x00007fb2c1117aa2: jae    0x00007fb2c1117aeb
  0x00007fb2c1117aa4: mov    %r11,0x60(%r15)
  0x00007fb2c1117aa8: prefetchw 0xc0(%r11)
  0x00007fb2c1117ab0: mov    $0xf800869e,%r11d  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007fb2c1117ab6: shl    $0x3,%r11
  0x00007fb2c1117aba: mov    0xa8(%r11),%r11
  0x00007fb2c1117ac1: mov    %r11,(%rax)
  0x00007fb2c1117ac4: movl   $0xf800869e,0x8(%rax)  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007fb2c1117acb: mov    %r12d,0xc(%rax)
  0x00007fb2c1117acf: mov    %r12,0x10(%rax)
  0x00007fb2c1117ad3: mov    %r12,0x18(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@304 (line 488)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117ad7: mov    %r10,0x10(%rax)    ;*putfield mostSigBits
                                                ; - java.util.UUID::&lt;init&gt;@6 (line 129)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@310 (line 488)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117adb: mov    %r8,0x18(%rax)     ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@-1 (line 455)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fb2c1117adf: add    $0x30,%rsp
  0x00007fb2c1117ae3: pop    %rbp
  0x00007fb2c1117ae4: test   %eax,0x16f3d516(%rip)        # 0x00007fb2d8055000
                                                ;   {poll_return}
  0x00007fb2c1117aea: retq   
  0x00007fb2c1117aeb: mov    %r10,(%rsp)
  0x00007fb2c1117aef: mov    %r8,%rbp
  0x00007fb2c1117af2: movabs $0x7c00434f0,%rsi  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007fb2c1117afc: data16 xchg %ax,%ax
  0x00007fb2c1117aff: callq  0x00007fb2c106c6a0  ; OopMap{off=1476}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@304 (line 488)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117b04: mov    %rbp,%r8
  0x00007fb2c1117b07: mov    (%rsp),%r10
  0x00007fb2c1117b0b: jmp    0x00007fb2c1117ad7
  0x00007fb2c1117b0d: mov    %ebx,%ecx
  0x00007fb2c1117b0f: mov    %r11d,%edi
  0x00007fb2c1117b12: mov    %edi,%r11d
  0x00007fb2c1117b15: mov    $0xffffff65,%esi
  0x00007fb2c1117b1a: mov    %r10,%rbp
  0x00007fb2c1117b1d: mov    %r8,(%rsp)
  0x00007fb2c1117b21: mov    %r11d,0x8(%rsp)
  0x00007fb2c1117b26: mov    %ecx,0x10(%rsp)
  0x00007fb2c1117b2a: nop
  0x00007fb2c1117b2b: callq  0x00007fb2c10051a0  ; OopMap{off=1520}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117b30: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117b35: mov    %ecx,%edx
  0x00007fb2c1117b37: mov    %edi,%r11d
  0x00007fb2c1117b3a: mov    %edx,%ecx
  0x00007fb2c1117b3c: mov    $0xffffff65,%esi
  0x00007fb2c1117b41: mov    %r10,%rbp
  0x00007fb2c1117b44: mov    %ecx,(%rsp)
  0x00007fb2c1117b47: mov    %r11d,0x8(%rsp)
  0x00007fb2c1117b4c: data16 xchg %ax,%ax
  0x00007fb2c1117b4f: callq  0x00007fb2c10051a0  ; OopMap{off=1556}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117b54: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117b59: mov    %ebx,%ecx
  0x00007fb2c1117b5b: mov    %r11d,%edi
  0x00007fb2c1117b5e: mov    %edi,%r11d
  0x00007fb2c1117b61: mov    $0xffffff65,%esi
  0x00007fb2c1117b66: mov    %r10,%rbp
  0x00007fb2c1117b69: mov    %r8,(%rsp)
  0x00007fb2c1117b6d: mov    %r11d,0x8(%rsp)
  0x00007fb2c1117b72: mov    %ecx,0x10(%rsp)
  0x00007fb2c1117b76: nop
  0x00007fb2c1117b77: callq  0x00007fb2c10051a0  ; OopMap{off=1596}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117b7c: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117b81: mov    %ebx,%ecx
  0x00007fb2c1117b83: mov    %r11d,%edi
  0x00007fb2c1117b86: mov    %edi,%r11d
  0x00007fb2c1117b89: mov    $0xffffff65,%esi
  0x00007fb2c1117b8e: mov    %r10,%rbp
  0x00007fb2c1117b91: mov    %r8,(%rsp)
  0x00007fb2c1117b95: mov    %r11d,0x8(%rsp)
  0x00007fb2c1117b9a: mov    %ecx,0x10(%rsp)
  0x00007fb2c1117b9e: nop
  0x00007fb2c1117b9f: callq  0x00007fb2c10051a0  ; OopMap{off=1636}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117ba4: callq  0x00007fb2d6d60a20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117ba9: mov    %ecx,%edx
  0x00007fb2c1117bab: mov    %edi,%r11d
  0x00007fb2c1117bae: mov    %edx,%ecx
  0x00007fb2c1117bb0: mov    $0xffffff65,%esi
  0x00007fb2c1117bb5: mov    %r10,%rbp
  0x00007fb2c1117bb8: mov    %ecx,(%rsp)
  0x00007fb2c1117bbb: mov    %r11d,0x8(%rsp)
  0x00007fb2c1117bc0: data16 xchg %ax,%ax
  0x00007fb2c1117bc3: callq  0x00007fb2c10051a0  ; OopMap{off=1672}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117bc8: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117bcd: mov    %ecx,%edx
  0x00007fb2c1117bcf: mov    %edi,%r11d
  0x00007fb2c1117bd2: mov    %edx,%ecx
  0x00007fb2c1117bd4: mov    $0xffffff65,%esi
  0x00007fb2c1117bd9: mov    %r10,%rbp
  0x00007fb2c1117bdc: mov    %ecx,(%rsp)
  0x00007fb2c1117bdf: mov    %r11d,0x8(%rsp)
  0x00007fb2c1117be4: data16 xchg %ax,%ax
  0x00007fb2c1117be7: callq  0x00007fb2c10051a0  ; OopMap{off=1708}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117bec: callq  0x00007fb2d6d60a20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117bf1: mov    $0xffffff65,%esi
  0x00007fb2c1117bf6: nop
  0x00007fb2c1117bf7: callq  0x00007fb2c10051a0  ; OopMap{off=1724}
                                                ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@45 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117bfc: callq  0x00007fb2d6d60a20  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@45 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117c01: mov    $0xffffff65,%esi
  0x00007fb2c1117c06: nop
  0x00007fb2c1117c07: callq  0x00007fb2c10051a0  ; OopMap{off=1740}
                                                ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@58 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117c0c: callq  0x00007fb2d6d60a20  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@58 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117c11: mov    $0xffffff65,%esi
  0x00007fb2c1117c16: nop
  0x00007fb2c1117c17: callq  0x00007fb2c10051a0  ; OopMap{off=1756}
                                                ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@71 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117c1c: callq  0x00007fb2d6d60a20  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@71 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117c21: xor    %r10d,%r10d
  0x00007fb2c1117c24: jmpq   0x00007fb2c1117b3a
  0x00007fb2c1117c29: mov    $0x9,%r8d
  0x00007fb2c1117c2f: jmp    0x00007fb2c1117c37
  0x00007fb2c1117c31: mov    $0xb,%r8d
  0x00007fb2c1117c37: mov    %ebx,%r11d
  0x00007fb2c1117c3a: jmp    0x00007fb2c1117c4a
  0x00007fb2c1117c3c: mov    $0xa,%r8d
  0x00007fb2c1117c42: jmp    0x00007fb2c1117c4a
  0x00007fb2c1117c44: mov    $0xc,%r8d
  0x00007fb2c1117c4a: mov    $0xffffff65,%esi
  0x00007fb2c1117c4f: mov    %r10,%rbp
  0x00007fb2c1117c52: mov    %r8d,(%rsp)
  0x00007fb2c1117c56: mov    %r11d,0x8(%rsp)
  0x00007fb2c1117c5b: callq  0x00007fb2c10051a0  ; OopMap{off=1824}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117c60: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117c65: mov    $0xe,%r9d
  0x00007fb2c1117c6b: jmp    0x00007fb2c1117c73
  0x00007fb2c1117c6d: mov    $0x10,%r9d
  0x00007fb2c1117c73: mov    %ecx,%r11d
  0x00007fb2c1117c76: jmp    0x00007fb2c1117c86
  0x00007fb2c1117c78: mov    $0xf,%r9d
  0x00007fb2c1117c7e: jmp    0x00007fb2c1117c86
  0x00007fb2c1117c80: mov    $0x11,%r9d
  0x00007fb2c1117c86: mov    $0xffffff65,%esi
  0x00007fb2c1117c8b: mov    %r10,%rbp
  0x00007fb2c1117c8e: mov    %r9d,(%rsp)
  0x00007fb2c1117c92: mov    %r11d,0x8(%rsp)
  0x00007fb2c1117c97: callq  0x00007fb2c10051a0  ; OopMap{off=1884}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117c9c: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117ca1: mov    $0x13,%ebx
  0x00007fb2c1117ca6: jmp    0x00007fb2c1117cad
  0x00007fb2c1117ca8: mov    $0x15,%ebx
  0x00007fb2c1117cad: mov    %ecx,%r11d
  0x00007fb2c1117cb0: jmp    0x00007fb2c1117cbe
  0x00007fb2c1117cb2: mov    $0x14,%ebx
  0x00007fb2c1117cb7: jmp    0x00007fb2c1117cbe
  0x00007fb2c1117cb9: mov    $0x16,%ebx
  0x00007fb2c1117cbe: mov    $0xffffff65,%esi
  0x00007fb2c1117cc3: mov    %r10,%rbp
  0x00007fb2c1117cc6: mov    %r8,(%rsp)
  0x00007fb2c1117cca: mov    %ebx,0x8(%rsp)
  0x00007fb2c1117cce: mov    %r11d,0x10(%rsp)
  0x00007fb2c1117cd3: callq  0x00007fb2c10051a0  ; OopMap{off=1944}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117cd8: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117cdd: mov    $0xffffff65,%esi
  0x00007fb2c1117ce2: nop
  0x00007fb2c1117ce3: callq  0x00007fb2c10051a0  ; OopMap{off=1960}
                                                ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@84 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117ce8: callq  0x00007fb2d6d60a20  ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@84 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117ced: mov    $0xffffff65,%esi
  0x00007fb2c1117cf2: mov    %r10,%rbp
  0x00007fb2c1117cf5: mov    %r8,(%rsp)
  0x00007fb2c1117cf9: mov    %r11d,0xc(%rsp)
  0x00007fb2c1117cfe: mov    %r11d,0x10(%rsp)
  0x00007fb2c1117d03: callq  0x00007fb2c10051a0  ; OopMap{off=1992}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117d08: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117d0d: xor    %r10d,%r10d
  0x00007fb2c1117d10: jmpq   0x00007fb2c1117bae
  0x00007fb2c1117d15: mov    $0x9,%r9d
  0x00007fb2c1117d1b: jmp    0x00007fb2c1117d23
  0x00007fb2c1117d1d: mov    $0xb,%r9d
  0x00007fb2c1117d23: mov    %ebx,%r11d
  0x00007fb2c1117d26: jmp    0x00007fb2c1117d36
  0x00007fb2c1117d28: mov    $0xa,%r9d
  0x00007fb2c1117d2e: jmp    0x00007fb2c1117d36
  0x00007fb2c1117d30: mov    $0xc,%r9d
  0x00007fb2c1117d36: mov    $0xffffff65,%esi
  0x00007fb2c1117d3b: mov    %r10,%rbp
  0x00007fb2c1117d3e: mov    %r9d,(%rsp)
  0x00007fb2c1117d42: mov    %r11d,0x8(%rsp)
  0x00007fb2c1117d47: callq  0x00007fb2c10051a0  ; OopMap{off=2060}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117d4c: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117d51: mov    $0xe,%r9d
  0x00007fb2c1117d57: jmp    0x00007fb2c1117d5f
  0x00007fb2c1117d59: mov    $0x10,%r9d
  0x00007fb2c1117d5f: mov    %ecx,%r11d
  0x00007fb2c1117d62: jmp    0x00007fb2c1117d72
  0x00007fb2c1117d64: mov    $0xf,%r9d
  0x00007fb2c1117d6a: jmp    0x00007fb2c1117d72
  0x00007fb2c1117d6c: mov    $0x11,%r9d
  0x00007fb2c1117d72: mov    $0xffffff65,%esi
  0x00007fb2c1117d77: mov    %r10,%rbp
  0x00007fb2c1117d7a: mov    %r9d,(%rsp)
  0x00007fb2c1117d7e: mov    %r11d,0x8(%rsp)
  0x00007fb2c1117d83: callq  0x00007fb2c10051a0  ; OopMap{off=2120}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117d88: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117d8d: mov    $0x13,%ebx
  0x00007fb2c1117d92: jmp    0x00007fb2c1117d99
  0x00007fb2c1117d94: mov    $0x15,%ebx
  0x00007fb2c1117d99: mov    %ecx,%r11d
  0x00007fb2c1117d9c: jmp    0x00007fb2c1117daa
  0x00007fb2c1117d9e: mov    $0x14,%ebx
  0x00007fb2c1117da3: jmp    0x00007fb2c1117daa
  0x00007fb2c1117da5: mov    $0x16,%ebx
  0x00007fb2c1117daa: mov    $0xffffff65,%esi
  0x00007fb2c1117daf: mov    %r10,%rbp
  0x00007fb2c1117db2: mov    %r8,(%rsp)
  0x00007fb2c1117db6: mov    %ebx,0x8(%rsp)
  0x00007fb2c1117dba: mov    %r11d,0x10(%rsp)
  0x00007fb2c1117dbf: callq  0x00007fb2c10051a0  ; OopMap{off=2180}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117dc4: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117dc9: xor    %r10d,%r10d
  0x00007fb2c1117dcc: jmpq   0x00007fb2c1117bd2
  0x00007fb2c1117dd1: mov    $0x9,%r9d
  0x00007fb2c1117dd7: jmp    0x00007fb2c1117ddf
  0x00007fb2c1117dd9: mov    $0xb,%r9d
  0x00007fb2c1117ddf: mov    %ebx,%r11d
  0x00007fb2c1117de2: jmp    0x00007fb2c1117df2
  0x00007fb2c1117de4: mov    $0xa,%r9d
  0x00007fb2c1117dea: jmp    0x00007fb2c1117df2
  0x00007fb2c1117dec: mov    $0xc,%r9d
  0x00007fb2c1117df2: mov    $0xffffff65,%esi
  0x00007fb2c1117df7: mov    %r10,%rbp
  0x00007fb2c1117dfa: mov    %r9d,(%rsp)
  0x00007fb2c1117dfe: mov    %r11d,0x8(%rsp)
  0x00007fb2c1117e03: callq  0x00007fb2c10051a0  ; OopMap{off=2248}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117e08: callq  0x00007fb2d6d60a20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117e0d: mov    $0xe,%r9d
  0x00007fb2c1117e13: jmp    0x00007fb2c1117e1b
  0x00007fb2c1117e15: mov    $0x10,%r9d
  0x00007fb2c1117e1b: mov    %ecx,%r11d
  0x00007fb2c1117e1e: jmp    0x00007fb2c1117e2e
  0x00007fb2c1117e20: mov    $0xf,%r9d
  0x00007fb2c1117e26: jmp    0x00007fb2c1117e2e
  0x00007fb2c1117e28: mov    $0x11,%r9d
  0x00007fb2c1117e2e: mov    $0xffffff65,%esi
  0x00007fb2c1117e33: mov    %r10,%rbp
  0x00007fb2c1117e36: mov    %r9d,(%rsp)
  0x00007fb2c1117e3a: mov    %r11d,0x8(%rsp)
  0x00007fb2c1117e3f: callq  0x00007fb2c10051a0  ; OopMap{off=2308}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117e44: callq  0x00007fb2d6d60a20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117e49: mov    $0x13,%ebx
  0x00007fb2c1117e4e: jmp    0x00007fb2c1117e55
  0x00007fb2c1117e50: mov    $0x15,%ebx
  0x00007fb2c1117e55: mov    %ecx,%r11d
  0x00007fb2c1117e58: jmp    0x00007fb2c1117e66
  0x00007fb2c1117e5a: mov    $0x14,%ebx
  0x00007fb2c1117e5f: jmp    0x00007fb2c1117e66
  0x00007fb2c1117e61: mov    $0x16,%ebx
  0x00007fb2c1117e66: mov    $0xffffff65,%esi
  0x00007fb2c1117e6b: mov    %r10,%rbp
  0x00007fb2c1117e6e: mov    %r8,(%rsp)
  0x00007fb2c1117e72: mov    %ebx,0x8(%rsp)
  0x00007fb2c1117e76: mov    %r11d,0x10(%rsp)
  0x00007fb2c1117e7b: callq  0x00007fb2c10051a0  ; OopMap{off=2368}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117e80: callq  0x00007fb2d6d60a20  ;*new
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@304 (line 488)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fb2c1117e85: mov    %rax,%rsi
  0x00007fb2c1117e88: add    $0x30,%rsp
  0x00007fb2c1117e8c: pop    %rbp
  0x00007fb2c1117e8d: jmpq   0x00007fb2c1101d60  ;   {runtime_call}
  0x00007fb2c1117e92: hlt    
  0x00007fb2c1117e93: hlt    
  0x00007fb2c1117e94: hlt    
  0x00007fb2c1117e95: hlt    
  0x00007fb2c1117e96: hlt    
  0x00007fb2c1117e97: hlt    
  0x00007fb2c1117e98: hlt    
  0x00007fb2c1117e99: hlt    
  0x00007fb2c1117e9a: hlt    
  0x00007fb2c1117e9b: hlt    
  0x00007fb2c1117e9c: hlt    
  0x00007fb2c1117e9d: hlt    
  0x00007fb2c1117e9e: hlt    
  0x00007fb2c1117e9f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb2c1117ea0: jmpq   0x00007fb2c106c760  ;   {no_reloc}
[Deopt Handler Code]
  0x00007fb2c1117ea5: callq  0x00007fb2c1117eaa
  0x00007fb2c1117eaa: subq   $0x5,(%rsp)
  0x00007fb2c1117eaf: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c1117eb4: hlt    
  0x00007fb2c1117eb5: hlt    
  0x00007fb2c1117eb6: hlt    
  0x00007fb2c1117eb7: hlt    
<nmethod compile_id='24' compiler='C2' level='4' entry='0x00007fb2c1117540' size='7496' address='0x00007fb2c1117390' relocation_offset='296' insts_offset='432' stub_offset='2832' scopes_data_offset='2928' scopes_pcs_offset='3816' dependencies_offset='7464' handler_table_offset='7472' oops_offset='2856' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='64555' iicount='64555' stamp='0.205'/>
<make_not_entrant thread='140404519728896' compile_id='18' compiler='C1' level='2' stamp='0.205'/>
<writer thread='140406105003776'/>
<task_queued compile_id='27' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='64556' iicount='1' level='3' stamp='0.205' comment='tiered' hot_count='1'/>
<writer thread='140404518676224'/>
Decoding compiled method 0x00007fb2c1111a90:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fb2c1111c40: mov    0x8(%rsi),%r10d
  0x00007fb2c1111c44: shl    $0x3,%r10
  0x00007fb2c1111c48: cmp    %rax,%r10
  0x00007fb2c1111c4b: jne    0x00007fb2c1045e20  ;   {runtime_call}
  0x00007fb2c1111c51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c1111c5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb2c1111c60: mov    %eax,-0x14000(%rsp)
  0x00007fb2c1111c67: push   %rbp
  0x00007fb2c1111c68: sub    $0x40,%rsp
  0x00007fb2c1111c6c: mov    %rsi,0x30(%rsp)
  0x00007fb2c1111c71: movabs $0x7fb2bd79e7c0,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c1111c7b: mov    0xdc(%rdi),%ebx
  0x00007fb2c1111c81: add    $0x8,%ebx
  0x00007fb2c1111c84: mov    %ebx,0xdc(%rdi)
  0x00007fb2c1111c8a: movabs $0x7fb2bd79b370,%rdi  ;   {metadata({method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c1111c94: and    $0x1ff8,%ebx
  0x00007fb2c1111c9a: cmp    $0x0,%ebx
  0x00007fb2c1111c9d: je     0x00007fb2c1111f17  ;*aload_0
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@0 (line 9)

  0x00007fb2c1111ca3: mov    %rsi,%rdi
  0x00007fb2c1111ca6: movabs $0x7fb2bd79e7c0,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c1111cb0: addq   $0x1,0x108(%rbx)
  0x00007fb2c1111cb8: movabs $0x7fb2bd511108,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd39b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb2c1111cc2: mov    0xdc(%rdi),%ebx
  0x00007fb2c1111cc8: add    $0x8,%ebx
  0x00007fb2c1111ccb: mov    %ebx,0xdc(%rdi)
  0x00007fb2c1111cd1: movabs $0x7fb2bd39b480,%rdi  ;   {metadata({method} {0x00007fb2bd39b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb2c1111cdb: and    $0x7ffff8,%ebx
  0x00007fb2c1111ce1: cmp    $0x0,%ebx
  0x00007fb2c1111ce4: je     0x00007fb2c1111f2e
  0x00007fb2c1111cea: movabs $0x7fb2bd79e7c0,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c1111cf4: incl   0x118(%rdi)
  0x00007fb2c1111cfa: mov    $0x0,%edi
  0x00007fb2c1111cff: jmpq   0x00007fb2c1111e97  ;*goto
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@6 (line 11)

  0x00007fb2c1111d04: nopl   0x0(%rax)
  0x00007fb2c1111d08: mov    %edi,0x28(%rsp)
  0x00007fb2c1111d0c: mov    %rsi,%rbx
  0x00007fb2c1111d0f: movabs $0x7fb2bd79e7c0,%rax  ;   {metadata(method data for {method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c1111d19: addq   $0x1,0x140(%rax)
  0x00007fb2c1111d21: movabs $0x7fb2bd79e668,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd79b428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c1111d2b: mov    0xdc(%rbx),%eax
  0x00007fb2c1111d31: add    $0x8,%eax
  0x00007fb2c1111d34: mov    %eax,0xdc(%rbx)
  0x00007fb2c1111d3a: movabs $0x7fb2bd79b428,%rbx  ;   {metadata({method} {0x00007fb2bd79b428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c1111d44: and    $0x7ffff8,%eax
  0x00007fb2c1111d4a: cmp    $0x0,%eax
  0x00007fb2c1111d4d: je     0x00007fb2c1111f45
  0x00007fb2c1111d53: movabs $0x7fb2bd79e668,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd79b428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c1111d5d: addq   $0x1,0x108(%rbx)
  0x00007fb2c1111d65: movabs $0x670be7490,%rsi  ;*invokestatic uuidFromCharSequence
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {oop(&quot;ba226cf7-d156-4b18-a78a-094736208cc9&quot;)}
  0x00007fb2c1111d6f: callq  0x00007fb2c1046420  ; OopMap{[48]=Oop off=308}
                                                ;*invokestatic uuidFromCharSequence
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {static_call}
  0x00007fb2c1111d74: movabs $0x7fb2bd79e7c0,%rsi  ;   {metadata(method data for {method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c1111d7e: addq   $0x1,0x160(%rsi)
  0x00007fb2c1111d86: mov    %rax,%rsi          ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)

  0x00007fb2c1111d89: nop
  0x00007fb2c1111d8a: nop
  0x00007fb2c1111d8b: nop
  0x00007fb2c1111d8c: nop
  0x00007fb2c1111d8d: nop
  0x00007fb2c1111d8e: nop
  0x00007fb2c1111d8f: callq  0x00007fb2c1046420  ; OopMap{[48]=Oop off=340}
                                                ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)
                                                ;   {static_call}
  0x00007fb2c1111d94: cmp    $0x1,%eax
  0x00007fb2c1111d97: movabs $0x7fb2bd79e7c0,%rdx  ;   {metadata(method data for {method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c1111da1: movabs $0x170,%rsi
  0x00007fb2c1111dab: jne    0x00007fb2c1111dbb
  0x00007fb2c1111db1: movabs $0x180,%rsi
  0x00007fb2c1111dbb: mov    (%rdx,%rsi,1),%rdi
  0x00007fb2c1111dbf: lea    0x1(%rdi),%rdi
  0x00007fb2c1111dc3: mov    %rdi,(%rdx,%rsi,1)
  0x00007fb2c1111dc7: jne    0x00007fb2c1111e8c  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@19 (line 13)

  0x00007fb2c1111dcd: movabs $0x670b80c78,%rdx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007fb2c1111dd7: mov    0x6c(%rdx),%esi
  0x00007fb2c1111dda: shl    $0x3,%rsi          ;*getstatic out
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@22 (line 14)

  0x00007fb2c1111dde: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00007fb2c1111f5c
  0x00007fb2c1111de1: mov    %rsi,%rdx
  0x00007fb2c1111de4: movabs $0x7fb2bd79e7c0,%rdi  ;   {metadata(method data for {method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c1111dee: mov    0x8(%rdx),%edx
  0x00007fb2c1111df1: shl    $0x3,%rdx
  0x00007fb2c1111df5: cmp    0x198(%rdi),%rdx
  0x00007fb2c1111dfc: jne    0x00007fb2c1111e0b
  0x00007fb2c1111dfe: addq   $0x1,0x1a0(%rdi)
  0x00007fb2c1111e06: jmpq   0x00007fb2c1111e71
  0x00007fb2c1111e0b: cmp    0x1a8(%rdi),%rdx
  0x00007fb2c1111e12: jne    0x00007fb2c1111e21
  0x00007fb2c1111e14: addq   $0x1,0x1b0(%rdi)
  0x00007fb2c1111e1c: jmpq   0x00007fb2c1111e71
  0x00007fb2c1111e21: cmpq   $0x0,0x198(%rdi)
  0x00007fb2c1111e2c: jne    0x00007fb2c1111e45
  0x00007fb2c1111e2e: mov    %rdx,0x198(%rdi)
  0x00007fb2c1111e35: movq   $0x1,0x1a0(%rdi)
  0x00007fb2c1111e40: jmpq   0x00007fb2c1111e71
  0x00007fb2c1111e45: cmpq   $0x0,0x1a8(%rdi)
  0x00007fb2c1111e50: jne    0x00007fb2c1111e69
  0x00007fb2c1111e52: mov    %rdx,0x1a8(%rdi)
  0x00007fb2c1111e59: movq   $0x1,0x1b0(%rdi)
  0x00007fb2c1111e64: jmpq   0x00007fb2c1111e71
  0x00007fb2c1111e69: addq   $0x1,0x190(%rdi)
  0x00007fb2c1111e71: movabs $0x670c4b6f8,%rdx  ;*invokevirtual println
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {oop(&quot;X&quot;)}
  0x00007fb2c1111e7b: nop
  0x00007fb2c1111e7c: nop
  0x00007fb2c1111e7d: movabs $0xffffffffffffffff,%rax
  0x00007fb2c1111e87: callq  0x00007fb2c1046220  ; OopMap{[48]=Oop off=588}
                                                ;*invokevirtual println
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {virtual_call}
  0x00007fb2c1111e8c: mov    0x28(%rsp),%edi
  0x00007fb2c1111e90: inc    %edi
  0x00007fb2c1111e92: mov    0x30(%rsp),%rsi
  0x00007fb2c1111e97: movabs $0x7fb2bd79e7c0,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c1111ea1: mov    0xe0(%rbx),%eax
  0x00007fb2c1111ea7: add    $0x8,%eax
  0x00007fb2c1111eaa: mov    %eax,0xe0(%rbx)
  0x00007fb2c1111eb0: movabs $0x7fb2bd79b370,%rbx  ;   {metadata({method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c1111eba: and    $0xfff8,%eax
  0x00007fb2c1111ec0: cmp    $0x0,%eax
  0x00007fb2c1111ec3: je     0x00007fb2c1111f61  ; OopMap{rsi=Oop [48]=Oop off=649}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)

  0x00007fb2c1111ec9: test   %eax,0x16f43231(%rip)        # 0x00007fb2d8055100
                                                ;   {poll}
  0x00007fb2c1111ecf: cmp    $0xf4240,%edi
  0x00007fb2c1111ed5: movabs $0x7fb2bd79e7c0,%rbx  ;   {metadata(method data for {method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c1111edf: movabs $0x1c0,%rax
  0x00007fb2c1111ee9: jl     0x00007fb2c1111ef9
  0x00007fb2c1111eef: movabs $0x1d0,%rax
  0x00007fb2c1111ef9: mov    (%rbx,%rax,1),%rdx
  0x00007fb2c1111efd: lea    0x1(%rdx),%rdx
  0x00007fb2c1111f01: mov    %rdx,(%rbx,%rax,1)
  0x00007fb2c1111f05: jl     0x00007fb2c1111d08  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)

  0x00007fb2c1111f0b: add    $0x40,%rsp
  0x00007fb2c1111f0f: pop    %rbp
  0x00007fb2c1111f10: test   %eax,0x16f431ea(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c1111f16: retq   
  0x00007fb2c1111f17: mov    %rdi,0x8(%rsp)
  0x00007fb2c1111f1c: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c1111f24: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop [48]=Oop off=745}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@-1 (line 9)
                                                ;   {runtime_call}
  0x00007fb2c1111f29: jmpq   0x00007fb2c1111ca3
  0x00007fb2c1111f2e: mov    %rdi,0x8(%rsp)
  0x00007fb2c1111f33: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c1111f3b: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop [48]=Oop off=768}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@1 (line 9)
                                                ;   {runtime_call}
  0x00007fb2c1111f40: jmpq   0x00007fb2c1111cea
  0x00007fb2c1111f45: mov    %rbx,0x8(%rsp)
  0x00007fb2c1111f4a: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c1111f52: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop [48]=Oop off=791}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@-1 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {runtime_call}
  0x00007fb2c1111f57: jmpq   0x00007fb2c1111d53
  0x00007fb2c1111f5c: callq  0x00007fb2c106ee40  ; OopMap{[48]=Oop rsi=Oop off=801}
                                                ;*invokevirtual println
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {runtime_call}
  0x00007fb2c1111f61: mov    %rbx,0x8(%rsp)
  0x00007fb2c1111f66: movq   $0x24,(%rsp)
  0x00007fb2c1111f6e: callq  0x00007fb2c10feb20  ; OopMap{rsi=Oop [48]=Oop off=819}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)
                                                ;   {runtime_call}
  0x00007fb2c1111f73: jmpq   0x00007fb2c1111ec9
  0x00007fb2c1111f78: nop
  0x00007fb2c1111f79: nop
  0x00007fb2c1111f7a: mov    0x2a8(%r15),%rax
  0x00007fb2c1111f81: movabs $0x0,%r10
  0x00007fb2c1111f8b: mov    %r10,0x2a8(%r15)
  0x00007fb2c1111f92: movabs $0x0,%r10
  0x00007fb2c1111f9c: mov    %r10,0x2b0(%r15)
  0x00007fb2c1111fa3: add    $0x40,%rsp
  0x00007fb2c1111fa7: pop    %rbp
  0x00007fb2c1111fa8: jmpq   0x00007fb2c106c3e0  ;   {runtime_call}
  0x00007fb2c1111fad: hlt    
  0x00007fb2c1111fae: hlt    
  0x00007fb2c1111faf: hlt    
  0x00007fb2c1111fb0: hlt    
  0x00007fb2c1111fb1: hlt    
  0x00007fb2c1111fb2: hlt    
  0x00007fb2c1111fb3: hlt    
  0x00007fb2c1111fb4: hlt    
  0x00007fb2c1111fb5: hlt    
  0x00007fb2c1111fb6: hlt    
  0x00007fb2c1111fb7: hlt    
  0x00007fb2c1111fb8: hlt    
  0x00007fb2c1111fb9: hlt    
  0x00007fb2c1111fba: hlt    
  0x00007fb2c1111fbb: hlt    
  0x00007fb2c1111fbc: hlt    
  0x00007fb2c1111fbd: hlt    
  0x00007fb2c1111fbe: hlt    
  0x00007fb2c1111fbf: hlt    
[Stub Code]
  0x00007fb2c1111fc0: nop                       ;   {no_reloc}
  0x00007fb2c1111fc1: nop
  0x00007fb2c1111fc2: nop
  0x00007fb2c1111fc3: nop
  0x00007fb2c1111fc4: nop
  0x00007fb2c1111fc5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c1111fcf: jmpq   0x00007fb2c1111fcf  ;   {runtime_call}
  0x00007fb2c1111fd4: nop
  0x00007fb2c1111fd5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c1111fdf: jmpq   0x00007fb2c1111fdf  ;   {runtime_call}
  0x00007fb2c1111fe4: nop
  0x00007fb2c1111fe5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c1111fef: jmpq   0x00007fb2c1111fef  ;   {runtime_call}
[Exception Handler]
  0x00007fb2c1111ff4: callq  0x00007fb2c106cfe0  ;   {runtime_call}
  0x00007fb2c1111ff9: mov    %rsp,-0x28(%rsp)
  0x00007fb2c1111ffe: sub    $0x80,%rsp
  0x00007fb2c1112005: mov    %rax,0x78(%rsp)
  0x00007fb2c111200a: mov    %rcx,0x70(%rsp)
  0x00007fb2c111200f: mov    %rdx,0x68(%rsp)
  0x00007fb2c1112014: mov    %rbx,0x60(%rsp)
  0x00007fb2c1112019: mov    %rbp,0x50(%rsp)
  0x00007fb2c111201e: mov    %rsi,0x48(%rsp)
  0x00007fb2c1112023: mov    %rdi,0x40(%rsp)
  0x00007fb2c1112028: mov    %r8,0x38(%rsp)
  0x00007fb2c111202d: mov    %r9,0x30(%rsp)
  0x00007fb2c1112032: mov    %r10,0x28(%rsp)
  0x00007fb2c1112037: mov    %r11,0x20(%rsp)
  0x00007fb2c111203c: mov    %r12,0x18(%rsp)
  0x00007fb2c1112041: mov    %r13,0x10(%rsp)
  0x00007fb2c1112046: mov    %r14,0x8(%rsp)
  0x00007fb2c111204b: mov    %r15,(%rsp)
  0x00007fb2c111204f: movabs $0x7fb2d6f4df36,%rdi  ;   {external_word}
  0x00007fb2c1112059: movabs $0x7fb2c1111ff9,%rsi  ;   {internal_word}
  0x00007fb2c1112063: mov    %rsp,%rdx
  0x00007fb2c1112066: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c111206a: callq  0x00007fb2d6c79990  ;   {runtime_call}
  0x00007fb2c111206f: hlt    
[Deopt Handler Code]
  0x00007fb2c1112070: movabs $0x7fb2c1112070,%r10  ;   {section_word}
  0x00007fb2c111207a: push   %r10
  0x00007fb2c111207c: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c1112081: hlt    
  0x00007fb2c1112082: hlt    
  0x00007fb2c1112083: hlt    
  0x00007fb2c1112084: hlt    
  0x00007fb2c1112085: hlt    
  0x00007fb2c1112086: hlt    
  0x00007fb2c1112087: hlt    
<nmethod compile_id='27' compiler='C1' level='3' entry='0x00007fb2c1111c40' size='2080' address='0x00007fb2c1111a90' relocation_offset='296' insts_offset='432' stub_offset='1328' scopes_data_offset='1568' scopes_pcs_offset='1752' dependencies_offset='2056' nul_chk_table_offset='2064' oops_offset='1528' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='69539' iicount='1' stamp='0.208'/>
<writer thread='140404520781568'/>
Decoding compiled method 0x00007fb2c111f410:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;
  0x00007fb2c111f5e0: callq  0x00007fb2d6d60a20  ;   {runtime_call}
  0x00007fb2c111f5e5: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c111f5f0: mov    %eax,-0x14000(%rsp)
  0x00007fb2c111f5f7: push   %rbp
  0x00007fb2c111f5f8: sub    $0x40,%rsp
  0x00007fb2c111f5fc: mov    0x8(%rsi),%ebp
  0x00007fb2c111f5ff: mov    0x30(%rsi),%rbx
  0x00007fb2c111f603: mov    0x20(%rsi),%r13
  0x00007fb2c111f607: mov    0x10(%rsi),%r14
  0x00007fb2c111f60b: mov    %rsi,%rdi
  0x00007fb2c111f60e: movabs $0x7fb2d6e03d80,%r10
  0x00007fb2c111f618: callq  *%r10
  0x00007fb2c111f61b: test   %rbx,%rbx
  0x00007fb2c111f61e: je     0x00007fb2c111fe59
  0x00007fb2c111f624: mov    0x8(%rbx),%r10d
  0x00007fb2c111f628: movabs $0x0,%rsi
  0x00007fb2c111f632: lea    (%rsi,%r10,8),%rsi
  0x00007fb2c111f636: mov    0x18(%rsi),%r10
  0x00007fb2c111f63a: movabs $0x7c00014e8,%rax  ;   {metadata(&apos;java/lang/CharSequence&apos;)}
  0x00007fb2c111f644: cmp    %rax,%r10
  0x00007fb2c111f647: jne    0x00007fb2c111fcfa
  0x00007fb2c111f64d: mov    0x8(%rbx),%r10d
  0x00007fb2c111f651: cmp    $0xf80002da,%r10d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007fb2c111f658: jne    0x00007fb2c111fe5b  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@121 (line 466)

  0x00007fb2c111f65e: mov    %rbx,%rdi          ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)

  0x00007fb2c111f661: mov    0xc(%rdi),%r11d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)

  0x00007fb2c111f665: mov    0xc(%r12,%r11,8),%r10d  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)
                                                ; implicit exception: dispatches to 0x00007fb2c111fe5b
  0x00007fb2c111f66a: cmp    %r10d,%ebp
  0x00007fb2c111f66d: jae    0x00007fb2c111fe5b
  0x00007fb2c111f673: cmp    $0x7,%r10d
  0x00007fb2c111f677: jbe    0x00007fb2c111fe5b
  0x00007fb2c111f67d: lea    (%r12,%r11,8),%rbx
  0x00007fb2c111f681: mov    %ebp,%esi
  0x00007fb2c111f683: inc    %esi
  0x00007fb2c111f685: xor    %r8d,%r8d
  0x00007fb2c111f688: cmp    %r8d,%esi
  0x00007fb2c111f68b: cmovl  %r8d,%esi
  0x00007fb2c111f68f: mov    $0x8,%r8d
  0x00007fb2c111f695: cmp    %r8d,%esi
  0x00007fb2c111f698: cmovg  %r8d,%esi          ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@121 (line 466)

  0x00007fb2c111f69c: test   %ebp,%ebp
  0x00007fb2c111f69e: jl     0x00007fb2c111fe79  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)

  0x00007fb2c111f6a4: cmp    %r10d,%ebp
  0x00007fb2c111f6a7: jge    0x00007fb2c111ff09  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)

  0x00007fb2c111f6ad: movzwl 0x10(%rbx,%rbp,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)

  0x00007fb2c111f6b2: cmp    $0x30,%ecx
  0x00007fb2c111f6b5: jl     0x00007fb2c111fd8f  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f6bb: cmp    $0x39,%ecx
  0x00007fb2c111f6be: jle    0x00007fb2c111f6d7  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f6c0: cmp    $0x61,%ecx
  0x00007fb2c111f6c3: jl     0x00007fb2c111fe0f  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f6c9: cmp    $0x66,%ecx
  0x00007fb2c111f6cc: jg     0x00007fb2c111fe37  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f6d2: add    $0xffffffa9,%ecx   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f6d5: jmp    0x00007fb2c111f6da
  0x00007fb2c111f6d7: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f6da: movslq %ecx,%r9
  0x00007fb2c111f6dd: shl    $0x4,%r13
  0x00007fb2c111f6e1: or     %r9,%r13           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 467)

  0x00007fb2c111f6e4: inc    %ebp               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@142 (line 465)

  0x00007fb2c111f6e6: cmp    %esi,%ebp
  0x00007fb2c111f6e8: jl     0x00007fb2c111f69c  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@149 (line 465)

  0x00007fb2c111f6ea: cmp    %r8d,%r10d
  0x00007fb2c111f6ed: mov    %r10d,%esi
  0x00007fb2c111f6f0: cmovg  %r8d,%esi
  0x00007fb2c111f6f4: mov    %esi,%r9d
  0x00007fb2c111f6f7: dec    %r9d
  0x00007fb2c111f6fa: mov    $0x80000000,%r8d
  0x00007fb2c111f700: cmp    %r9d,%esi
  0x00007fb2c111f703: cmovl  %r8d,%r9d
  0x00007fb2c111f707: cmp    %r9d,%ebp
  0x00007fb2c111f70a: jge    0x00007fb2c111f78b
  0x00007fb2c111f710: jmp    0x00007fb2c111f727
  0x00007fb2c111f712: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f715: movslq %ecx,%rcx
  0x00007fb2c111f718: shl    $0x4,%r13
  0x00007fb2c111f71c: or     %rcx,%r13          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 467)

  0x00007fb2c111f71f: add    $0x2,%ebp          ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@142 (line 465)

  0x00007fb2c111f722: cmp    %r9d,%ebp
  0x00007fb2c111f725: jge    0x00007fb2c111f78b  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@121 (line 466)

  0x00007fb2c111f727: movzwl 0x10(%rbx,%rbp,2),%esi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)

  0x00007fb2c111f72c: cmp    $0x30,%esi
  0x00007fb2c111f72f: jl     0x00007fb2c111fd89  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f735: cmp    $0x39,%esi
  0x00007fb2c111f738: jle    0x00007fb2c111f751  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f73a: cmp    $0x61,%esi
  0x00007fb2c111f73d: jl     0x00007fb2c111fe09  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f743: cmp    $0x66,%esi
  0x00007fb2c111f746: jg     0x00007fb2c111fe31  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f74c: add    $0xffffffa9,%esi   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f74f: jmp    0x00007fb2c111f754
  0x00007fb2c111f751: add    $0xffffffd0,%esi   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f754: movslq %ebp,%rcx
  0x00007fb2c111f757: movzwl 0x12(%rbx,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)

  0x00007fb2c111f75c: shl    $0x4,%r13
  0x00007fb2c111f760: movslq %esi,%rdx
  0x00007fb2c111f763: or     %rdx,%r13          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 467)

  0x00007fb2c111f766: cmp    $0x30,%ecx
  0x00007fb2c111f769: jl     0x00007fb2c111fd8d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f76f: cmp    $0x39,%ecx
  0x00007fb2c111f772: jle    0x00007fb2c111f712  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f774: cmp    $0x61,%ecx
  0x00007fb2c111f777: jl     0x00007fb2c111fe0d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f77d: cmp    $0x66,%ecx
  0x00007fb2c111f780: jg     0x00007fb2c111fe35  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f786: add    $0xffffffa9,%ecx   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f789: jmp    0x00007fb2c111f715
  0x00007fb2c111f78b: cmp    $0x8,%ebp
  0x00007fb2c111f78e: jge    0x00007fb2c111f7df  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@121 (line 466)

  0x00007fb2c111f790: test   %ebp,%ebp
  0x00007fb2c111f792: jl     0x00007fb2c111fe79  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)

  0x00007fb2c111f798: cmp    %r10d,%ebp
  0x00007fb2c111f79b: jge    0x00007fb2c111ff09  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)

  0x00007fb2c111f7a1: movzwl 0x10(%rbx,%rbp,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)

  0x00007fb2c111f7a6: cmp    $0x30,%ecx
  0x00007fb2c111f7a9: jl     0x00007fb2c111fd8f  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f7af: cmp    $0x39,%ecx
  0x00007fb2c111f7b2: jle    0x00007fb2c111f7cb  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f7b4: cmp    $0x61,%ecx
  0x00007fb2c111f7b7: jl     0x00007fb2c111fe0f  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f7bd: cmp    $0x66,%ecx
  0x00007fb2c111f7c0: jg     0x00007fb2c111fe37  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f7c6: add    $0xffffffa9,%ecx   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f7c9: jmp    0x00007fb2c111f7ce
  0x00007fb2c111f7cb: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111f7ce: movslq %ecx,%r9
  0x00007fb2c111f7d1: shl    $0x4,%r13
  0x00007fb2c111f7d5: or     %r9,%r13           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 467)

  0x00007fb2c111f7d8: inc    %ebp               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@142 (line 465)

  0x00007fb2c111f7da: cmp    $0x8,%ebp
  0x00007fb2c111f7dd: jl     0x00007fb2c111f790
  0x00007fb2c111f7df: cmp    $0x9,%r10d
  0x00007fb2c111f7e3: jbe    0x00007fb2c111fe99
  0x00007fb2c111f7e9: cmp    $0xc,%r10d
  0x00007fb2c111f7ed: jbe    0x00007fb2c111fe99  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@159 (line 470)

  0x00007fb2c111f7f3: cmp    $0x9,%r10d
  0x00007fb2c111f7f7: jle    0x00007fb2c111ffed  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)

  0x00007fb2c111f7fd: movzwl 0x22(%r12,%r11,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)

  0x00007fb2c111f803: cmp    $0x30,%ebp
  0x00007fb2c111f806: jl     0x00007fb2c111ff2d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f80c: cmp    $0x39,%ebp
  0x00007fb2c111f80f: jle    0x00007fb2c111f828  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f811: cmp    $0x61,%ebp
  0x00007fb2c111f814: jl     0x00007fb2c11200e9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f81a: cmp    $0x66,%ebp
  0x00007fb2c111f81d: jg     0x00007fb2c11201a9  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f823: add    $0xffffffa9,%ebp   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f826: jmp    0x00007fb2c111f82b
  0x00007fb2c111f828: add    $0xffffffd0,%ebp   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f82b: movslq %ebp,%r9
  0x00007fb2c111f82e: shl    $0x4,%r13
  0x00007fb2c111f832: or     %r9,%r13           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 471)

  0x00007fb2c111f835: cmp    $0xa,%r10d
  0x00007fb2c111f839: jle    0x00007fb2c111fff5  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)

  0x00007fb2c111f83f: movzwl 0x24(%r12,%r11,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)

  0x00007fb2c111f845: cmp    $0x30,%ebp
  0x00007fb2c111f848: jl     0x00007fb2c111ff35  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f84e: cmp    $0x39,%ebp
  0x00007fb2c111f851: jle    0x00007fb2c111f86a  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f853: cmp    $0x61,%ebp
  0x00007fb2c111f856: jl     0x00007fb2c11200f1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f85c: cmp    $0x66,%ebp
  0x00007fb2c111f85f: jg     0x00007fb2c11201b1  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f865: add    $0xffffffa9,%ebp   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f868: jmp    0x00007fb2c111f86d
  0x00007fb2c111f86a: add    $0xffffffd0,%ebp   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f86d: shl    $0x4,%r13
  0x00007fb2c111f871: movslq %ebp,%r9
  0x00007fb2c111f874: or     %r9,%r13           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 471)

  0x00007fb2c111f877: cmp    $0xb,%r10d
  0x00007fb2c111f87b: jle    0x00007fb2c111fffd  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)

  0x00007fb2c111f881: movzwl 0x26(%r12,%r11,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)

  0x00007fb2c111f887: cmp    $0x30,%ebp
  0x00007fb2c111f88a: jl     0x00007fb2c111ff3d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f890: cmp    $0x39,%ebp
  0x00007fb2c111f893: jle    0x00007fb2c111f8ac  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f895: cmp    $0x61,%ebp
  0x00007fb2c111f898: jl     0x00007fb2c11200f9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f89e: cmp    $0x66,%ebp
  0x00007fb2c111f8a1: jg     0x00007fb2c11201b9  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f8a7: add    $0xffffffa9,%ebp   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f8aa: jmp    0x00007fb2c111f8af
  0x00007fb2c111f8ac: add    $0xffffffd0,%ebp   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f8af: shl    $0x4,%r13
  0x00007fb2c111f8b3: movslq %ebp,%r9
  0x00007fb2c111f8b6: or     %r9,%r13           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 471)

  0x00007fb2c111f8b9: cmp    $0xc,%r10d
  0x00007fb2c111f8bd: jle    0x00007fb2c1120005  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)

  0x00007fb2c111f8c3: movzwl 0x28(%r12,%r11,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)

  0x00007fb2c111f8c9: cmp    $0x30,%ebp
  0x00007fb2c111f8cc: jl     0x00007fb2c111ff45  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f8d2: cmp    $0x39,%ebp
  0x00007fb2c111f8d5: jle    0x00007fb2c111f8ee  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f8d7: cmp    $0x61,%ebp
  0x00007fb2c111f8da: jl     0x00007fb2c1120101  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f8e0: cmp    $0x66,%ebp
  0x00007fb2c111f8e3: jg     0x00007fb2c11201c1  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f8e9: add    $0xffffffa9,%ebp   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f8ec: jmp    0x00007fb2c111f8f1
  0x00007fb2c111f8ee: add    $0xffffffd0,%ebp   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111f8f1: shl    $0x4,%r13
  0x00007fb2c111f8f5: movslq %ebp,%r9
  0x00007fb2c111f8f8: or     %r9,%r13           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 471)

  0x00007fb2c111f8fb: cmp    $0xe,%r10d
  0x00007fb2c111f8ff: jbe    0x00007fb2c111feb5
  0x00007fb2c111f905: cmp    $0x11,%r10d
  0x00007fb2c111f909: jbe    0x00007fb2c111feb5  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@197 (line 474)

  0x00007fb2c111f90f: cmp    $0xe,%r10d
  0x00007fb2c111f913: jle    0x00007fb2c1120035  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)

  0x00007fb2c111f919: movzwl 0x2c(%r12,%r11,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)

  0x00007fb2c111f91f: cmp    $0x30,%ebp
  0x00007fb2c111f922: jl     0x00007fb2c111ff6d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111f928: cmp    $0x39,%ebp
  0x00007fb2c111f92b: jle    0x00007fb2c111f944  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111f92d: cmp    $0x61,%ebp
  0x00007fb2c111f930: jl     0x00007fb2c1120129  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111f936: cmp    $0x66,%ebp
  0x00007fb2c111f939: jg     0x00007fb2c11201e9  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111f93f: add    $0xffffffa9,%ebp   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111f942: jmp    0x00007fb2c111f947
  0x00007fb2c111f944: add    $0xffffffd0,%ebp   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111f947: movslq %ebp,%r9
  0x00007fb2c111f94a: shl    $0x4,%r13
  0x00007fb2c111f94e: or     %r9,%r13           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 475)

  0x00007fb2c111f951: cmp    $0xf,%r10d
  0x00007fb2c111f955: jle    0x00007fb2c112003d  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)

  0x00007fb2c111f95b: movzwl 0x2e(%r12,%r11,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)

  0x00007fb2c111f961: cmp    $0x30,%ebp
  0x00007fb2c111f964: jl     0x00007fb2c111ff75  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111f96a: cmp    $0x39,%ebp
  0x00007fb2c111f96d: jle    0x00007fb2c111f986  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111f96f: cmp    $0x61,%ebp
  0x00007fb2c111f972: jl     0x00007fb2c1120131  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111f978: cmp    $0x66,%ebp
  0x00007fb2c111f97b: jg     0x00007fb2c11201f1  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111f981: add    $0xffffffa9,%ebp   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111f984: jmp    0x00007fb2c111f989
  0x00007fb2c111f986: add    $0xffffffd0,%ebp   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111f989: shl    $0x4,%r13
  0x00007fb2c111f98d: movslq %ebp,%r9
  0x00007fb2c111f990: or     %r9,%r13           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 475)

  0x00007fb2c111f993: cmp    $0x10,%r10d
  0x00007fb2c111f997: jle    0x00007fb2c1120045  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)

  0x00007fb2c111f99d: movzwl 0x30(%r12,%r11,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)

  0x00007fb2c111f9a3: cmp    $0x30,%ebp
  0x00007fb2c111f9a6: jl     0x00007fb2c111ff7d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111f9ac: cmp    $0x39,%ebp
  0x00007fb2c111f9af: jle    0x00007fb2c111f9c8  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111f9b1: cmp    $0x61,%ebp
  0x00007fb2c111f9b4: jl     0x00007fb2c1120139  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111f9ba: cmp    $0x66,%ebp
  0x00007fb2c111f9bd: jg     0x00007fb2c11201f9  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111f9c3: add    $0xffffffa9,%ebp   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111f9c6: jmp    0x00007fb2c111f9cb
  0x00007fb2c111f9c8: add    $0xffffffd0,%ebp   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111f9cb: shl    $0x4,%r13
  0x00007fb2c111f9cf: movslq %ebp,%r9
  0x00007fb2c111f9d2: or     %r9,%r13           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 475)

  0x00007fb2c111f9d5: cmp    $0x11,%r10d
  0x00007fb2c111f9d9: jle    0x00007fb2c112004d  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)

  0x00007fb2c111f9df: movzwl 0x32(%r12,%r11,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)

  0x00007fb2c111f9e5: cmp    $0x30,%ebp
  0x00007fb2c111f9e8: jl     0x00007fb2c111ff85  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111f9ee: cmp    $0x39,%ebp
  0x00007fb2c111f9f1: jle    0x00007fb2c111fa0a  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111f9f3: cmp    $0x61,%ebp
  0x00007fb2c111f9f6: jl     0x00007fb2c1120141  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111f9fc: cmp    $0x66,%ebp
  0x00007fb2c111f9ff: jg     0x00007fb2c1120201  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111fa05: add    $0xffffffa9,%ebp   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111fa08: jmp    0x00007fb2c111fa0d
  0x00007fb2c111fa0a: add    $0xffffffd0,%ebp   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111fa0d: shl    $0x4,%r13
  0x00007fb2c111fa11: movslq %ebp,%r9
  0x00007fb2c111fa14: or     %r9,%r13           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 475)

  0x00007fb2c111fa17: cmp    $0x13,%r10d
  0x00007fb2c111fa1b: jbe    0x00007fb2c111fed1
  0x00007fb2c111fa21: cmp    $0x16,%r10d
  0x00007fb2c111fa25: jbe    0x00007fb2c111fed1  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@235 (line 480)

  0x00007fb2c111fa2b: cmp    $0x13,%r10d
  0x00007fb2c111fa2f: jle    0x00007fb2c112007d  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)

  0x00007fb2c111fa35: movzwl 0x36(%r12,%r11,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)

  0x00007fb2c111fa3b: cmp    $0x30,%ebp
  0x00007fb2c111fa3e: jl     0x00007fb2c111ffad  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111fa44: cmp    $0x39,%ebp
  0x00007fb2c111fa47: jle    0x00007fb2c111fa60  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111fa49: cmp    $0x61,%ebp
  0x00007fb2c111fa4c: jl     0x00007fb2c1120169  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ;   {no_reloc}
  0x00007fb2c111fa52: cmp    $0x66,%ebp
  0x00007fb2c111fa55: jg     0x00007fb2c1120229  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111fa5b: add    $0xffffffa9,%ebp   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111fa5e: jmp    0x00007fb2c111fa63
  0x00007fb2c111fa60: add    $0xffffffd0,%ebp   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111fa63: movslq %ebp,%r9
  0x00007fb2c111fa66: shl    $0x4,%r14
  0x00007fb2c111fa6a: or     %r9,%r14           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 481)

  0x00007fb2c111fa6d: cmp    $0x14,%r10d
  0x00007fb2c111fa71: jle    0x00007fb2c1120085  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)

  0x00007fb2c111fa77: movzwl 0x38(%r12,%r11,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)

  0x00007fb2c111fa7d: cmp    $0x30,%ebp
  0x00007fb2c111fa80: jl     0x00007fb2c111ffb5  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111fa86: cmp    $0x39,%ebp
  0x00007fb2c111fa89: jle    0x00007fb2c111faa2  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111fa8b: cmp    $0x61,%ebp
  0x00007fb2c111fa8e: jl     0x00007fb2c1120171  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111fa94: cmp    $0x66,%ebp
  0x00007fb2c111fa97: jg     0x00007fb2c1120231  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111fa9d: add    $0xffffffa9,%ebp   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111faa0: jmp    0x00007fb2c111faa5
  0x00007fb2c111faa2: add    $0xffffffd0,%ebp   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111faa5: shl    $0x4,%r14
  0x00007fb2c111faa9: movslq %ebp,%r9
  0x00007fb2c111faac: or     %r9,%r14           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 481)

  0x00007fb2c111faaf: cmp    $0x15,%r10d
  0x00007fb2c111fab3: jle    0x00007fb2c112008d  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)

  0x00007fb2c111fab9: movzwl 0x3a(%r12,%r11,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)

  0x00007fb2c111fabf: cmp    $0x30,%ebp
  0x00007fb2c111fac2: jl     0x00007fb2c111ffbd  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111fac8: cmp    $0x39,%ebp
  0x00007fb2c111facb: jle    0x00007fb2c111fae4  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111facd: cmp    $0x61,%ebp
  0x00007fb2c111fad0: jl     0x00007fb2c1120179  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111fad6: cmp    $0x66,%ebp
  0x00007fb2c111fad9: jg     0x00007fb2c1120239  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111fadf: add    $0xffffffa9,%ebp   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111fae2: jmp    0x00007fb2c111fae7
  0x00007fb2c111fae4: add    $0xffffffd0,%ebp   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111fae7: shl    $0x4,%r14
  0x00007fb2c111faeb: movslq %ebp,%r9
  0x00007fb2c111faee: or     %r9,%r14           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 481)

  0x00007fb2c111faf1: cmp    $0x16,%r10d
  0x00007fb2c111faf5: jle    0x00007fb2c1120095  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)

  0x00007fb2c111fafb: movzwl 0x3c(%r12,%r11,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)

  0x00007fb2c111fb01: cmp    $0x30,%ebp
  0x00007fb2c111fb04: jl     0x00007fb2c111ffc5  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111fb0a: cmp    $0x39,%ebp
  0x00007fb2c111fb0d: jle    0x00007fb2c111fb26  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111fb0f: cmp    $0x61,%ebp
  0x00007fb2c111fb12: jl     0x00007fb2c1120181  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111fb18: cmp    $0x66,%ebp
  0x00007fb2c111fb1b: jg     0x00007fb2c1120241  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111fb21: add    $0xffffffa9,%ebp   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111fb24: jmp    0x00007fb2c111fb29
  0x00007fb2c111fb26: add    $0xffffffd0,%ebp   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111fb29: movslq %ebp,%r9
  0x00007fb2c111fb2c: shl    $0x4,%r14
  0x00007fb2c111fb30: or     %r9,%r14           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 481)

  0x00007fb2c111fb33: cmp    $0x18,%r10d
  0x00007fb2c111fb37: jbe    0x00007fb2c111feed
  0x00007fb2c111fb3d: cmp    $0x23,%r10d
  0x00007fb2c111fb41: jbe    0x00007fb2c111feed  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@273 (line 484)

  0x00007fb2c111fb47: mov    $0x18,%ebp
  0x00007fb2c111fb4c: cmp    $0x18,%r10d
  0x00007fb2c111fb50: jle    0x00007fb2c11200c5  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c111fb56: movzwl 0x40(%r12,%r11,8),%r11d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c111fb5c: cmp    $0x30,%r11d
  0x00007fb2c111fb60: jl     0x00007fb2c111fd67  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fb66: cmp    $0x39,%r11d
  0x00007fb2c111fb6a: jle    0x00007fb2c111fb86  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fb6c: cmp    $0x61,%r11d
  0x00007fb2c111fb70: jl     0x00007fb2c111fdb8  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fb76: cmp    $0x66,%r11d
  0x00007fb2c111fb7a: jg     0x00007fb2c111fde4  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fb80: add    $0xffffffa9,%r11d  ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fb84: jmp    0x00007fb2c111fb8a
  0x00007fb2c111fb86: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fb8a: movslq %r11d,%r11
  0x00007fb2c111fb8d: shl    $0x4,%r14
  0x00007fb2c111fb91: or     %r11,%r14          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@292 (line 485)

  0x00007fb2c111fb94: mov    $0x24,%r9d
  0x00007fb2c111fb9a: cmp    %r9d,%r10d
  0x00007fb2c111fb9d: mov    %r10d,%r11d
  0x00007fb2c111fba0: cmovg  %r9d,%r11d
  0x00007fb2c111fba4: mov    %r11d,%ecx
  0x00007fb2c111fba7: dec    %ecx
  0x00007fb2c111fba9: cmp    %ecx,%r11d
  0x00007fb2c111fbac: cmovl  %r8d,%ecx
  0x00007fb2c111fbb0: mov    $0x19,%ebp
  0x00007fb2c111fbb5: cmp    $0x19,%ecx
  0x00007fb2c111fbb8: jg     0x00007fb2c111fc89
  0x00007fb2c111fbbe: cmp    $0x24,%ebp
  0x00007fb2c111fbc1: jge    0x00007fb2c111fc12
  0x00007fb2c111fbc3: nop                       ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@273 (line 484)

  0x00007fb2c111fbc4: cmp    %r10d,%ebp
  0x00007fb2c111fbc7: jge    0x00007fb2c11200c5  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c111fbcd: movzwl 0x10(%rbx,%rbp,2),%r11d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c111fbd3: cmp    $0x30,%r11d
  0x00007fb2c111fbd7: jl     0x00007fb2c111fd67  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fbdd: cmp    $0x39,%r11d
  0x00007fb2c111fbe1: jle    0x00007fb2c111fbfd  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fbe3: cmp    $0x61,%r11d
  0x00007fb2c111fbe7: jl     0x00007fb2c111fdb8  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fbed: cmp    $0x66,%r11d
  0x00007fb2c111fbf1: jg     0x00007fb2c111fde4  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fbf7: add    $0xffffffa9,%r11d  ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fbfb: jmp    0x00007fb2c111fc01
  0x00007fb2c111fbfd: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fc01: movslq %r11d,%r11
  0x00007fb2c111fc04: shl    $0x4,%r14
  0x00007fb2c111fc08: or     %r11,%r14          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@292 (line 485)

  0x00007fb2c111fc0b: inc    %ebp               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@294 (line 483)

  0x00007fb2c111fc0d: cmp    $0x24,%ebp
  0x00007fb2c111fc10: jl     0x00007fb2c111fbc4  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@301 (line 483)

  0x00007fb2c111fc12: mov    0x60(%r15),%rax
  0x00007fb2c111fc16: mov    %rax,%r10
  0x00007fb2c111fc19: add    $0x20,%r10
  0x00007fb2c111fc1d: cmp    0x70(%r15),%r10
  0x00007fb2c111fc21: jae    0x00007fb2c111fd3d
  0x00007fb2c111fc27: mov    %r10,0x60(%r15)
  0x00007fb2c111fc2b: prefetchw 0xc0(%r10)
  0x00007fb2c111fc33: mov    $0xf800869e,%r10d  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007fb2c111fc39: shl    $0x3,%r10
  0x00007fb2c111fc3d: mov    0xa8(%r10),%r10
  0x00007fb2c111fc44: mov    %r10,(%rax)
  0x00007fb2c111fc47: movl   $0xf800869e,0x8(%rax)  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007fb2c111fc4e: mov    %r12d,0xc(%rax)
  0x00007fb2c111fc52: mov    %r12,0x10(%rax)
  0x00007fb2c111fc56: mov    %r12,0x18(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@304 (line 488)

  0x00007fb2c111fc5a: mov    %r13,0x10(%rax)    ;*putfield mostSigBits
                                                ; - java.util.UUID::&lt;init&gt;@6 (line 129)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@310 (line 488)

  0x00007fb2c111fc5e: mov    %r14,0x18(%rax)    ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@-1 (line 455)

  0x00007fb2c111fc62: add    $0x40,%rsp
  0x00007fb2c111fc66: pop    %rbp
  0x00007fb2c111fc67: test   %eax,0x16f35393(%rip)        # 0x00007fb2d8055000
                                                ;   {poll_return}
  0x00007fb2c111fc6d: retq   
  0x00007fb2c111fc6e: xchg   %ax,%ax
  0x00007fb2c111fc70: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fc74: shl    $0x4,%r14
  0x00007fb2c111fc78: movslq %r11d,%r11
  0x00007fb2c111fc7b: or     %r11,%r14          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@292 (line 485)

  0x00007fb2c111fc7e: add    $0x2,%ebp          ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@294 (line 483)

  0x00007fb2c111fc81: cmp    %ecx,%ebp
  0x00007fb2c111fc83: jge    0x00007fb2c111fbbe  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@273 (line 484)

  0x00007fb2c111fc89: movzwl 0x10(%rbx,%rbp,2),%r8d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c111fc8f: cmp    $0x30,%r8d
  0x00007fb2c111fc93: jl     0x00007fb2c111fd60  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fc99: cmp    $0x39,%r8d
  0x00007fb2c111fc9d: jle    0x00007fb2c111fcb9  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fc9f: cmp    $0x61,%r8d
  0x00007fb2c111fca3: jl     0x00007fb2c111fdb1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fca9: cmp    $0x66,%r8d
  0x00007fb2c111fcad: jg     0x00007fb2c111fddd  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fcb3: add    $0xffffffa9,%r8d   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fcb7: jmp    0x00007fb2c111fcbd
  0x00007fb2c111fcb9: add    $0xffffffd0,%r8d   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fcbd: movzwl 0x12(%rbx,%rbp,2),%r11d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c111fcc3: shl    $0x4,%r14
  0x00007fb2c111fcc7: movslq %r8d,%r8
  0x00007fb2c111fcca: or     %r8,%r14           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@292 (line 485)

  0x00007fb2c111fccd: cmp    $0x30,%r11d
  0x00007fb2c111fcd1: jl     0x00007fb2c111fd65  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fcd7: cmp    $0x39,%r11d
  0x00007fb2c111fcdb: jle    0x00007fb2c111fc70  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fcdd: cmp    $0x61,%r11d
  0x00007fb2c111fce1: jl     0x00007fb2c111fdb6  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fce7: cmp    $0x66,%r11d
  0x00007fb2c111fceb: jg     0x00007fb2c111fde2  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fcf1: add    $0xffffffa9,%r11d  ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fcf5: jmpq   0x00007fb2c111fc74
  0x00007fb2c111fcfa: push   %rax
  0x00007fb2c111fcfb: mov    %rax,%rax
  0x00007fb2c111fcfe: mov    0x20(%rsi),%rdi
  0x00007fb2c111fd02: mov    (%rdi),%ecx
  0x00007fb2c111fd04: add    $0x8,%rdi
  0x00007fb2c111fd08: test   %rax,%rax
  0x00007fb2c111fd0b: repnz scas %es:(%rdi),%rax
  0x00007fb2c111fd0e: pop    %rax
  0x00007fb2c111fd0f: jne    0x00007fb2c111fd19
  0x00007fb2c111fd15: mov    %rax,0x18(%rsi)
  0x00007fb2c111fd19: je     0x00007fb2c111f64d
  0x00007fb2c111fd1f: mov    $0xffffff9d,%esi
  0x00007fb2c111fd24: mov    %r13,(%rsp)
  0x00007fb2c111fd28: mov    %r14,0x8(%rsp)
  0x00007fb2c111fd2d: mov    %rbx,0x10(%rsp)
  0x00007fb2c111fd32: nop
  0x00007fb2c111fd33: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=1880}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@121 (line 466)
                                                ;   {runtime_call}
  0x00007fb2c111fd38: callq  0x00007fb2d6d60a20  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@121 (line 466)
                                                ;   {runtime_call}
  0x00007fb2c111fd3d: mov    %r14,(%rsp)
  0x00007fb2c111fd41: mov    %r13,%rbp          ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fd44: movabs $0x7c00434f0,%rsi  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007fb2c111fd4e: nop
  0x00007fb2c111fd4f: callq  0x00007fb2c106c6a0  ; OopMap{off=1908}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@304 (line 488)
                                                ;   {runtime_call}
  0x00007fb2c111fd54: mov    %rbp,%r13
  0x00007fb2c111fd57: mov    (%rsp),%r14
  0x00007fb2c111fd5b: jmpq   0x00007fb2c111fc5a
  0x00007fb2c111fd60: mov    %r8d,%r11d
  0x00007fb2c111fd63: jmp    0x00007fb2c111fd67
  0x00007fb2c111fd65: inc    %ebp               ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fd67: mov    $0xffffff65,%esi
  0x00007fb2c111fd6c: mov    %r13,(%rsp)
  0x00007fb2c111fd70: mov    %r14,0x8(%rsp)
  0x00007fb2c111fd75: mov    %r11d,0x14(%rsp)
  0x00007fb2c111fd7a: mov    %rdi,0x18(%rsp)
  0x00007fb2c111fd7f: callq  0x00007fb2c10051a0  ; OopMap{[24]=Oop off=1956}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c111fd84: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c111fd89: mov    %esi,%ecx
  0x00007fb2c111fd8b: jmp    0x00007fb2c111fd8f
  0x00007fb2c111fd8d: inc    %ebp               ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111fd8f: mov    $0xffffff65,%esi
  0x00007fb2c111fd94: mov    %r13,(%rsp)
  0x00007fb2c111fd98: mov    %r14,0x8(%rsp)
  0x00007fb2c111fd9d: mov    %ecx,0x14(%rsp)
  0x00007fb2c111fda1: mov    %rdi,0x18(%rsp)
  0x00007fb2c111fda6: nop
  0x00007fb2c111fda7: callq  0x00007fb2c10051a0  ; OopMap{[24]=Oop off=1996}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ;   {runtime_call}
  0x00007fb2c111fdac: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ;   {runtime_call}
  0x00007fb2c111fdb1: mov    %r8d,%r11d
  0x00007fb2c111fdb4: jmp    0x00007fb2c111fdb8
  0x00007fb2c111fdb6: inc    %ebp               ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fdb8: mov    $0xffffff65,%esi
  0x00007fb2c111fdbd: mov    %r13,(%rsp)
  0x00007fb2c111fdc1: mov    %r14,0x8(%rsp)
  0x00007fb2c111fdc6: mov    %r11d,0x14(%rsp)
  0x00007fb2c111fdcb: mov    %rdi,0x18(%rsp)
  0x00007fb2c111fdd0: data16 xchg %ax,%ax
  0x00007fb2c111fdd3: callq  0x00007fb2c10051a0  ; OopMap{[24]=Oop off=2040}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c111fdd8: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c111fddd: mov    %r8d,%r11d
  0x00007fb2c111fde0: jmp    0x00007fb2c111fde4
  0x00007fb2c111fde2: inc    %ebp               ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111fde4: mov    $0xffffff65,%esi
  0x00007fb2c111fde9: mov    %r13,(%rsp)
  0x00007fb2c111fded: mov    %r14,0x8(%rsp)
  0x00007fb2c111fdf2: mov    %r11d,0x14(%rsp)
  0x00007fb2c111fdf7: mov    %rdi,0x18(%rsp)
  0x00007fb2c111fdfc: data16 xchg %ax,%ax
  0x00007fb2c111fdff: callq  0x00007fb2c10051a0  ; OopMap{[24]=Oop off=2084}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c111fe04: callq  0x00007fb2d6d60a20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c111fe09: mov    %esi,%ecx
  0x00007fb2c111fe0b: jmp    0x00007fb2c111fe0f
  0x00007fb2c111fe0d: inc    %ebp               ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111fe0f: mov    $0xffffff65,%esi
  0x00007fb2c111fe14: mov    %r13,(%rsp)
  0x00007fb2c111fe18: mov    %r14,0x8(%rsp)
  0x00007fb2c111fe1d: mov    %ecx,0x14(%rsp)
  0x00007fb2c111fe21: mov    %rdi,0x18(%rsp)
  0x00007fb2c111fe26: nop
  0x00007fb2c111fe27: callq  0x00007fb2c10051a0  ; OopMap{[24]=Oop off=2124}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ;   {runtime_call}
  0x00007fb2c111fe2c: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ;   {runtime_call}
  0x00007fb2c111fe31: mov    %esi,%ecx
  0x00007fb2c111fe33: jmp    0x00007fb2c111fe37
  0x00007fb2c111fe35: inc    %ebp               ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)

  0x00007fb2c111fe37: mov    $0xffffff65,%esi
  0x00007fb2c111fe3c: mov    %r13,(%rsp)
  0x00007fb2c111fe40: mov    %r14,0x8(%rsp)
  0x00007fb2c111fe45: mov    %ecx,0x14(%rsp)
  0x00007fb2c111fe49: mov    %rdi,0x18(%rsp)
  0x00007fb2c111fe4e: nop
  0x00007fb2c111fe4f: callq  0x00007fb2c10051a0  ; OopMap{[24]=Oop off=2164}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ;   {runtime_call}
  0x00007fb2c111fe54: callq  0x00007fb2d6d60a20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 466)
                                                ;   {runtime_call}
  0x00007fb2c111fe59: xor    %ebx,%ebx
  0x00007fb2c111fe5b: mov    $0xffffff86,%esi
  0x00007fb2c111fe60: mov    %r13,(%rsp)
  0x00007fb2c111fe64: mov    %r14,0x8(%rsp)
  0x00007fb2c111fe69: mov    %rbx,0x10(%rsp)
  0x00007fb2c111fe6e: nop
  0x00007fb2c111fe6f: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=2196}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@121 (line 466)
                                                ;   {runtime_call}
  0x00007fb2c111fe74: callq  0x00007fb2d6d60a20  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)
                                                ;   {runtime_call}
  0x00007fb2c111fe79: mov    $0xffffff65,%esi
  0x00007fb2c111fe7e: mov    %r13,(%rsp)
  0x00007fb2c111fe82: mov    %r14,0x8(%rsp)
  0x00007fb2c111fe87: mov    %rdi,0x20(%rsp)
  0x00007fb2c111fe8c: data16 xchg %ax,%ax
  0x00007fb2c111fe8f: callq  0x00007fb2c10051a0  ; OopMap{[32]=Oop off=2228}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)
                                                ;   {runtime_call}
  0x00007fb2c111fe94: callq  0x00007fb2d6d60a20  ;   {runtime_call}
  0x00007fb2c111fe99: mov    $0xffffff86,%esi
  0x00007fb2c111fe9e: mov    %r13,%rbp
  0x00007fb2c111fea1: mov    %r14,(%rsp)
  0x00007fb2c111fea5: mov    %rdi,0x8(%rsp)
  0x00007fb2c111feaa: nop
  0x00007fb2c111feab: callq  0x00007fb2c10051a0  ; OopMap{[8]=Oop off=2256}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@159 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c111feb0: callq  0x00007fb2d6d60a20  ;   {runtime_call}
  0x00007fb2c111feb5: mov    $0xffffff86,%esi
  0x00007fb2c111feba: mov    %r13,%rbp
  0x00007fb2c111febd: mov    %r14,(%rsp)
  0x00007fb2c111fec1: mov    %rdi,0x8(%rsp)
  0x00007fb2c111fec6: nop
  0x00007fb2c111fec7: callq  0x00007fb2c10051a0  ; OopMap{[8]=Oop off=2284}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@197 (line 474)
                                                ;   {runtime_call}
  0x00007fb2c111fecc: callq  0x00007fb2d6d60a20  ;   {runtime_call}
  0x00007fb2c111fed1: mov    $0xffffff86,%esi
  0x00007fb2c111fed6: mov    %r13,%rbp
  0x00007fb2c111fed9: mov    %r14,(%rsp)
  0x00007fb2c111fedd: mov    %rdi,0x8(%rsp)
  0x00007fb2c111fee2: nop
  0x00007fb2c111fee3: callq  0x00007fb2c10051a0  ; OopMap{[8]=Oop off=2312}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@235 (line 480)
                                                ;   {runtime_call}
  0x00007fb2c111fee8: callq  0x00007fb2d6d60a20  ;   {runtime_call}
  0x00007fb2c111feed: mov    $0xffffff86,%esi
  0x00007fb2c111fef2: mov    %r13,%rbp
  0x00007fb2c111fef5: mov    %r14,(%rsp)
  0x00007fb2c111fef9: mov    %rdi,0x8(%rsp)
  0x00007fb2c111fefe: nop
  0x00007fb2c111feff: callq  0x00007fb2c10051a0  ; OopMap{[8]=Oop off=2340}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@273 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c111ff04: callq  0x00007fb2d6d60a20  ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)
                                                ;   {runtime_call}
  0x00007fb2c111ff09: mov    $0xffffff65,%esi
  0x00007fb2c111ff0e: mov    %r13,(%rsp)
  0x00007fb2c111ff12: mov    %r14,0x8(%rsp)
  0x00007fb2c111ff17: mov    %rdi,0x20(%rsp)
  0x00007fb2c111ff1c: mov    %r10d,0x28(%rsp)
  0x00007fb2c111ff21: xchg   %ax,%ax
  0x00007fb2c111ff23: callq  0x00007fb2c10051a0  ; OopMap{[32]=Oop off=2376}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)
                                                ;   {runtime_call}
  0x00007fb2c111ff28: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 466)
                                                ;   {runtime_call}
  0x00007fb2c111ff2d: mov    $0x9,%r11d
  0x00007fb2c111ff33: jmp    0x00007fb2c111ff4b
  0x00007fb2c111ff35: mov    $0xa,%r11d
  0x00007fb2c111ff3b: jmp    0x00007fb2c111ff4b
  0x00007fb2c111ff3d: mov    $0xb,%r11d
  0x00007fb2c111ff43: jmp    0x00007fb2c111ff4b
  0x00007fb2c111ff45: mov    $0xc,%r11d         ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c111ff4b: mov    $0xffffff65,%esi
  0x00007fb2c111ff50: mov    %r13,(%rsp)
  0x00007fb2c111ff54: mov    %r14,0x8(%rsp)
  0x00007fb2c111ff59: mov    %rdi,0x10(%rsp)
  0x00007fb2c111ff5e: mov    %r11d,0x18(%rsp)
  0x00007fb2c111ff63: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=2440}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c111ff68: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c111ff6d: mov    $0xe,%r10d
  0x00007fb2c111ff73: jmp    0x00007fb2c111ff8b
  0x00007fb2c111ff75: mov    $0xf,%r10d
  0x00007fb2c111ff7b: jmp    0x00007fb2c111ff8b
  0x00007fb2c111ff7d: mov    $0x10,%r10d
  0x00007fb2c111ff83: jmp    0x00007fb2c111ff8b
  0x00007fb2c111ff85: mov    $0x11,%r10d        ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c111ff8b: mov    $0xffffff65,%esi
  0x00007fb2c111ff90: mov    %r13,(%rsp)
  0x00007fb2c111ff94: mov    %r14,0x8(%rsp)
  0x00007fb2c111ff99: mov    %rdi,0x10(%rsp)
  0x00007fb2c111ff9e: mov    %r10d,0x18(%rsp)
  0x00007fb2c111ffa3: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=2504}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ;   {runtime_call}
  0x00007fb2c111ffa8: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ;   {runtime_call}
  0x00007fb2c111ffad: mov    $0x13,%r11d
  0x00007fb2c111ffb3: jmp    0x00007fb2c111ffcb
  0x00007fb2c111ffb5: mov    $0x14,%r11d
  0x00007fb2c111ffbb: jmp    0x00007fb2c111ffcb
  0x00007fb2c111ffbd: mov    $0x15,%r11d
  0x00007fb2c111ffc3: jmp    0x00007fb2c111ffcb
  0x00007fb2c111ffc5: mov    $0x16,%r11d        ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c111ffcb: mov    $0xffffff65,%esi
  0x00007fb2c111ffd0: mov    %r13,(%rsp)
  0x00007fb2c111ffd4: mov    %r14,0x8(%rsp)
  0x00007fb2c111ffd9: mov    %rdi,0x10(%rsp)
  0x00007fb2c111ffde: mov    %r11d,0x18(%rsp)
  0x00007fb2c111ffe3: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=2568}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ;   {runtime_call}
  0x00007fb2c111ffe8: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ;   {runtime_call}
  0x00007fb2c111ffed: mov    $0x9,%r8d
  0x00007fb2c111fff3: jmp    0x00007fb2c112000b
  0x00007fb2c111fff5: mov    $0xa,%r8d
  0x00007fb2c111fffb: jmp    0x00007fb2c112000b
  0x00007fb2c111fffd: mov    $0xb,%r8d
  0x00007fb2c1120003: jmp    0x00007fb2c112000b
  0x00007fb2c1120005: mov    $0xc,%r8d          ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)

  0x00007fb2c112000b: mov    $0xffffff65,%esi
  0x00007fb2c1120010: mov    %r13,%rbp
  0x00007fb2c1120013: mov    %r14,(%rsp)
  0x00007fb2c1120017: mov    %rdi,0x18(%rsp)
  0x00007fb2c112001c: mov    %r8d,0x14(%rsp)
  0x00007fb2c1120021: mov    %r8d,0x20(%rsp)
  0x00007fb2c1120026: mov    %r10d,0x24(%rsp)
  0x00007fb2c112002b: callq  0x00007fb2c10051a0  ; OopMap{[24]=Oop off=2640}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c1120030: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c1120035: mov    $0xe,%r11d
  0x00007fb2c112003b: jmp    0x00007fb2c1120053
  0x00007fb2c112003d: mov    $0xf,%r11d
  0x00007fb2c1120043: jmp    0x00007fb2c1120053
  0x00007fb2c1120045: mov    $0x10,%r11d
  0x00007fb2c112004b: jmp    0x00007fb2c1120053
  0x00007fb2c112004d: mov    $0x11,%r11d        ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)

  0x00007fb2c1120053: mov    $0xffffff65,%esi
  0x00007fb2c1120058: mov    %r13,%rbp
  0x00007fb2c112005b: mov    %r14,(%rsp)
  0x00007fb2c112005f: mov    %rdi,0x18(%rsp)
  0x00007fb2c1120064: mov    %r11d,0x14(%rsp)
  0x00007fb2c1120069: mov    %r11d,0x20(%rsp)
  0x00007fb2c112006e: mov    %r10d,0x24(%rsp)
  0x00007fb2c1120073: callq  0x00007fb2c10051a0  ; OopMap{[24]=Oop off=2712}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)
                                                ;   {runtime_call}
  0x00007fb2c1120078: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 474)
                                                ;   {runtime_call}
  0x00007fb2c112007d: mov    $0x13,%r8d
  0x00007fb2c1120083: jmp    0x00007fb2c112009b
  0x00007fb2c1120085: mov    $0x14,%r8d
  0x00007fb2c112008b: jmp    0x00007fb2c112009b
  0x00007fb2c112008d: mov    $0x15,%r8d
  0x00007fb2c1120093: jmp    0x00007fb2c112009b
  0x00007fb2c1120095: mov    $0x16,%r8d         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)

  0x00007fb2c112009b: mov    $0xffffff65,%esi
  0x00007fb2c11200a0: mov    %r13,%rbp
  0x00007fb2c11200a3: mov    %r14,(%rsp)
  0x00007fb2c11200a7: mov    %rdi,0x18(%rsp)
  0x00007fb2c11200ac: mov    %r8d,0x14(%rsp)
  0x00007fb2c11200b1: mov    %r8d,0x20(%rsp)
  0x00007fb2c11200b6: mov    %r10d,0x24(%rsp)
  0x00007fb2c11200bb: callq  0x00007fb2c10051a0  ; OopMap{[24]=Oop off=2784}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 480)
                                                ;   {runtime_call}
  0x00007fb2c11200c0: callq  0x00007fb2d6d60a20  ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c11200c5: mov    $0xffffff65,%esi
  0x00007fb2c11200ca: mov    %r13,(%rsp)
  0x00007fb2c11200ce: mov    %r14,0x8(%rsp)
  0x00007fb2c11200d3: mov    %rdi,0x20(%rsp)
  0x00007fb2c11200d8: mov    %r10d,0x28(%rsp)
  0x00007fb2c11200dd: xchg   %ax,%ax
  0x00007fb2c11200df: callq  0x00007fb2c10051a0  ; OopMap{[32]=Oop off=2820}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c11200e4: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c11200e9: mov    $0x9,%r11d
  0x00007fb2c11200ef: jmp    0x00007fb2c1120107
  0x00007fb2c11200f1: mov    $0xa,%r11d
  0x00007fb2c11200f7: jmp    0x00007fb2c1120107
  0x00007fb2c11200f9: mov    $0xb,%r11d
  0x00007fb2c11200ff: jmp    0x00007fb2c1120107
  0x00007fb2c1120101: mov    $0xc,%r11d         ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c1120107: mov    $0xffffff65,%esi
  0x00007fb2c112010c: mov    %r13,(%rsp)
  0x00007fb2c1120110: mov    %r14,0x8(%rsp)
  0x00007fb2c1120115: mov    %rdi,0x10(%rsp)
  0x00007fb2c112011a: mov    %r11d,0x18(%rsp)
  0x00007fb2c112011f: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=2884}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c1120124: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c1120129: mov    $0xe,%r10d
  0x00007fb2c112012f: jmp    0x00007fb2c1120147
  0x00007fb2c1120131: mov    $0xf,%r10d
  0x00007fb2c1120137: jmp    0x00007fb2c1120147
  0x00007fb2c1120139: mov    $0x10,%r10d
  0x00007fb2c112013f: jmp    0x00007fb2c1120147
  0x00007fb2c1120141: mov    $0x11,%r10d        ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c1120147: mov    $0xffffff65,%esi
  0x00007fb2c112014c: mov    %r13,(%rsp)
  0x00007fb2c1120150: mov    %r14,0x8(%rsp)
  0x00007fb2c1120155: mov    %rdi,0x10(%rsp)
  0x00007fb2c112015a: mov    %r10d,0x18(%rsp)
  0x00007fb2c112015f: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=2948}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ;   {runtime_call}
  0x00007fb2c1120164: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ;   {runtime_call}
  0x00007fb2c1120169: mov    $0x13,%r11d
  0x00007fb2c112016f: jmp    0x00007fb2c1120187
  0x00007fb2c1120171: mov    $0x14,%r11d
  0x00007fb2c1120177: jmp    0x00007fb2c1120187
  0x00007fb2c1120179: mov    $0x15,%r11d
  0x00007fb2c112017f: jmp    0x00007fb2c1120187
  0x00007fb2c1120181: mov    $0x16,%r11d        ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c1120187: mov    $0xffffff65,%esi
  0x00007fb2c112018c: mov    %r13,(%rsp)
  0x00007fb2c1120190: mov    %r14,0x8(%rsp)
  0x00007fb2c1120195: mov    %rdi,0x10(%rsp)
  0x00007fb2c112019a: mov    %r11d,0x18(%rsp)
  0x00007fb2c112019f: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=3012}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ;   {runtime_call}
  0x00007fb2c11201a4: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ;   {runtime_call}
  0x00007fb2c11201a9: mov    $0x9,%r11d
  0x00007fb2c11201af: jmp    0x00007fb2c11201c7
  0x00007fb2c11201b1: mov    $0xa,%r11d
  0x00007fb2c11201b7: jmp    0x00007fb2c11201c7
  0x00007fb2c11201b9: mov    $0xb,%r11d
  0x00007fb2c11201bf: jmp    0x00007fb2c11201c7
  0x00007fb2c11201c1: mov    $0xc,%r11d         ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)

  0x00007fb2c11201c7: mov    $0xffffff65,%esi
  0x00007fb2c11201cc: mov    %r13,(%rsp)
  0x00007fb2c11201d0: mov    %r14,0x8(%rsp)
  0x00007fb2c11201d5: mov    %rdi,0x10(%rsp)
  0x00007fb2c11201da: mov    %r11d,0x18(%rsp)
  0x00007fb2c11201df: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=3076}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c11201e4: callq  0x00007fb2d6d60a20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 470)
                                                ;   {runtime_call}
  0x00007fb2c11201e9: mov    $0xe,%r10d
  0x00007fb2c11201ef: jmp    0x00007fb2c1120207
  0x00007fb2c11201f1: mov    $0xf,%r10d
  0x00007fb2c11201f7: jmp    0x00007fb2c1120207
  0x00007fb2c11201f9: mov    $0x10,%r10d
  0x00007fb2c11201ff: jmp    0x00007fb2c1120207
  0x00007fb2c1120201: mov    $0x11,%r10d        ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)

  0x00007fb2c1120207: mov    $0xffffff65,%esi
  0x00007fb2c112020c: mov    %r13,(%rsp)
  0x00007fb2c1120210: mov    %r14,0x8(%rsp)
  0x00007fb2c1120215: mov    %rdi,0x10(%rsp)
  0x00007fb2c112021a: mov    %r10d,0x18(%rsp)
  0x00007fb2c112021f: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=3140}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ;   {runtime_call}
  0x00007fb2c1120224: callq  0x00007fb2d6d60a20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 474)
                                                ;   {runtime_call}
  0x00007fb2c1120229: mov    $0x13,%r11d
  0x00007fb2c112022f: jmp    0x00007fb2c1120247
  0x00007fb2c1120231: mov    $0x14,%r11d
  0x00007fb2c1120237: jmp    0x00007fb2c1120247
  0x00007fb2c1120239: mov    $0x15,%r11d
  0x00007fb2c112023f: jmp    0x00007fb2c1120247
  0x00007fb2c1120241: mov    $0x16,%r11d        ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)

  0x00007fb2c1120247: mov    $0xffffff65,%esi
  0x00007fb2c112024c: mov    %r13,(%rsp)
  0x00007fb2c1120250: mov    %r14,0x8(%rsp)
  0x00007fb2c1120255: mov    %rdi,0x10(%rsp)
  0x00007fb2c112025a: mov    %r11d,0x18(%rsp)
  0x00007fb2c112025f: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=3204}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 480)
                                                ;   {runtime_call}
  0x00007fb2c1120264: callq  0x00007fb2d6d60a20  ;*new
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@304 (line 488)
                                                ;   {runtime_call}
  0x00007fb2c1120269: mov    %rax,%rsi
  0x00007fb2c112026c: add    $0x40,%rsp
  0x00007fb2c1120270: pop    %rbp
  0x00007fb2c1120271: jmpq   0x00007fb2c1101d60  ;   {runtime_call}
  0x00007fb2c1120276: hlt    
  0x00007fb2c1120277: hlt    
  0x00007fb2c1120278: hlt    
  0x00007fb2c1120279: hlt    
  0x00007fb2c112027a: hlt    
  0x00007fb2c112027b: hlt    
  0x00007fb2c112027c: hlt    
  0x00007fb2c112027d: hlt    
  0x00007fb2c112027e: hlt    
  0x00007fb2c112027f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb2c1120280: jmpq   0x00007fb2c106c760  ;   {no_reloc}
[Deopt Handler Code]
  0x00007fb2c1120285: callq  0x00007fb2c112028a
  0x00007fb2c112028a: subq   $0x5,(%rsp)
  0x00007fb2c112028f: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c1120294: hlt    
  0x00007fb2c1120295: hlt    
  0x00007fb2c1120296: hlt    
  0x00007fb2c1120297: hlt    
<nmethod compile_id='26' compile_kind='osr' compiler='C2' level='4' entry='0x00007fb2c111f5e0' size='9208' address='0x00007fb2c111f410' relocation_offset='296' insts_offset='464' stub_offset='3696' scopes_data_offset='3776' scopes_pcs_offset='4792' dependencies_offset='9160' handler_table_offset='9168' nul_chk_table_offset='9192' oops_offset='3720' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='314' count='101419' backedge_count='3723164' iicount='101419' stamp='0.233'/>
<writer thread='140406105003776'/>
<task_queued compile_id='28' compile_kind='osr' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='101420' iicount='1' osr_bci='9' stamp='0.233' comment='tiered' hot_count='101420'/>
<task_queued compile_id='29' compile_kind='osr' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='314' count='101452' backedge_count='3724384' iicount='101452' osr_bci='273' stamp='0.233' comment='tiered' hot_count='3724384'/>
<writer thread='140404520781568'/>
Decoding compiled method 0x00007fb2c111d6d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb2bd79b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;
  0x00007fb2c111d840: callq  0x00007fb2d6d60a20  ;   {runtime_call}
  0x00007fb2c111d845: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c111d850: mov    %eax,-0x14000(%rsp)
  0x00007fb2c111d857: push   %rbp
  0x00007fb2c111d858: sub    $0x20,%rsp
  0x00007fb2c111d85c: mov    0x8(%rsi),%r10d
  0x00007fb2c111d860: mov    %r10d,(%rsp)
  0x00007fb2c111d864: mov    0x10(%rsi),%rbp
  0x00007fb2c111d868: mov    %rsi,%rdi
  0x00007fb2c111d86b: movabs $0x7fb2d6e03d80,%r10
  0x00007fb2c111d875: callq  *%r10
  0x00007fb2c111d878: mov    0x8(%rbp),%r10d    ; implicit exception: dispatches to 0x00007fb2c111d937
  0x00007fb2c111d87c: cmp    $0xf800c005,%r10d  ;   {metadata(&apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fb2c111d883: jne    0x00007fb2c111d916  ;*aload_0
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@9 (line 12)

  0x00007fb2c111d889: jmp    0x00007fb2c111d8b4
  0x00007fb2c111d88b: mov    %rax,%rsi
  0x00007fb2c111d88e: nop
  0x00007fb2c111d88f: callq  0x00007fb2c1046420  ; OopMap{rbp=Oop off=84}
                                                ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)
                                                ;   {static_call}
  0x00007fb2c111d894: cmp    $0x1,%eax
  0x00007fb2c111d897: je     0x00007fb2c111d911
  0x00007fb2c111d89d: data16 xchg %ax,%ax       ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)

  0x00007fb2c111d8a0: mov    (%rsp),%r10d
  0x00007fb2c111d8a4: inc    %r10d              ;*iinc
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@30 (line 11)

  0x00007fb2c111d8a7: mov    %r10d,(%rsp)
  0x00007fb2c111d8ab: cmp    $0xf4240,%r10d
  0x00007fb2c111d8b2: jge    0x00007fb2c111d901  ;*aload_0
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@9 (line 12)

  0x00007fb2c111d8b4: mov    %rbp,%rsi
  0x00007fb2c111d8b7: callq  0x00007fb2c1046020  ; OopMap{rbp=Oop off=124}
                                                ;*invokevirtual parse
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {optimized virtual_call}
  0x00007fb2c111d8bc: test   %rax,%rax
  0x00007fb2c111d8bf: je     0x00007fb2c111d8a0
  0x00007fb2c111d8c1: mov    (%rax),%r10
  0x00007fb2c111d8c4: mov    %r10,%r11
  0x00007fb2c111d8c7: and    $0x7,%r11
  0x00007fb2c111d8cb: cmp    $0x1,%r11
  0x00007fb2c111d8cf: jne    0x00007fb2c111d88b
  0x00007fb2c111d8d1: shr    $0x8,%r10
  0x00007fb2c111d8d5: mov    %r10d,%r11d
  0x00007fb2c111d8d8: and    $0x7fffffff,%r11d
  0x00007fb2c111d8df: test   %r11d,%r11d
  0x00007fb2c111d8e2: je     0x00007fb2c111d88b
  0x00007fb2c111d8e4: cmp    $0x1,%r11d
  0x00007fb2c111d8e8: jne    0x00007fb2c111d8a0  ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)

  0x00007fb2c111d8ea: mov    $0xffffff65,%esi
  0x00007fb2c111d8ef: mov    %r11d,0x4(%rsp)
  0x00007fb2c111d8f4: data16 xchg %ax,%ax
  0x00007fb2c111d8f7: callq  0x00007fb2c10051a0  ; OopMap{rbp=Oop off=188}
                                                ;*if_icmpne
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@19 (line 13)
                                                ;   {runtime_call}
  0x00007fb2c111d8fc: callq  0x00007fb2d6d60a20  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@19 (line 13)
                                                ;   {runtime_call}
  0x00007fb2c111d901: mov    $0xffffff65,%esi
  0x00007fb2c111d906: nop
  0x00007fb2c111d907: callq  0x00007fb2c10051a0  ; OopMap{rbp=Oop off=204}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)
                                                ;   {runtime_call}
  0x00007fb2c111d90c: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)
                                                ;   {runtime_call}
  0x00007fb2c111d911: mov    %eax,%r11d
  0x00007fb2c111d914: jmp    0x00007fb2c111d8ea
  0x00007fb2c111d916: mov    $0xffffff9d,%esi
  0x00007fb2c111d91b: callq  0x00007fb2c10051a0  ; OopMap{rbp=Oop off=224}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@9 (line 12)
                                                ;   {runtime_call}
  0x00007fb2c111d920: callq  0x00007fb2d6d60a20  ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)
                                                ;   {runtime_call}
  0x00007fb2c111d925: mov    %rax,%rsi
  0x00007fb2c111d928: jmp    0x00007fb2c111d92d  ;*invokevirtual parse
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)

  0x00007fb2c111d92a: mov    %rax,%rsi          ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)

  0x00007fb2c111d92d: add    $0x20,%rsp
  0x00007fb2c111d931: pop    %rbp
  0x00007fb2c111d932: jmpq   0x00007fb2c1101d60  ;   {runtime_call}
  0x00007fb2c111d937: mov    $0xffffff86,%esi
  0x00007fb2c111d93c: mov    (%rsp),%ebp
  0x00007fb2c111d93f: callq  0x00007fb2c10051a0  ; OopMap{off=260}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@9 (line 12)
                                                ;   {runtime_call}
  0x00007fb2c111d944: callq  0x00007fb2d6d60a20  ;*aload_0
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@9 (line 12)
                                                ;   {runtime_call}
  0x00007fb2c111d949: hlt    
  0x00007fb2c111d94a: hlt    
  0x00007fb2c111d94b: hlt    
  0x00007fb2c111d94c: hlt    
  0x00007fb2c111d94d: hlt    
  0x00007fb2c111d94e: hlt    
  0x00007fb2c111d94f: hlt    
  0x00007fb2c111d950: hlt    
  0x00007fb2c111d951: hlt    
  0x00007fb2c111d952: hlt    
  0x00007fb2c111d953: hlt    
  0x00007fb2c111d954: hlt    
  0x00007fb2c111d955: hlt    
  0x00007fb2c111d956: hlt    
  0x00007fb2c111d957: hlt    
  0x00007fb2c111d958: hlt    
  0x00007fb2c111d959: hlt    
  0x00007fb2c111d95a: hlt    
  0x00007fb2c111d95b: hlt    
  0x00007fb2c111d95c: hlt    
  0x00007fb2c111d95d: hlt    
  0x00007fb2c111d95e: hlt    
  0x00007fb2c111d95f: hlt    
[Stub Code]
  0x00007fb2c111d960: movabs $0x0,%rbx          ;   {no_reloc}
  0x00007fb2c111d96a: jmpq   0x00007fb2c111d96a  ;   {runtime_call}
  0x00007fb2c111d96f: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb2c111d979: jmpq   0x00007fb2c111d979  ;   {runtime_call}
[Exception Handler]
  0x00007fb2c111d97e: jmpq   0x00007fb2c106c760  ;   {runtime_call}
[Deopt Handler Code]
  0x00007fb2c111d983: callq  0x00007fb2c111d988
  0x00007fb2c111d988: subq   $0x5,(%rsp)
  0x00007fb2c111d98d: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c111d992: hlt    
  0x00007fb2c111d993: hlt    
  0x00007fb2c111d994: hlt    
  0x00007fb2c111d995: hlt    
  0x00007fb2c111d996: hlt    
  0x00007fb2c111d997: hlt    
<nmethod compile_id='28' compile_kind='osr' compiler='C2' level='4' entry='0x00007fb2c111d840' size='1224' address='0x00007fb2c111d6d0' relocation_offset='296' insts_offset='368' stub_offset='656' scopes_data_offset='744' scopes_pcs_offset='848' dependencies_offset='1152' handler_table_offset='1160' nul_chk_table_offset='1208' oops_offset='712' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='101452' iicount='1' stamp='0.235'/>
<make_not_entrant thread='140404520781568' compile_id='25' compile_kind='osr' compiler='C1' level='3' stamp='0.235'/>
<writer thread='140404521834240'/>
Decoding compiled method 0x00007fb2c111af50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb2bd79d2d0} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;
  0x00007fb2c111b0c0: callq  0x00007fb2d6d60a20  ;   {runtime_call}
  0x00007fb2c111b0c5: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb2c111b0d0: mov    %eax,-0x14000(%rsp)
  0x00007fb2c111b0d7: push   %rbp
  0x00007fb2c111b0d8: sub    $0x40,%rsp
  0x00007fb2c111b0dc: mov    0x8(%rsi),%r13d
  0x00007fb2c111b0e0: mov    0x30(%rsi),%r14
  0x00007fb2c111b0e4: mov    0x20(%rsi),%rbx
  0x00007fb2c111b0e8: mov    0x10(%rsi),%rbp
  0x00007fb2c111b0ec: mov    %rsi,%rdi
  0x00007fb2c111b0ef: movabs $0x7fb2d6e03d80,%r10
  0x00007fb2c111b0f9: callq  *%r10
  0x00007fb2c111b0fc: test   %r14,%r14
  0x00007fb2c111b0ff: je     0x00007fb2c111b429
  0x00007fb2c111b105: mov    0x8(%r14),%r10d
  0x00007fb2c111b109: movabs $0x0,%rsi
  0x00007fb2c111b113: lea    (%rsi,%r10,8),%rsi
  0x00007fb2c111b117: mov    0x18(%rsi),%r10
  0x00007fb2c111b11b: movabs $0x7c00014e8,%rax  ;   {metadata(&apos;java/lang/CharSequence&apos;)}
  0x00007fb2c111b125: cmp    %rax,%r10
  0x00007fb2c111b128: jne    0x00007fb2c111b341
  0x00007fb2c111b12e: mov    0x8(%r14),%r10d
  0x00007fb2c111b132: cmp    $0xf80002da,%r10d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007fb2c111b139: jne    0x00007fb2c111b42c  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@273 (line 484)

  0x00007fb2c111b13f: mov    %r14,%r8           ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c111b142: mov    0xc(%r8),%r10d     ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c111b146: mov    0xc(%r12,%r10,8),%r9d  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)
                                                ; implicit exception: dispatches to 0x00007fb2c111b42c
  0x00007fb2c111b14b: cmp    %r9d,%r13d
  0x00007fb2c111b14e: jae    0x00007fb2c111b42c
  0x00007fb2c111b154: cmp    $0x23,%r9d
  0x00007fb2c111b158: jbe    0x00007fb2c111b42c
  0x00007fb2c111b15e: lea    (%r12,%r10,8),%rdi
  0x00007fb2c111b162: mov    %r13d,%ecx
  0x00007fb2c111b165: inc    %ecx
  0x00007fb2c111b167: mov    $0x80000001,%r10d
  0x00007fb2c111b16d: mov    $0x24,%edx
  0x00007fb2c111b172: xor    %r11d,%r11d
  0x00007fb2c111b175: cmp    %r11d,%ecx
  0x00007fb2c111b178: cmovl  %r11d,%ecx
  0x00007fb2c111b17c: cmp    %r10d,%ecx
  0x00007fb2c111b17f: cmovl  %r10d,%ecx
  0x00007fb2c111b183: cmp    %edx,%ecx
  0x00007fb2c111b185: cmovg  %edx,%ecx          ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@273 (line 484)

  0x00007fb2c111b188: test   %r13d,%r13d
  0x00007fb2c111b18b: jl     0x00007fb2c111b449  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c111b191: cmp    %r9d,%r13d
  0x00007fb2c111b194: jge    0x00007fb2c111b46d  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c111b19a: movzwl 0x10(%rdi,%r13,2),%r10d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c111b1a0: cmp    $0x30,%r10d
  0x00007fb2c111b1a4: jl     0x00007fb2c111b3ad  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b1aa: cmp    $0x39,%r10d
  0x00007fb2c111b1ae: jle    0x00007fb2c111b1ca  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b1b0: cmp    $0x61,%r10d
  0x00007fb2c111b1b4: jl     0x00007fb2c111b3d9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b1ba: cmp    $0x66,%r10d
  0x00007fb2c111b1be: jg     0x00007fb2c111b405  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b1c4: add    $0xffffffa9,%r10d  ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b1c8: jmp    0x00007fb2c111b1ce
  0x00007fb2c111b1ca: add    $0xffffffd0,%r10d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b1ce: movslq %r10d,%r10
  0x00007fb2c111b1d1: shl    $0x4,%rbp
  0x00007fb2c111b1d5: or     %r10,%rbp          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@292 (line 485)

  0x00007fb2c111b1d8: inc    %r13d              ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@294 (line 483)

  0x00007fb2c111b1db: cmp    %ecx,%r13d
  0x00007fb2c111b1de: jl     0x00007fb2c111b188  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@301 (line 483)

  0x00007fb2c111b1e0: cmp    %r9d,%edx
  0x00007fb2c111b1e3: cmovg  %r9d,%edx
  0x00007fb2c111b1e7: mov    %edx,%ecx
  0x00007fb2c111b1e9: dec    %ecx
  0x00007fb2c111b1eb: mov    $0x80000000,%r10d
  0x00007fb2c111b1f1: cmp    %ecx,%edx
  0x00007fb2c111b1f3: cmovl  %r10d,%ecx
  0x00007fb2c111b1f7: cmp    %ecx,%r13d
  0x00007fb2c111b1fa: jge    0x00007fb2c111b287
  0x00007fb2c111b200: jmp    0x00007fb2c111b219
  0x00007fb2c111b202: add    $0xffffffd0,%r10d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b206: movslq %r10d,%r10
  0x00007fb2c111b209: shl    $0x4,%rbp
  0x00007fb2c111b20d: or     %r10,%rbp          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@292 (line 485)

  0x00007fb2c111b210: add    $0x2,%r13d         ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@294 (line 483)

  0x00007fb2c111b214: cmp    %ecx,%r13d
  0x00007fb2c111b217: jge    0x00007fb2c111b287  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@273 (line 484)

  0x00007fb2c111b219: movzwl 0x10(%rdi,%r13,2),%edx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c111b21f: cmp    $0x30,%edx
  0x00007fb2c111b222: jl     0x00007fb2c111b3a5  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b228: cmp    $0x39,%edx
  0x00007fb2c111b22b: jle    0x00007fb2c111b244  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b22d: cmp    $0x61,%edx
  0x00007fb2c111b230: jl     0x00007fb2c111b3d1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b236: cmp    $0x66,%edx
  0x00007fb2c111b239: jg     0x00007fb2c111b3fd  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b23f: add    $0xffffffa9,%edx   ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b242: jmp    0x00007fb2c111b247
  0x00007fb2c111b244: add    $0xffffffd0,%edx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b247: movslq %r13d,%r10
  0x00007fb2c111b24a: movzwl 0x12(%rdi,%r10,2),%r10d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c111b250: shl    $0x4,%rbp
  0x00007fb2c111b254: movslq %edx,%r11
  0x00007fb2c111b257: or     %r11,%rbp          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@292 (line 485)

  0x00007fb2c111b25a: cmp    $0x30,%r10d
  0x00007fb2c111b25e: jl     0x00007fb2c111b3aa  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b264: cmp    $0x39,%r10d
  0x00007fb2c111b268: jle    0x00007fb2c111b202  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b26a: cmp    $0x61,%r10d
  0x00007fb2c111b26e: jl     0x00007fb2c111b3d6  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b274: cmp    $0x66,%r10d
  0x00007fb2c111b278: jg     0x00007fb2c111b402  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b27e: add    $0xffffffa9,%r10d  ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b282: jmpq   0x00007fb2c111b206
  0x00007fb2c111b287: cmp    $0x24,%r13d
  0x00007fb2c111b28b: jge    0x00007fb2c111b2e9
  0x00007fb2c111b28d: data16 xchg %ax,%ax       ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@273 (line 484)

  0x00007fb2c111b290: test   %r13d,%r13d
  0x00007fb2c111b293: jl     0x00007fb2c111b449  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c111b299: cmp    %r9d,%r13d
  0x00007fb2c111b29c: jge    0x00007fb2c111b46d  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c111b2a2: movzwl 0x10(%rdi,%r13,2),%r10d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)

  0x00007fb2c111b2a8: cmp    $0x30,%r10d
  0x00007fb2c111b2ac: jl     0x00007fb2c111b3ad  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b2b2: cmp    $0x39,%r10d
  0x00007fb2c111b2b6: jle    0x00007fb2c111b2d2  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b2b8: cmp    $0x61,%r10d
  0x00007fb2c111b2bc: jl     0x00007fb2c111b3d9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b2c2: cmp    $0x66,%r10d
  0x00007fb2c111b2c6: jg     0x00007fb2c111b405  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b2cc: add    $0xffffffa9,%r10d  ;*iadd
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@35 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b2d0: jmp    0x00007fb2c111b2d6
  0x00007fb2c111b2d2: add    $0xffffffd0,%r10d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b2d6: movslq %r10d,%r10
  0x00007fb2c111b2d9: shl    $0x4,%rbp
  0x00007fb2c111b2dd: or     %r10,%rbp          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@292 (line 485)

  0x00007fb2c111b2e0: inc    %r13d              ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@294 (line 483)

  0x00007fb2c111b2e3: cmp    $0x24,%r13d
  0x00007fb2c111b2e7: jl     0x00007fb2c111b290  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@301 (line 483)

  0x00007fb2c111b2e9: mov    0x60(%r15),%rax
  0x00007fb2c111b2ed: mov    %rax,%r10
  0x00007fb2c111b2f0: add    $0x20,%r10
  0x00007fb2c111b2f4: cmp    0x70(%r15),%r10
  0x00007fb2c111b2f8: jae    0x00007fb2c111b385
  0x00007fb2c111b2fe: mov    %r10,0x60(%r15)
  0x00007fb2c111b302: prefetchw 0xc0(%r10)
  0x00007fb2c111b30a: mov    $0xf800869e,%r10d  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007fb2c111b310: shl    $0x3,%r10
  0x00007fb2c111b314: mov    0xa8(%r10),%r10
  0x00007fb2c111b31b: mov    %r10,(%rax)
  0x00007fb2c111b31e: movl   $0xf800869e,0x8(%rax)  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007fb2c111b325: mov    %r12d,0xc(%rax)
  0x00007fb2c111b329: mov    %r12,0x18(%rax)
  0x00007fb2c111b32d: mov    %rbx,0x10(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@304 (line 488)

  0x00007fb2c111b331: mov    %rbp,0x18(%rax)    ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@-1 (line 455)

  0x00007fb2c111b335: add    $0x40,%rsp
  0x00007fb2c111b339: pop    %rbp
  0x00007fb2c111b33a: test   %eax,0x16f39cc0(%rip)        # 0x00007fb2d8055000
                                                ;   {poll_return}
  0x00007fb2c111b340: retq   
  0x00007fb2c111b341: push   %rax
  0x00007fb2c111b342: mov    %rax,%rax
  0x00007fb2c111b345: mov    0x20(%rsi),%rdi
  0x00007fb2c111b349: mov    (%rdi),%ecx
  0x00007fb2c111b34b: add    $0x8,%rdi
  0x00007fb2c111b34f: test   %rax,%rax
  0x00007fb2c111b352: repnz scas %es:(%rdi),%rax
  0x00007fb2c111b355: pop    %rax
  0x00007fb2c111b356: jne    0x00007fb2c111b360
  0x00007fb2c111b35c: mov    %rax,0x18(%rsi)
  0x00007fb2c111b360: je     0x00007fb2c111b12e
  0x00007fb2c111b366: mov    $0xffffff9d,%esi
  0x00007fb2c111b36b: mov    %r13d,(%rsp)
  0x00007fb2c111b36f: mov    %r14,0x8(%rsp)
  0x00007fb2c111b374: mov    %rbx,0x10(%rsp)
  0x00007fb2c111b379: xchg   %ax,%ax
  0x00007fb2c111b37b: callq  0x00007fb2c10051a0  ; OopMap{[8]=Oop off=704}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@273 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c111b380: callq  0x00007fb2d6d60a20  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@273 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c111b385: mov    %rbp,(%rsp)
  0x00007fb2c111b389: mov    %rbx,%rbp          ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b38c: movabs $0x7c00434f0,%rsi  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007fb2c111b396: nop
  0x00007fb2c111b397: callq  0x00007fb2c106c6a0  ; OopMap{off=732}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@304 (line 488)
                                                ;   {runtime_call}
  0x00007fb2c111b39c: mov    %rbp,%rbx
  0x00007fb2c111b39f: mov    (%rsp),%rbp
  0x00007fb2c111b3a3: jmp    0x00007fb2c111b32d
  0x00007fb2c111b3a5: mov    %edx,%r10d
  0x00007fb2c111b3a8: jmp    0x00007fb2c111b3ad
  0x00007fb2c111b3aa: inc    %r13d              ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b3ad: mov    $0xffffff65,%esi
  0x00007fb2c111b3b2: mov    %r13d,(%rsp)
  0x00007fb2c111b3b6: mov    %r10d,0x8(%rsp)
  0x00007fb2c111b3bb: mov    %r8,0x10(%rsp)
  0x00007fb2c111b3c0: mov    %rbx,0x18(%rsp)
  0x00007fb2c111b3c5: xchg   %ax,%ax
  0x00007fb2c111b3c7: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=780}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c111b3cc: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c111b3d1: mov    %edx,%r10d
  0x00007fb2c111b3d4: jmp    0x00007fb2c111b3d9
  0x00007fb2c111b3d6: inc    %r13d              ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b3d9: mov    $0xffffff65,%esi
  0x00007fb2c111b3de: mov    %r13d,(%rsp)
  0x00007fb2c111b3e2: mov    %r10d,0x8(%rsp)
  0x00007fb2c111b3e7: mov    %r8,0x10(%rsp)
  0x00007fb2c111b3ec: mov    %rbx,0x18(%rsp)
  0x00007fb2c111b3f1: xchg   %ax,%ax
  0x00007fb2c111b3f3: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=824}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c111b3f8: callq  0x00007fb2d6d60a20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c111b3fd: mov    %edx,%r10d
  0x00007fb2c111b400: jmp    0x00007fb2c111b405
  0x00007fb2c111b402: inc    %r13d              ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)

  0x00007fb2c111b405: mov    $0xffffff65,%esi
  0x00007fb2c111b40a: mov    %r13d,(%rsp)
  0x00007fb2c111b40e: mov    %r10d,0x8(%rsp)
  0x00007fb2c111b413: mov    %r8,0x10(%rsp)
  0x00007fb2c111b418: mov    %rbx,0x18(%rsp)
  0x00007fb2c111b41d: xchg   %ax,%ax
  0x00007fb2c111b41f: callq  0x00007fb2c10051a0  ; OopMap{[16]=Oop off=868}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c111b424: callq  0x00007fb2d6d60a20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 495)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@281 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c111b429: xor    %r14d,%r14d
  0x00007fb2c111b42c: mov    $0xffffff86,%esi
  0x00007fb2c111b431: mov    %r13d,(%rsp)
  0x00007fb2c111b435: mov    %r14,0x8(%rsp)
  0x00007fb2c111b43a: mov    %rbx,0x10(%rsp)
  0x00007fb2c111b43f: callq  0x00007fb2c10051a0  ; OopMap{[8]=Oop off=900}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@273 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c111b444: callq  0x00007fb2d6d60a20  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c111b449: mov    $0xffffff65,%esi
  0x00007fb2c111b44e: mov    %r13d,0x4(%rsp)
  0x00007fb2c111b453: mov    %r13d,0x8(%rsp)
  0x00007fb2c111b458: mov    %rbx,0x18(%rsp)
  0x00007fb2c111b45d: mov    %r8,0x20(%rsp)
  0x00007fb2c111b462: nop
  0x00007fb2c111b463: callq  0x00007fb2c10051a0  ; OopMap{[32]=Oop off=936}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c111b468: callq  0x00007fb2d6d60a20  ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c111b46d: mov    $0xffffff65,%esi
  0x00007fb2c111b472: mov    %r13d,0x4(%rsp)
  0x00007fb2c111b477: mov    %r13d,0x8(%rsp)
  0x00007fb2c111b47c: mov    %rbx,0x18(%rsp)
  0x00007fb2c111b481: mov    %r8,0x20(%rsp)
  0x00007fb2c111b486: mov    %r9d,0xc(%rsp)
  0x00007fb2c111b48b: callq  0x00007fb2c10051a0  ; OopMap{[32]=Oop off=976}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@276 (line 484)
                                                ;   {runtime_call}
  0x00007fb2c111b490: callq  0x00007fb2d6d60a20  ;*new
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@304 (line 488)
                                                ;   {runtime_call}
  0x00007fb2c111b495: mov    %rax,%rsi
  0x00007fb2c111b498: add    $0x40,%rsp
  0x00007fb2c111b49c: pop    %rbp
  0x00007fb2c111b49d: jmpq   0x00007fb2c1101d60  ;   {runtime_call}
  0x00007fb2c111b4a2: hlt    
  0x00007fb2c111b4a3: hlt    
  0x00007fb2c111b4a4: hlt    
  0x00007fb2c111b4a5: hlt    
  0x00007fb2c111b4a6: hlt    
  0x00007fb2c111b4a7: hlt    
  0x00007fb2c111b4a8: hlt    
  0x00007fb2c111b4a9: hlt    
  0x00007fb2c111b4aa: hlt    
  0x00007fb2c111b4ab: hlt    
  0x00007fb2c111b4ac: hlt    
  0x00007fb2c111b4ad: hlt    
  0x00007fb2c111b4ae: hlt    
  0x00007fb2c111b4af: hlt    
  0x00007fb2c111b4b0: hlt    
  0x00007fb2c111b4b1: hlt    
  0x00007fb2c111b4b2: hlt    
  0x00007fb2c111b4b3: hlt    
  0x00007fb2c111b4b4: hlt    
  0x00007fb2c111b4b5: hlt    
  0x00007fb2c111b4b6: hlt    
  0x00007fb2c111b4b7: hlt    
  0x00007fb2c111b4b8: hlt    
  0x00007fb2c111b4b9: hlt    
  0x00007fb2c111b4ba: hlt    
  0x00007fb2c111b4bb: hlt    
  0x00007fb2c111b4bc: hlt    
  0x00007fb2c111b4bd: hlt    
  0x00007fb2c111b4be: hlt    
  0x00007fb2c111b4bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb2c111b4c0: jmpq   0x00007fb2c106c760  ;   {no_reloc}
[Deopt Handler Code]
  0x00007fb2c111b4c5: callq  0x00007fb2c111b4ca
  0x00007fb2c111b4ca: subq   $0x5,(%rsp)
  0x00007fb2c111b4cf: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c111b4d4: hlt    
  0x00007fb2c111b4d5: hlt    
  0x00007fb2c111b4d6: hlt    
  0x00007fb2c111b4d7: hlt    
<nmethod compile_id='29' compile_kind='osr' compiler='C2' level='4' entry='0x00007fb2c111b0c0' size='2944' address='0x00007fb2c111af50' relocation_offset='296' insts_offset='368' stub_offset='1392' scopes_data_offset='1464' scopes_pcs_offset='1760' dependencies_offset='2896' handler_table_offset='2904' nul_chk_table_offset='2928' oops_offset='1416' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='314' count='109611' backedge_count='4026216' iicount='109611' stamp='0.275'/>
<writer thread='140406105003776'/>
<uncommon_trap thread='140406105003776' reason='unstable_if' action='reinterpret' compile_id='28' compile_kind='osr' compiler='C2' level='4' stamp='0.288'>
<jvms bci='36' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='110636' iicount='1'/>
</uncommon_trap>
<make_not_entrant thread='140406105003776' compile_id='28' compile_kind='osr' compiler='C2' level='4' stamp='0.288'/>
<task_queued compile_id='30' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='256' iicount='256' level='3' stamp='0.288' comment='tiered' hot_count='256'/>
[Loaded java.lang.Shutdown from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Shutdown$Lock from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140404518676224'/>
Decoding compiled method 0x00007fb2c1110290:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb2bd3b4778} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb2c11103e0: mov    %eax,-0x14000(%rsp)
  0x00007fb2c11103e7: push   %rbp
  0x00007fb2c11103e8: sub    $0x30,%rsp
  0x00007fb2c11103ec: movabs $0x7fb2bd5caf68,%rax  ;   {metadata(method data for {method} {0x00007fb2bd3b4778} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00007fb2c11103f6: mov    0xdc(%rax),%esi
  0x00007fb2c11103fc: add    $0x8,%esi
  0x00007fb2c11103ff: mov    %esi,0xdc(%rax)
  0x00007fb2c1110405: movabs $0x7fb2bd3b4778,%rax  ;   {metadata({method} {0x00007fb2bd3b4778} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00007fb2c111040f: and    $0x1ff8,%esi
<writer thread='140404629468928'/>
<destroy_vm stamp='0.289'/>
<writer thread='140404518676224'/>

  0x00007fb2c1110415: cmp    $0x0,%esi
  0x00007fb2c1110418: je     0x00007fb2c111043b
  0x00007fb2c111041e: movabs $0x670b80c78,%rax  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007fb2c1110428: mov    0x74(%rax),%eax
  0x00007fb2c111042b: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x00007fb2c111042f: add    $0x30,%rsp
  0x00007fb2c1110433: pop    %rbp
  0x00007fb2c1110434: test   %eax,0x16f44cc6(%rip)        # 0x00007fb2d8055100
                                                ;   {poll_return}
  0x00007fb2c111043a: retq   
  0x00007fb2c111043b: mov    %rax,0x8(%rsp)
  0x00007fb2c1110440: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb2c1110448: callq  0x00007fb2c10feb20  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x00007fb2c111044d: jmp    0x00007fb2c111041e
  0x00007fb2c111044f: nop
  0x00007fb2c1110450: nop
  0x00007fb2c1110451: mov    0x2a8(%r15),%rax
  0x00007fb2c1110458: movabs $0x0,%r10
  0x00007fb2c1110462: mov    %r10,0x2a8(%r15)
  0x00007fb2c1110469: movabs $0x0,%r10
  0x00007fb2c1110473: mov    %r10,0x2b0(%r15)
  0x00007fb2c111047a: add    $0x30,%rsp
  0x00007fb2c111047e: pop    %rbp
  0x00007fb2c111047f: jmpq   0x00007fb2c106c3e0  ;   {runtime_call}
  0x00007fb2c1110484: hlt    
  0x00007fb2c1110485: hlt    
  0x00007fb2c1110486: hlt    
  0x00007fb2c1110487: hlt    
  0x00007fb2c1110488: hlt    
  0x00007fb2c1110489: hlt    
  0x00007fb2c111048a: hlt    
  0x00007fb2c111048b: hlt    
  0x00007fb2c111048c: hlt    
  0x00007fb2c111048d: hlt    
  0x00007fb2c111048e: hlt    
  0x00007fb2c111048f: hlt    
  0x00007fb2c1110490: hlt    
  0x00007fb2c1110491: hlt    
  0x00007fb2c1110492: hlt    
  0x00007fb2c1110493: hlt    
  0x00007fb2c1110494: hlt    
  0x00007fb2c1110495: hlt    
  0x00007fb2c1110496: hlt    
  0x00007fb2c1110497: hlt    
  0x00007fb2c1110498: hlt    
  0x00007fb2c1110499: hlt    
  0x00007fb2c111049a: hlt    
  0x00007fb2c111049b: hlt    
  0x00007fb2c111049c: hlt    
  0x00007fb2c111049d: hlt    
  0x00007fb2c111049e: hlt    
  0x00007fb2c111049f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb2c11104a0: callq  0x00007fb2c106cfe0  ;   {no_reloc}
  0x00007fb2c11104a5: mov    %rsp,-0x28(%rsp)
  0x00007fb2c11104aa: sub    $0x80,%rsp
  0x00007fb2c11104b1: mov    %rax,0x78(%rsp)
  0x00007fb2c11104b6: mov    %rcx,0x70(%rsp)
  0x00007fb2c11104bb: mov    %rdx,0x68(%rsp)
  0x00007fb2c11104c0: mov    %rbx,0x60(%rsp)
  0x00007fb2c11104c5: mov    %rbp,0x50(%rsp)
  0x00007fb2c11104ca: mov    %rsi,0x48(%rsp)
  0x00007fb2c11104cf: mov    %rdi,0x40(%rsp)
  0x00007fb2c11104d4: mov    %r8,0x38(%rsp)
  0x00007fb2c11104d9: mov    %r9,0x30(%rsp)
  0x00007fb2c11104de: mov    %r10,0x28(%rsp)
  0x00007fb2c11104e3: mov    %r11,0x20(%rsp)
  0x00007fb2c11104e8: mov    %r12,0x18(%rsp)
  0x00007fb2c11104ed: mov    %r13,0x10(%rsp)
  0x00007fb2c11104f2: mov    %r14,0x8(%rsp)
  0x00007fb2c11104f7: mov    %r15,(%rsp)
  0x00007fb2c11104fb: movabs $0x7fb2d6f4df36,%rdi  ;   {external_word}
  0x00007fb2c1110505: movabs $0x7fb2c11104a5,%rsi  ;   {internal_word}
  0x00007fb2c111050f: mov    %rsp,%rdx
  0x00007fb2c1110512: and    $0xfffffffffffffff0,%rsp
  0x00007fb2c1110516: callq  0x00007fb2d6c79990  ;   {runtime_call}
  0x00007fb2c111051b: hlt    
[Deopt Handler Code]
  0x00007fb2c111051c: movabs $0x7fb2c111051c,%r10  ;   {section_word}
  0x00007fb2c1110526: push   %r10
  0x00007fb2c1110528: jmpq   0x00007fb2c10473c0  ;   {runtime_call}
  0x00007fb2c111052d: hlt    
  0x00007fb2c111052e: hlt    
  0x00007fb2c111052f: hlt    
<nmethod compile_id='30' compiler='C1' level='3' entry='0x00007fb2c11103e0' size='768' address='0x00007fb2c1110290' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='696' dependencies_offset='760' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='257' iicount='257' stamp='0.289'/>
<tty_done stamp='0.289'/>
</tty>
<compilation_log thread='140404518676224'>
<start_compile_thread name='C1 CompilerThread3' thread='140404518676224' process='6197' stamp='0.054'/>
<task compile_id='3' method='java/lang/Math min (II)I' bytes='11' count='640' iicount='640' level='3' stamp='0.055'>
<phase name='buildIR' stamp='0.055'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/Math' flags='17'/>
<method id='833' holder='832' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='640'/>
<parse method='833'  stamp='0.055'>
<parse_done stamp='0.055'/>
</parse>
<phase name='optimize_blocks' stamp='0.055'>
<phase_done name='optimize_blocks' stamp='0.055'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.055'>
<phase_done name='rangeCheckElimination' stamp='0.055'/>
</phase>
<phase name='optimize_null_checks' stamp='0.055'>
<phase_done name='optimize_null_checks' stamp='0.055'/>
</phase>
<phase_done name='buildIR' stamp='0.055'/>
</phase>
<phase name='emit_lir' stamp='0.055'>
<phase name='lirGeneration' stamp='0.055'>
<phase_done name='lirGeneration' stamp='0.055'/>
</phase>
<phase name='linearScan' stamp='0.055'>
<phase_done name='linearScan' stamp='0.055'/>
</phase>
<phase_done name='emit_lir' stamp='0.055'/>
</phase>
<phase name='codeemit' stamp='0.055'>
<phase_done name='codeemit' stamp='0.055'/>
</phase>
<phase name='codeinstall' stamp='0.055'>
<phase_done name='codeinstall' stamp='0.063'/>
</phase>
<code_cache total_blobs='209' nmethods='1' adapters='132' free_code_cache='250606080'/>
<task_done success='1' nmsize='400' count='640' stamp='0.063'/>
</task>
<task compile_id='1' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='256' iicount='256' level='3' stamp='0.063'>
<phase name='buildIR' stamp='0.063'>
<type id='724' name='void'/>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' iicount='256'/>
<parse method='832'  stamp='0.063'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='834' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='1544'/>
<call method='834' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<parse_done stamp='0.063'/>
</parse>
<bc code='183' bci='13'/>
<klass id='836' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='837' holder='836' name='&lt;init&gt;' return='724' arguments='722' unloaded='1'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='30'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='65'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='75'/>
<klass id='839' name='java/util/Arrays' flags='1'/>
<method id='840' holder='839' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' iicount='256'/>
<call method='840' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.063'/>
</parse>
<phase name='optimize_blocks' stamp='0.063'>
<phase_done name='optimize_blocks' stamp='0.063'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.063'>
<phase_done name='rangeCheckElimination' stamp='0.063'/>
</phase>
<phase name='optimize_null_checks' stamp='0.063'>
<phase_done name='optimize_null_checks' stamp='0.063'/>
</phase>
<phase_done name='buildIR' stamp='0.063'/>
</phase>
<phase name='emit_lir' stamp='0.063'>
<phase name='lirGeneration' stamp='0.063'>
<phase_done name='lirGeneration' stamp='0.063'/>
</phase>
<phase name='linearScan' stamp='0.063'>
<phase_done name='linearScan' stamp='0.063'/>
</phase>
<phase_done name='emit_lir' stamp='0.063'/>
</phase>
<phase name='codeemit' stamp='0.063'>
<phase_done name='codeemit' stamp='0.063'/>
</phase>
<phase name='codeinstall' stamp='0.063'>
<phase_done name='codeinstall' stamp='0.066'/>
</phase>
<code_cache total_blobs='213' nmethods='2' adapters='132' free_code_cache='250596608'/>
<task_done success='1' nmsize='1272' count='256' inlined_bytes='1' stamp='0.066'/>
</task>
<task compile_id='2' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='256' iicount='256' level='3' stamp='0.066'>
<phase name='buildIR' stamp='0.066'>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='832' name='java/util/Arrays' flags='1'/>
<method id='833' holder='832' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' iicount='256'/>
<parse method='833'  stamp='0.066'>
<bc code='183' bci='16'/>
<type id='724' name='void'/>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<method id='836' holder='795' name='&lt;init&gt;' return='724' flags='1' bytes='7' iicount='80'/>
<call method='836' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='3'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='838' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='80'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='840' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='1552'/>
<call method='840' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='840'>
<parse_done stamp='0.066'/>
</parse>
<parse_done stamp='0.066'/>
</parse>
<parse_done stamp='0.066'/>
</parse>
<bc code='182' bci='20'/>
<method id='842' holder='795' name='append' return='795' arguments='722' flags='1' bytes='8' iicount='1'/>
<call method='842' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<bc code='183' bci='2'/>
<method id='844' holder='793' name='append' return='793' arguments='722' flags='1' bytes='62' iicount='1'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.066'/>
</parse>
<bc code='182' bci='25'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='847' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' iicount='131'/>
<call method='847' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='183' bci='2'/>
<method id='849' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' iicount='131'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.066'/>
</parse>
<bc code='182' bci='29'/>
<call method='842' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<bc code='183' bci='2'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.066'/>
</parse>
<bc code='182' bci='32'/>
<method id='851' holder='795' name='toString' return='730' flags='1' bytes='17' iicount='80'/>
<call method='851' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='183' bci='13'/>
<method id='853' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' compile_id='1' compiler='C1' level='3' iicount='256'/>
<call method='853' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.066'/>
</parse>
<bc code='183' bci='35'/>
<klass id='835' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='855' holder='835' name='&lt;init&gt;' return='724' arguments='730' flags='1' bytes='6' iicount='1'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='857' name='java/lang/Math' flags='17'/>
<method id='858' holder='857' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='3' compiler='C1' level='3' iicount='640'/>
<call method='858' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<parse_done stamp='0.066'/>
</parse>
<bc code='184' bci='57'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='860' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' iicount='596'/>
<call method='860' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.066'/>
</parse>
<phase name='optimize_blocks' stamp='0.066'>
<phase_done name='optimize_blocks' stamp='0.066'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.066'>
<phase_done name='rangeCheckElimination' stamp='0.066'/>
</phase>
<phase name='optimize_null_checks' stamp='0.066'>
<phase_done name='optimize_null_checks' stamp='0.066'/>
</phase>
<phase_done name='buildIR' stamp='0.066'/>
</phase>
<phase name='emit_lir' stamp='0.066'>
<phase name='lirGeneration' stamp='0.066'>
<phase_done name='lirGeneration' stamp='0.066'/>
</phase>
<phase name='linearScan' stamp='0.066'>
<phase_done name='linearScan' stamp='0.067'/>
</phase>
<phase_done name='emit_lir' stamp='0.067'/>
</phase>
<phase name='codeemit' stamp='0.067'>
<phase_done name='codeemit' stamp='0.067'/>
</phase>
<phase name='codeinstall' stamp='0.067'>
<phase_done name='codeinstall' stamp='0.072'/>
</phase>
<code_cache total_blobs='221' nmethods='3' adapters='135' free_code_cache='250562944'/>
<task_done success='1' nmsize='2872' count='256' inlined_bytes='72' stamp='0.072'/>
</task>
<task compile_id='4' method='java/lang/String hashCode ()I' bytes='55' count='424' backedge_count='6519' iicount='424' level='3' stamp='0.072'>
<phase name='buildIR' stamp='0.072'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='hashCode' return='722' flags='1' bytes='55' iicount='424'/>
<parse method='832'  stamp='0.072'>
<parse_done stamp='0.072'/>
</parse>
<phase name='optimize_blocks' stamp='0.072'>
<phase_done name='optimize_blocks' stamp='0.072'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.072'>
<phase_done name='rangeCheckElimination' stamp='0.072'/>
</phase>
<phase name='optimize_null_checks' stamp='0.072'>
<phase_done name='optimize_null_checks' stamp='0.072'/>
</phase>
<phase_done name='buildIR' stamp='0.072'/>
</phase>
<phase name='emit_lir' stamp='0.072'>
<phase name='lirGeneration' stamp='0.072'>
<phase_done name='lirGeneration' stamp='0.072'/>
</phase>
<phase name='linearScan' stamp='0.072'>
<phase_done name='linearScan' stamp='0.072'/>
</phase>
<phase_done name='emit_lir' stamp='0.072'/>
</phase>
<phase name='codeemit' stamp='0.072'>
<phase_done name='codeemit' stamp='0.072'/>
</phase>
<phase name='codeinstall' stamp='0.072'>
<phase_done name='codeinstall' stamp='0.073'/>
</phase>
<code_cache total_blobs='223' nmethods='4' adapters='135' free_code_cache='250566208'/>
<task_done success='1' nmsize='656' count='424' backedge_count='6519' stamp='0.073'/>
</task>
<task compile_id='5' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='387' backedge_count='1356' iicount='387' level='3' stamp='0.073'>
<phase name='buildIR' stamp='0.073'>
<type id='716' name='boolean'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='equals' return='716' arguments='729' flags='1' bytes='81' iicount='387'/>
<parse method='832'  stamp='0.073'>
<parse_done stamp='0.073'/>
</parse>
<phase name='optimize_blocks' stamp='0.073'>
<phase_done name='optimize_blocks' stamp='0.073'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.073'>
<phase_done name='rangeCheckElimination' stamp='0.073'/>
</phase>
<phase name='optimize_null_checks' stamp='0.073'>
<phase_done name='optimize_null_checks' stamp='0.073'/>
</phase>
<phase_done name='buildIR' stamp='0.073'/>
</phase>
<phase name='emit_lir' stamp='0.073'>
<phase name='lirGeneration' stamp='0.073'>
<phase_done name='lirGeneration' stamp='0.073'/>
</phase>
<phase name='linearScan' stamp='0.073'>
<phase_done name='linearScan' stamp='0.073'/>
</phase>
<phase_done name='emit_lir' stamp='0.073'/>
</phase>
<phase name='codeemit' stamp='0.073'>
<phase_done name='codeemit' stamp='0.074'/>
</phase>
<phase name='codeinstall' stamp='0.074'>
<phase_done name='codeinstall' stamp='0.076'/>
</phase>
<code_cache total_blobs='225' nmethods='5' adapters='135' free_code_cache='250563392'/>
<task_done success='1' nmsize='1360' count='387' backedge_count='1356' stamp='0.076'/>
</task>
<task compile_id='6' method='java/lang/String charAt (I)C' bytes='29' count='2333' iicount='2334' level='3' stamp='0.076'>
<phase name='buildIR' stamp='0.076'>
<type id='717' name='char'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' iicount='2415'/>
<parse method='832'  stamp='0.076'>
<bc code='183' bci='18'/>
<type id='724' name='void'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='835' holder='834' name='&lt;init&gt;' return='724' arguments='722' unloaded='1'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.076'/>
</parse>
<phase name='optimize_blocks' stamp='0.076'>
<phase_done name='optimize_blocks' stamp='0.076'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.076'>
<phase_done name='rangeCheckElimination' stamp='0.076'/>
</phase>
<phase name='optimize_null_checks' stamp='0.076'>
<phase_done name='optimize_null_checks' stamp='0.076'/>
</phase>
<phase_done name='buildIR' stamp='0.076'/>
</phase>
<phase name='emit_lir' stamp='0.076'>
<phase name='lirGeneration' stamp='0.076'>
<phase_done name='lirGeneration' stamp='0.076'/>
</phase>
<phase name='linearScan' stamp='0.076'>
<phase_done name='linearScan' stamp='0.076'/>
</phase>
<phase_done name='emit_lir' stamp='0.076'/>
</phase>
<phase name='codeemit' stamp='0.076'>
<phase_done name='codeemit' stamp='0.076'/>
</phase>
<phase name='codeinstall' stamp='0.076'>
<phase_done name='codeinstall' stamp='0.078'/>
</phase>
<code_cache total_blobs='226' nmethods='6' adapters='135' free_code_cache='250561984'/>
<task_done success='1' nmsize='616' count='2566' stamp='0.078'/>
</task>
<task compile_id='8' method='java/lang/String indexOf (II)I' bytes='70' count='214' backedge_count='7331' iicount='214' level='3' stamp='0.082'>
<phase name='buildIR' stamp='0.082'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' iicount='214'/>
<parse method='832'  stamp='0.082'>
<bc code='183' bci='66'/>
<method id='834' holder='730' name='indexOfSupplementary' return='722' arguments='722 722' flags='2' bytes='71' iicount='1'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.082'/>
</parse>
<phase name='optimize_blocks' stamp='0.082'>
<phase_done name='optimize_blocks' stamp='0.082'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.082'>
<phase_done name='rangeCheckElimination' stamp='0.082'/>
</phase>
<phase name='optimize_null_checks' stamp='0.082'>
<phase_done name='optimize_null_checks' stamp='0.082'/>
</phase>
<phase_done name='buildIR' stamp='0.082'/>
</phase>
<phase name='emit_lir' stamp='0.082'>
<phase name='lirGeneration' stamp='0.082'>
<phase_done name='lirGeneration' stamp='0.082'/>
</phase>
<phase name='linearScan' stamp='0.082'>
<phase_done name='linearScan' stamp='0.082'/>
</phase>
<phase_done name='emit_lir' stamp='0.082'/>
</phase>
<phase name='codeemit' stamp='0.082'>
<phase_done name='codeemit' stamp='0.082'/>
</phase>
<phase name='codeinstall' stamp='0.082'>
<phase_done name='codeinstall' stamp='0.084'/>
</phase>
<code_cache total_blobs='232' nmethods='8' adapters='139' free_code_cache='250557056'/>
<task_done success='1' nmsize='904' count='214' backedge_count='7331' stamp='0.084'/>
</task>
<task compile_id='10' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1798' iicount='1798' level='3' stamp='0.084'>
<phase name='buildIR' stamp='0.084'>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='832' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='1799'/>
<parse method='832'  stamp='0.084'>
<parse_done stamp='0.084'/>
</parse>
<phase name='optimize_blocks' stamp='0.084'>
<phase_done name='optimize_blocks' stamp='0.084'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.084'>
<phase_done name='rangeCheckElimination' stamp='0.084'/>
</phase>
<phase name='optimize_null_checks' stamp='0.084'>
<phase_done name='optimize_null_checks' stamp='0.084'/>
</phase>
<phase_done name='buildIR' stamp='0.084'/>
</phase>
<phase name='emit_lir' stamp='0.084'>
<phase name='lirGeneration' stamp='0.084'>
<phase_done name='lirGeneration' stamp='0.084'/>
</phase>
<phase name='linearScan' stamp='0.084'>
<phase_done name='linearScan' stamp='0.084'/>
</phase>
<phase_done name='emit_lir' stamp='0.084'/>
</phase>
<phase name='codeemit' stamp='0.084'>
<phase_done name='codeemit' stamp='0.084'/>
</phase>
<phase name='codeinstall' stamp='0.084'>
<phase_done name='codeinstall' stamp='0.085'/>
</phase>
<code_cache total_blobs='233' nmethods='9' adapters='139' free_code_cache='250556160'/>
<task_done success='1' nmsize='336' count='1799' stamp='0.085'/>
</task>
<task compile_id='9' method='java/lang/String length ()I' bytes='6' count='679' iicount='679' level='3' stamp='0.085'>
<phase name='buildIR' stamp='0.085'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='length' return='722' flags='1' bytes='6' iicount='679'/>
<parse method='832'  stamp='0.085'>
<parse_done stamp='0.085'/>
</parse>
<phase name='optimize_blocks' stamp='0.085'>
<phase_done name='optimize_blocks' stamp='0.085'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.085'>
<phase_done name='rangeCheckElimination' stamp='0.085'/>
</phase>
<phase name='optimize_null_checks' stamp='0.085'>
<phase_done name='optimize_null_checks' stamp='0.085'/>
</phase>
<phase_done name='buildIR' stamp='0.085'/>
</phase>
<phase name='emit_lir' stamp='0.085'>
<phase name='lirGeneration' stamp='0.085'>
<phase_done name='lirGeneration' stamp='0.085'/>
</phase>
<phase name='linearScan' stamp='0.085'>
<phase_done name='linearScan' stamp='0.085'/>
</phase>
<phase_done name='emit_lir' stamp='0.085'/>
</phase>
<phase name='codeemit' stamp='0.085'>
<phase_done name='codeemit' stamp='0.085'/>
</phase>
<phase name='codeinstall' stamp='0.085'>
<phase_done name='codeinstall' stamp='0.085'/>
</phase>
<code_cache total_blobs='236' nmethods='10' adapters='141' free_code_cache='250553984'/>
<task_done success='1' nmsize='368' count='679' stamp='0.085'/>
</task>
<task compile_id='12' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='259' iicount='259' level='3' stamp='0.086'>
<phase name='buildIR' stamp='0.086'>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' iicount='259'/>
<parse method='832'  stamp='0.086'>
<bc code='183' bci='5'/>
<method id='834' holder='793' name='appendNull' return='793' flags='2' bytes='56' iicount='1'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<type id='722' name='int'/>
<method id='836' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='9' compiler='C1' level='3' iicount='688'/>
<call method='836' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<parse_done stamp='0.086'/>
</parse>
<bc code='183' bci='21'/>
<type id='724' name='void'/>
<method id='838' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='344'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='17'/>
<method id='840' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='170'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='842' name='java/util/Arrays' flags='1'/>
<method id='843' holder='842' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='175'/>
<call method='843' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='843'>
<bc code='184' bci='11'/>
<klass id='845' name='java/lang/Math' flags='17'/>
<method id='846' holder='845' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='3' compiler='C1' level='3' iicount='856'/>
<call method='846' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<parse_done stamp='0.086'/>
</parse>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='848' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='7' compile_kind='c2n' level='0' iicount='640'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.086'/>
</parse>
<parse_done stamp='0.086'/>
</parse>
<bc code='182' bci='35'/>
<method id='850' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' iicount='260'/>
<call method='850' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.086'/>
</parse>
<phase name='optimize_blocks' stamp='0.086'>
<phase_done name='optimize_blocks' stamp='0.086'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.086'>
<phase_done name='rangeCheckElimination' stamp='0.086'/>
</phase>
<phase name='optimize_null_checks' stamp='0.086'>
<phase_done name='optimize_null_checks' stamp='0.086'/>
</phase>
<phase_done name='buildIR' stamp='0.087'/>
</phase>
<phase name='emit_lir' stamp='0.087'>
<phase name='lirGeneration' stamp='0.087'>
<phase_done name='lirGeneration' stamp='0.087'/>
</phase>
<phase name='linearScan' stamp='0.087'>
<phase_done name='linearScan' stamp='0.087'/>
</phase>
<phase_done name='emit_lir' stamp='0.087'/>
</phase>
<phase name='codeemit' stamp='0.087'>
<phase_done name='codeemit' stamp='0.087'/>
</phase>
<phase name='codeinstall' stamp='0.087'>
<phase_done name='codeinstall' stamp='0.090'/>
</phase>
<code_cache total_blobs='239' nmethods='11' adapters='143' free_code_cache='250549440'/>
<task_done success='1' nmsize='1880' count='263' inlined_bytes='63' stamp='0.090'/>
</task>
<task compile_id='11' method='java/lang/String getChars (II[CI)V' bytes='62' count='263' iicount='263' level='3' stamp='0.090'>
<phase name='buildIR' stamp='0.090'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' iicount='263'/>
<parse method='832'  stamp='0.090'>
<bc code='183' bci='9'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='835' holder='834' name='&lt;init&gt;' return='724' arguments='722' unloaded='1'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='43'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='58'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='836' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='7' compile_kind='c2n' level='0' iicount='640'/>
<call method='836' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.090'/>
</parse>
<phase name='optimize_blocks' stamp='0.090'>
<phase_done name='optimize_blocks' stamp='0.090'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.090'>
<phase_done name='rangeCheckElimination' stamp='0.090'/>
</phase>
<phase name='optimize_null_checks' stamp='0.090'>
<phase_done name='optimize_null_checks' stamp='0.090'/>
</phase>
<phase_done name='buildIR' stamp='0.090'/>
</phase>
<phase name='emit_lir' stamp='0.090'>
<phase name='lirGeneration' stamp='0.090'>
<phase_done name='lirGeneration' stamp='0.090'/>
</phase>
<phase name='linearScan' stamp='0.090'>
<phase_done name='linearScan' stamp='0.090'/>
</phase>
<phase_done name='emit_lir' stamp='0.090'/>
</phase>
<phase name='codeemit' stamp='0.090'>
<phase_done name='codeemit' stamp='0.090'/>
</phase>
<phase name='codeinstall' stamp='0.090'>
<phase_done name='codeinstall' stamp='0.092'/>
</phase>
<code_cache total_blobs='240' nmethods='12' adapters='143' free_code_cache='250547136'/>
<task_done success='1' nmsize='1080' count='272' stamp='0.092'/>
</task>
<task compile_id='13' method='java/lang/String indexOf (I)I' bytes='7' count='257' iicount='257' level='3' stamp='0.093'>
<phase name='buildIR' stamp='0.093'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722' flags='1' bytes='7' iicount='260'/>
<parse method='832'  stamp='0.093'>
<bc code='182' bci='3'/>
<method id='834' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' compile_id='8' compiler='C1' level='3' iicount='266'/>
<call method='834' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.093'/>
</parse>
<phase name='optimize_blocks' stamp='0.093'>
<phase_done name='optimize_blocks' stamp='0.093'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.093'>
<phase_done name='rangeCheckElimination' stamp='0.093'/>
</phase>
<phase name='optimize_null_checks' stamp='0.093'>
<phase_done name='optimize_null_checks' stamp='0.093'/>
</phase>
<phase_done name='buildIR' stamp='0.093'/>
</phase>
<phase name='emit_lir' stamp='0.093'>
<phase name='lirGeneration' stamp='0.093'>
<phase_done name='lirGeneration' stamp='0.093'/>
</phase>
<phase name='linearScan' stamp='0.093'>
<phase_done name='linearScan' stamp='0.094'/>
</phase>
<phase_done name='emit_lir' stamp='0.094'/>
</phase>
<phase name='codeemit' stamp='0.094'>
<phase_done name='codeemit' stamp='0.094'/>
</phase>
<phase name='codeinstall' stamp='0.094'>
<phase_done name='codeinstall' stamp='0.112'/>
</phase>
<code_cache total_blobs='241' nmethods='13' adapters='143' free_code_cache='250546048'/>
<task_done success='1' nmsize='520' count='266' stamp='0.112'/>
</task>
<task compile_id='14' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='65' count='824' iicount='827' level='3' stamp='0.112'>
<phase name='buildIR' stamp='0.112'>
<type id='722' name='int'/>
<type id='717' name='char'/>
<klass id='832' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='833' holder='832' name='hexDigit' return='722' arguments='717' flags='8' bytes='65' iicount='910'/>
<parse method='833'  stamp='0.112'>
<bc code='183' bci='61'/>
<type id='724' name='void'/>
<klass id='835' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='836' holder='835' name='&lt;init&gt;' return='724' flags='1' bytes='5' iicount='1'/>
<call method='836' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.112'/>
</parse>
<phase name='optimize_blocks' stamp='0.112'>
<phase_done name='optimize_blocks' stamp='0.112'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.112'>
<phase_done name='rangeCheckElimination' stamp='0.112'/>
</phase>
<phase name='optimize_null_checks' stamp='0.112'>
<phase_done name='optimize_null_checks' stamp='0.112'/>
</phase>
<phase_done name='buildIR' stamp='0.112'/>
</phase>
<phase name='emit_lir' stamp='0.112'>
<phase name='lirGeneration' stamp='0.112'>
<phase_done name='lirGeneration' stamp='0.112'/>
</phase>
<phase name='linearScan' stamp='0.112'>
<phase_done name='linearScan' stamp='0.112'/>
</phase>
<phase_done name='emit_lir' stamp='0.112'/>
</phase>
<phase name='codeemit' stamp='0.112'>
<phase_done name='codeemit' stamp='0.112'/>
</phase>
<phase name='codeinstall' stamp='0.112'>
<phase_done name='codeinstall' stamp='0.114'/>
</phase>
<code_cache total_blobs='243' nmethods='14' adapters='143' free_code_cache='250538944'/>
<task_done success='1' nmsize='872' count='4064' stamp='0.114'/>
</task>
<task compile_id='16' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='314' count='133' backedge_count='4229' iicount='133' level='3' stamp='0.115'>
<phase name='buildIR' stamp='0.115'>
<klass id='834' name='java/util/UUID' flags='17'/>
<klass id='833' name='java/lang/CharSequence' flags='1537'/>
<klass id='832' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='835' holder='832' name='uuidFromCharSequence' return='834' arguments='833' flags='9' bytes='314' iicount='143'/>
<parse method='835'  stamp='0.115'>
<bc code='185' bci='1'/>
<type id='722' name='int'/>
<method id='837' holder='833' name='length' return='722' flags='1025' bytes='0' iicount='1'/>
<call method='837' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='21'/>
<type id='724' name='void'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='839' name='java/lang/StringBuilder' unloaded='1'/>
<method id='841' holder='839' name='&lt;init&gt;' return='724' arguments='730' unloaded='1'/>
<call method='841' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='25'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='842' holder='839' name='append' return='839' arguments='729' unloaded='1'/>
<call method='842' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='28'/>
<method id='843' holder='839' name='toString' return='730' unloaded='1'/>
<call method='843' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='31'/>
<klass id='838' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='844' holder='838' name='&lt;init&gt;' return='724' arguments='730' flags='1' bytes='6' iicount='1'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='185' bci='38'/>
<type id='717' name='char'/>
<method id='846' holder='833' name='charAt' return='717' arguments='722' flags='1025' bytes='0' iicount='1'/>
<call method='846' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='185' bci='51'/>
<call method='846' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='185' bci='64'/>
<call method='846' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='185' bci='77'/>
<call method='846' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='310'/>
<type id='723' name='long'/>
<method id='847' holder='834' name='&lt;init&gt;' return='724' arguments='723 723' flags='1' bytes='15' iicount='233'/>
<call method='847' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='183' bci='1'/>
<method id='849' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='10' compiler='C1' level='3' iicount='2286'/>
<call method='849' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<parse_done stamp='0.115'/>
</parse>
<parse_done stamp='0.115'/>
</parse>
<bc code='185' bci='276'/>
<call method='846' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='281'/>
<method id='851' holder='832' name='hexDigit' return='722' arguments='717' flags='8' bytes='65' compile_id='14' compiler='C1' level='3' iicount='8160'/>
<call method='851' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='185' bci='238'/>
<call method='846' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='243'/>
<call method='851' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='185' bci='200'/>
<call method='846' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='205'/>
<call method='851' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='185' bci='162'/>
<call method='846' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='167'/>
<call method='851' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='185' bci='124'/>
<call method='846' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='129'/>
<call method='851' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='97'/>
<call method='841' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='101'/>
<call method='842' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='104'/>
<call method='843' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='107'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.115'/>
</parse>
<phase name='optimize_blocks' stamp='0.115'>
<phase_done name='optimize_blocks' stamp='0.115'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.115'>
<phase_done name='rangeCheckElimination' stamp='0.115'/>
</phase>
<phase name='optimize_null_checks' stamp='0.115'>
<phase_done name='optimize_null_checks' stamp='0.115'/>
</phase>
<phase_done name='buildIR' stamp='0.115'/>
</phase>
<phase name='emit_lir' stamp='0.115'>
<phase name='lirGeneration' stamp='0.115'>
<phase_done name='lirGeneration' stamp='0.115'/>
</phase>
<phase name='linearScan' stamp='0.115'>
<phase_done name='linearScan' stamp='0.116'/>
</phase>
<phase_done name='emit_lir' stamp='0.116'/>
</phase>
<phase name='codeemit' stamp='0.116'>
<phase_done name='codeemit' stamp='0.116'/>
</phase>
<phase name='codeinstall' stamp='0.116'>
<phase_done name='codeinstall' stamp='0.127'/>
</phase>
<code_cache total_blobs='246' nmethods='18' adapters='143' free_code_cache='250532224'/>
<task_done success='1' nmsize='5608' count='5840' backedge_count='186848' inlined_bytes='16' stamp='0.127'/>
</task>
<task compile_id='21' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='7884' iicount='7884' level='1' stamp='0.127'>
<phase name='buildIR' stamp='0.127'>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='832' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='10' compiler='C1' level='3' iicount='7886'/>
<parse method='832'  stamp='0.127'>
<parse_done stamp='0.128'/>
</parse>
<phase name='optimize_blocks' stamp='0.128'>
<phase_done name='optimize_blocks' stamp='0.128'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.128'>
<phase_done name='rangeCheckElimination' stamp='0.128'/>
</phase>
<phase name='optimize_null_checks' stamp='0.128'>
<phase_done name='optimize_null_checks' stamp='0.128'/>
</phase>
<phase_done name='buildIR' stamp='0.128'/>
</phase>
<phase name='emit_lir' stamp='0.128'>
<phase name='lirGeneration' stamp='0.128'>
<phase_done name='lirGeneration' stamp='0.128'/>
</phase>
<phase name='linearScan' stamp='0.128'>
<phase_done name='linearScan' stamp='0.128'/>
</phase>
<phase_done name='emit_lir' stamp='0.128'/>
</phase>
<phase name='codeemit' stamp='0.128'>
<phase_done name='codeemit' stamp='0.128'/>
</phase>
<phase name='codeinstall' stamp='0.128'>
<phase_done name='codeinstall' stamp='0.128'/>
</phase>
<code_cache total_blobs='247' nmethods='19' adapters='143' free_code_cache='250531456'/>
<task_done success='1' nmsize='272' count='9055' stamp='0.128'/>
</task>
<task compile_id='22' method='java/lang/String length ()I' bytes='6' count='7855' iicount='7856' level='1' stamp='0.128'>
<phase name='buildIR' stamp='0.128'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='9' compiler='C1' level='3' iicount='7871'/>
<parse method='832'  stamp='0.128'>
<parse_done stamp='0.128'/>
</parse>
<phase name='optimize_blocks' stamp='0.128'>
<phase_done name='optimize_blocks' stamp='0.128'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.128'>
<phase_done name='rangeCheckElimination' stamp='0.128'/>
</phase>
<phase name='optimize_null_checks' stamp='0.128'>
<phase_done name='optimize_null_checks' stamp='0.128'/>
</phase>
<phase_done name='buildIR' stamp='0.128'/>
</phase>
<phase name='emit_lir' stamp='0.128'>
<phase name='lirGeneration' stamp='0.128'>
<phase_done name='lirGeneration' stamp='0.128'/>
</phase>
<phase name='linearScan' stamp='0.128'>
<phase_done name='linearScan' stamp='0.128'/>
</phase>
<phase_done name='emit_lir' stamp='0.128'/>
</phase>
<phase name='codeemit' stamp='0.128'>
<phase_done name='codeemit' stamp='0.128'/>
</phase>
<phase name='codeinstall' stamp='0.128'>
<phase_done name='codeinstall' stamp='0.129'/>
</phase>
<code_cache total_blobs='248' nmethods='20' adapters='143' free_code_cache='250530624'/>
<task_done success='1' nmsize='272' count='8937' stamp='0.129'/>
</task>
<task compile_id='18' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='8112' iicount='8113' level='2' stamp='0.129'>
<phase name='buildIR' stamp='0.129'>
<klass id='833' name='java/util/UUID' flags='17'/>
<klass id='832' name='com/github/marschall/charsequences/ParseUuidCompilation' flags='1'/>
<method id='834' holder='832' name='parse' return='833' flags='0' bytes='6' iicount='8130'/>
<parse method='834'  stamp='0.129'>
<bc code='184' bci='2'/>
<klass id='838' name='java/lang/CharSequence' flags='1537'/>
<klass id='837' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='839' holder='837' name='uuidFromCharSequence' return='833' arguments='838' flags='9' bytes='314' compile_id='16' compiler='C1' level='3' iicount='8167'/>
<call method='839' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.129'/>
</parse>
<phase name='optimize_blocks' stamp='0.129'>
<phase_done name='optimize_blocks' stamp='0.129'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.129'>
<phase_done name='rangeCheckElimination' stamp='0.129'/>
</phase>
<phase name='optimize_null_checks' stamp='0.129'>
<phase_done name='optimize_null_checks' stamp='0.129'/>
</phase>
<phase_done name='buildIR' stamp='0.129'/>
</phase>
<phase name='emit_lir' stamp='0.129'>
<phase name='lirGeneration' stamp='0.129'>
<phase_done name='lirGeneration' stamp='0.129'/>
</phase>
<phase name='linearScan' stamp='0.129'>
<phase_done name='linearScan' stamp='0.129'/>
</phase>
<phase_done name='emit_lir' stamp='0.129'/>
</phase>
<phase name='codeemit' stamp='0.129'>
<phase_done name='codeemit' stamp='0.129'/>
</phase>
<phase name='codeinstall' stamp='0.129'>
<phase_done name='codeinstall' stamp='0.130'/>
</phase>
<code_cache total_blobs='249' nmethods='21' adapters='143' free_code_cache='250529664'/>
<task_done success='1' nmsize='392' count='10230' stamp='0.130'/>
</task>
<task compile_id='20' method='java/util/UUID &lt;init&gt; (JJ)V' bytes='15' count='10239' iicount='10239' level='2' stamp='0.130'>
<phase name='buildIR' stamp='0.130'>
<type id='724' name='void'/>
<type id='723' name='long'/>
<klass id='832' name='java/util/UUID' flags='17'/>
<method id='833' holder='832' name='&lt;init&gt;' return='724' arguments='723 723' flags='1' bytes='15' iicount='10255'/>
<parse method='833'  stamp='0.130'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='835' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='21' compiler='C1' level='1' iicount='12335'/>
<call method='835' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<parse_done stamp='0.130'/>
</parse>
<parse_done stamp='0.130'/>
</parse>
<phase name='optimize_blocks' stamp='0.130'>
<phase_done name='optimize_blocks' stamp='0.130'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.130'>
<phase_done name='rangeCheckElimination' stamp='0.130'/>
</phase>
<phase name='optimize_null_checks' stamp='0.130'>
<phase_done name='optimize_null_checks' stamp='0.130'/>
</phase>
<phase_done name='buildIR' stamp='0.130'/>
</phase>
<phase name='emit_lir' stamp='0.130'>
<phase name='lirGeneration' stamp='0.130'>
<phase_done name='lirGeneration' stamp='0.130'/>
</phase>
<phase name='linearScan' stamp='0.130'>
<phase_done name='linearScan' stamp='0.130'/>
</phase>
<phase_done name='emit_lir' stamp='0.130'/>
</phase>
<phase name='codeemit' stamp='0.130'>
<phase_done name='codeemit' stamp='0.130'/>
</phase>
<phase name='codeinstall' stamp='0.130'>
<phase_done name='codeinstall' stamp='0.130'/>
</phase>
<code_cache total_blobs='250' nmethods='22' adapters='143' free_code_cache='250528768'/>
<task_done success='1' nmsize='336' count='11329' inlined_bytes='1' stamp='0.130'/>
</task>
<task compile_id='25' compile_kind='osr' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='60424' iicount='1' osr_bci='9' level='3' stamp='0.163'>
<phase name='buildIR' stamp='0.163'>
<type id='724' name='void'/>
<klass id='832' name='com/github/marschall/charsequences/ParseUuidCompilation' flags='1'/>
<method id='833' holder='832' name='&lt;init&gt;' return='724' flags='1' bytes='40' iicount='1'/>
<parse method='833'  stamp='0.163'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='835' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='21' compiler='C1' level='1' iicount='62533'/>
<call method='835' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='177' bci='0'/>
<dependency type='leaf_type' ctxk='832'/>
<parse_done stamp='0.163'/>
</parse>
<bc code='182' bci='10'/>
<klass id='837' name='java/util/UUID' flags='17'/>
<method id='838' holder='832' name='parse' return='837' flags='0' bytes='6' compile_id='18' compiler='C1' level='2' iicount='60551'/>
<call method='838' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='832' x='838'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='832'/>
<parse method='838'>
<bc code='184' bci='2'/>
<klass id='842' name='java/lang/CharSequence' flags='1537'/>
<klass id='841' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='843' holder='841' name='uuidFromCharSequence' return='837' arguments='842' flags='9' bytes='314' compile_id='16' compiler='C1' level='3' iicount='60588'/>
<call method='843' instr='invokestatic'/>
<inline_fail reason='inlining prohibited by policy'/>
<parse_done stamp='0.163'/>
</parse>
<bc code='184' bci='15'/>
<type id='722' name='int'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='844' holder='735' name='identityHashCode' return='722' arguments='729' flags='265' bytes='0' compile_id='19' compile_kind='c2n' level='0' iicount='256'/>
<call method='844' instr='invokestatic'/>
<inline_fail reason='native method'/>
<bc code='182' bci='27'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='845' name='java/io/PrintStream' unloaded='1'/>
<method id='848' holder='845' name='println' return='724' arguments='730' unloaded='1'/>
<call method='848' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.163'/>
</parse>
<phase name='optimize_blocks' stamp='0.163'>
<phase_done name='optimize_blocks' stamp='0.163'/>
</phase>
<phase name='optimize_null_checks' stamp='0.163'>
<phase_done name='optimize_null_checks' stamp='0.163'/>
</phase>
<phase_done name='buildIR' stamp='0.163'/>
</phase>
<phase name='emit_lir' stamp='0.163'>
<phase name='lirGeneration' stamp='0.163'>
<phase_done name='lirGeneration' stamp='0.163'/>
</phase>
<phase name='linearScan' stamp='0.163'>
<phase_done name='linearScan' stamp='0.163'/>
</phase>
<phase_done name='emit_lir' stamp='0.164'/>
</phase>
<phase name='codeemit' stamp='0.164'>
<phase_done name='codeemit' stamp='0.164'/>
</phase>
<phase name='codeinstall' stamp='0.164'>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='unique_concrete_method' ctxk='832' x='838'/>
<phase_done name='codeinstall' stamp='0.166'/>
</phase>
<code_cache total_blobs='254' nmethods='24' adapters='143' free_code_cache='250504960'/>
<task_done success='1' nmsize='1192' count='1' backedge_count='64556' inlined_bytes='7' stamp='0.166'/>
</task>
<task compile_id='27' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='64618' iicount='1' level='3' stamp='0.205'>
<phase name='buildIR' stamp='0.205'>
<type id='724' name='void'/>
<klass id='832' name='com/github/marschall/charsequences/ParseUuidCompilation' flags='1'/>
<method id='833' holder='832' name='&lt;init&gt;' return='724' flags='1' bytes='40' iicount='1'/>
<parse method='833'  stamp='0.205'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='835' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='21' compiler='C1' level='1' iicount='66815'/>
<call method='835' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='177' bci='0'/>
<dependency type='leaf_type' ctxk='832'/>
<parse_done stamp='0.205'/>
</parse>
<bc code='182' bci='10'/>
<klass id='837' name='java/util/UUID' flags='17'/>
<method id='838' holder='832' name='parse' return='837' flags='0' bytes='6' compile_id='24' compiler='C2' level='4' iicount='64917'/>
<call method='838' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='832'/>
<parse method='838'>
<bc code='184' bci='2'/>
<klass id='842' name='java/lang/CharSequence' flags='1537'/>
<klass id='841' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='843' holder='841' name='uuidFromCharSequence' return='837' arguments='842' flags='9' bytes='314' compile_id='16' compiler='C1' level='3' iicount='64917'/>
<call method='843' instr='invokestatic'/>
<inline_fail reason='inlining prohibited by policy'/>
<parse_done stamp='0.206'/>
</parse>
<bc code='184' bci='15'/>
<type id='722' name='int'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='844' holder='735' name='identityHashCode' return='722' arguments='729' flags='265' bytes='0' compile_id='19' compile_kind='c2n' level='0' iicount='256'/>
<call method='844' instr='invokestatic'/>
<inline_fail reason='native method'/>
<bc code='182' bci='27'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='845' name='java/io/PrintStream' flags='1'/>
<method id='848' holder='845' name='println' return='724' arguments='730' unloaded='1'/>
<call method='848' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.206'/>
</parse>
<phase name='optimize_blocks' stamp='0.206'>
<phase_done name='optimize_blocks' stamp='0.206'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.206'>
<phase_done name='rangeCheckElimination' stamp='0.206'/>
</phase>
<phase name='optimize_null_checks' stamp='0.206'>
<phase_done name='optimize_null_checks' stamp='0.206'/>
</phase>
<phase_done name='buildIR' stamp='0.206'/>
</phase>
<phase name='emit_lir' stamp='0.206'>
<phase name='lirGeneration' stamp='0.206'>
<phase_done name='lirGeneration' stamp='0.206'/>
</phase>
<phase name='linearScan' stamp='0.206'>
<phase_done name='linearScan' stamp='0.206'/>
</phase>
<phase_done name='emit_lir' stamp='0.206'/>
</phase>
<phase name='codeemit' stamp='0.206'>
<phase_done name='codeemit' stamp='0.206'/>
</phase>
<phase name='codeinstall' stamp='0.206'>
<dependency type='leaf_type' ctxk='832'/>
<phase_done name='codeinstall' stamp='0.208'/>
</phase>
<code_cache total_blobs='254' nmethods='26' adapters='143' free_code_cache='250509056'/>
<task_done success='1' nmsize='1096' count='1' backedge_count='69567' inlined_bytes='7' stamp='0.208'/>
</task>
<fragment>
<![CDATA[
<task compile_id='30' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='257' iicount='257' level='3' stamp='0.288'>
<phase name='buildIR' stamp='0.288'>
<klass id='741' name='java/lang/SecurityManager' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='832' holder='735' name='getSecurityManager' return='741' flags='9' bytes='4' iicount='257'/>
<parse method='832'  stamp='0.288'>
<parse_done stamp='0.288'/>
</parse>
<phase name='optimize_blocks' stamp='0.288'>
<phase_done name='optimize_blocks' stamp='0.288'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.288'>
<phase_done name='rangeCheckElimination' stamp='0.288'/>
</phase>
<phase name='optimize_null_checks' stamp='0.288'>
<phase_done name='optimize_null_checks' stamp='0.288'/>
</phase>
<phase_done name='buildIR' stamp='0.288'/>
</phase>
<phase name='emit_lir' stamp='0.288'>
<phase name='lirGeneration' stamp='0.288'>
<phase_done name='lirGeneration' stamp='0.288'/>
</phase>
<phase name='linearScan' stamp='0.288'>
<phase_done name='linearScan' stamp='0.288'/>
</phase>
<phase_done name='emit_lir' stamp='0.288'/>
</phase>
<phase name='codeemit' stamp='0.288'>
<phase_done name='codeemit' stamp='0.288'/>
</phase>
<phase name='codeinstall' stamp='0.288'>
]]>
</fragment>
</compilation_log>
<compilation_log thread='140404520781568'>
<start_compile_thread name='C2 CompilerThread1' thread='140404520781568' process='6197' stamp='0.053'/>
<task compile_id='17' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='65' count='5696' iicount='5696' stamp='0.115'>
<phase name='parse' nodes='3' live='3' stamp='0.115'>
<type id='722' name='int'/>
<type id='717' name='char'/>
<klass id='832' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='833' holder='832' name='hexDigit' return='722' arguments='717' flags='8' bytes='65' compile_id='14' compiler='C1' level='3' iicount='5854'/>
<klass id='835' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='833' bci='57' reason='unloaded' action='reinterpret' index='155' klass='835'/>
<parse method='833' uses='5854' stamp='0.115'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='5841' cnt='5841' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='1826' not_taken='4014' cnt='5840' prob='0.312671'/>
<bc code='161' bci='20'/>
<branch target_bci='37' taken='0' not_taken='1827' cnt='1827' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='37' taken='0' not_taken='1827' cnt='1827' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='80' live='75' memory='32096' stamp='0.115'/>
</parse>
<phase_done name='parse' nodes='81' live='51' stamp='0.115'/>
</phase>
<phase name='optimizer' nodes='81' live='51' stamp='0.115'>
<phase name='ccp' nodes='81' live='50' stamp='0.115'>
<phase_done name='ccp' nodes='81' live='50' stamp='0.115'/>
</phase>
<phase name='idealLoop' nodes='81' live='50' stamp='0.115'>
<phase_done name='idealLoop' nodes='81' live='50' stamp='0.115'/>
</phase>
<phase_done name='optimizer' nodes='83' live='52' stamp='0.115'/>
</phase>
<phase name='matcher' nodes='83' live='52' stamp='0.115'>
<phase_done name='matcher' nodes='52' live='52' stamp='0.115'/>
</phase>
<phase name='regalloc' nodes='67' live='67' stamp='0.115'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='78' live='72' stamp='0.115'/>
</phase>
<phase name='output' nodes='78' live='72' stamp='0.115'>
<phase_done name='output' nodes='91' live='80' stamp='0.116'/>
</phase>
<code_cache total_blobs='246' nmethods='17' adapters='143' free_code_cache='250536192'/>
<task_done success='1' nmsize='152' count='11680' stamp='0.116'/>
</task>
<task compile_id='23' compile_kind='osr' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='314' count='6036' backedge_count='194147' iicount='6037' osr_bci='159' stamp='0.128'>
<phase name='parse' nodes='3' live='3' stamp='0.128'>
<klass id='834' name='java/util/UUID' flags='17'/>
<klass id='833' name='java/lang/CharSequence' flags='1537'/>
<klass id='832' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='835' holder='832' name='uuidFromCharSequence' return='834' arguments='833' flags='9' bytes='314' compile_id='16' compiler='C1' level='3' iicount='6061'/>
<klass id='839' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='835' bci='87' reason='unloaded' action='reinterpret' index='155' klass='839'/>
<uncommon_trap method='835' bci='11' reason='unloaded' action='reinterpret' index='155' klass='839'/>
<parse method='835' uses='6061' osr_bci='159' stamp='0.128'>
<uncommon_trap bci='159' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='159' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='159' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='162'/>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='717' name='char'/>
<type id='722' name='int'/>
<method id='838' holder='833' name='charAt' return='717' arguments='722' flags='1025' bytes='0' iicount='1'/>
<call method='838' count='23744' prof_factor='1' virtual='1' inline='1' receiver='730' receiver_count='23744'/>
<method id='842' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='15' compiler='C2' level='4' iicount='8489'/>
<call method='842' count='23744' prof_factor='1' inline='1'/>
<klass id='843' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='842' bci='13' reason='unloaded' action='reinterpret' index='6' klass='843'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='162' klass='730'/>
<uncommon_trap bci='162' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='162' reason='class_check' action='maybe_recompile' comment='monomorphic vcall checkcast'/>
<parse method='842' uses='23744' stamp='0.128'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='8489' cnt='8489' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='8489' not_taken='0' cnt='8489' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='264' live='254' memory='71872' stamp='0.128'/>
</parse>
<bc code='184' bci='167'/>
<method id='840' holder='832' name='hexDigit' return='722' arguments='717' flags='8' bytes='65' compile_id='17' compiler='C2' level='4' iicount='11680'/>
<call method='840' count='23744' prof_factor='1' inline='1'/>
<uncommon_trap method='840' bci='57' reason='unloaded' action='reinterpret' index='155' klass='839'/>
<inline_success reason='inline (hot)'/>
<parse method='840' uses='23744' stamp='0.128'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='11680' cnt='11680' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='3650' not_taken='8030' cnt='11680' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='334' live='319' memory='83536' stamp='0.128'/>
</parse>
<bc code='161' bci='187'/>
<branch target_bci='159' taken='23744' not_taken='5936' cnt='29680' prob='0.8'/>
<bc code='161' bci='225'/>
<branch target_bci='197' taken='23744' not_taken='5936' cnt='5936' prob='0.8'/>
<uncommon_trap bci='197' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='197' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='200'/>
<dependency type='unique_concrete_method' ctxk='730' x='842'/>
<call method='842' count='23744' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='23744' stamp='0.128'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='8489' cnt='8489' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='8489' not_taken='0' cnt='8489' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='482' live='460' memory='107112' stamp='0.129'/>
</parse>
<bc code='184' bci='205'/>
<call method='840' count='23744' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='840' uses='23744' stamp='0.129'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='11680' cnt='11680' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='3650' not_taken='8030' cnt='11680' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='543' live='516' memory='128384' stamp='0.129'/>
</parse>
<bc code='161' bci='225'/>
<branch target_bci='197' taken='23744' not_taken='5936' cnt='29680' prob='0.8'/>
<bc code='161' bci='263'/>
<branch target_bci='235' taken='23744' not_taken='5936' cnt='5936' prob='0.8'/>
<uncommon_trap bci='235' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='235' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='238'/>
<dependency type='unique_concrete_method' ctxk='730' x='842'/>
<call method='842' count='23744' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='23744' stamp='0.129'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='8489' cnt='8489' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='8489' not_taken='0' cnt='8489' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='688' live='654' memory='152584' stamp='0.130'/>
</parse>
<bc code='184' bci='243'/>
<call method='840' count='23744' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='840' uses='23744' stamp='0.130'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='11680' cnt='11680' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='3650' not_taken='8030' cnt='11680' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='749' live='710' memory='161776' stamp='0.130'/>
</parse>
<bc code='161' bci='263'/>
<branch target_bci='235' taken='23744' not_taken='5936' cnt='29680' prob='0.8'/>
<bc code='161' bci='301'/>
<branch target_bci='273' taken='71232' not_taken='5936' cnt='5936' prob='0.923077'/>
<uncommon_trap bci='273' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='273' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='276'/>
<dependency type='unique_concrete_method' ctxk='730' x='842'/>
<call method='842' count='71232' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='71232' stamp='0.130'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='8489' cnt='8489' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='8489' not_taken='0' cnt='8489' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='893' live='847' memory='187672' stamp='0.130'/>
</parse>
<bc code='184' bci='281'/>
<call method='840' count='71232' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='840' uses='71232' stamp='0.130'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='11680' cnt='11680' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='3650' not_taken='8030' cnt='11680' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='954' live='903' memory='196416' stamp='0.130'/>
</parse>
<bc code='161' bci='301'/>
<branch target_bci='273' taken='71232' not_taken='5936' cnt='77168' prob='0.923077'/>
<bc code='183' bci='310'/>
<type id='724' name='void'/>
<type id='723' name='long'/>
<method id='841' holder='834' name='&lt;init&gt;' return='724' arguments='723 723' flags='1' bytes='15' compile_id='20' compiler='C1' level='2' iicount='6197'/>
<call method='841' count='5936' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='841' uses='5936' stamp='0.130'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='846' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='21' compiler='C1' level='1' iicount='13631'/>
<call method='846' count='11366' prof_factor='0.957883' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='10887' stamp='0.130'>
<parse_done nodes='1027' live='975' memory='247040' stamp='0.130'/>
</parse>
<parse_done nodes='1038' live='985' memory='248784' stamp='0.130'/>
</parse>
<parse_done nodes='1038' live='984' memory='248912' stamp='0.130'/>
</parse>
<phase_done name='parse' nodes='1040' live='653' stamp='0.131'/>
</phase>
<phase name='optimizer' nodes='1040' live='653' stamp='0.131'>
<phase name='idealLoop' nodes='1050' live='589' stamp='0.131'>
<loop_tree>
<loop idx='1059' >
</loop>
<loop idx='1065' >
</loop>
<loop idx='1071' >
</loop>
<loop idx='1077' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1082' live='545' stamp='0.131'/>
</phase>
<phase name='escapeAnalysis' nodes='1082' live='545' stamp='0.131'>
<phase name='connectionGraph' nodes='1083' live='546' stamp='0.131'>
<phase_done name='connectionGraph' nodes='1083' live='546' stamp='0.131'/>
</phase>
<phase_done name='escapeAnalysis' nodes='1083' live='546' stamp='0.131'/>
</phase>
<phase name='idealLoop' nodes='1083' live='546' stamp='0.131'>
<loop_tree>
<loop idx='1059' inner_loop='1' >
</loop>
<loop idx='1065' inner_loop='1' >
</loop>
<loop idx='1071' inner_loop='1' >
</loop>
<loop idx='1077' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1083' live='516' stamp='0.131'/>
</phase>
<phase name='idealLoop' nodes='1083' live='516' stamp='0.131'>
<loop_tree>
<loop idx='1059' inner_loop='1' >
</loop>
<loop idx='1065' inner_loop='1' >
</loop>
<loop idx='1071' inner_loop='1' >
</loop>
<loop idx='1077' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1210' live='525' stamp='0.132'/>
</phase>
<phase name='idealLoop' nodes='1210' live='525' stamp='0.132'>
<loop_tree>
<loop idx='1438' inner_loop='1' main_loop='1438' >
</loop>
<loop idx='1508' inner_loop='1' >
</loop>
<loop idx='1589' inner_loop='1' >
</loop>
<loop idx='1822' inner_loop='1' main_loop='1822' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1904' live='1016' stamp='0.132'/>
</phase>
<phase name='ccp' nodes='1904' live='1016' stamp='0.133'>
<phase_done name='ccp' nodes='1904' live='1016' stamp='0.133'/>
</phase>
<phase name='idealLoop' nodes='1905' live='1014' stamp='0.133'>
<loop_tree>
<loop idx='1324' inner_loop='1' pre_loop='1059' >
</loop>
<loop idx='1438' inner_loop='1' main_loop='1438' >
</loop>
<loop idx='1237' inner_loop='1' post_loop='1059' >
</loop>
<loop idx='1508' inner_loop='1' >
</loop>
<loop idx='1589' inner_loop='1' >
</loop>
<loop idx='1732' inner_loop='1' pre_loop='1077' >
</loop>
<loop idx='1822' inner_loop='1' main_loop='1822' >
</loop>
<loop idx='1657' inner_loop='1' post_loop='1077' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1938' live='1009' stamp='0.133'/>
</phase>
<phase name='idealLoop' nodes='1938' live='1009' stamp='0.133'>
<loop_tree>
<loop idx='1324' inner_loop='1' pre_loop='1059' >
</loop>
<loop idx='1438' inner_loop='1' main_loop='1438' >
</loop>
<loop idx='1237' inner_loop='1' post_loop='1059' >
</loop>
<loop idx='1985' inner_loop='1' >
</loop>
<loop idx='2114' inner_loop='1' >
</loop>
<loop idx='1732' inner_loop='1' pre_loop='1077' >
</loop>
<loop idx='1822' inner_loop='1' main_loop='1822' >
</loop>
<loop idx='1657' inner_loop='1' post_loop='1077' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2279' live='1194' stamp='0.135'/>
</phase>
<phase name='idealLoop' nodes='2279' live='1194' stamp='0.135'>
<loop_tree>
<loop idx='1324' inner_loop='1' pre_loop='1059' >
</loop>
<loop idx='1438' inner_loop='1' main_loop='1438' >
</loop>
<loop idx='1237' inner_loop='1' post_loop='1059' >
</loop>
<loop idx='1732' inner_loop='1' pre_loop='1077' >
</loop>
<loop idx='1822' inner_loop='1' main_loop='1822' >
</loop>
<loop idx='1657' inner_loop='1' post_loop='1077' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2279' live='1138' stamp='0.136'/>
</phase>
<phase name='idealLoop' nodes='2279' live='1138' stamp='0.136'>
<loop_tree>
<loop idx='1324' inner_loop='1' pre_loop='1059' >
</loop>
<loop idx='1438' inner_loop='1' main_loop='1438' >
</loop>
<loop idx='1237' inner_loop='1' post_loop='1059' >
</loop>
<loop idx='1732' inner_loop='1' pre_loop='1077' >
</loop>
<loop idx='1822' inner_loop='1' main_loop='1822' >
</loop>
<loop idx='1657' inner_loop='1' post_loop='1077' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2292' live='1117' stamp='0.136'/>
</phase>
<phase_done name='optimizer' nodes='2372' live='1169' stamp='0.137'/>
</phase>
<phase name='matcher' nodes='2372' live='1169' stamp='0.137'>
<phase_done name='matcher' nodes='1091' live='1091' stamp='0.137'/>
</phase>
<phase name='regalloc' nodes='1477' live='1476' stamp='0.138'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='1735' live='1609' stamp='0.142'/>
</phase>
<phase name='output' nodes='1735' live='1609' stamp='0.142'>
<phase_done name='output' nodes='1823' live='1632' stamp='0.143'/>
</phase>
<dependency type='unique_concrete_method' ctxk='730' x='842'/>
<code_cache total_blobs='254' nmethods='23' adapters='143' free_code_cache='250501888'/>
<task_done success='1' nmsize='2744' count='60415' backedge_count='2206160' inlined_bytes='363' stamp='0.163'/>
</task>
<task compile_id='26' compile_kind='osr' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='314' count='60513' backedge_count='2209796' iicount='60514' osr_bci='121' stamp='0.163'>
<phase name='parse' nodes='3' live='3' stamp='0.163'>
<klass id='834' name='java/util/UUID' flags='17'/>
<klass id='833' name='java/lang/CharSequence' flags='1537'/>
<klass id='832' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='835' holder='832' name='uuidFromCharSequence' return='834' arguments='833' flags='9' bytes='314' compile_id='16' compiler='C1' level='3' iicount='60534'/>
<klass id='839' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='835' bci='87' reason='unloaded' action='reinterpret' index='155' klass='839'/>
<uncommon_trap method='835' bci='11' reason='unloaded' action='reinterpret' index='155' klass='839'/>
<parse method='835' uses='60534' osr_bci='121' stamp='0.163'>
<uncommon_trap bci='121' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='121' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='121' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='124'/>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='717' name='char'/>
<type id='722' name='int'/>
<method id='838' holder='833' name='charAt' return='717' arguments='722' flags='1025' bytes='0' iicount='1'/>
<call method='838' count='483261' prof_factor='1' virtual='1' inline='1' receiver='730' receiver_count='483261'/>
<method id='842' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='15' compiler='C2' level='4' iicount='8489'/>
<call method='842' count='483261' prof_factor='1' inline='1'/>
<klass id='843' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='842' bci='13' reason='unloaded' action='reinterpret' index='6' klass='843'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='124' klass='730'/>
<uncommon_trap bci='124' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='124' reason='class_check' action='maybe_recompile' comment='monomorphic vcall checkcast'/>
<parse method='842' uses='483261' stamp='0.205'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='8489' cnt='8489' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='8489' not_taken='0' cnt='8489' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='264' live='254' memory='71872' stamp='0.206'/>
</parse>
<bc code='184' bci='129'/>
<method id='840' holder='832' name='hexDigit' return='722' arguments='717' flags='8' bytes='65' compile_id='17' compiler='C2' level='4' iicount='11680'/>
<call method='840' count='483263' prof_factor='1' inline='1'/>
<uncommon_trap method='840' bci='57' reason='unloaded' action='reinterpret' index='155' klass='839'/>
<inline_success reason='inline (hot)'/>
<parse method='840' uses='483263' stamp='0.206'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='11680' cnt='11680' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='3650' not_taken='8030' cnt='11680' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='334' live='319' memory='83536' stamp='0.206'/>
</parse>
<bc code='161' bci='149'/>
<branch target_bci='121' taken='483263' not_taken='60407' cnt='543670' prob='0.88889'/>
<bc code='161' bci='187'/>
<branch target_bci='159' taken='241629' not_taken='60407' cnt='60407' prob='0.800001'/>
<uncommon_trap bci='159' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='159' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='162'/>
<dependency type='unique_concrete_method' ctxk='730' x='842'/>
<call method='842' count='241628' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='241628' stamp='0.206'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='8489' cnt='8489' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='8489' not_taken='0' cnt='8489' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='482' live='460' memory='107112' stamp='0.206'/>
</parse>
<bc code='184' bci='167'/>
<call method='840' count='241628' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='840' uses='241628' stamp='0.206'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='11680' cnt='11680' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='3650' not_taken='8030' cnt='11680' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='543' live='516' memory='128384' stamp='0.206'/>
</parse>
<bc code='161' bci='187'/>
<branch target_bci='159' taken='241629' not_taken='60407' cnt='302036' prob='0.800001'/>
<bc code='161' bci='225'/>
<branch target_bci='197' taken='241628' not_taken='60407' cnt='60407' prob='0.8'/>
<uncommon_trap bci='197' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='197' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='200'/>
<dependency type='unique_concrete_method' ctxk='730' x='842'/>
<call method='842' count='241628' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='241628' stamp='0.206'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='8489' cnt='8489' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='8489' not_taken='0' cnt='8489' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='688' live='654' memory='152456' stamp='0.208'/>
</parse>
<bc code='184' bci='205'/>
<call method='840' count='241628' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='840' uses='241628' stamp='0.208'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='11680' cnt='11680' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='3650' not_taken='8030' cnt='11680' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='749' live='710' memory='161392' stamp='0.208'/>
</parse>
<bc code='161' bci='225'/>
<branch target_bci='197' taken='241628' not_taken='60407' cnt='302035' prob='0.8'/>
<bc code='161' bci='263'/>
<branch target_bci='235' taken='241628' not_taken='60407' cnt='60407' prob='0.8'/>
<uncommon_trap bci='235' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='235' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='238'/>
<dependency type='unique_concrete_method' ctxk='730' x='842'/>
<call method='842' count='241628' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='241628' stamp='0.208'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='8489' cnt='8489' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='8489' not_taken='0' cnt='8489' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='894' live='848' memory='186648' stamp='0.208'/>
</parse>
<bc code='184' bci='243'/>
<call method='840' count='241628' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='840' uses='241628' stamp='0.208'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='11680' cnt='11680' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='3650' not_taken='8030' cnt='11680' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='955' live='904' memory='195648' stamp='0.208'/>
</parse>
<bc code='161' bci='263'/>
<branch target_bci='235' taken='241628' not_taken='60407' cnt='302035' prob='0.8'/>
<bc code='161' bci='301'/>
<branch target_bci='273' taken='724884' not_taken='60407' cnt='60407' prob='0.923077'/>
<uncommon_trap bci='273' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='273' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='276'/>
<dependency type='unique_concrete_method' ctxk='730' x='842'/>
<call method='842' count='724884' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='724884' stamp='0.208'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='8489' cnt='8489' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='8489' not_taken='0' cnt='8489' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='1099' live='1041' memory='257320' stamp='0.208'/>
</parse>
<bc code='184' bci='281'/>
<call method='840' count='724884' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='840' uses='724884' stamp='0.208'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='11680' cnt='11680' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='3650' not_taken='8030' cnt='11680' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='1160' live='1097' memory='268184' stamp='0.209'/>
</parse>
<bc code='161' bci='301'/>
<branch target_bci='273' taken='724884' not_taken='60407' cnt='785291' prob='0.923077'/>
<bc code='183' bci='310'/>
<type id='724' name='void'/>
<type id='723' name='long'/>
<method id='841' holder='834' name='&lt;init&gt;' return='724' arguments='723 723' flags='1' bytes='15' compile_id='20' compiler='C1' level='2' iicount='60666'/>
<call method='841' count='60407' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='841' uses='60407' stamp='0.209'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='846' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='21' compiler='C1' level='1' iicount='72775'/>
<call method='846' count='70518' prof_factor='0.995731' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='70217' stamp='0.209'>
<parse_done nodes='1233' live='1169' memory='281144' stamp='0.209'/>
</parse>
<parse_done nodes='1244' live='1179' memory='282888' stamp='0.209'/>
</parse>
<parse_done nodes='1244' live='1178' memory='283016' stamp='0.209'/>
</parse>
<phase_done name='parse' nodes='1246' live='784' stamp='0.209'/>
</phase>
<phase name='optimizer' nodes='1246' live='784' stamp='0.209'>
<phase name='idealLoop' nodes='1257' live='704' stamp='0.209'>
<loop_tree>
<loop idx='1267' >
</loop>
<loop idx='1273' >
</loop>
<loop idx='1279' >
</loop>
<loop idx='1285' >
</loop>
<loop idx='1291' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1297' live='646' stamp='0.210'/>
</phase>
<phase name='escapeAnalysis' nodes='1297' live='646' stamp='0.210'>
<phase name='connectionGraph' nodes='1298' live='647' stamp='0.210'>
<phase_done name='connectionGraph' nodes='1298' live='647' stamp='0.210'/>
</phase>
<phase_done name='escapeAnalysis' nodes='1298' live='647' stamp='0.210'/>
</phase>
<phase name='idealLoop' nodes='1298' live='647' stamp='0.210'>
<loop_tree>
<loop idx='1267' inner_loop='1' >
</loop>
<loop idx='1273' inner_loop='1' >
</loop>
<loop idx='1279' inner_loop='1' >
</loop>
<loop idx='1285' inner_loop='1' >
</loop>
<loop idx='1291' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1298' live='607' stamp='0.210'/>
</phase>
<phase name='idealLoop' nodes='1298' live='607' stamp='0.210'>
<loop_tree>
<loop idx='1267' inner_loop='1' >
</loop>
<loop idx='1273' inner_loop='1' >
</loop>
<loop idx='1279' inner_loop='1' >
</loop>
<loop idx='1285' inner_loop='1' >
</loop>
<loop idx='1291' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1451' live='621' stamp='0.211'/>
</phase>
<phase name='idealLoop' nodes='1451' live='621' stamp='0.211'>
<loop_tree>
<loop idx='1678' inner_loop='1' main_loop='1678' >
</loop>
<loop idx='1749' inner_loop='1' >
</loop>
<loop idx='1819' inner_loop='1' >
</loop>
<loop idx='1900' inner_loop='1' >
</loop>
<loop idx='2133' inner_loop='1' main_loop='2133' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2221' live='1163' stamp='0.212'/>
</phase>
<phase name='ccp' nodes='2221' live='1163' stamp='0.212'>
<phase_done name='ccp' nodes='2221' live='1163' stamp='0.212'/>
</phase>
<phase name='idealLoop' nodes='2222' live='1161' stamp='0.212'>
<loop_tree>
<loop idx='1564' inner_loop='1' pre_loop='1267' >
</loop>
<loop idx='1678' inner_loop='1' main_loop='1678' >
</loop>
<loop idx='1477' inner_loop='1' post_loop='1267' >
</loop>
<loop idx='1749' inner_loop='1' >
</loop>
<loop idx='1819' inner_loop='1' >
</loop>
<loop idx='1900' inner_loop='1' >
</loop>
<loop idx='2043' inner_loop='1' pre_loop='1291' >
</loop>
<loop idx='2133' inner_loop='1' main_loop='2133' >
</loop>
<loop idx='1968' inner_loop='1' post_loop='1291' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2255' live='1156' stamp='0.213'/>
</phase>
<phase name='idealLoop' nodes='2255' live='1156' stamp='0.213'>
<loop_tree>
<loop idx='1564' inner_loop='1' pre_loop='1267' >
</loop>
<loop idx='1678' inner_loop='1' main_loop='1678' >
</loop>
<loop idx='1477' inner_loop='1' post_loop='1267' >
</loop>
<loop idx='2302' inner_loop='1' >
</loop>
<loop idx='2420' inner_loop='1' >
</loop>
<loop idx='2549' inner_loop='1' >
</loop>
<loop idx='2043' inner_loop='1' pre_loop='1291' >
</loop>
<loop idx='2133' inner_loop='1' main_loop='2133' >
</loop>
<loop idx='1968' inner_loop='1' post_loop='1291' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2756' live='1429' stamp='0.214'/>
</phase>
<phase name='idealLoop' nodes='2756' live='1429' stamp='0.214'>
<loop_tree>
<loop idx='1564' inner_loop='1' pre_loop='1267' >
</loop>
<loop idx='1678' inner_loop='1' main_loop='1678' >
</loop>
<loop idx='1477' inner_loop='1' post_loop='1267' >
</loop>
<loop idx='2043' inner_loop='1' pre_loop='1291' >
</loop>
<loop idx='2133' inner_loop='1' main_loop='2133' >
</loop>
<loop idx='1968' inner_loop='1' post_loop='1291' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2756' live='1359' stamp='0.216'/>
</phase>
<phase name='idealLoop' nodes='2756' live='1359' stamp='0.216'>
<loop_tree>
<loop idx='1564' inner_loop='1' pre_loop='1267' >
</loop>
<loop idx='1678' inner_loop='1' main_loop='1678' >
</loop>
<loop idx='1477' inner_loop='1' post_loop='1267' >
</loop>
<loop idx='2043' inner_loop='1' pre_loop='1291' >
</loop>
<loop idx='2133' inner_loop='1' main_loop='2133' >
</loop>
<loop idx='1968' inner_loop='1' post_loop='1291' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2769' live='1338' stamp='0.216'/>
</phase>
<phase_done name='optimizer' nodes='2854' live='1395' stamp='0.217'/>
</phase>
<phase name='matcher' nodes='2854' live='1395' stamp='0.217'>
<phase_done name='matcher' nodes='1311' live='1311' stamp='0.217'/>
</phase>
<phase name='regalloc' nodes='1780' live='1779' stamp='0.218'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='2087' live='1945' stamp='0.223'/>
</phase>
<phase name='output' nodes='2087' live='1945' stamp='0.223'>
<phase_done name='output' nodes='2200' live='1970' stamp='0.224'/>
</phase>
<dependency type='unique_concrete_method' ctxk='730' x='842'/>
<code_cache total_blobs='256' nmethods='27' adapters='143' free_code_cache='250494400'/>
<task_done success='1' nmsize='3256' count='101419' backedge_count='3723164' inlined_bytes='457' stamp='0.233'/>
</task>
<task compile_id='28' compile_kind='osr' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='101420' iicount='1' osr_bci='9' stamp='0.233'>
<phase name='parse' nodes='3' live='3' stamp='0.233'>
<type id='724' name='void'/>
<klass id='832' name='com/github/marschall/charsequences/ParseUuidCompilation' flags='1'/>
<method id='833' holder='832' name='&lt;init&gt;' return='724' flags='1' bytes='40' compile_id='27' compiler='C1' level='3' iicount='1'/>
<klass id='839' name='java/io/PrintStream' flags='1'/>
<uncommon_trap method='833' bci='27' reason='unloaded' action='reinterpret' index='32' klass='839'/>
<parse method='833' uses='1' osr_bci='9' stamp='0.233'>
<uncommon_trap method='833' bci='27' reason='unloaded' action='reinterpret' index='32' klass='839'/>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='leaf_type' ctxk='832'/>
<uncommon_trap bci='9' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='9' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='9' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='10'/>
<klass id='836' name='java/util/UUID' flags='17'/>
<method id='837' holder='832' name='parse' return='836' flags='0' bytes='6' compile_id='24' compiler='C2' level='4' iicount='101452'/>
<dependency type='unique_concrete_method' ctxk='832' x='837'/>
<call method='837' count='36895' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a big method'/>
<direct_call bci='10'/>
<uncommon_trap bci='10' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='15'/>
<type id='722' name='int'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='838' holder='735' name='identityHashCode' return='722' arguments='729' flags='265' bytes='0' compile_id='19' compile_kind='c2n' level='0' iicount='256'/>
<call method='838' count='36894' prof_factor='1' inline='1'/>
<intrinsic id='_identityHashCode' nodes='46'/>
<bc code='160' bci='19'/>
<branch target_bci='30' taken='36894' not_taken='0' cnt='36894' prob='always'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='36'/>
<branch target_bci='9' taken='36894' not_taken='0' cnt='36894' prob='always'/>
<uncommon_trap bci='36' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='216' live='210' memory='53624' stamp='0.233'/>
</parse>
<phase_done name='parse' nodes='217' live='160' stamp='0.233'/>
</phase>
<phase name='optimizer' nodes='217' live='160' stamp='0.233'>
<phase name='idealLoop' nodes='226' live='154' stamp='0.233'>
<loop_tree>
<loop idx='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='260' live='162' stamp='0.233'/>
</phase>
<phase name='idealLoop' nodes='260' live='162' stamp='0.233'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='265' live='159' stamp='0.233'/>
</phase>
<phase name='idealLoop' nodes='265' live='159' stamp='0.233'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='265' live='159' stamp='0.233'/>
</phase>
<phase name='ccp' nodes='265' live='159' stamp='0.233'>
<phase_done name='ccp' nodes='265' live='159' stamp='0.233'/>
</phase>
<phase name='idealLoop' nodes='266' live='156' stamp='0.233'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='284' live='150' stamp='0.233'/>
</phase>
<phase name='idealLoop' nodes='284' live='150' stamp='0.233'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='284' live='134' stamp='0.233'/>
</phase>
<phase name='idealLoop' nodes='284' live='134' stamp='0.233'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='284' live='134' stamp='0.233'/>
</phase>
<phase_done name='optimizer' nodes='287' live='134' stamp='0.233'/>
</phase>
<phase name='matcher' nodes='287' live='134' stamp='0.233'>
<phase_done name='matcher' nodes='125' live='125' stamp='0.233'/>
</phase>
<phase name='regalloc' nodes='166' live='165' stamp='0.234'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='196' live='181' stamp='0.234'/>
</phase>
<phase name='output' nodes='196' live='181' stamp='0.234'>
<phase_done name='output' nodes='215' live='192' stamp='0.234'/>
</phase>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='unique_concrete_method' ctxk='832' x='837'/>
<code_cache total_blobs='257' nmethods='28' adapters='143' free_code_cache='250493120'/>
<task_done success='1' nmsize='344' count='1' backedge_count='101452' stamp='0.235'/>
</task>
</compilation_log>
<compilation_log thread='140404521834240'>
<start_compile_thread name='C2 CompilerThread0' thread='140404521834240' process='6197' stamp='0.053'/>
<task compile_id='15' method='java/lang/String charAt (I)C' bytes='29' count='5632' iicount='5632' stamp='0.112'>
<phase name='parse' nodes='3' live='3' stamp='0.112'>
<type id='717' name='char'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='6' compiler='C1' level='3' iicount='5632'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='832' bci='13' reason='unloaded' action='reinterpret' index='6' klass='834'/>
<parse method='832' uses='5632' stamp='0.112'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='5631' cnt='5631' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='5631' not_taken='0' cnt='5631' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='102' live='97' memory='35040' stamp='0.112'/>
</parse>
<phase_done name='parse' nodes='103' live='63' stamp='0.112'/>
</phase>
<phase name='optimizer' nodes='103' live='63' stamp='0.112'>
<phase name='ccp' nodes='103' live='63' stamp='0.112'>
<phase_done name='ccp' nodes='103' live='63' stamp='0.112'/>
</phase>
<phase name='idealLoop' nodes='103' live='63' stamp='0.112'>
<phase_done name='idealLoop' nodes='103' live='63' stamp='0.112'/>
</phase>
<phase_done name='optimizer' nodes='107' live='63' stamp='0.112'/>
</phase>
<phase name='matcher' nodes='107' live='63' stamp='0.113'>
<phase_done name='matcher' nodes='55' live='55' stamp='0.113'/>
</phase>
<phase name='regalloc' nodes='70' live='69' stamp='0.113'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='80' live='75' stamp='0.113'/>
</phase>
<phase name='output' nodes='80' live='75' stamp='0.113'>
<phase_done name='output' nodes='94' live='86' stamp='0.114'/>
</phase>
<code_cache total_blobs='244' nmethods='15' adapters='143' free_code_cache='250537984'/>
<task_done success='1' nmsize='216' count='8489' stamp='0.115'/>
</task>
<task compile_id='29' compile_kind='osr' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='314' count='101452' backedge_count='3724384' iicount='101452' osr_bci='273' stamp='0.233'>
<phase name='parse' nodes='3' live='3' stamp='0.233'>
<klass id='834' name='java/util/UUID' flags='17'/>
<klass id='833' name='java/lang/CharSequence' flags='1537'/>
<klass id='832' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='835' holder='832' name='uuidFromCharSequence' return='834' arguments='833' flags='9' bytes='314' compile_id='16' compiler='C1' level='3' iicount='101452'/>
<klass id='839' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='835' bci='87' reason='unloaded' action='reinterpret' index='155' klass='839'/>
<uncommon_trap method='835' bci='11' reason='unloaded' action='reinterpret' index='155' klass='839'/>
<parse method='835' uses='101452' osr_bci='273' stamp='0.233'>
<uncommon_trap bci='273' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='273' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='273' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='276'/>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='717' name='char'/>
<type id='722' name='int'/>
<method id='838' holder='833' name='charAt' return='717' arguments='722' flags='1025' bytes='0' iicount='1'/>
<call method='838' count='1215455' prof_factor='1' virtual='1' inline='1' receiver='730' receiver_count='1215455'/>
<method id='842' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='15' compiler='C2' level='4' iicount='8489'/>
<call method='842' count='1215455' prof_factor='1' inline='1'/>
<klass id='843' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='842' bci='13' reason='unloaded' action='reinterpret' index='6' klass='843'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='276' klass='730'/>
<uncommon_trap bci='276' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='276' reason='class_check' action='maybe_recompile' comment='monomorphic vcall checkcast'/>
<parse method='842' uses='1.21546e+06' stamp='0.233'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='8489' cnt='8489' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='8489' not_taken='0' cnt='8489' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='264' live='254' memory='71872' stamp='0.233'/>
</parse>
<bc code='184' bci='281'/>
<method id='840' holder='832' name='hexDigit' return='722' arguments='717' flags='8' bytes='65' compile_id='17' compiler='C2' level='4' iicount='11680'/>
<call method='840' count='1215455' prof_factor='1' inline='1'/>
<uncommon_trap method='840' bci='57' reason='unloaded' action='reinterpret' index='155' klass='839'/>
<inline_success reason='inline (hot)'/>
<parse method='840' uses='1.21546e+06' stamp='0.233'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='11680' cnt='11680' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='3650' not_taken='8030' cnt='11680' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='334' live='319' memory='83536' stamp='0.233'/>
</parse>
<bc code='161' bci='301'/>
<branch target_bci='273' taken='1215455' not_taken='101287' cnt='1.31674e+06' prob='0.923078'/>
<bc code='183' bci='310'/>
<type id='724' name='void'/>
<type id='723' name='long'/>
<method id='841' holder='834' name='&lt;init&gt;' return='724' arguments='723 723' flags='1' bytes='15' compile_id='20' compiler='C1' level='2' iicount='101451'/>
<call method='841' count='101287' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='841' uses='101287' stamp='0.233'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='846' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='21' compiler='C1' level='1' iicount='103448'/>
<call method='846' count='101166' prof_factor='0.998383' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='101287' stamp='0.233'>
<parse_done nodes='409' live='393' memory='96240' stamp='0.233'/>
</parse>
<parse_done nodes='423' live='406' memory='98424' stamp='0.233'/>
</parse>
<parse_done nodes='423' live='405' memory='98552' stamp='0.233'/>
</parse>
<phase_done name='parse' nodes='425' live='260' stamp='0.233'/>
</phase>
<phase name='optimizer' nodes='425' live='260' stamp='0.233'>
<phase name='idealLoop' nodes='434' live='244' stamp='0.234'>
<loop_tree>
<loop idx='440' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='442' live='242' stamp='0.234'/>
</phase>
<phase name='escapeAnalysis' nodes='442' live='242' stamp='0.234'>
<phase name='connectionGraph' nodes='443' live='243' stamp='0.234'>
<phase_done name='connectionGraph' nodes='443' live='243' stamp='0.234'/>
</phase>
<phase_done name='escapeAnalysis' nodes='443' live='243' stamp='0.234'/>
</phase>
<phase name='idealLoop' nodes='443' live='243' stamp='0.234'>
<loop_tree>
<loop idx='440' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='492' live='235' stamp='0.234'/>
</phase>
<phase name='idealLoop' nodes='492' live='235' stamp='0.234'>
<loop_tree>
<loop idx='715' inner_loop='1' main_loop='715' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='791' live='440' stamp='0.234'/>
</phase>
<phase name='idealLoop' nodes='791' live='440' stamp='0.234'>
<loop_tree>
<loop idx='601' inner_loop='1' pre_loop='440' >
</loop>
<loop idx='715' inner_loop='1' main_loop='715' >
</loop>
<loop idx='515' inner_loop='1' post_loop='440' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='802' live='443' stamp='0.235'/>
</phase>
<phase name='ccp' nodes='802' live='443' stamp='0.235'>
<phase_done name='ccp' nodes='802' live='443' stamp='0.235'/>
</phase>
<phase name='idealLoop' nodes='803' live='441' stamp='0.235'>
<loop_tree>
<loop idx='601' inner_loop='1' pre_loop='440' >
</loop>
<loop idx='715' inner_loop='1' main_loop='715' >
</loop>
<loop idx='515' inner_loop='1' post_loop='440' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='828' live='437' stamp='0.235'/>
</phase>
<phase name='idealLoop' nodes='828' live='437' stamp='0.235'>
<loop_tree>
<loop idx='601' inner_loop='1' pre_loop='440' >
</loop>
<loop idx='715' inner_loop='1' main_loop='715' >
</loop>
<loop idx='515' inner_loop='1' post_loop='440' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='828' live='423' stamp='0.235'/>
</phase>
<phase name='idealLoop' nodes='828' live='423' stamp='0.235'>
<loop_tree>
<loop idx='601' inner_loop='1' pre_loop='440' >
</loop>
<loop idx='715' inner_loop='1' main_loop='715' >
</loop>
<loop idx='515' inner_loop='1' post_loop='440' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='828' live='420' stamp='0.235'/>
</phase>
<phase_done name='optimizer' nodes='894' live='458' stamp='0.236'/>
</phase>
<phase name='matcher' nodes='894' live='458' stamp='0.236'>
<phase_done name='matcher' nodes='404' live='404' stamp='0.236'/>
</phase>
<phase name='regalloc' nodes='533' live='532' stamp='0.236'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='631' live='576' stamp='0.237'/>
</phase>
<phase name='output' nodes='631' live='576' stamp='0.237'>
<phase_done name='output' nodes='662' live='591' stamp='0.238'/>
</phase>
<code_cache total_blobs='258' nmethods='29' adapters='143' free_code_cache='250489920'/>
<task_done success='1' nmsize='1048' count='109611' backedge_count='4026216' inlined_bytes='81' stamp='0.275'/>
</task>
</compilation_log>
<compilation_log thread='140404519728896'>
<start_compile_thread name='C2 CompilerThread2' thread='140404519728896' process='6197' stamp='0.053'/>
<task compile_id='24' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='11770' iicount='11770' stamp='0.131'>
<phase name='parse' nodes='3' live='3' stamp='0.131'>
<klass id='833' name='java/util/UUID' flags='17'/>
<klass id='832' name='com/github/marschall/charsequences/ParseUuidCompilation' flags='1'/>
<method id='834' holder='832' name='parse' return='833' flags='0' bytes='6' compile_id='18' compiler='C1' level='2' iicount='11809'/>
<parse method='834' uses='11809' stamp='0.131'>
<bc code='184' bci='2'/>
<klass id='838' name='java/lang/CharSequence' flags='1537'/>
<klass id='837' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='839' holder='837' name='uuidFromCharSequence' return='833' arguments='838' flags='9' bytes='314' compile_id='16' compiler='C1' level='3' iicount='11899'/>
<call method='839' count='9706' prof_factor='1' inline='1'/>
<klass id='842' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='839' bci='87' reason='unloaded' action='reinterpret' index='155' klass='842'/>
<uncommon_trap method='839' bci='11' reason='unloaded' action='reinterpret' index='155' klass='842'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='11809' stamp='0.131'>
<bc code='185' bci='1'/>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='722' name='int'/>
<method id='846' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='22' compiler='C1' level='1' iicount='8937'/>
<dependency type='unique_concrete_method' ctxk='730' x='846'/>
<call method='846' count='11915' prof_factor='0.992436' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='11825' stamp='0.131'>
<parse_done nodes='53' live='52' memory='27744' stamp='0.131'/>
</parse>
<bc code='159' bci='8'/>
<branch target_bci='35' taken='11915' not_taken='0' cnt='11915' prob='always'/>
<bc code='185' bci='38'/>
<type id='717' name='char'/>
<method id='849' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='15' compiler='C2' level='4' iicount='8489'/>
<dependency type='unique_concrete_method' ctxk='730' x='849'/>
<call method='849' count='11916' prof_factor='0.992436' inline='1'/>
<klass id='850' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='849' bci='13' reason='unloaded' action='reinterpret' index='6' klass='850'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='11826' stamp='0.131'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='8489' cnt='8489' prob='never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='8489' not_taken='0' cnt='8489' prob='always'/>
<bc code='52' bci='27'/>
<observe that='!need_range_check'/>
<parse_done nodes='104' live='102' memory='35376' stamp='0.131'/>
</parse>
<bc code='160' bci='45'/>
<branch target_bci='87' taken='0' not_taken='11916' cnt='11916' prob='never'/>
<uncommon_trap bci='45' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='185' bci='51'/>
<dependency type='unique_concrete_method' ctxk='730' x='849'/>
<call method='849' count='11916' prof_factor='0.992436' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='11826' stamp='0.131'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='8489' cnt='8489' prob='never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='8489' not_taken='0' cnt='8489' prob='always'/>
<bc code='52' bci='27'/>
<observe that='!need_range_check'/>
<parse_done nodes='156' live='152' memory='45728' stamp='0.131'/>
</parse>
<bc code='160' bci='58'/>
<branch target_bci='87' taken='0' not_taken='11916' cnt='11916' prob='never'/>
<uncommon_trap bci='58' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='185' bci='64'/>
<dependency type='unique_concrete_method' ctxk='730' x='849'/>
<call method='849' count='11916' prof_factor='0.992436' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='11826' stamp='0.131'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='8489' cnt='8489' prob='never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='8489' not_taken='0' cnt='8489' prob='always'/>
<bc code='52' bci='27'/>
<observe that='!need_range_check'/>
<parse_done nodes='206' live='200' memory='52576' stamp='0.131'/>
</parse>
<bc code='160' bci='71'/>
<branch target_bci='87' taken='0' not_taken='11916' cnt='11916' prob='never'/>
<uncommon_trap bci='71' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='185' bci='77'/>
<dependency type='unique_concrete_method' ctxk='730' x='849'/>
<call method='849' count='11916' prof_factor='0.992436' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='11826' stamp='0.131'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='8489' cnt='8489' prob='never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='8489' not_taken='0' cnt='8489' prob='always'/>
<bc code='52' bci='27'/>
<observe that='!need_range_check'/>
<parse_done nodes='256' live='248' memory='59920' stamp='0.131'/>
</parse>
<bc code='159' bci='84'/>
<branch target_bci='111' taken='11916' not_taken='0' cnt='11916' prob='always'/>
<uncommon_trap bci='84' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='149'/>
<branch target_bci='121' taken='95328' not_taken='11916' cnt='11916' prob='0.888889'/>
<uncommon_trap bci='121' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='121' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='124'/>
<dependency type='unique_concrete_method' ctxk='730' x='849'/>
<call method='849' count='95328' prof_factor='0.992436' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='94607' stamp='0.131'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='8489' cnt='8489' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='8489' not_taken='0' cnt='8489' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='384' live='369' memory='88360' stamp='0.131'/>
</parse>
<bc code='184' bci='129'/>
<method id='843' holder='837' name='hexDigit' return='722' arguments='717' flags='8' bytes='65' compile_id='17' compiler='C2' level='4' iicount='11680'/>
<call method='843' count='95328' prof_factor='0.992436' inline='1'/>
<uncommon_trap method='843' bci='57' reason='unloaded' action='reinterpret' index='155' klass='842'/>
<inline_success reason='inline (hot)'/>
<parse method='843' uses='94607' stamp='0.131'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='11680' cnt='11680' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='3650' not_taken='8030' cnt='11680' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='452' live='432' memory='99680' stamp='0.131'/>
</parse>
<bc code='161' bci='149'/>
<branch target_bci='121' taken='95328' not_taken='11916' cnt='107244' prob='0.888889'/>
<bc code='161' bci='187'/>
<branch target_bci='159' taken='47664' not_taken='11916' cnt='11916' prob='0.8'/>
<uncommon_trap bci='159' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='159' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='162'/>
<dependency type='unique_concrete_method' ctxk='730' x='849'/>
<call method='849' count='47664' prof_factor='0.992436' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='47303' stamp='0.131'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='8489' cnt='8489' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='8489' not_taken='0' cnt='8489' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='578' live='552' memory='132000' stamp='0.132'/>
</parse>
<bc code='184' bci='167'/>
<call method='843' count='47664' prof_factor='0.992436' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='843' uses='47303' stamp='0.132'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='11680' cnt='11680' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='3650' not_taken='8030' cnt='11680' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='638' live='607' memory='141048' stamp='0.132'/>
</parse>
<bc code='161' bci='187'/>
<branch target_bci='159' taken='47664' not_taken='11916' cnt='59580' prob='0.8'/>
<bc code='161' bci='225'/>
<branch target_bci='197' taken='47664' not_taken='11916' cnt='11916' prob='0.8'/>
<uncommon_trap bci='197' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='197' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='200'/>
<dependency type='unique_concrete_method' ctxk='730' x='849'/>
<call method='849' count='47664' prof_factor='0.992436' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='47303' stamp='0.132'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='8489' cnt='8489' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='8489' not_taken='0' cnt='8489' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='763' live='726' memory='160776' stamp='0.132'/>
</parse>
<bc code='184' bci='205'/>
<call method='843' count='47664' prof_factor='0.992436' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='843' uses='47303' stamp='0.132'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='11680' cnt='11680' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='3650' not_taken='8030' cnt='11680' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='823' live='781' memory='170256' stamp='0.132'/>
</parse>
<bc code='161' bci='225'/>
<branch target_bci='197' taken='47664' not_taken='11916' cnt='59580' prob='0.8'/>
<bc code='161' bci='263'/>
<branch target_bci='235' taken='47664' not_taken='11916' cnt='11916' prob='0.8'/>
<uncommon_trap bci='235' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='235' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='238'/>
<dependency type='unique_concrete_method' ctxk='730' x='849'/>
<call method='849' count='47664' prof_factor='0.992436' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='47303' stamp='0.132'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='8489' cnt='8489' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='8489' not_taken='0' cnt='8489' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='948' live='900' memory='190688' stamp='0.132'/>
</parse>
<bc code='184' bci='243'/>
<call method='843' count='47664' prof_factor='0.992436' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='843' uses='47303' stamp='0.132'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='11680' cnt='11680' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='3650' not_taken='8030' cnt='11680' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='1008' live='955' memory='199952' stamp='0.132'/>
</parse>
<bc code='161' bci='263'/>
<branch target_bci='235' taken='47664' not_taken='11916' cnt='59580' prob='0.8'/>
<bc code='161' bci='301'/>
<branch target_bci='273' taken='142981' not_taken='11915' cnt='11916' prob='0.923077'/>
<uncommon_trap bci='273' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='273' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='276'/>
<dependency type='unique_concrete_method' ctxk='730' x='849'/>
<call method='849' count='142981' prof_factor='0.992436' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='141900' stamp='0.132'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='8489' cnt='8489' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='8489' not_taken='0' cnt='8489' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='1133' live='1074' memory='247648' stamp='0.132'/>
</parse>
<bc code='184' bci='281'/>
<call method='843' count='142980' prof_factor='0.992436' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='843' uses='141899' stamp='0.132'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='11680' cnt='11680' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='3650' not_taken='8030' cnt='11680' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='37' taken='0' not_taken='3650' cnt='3650' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='1193' live='1129' memory='256696' stamp='0.132'/>
</parse>
<bc code='161' bci='301'/>
<branch target_bci='273' taken='142981' not_taken='11915' cnt='154896' prob='0.923077'/>
<bc code='183' bci='310'/>
<type id='724' name='void'/>
<type id='723' name='long'/>
<method id='844' holder='833' name='&lt;init&gt;' return='724' arguments='723 723' flags='1' bytes='15' compile_id='20' compiler='C1' level='2' iicount='12016'/>
<call method='844' count='11915' prof_factor='0.992436' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='11825' stamp='0.132'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='853' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='21' compiler='C1' level='1' iicount='16530'/>
<call method='853' count='14267' prof_factor='0.984105' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='14040' stamp='0.132'>
<parse_done nodes='1267' live='1202' memory='269688' stamp='0.132'/>
</parse>
<parse_done nodes='1279' live='1213' memory='271464' stamp='0.132'/>
</parse>
<parse_done nodes='1279' live='1212' memory='271592' stamp='0.132'/>
</parse>
<parse_done nodes='1281' live='1213' memory='272472' stamp='0.132'/>
</parse>
<phase_done name='parse' nodes='1283' live='632' stamp='0.132'/>
</phase>
<phase name='optimizer' nodes='1283' live='632' stamp='0.132'>
<phase name='idealLoop' nodes='1289' live='573' stamp='0.133'>
<loop_tree>
<loop idx='1299' >
</loop>
<loop idx='1305' >
</loop>
<loop idx='1311' >
</loop>
<loop idx='1317' >
</loop>
<loop idx='1323' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1331' live='456' stamp='0.133'/>
</phase>
<phase name='escapeAnalysis' nodes='1331' live='456' stamp='0.133'>
<phase name='connectionGraph' nodes='1333' live='458' stamp='0.133'>
<phase_done name='connectionGraph' nodes='1333' live='458' stamp='0.133'/>
</phase>
<phase_done name='escapeAnalysis' nodes='1333' live='458' stamp='0.133'/>
</phase>
<phase name='idealLoop' nodes='1333' live='458' stamp='0.133'>
<loop_tree>
<loop idx='1299' inner_loop='1' >
</loop>
<loop idx='1305' inner_loop='1' >
</loop>
<loop idx='1311' inner_loop='1' >
</loop>
<loop idx='1317' inner_loop='1' >
</loop>
<loop idx='1323' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1347' live='453' stamp='0.133'/>
</phase>
<phase name='idealLoop' nodes='1347' live='453' stamp='0.133'>
<loop_tree>
<loop idx='1504' inner_loop='1' main_loop='1504' >
</loop>
<loop idx='1562' inner_loop='1' >
</loop>
<loop idx='1620' inner_loop='1' >
</loop>
<loop idx='1690' inner_loop='1' >
</loop>
<loop idx='1923' inner_loop='1' main_loop='1923' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2007' live='953' stamp='0.134'/>
</phase>
<phase name='idealLoop' nodes='2007' live='953' stamp='0.134'>
<loop_tree>
<loop idx='1435' inner_loop='1' pre_loop='1299' >
</loop>
<loop idx='1504' inner_loop='1' main_loop='1504' >
</loop>
<loop idx='1369' inner_loop='1' post_loop='1299' >
</loop>
<loop idx='2047' inner_loop='1' >
</loop>
<loop idx='2148' inner_loop='1' >
</loop>
<loop idx='2260' inner_loop='1' >
</loop>
<loop idx='1829' inner_loop='1' pre_loop='1323' >
</loop>
<loop idx='1923' inner_loop='1' main_loop='1923' >
</loop>
<loop idx='1753' inner_loop='1' post_loop='1323' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2388' live='1178' stamp='0.136'/>
</phase>
<phase name='ccp' nodes='2388' live='1178' stamp='0.136'>
<phase_done name='ccp' nodes='2388' live='1178' stamp='0.136'/>
</phase>
<phase name='idealLoop' nodes='2389' live='1178' stamp='0.136'>
<loop_tree>
<loop idx='1435' inner_loop='1' pre_loop='1299' >
</loop>
<loop idx='1504' inner_loop='1' main_loop='1504' >
</loop>
<loop idx='1369' inner_loop='1' post_loop='1299' >
</loop>
<loop idx='1829' inner_loop='1' pre_loop='1323' >
</loop>
<loop idx='1923' inner_loop='1' main_loop='1923' >
</loop>
<loop idx='1753' inner_loop='1' post_loop='1323' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2395' live='1097' stamp='0.137'/>
</phase>
<phase name='idealLoop' nodes='2395' live='1097' stamp='0.137'>
<loop_tree>
<loop idx='1435' inner_loop='1' pre_loop='1299' >
</loop>
<loop idx='1504' inner_loop='1' main_loop='1504' >
</loop>
<loop idx='1369' inner_loop='1' post_loop='1299' >
</loop>
<loop idx='1829' inner_loop='1' pre_loop='1323' >
</loop>
<loop idx='1923' inner_loop='1' main_loop='1923' >
</loop>
<loop idx='1753' inner_loop='1' post_loop='1323' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2396' live='1031' stamp='0.138'/>
</phase>
<phase_done name='optimizer' nodes='2472' live='1084' stamp='0.138'/>
</phase>
<phase name='matcher' nodes='2472' live='1084' stamp='0.138'>
<phase_done name='matcher' nodes='1041' live='1041' stamp='0.139'/>
</phase>
<phase name='regalloc' nodes='1394' live='1394' stamp='0.139'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='1588' live='1516' stamp='0.143'/>
</phase>
<phase name='output' nodes='1588' live='1516' stamp='0.143'>
<phase_done name='output' nodes='1686' live='1538' stamp='0.164'/>
</phase>
<dependency type='unique_concrete_method' ctxk='730' x='846'/>
<dependency type='unique_concrete_method' ctxk='730' x='849'/>
<code_cache total_blobs='254' nmethods='25' adapters='143' free_code_cache='250505792'/>
<task_done success='1' nmsize='2424' count='64555' inlined_bytes='922' stamp='0.205'/>
</task>
</compilation_log>
<hotspot_log_done stamp='0.289'/>
</hotspot_log>
