<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='8213' time_ms='1503492457056'>
<vm_version>
<name>
OpenJDK 64-Bit Graal VM
</name>
<release>
25.71-b01-internal-jvmci-0.31
</release>
<info>
OpenJDK 64-Bit Graal VM (25.71-b01-internal-jvmci-0.31) for linux-amd64 JRE (1.8.0), built on Jul 20 2017 02:25:46 by &quot;graaluser&quot; with gcc 4.9.1
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -XX:+LogCompilation -XX:+PrintAssembly -XX:LogFile=compilation8graal.log -Dfile.encoding=utf-8 
</args>
<command>
com.github.marschall.charsequences.ParseUuidCompilation
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.71-b01-internal-jvmci-0.31
java.vm.name=OpenJDK 64-Bit Graal VM
java.vm.info=mixed mode, sharing
java.ext.dirs=/home/marschall/bin/java/graalvm-0.27/jre/lib/ext:/usr/java/packages/lib/ext
java.endorsed.dirs=/home/marschall/bin/java/graalvm-0.27/jre/lib/endorsed
sun.boot.library.path=/home/marschall/bin/java/graalvm-0.27/jre/lib/amd64
java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
java.home=/home/marschall/bin/java/graalvm-0.27/jre
java.class.path=/home/marschall/git/charsequences/target/test-classes:/home/marschall/git/charsequences/target/classes:/home/marschall/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/marschall/.m2/repository/org/hamcrest/hamcrest-junit/2.0.0.0/hamcrest-junit-2.0.0.0.jar:/home/marschall/.m2/repository/org/hamcrest/java-hamcrest/2.0.0.0/java-hamcrest-2.0.0.0.jar:/home/marschall/.m2/repository/org/openjdk/jmh/jmh-core/1.19/jmh-core-1.19.jar:/home/marschall/.m2/repository/net/sf/jopt-simple/jopt-simple/4.6/jopt-simple-4.6.jar:/home/marschall/.m2/repository/org/apache/commons/commons-math3/3.2/commons-math3-3.2.jar:/home/marschall/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.19/jmh-generator-annprocess-1.19.jar:/home/marschall/.m2/repository/org/openjdk/jol/jol-core/0.8/jol-core-0.8.jar
sun.boot.class.path=/home/marschall/bin/java/graalvm-0.27/jre/lib/resources.jar:/home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar:/home/marschall/bin/java/graalvm-0.27/jre/lib/sunrsasign.jar:/home/marschall/bin/java/graalvm-0.27/jre/lib/jsse.jar:/home/marschall/bin/java/graalvm-0.27/jre/lib/jce.jar:/home/marschall/bin/java/graalvm-0.27/jre/lib/charsets.jar:/home/marschall/bin/java/graalvm-0.27/jre/lib/jfr.jar:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci-services.jar:/home/marschall/bin/java/graalvm-0.27/jre/classes:/home/marschall/bin/java/graalvm-0.27/jre/lib/boot/graal-sdk.src.zip:/home/marschall/bin/java/graalvm-0.27/jre/lib/boot/graal-sdk.jar
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=utf-8
sun.java.command=com.github.marschall.charsequences.ParseUuidCompilation
sun.java.launcher=SUN_STANDARD
jvmci.Compiler=graal
</properties>
</vm_arguments>
<tty>
<writer thread='140374823413504'/>
[Opened /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Object from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.Serializable from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Comparable from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.CharSequence from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.String from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.reflect.AnnotatedElement from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.reflect.GenericDeclaration from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.reflect.Type from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Class from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Cloneable from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.System from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Throwable from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Error from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ThreadDeath from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Exception from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.RuntimeException from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.SecurityManager from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.security.AccessControlContext from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.security.SecureClassLoader from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ReflectiveOperationException from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ClassNotFoundException from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.LinkageError from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.NoClassDefFoundError from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ClassCastException from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ArrayStoreException from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.VirtualMachineError from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.OutOfMemoryError from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.StackOverflowError from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.IllegalMonitorStateException from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ref.SoftReference from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ref.WeakReference from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ref.FinalReference from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ref.PhantomReference from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.Cleaner from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Runnable from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Thread from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Thread$UncaughtExceptionHandler from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ThreadGroup from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Map from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Dictionary from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Hashtable from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Properties from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.reflect.AccessibleObject from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.reflect.Member from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.reflect.Field from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.reflect.Parameter from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.reflect.Executable from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.reflect.Method from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.reflect.Constructor from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.MagicAccessorImpl from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessor from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessorImpl from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessor from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessorImpl from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingClassLoader from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.ConstantPool from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessor from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessorImpl from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeFieldAccessorImpl from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeStaticFieldAccessorImpl from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.annotation.Annotation from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.CallerSensitive from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandle from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.invoke.DirectMethodHandle from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.invoke.MemberName from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleNatives from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodType from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.BootstrapMethodError from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.invoke.CallSite from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.invoke.ConstantCallSite from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.invoke.MutableCallSite from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.invoke.VolatileCallSite from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Appendable from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.AbstractStringBuilder from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.StringBuffer from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.StringBuilder from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.Unsafe from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.AutoCloseable from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.Closeable from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.InputStream from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.ByteArrayInputStream from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.File from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.net.URL from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.jar.Manifest from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.Launcher from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.security.CodeSource from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.StackTraceElement from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.Buffer from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Boolean from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Character from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Number from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Float from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Double from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Byte from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Short from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Integer from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Long from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.NullPointerException from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ArithmeticException from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamField from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Comparator from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.String$CaseInsensitiveComparator from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.security.Guard from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.security.Permission from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.security.BasicPermission from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.RuntimePermission from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.security.AccessController from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectPermission from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.security.PrivilegedAction from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$GetReflectionFactoryAction from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.security.cert.Certificate from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Iterable from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Collection from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.List from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.RandomAccess from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.AbstractCollection from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.AbstractList from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Vector from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Stack from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$Lock from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$ReferenceHandler from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.InterruptedException from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.ArrayList from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Collections from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Set from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.AbstractSet from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptySet from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyList from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.AbstractMap from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyMap from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableCollection from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableList from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableRandomAccessList from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Null from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Lock from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.JavaLangRefAccess from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.SharedSecrets from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.IncompatibleClassChangeError from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.NoSuchMethodError from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.Reflection from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.HashMap from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Map$Entry from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.HashMap$Node from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.VM from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Entry from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Math from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer$FinalizerThread from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.charset.Charset from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.charset.spi.CharsetProvider from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.cs.FastCharsetProvider from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.util.PreHashedMap from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Aliases from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Classes from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Cache from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicInteger from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Class$3 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Class$ReflectionData from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Class$Atomic from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.AbstractRepository from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.GenericDeclRepository from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.ClassRepository from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Class$AnnotationData from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.annotation.AnnotationType from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$ClassValueMap from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.reflect.Modifier from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.LangReflectAccess from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectAccess from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Arrays from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.cs.HistoricallyNamedCharset from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.cs.Unicode from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Class$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.NativeConstructorAccessorImpl from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingConstructorAccessorImpl from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.StringCoding from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap$Entry from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringDecoder from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayDecoder from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetDecoder from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Decoder from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.charset.CodingErrorAction from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Hashtable$EntrySet from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedCollection from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedSet from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Objects from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Enumeration from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Iterator from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Enumerator from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Runtime from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.Version from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.FileInputStream from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.JavaIOFileDescriptorAccess from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.Flushable from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.OutputStream from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.FileOutputStream from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.FilterInputStream from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.BufferedInputStream from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.security.PrivilegedExceptionAction from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.reflect.misc.ReflectUtil from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.FilterOutputStream from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.PrintStream from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.BufferedOutputStream from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.Writer from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.OutputStreamWriter from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamEncoder from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.security.action.GetPropertyAction from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayEncoder from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetEncoder from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Encoder from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.ByteBuffer from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.HeapByteBuffer from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.Bits from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.ByteOrder from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicLong from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.JavaNioAccess from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.Bits$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.BufferedWriter from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.DefaultFileSystem from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.FileSystem from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.UnixFileSystem from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Enum from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.File$PathStatus from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.file.Watchable from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.file.Path from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringEncoder from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$3 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$Entry from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$Entry from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$NativeLibrary from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Terminator from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.SignalHandler from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Terminator$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.Signal from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.NativeSignalHandler from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Integer$IntegerCache from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.OSEnvironment from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.JavaLangAccess from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.System$2 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.IllegalArgumentException from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Compiler from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Compiler$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandlerFactory from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$Factory from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.security.util.Debug from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$ParallelLoaders from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$Entry from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Collections$SetFromMap from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$KeySet from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.JavaNetAccess from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader$7 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.StringTokenizer from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.MetaIndex from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Readable from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.Reader from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.BufferedReader from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.InputStreamReader from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.FileReader from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamDecoder from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.CharBuffer from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.HeapCharBuffer from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$Cache from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$2 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.reflect.Array from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.HashMap$TreeNode from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.FileInputStream$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.net.www.ParseUtil from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.BitSet from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Locale from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Locale$Cache from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentMap from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.Lock from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.ReentrantLock from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Segment from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Node from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CounterCell from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CollectionView from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$KeySetView from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ValuesView from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$EntrySetView from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Cache from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Key from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache$CacheEntry from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Locale$LocaleKey from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleUtils from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.CharacterData from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.CharacterDataLatin1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.net.Parts from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandler from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.Handler from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityAccess from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$JavaSecurityAccessImpl from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityProtectionDomainAccess from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$2 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$Key from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.security.Principal from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.HashSet from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.jar.Handler from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.SystemClassLoaderAction from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373948942080'/>
<thread_logfile thread='140373948942080' filename='/tmp/hs_c140373948942080_pid8213.log'/>
<writer thread='140373946836736'/>
<thread_logfile thread='140373946836736' filename='/tmp/hs_c140373946836736_pid8213.log'/>
<writer thread='140373947889408'/>
<thread_logfile thread='140373947889408' filename='/tmp/hs_c140373947889408_pid8213.log'/>
<writer thread='140373945784064'/>
<thread_logfile thread='140373945784064' filename='/tmp/hs_c140373945784064_pid8213.log'/>
<writer thread='140374823413504'/>
[Loaded java.lang.invoke.MethodHandleImpl from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.function.Function from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$2 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$3 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ClassValue from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$4 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Entry from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Identity from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Version from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.invoke.MemberName$Factory from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<task_queued compile_id='1' method='java/lang/String hashCode ()I' bytes='55' count='417' backedge_count='6144' iicount='417' level='3' stamp='0.042' comment='tiered' hot_count='417'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
[Opened /home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci-services.jar]
[Opened /home/marschall/bin/java/graalvm-0.27/jre/lib/boot/graal-sdk.src.zip]
[Opened /home/marschall/bin/java/graalvm-0.27/jre/lib/boot/graal-sdk.jar]
<writer thread='140373945784064'/>
Loaded disassembler from /home/marschall/bin/java/graalvm-0.27/jre/lib/amd64/server/hsdis-amd64.so
----------------------------------------------------------------------
java/lang/String.hashCode  [0x00007fab74109e20, 0x00007fab7410a0b0]  656 bytes
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
[Constants]
  # {method} {0x00007fab61896e38} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab74109e20: mov    0x8(%rsi),%r10d
  0x00007fab74109e24: shl    $0x3,%r10
  0x00007fab74109e28: cmp    %rax,%r10
  0x00007fab74109e2b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74109e31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74109e3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74109e40: mov    %eax,-0x14000(%rsp)
  0x00007fab74109e47: push   %rbp
  0x00007fab74109e48: sub    $0x30,%rsp
  0x00007fab74109e4c: movabs $0x7fab61a91360,%rax  ;   {metadata(method data for {method} {0x00007fab61896e38} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74109e56: 
<writer thread='140374823413504'/>
[Loaded sun.launcher.LauncherHelper from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
mov    0xfc(%rax),%edi
  0x00007fab74109e5c: add    $0x8,%edi
  0x00007fab74109e5f: mov    %edi,0xfc(%rax)
  0x00007fab74109e65: movabs $0x7fab61896e38,%rax  ;   {metadata({method} {0x00007fab61896e38} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74109e6f: and    $0x1ff8,%edi
  0x00007fab74109e75: cmp    $0x0,%edi
  0x00007fab74109e78: je     0x00007fab74109fb1  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@0 (line 1466)

  0x00007fab74109e7e: mov    0x10(%rsi),%eax    ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x00007fab74109e81: cmp    $0x0,%eax
  0x00007fab74109e84: movabs $0x7fab61a91360,%rdi  ;   {metadata(method data for {method} {0x00007fab61896e38} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74109e8e: movabs $0x130,%rbx
  0x00007fab74109e98: jne    0x00007fab74109ea8
  0x00007fab74109e9e: movabs $0x140,%rbx
  0x00007fab74109ea8: mov    (%rdi,%rbx,1),%rdx
  0x00007fab74109eac: lea    0x1(%rdx),%rdx
  0x00007fab74109eb0: mov    %rdx,(%rdi,%rbx,1)
  0x00007fab74109eb4: jne    0x00007fab74109fa5  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x00007fab74109eba: mov    0xc(%rsi),%edi
  0x00007fab74109ebd: shl    $0x3,%rdi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x00007fab74109ec1: mov    0xc(%rdi),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x00007fab74109fc8
  0x00007fab74109ec4: cmp    $0x0,%ebx
  0x00007fab74109ec7: movabs $0x7fab61a91360,%rdx  ;   {metadata(method data for {method} {0x00007fab61896e38} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74109ed1: movabs $0x150,%rcx
  0x00007fab74109edb: jle    0x00007fab74109eeb
  0x00007fab74109ee1: movabs $0x160,%rcx
  0x00007fab74109eeb: mov    (%rdx,%rcx,1),%r8
  0x00007fab74109eef: lea    0x1(%r8),%r8
  0x00007fab74109ef3: mov    %r8,(%rdx,%rcx,1)
  0x00007fab74109ef7: jle    0x00007fab74109fa5  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x00007fab74109efd: mov    $0x0,%edx
  0x00007fab74109f02: jmpq   0x00007fab74109f6a  ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x00007fab74109f07: nop
  0x00007fab74109f08: movslq %edx,%rcx
  0x00007fab74109f0b: movzwl 0x10(%rdi,%rcx,2),%ecx  ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x00007fab74109f10: mov    %rax,%r8
  0x00007fab74109f13: shl    $0x5,%eax
  0x00007fab74109f16: sub    %r8d,%eax
  0x00007fab74109f19: add    %ecx,%eax
  0x00007fab74109f1b: inc    %edx
  0x00007fab74109f1d: movabs $0x7fab61a91360,%rcx  ;   {metadata(method data for {method} {0x00007fab61896e38} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74109f27: mov    0x100(%rcx),%r8d
  0x00007fab74109f2e: add    $0x8,%r8d
  0x00007fab74109f32: mov    %r8d,0x100(%rcx)
  0x00007fab74109f39: movabs $0x7fab61896e38,%rcx  ;   {metadata({method} {0x00007fab61896e38} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74109f43: and    $0xfff8,%r8d
  0x00007fab74109f4a: cmp    $0x0,%r8d
  0x00007fab74109f4e: je     0x00007fab74109fcd  ; OopMap{rdi=Oop rsi=Oop off=308}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x00007fab74109f54: test   %eax,0x1b6d81a6(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab74109f5a: movabs $0x7fab61a91360,%rcx  ;   {metadata(method data for {method} {0x00007fab61896e38} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74109f64: incl   0x190(%rcx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x00007fab74109f6a: cmp    %ebx,%edx
  0x00007fab74109f6c: movabs $0x7fab61a91360,%rcx  ;   {metadata(method data for {method} {0x00007fab61896e38} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74109f76: movabs $0x170,%r8
  0x00007fab74109f80: jge    0x00007fab74109f90
  0x00007fab74109f86: movabs $0x180,%r8
  0x00007fab74109f90: mov    (%rcx,%r8,1),%r9
  0x00007fab74109f94: lea    0x1(%r9),%r9
  0x00007fab74109f98: mov    %r9,(%rcx,%r8,1)
  0x00007fab74109f9c: jl     0x00007fab74109f08  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x00007fab74109fa2: mov    %eax,0x10(%rsi)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x00007fab74109fa5: add    $0x30,%rsp
  0x00007fab74109fa9: pop    %rbp
  0x00007fab74109faa: test   %eax,0x1b6d8150(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74109fb0: retq   
  0x00007fab74109fb1: mov    %rax,0x8(%rsp)
  0x00007fab74109fb6: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74109fbe: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)
                                                ;   {runtime_call}
  0x00007fab74109fc3: jmpq   0x00007fab74109e7e
  0x00007fab74109fc8: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rdi=Oop off=429}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x00007fab74109fcd: mov    %rcx,0x8(%rsp)
  0x00007fab74109fd2: movq   $0x2d,(%rsp)
  0x00007fab74109fda: callq  0x00007fab741005e0  ; OopMap{rdi=Oop rsi=Oop off=447}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@45 (line 1470)
                                                ;   {runtime_call}
  0x00007fab74109fdf: jmpq   0x00007fab74109f54
  0x00007fab74109fe4: nop
  0x00007fab74109fe5: nop
  0x00007fab74109fe6: mov    0x2c0(%r15),%rax
  0x00007fab74109fed: movabs $0x0,%r10
  0x00007fab74109ff7: mov    %r10,0x2c0(%r15)
  0x00007fab74109ffe: movabs $0x0,%r10
  0x00007fab7410a008: mov    %r10,0x2c8(%r15)
  0x00007fab7410a00f: add    $0x30,%rsp
  0x00007fab7410a013: pop    %rbp
  0x00007fab7410a014: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7410a019: hlt    
  0x00007fab7410a01a: hlt    
  0x00007fab7410a01b: hlt    
  0x00007fab7410a01c: hlt    
  0x00007fab7410a01d: hlt    
  0x00007fab7410a01e: hlt    
  0x00007fab7410a01f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab7410a020: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7410a025: mov    %rsp,-0x28(%rsp)
  0x00007fab7410a02a: sub    $0x80,%rsp
  0x00007fab7410a031: mov    %rax,0x78(%rsp)
  0x00007fab7410a036: mov    %rcx,0x70(%rsp)
  0x00007fab7410a03b: mov    %rdx,0x68(%rsp)
  0x00007fab7410a040: mov    %rbx,0x60(%rsp)
  0x00007fab7410a045: mov    %rbp,0x50(%rsp)
  0x00007fab7410a04a: mov    %rsi,0x48(%rsp)
  0x00007fab7410a04f: mov    %rdi,0x40(%rsp)
  0x00007fab7410a054: mov    %r8,0x38(%rsp)
  0x00007fab7410a059: mov    %r9,0x30(%rsp)
  0x00007fab7410a05e: mov    %r10,0x28(%rsp)
  0x00007fab7410a063: mov    %r11,0x20(%rsp)
  0x00007fab7410a068: mov    %r12,0x18(%rsp)
  0x00007fab7410a06d: mov    %r13,0x10(%rsp)
  0x00007fab7410a072: mov    %r14,0x8(%rsp)
  0x00007fab7410a077: mov    %r15,(%rsp)
  0x00007fab7410a07b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7410a085: movabs $0x7fab7410a025,%rsi  ;   {internal_word}
  0x00007fab7410a08f: mov    %rsp,%rdx
  0x00007fab7410a092: and    $0xfffffffffffffff0,%rsp
  0x00007fab7410a096: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7410a09b: hlt    
[Deopt Handler Code]
  0x00007fab7410a09c: movabs $0x7fab7410a09c,%r10  ;   {section_word}
  0x00007fab7410a0a6: push   %r10
  0x00007fab7410a0a8: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7410a0ad: hlt    
  0x00007fab7410a0ae: hlt    
  0x00007fab7410a0af: hlt    
<nmethod compile_id='1' compiler='C1' level='3' entry='0x00007fab74109e20' size='1480' address='0x00007fab74109c90' relocation_offset='312' insts_offset='400' stub_offset='912' scopes_data_offset='1064' scopes_pcs_offset='1184' dependencies_offset='1456' nul_chk_table_offset='1464' metadata_offset='1056' method='java/lang/String hashCode ()I' bytes='55' count='435' backedge_count='6567' iicount='435' stamp='0.044'/>
<writer thread='140374823413504'/>
[Loaded java.net.URLClassLoader$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.net.util.URLUtil from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<task_queued compile_id='2' method='java/lang/String length ()I' bytes='6' count='384' iicount='384' level='3' stamp='0.044' comment='tiered' hot_count='384'/>
[Loaded sun.misc.URLClassPath$3 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/String.length  [0x00007fab7410a840, 0x00007fab7410a9b0]  368 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61895538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab7410a840: mov    0x8(%rsi),%r10d
  0x00007fab7410a844: shl    $0x3,%r10
  0x00007fab7410a848: cmp    %rax,%r10
  0x00007fab7410a84b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7410a851: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7410a85c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7410a860: mov    %eax,-0x14000(%rsp)
  0x00007fab7410a867: push   %rbp
  0x00007fab7410a868: 
<writer thread='140374823413504'/>
[Loaded sun.misc.URLClassPath$Loader from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
sub    $0x30,%rsp
  0x00007fab7410a86c: movabs $0x7fab61ab9630,%rax  ;   {metadata(method data for {method} {0x00007fab61895538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410a876: mov    0xfc(%rax),%edi
  0x00007fab7410a87c: add    $0x8,%edi
  0x00007fab7410a87f: mov    %edi,0xfc(%rax)
  0x00007fab7410a885: movabs $0x7fab61895538,%rax  ;   {metadata({method} {0x00007fab61895538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410a88f: and    $0x1ff8,%edi
  0x00007fab7410a895: cmp    $0x0,%edi
  0x00007fab7410a898: je     0x00007fab7410a8b4  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@0 (line 623)

  0x00007fab7410a89e: mov    0xc(%rsi),%eax
  0x00007fab7410a8a1: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 623)

  0x00007fab7410a8a5: mov    0xc(%rax),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x00007fab7410a8c8
  0x00007fab7410a8a8: add    $0x30,%rsp
  0x00007fab7410a8ac: pop    %rbp
  0x00007fab7410a8ad: test   %eax,0x1b6d784d(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7410a8b3: retq   
  0x00007fab7410a8b4: mov    %rax,0x8(%rsp)
  0x00007fab7410a8b9: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7410a8c1: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=134}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ;   {runtime_call}
  0x00007fab7410a8c6: jmp    0x00007fab7410a89e
  0x00007fab7410a8c8: callq  0x00007fab740fc000  ; OopMap{off=141}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x00007fab7410a8cd: nop
  0x00007fab7410a8ce: nop
  0x00007fab7410a8cf: mov    0x2c0(%r15),%rax
  0x00007fab7410a8d6: movabs $0x0,%r10
  0x00007fab7410a8e0: mov    %r10,0x2c0(%r15)
  0x00007fab7410a8e7: movabs $0x0,%r10
  0x00007fab7410a8f1: mov    %r10,0x2c8(%r15)
  0x00007fab7410a8f8: add    $0x30,%rsp
  0x00007fab7410a8fc: pop    %rbp
  0x00007fab7410a8fd: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7410a902: hlt    
  0x00007fab7410a903: hlt    
  0x00007fab7410a904: hlt    
  0x00007fab7410a905: hlt    
  0x00007fab7410a906: hlt    
  0x00007fab7410a907: hlt    
  0x00007fab7410a908: hlt    
  0x00007fab7410a909: hlt    
  0x00007fab7410a90a: hlt    
  0x00007fab7410a90b: hlt    
  0x00007fab7410a90c: hlt    
  0x00007fab7410a90d: hlt    
  0x00007fab7410a90e: hlt    
  0x00007fab7410a90f: hlt    
  0x00007fab7410a910: hlt    
  0x00007fab7410a911: hlt    
  0x00007fab7410a912: hlt    
  0x00007fab7410a913: hlt    
  0x00007fab7410a914: hlt    
  0x00007fab7410a915: hlt    
  0x00007fab7410a916: hlt    
  0x00007fab7410a917: hlt    
  0x00007fab7410a918: hlt    
  0x00007fab7410a919: hlt    
  0x00007fab7410a91a: hlt    
  0x00007fab7410a91b: hlt    
  0x00007fab7410a91c: hlt    
  0x00007fab7410a91d: hlt    
  0x00007fab7410a91e: hlt    
  0x00007fab7410a91f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab7410a920: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7410a925: mov    %rsp,-0x28(%rsp)
  0x00007fab7410a92a: sub    $0x80,%rsp
  0x00007fab7410a931: mov    %rax,0x78(%rsp)
  0x00007fab7410a936: mov    %rcx,0x70(%rsp)
  0x00007fab7410a93b: mov    %rdx,0x68(%rsp)
  0x00007fab7410a940: mov    %rbx,0x60(%rsp)
  0x00007fab7410a945: mov    %rbp,0x50(%rsp)
  0x00007fab7410a94a: mov    %rsi,0x48(%rsp)
  0x00007fab7410a94f: mov    %rdi,0x40(%rsp)
  0x00007fab7410a954: mov    %r8,0x38(%rsp)
  0x00007fab7410a959: mov    %r9,0x30(%rsp)
  0x00007fab7410a95e: mov    %r10,0x28(%rsp)
  0x00007fab7410a963: mov    %r11,0x20(%rsp)
  0x00007fab7410a968: mov    %r12,0x18(%rsp)
  0x00007fab7410a96d: mov    %r13,0x10(%rsp)
  0x00007fab7410a972: mov    %r14,0x8(%rsp)
  0x00007fab7410a977: mov    %r15,(%rsp)
  0x00007fab7410a97b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7410a985: movabs $0x7fab7410a925,%rsi  ;   {internal_word}
  0x00007fab7410a98f: mov    %rsp,%rdx
  0x00007fab7410a992: and    $0xfffffffffffffff0,%rsp
  0x00007fab7410a996: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7410a99b: hlt    
[Deopt Handler Code]
  0x00007fab7410a99c: movabs $0x7fab7410a99c,%r10  ;   {section_word}
  0x00007fab7410a9a6: push   %r10
  0x00007fab7410a9a8: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7410a9ad: hlt    
  0x00007fab7410a9ae: hlt    
  0x00007fab7410a9af: hlt    
<nmethod compile_id='2' compiler='C1' level='3' entry='0x00007fab7410a840' size='920' address='0x00007fab7410a6d0' relocation_offset='312' insts_offset='368' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' nul_chk_table_offset='904' metadata_offset='736' method='java/lang/String length ()I' bytes='6' count='386' iicount='386' stamp='0.045'/>
<writer thread='140374823413504'/>
[Loaded sun.misc.URLClassPath$JarLoader from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.zip.ZipConstants from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.JavaUtilZipFileAccess from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<task_queued compile_id='3' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='384' backedge_count='1323' iicount='384' level='3' stamp='0.045' comment='tiered' hot_count='384'/>
<task_queued compile_id='4' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1536' iicount='1536' level='3' stamp='0.045' comment='tiered' hot_count='1536'/>
<task_queued compile_id='5' method='java/lang/String charAt (I)C' bytes='29' count='2304' iicount='2304' level='3' stamp='0.046' comment='tiered' hot_count='2304'/>
<task_queued compile_id='6' method='java/lang/String indexOf (II)I' bytes='70' count='164' backedge_count='5120' iicount='164' level='3' stamp='0.046' comment='tiered' hot_count='164'/>
<task_queued compile_id='7' method='java/lang/Math min (II)I' bytes='11' count='640' iicount='640' level='3' stamp='0.046' comment='tiered' hot_count='640'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/String.equals  [0x00007fab7410b080, 0x00007fab7410b890]  2064 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61896108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab7410b080: mov    0x8(%rsi),%r10d
  0x00007fab7410b084: shl    $0x3,%r10
  0x00007fab7410b088: cmp    %rax,%r10
  0x00007fab7410b08b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7410b091: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7410b09c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7410b0a0: mov    %eax,-0x14000(%rsp)
  0x00007fab7410b0a7: push   %rbp
  0x00007fab7410b0a8: sub    $0x30,%rsp
  0x00007fab7410b0ac: movabs $0x7fab61ac53a8,%rax  ;   {metadata(method data for {method} {0x00007fab61896108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410b0b6: mov    0xfc(%rax),%edi
  0x00007fab7410b0bc: add    $0x8,%edi
  0x00007fab7410b0bf: mov    %edi,0xfc(%rax)
  0x00007fab7410b0c5: movabs $0x7fab61896108,%rax  ;   {metadata({method} {0x00007fab61896108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410b0cf: and    $0x1ff8,%edi
  0x00007fab7410b0d5: cmp    $0x0,%edi
  0x00007fab7410b0d8: je     0x00007fab7410b75e  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@0 (line 977)

  0x00007fab7410b0de: cmp    %rdx,%rsi
  0x00007fab7410b0e1: movabs $0x7fab61ac53a8,%rax  ;   {metadata(method data for {method} {0x00007fab61896108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410b0eb: movabs $0x130,%rdi
  0x00007fab7410b0f5: jne    0x00007fab7410b105
  0x00007fab7410b0fb: movabs $0x140,%rdi
  0x00007fab7410b105: mov    (%rax,%rdi,1),%rbx
  0x00007fab7410b109: lea    0x1(%rbx),%rbx
  0x00007fab7410b10d: mov    %rbx,(%rax,%rdi,1)
  0x00007fab7410b111: je     0x00007fab7410b74d  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@2 (line 977)

  0x00007fab7410b117: cmp    $0x0,%rdx
  0x00007fab7410b11b: jne    0x00007fab7410b136
  0x00007fab7410b11d: movabs $0x7fab61ac53a8,%rbx  ;   {metadata(method data for {method} {0x00007fab61896108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410b127: orl    $0x100,0x148(%rbx)
  0x00007fab7410b131: jmpq   0x00007fab7410b352
  0x00007fab7410b136: movabs $0x7c0001610,%rcx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007fab7410b140: mov    0x8(%rdx),%edi
  0x00007fab7410b143: shl    $0x3,%rdi
  0x00007fab7410b147: cmp    %rdi,%rcx
  0x00007fab7410b14a: jne    0x00007fab7410b336
  0x00007fab7410b150: movabs $0x7fab61ac53a8,%rbx  ;   {metadata(method data for {method} {0x00007fab61896108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410b15a: mov    0x8(%rdx),%ecx
  0x00007fab7410b15d: shl    $0x3,%rcx
  0x00007fab7410b161: cmp    0x160(%rbx),%rcx
  0x00007fab7410b168: jne    0x00007fab7410b177
  0x00007fab7410b16a: addq   $0x1,0x168(%rbx)
  0x00007fab7410b172: jmpq   0x00007fab7410b357
  0x00007fab7410b177: cmp    0x170(%rbx),%rcx
  0x00007fab7410b17e: jne    0x00007fab7410b18d
  0x00007fab7410b180: addq   $0x1,0x178(%rbx)
  0x00007fab7410b188: jmpq   0x00007fab7410b357
  0x00007fab7410b18d: cmp    0x180(%rbx),%rcx
  0x00007fab7410b194: jne    0x00007fab7410b1a3
  0x00007fab7410b196: addq   $0x1,0x188(%rbx)
  0x00007fab7410b19e: jmpq   0x00007fab7410b357
  0x00007fab7410b1a3: cmp    0x190(%rbx),%rcx
  0x00007fab7410b1aa: jne    0x00007fab7410b1b9
  0x00007fab7410b1ac: addq   $0x1,0x198(%rbx)
  0x00007fab7410b1b4: jmpq   0x00007fab7410b357
  0x00007fab7410b1b9: cmp    0x1a0(%rbx),%rcx
  0x00007fab7410b1c0: jne    0x00007fab7410b1cf
  0x00007fab7410b1c2: addq   $0x1,0x1a8(%rbx)
  0x00007fab7410b1ca: jmpq   0x00007fab7410b357
  0x00007fab7410b1cf: cmp    0x1b0(%rbx),%rcx
  0x00007fab7410b1d6: jne    0x00007fab7410b1e5
  0x00007fab7410b1d8: addq   $0x1,0x1b8(%rbx)
  0x00007fab7410b1e0: jmpq   0x00007fab7410b357
  0x00007fab7410b1e5: cmp    0x1c0(%rbx),%rcx
  0x00007fab7410b1ec: jne    0x00007fab7410b1fb
  0x00007fab7410b1ee: addq   $0x1,0x1c8(%rbx)
  0x00007fab7410b1f6: jmpq   0x00007fab7410b357
  0x00007fab7410b1fb: cmp    0x1d0(%rbx),%rcx
  0x00007fab7410b202: jne    0x00007fab7410b211
  0x00007fab7410b204: addq   $0x1,0x1d8(%rbx)
  0x00007fab7410b20c: jmpq   0x00007fab7410b357
  0x00007fab7410b211: cmpq   $0x0,0x160(%rbx)
  0x00007fab7410b21c: jne    0x00007fab7410b235
  0x00007fab7410b21e: mov    %rcx,0x160(%rbx)
  0x00007fab7410b225: movq   $0x1,0x168(%rbx)
  0x00007fab7410b230: jmpq   0x00007fab7410b357
  0x00007fab7410b235: cmpq   $0x0,0x170(%rbx)
  0x00007fab7410b240: jne    0x00007fab7410b259
  0x00007fab7410b242: mov    %rcx,0x170(%rbx)
  0x00007fab7410b249: movq   $0x1,0x178(%rbx)
  0x00007fab7410b254: jmpq   0x00007fab7410b357
  0x00007fab7410b259: cmpq   $0x0,0x180(%rbx)
  0x00007fab7410b264: jne    0x00007fab7410b27d
  0x00007fab7410b266: mov    %rcx,0x180(%rbx)
  0x00007fab7410b26d: movq   $0x1,0x188(%rbx)
  0x00007fab7410b278: jmpq   0x00007fab7410b357
  0x00007fab7410b27d: cmpq   $0x0,0x190(%rbx)
  0x00007fab7410b288: jne    0x00007fab7410b2a1
  0x00007fab7410b28a: mov    %rcx,0x190(%rbx)
  0x00007fab7410b291: movq   $0x1,0x198(%rbx)
  0x00007fab7410b29c: jmpq   0x00007fab7410b357
  0x00007fab7410b2a1: cmpq   $0x0,0x1a0(%rbx)
  0x00007fab7410b2ac: jne    0x00007fab7410b2c5
  0x00007fab7410b2ae: mov    %rcx,0x1a0(%rbx)
  0x00007fab7410b2b5: movq   $0x1,0x1a8(%rbx)
  0x00007fab7410b2c0: jmpq   0x00007fab7410b357
  0x00007fab7410b2c5: cmpq   $0x0,0x1b0(%rbx)
  0x00007fab7410b2d0: jne    0x00007fab7410b2e9
  0x00007fab7410b2d2: mov    %rcx,0x1b0(%rbx)
  0x00007fab7410b2d9: movq   $0x1,0x1b8(%rbx)
  0x00007fab7410b2e4: jmpq   0x00007fab7410b357
  0x00007fab7410b2e9: cmpq   $0x0,0x1c0(%rbx)
  0x00007fab7410b2f4: jne    0x00007fab7410b30d
  0x00007fab7410b2f6: mov    %rcx,0x1c0(%rbx)
  0x00007fab7410b2fd: movq   $0x1,0x1c8(%rbx)
  0x00007fab7410b308: jmpq   0x00007fab7410b357
  0x00007fab7410b30d: cmpq   $0x0,0x1d0(%rbx)
  0x00007fab7410b318: jne    0x00007fab7410b331
  0x00007fab7410b31a: mov    %rcx,0x1d0(%rbx)
  0x00007fab7410b321: movq   $0x1,0x1d8(%rbx)
  0x00007fab7410b32c: jmpq   0x00007fab7410b357
  0x00007fab7410b331: jmpq   0x00007fab7410b357
  0x00007fab7410b336: movabs $0x7fab61ac53a8,%rbx  ;   {metadata(method data for {method} {0x00007fab61896108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410b340: subq   $0x1,0x150(%rbx)
  0x00007fab7410b348: jmpq   0x00007fab7410b352
  0x00007fab7410b34d: jmpq   0x00007fab7410b357
  0x00007fab7410b352: xor    %rax,%rax
  0x00007fab7410b355: jmp    0x00007fab7410b361
  0x00007fab7410b357: movabs $0x1,%rax          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@8 (line 980)

  0x00007fab7410b361: cmp    $0x0,%eax
  0x00007fab7410b364: movabs $0x7fab61ac53a8,%rax  ;   {metadata(method data for {method} {0x00007fab61896108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410b36e: movabs $0x1e8,%rdi
  0x00007fab7410b378: je     0x00007fab7410b388
  0x00007fab7410b37e: movabs $0x1f8,%rdi
  0x00007fab7410b388: mov    (%rax,%rdi,1),%rbx
  0x00007fab7410b38c: lea    0x1(%rbx),%rbx
  0x00007fab7410b390: mov    %rbx,(%rax,%rdi,1)
  0x00007fab7410b394: je     0x00007fab7410b73c  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@11 (line 980)

  0x00007fab7410b39a: cmp    $0x0,%rdx
  0x00007fab7410b39e: jne    0x00007fab7410b3b9
  0x00007fab7410b3a0: movabs $0x7fab61ac53a8,%rbx  ;   {metadata(method data for {method} {0x00007fab61896108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410b3aa: orl    $0x100,0x200(%rbx)
  0x00007fab7410b3b4: jmpq   0x00007fab7410b5d5
  0x00007fab7410b3b9: movabs $0x7c0001610,%rax  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007fab7410b3c3: mov    0x8(%rdx),%edi
  0x00007fab7410b3c6: shl    $0x3,%rdi
  0x00007fab7410b3ca: cmp    %rdi,%rax
  0x00007fab7410b3cd: jne    0x00007fab7410b5b9
  0x00007fab7410b3d3: movabs $0x7fab61ac53a8,%rbx  ;   {metadata(method data for {method} {0x00007fab61896108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410b3dd: mov    0x8(%rdx),%eax
  0x00007fab7410b3e0: shl    $0x3,%rax
  0x00007fab7410b3e4: cmp    0x218(%rbx),%rax
  0x00007fab7410b3eb: jne    0x00007fab7410b3fa
  0x00007fab7410b3ed: addq   $0x1,0x220(%rbx)
  0x00007fab7410b3f5: jmpq   0x00007fab7410b5d5
  0x00007fab7410b3fa: cmp    0x228(%rbx),%rax
  0x00007fab7410b401: jne    0x00007fab7410b410
  0x00007fab7410b403: addq   $0x1,0x230(%rbx)
  0x00007fab7410b40b: jmpq   0x00007fab7410b5d5
  0x00007fab7410b410: cmp    0x238(%rbx),%rax
  0x00007fab7410b417: jne    0x00007fab7410b426
  0x00007fab7410b419: addq   $0x1,0x240(%rbx)
  0x00007fab7410b421: jmpq   0x00007fab7410b5d5
  0x00007fab7410b426: cmp    0x248(%rbx),%rax
  0x00007fab7410b42d: jne    0x00007fab7410b43c
  0x00007fab7410b42f: addq   $0x1,0x250(%rbx)
  0x00007fab7410b437: jmpq   0x00007fab7410b5d5
  0x00007fab7410b43c: cmp    0x258(%rbx),%rax
  0x00007fab7410b443: jne    0x00007fab7410b452
  0x00007fab7410b445: addq   $0x1,0x260(%rbx)
  0x00007fab7410b44d: jmpq   0x00007fab7410b5d5
  0x00007fab7410b452: cmp    0x268(%rbx),%rax
  0x00007fab7410b459: jne    0x00007fab7410b468
  0x00007fab7410b45b: addq   $0x1,0x270(%rbx)
  0x00007fab7410b463: jmpq   0x00007fab7410b5d5
  0x00007fab7410b468: cmp    0x278(%rbx),%rax
  0x00007fab7410b46f: jne    0x00007fab7410b47e
  0x00007fab7410b471: addq   $0x1,0x280(%rbx)
  0x00007fab7410b479: jmpq   0x00007fab7410b5d5
  0x00007fab7410b47e: cmp    0x288(%rbx),%rax
  0x00007fab7410b485: jne    0x00007fab7410b494
  0x00007fab7410b487: addq   $0x1,0x290(%rbx)
  0x00007fab7410b48f: jmpq   0x00007fab7410b5d5
  0x00007fab7410b494: cmpq   $0x0,0x218(%rbx)
  0x00007fab7410b49f: jne    0x00007fab7410b4b8
  0x00007fab7410b4a1: mov    %rax,0x218(%rbx)
  0x00007fab7410b4a8: movq   $0x1,0x220(%rbx)
  0x00007fab7410b4b3: jmpq   0x00007fab7410b5d5
  0x00007fab7410b4b8: cmpq   $0x0,0x228(%rbx)
  0x00007fab7410b4c3: jne    0x00007fab7410b4dc
  0x00007fab7410b4c5: mov    %rax,0x228(%rbx)
  0x00007fab7410b4cc: movq   $0x1,0x230(%rbx)
  0x00007fab7410b4d7: jmpq   0x00007fab7410b5d5
  0x00007fab7410b4dc: cmpq   $0x0,0x238(%rbx)
  0x00007fab7410b4e7: jne    0x00007fab7410b500
  0x00007fab7410b4e9: mov    %rax,0x238(%rbx)
  0x00007fab7410b4f0: movq   $0x1,0x240(%rbx)
  0x00007fab7410b4fb: jmpq   0x00007fab7410b5d5
  0x00007fab7410b500: cmpq   $0x0,0x248(%rbx)
  0x00007fab7410b50b: jne    0x00007fab7410b524
  0x00007fab7410b50d: mov    %rax,0x248(%rbx)
  0x00007fab7410b514: movq   $0x1,0x250(%rbx)
  0x00007fab7410b51f: jmpq   0x00007fab7410b5d5
  0x00007fab7410b524: cmpq   $0x0,0x258(%rbx)
  0x00007fab7410b52f: jne    0x00007fab7410b548
  0x00007fab7410b531: mov    %rax,0x258(%rbx)
  0x00007fab7410b538: movq   $0x1,0x260(%rbx)
  0x00007fab7410b543: jmpq   0x00007fab7410b5d5
  0x00007fab7410b548: cmpq   $0x0,0x268(%rbx)
  0x00007fab7410b553: jne    0x00007fab7410b56c
  0x00007fab7410b555: mov    %rax,0x268(%rbx)
  0x00007fab7410b55c: movq   $0x1,0x270(%rbx)
  0x00007fab7410b567: jmpq   0x00007fab7410b5d5
  0x00007fab7410b56c: cmpq   $0x0,0x278(%rbx)
  0x00007fab7410b577: jne    0x00007fab7410b590
  0x00007fab7410b579: mov    %rax,0x278(%rbx)
  0x00007fab7410b580: movq   $0x1,0x280(%rbx)
  0x00007fab7410b58b: jmpq   0x00007fab7410b5d5
  0x00007fab7410b590: cmpq   $0x0,0x288(%rbx)
  0x00007fab7410b59b: jne    0x00007fab7410b5b4
  0x00007fab7410b59d: mov    %rax,0x288(%rbx)
  0x00007fab7410b5a4: movq   $0x1,0x290(%rbx)
  0x00007fab7410b5af: jmpq   0x00007fab7410b5d5
  0x00007fab7410b5b4: jmpq   0x00007fab7410b5d5
  0x00007fab7410b5b9: movabs $0x7fab61ac53a8,%rbx  ;   {metadata(method data for {method} {0x00007fab61896108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410b5c3: subq   $0x1,0x208(%rbx)
  0x00007fab7410b5cb: jmpq   0x00007fab7410b775
  0x00007fab7410b5d0: jmpq   0x00007fab7410b5d5
  0x00007fab7410b5d5: mov    %rdx,%rax          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@15 (line 981)

  0x00007fab7410b5d8: mov    0xc(%rsi),%esi
  0x00007fab7410b5db: shl    $0x3,%rsi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@20 (line 982)

  0x00007fab7410b5df: mov    0xc(%rsi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x00007fab7410b77e
  0x00007fab7410b5e2: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x00007fab7410b783
  0x00007fab7410b5e5: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@27 (line 983)

  0x00007fab7410b5e9: mov    0xc(%rax),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x00007fab7410b788
  0x00007fab7410b5ec: cmp    %ebx,%edi
  0x00007fab7410b5ee: movabs $0x7fab61ac53a8,%rbx  ;   {metadata(method data for {method} {0x00007fab61896108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410b5f8: movabs $0x2a0,%rdx
  0x00007fab7410b602: jne    0x00007fab7410b612
  0x00007fab7410b608: movabs $0x2b0,%rdx
  0x00007fab7410b612: mov    (%rbx,%rdx,1),%rcx
  0x00007fab7410b616: lea    0x1(%rcx),%rcx
  0x00007fab7410b61a: mov    %rcx,(%rbx,%rdx,1)
  0x00007fab7410b61e: jne    0x00007fab7410b73c  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@31 (line 983)

  0x00007fab7410b624: mov    $0x0,%ebx
  0x00007fab7410b629: jmpq   0x00007fab7410b6d7  ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@49 (line 987)

  0x00007fab7410b62e: xchg   %ax,%ax
  0x00007fab7410b630: movslq %ebx,%rdi
  0x00007fab7410b633: cmp    0xc(%rsi),%ebx
  0x00007fab7410b636: jae    0x00007fab7410b78d
  0x00007fab7410b63c: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@60 (line 988)

  0x00007fab7410b641: movslq %ebx,%rcx
  0x00007fab7410b644: cmp    0xc(%rax),%ebx
  0x00007fab7410b647: jae    0x00007fab7410b796
  0x00007fab7410b64d: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@65 (line 988)

  0x00007fab7410b652: cmp    %ecx,%edi
  0x00007fab7410b654: movabs $0x7fab61ac53a8,%rdi  ;   {metadata(method data for {method} {0x00007fab61896108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410b65e: movabs $0x2e0,%rcx
  0x00007fab7410b668: je     0x00007fab7410b678
  0x00007fab7410b66e: movabs $0x2f0,%rcx
  0x00007fab7410b678: mov    (%rdi,%rcx,1),%r8
  0x00007fab7410b67c: lea    0x1(%r8),%r8
  0x00007fab7410b680: mov    %r8,(%rdi,%rcx,1)
  0x00007fab7410b684: jne    0x00007fab7410b71a  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@66 (line 988)

  0x00007fab7410b68a: inc    %ebx
  0x00007fab7410b68c: movabs $0x7fab61ac53a8,%rdi  ;   {metadata(method data for {method} {0x00007fab61896108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410b696: mov    0x100(%rdi),%ecx
  0x00007fab7410b69c: add    $0x8,%ecx
  0x00007fab7410b69f: mov    %ecx,0x100(%rdi)
  0x00007fab7410b6a5: movabs $0x7fab61896108,%rdi  ;   {metadata({method} {0x00007fab61896108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410b6af: and    $0xfff8,%ecx
  0x00007fab7410b6b5: cmp    $0x0,%ecx
  0x00007fab7410b6b8: je     0x00007fab7410b79f  ; OopMap{rax=Oop rsi=Oop off=1598}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@74 (line 990)

  0x00007fab7410b6be: test   %eax,0x1b6d6a3c(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab7410b6c4: movabs $0x7fab61ac53a8,%rdi  ;   {metadata(method data for {method} {0x00007fab61896108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410b6ce: incl   0x300(%rdi)
  0x00007fab7410b6d4: mov    %rdx,%rdi          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@74 (line 990)

  0x00007fab7410b6d7: mov    %rdi,%rdx
  0x00007fab7410b6da: dec    %edx
  0x00007fab7410b6dc: cmp    $0x0,%edi
  0x00007fab7410b6df: movabs $0x7fab61ac53a8,%rdi  ;   {metadata(method data for {method} {0x00007fab61896108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410b6e9: movabs $0x2c0,%rcx
  0x00007fab7410b6f3: je     0x00007fab7410b703
  0x00007fab7410b6f9: movabs $0x2d0,%rcx
  0x00007fab7410b703: mov    (%rdi,%rcx,1),%r8
  0x00007fab7410b707: lea    0x1(%r8),%r8
  0x00007fab7410b70b: mov    %r8,(%rdi,%rcx,1)
  0x00007fab7410b70f: je     0x00007fab7410b72b
  0x00007fab7410b715: jmpq   0x00007fab7410b630  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@53 (line 987)

  0x00007fab7410b71a: mov    $0x0,%eax
  0x00007fab7410b71f: add    $0x30,%rsp
  0x00007fab7410b723: pop    %rbp
  0x00007fab7410b724: test   %eax,0x1b6d69d6(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7410b72a: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@70 (line 989)

  0x00007fab7410b72b: mov    $0x1,%eax
  0x00007fab7410b730: add    $0x30,%rsp
  0x00007fab7410b734: pop    %rbp
  0x00007fab7410b735: test   %eax,0x1b6d69c5(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7410b73b: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@78 (line 992)

  0x00007fab7410b73c: mov    $0x0,%eax
  0x00007fab7410b741: add    $0x30,%rsp
  0x00007fab7410b745: pop    %rbp
  0x00007fab7410b746: test   %eax,0x1b6d69b4(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7410b74c: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@80 (line 995)

  0x00007fab7410b74d: mov    $0x1,%eax
  0x00007fab7410b752: add    $0x30,%rsp
  0x00007fab7410b756: pop    %rbp
  0x00007fab7410b757: test   %eax,0x1b6d69a3(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7410b75d: retq   
  0x00007fab7410b75e: mov    %rax,0x8(%rsp)
  0x00007fab7410b763: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7410b76b: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop off=1776}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x00007fab7410b770: jmpq   0x00007fab7410b0de
  0x00007fab7410b775: mov    %rdx,(%rsp)
  0x00007fab7410b779: callq  0x00007fab740fe2c0  ; OopMap{rsi=Oop off=1790}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x00007fab7410b77e: callq  0x00007fab740fc000  ; OopMap{rax=Oop rsi=Oop off=1795}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x00007fab7410b783: callq  0x00007fab740fc000  ; OopMap{rsi=Oop off=1800}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x00007fab7410b788: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rax=Oop off=1805}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x00007fab7410b78d: mov    %rbx,(%rsp)
  0x00007fab7410b791: callq  0x00007fab740fb940  ; OopMap{rax=Oop rsi=Oop off=1814}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x00007fab7410b796: mov    %rbx,(%rsp)
  0x00007fab7410b79a: callq  0x00007fab740fb940  ; OopMap{rax=Oop rsi=Oop off=1823}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x00007fab7410b79f: mov    %rdi,0x8(%rsp)
  0x00007fab7410b7a4: movq   $0x4a,(%rsp)
  0x00007fab7410b7ac: callq  0x00007fab741005e0  ; OopMap{rax=Oop rsi=Oop off=1841}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x00007fab7410b7b1: jmpq   0x00007fab7410b6be
  0x00007fab7410b7b6: nop
  0x00007fab7410b7b7: nop
  0x00007fab7410b7b8: mov    0x2c0(%r15),%rax
  0x00007fab7410b7bf: movabs $0x0,%r10
  0x00007fab7410b7c9: mov    %r10,0x2c0(%r15)
  0x00007fab7410b7d0: movabs $0x0,%r10
  0x00007fab7410b7da: mov    %r10,0x2c8(%r15)
  0x00007fab7410b7e1: add    $0x30,%rsp
  0x00007fab7410b7e5: pop    %rbp
  0x00007fab7410b7e6: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7410b7eb: hlt    
  0x00007fab7410b7ec: hlt    
  0x00007fab7410b7ed: hlt    
  0x00007fab7410b7ee: hlt    
  0x00007fab7410b7ef: hlt    
  0x00007fab7410b7f0: hlt    
  0x00007fab7410b7f1: hlt    
  0x00007fab7410b7f2: hlt    
  0x00007fab7410b7f3: hlt    
  0x00007fab7410b7f4: hlt    
  0x00007fab7410b7f5: hlt    
  0x00007fab7410b7f6: hlt    
  0x00007fab7410b7f7: hlt    
  0x00007fab7410b7f8: hlt    
  0x00007fab7410b7f9: hlt    
  0x00007fab7410b7fa: hlt    
  0x00007fab7410b7fb: hlt    
  0x00007fab7410b7fc: hlt    
  0x00007fab7410b7fd: hlt    
  0x00007fab7410b7fe: hlt    
  0x00007fab7410b7ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab7410b800: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7410b805: mov    %rsp,-0x28(%rsp)
  0x00007fab7410b80a: sub    $0x80,%rsp
  0x00007fab7410b811: mov    %rax,0x78(%rsp)
  0x00007fab7410b816: mov    %rcx,0x70(%rsp)
  0x00007fab7410b81b: mov    %rdx,0x68(%rsp)
  0x00007fab7410b820: mov    %rbx,0x60(%rsp)
  0x00007fab7410b825: mov    %rbp,0x50(%rsp)
  0x00007fab7410b82a: mov    %rsi,0x48(%rsp)
  0x00007fab7410b82f: mov    %rdi,0x40(%rsp)
  0x00007fab7410b834: mov    %r8,0x38(%rsp)
  0x00007fab7410b839: mov    %r9,0x30(%rsp)
  0x00007fab7410b83e: mov    %r10,0x28(%rsp)
  0x00007fab7410b843: mov    %r11,0x20(%rsp)
  0x00007fab7410b848: mov    %r12,0x18(%rsp)
  0x00007fab7410b84d: mov    %r13,0x10(%rsp)
  0x00007fab7410b852: mov    %r14,0x8(%rsp)
  0x00007fab7410b857: mov    %r15,(%rsp)
  0x00007fab7410b85b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7410b865: movabs $0x7fab7410b805,%rsi  ;   {internal_word}
  0x00007fab7410b86f: mov    %rsp,%rdx
  0x00007fab7410b872: and    $0xfffffffffffffff0,%rsp
  0x00007fab7410b876: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7410b87b: hlt    
[Deopt Handler Code]
  0x00007fab7410b87c: movabs $0x7fab7410b87c,%r10  ;   {section_word}
  0x00007fab7410b886: push   %r10
  0x00007fab7410b888: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7410b88d: hlt    
  0x00007fab7410b88e: hlt    
  0x00007fab7410b88f: hlt    
<nmethod compile_id='3' compiler='C1' level='3' entry='0x00007fab7410b080' size='3240' address='0x00007fab7410aed0' relocation_offset='312' insts_offset='432' stub_offset='2352' scopes_data_offset='2504' scopes_pcs_offset='2720' dependencies_offset='3200' nul_chk_table_offset='3208' metadata_offset='2496' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='394' backedge_count='1323' iicount='394' stamp='0.049'/>
<writer thread='140374823413504'/>
----------------------------------------------------------------------
java/lang/System.arraycopy  [0x00007fab7410bd20, 0x00007fab7410bf28]  520 bytes
[Entry Point]
  # {method} {0x00007fab618ae750} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x00007fab7410bd20: mov    0x8(%rsi),%r10d
  0x00007fab7410bd24: shl    $0x3,%r10
  0x00007fab7410bd28: cmp    %r10,%rax
  0x00007fab7410bd2b: je     0x00007fab7410bd38
  0x00007fab7410bd31: jmpq   0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7410bd36: xchg   %ax,%ax
[Verified Entry Point]
  0x00007fab7410bd38: mov    %eax,-0x14000(%rsp)
  0x00007fab7410bd3f: push   %rbp
  0x00007fab7410bd40: mov    %rsp,%rbp
  0x00007fab7410bd43: sub    $0x50,%rsp
  0x00007fab7410bd47: mov    %r9,(%rsp)
  0x00007fab7410bd4b: mov    %r8,%r9
  0x00007fab7410bd4e: mov    %rcx,0x18(%rsp)
  0x00007fab7410bd53: cmp    $0x0,%rcx
  0x00007fab7410bd57: lea    0x18(%rsp),%r8
  0x00007fab7410bd5c: cmove  0x18(%rsp),%r8
  0x00007fab7410bd62: mov    %rdx,%rcx
  0x00007fab7410bd65: mov    %rsi,0x8(%rsp)
  0x00007fab7410bd6a: cmp    $0x0,%rsi
  0x00007fab7410bd6e: lea    0x8(%rsp),%rdx
  0x00007fab7410bd73: cmove  0x8(%rsp),%rdx
  0x00007fab7410bd79: movabs $0x670b80c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007fab7410bd83: mov    %r14,0x38(%rsp)
  0x00007fab7410bd88: lea    0x38(%rsp),%r14
  0x00007fab7410bd8d: mov    %r14,%rsi          ; OopMap{[24]=Oop [8]=Oop [56]=Oop off=112}
  0x00007fab7410bd90: movabs $0x7fab7410bd90,%r10  ;   {section_word}
  0x00007fab7410bd9a: mov    %r10,0x1c8(%r15)
  0x00007fab7410bda1: mov    %rsp,0x1c0(%r15)
  0x00007fab7410bda8: cmpb   $0x0,0x1a868c25(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab7410bdaf: je     0x00007fab7410bdf3
  0x00007fab7410bdb5: push   %rsi
  0x00007fab7410bdb6: push   %rdx
  0x00007fab7410bdb7: push   %rcx
  0x00007fab7410bdb8: push   %r8
  0x00007fab7410bdba: push   %r9
  0x00007fab7410bdbc: movabs $0x7fab618ae750,%rsi  ;   {metadata({method} {0x00007fab618ae750} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00007fab7410bdc6: mov    %r15,%rdi
  0x00007fab7410bdc9: test   $0xf,%esp
  0x00007fab7410bdcf: je     0x00007fab7410bde7
  0x00007fab7410bdd5: sub    $0x8,%rsp
  0x00007fab7410bdd9: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab7410bdde: add    $0x8,%rsp
  0x00007fab7410bde2: jmpq   0x00007fab7410bdec
  0x00007fab7410bde7: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab7410bdec: pop    %r9
  0x00007fab7410bdee: pop    %r8
  0x00007fab7410bdf0: pop    %rcx
  0x00007fab7410bdf1: pop    %rdx
  0x00007fab7410bdf2: pop    %rsi
  0x00007fab7410bdf3: lea    0x1e0(%r15),%rdi
  0x00007fab7410bdfa: movl   $0x4,0x258(%r15)
  0x00007fab7410be05: callq  0x00007fab8e077a00  ;   {runtime_call}
  0x00007fab7410be0a: vzeroupper 
  0x00007fab7410be0d: movl   $0x5,0x258(%r15)
  0x00007fab7410be18: mov    %r15d,%ecx
  0x00007fab7410be1b: shr    $0x4,%ecx
  0x00007fab7410be1e: and    $0xffc,%ecx
  0x00007fab7410be24: movabs $0x7fab8f7e1000,%r10  ;   {external_word}
  0x00007fab7410be2e: mov    %ecx,(%r10,%rcx,1)
  0x00007fab7410be32: cmpl   $0x0,0x1a873b80(%rip)        # 0x00007fab8e97f9bc
                                                ;   {external_word}
  0x00007fab7410be3c: jne    0x00007fab7410be50
  0x00007fab7410be42: cmpl   $0x0,0x30(%r15)
  0x00007fab7410be4a: je     0x00007fab7410be69
  0x00007fab7410be50: mov    %r15,%rdi
  0x00007fab7410be53: mov    %rsp,%r12
  0x00007fab7410be56: sub    $0x0,%rsp
  0x00007fab7410be5a: and    $0xfffffffffffffff0,%rsp
  0x00007fab7410be5e: callq  0x00007fab8e40fc20  ;   {runtime_call}
  0x00007fab7410be63: mov    %r12,%rsp
  0x00007fab7410be66: xor    %r12,%r12
  0x00007fab7410be69: movl   $0x8,0x258(%r15)
  0x00007fab7410be74: cmpl   $0x1,0x2b0(%r15)
  0x00007fab7410be7f: je     0x00007fab7410bf07
  0x00007fab7410be85: cmpb   $0x0,0x1a868b48(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab7410be8c: je     0x00007fab7410bec2
  0x00007fab7410be92: movabs $0x7fab618ae750,%rsi  ;   {metadata({method} {0x00007fab618ae750} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00007fab7410be9c: mov    %r15,%rdi
  0x00007fab7410be9f: test   $0xf,%esp
  0x00007fab7410bea5: je     0x00007fab7410bebd
  0x00007fab7410beab: sub    $0x8,%rsp
  0x00007fab7410beaf: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab7410beb4: add    $0x8,%rsp
  0x00007fab7410beb8: jmpq   0x00007fab7410bec2
  0x00007fab7410bebd: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab7410bec2: movabs $0x0,%r10
  0x00007fab7410becc: mov    %r10,0x1c0(%r15)
  0x00007fab7410bed3: movabs $0x0,%r10
  0x00007fab7410bedd: mov    %r10,0x1c8(%r15)
  0x00007fab7410bee4: mov    0x38(%r15),%rcx
  0x00007fab7410bee8: movl   $0x0,0x100(%rcx)
  0x00007fab7410bef2: leaveq 
  0x00007fab7410bef3: cmpq   $0x0,0x8(%r15)
  0x00007fab7410befb: jne    0x00007fab7410bf02
  0x00007fab7410bf01: retq   
  0x00007fab7410bf02: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00007fab7410bf07: mov    %rsp,%r12
  0x00007fab7410bf0a: sub    $0x0,%rsp
  0x00007fab7410bf0e: and    $0xfffffffffffffff0,%rsp
  0x00007fab7410bf12: callq  0x00007fab8e372120  ;   {runtime_call}
  0x00007fab7410bf17: mov    %r12,%rsp
  0x00007fab7410bf1a: xor    %r12,%r12
  0x00007fab7410bf1d: jmpq   0x00007fab7410be85
  0x00007fab7410bf22: hlt    
  0x00007fab7410bf23: hlt    
  0x00007fab7410bf24: hlt    
  0x00007fab7410bf25: hlt    
  0x00007fab7410bf26: hlt    
  0x00007fab7410bf27: hlt    
<nmethod compile_id='8' compile_kind='c2n' level='0' entry='0x00007fab7410bd20' size='920' address='0x00007fab7410bb90' relocation_offset='312' consts_offset='920' insts_offset='400' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='640' iicount='640' stamp='0.049'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/String.indexOf  [0x00007fab7410c0e0, 0x00007fab7410c468]  904 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61897018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fab7410c0e0: mov    0x8(%rsi),%r10d
  0x00007fab7410c0e4: shl    $0x3,%r10
  0x00007fab7410c0e8: cmp    %rax,%r10
  0x00007fab7410c0eb: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7410c0f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7410c0fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7410c100: mov    %eax,-0x14000(%rsp)
  0x00007fab7410c107: push   %rbp
  0x00007fab7410c108: sub    $0x30,%rsp
  0x00007fab7410c10c: movabs $0x7fab61ac57a8,%rax  ;   {metadata(method data for {method} {0x00007fab61897018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410c116: mov    0xfc(%rax),%edi
  0x00007fab7410c11c: add    $0x8,%edi
  0x00007fab7410c11f: mov    %edi,0xfc(%rax)
  0x00007fab7410c125: movabs $0x7fab61897018,%rax  ;   {metadata({method} {0x00007fab61897018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410c12f: and    $0x1ff8,%edi
  0x00007fab7410c135: cmp    $0x0,%edi
  0x00007fab7410c138: je     0x00007fab7410c341  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@0 (line 1546)

  0x00007fab7410c13e: 
<writer thread='140374823413504'/>
[Loaded sun.misc.URLClassPath$FileLoader from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
mov    0xc(%rsi),%eax
  0x00007fab7410c141: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x00007fab7410c145: mov    0xc(%rax),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x00007fab7410c358
  0x00007fab7410c148: cmp    $0x0,%ecx
  0x00007fab7410c14b: movabs $0x7fab61ac57a8,%rbx  ;   {metadata(method data for {method} {0x00007fab61897018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410c155: movabs $0x130,%r8
  0x00007fab7410c15f: jge    0x00007fab7410c16f
  0x00007fab7410c165: movabs $0x140,%r8
  0x00007fab7410c16f: mov    (%rbx,%r8,1),%r9
  0x00007fab7410c173: lea    0x1(%r9),%r9
  0x00007fab7410c177: mov    %r9,(%rbx,%r8,1)
  0x00007fab7410c17b: jge    0x00007fab7410c19b  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x00007fab7410c181: movabs $0x7fab61ac57a8,%rcx  ;   {metadata(method data for {method} {0x00007fab61897018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410c18b: incl   0x150(%rcx)
  0x00007fab7410c191: mov    $0x0,%ecx
  0x00007fab7410c196: jmpq   0x00007fab7410c1d3  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@12 (line 1548)

  0x00007fab7410c19b: cmp    %edi,%ecx
  0x00007fab7410c19d: movabs $0x7fab61ac57a8,%rbx  ;   {metadata(method data for {method} {0x00007fab61897018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410c1a7: movabs $0x168,%r8
  0x00007fab7410c1b1: jl     0x00007fab7410c1c1
  0x00007fab7410c1b7: movabs $0x178,%r8
  0x00007fab7410c1c1: mov    (%rbx,%r8,1),%r9
  0x00007fab7410c1c5: lea    0x1(%r9),%r9
  0x00007fab7410c1c9: mov    %r9,(%rbx,%r8,1)
  0x00007fab7410c1cd: jge    0x00007fab7410c330  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x00007fab7410c1d3: cmp    $0x10000,%edx
  0x00007fab7410c1d9: movabs $0x7fab61ac57a8,%rbx  ;   {metadata(method data for {method} {0x00007fab61897018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410c1e3: movabs $0x188,%r8
  0x00007fab7410c1ed: jge    0x00007fab7410c1fd
  0x00007fab7410c1f3: movabs $0x198,%r8
  0x00007fab7410c1fd: mov    (%rbx,%r8,1),%r9
  0x00007fab7410c201: lea    0x1(%r9),%r9
  0x00007fab7410c205: mov    %r9,(%rbx,%r8,1)
  0x00007fab7410c209: jge    0x00007fab7410c308
  0x00007fab7410c20f: jmpq   0x00007fab7410c2ab  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x00007fab7410c214: nopl   0x0(%rax)
  0x00007fab7410c218: movslq %ecx,%rsi
  0x00007fab7410c21b: cmp    0xc(%rax),%ecx
  0x00007fab7410c21e: jae    0x00007fab7410c35d
  0x00007fab7410c224: movzwl 0x10(%rax,%rsi,2),%esi  ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00007fab7410c229: cmp    %edx,%esi
  0x00007fab7410c22b: movabs $0x7fab61ac57a8,%rsi  ;   {metadata(method data for {method} {0x00007fab61897018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410c235: movabs $0x1c8,%rbx
  0x00007fab7410c23f: jne    0x00007fab7410c24f
  0x00007fab7410c245: movabs $0x1d8,%rbx
  0x00007fab7410c24f: mov    (%rsi,%rbx,1),%r8
  0x00007fab7410c253: lea    0x1(%r8),%r8
  0x00007fab7410c257: mov    %r8,(%rsi,%rbx,1)
  0x00007fab7410c25b: je     0x00007fab7410c2e8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00007fab7410c261: inc    %ecx
  0x00007fab7410c263: movabs $0x7fab61ac57a8,%rsi  ;   {metadata(method data for {method} {0x00007fab61897018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410c26d: mov    0x100(%rsi),%ebx
  0x00007fab7410c273: add    $0x8,%ebx
  0x00007fab7410c276: mov    %ebx,0x100(%rsi)
  0x00007fab7410c27c: movabs $0x7fab61897018,%rsi  ;   {metadata({method} {0x00007fab61897018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410c286: and    $0xfff8,%ebx
  0x00007fab7410c28c: cmp    $0x0,%ebx
  0x00007fab7410c28f: je     0x00007fab7410c366  ; OopMap{rax=Oop off=437}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x00007fab7410c295: test   %eax,0x1b6d5e65(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab7410c29b: movabs $0x7fab61ac57a8,%rsi  ;   {metadata(method data for {method} {0x00007fab61897018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410c2a5: incl   0x1e8(%rsi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x00007fab7410c2ab: cmp    %edi,%ecx
  0x00007fab7410c2ad: movabs $0x7fab61ac57a8,%rsi  ;   {metadata(method data for {method} {0x00007fab61897018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410c2b7: movabs $0x1a8,%rbx
  0x00007fab7410c2c1: jge    0x00007fab7410c2d1
  0x00007fab7410c2c7: movabs $0x1b8,%rbx
  0x00007fab7410c2d1: mov    (%rsi,%rbx,1),%r8
  0x00007fab7410c2d5: lea    0x1(%r8),%r8
  0x00007fab7410c2d9: mov    %r8,(%rsi,%rbx,1)
  0x00007fab7410c2dd: jge    0x00007fab7410c2f7
  0x00007fab7410c2e3: jmpq   0x00007fab7410c218  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00007fab7410c2e8: mov    %rcx,%rax
  0x00007fab7410c2eb: add    $0x30,%rsp
  0x00007fab7410c2ef: pop    %rbp
  0x00007fab7410c2f0: test   %eax,0x1b6d5e0a(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7410c2f6: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@54 (line 1560)

  0x00007fab7410c2f7: mov    $0xffffffff,%eax
  0x00007fab7410c2fc: add    $0x30,%rsp
  0x00007fab7410c300: pop    %rbp
  0x00007fab7410c301: test   %eax,0x1b6d5df9(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7410c307: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@62 (line 1563)

  0x00007fab7410c308: mov    %rsi,%rdi
  0x00007fab7410c30b: movabs $0x7fab61ac57a8,%rbx  ;   {metadata(method data for {method} {0x00007fab61897018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410c315: addq   $0x1,0x200(%rbx)
  0x00007fab7410c31d: nop
  0x00007fab7410c31e: nop
  0x00007fab7410c31f: callq  0x00007fab74047d60  ; OopMap{off=580}
                                                ;*invokespecial indexOfSupplementary {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@66 (line 1565)
                                                ;   {optimized virtual_call}
  0x00007fab7410c324: add    $0x30,%rsp
  0x00007fab7410c328: pop    %rbp
  0x00007fab7410c329: test   %eax,0x1b6d5dd1(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7410c32f: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@69 (line 1565)

  0x00007fab7410c330: mov    $0xffffffff,%eax
  0x00007fab7410c335: add    $0x30,%rsp
  0x00007fab7410c339: pop    %rbp
  0x00007fab7410c33a: test   %eax,0x1b6d5dc0(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7410c340: retq   
  0x00007fab7410c341: mov    %rax,0x8(%rsp)
  0x00007fab7410c346: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7410c34e: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=627}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)
                                                ;   {runtime_call}
  0x00007fab7410c353: jmpq   0x00007fab7410c13e
  0x00007fab7410c358: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rax=Oop off=637}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x00007fab7410c35d: mov    %rcx,(%rsp)
  0x00007fab7410c361: callq  0x00007fab740fb940  ; OopMap{rax=Oop off=646}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x00007fab7410c366: mov    %rsi,0x8(%rsp)
  0x00007fab7410c36b: movq   $0x3a,(%rsp)
  0x00007fab7410c373: callq  0x00007fab741005e0  ; OopMap{rax=Oop off=664}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@58 (line 1558)
                                                ;   {runtime_call}
  0x00007fab7410c378: jmpq   0x00007fab7410c295
  0x00007fab7410c37d: nop
  0x00007fab7410c37e: nop
  0x00007fab7410c37f: mov    0x2c0(%r15),%rax
  0x00007fab7410c386: movabs $0x0,%r10
  0x00007fab7410c390: mov    %r10,0x2c0(%r15)
  0x00007fab7410c397: movabs $0x0,%r10
  0x00007fab7410c3a1: mov    %r10,0x2c8(%r15)
  0x00007fab7410c3a8: add    $0x30,%rsp
  0x00007fab7410c3ac: pop    %rbp
  0x00007fab7410c3ad: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7410c3b2: hlt    
  0x00007fab7410c3b3: hlt    
  0x00007fab7410c3b4: hlt    
  0x00007fab7410c3b5: hlt    
  0x00007fab7410c3b6: hlt    
  0x00007fab7410c3b7: hlt    
  0x00007fab7410c3b8: hlt    
  0x00007fab7410c3b9: hlt    
  0x00007fab7410c3ba: hlt    
  0x00007fab7410c3bb: hlt    
  0x00007fab7410c3bc: hlt    
  0x00007fab7410c3bd: hlt    
  0x00007fab7410c3be: hlt    
  0x00007fab7410c3bf: hlt    
[Stub Code]
  0x00007fab7410c3c0: nop                       ;   {no_reloc}
  0x00007fab7410c3c1: nop
  0x00007fab7410c3c2: nop
  0x00007fab7410c3c3: nop
  0x00007fab7410c3c4: nop
  0x00007fab7410c3c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7410c3cf: jmpq   0x00007fab7410c3cf  ;   {runtime_call}
[Exception Handler]
  0x00007fab7410c3d4: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab7410c3d9: mov    %rsp,-0x28(%rsp)
  0x00007fab7410c3de: sub    $0x80,%rsp
  0x00007fab7410c3e5: mov    %rax,0x78(%rsp)
  0x00007fab7410c3ea: mov    %rcx,0x70(%rsp)
  0x00007fab7410c3ef: mov    %rdx,0x68(%rsp)
  0x00007fab7410c3f4: mov    %rbx,0x60(%rsp)
  0x00007fab7410c3f9: mov    %rbp,0x50(%rsp)
  0x00007fab7410c3fe: mov    %rsi,0x48(%rsp)
  0x00007fab7410c403: mov    %rdi,0x40(%rsp)
  0x00007fab7410c408: mov    %r8,0x38(%rsp)
  0x00007fab7410c40d: mov    %r9,0x30(%rsp)
  0x00007fab7410c412: mov    %r10,0x28(%rsp)
  0x00007fab7410c417: mov    %r11,0x20(%rsp)
  0x00007fab7410c41c: mov    %r12,0x18(%rsp)
  0x00007fab7410c421: mov    %r13,0x10(%rsp)
  0x00007fab7410c426: mov    %r14,0x8(%rsp)
  0x00007fab7410c42b: mov    %r15,(%rsp)
  0x00007fab7410c42f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7410c439: movabs $0x7fab7410c3d9,%rsi  ;   {internal_word}
  0x00007fab7410c443: mov    %rsp,%rdx
  0x00007fab7410c446: and    $0xfffffffffffffff0,%rsp
  0x00007fab7410c44a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7410c44f: hlt    
[Deopt Handler Code]
  0x00007fab7410c450: movabs $0x7fab7410c450,%r10  ;   {section_word}
  0x00007fab7410c45a: push   %r10
  0x00007fab7410c45c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7410c461: hlt    
  0x00007fab7410c462: hlt    
  0x00007fab7410c463: hlt    
  0x00007fab7410c464: hlt    
  0x00007fab7410c465: hlt    
  0x00007fab7410c466: hlt    
  0x00007fab7410c467: hlt    
<nmethod compile_id='6' compiler='C1' level='3' entry='0x00007fab7410c0e0' size='1848' address='0x00007fab7410bf50' relocation_offset='312' insts_offset='400' stub_offset='1136' scopes_data_offset='1312' scopes_pcs_offset='1472' dependencies_offset='1824' nul_chk_table_offset='1832' metadata_offset='1304' method='java/lang/String indexOf (II)I' bytes='70' count='189' backedge_count='6397' iicount='189' stamp='0.051'/>
----------------------------------------------------------------------
java/lang/String.charAt  [0x00007fab7410c860, 0x00007fab7410cac8]  616 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab618956b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fab7410c860: mov    0x8(%rsi),%r10d
  0x00007fab7410c864: shl    $0x3,%r10
  0x00007fab7410c868: cmp    %rax,%r10
  0x00007fab7410c86b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7410c871: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7410c87c: data16 data16 
<writer thread='140374823413504'/>
[Loaded sun.misc.Resource from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7410c880: mov    %eax,-0x14000(%rsp)
  0x00007fab7410c887: push   %rbp
  0x00007fab7410c888: sub    $0x30,%rsp
  0x00007fab7410c88c: mov    %rdx,%rdi
  0x00007fab7410c88f: movabs $0x7fab61a543b8,%rax  ;   {metadata(method data for {method} {0x00007fab618956b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410c899: mov    0xfc(%rax),%edx
  0x00007fab7410c89f: add    $0x8,%edx
  0x00007fab7410c8a2: mov    %edx,0xfc(%rax)
  0x00007fab7410c8a8: movabs $0x7fab618956b0,%rax  ;   {metadata({method} {0x00007fab618956b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410c8b2: and    $0x1ff8,%edx
  0x00007fab7410c8b8: cmp    $0x0,%edx
  0x00007fab7410c8bb: je     0x00007fab7410c996  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@0 (line 657)

  0x00007fab7410c8c1: cmp    $0x0,%edi
  0x00007fab7410c8c4: movabs $0x7fab61a543b8,%rax  ;   {metadata(method data for {method} {0x00007fab618956b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410c8ce: movabs $0x130,%rdx
  0x00007fab7410c8d8: jl     0x00007fab7410c8e8
  0x00007fab7410c8de: movabs $0x140,%rdx
  0x00007fab7410c8e8: mov    (%rax,%rdx,1),%rbx
  0x00007fab7410c8ec: lea    0x1(%rbx),%rbx
  0x00007fab7410c8f0: mov    %rbx,(%rax,%rdx,1)
  0x00007fab7410c8f4: jl     0x00007fab7410c956  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@1 (line 657)

  0x00007fab7410c8fa: mov    0xc(%rsi),%eax
  0x00007fab7410c8fd: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@6 (line 657)

  0x00007fab7410c901: mov    0xc(%rax),%edx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x00007fab7410c9ad
  0x00007fab7410c904: cmp    %edx,%edi
  0x00007fab7410c906: movabs $0x7fab61a543b8,%rdx  ;   {metadata(method data for {method} {0x00007fab618956b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410c910: movabs $0x150,%rsi
  0x00007fab7410c91a: jl     0x00007fab7410c92a
  0x00007fab7410c920: movabs $0x160,%rsi
  0x00007fab7410c92a: mov    (%rdx,%rsi,1),%rbx
  0x00007fab7410c92e: lea    0x1(%rbx),%rbx
  0x00007fab7410c932: mov    %rbx,(%rdx,%rsi,1)
  0x00007fab7410c936: jge    0x00007fab7410c956  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@10 (line 657)

  0x00007fab7410c93c: movslq %edi,%rdi
  0x00007fab7410c93f: movzwl 0x10(%rax,%rdi,2),%eax  ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@27 (line 660)

  0x00007fab7410c944: and    $0xffff,%eax
  0x00007fab7410c94a: add    $0x30,%rsp
  0x00007fab7410c94e: pop    %rbp
  0x00007fab7410c94f: test   %eax,0x1b6d57ab(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7410c955: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@28 (line 660)

  0x00007fab7410c956: xchg   %ax,%ax
  0x00007fab7410c958: jmpq   0x00007fab7410c9c1  ;   {no_reloc}
  0x00007fab7410c95d: add    %al,(%rax)
  0x00007fab7410c95f: add    %al,(%rax)
  0x00007fab7410c961: add    %ch,%cl
  0x00007fab7410c963: add    %al,%fs:(%rax)
  0x00007fab7410c966: add    %cl,-0x75(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@13 (line 658)

  0x00007fab7410c969: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00007fab618956b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410c96c: mov    $0xab61a543,%eax
  0x00007fab7410c971: jg     0x00007fab7410c973
  0x00007fab7410c973: add    %cl,-0x7d(%rax)
  0x00007fab7410c976: xchg   %dh,0x1(%rax)
  0x00007fab7410c979: add    %al,(%rax)
  0x00007fab7410c97b: add    %ecx,-0x75(%rax)
  0x00007fab7410c97e: xlat   %ds:(%rbx)
  0x00007fab7410c97f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@18 (line 658)

  0x00007fab7410c982: mov    %rax,0x20(%rsp)
  0x00007fab7410c987: callq  0x00007fab74047d60  ; OopMap{[32]=Oop off=300}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ;   {optimized virtual_call}
  0x00007fab7410c98c: mov    0x20(%rsp),%rax
  0x00007fab7410c991: jmpq   0x00007fab7410ca00
  0x00007fab7410c996: mov    %rax,0x8(%rsp)
  0x00007fab7410c99b: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7410c9a3: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=328}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ;   {runtime_call}
  0x00007fab7410c9a8: jmpq   0x00007fab7410c8c1
  0x00007fab7410c9ad: callq  0x00007fab740fc000  ; OopMap{rax=Oop off=338}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x00007fab7410c9b2: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab7410c9bc: mov    $0xa050f00,%eax
  0x00007fab7410c9c1: callq  0x00007fab740ff5e0  ; OopMap{off=358}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x00007fab7410c9c6: jmp    0x00007fab7410c958
  0x00007fab7410c9c8: nop
  0x00007fab7410c9c9: nop
  0x00007fab7410c9ca: nop
  0x00007fab7410c9cb: mov    %rdx,%rdx
  0x00007fab7410c9ce: callq  0x00007fab740fc4a0  ; OopMap{off=371}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x00007fab7410c9d3: jmp    0x00007fab7410c967
  0x00007fab7410c9d5: nop
  0x00007fab7410c9d6: nop
  0x00007fab7410c9d7: mov    0x2c0(%r15),%rax
  0x00007fab7410c9de: movabs $0x0,%r10
  0x00007fab7410c9e8: mov    %r10,0x2c0(%r15)
  0x00007fab7410c9ef: movabs $0x0,%r10
  0x00007fab7410c9f9: mov    %r10,0x2c8(%r15)
  0x00007fab7410ca00: add    $0x30,%rsp
  0x00007fab7410ca04: pop    %rbp
  0x00007fab7410ca05: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7410ca0a: hlt    
  0x00007fab7410ca0b: hlt    
  0x00007fab7410ca0c: hlt    
  0x00007fab7410ca0d: hlt    
  0x00007fab7410ca0e: hlt    
  0x00007fab7410ca0f: hlt    
  0x00007fab7410ca10: hlt    
  0x00007fab7410ca11: hlt    
  0x00007fab7410ca12: hlt    
  0x00007fab7410ca13: hlt    
  0x00007fab7410ca14: hlt    
  0x00007fab7410ca15: hlt    
  0x00007fab7410ca16: hlt    
  0x00007fab7410ca17: hlt    
  0x00007fab7410ca18: hlt    
  0x00007fab7410ca19: hlt    
  0x00007fab7410ca1a: hlt    
  0x00007fab7410ca1b: hlt    
  0x00007fab7410ca1c: hlt    
  0x00007fab7410ca1d: hlt    
  0x00007fab7410ca1e: hlt    
  0x00007fab7410ca1f: hlt    
[Stub Code]
  0x00007fab7410ca20: nop                       ;   {no_reloc}
  0x00007fab7410ca21: nop
  0x00007fab7410ca22: nop
  0x00007fab7410ca23: nop
  0x00007fab7410ca24: nop
  0x00007fab7410ca25: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7410ca2f: jmpq   0x00007fab7410ca2f  ;   {runtime_call}
[Exception Handler]
  0x00007fab7410ca34: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab7410ca39: mov    %rsp,-0x28(%rsp)
  0x00007fab7410ca3e: sub    $0x80,%rsp
  0x00007fab7410ca45: mov    %rax,0x78(%rsp)
  0x00007fab7410ca4a: mov    %rcx,0x70(%rsp)
  0x00007fab7410ca4f: mov    %rdx,0x68(%rsp)
  0x00007fab7410ca54: mov    %rbx,0x60(%rsp)
  0x00007fab7410ca59: mov    %rbp,0x50(%rsp)
  0x00007fab7410ca5e: mov    %rsi,0x48(%rsp)
  0x00007fab7410ca63: mov    %rdi,0x40(%rsp)
  0x00007fab7410ca68: mov    %r8,0x38(%rsp)
  0x00007fab7410ca6d: mov    %r9,0x30(%rsp)
  0x00007fab7410ca72: mov    %r10,0x28(%rsp)
  0x00007fab7410ca77: mov    %r11,0x20(%rsp)
  0x00007fab7410ca7c: mov    %r12,0x18(%rsp)
  0x00007fab7410ca81: mov    %r13,0x10(%rsp)
  0x00007fab7410ca86: mov    %r14,0x8(%rsp)
  0x00007fab7410ca8b: mov    %r15,(%rsp)
  0x00007fab7410ca8f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7410ca99: movabs $0x7fab7410ca39,%rsi  ;   {internal_word}
  0x00007fab7410caa3: mov    %rsp,%rdx
  0x00007fab7410caa6: and    $0xfffffffffffffff0,%rsp
  0x00007fab7410caaa: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7410caaf: hlt    
[Deopt Handler Code]
  0x00007fab7410cab0: movabs $0x7fab7410cab0,%r10  ;   {section_word}
  0x00007fab7410caba: push   %r10
  0x00007fab7410cabc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7410cac1: hlt    
  0x00007fab7410cac2: hlt    
  0x00007fab7410cac3: hlt    
  0x00007fab7410cac4: hlt    
  0x00007fab7410cac5: hlt    
  0x00007fab7410cac6: hlt    
  0x00007fab7410cac7: hlt    
<nmethod compile_id='5' compiler='C1' level='3' entry='0x00007fab7410c860' size='1408' address='0x00007fab7410c6d0' relocation_offset='312' insts_offset='400' stub_offset='848' scopes_data_offset='1024' scopes_pcs_offset='1128' dependencies_offset='1384' nul_chk_table_offset='1392' metadata_offset='1016' method='java/lang/String charAt (I)C' bytes='29' count='2936' iicount='2936' stamp='0.052'/>
<writer thread='140374823413504'/>
[Loaded sun.misc.URLClassPath$FileLoader$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/Object.&lt;init&gt;  [0x00007fab7410ce00, 0x00007fab7410cf50]  336 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab7410ce00: mov    0x8(%rsi),%r10d
  0x00007fab7410ce04: shl    $0x3,%r10
  0x00007fab7410ce08: cmp    %rax,%r10
  0x00007fab7410ce0b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7410ce11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7410ce1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7410ce20: mov    %eax,-0x14000(%rsp)
  0x00007fab7410ce27: push   %rbp
  0x00007fab7410ce28: sub    $0x30,%rsp
  0x00007fab7410ce2c: movabs $0x7fab61a342a0,%rdi  ;   {metadata(method data for {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
<writer thread='140374823413504'/>
[Loaded java.lang.Package from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
  0x00007fab7410ce36: mov    0xfc(%rdi),%ebx
  0x00007fab7410ce3c: add    $0x8,%ebx
  0x00007fab7410ce3f: mov    %ebx,0xfc(%rdi)
  0x00007fab7410ce45: movabs $0x7fab618914d8,%rdi  ;   {metadata({method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7410ce4f: and    $0x1ff8,%ebx
  0x00007fab7410ce55: cmp    $0x0,%ebx
  0x00007fab7410ce58: je     0x00007fab7410ce77
  0x00007fab7410ce5e: mov    %rsi,%rdi          ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x00007fab7410ce61: mov    %rsi,0x20(%rsp)
  0x00007fab7410ce66: callq  0x00007fab740fc220  ; OopMap{[32]=Oop off=107}
                                                ;*return {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x00007fab7410ce6b: add    $0x30,%rsp
  0x00007fab7410ce6f: pop    %rbp
  0x00007fab7410ce70: test   %eax,0x1b6d528a(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7410ce76: retq   
  0x00007fab7410ce77: mov    %rdi,0x8(%rsp)
  0x00007fab7410ce7c: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7410ce84: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ;   {runtime_call}
  0x00007fab7410ce89: jmp    0x00007fab7410ce5e
  0x00007fab7410ce8b: nop
  0x00007fab7410ce8c: nop
  0x00007fab7410ce8d: mov    0x2c0(%r15),%rax
  0x00007fab7410ce94: movabs $0x0,%r10
  0x00007fab7410ce9e: mov    %r10,0x2c0(%r15)
  0x00007fab7410cea5: movabs $0x0,%r10
  0x00007fab7410ceaf: mov    %r10,0x2c8(%r15)
  0x00007fab7410ceb6: add    $0x30,%rsp
  0x00007fab7410ceba: pop    %rbp
  0x00007fab7410cebb: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x00007fab7410cec0: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7410cec5: mov    %rsp,-0x28(%rsp)
  0x00007fab7410ceca: sub    $0x80,%rsp
  0x00007fab7410ced1: mov    %rax,0x78(%rsp)
  0x00007fab7410ced6: mov    %rcx,0x70(%rsp)
  0x00007fab7410cedb: mov    %rdx,0x68(%rsp)
  0x00007fab7410cee0: mov    %rbx,0x60(%rsp)
  0x00007fab7410cee5: mov    %rbp,0x50(%rsp)
  0x00007fab7410ceea: mov    %rsi,0x48(%rsp)
  0x00007fab7410ceef: mov    %rdi,0x40(%rsp)
  0x00007fab7410cef4: mov    %r8,0x38(%rsp)
  0x00007fab7410cef9: mov    %r9,0x30(%rsp)
  0x00007fab7410cefe: mov    %r10,0x28(%rsp)
  0x00007fab7410cf03: mov    %r11,0x20(%rsp)
  0x00007fab7410cf08: mov    %r12,0x18(%rsp)
  0x00007fab7410cf0d: mov    %r13,0x10(%rsp)
  0x00007fab7410cf12: mov    %r14,0x8(%rsp)
  0x00007fab7410cf17: mov    %r15,(%rsp)
  0x00007fab7410cf1b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7410cf25: movabs $0x7fab7410cec5,%rsi  ;   {internal_word}
  0x00007fab7410cf2f: mov    %rsp,%rdx
  0x00007fab7410cf32: and    $0xfffffffffffffff0,%rsp
  0x00007fab7410cf36: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7410cf3b: hlt    
[Deopt Handler Code]
  0x00007fab7410cf3c: movabs $0x7fab7410cf3c,%r10  ;   {section_word}
  0x00007fab7410cf46: push   %r10
  0x00007fab7410cf48: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7410cf4d: hlt    
  0x00007fab7410cf4e: hlt    
  0x00007fab7410cf4f: hlt    
<nmethod compile_id='4' compiler='C1' level='3' entry='0x00007fab7410ce00' size='832' address='0x00007fab7410cc90' relocation_offset='312' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='744' dependencies_offset='824' metadata_offset='704' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1669' iicount='1669' stamp='0.053'/>
----------------------------------------------------------------------
java/lang/Math.min  [0x00007fab7410d180, 0x00007fab7410d310]  400 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           
<writer thread='140374823413504'/>
[Loaded sun.nio.ByteBuffered from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
[sp+0x40]  (sp of caller)
  0x00007fab7410d180: mov    %eax,-0x14000(%rsp)
  0x00007fab7410d187: push   %rbp
  0x00007fab7410d188: sub    $0x30,%rsp
  0x00007fab7410d18c: movabs $0x7fab61a9c058,%rax  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7410d196: mov    0xfc(%rax),%edi
  0x00007fab7410d19c: add    $0x8,%edi
  0x00007fab7410d19f: mov    %edi,0xfc(%rax)
  0x00007fab7410d1a5: movabs $0x7fab619a58b8,%rax  ;   {metadata({method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7410d1af: and    $0x1ff8,%edi
  0x00007fab7410d1b5: cmp    $0x0,%edi
  0x00007fab7410d1b8: je     0x00007fab7410d21d  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@0 (line 1336)

  0x00007fab7410d1be: cmp    %edx,%esi
  0x00007fab7410d1c0: movabs $0x7fab61a9c058,%rax  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7410d1ca: movabs $0x130,%rdi
  0x00007fab7410d1d4: jg     0x00007fab7410d1e4
  0x00007fab7410d1da: movabs $0x140,%rdi
  0x00007fab7410d1e4: mov    (%rax,%rdi,1),%rbx
  0x00007fab7410d1e8: lea    0x1(%rbx),%rbx
  0x00007fab7410d1ec: mov    %rbx,(%rax,%rdi,1)
  0x00007fab7410d1f0: jg     0x00007fab7410d20b  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)

  0x00007fab7410d1f6: movabs $0x7fab61a9c058,%rax  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7410d200: incl   0x150(%rax)
  0x00007fab7410d206: jmpq   0x00007fab7410d20e  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)

  0x00007fab7410d20b: mov    %rdx,%rsi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1336)

  0x00007fab7410d20e: mov    %rsi,%rax
  0x00007fab7410d211: add    $0x30,%rsp
  0x00007fab7410d215: pop    %rbp
  0x00007fab7410d216: test   %eax,0x1b6d4ee4(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7410d21c: retq   
  0x00007fab7410d21d: mov    %rax,0x8(%rsp)
  0x00007fab7410d222: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7410d22a: callq  0x00007fab741005e0  ; OopMap{off=175}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x00007fab7410d22f: jmp    0x00007fab7410d1be
  0x00007fab7410d231: nop
  0x00007fab7410d232: nop
  0x00007fab7410d233: mov    0x2c0(%r15),%rax
  0x00007fab7410d23a: movabs $0x0,%r10
  0x00007fab7410d244: mov    %r10,0x2c0(%r15)
  0x00007fab7410d24b: movabs $0x0,%r10
  0x00007fab7410d255: mov    %r10,0x2c8(%r15)
  0x00007fab7410d25c: add    $0x30,%rsp
  0x00007fab7410d260: pop    %rbp
  0x00007fab7410d261: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7410d266: hlt    
  0x00007fab7410d267: hlt    
  0x00007fab7410d268: hlt    
  0x00007fab7410d269: hlt    
  0x00007fab7410d26a: hlt    
  0x00007fab7410d26b: hlt    
  0x00007fab7410d26c: hlt    
  0x00007fab7410d26d: hlt    
  0x00007fab7410d26e: hlt    
  0x00007fab7410d26f: hlt    
  0x00007fab7410d270: hlt    
  0x00007fab7410d271: hlt    
  0x00007fab7410d272: hlt    
  0x00007fab7410d273: hlt    
  0x00007fab7410d274: hlt    
  0x00007fab7410d275: hlt    
  0x00007fab7410d276: hlt    
  0x00007fab7410d277: hlt    
  0x00007fab7410d278: hlt    
  0x00007fab7410d279: hlt    
  0x00007fab7410d27a: hlt    
  0x00007fab7410d27b: hlt    
  0x00007fab7410d27c: hlt    
  0x00007fab7410d27d: hlt    
  0x00007fab7410d27e: hlt    
  0x00007fab7410d27f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab7410d280: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7410d285: mov    %rsp,-0x28(%rsp)
  0x00007fab7410d28a: sub    $0x80,%rsp
  0x00007fab7410d291: mov    %rax,0x78(%rsp)
  0x00007fab7410d296: mov    %rcx,0x70(%rsp)
  0x00007fab7410d29b: mov    %rdx,0x68(%rsp)
  0x00007fab7410d2a0: mov    %rbx,0x60(%rsp)
  0x00007fab7410d2a5: mov    %rbp,0x50(%rsp)
  0x00007fab7410d2aa: mov    %rsi,0x48(%rsp)
  0x00007fab7410d2af: mov    %rdi,0x40(%rsp)
  0x00007fab7410d2b4: mov    %r8,0x38(%rsp)
  0x00007fab7410d2b9: mov    %r9,0x30(%rsp)
  0x00007fab7410d2be: mov    %r10,0x28(%rsp)
  0x00007fab7410d2c3: mov    %r11,0x20(%rsp)
  0x00007fab7410d2c8: mov    %r12,0x18(%rsp)
  0x00007fab7410d2cd: mov    %r13,0x10(%rsp)
  0x00007fab7410d2d2: mov    %r14,0x8(%rsp)
  0x00007fab7410d2d7: mov    %r15,(%rsp)
  0x00007fab7410d2db: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7410d2e5: movabs $0x7fab7410d285,%rsi  ;   {internal_word}
  0x00007fab7410d2ef: mov    %rsp,%rdx
  0x00007fab7410d2f2: and    $0xfffffffffffffff0,%rsp
  0x00007fab7410d2f6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7410d2fb: hlt    
[Deopt Handler Code]
  0x00007fab7410d2fc: movabs $0x7fab7410d2fc,%r10  ;   {section_word}
  0x00007fab7410d306: push   %r10
  0x00007fab7410d308: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7410d30d: hlt    
  0x00007fab7410d30e: hlt    
  0x00007fab7410d30f: hlt    
<nmethod compile_id='7' compiler='C1' level='3' entry='0x00007fab7410d180' size='936' address='0x00007fab7410d010' relocation_offset='312' insts_offset='368' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='816' dependencies_offset='928' metadata_offset='768' method='java/lang/Math min (II)I' bytes='11' count='726' iicount='726' stamp='0.054'/>
<writer thread='140374823413504'/>
[Loaded sun.misc.PerfCounter from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.Perf$GetPerfAction from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.Perf from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.PerfCounter$CoreCounters from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.ch.DirectBuffer from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.MappedByteBuffer from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.DirectByteBuffer from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.LongBuffer from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.DirectLongBufferU from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.security.PermissionCollection from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.security.Permissions from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<task_queued compile_id='9' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='256' iicount='256' level='3' stamp='0.055' comment='tiered' hot_count='256'/>
[Loaded java.net.URLConnection from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.net.www.URLConnection from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.FileURLConnection from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/String.&lt;init&gt;  [0x00007fab7410de20, 0x00007fab7410e318]  1272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab618947c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/Str
<writer thread='140374823413504'/>
[Loaded sun.net.www.MessageHeader from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
ing&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x00007fab7410de20: mov    0x8(%rsi),%r10d
  0x00007fab7410de24: shl    $0x3,%r10
  0x00007fab7410de28: cmp    %rax,%r10
  0x00007fab7410de2b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7410de31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7410de3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7410de40: mov    %eax,-0x14000(%rsp)
  0x00007fab7410de47: push   %rbp
  0x00007fab7410de48: sub    $0x60,%rsp
  0x00007fab7410de4c: movabs $0x7fab61ae0840,%rdi  ;   {metadata(method data for {method} {0x00007fab618947c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410de56: mov    0xfc(%rdi),%ebx
  0x00007fab7410de5c: add    $0x8,%ebx
  0x00007fab7410de5f: mov    %ebx,0xfc(%rdi)
  0x00007fab7410de65: movabs $0x7fab618947c0,%rdi  ;   {metadata({method} {0x00007fab618947c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410de6f: and    $0x1ff8,%ebx
  0x00007fab7410de75: cmp    $0x0,%ebx
  0x00007fab7410de78: je     0x00007fab7410e146  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x00007fab7410de7e: mov    %rsi,%rdi
  0x00007fab7410de81: movabs $0x7fab61ae0840,%rbx  ;   {metadata(method data for {method} {0x00007fab618947c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410de8b: addq   $0x1,0x130(%rbx)
  0x00007fab7410de93: movabs $0x7fab61a342a0,%rdi  ;   {metadata(method data for {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7410de9d: mov    0xfc(%rdi),%ebx
  0x00007fab7410dea3: add    $0x8,%ebx
  0x00007fab7410dea6: mov    %ebx,0xfc(%rdi)
  0x00007fab7410deac: movabs $0x7fab618914d8,%rdi  ;   {metadata({method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7410deb6: and    $0x7ffff8,%ebx
  0x00007fab7410debc: cmp    $0x0,%ebx
  0x00007fab7410debf: je     0x00007fab7410e15d
  0x00007fab7410dec5: cmp    $0x0,%ecx
  0x00007fab7410dec8: movabs $0x7fab61ae0840,%rdi  ;   {metadata(method data for {method} {0x00007fab618947c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410ded2: movabs $0x140,%rbx
  0x00007fab7410dedc: jge    0x00007fab7410deec
  0x00007fab7410dee2: movabs $0x150,%rbx
  0x00007fab7410deec: mov    (%rdi,%rbx,1),%rax
  0x00007fab7410def0: lea    0x1(%rax),%rax
  0x00007fab7410def4: mov    %rax,(%rdi,%rbx,1)
  0x00007fab7410def8: jl     0x00007fab7410e106  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x00007fab7410defe: cmp    $0x0,%r8d
  0x00007fab7410df02: movabs $0x7fab61ae0840,%rdi  ;   {metadata(method data for {method} {0x00007fab618947c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410df0c: movabs $0x170,%rbx
  0x00007fab7410df16: jg     0x00007fab7410df26
  0x00007fab7410df1c: movabs $0x180,%rbx
  0x00007fab7410df26: mov    (%rdi,%rbx,1),%rax
  0x00007fab7410df2a: lea    0x1(%rax),%rax
  0x00007fab7410df2e: mov    %rax,(%rdi,%rbx,1)
  0x00007fab7410df32: jg     0x00007fab7410dfad  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x00007fab7410df38: cmp    $0x0,%r8d
  0x00007fab7410df3c: movabs $0x7fab61ae0840,%rdi  ;   {metadata(method data for {method} {0x00007fab618947c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410df46: movabs $0x190,%rbx
  0x00007fab7410df50: jge    0x00007fab7410df60
  0x00007fab7410df56: movabs $0x1a0,%rbx
  0x00007fab7410df60: mov    (%rdi,%rbx,1),%rax
  0x00007fab7410df64: lea    0x1(%rax),%rax
  0x00007fab7410df68: mov    %rax,(%rdi,%rbx,1)
  0x00007fab7410df6c: jl     0x00007fab7410e0c6  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x00007fab7410df72: mov    0xc(%rdx),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x00007fab7410e174
  0x00007fab7410df75: cmp    %edi,%ecx
  0x00007fab7410df77: movabs $0x7fab61ae0840,%rdi  ;   {metadata(method data for {method} {0x00007fab618947c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410df81: movabs $0x1c0,%rbx
  0x00007fab7410df8b: jg     0x00007fab7410df9b
  0x00007fab7410df91: movabs $0x1d0,%rbx
  0x00007fab7410df9b: mov    (%rdi,%rbx,1),%rax
  0x00007fab7410df9f: lea    0x1(%rax),%rax
  0x00007fab7410dfa3: mov    %rax,(%rdi,%rbx,1)
  0x00007fab7410dfa7: jle    0x00007fab7410e042  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x00007fab7410dfad: mov    0xc(%rdx),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x00007fab7410e179
  0x00007fab7410dfb0: sub    %r8d,%edi
  0x00007fab7410dfb3: cmp    %edi,%ecx
  0x00007fab7410dfb5: movabs $0x7fab61ae0840,%rdi  ;   {metadata(method data for {method} {0x00007fab618947c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410dfbf: movabs $0x1e0,%rbx
  0x00007fab7410dfc9: jle    0x00007fab7410dfd9
  0x00007fab7410dfcf: movabs $0x1f0,%rbx
  0x00007fab7410dfd9: mov    (%rdi,%rbx,1),%rax
  0x00007fab7410dfdd: lea    0x1(%rax),%rax
  0x00007fab7410dfe1: mov    %rax,(%rdi,%rbx,1)
  0x00007fab7410dfe5: jg     0x00007fab7410e07c  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x00007fab7410dfeb: mov    %rsi,0x38(%rsp)
  0x00007fab7410dff0: movabs $0x7fab61ae0840,%rdi  ;   {metadata(method data for {method} {0x00007fab618947c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410dffa: addq   $0x1,0x210(%rdi)
  0x00007fab7410e002: add    %ecx,%r8d
  0x00007fab7410e005: mov    %rdx,%rsi
  0x00007fab7410e008: mov    %rcx,%rdx
  0x00007fab7410e00b: mov    %r8,%rcx           ;*invokestatic copyOfRange {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x00007fab7410e00e: nop
  0x00007fab7410e00f: callq  0x00007fab74048160  ; OopMap{[56]=Oop off=500}
                                                ;*invokestatic copyOfRange {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x00007fab7410e014: mov    0x38(%rsp),%rsi
  0x00007fab7410e019: mov    %rax,%r10
  0x00007fab7410e01c: shr    $0x3,%r10
  0x00007fab7410e020: mov    %r10d,0xc(%rsi)
  0x00007fab7410e024: shr    $0x9,%rsi
  0x00007fab7410e028: movabs $0x7fab701ff000,%rdx
  0x00007fab7410e032: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x00007fab7410e036: add    $0x60,%rsp
  0x00007fab7410e03a: pop    %rbp
  0x00007fab7410e03b: test   %eax,0x1b6d40bf(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7410e041: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x00007fab7410e042: movabs $0x670b8a5e8,%rdx  ;   {oop(&quot;&quot;)}
  0x00007fab7410e04c: mov    0xc(%rdx),%edx     ; implicit exception: dispatches to 0x00007fab7410e17e
  0x00007fab7410e04f: shl    $0x3,%rdx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)

  0x00007fab7410e053: mov    %rdx,%r10
  0x00007fab7410e056: shr    $0x3,%r10
  0x00007fab7410e05a: mov    %r10d,0xc(%rsi)
  0x00007fab7410e05e: shr    $0x9,%rsi
  0x00007fab7410e062: movabs $0x7fab701ff000,%rdx
  0x00007fab7410e06c: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x00007fab7410e070: add    $0x60,%rsp
  0x00007fab7410e074: pop    %rbp
  0x00007fab7410e075: test   %eax,0x1b6d4085(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7410e07b: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x00007fab7410e07c: nopl   0x0(%rax)
  0x00007fab7410e080: jmpq   0x00007fab7410e192  ;   {no_reloc}
  0x00007fab7410e085: add    %al,(%rax)
  0x00007fab7410e087: add    %al,(%rax)
  0x00007fab7410e089: add    %ch,%cl
  0x00007fab7410e08b: or     $0x48000001,%eax   ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x00007fab7410e090: mov    %eax,%edx
  0x00007fab7410e092: movabs $0x7fab61ae0840,%rsi  ;   {metadata(method data for {method} {0x00007fab618947c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410e09c: addq   $0x1,0x200(%rsi)
  0x00007fab7410e0a4: add    %ecx,%r8d
  0x00007fab7410e0a7: mov    %r8,%rdx
  0x00007fab7410e0aa: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x00007fab7410e0ad: mov    %rax,0x40(%rsp)
  0x00007fab7410e0b2: nop
  0x00007fab7410e0b3: nop
  0x00007fab7410e0b4: nop
  0x00007fab7410e0b5: nop
  0x00007fab7410e0b6: nop
  0x00007fab7410e0b7: callq  0x00007fab74047d60  ; OopMap{[64]=Oop off=668}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x00007fab7410e0bc: mov    0x40(%rsp),%rax
  0x00007fab7410e0c1: jmpq   0x00007fab7410e220  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x00007fab7410e0c6: xchg   %ax,%ax
  0x00007fab7410e0c8: jmpq   0x00007fab7410e1b8  ;   {no_reloc}
  0x00007fab7410e0cd: add    %al,(%rax)
  0x00007fab7410e0cf: add    %al,(%rax)
  0x00007fab7410e0d1: add    %ch,%cl
  0x00007fab7410e0d3: jmp    0x00007fab7410e0d5
  0x00007fab7410e0d5: add    %al,(%rax)         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x00007fab7410e0d7: mov    %rax,%rdx
  0x00007fab7410e0da: movabs $0x7fab61ae0840,%rsi  ;   {metadata(method data for {method} {0x00007fab618947c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410e0e4: addq   $0x1,0x1b0(%rsi)
  0x00007fab7410e0ec: mov    %r8,%rdx
  0x00007fab7410e0ef: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x00007fab7410e0f2: mov    %rax,0x48(%rsp)
  0x00007fab7410e0f7: callq  0x00007fab74047d60  ; OopMap{[72]=Oop off=732}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x00007fab7410e0fc: mov    0x48(%rsp),%rax
  0x00007fab7410e101: jmpq   0x00007fab7410e220  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x00007fab7410e106: xchg   %ax,%ax
  0x00007fab7410e108: jmpq   0x00007fab7410e1de  ;   {no_reloc}
  0x00007fab7410e10d: add    %al,(%rax)
  0x00007fab7410e10f: add    %al,(%rax)
  0x00007fab7410e111: add    %ch,%cl
  0x00007fab7410e113: roll   (%rax)
  0x00007fab7410e115: add    %al,(%rax)         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x00007fab7410e117: mov    %rax,%rdx
  0x00007fab7410e11a: movabs $0x7fab61ae0840,%rsi  ;   {metadata(method data for {method} {0x00007fab618947c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410e124: addq   $0x1,0x160(%rsi)
  0x00007fab7410e12c: mov    %rcx,%rdx
  0x00007fab7410e12f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x00007fab7410e132: mov    %rax,0x50(%rsp)
  0x00007fab7410e137: callq  0x00007fab74047d60  ; OopMap{[80]=Oop off=796}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x00007fab7410e13c: mov    0x50(%rsp),%rax
  0x00007fab7410e141: jmpq   0x00007fab7410e220
  0x00007fab7410e146: mov    %rdi,0x8(%rsp)
  0x00007fab7410e14b: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7410e153: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop off=824}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x00007fab7410e158: jmpq   0x00007fab7410de7e
  0x00007fab7410e15d: mov    %rdi,0x8(%rsp)
  0x00007fab7410e162: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7410e16a: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop off=847}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x00007fab7410e16f: jmpq   0x00007fab7410dec5
  0x00007fab7410e174: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rdx=Oop off=857}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x00007fab7410e179: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rdx=Oop off=862}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x00007fab7410e17e: callq  0x00007fab740fc000  ; OopMap{rsi=Oop off=867}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x00007fab7410e183: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab7410e18d: mov    $0xa050f00,%eax
  0x00007fab7410e192: callq  0x00007fab740ff5e0  ; OopMap{off=887}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x00007fab7410e197: jmpq   0x00007fab7410e080
  0x00007fab7410e19c: mov    %rdx,%rdx
  0x00007fab7410e19f: callq  0x00007fab740fc4a0  ; OopMap{off=900}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x00007fab7410e1a4: jmpq   0x00007fab7410e08f
  0x00007fab7410e1a9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab7410e1b3: mov    $0xa050f00,%eax
  0x00007fab7410e1b8: callq  0x00007fab740ff5e0  ; OopMap{off=925}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x00007fab7410e1bd: jmpq   0x00007fab7410e0c8
  0x00007fab7410e1c2: mov    %rdx,%rdx
  0x00007fab7410e1c5: callq  0x00007fab740fc4a0  ; OopMap{off=938}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x00007fab7410e1ca: jmpq   0x00007fab7410e0d7
  0x00007fab7410e1cf: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab7410e1d9: mov    $0xa050f00,%eax
  0x00007fab7410e1de: callq  0x00007fab740ff5e0  ; OopMap{off=963}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x00007fab7410e1e3: jmpq   0x00007fab7410e108
  0x00007fab7410e1e8: mov    %rdx,%rdx
  0x00007fab7410e1eb: callq  0x00007fab740fc4a0  ; OopMap{off=976}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x00007fab7410e1f0: jmpq   0x00007fab7410e117
  0x00007fab7410e1f5: nop
  0x00007fab7410e1f6: nop
  0x00007fab7410e1f7: mov    0x2c0(%r15),%rax
  0x00007fab7410e1fe: movabs $0x0,%r10
  0x00007fab7410e208: mov    %r10,0x2c0(%r15)
  0x00007fab7410e20f: movabs $0x0,%r10
  0x00007fab7410e219: mov    %r10,0x2c8(%r15)
  0x00007fab7410e220: add    $0x60,%rsp
  0x00007fab7410e224: pop    %rbp
  0x00007fab7410e225: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7410e22a: hlt    
  0x00007fab7410e22b: hlt    
  0x00007fab7410e22c: hlt    
  0x00007fab7410e22d: hlt    
  0x00007fab7410e22e: hlt    
  0x00007fab7410e22f: hlt    
  0x00007fab7410e230: hlt    
  0x00007fab7410e231: hlt    
  0x00007fab7410e232: hlt    
  0x00007fab7410e233: hlt    
  0x00007fab7410e234: hlt    
  0x00007fab7410e235: hlt    
  0x00007fab7410e236: hlt    
  0x00007fab7410e237: hlt    
  0x00007fab7410e238: hlt    
  0x00007fab7410e239: hlt    
  0x00007fab7410e23a: hlt    
  0x00007fab7410e23b: hlt    
  0x00007fab7410e23c: hlt    
  0x00007fab7410e23d: hlt    
  0x00007fab7410e23e: hlt    
  0x00007fab7410e23f: hlt    
[Stub Code]
  0x00007fab7410e240: nop                       ;   {no_reloc}
  0x00007fab7410e241: nop
  0x00007fab7410e242: nop
  0x00007fab7410e243: nop
  0x00007fab7410e244: nop
  0x00007fab7410e245: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7410e24f: jmpq   0x00007fab7410e24f  ;   {runtime_call}
  0x00007fab7410e254: nop
  0x00007fab7410e255: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7410e25f: jmpq   0x00007fab7410e25f  ;   {runtime_call}
  0x00007fab7410e264: nop
  0x00007fab7410e265: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7410e26f: jmpq   0x00007fab7410e26f  ;   {runtime_call}
  0x00007fab7410e274: nop
  0x00007fab7410e275: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7410e27f: jmpq   0x00007fab7410e27f  ;   {runtime_call}
[Exception Handler]
  0x00007fab7410e284: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab7410e289: mov    %rsp,-0x28(%rsp)
  0x00007fab7410e28e: sub    $0x80,%rsp
  0x00007fab7410e295: mov    %rax,0x78(%rsp)
  0x00007fab7410e29a: mov    %rcx,0x70(%rsp)
  0x00007fab7410e29f: mov    %rdx,0x68(%rsp)
  0x00007fab7410e2a4: mov    %rbx,0x60(%rsp)
  0x00007fab7410e2a9: mov    %rbp,0x50(%rsp)
  0x00007fab7410e2ae: mov    %rsi,0x48(%rsp)
  0x00007fab7410e2b3: mov    %rdi,0x40(%rsp)
  0x00007fab7410e2b8: mov    %r8,0x38(%rsp)
  0x00007fab7410e2bd: mov    %r9,0x30(%rsp)
  0x00007fab7410e2c2: mov    %r10,0x28(%rsp)
  0x00007fab7410e2c7: mov    %r11,0x20(%rsp)
  0x00007fab7410e2cc: mov    %r12,0x18(%rsp)
  0x00007fab7410e2d1: mov    %r13,0x10(%rsp)
  0x00007fab7410e2d6: mov    %r14,0x8(%rsp)
  0x00007fab7410e2db: mov    %r15,(%rsp)
  0x00007fab7410e2df: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7410e2e9: movabs $0x7fab7410e289,%rsi  ;   {internal_word}
  0x00007fab7410e2f3: mov    %rsp,%rdx
  0x00007fab7410e2f6: and    $0xfffffffffffffff0,%rsp
  0x00007fab7410e2fa: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7410e2ff: hlt    
[Deopt Handler Code]
  0x00007fab7410e300: movabs $0x7fab7410e300,%r10  ;   {section_word}
  0x00007fab7410e30a: push   %r10
  0x00007fab7410e30c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7410e311: hlt    
  0x00007fab7410e312: hlt    
  0x00007fab7410e313: hlt    
  0x00007fab7410e314: hlt    
  0x00007fab7410e315: hlt    
  0x00007fab7410e316: hlt    
  0x00007fab7410e317: hlt    
<nmethod compile_id='9' compiler='C1' level='3' entry='0x00007fab7410de20' size='2704' address='0x00007fab7410dc50' relocation_offset='312' insts_offset='464' stub_offset='1520' scopes_data_offset='1752' scopes_pcs_offset='2040' dependencies_offset='2664' nul_chk_table_offset='2672' metadata_offset='1736' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='256' iicount='256' stamp='0.058'/>
<writer thread='140374823413504'/>
[Loaded java.io.FilePermission from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.FilePermission$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.io.FilePermissionCollection from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.security.AllPermission from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.security.UnresolvedPermission from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.security.BasicPermissionCollection from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded com.github.marschall.charsequences.ParseUuidCompilation from file:/home/marschall/git/charsequences/target/test-classes/]
[Loaded sun.launcher.LauncherHelper$FXHelper from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Class$MethodArray from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.Void from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<task_queued compile_id='10' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='256' iicount='256' level='3' stamp='0.059' comment='tiered' hot_count='256'/>
<task_queued compile_id='11' method='java/lang/String getChars (II[CI)V' bytes='62' count='256' iicount='256' level='3' stamp='0.059' comment='tiered' hot_count='256'/>
[Loaded com.github.marschall.charsequences.CharSequences from file:/home/marschall/git/charsequences/target/classes/]
[Loaded java.lang.AssertionError from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.NumberFormatException from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.append  [0x00007fab7410e8e0, 0x00007fab7410ef38]  1624 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab619166f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0xf0]  (sp of caller)
  0x00007fab7410e8e0: mov    0x8(%rsi),%r10d
  0x00007fab7410e8e4: shl    $0x3,%r10
  0x00007fab7410e8e8: cmp    %rax,%r10
  0x00007fab7410e8eb: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7410e8f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7410e8fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7410e900: mov    %eax,-0x14000(%rsp)
  0x00007fab7410e907: push   %rbp
  0x00007fab7410e908: sub    $0xe0,%rsp
  0x00007fab7410e90f: mov    %rsi,0xb8(%rsp)
  0x00007fab7410e917: movabs $0x7fab61af6968,%rdi  ;   {metadata(method data for {method} {0x00007fab619166f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7410e921: mov    0xfc(%rdi),%ebx
  0x00007fab7410e927: add    $0x8,%ebx
  0x00007fab7410e92a: mov    %ebx,0xfc(%rdi)
  0x00007fab7410e930: movabs $0x7fab619166f0,%rdi  ;   {metadata({method} {0x00007fab619166f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7410e93a: and    $0x1ff8,%ebx
  0x00007fab7410e940: cmp    $0x0,%ebx
  0x00007fab7410e943: je     0x00007fab7410ed73  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x00007fab7410e949: cmp    $0x0,%rdx
  0x00007fab7410e94d: movabs $0x7fab61af6968,%rdi  ;   {metadata(method data for {method} {0x00007fab619166f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7410e957: movabs $0x130,%rbx
  0x00007fab7410e961: jne    0x00007fab7410e971
  0x00007fab7410e967: movabs $0x140,%rbx
  0x00007fab7410e971: mov    (%rdi,%rbx,1),%rax
  0x00007fab7410e975: lea    0x1(%rax),%rax
  0x00007fab7410e979: mov    %rax,(%rdi,%rbx,1)
  0x00007fab7410e97d: je     0x00007fab7410ed43  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x00007fab7410e983: cmp    (%rdx),%rax        ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x00007fab7410ed8a
  0x00007fab7410e986: mov    %rdx,%rdi
  0x00007fab7410e989: movabs $0x7fab61af6968,%rbx  ;   {metadata(method data for {method} {0x00007fab619166f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7410e993: addq   $0x1,0x160(%rbx)
  0x00007fab7410e99b: movabs $0x7fab61ab9630,%rdi  ;   {metadata(method data for {method} {0x00007fab61895538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410e9a5: mov    0xfc(%rdi),%ebx
  0x00007fab7410e9ab: add    $0x8,%ebx
  0x00007fab7410e9ae: mov    %ebx,0xfc(%rdi)
  0x00007fab7410e9b4: movabs $0x7fab61895538,%rdi  ;   {metadata({method} {0x00007fab61895538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410e9be: and    $0x7ffff8,%ebx
  0x00007fab7410e9c4: cmp    $0x0,%ebx
  0x00007fab7410e9c7: je     0x00007fab7410ed8f
  0x00007fab7410e9cd: mov    0xc(%rdx),%edi
  0x00007fab7410e9d0: shl    $0x3,%rdi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x00007fab7410e9d4: mov    0xc(%rdi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x00007fab7410eda6
  0x00007fab7410e9d7: mov    %edi,0xac(%rsp)
  0x00007fab7410e9de: mov    0xc(%rsi),%ebx     ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x00007fab7410e9e1: add    %edi,%ebx
  0x00007fab7410e9e3: mov    %rsi,%rax
  0x00007fab7410e9e6: movabs $0x7fab61af6968,%rcx  ;   {metadata(method data for {method} {0x00007fab619166f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7410e9f0: addq   $0x1,0x1f8(%rcx)
  0x00007fab7410e9f8: movabs $0x7fab61af6de0,%rax  ;   {metadata(method data for {method} {0x00007fab61915be0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7410ea02: mov    0xfc(%rax),%ecx
  0x00007fab7410ea08: add    $0x8,%ecx
  0x00007fab7410ea0b: mov    %ecx,0xfc(%rax)
  0x00007fab7410ea11: movabs $0x7fab61915be0,%rax  ;   {metadata({method} {0x00007fab61915be0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7410ea1b: and    $0x7ffff8,%ecx
  0x00007fab7410ea21: cmp    $0x0,%ecx
  0x00007fab7410ea24: je     0x00007fab7410edab
  0x00007fab7410ea2a: mov    0x10(%rsi),%eax
  0x00007fab7410ea2d: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fab7410ea31: mov    0xc(%rax),%ecx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x00007fab7410edc2
  0x00007fab7410ea34: mov    %rbx,%r8
  0x00007fab7410ea37: sub    %ecx,%r8d
  0x00007fab7410ea3a: cmp    $0x0,%r8d
  0x00007fab7410ea3e: movabs $0x7fab61af6de0,%r8  ;   {metadata(method data for {method} {0x00007fab61915be0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7410ea48: movabs $0x130,%r9
  0x00007fab7410ea52: jle    0x00007fab7410ea62
  0x00007fab7410ea58: movabs $0x140,%r9
  0x00007fab7410ea62: mov    (%r8,%r9,1),%r11
  0x00007fab7410ea66: lea    0x1(%r11),%r11
  0x00007fab7410ea6a: mov    %r11,(%r8,%r9,1)
  0x00007fab7410ea6e: jg     0x00007fab7410ea81  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fab7410ea74: mov    %rdx,0xc0(%rsp)
  0x00007fab7410ea7c: jmpq   0x00007fab7410ecdb  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fab7410ea81: mov    %ecx,0xa8(%rsp)
  0x00007fab7410ea88: mov    %rax,0xb0(%rsp)
  0x00007fab7410ea90: mov    %rdx,0xc0(%rsp)
  0x00007fab7410ea98: mov    %rsi,%r8
  0x00007fab7410ea9b: movabs $0x7fab61af6de0,%r9  ;   {metadata(method data for {method} {0x00007fab61915be0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7410eaa5: addq   $0x1,0x150(%r9)
  0x00007fab7410eaad: mov    %rbx,%rdx
  0x00007fab7410eab0: mov    %rsi,%rbx
  0x00007fab7410eab3: mov    %rbx,%rsi          ;*invokespecial newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fab7410eab6: nop
  0x00007fab7410eab7: callq  0x00007fab74047d60  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=476}
                                                ;*invokespecial newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x00007fab7410eabc: mov    %rax,%r8           ;*invokespecial newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fab7410eabf: movabs $0x7fab61af6de0,%rbx  ;   {metadata(method data for {method} {0x00007fab61915be0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7410eac9: addq   $0x1,0x160(%rbx)
  0x00007fab7410ead1: movabs $0x7fab61af7188,%rbx  ;   {metadata(method data for {method} {0x00007fab619ce750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7410eadb: mov    0xfc(%rbx),%edx
  0x00007fab7410eae1: add    $0x8,%edx
  0x00007fab7410eae4: mov    %edx,0xfc(%rbx)
  0x00007fab7410eaea: movabs $0x7fab619ce750,%rbx  ;   {metadata({method} {0x00007fab619ce750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7410eaf4: and    $0x7ffff8,%edx
  0x00007fab7410eafa: cmp    $0x0,%edx
  0x00007fab7410eafd: je     0x00007fab7410edc7
  0x00007fab7410eb03: mov    %r8,%rbx
  0x00007fab7410eb06: movabs $0x7c00001f8,%rdx  ;   {metadata({type array char})}
  0x00007fab7410eb10: movslq %ebx,%rbx
  0x00007fab7410eb13: mov    %rbx,%rdi
  0x00007fab7410eb16: cmp    $0xffffff,%rbx
  0x00007fab7410eb1d: ja     0x00007fab7410edde
  0x00007fab7410eb23: movabs $0x17,%rsi
  0x00007fab7410eb2d: lea    (%rsi,%rbx,2),%rsi
  0x00007fab7410eb31: and    $0xfffffffffffffff8,%rsi
  0x00007fab7410eb35: mov    0x60(%r15),%rax
  0x00007fab7410eb39: lea    (%rax,%rsi,1),%rsi
  0x00007fab7410eb3d: cmp    0x70(%r15),%rsi
  0x00007fab7410eb41: ja     0x00007fab7410edde
  0x00007fab7410eb47: mov    %rsi,0x60(%r15)
  0x00007fab7410eb4b: sub    %rax,%rsi
  0x00007fab7410eb4e: movq   $0x1,(%rax)
  0x00007fab7410eb55: mov    %rdx,%rcx
  0x00007fab7410eb58: shr    $0x3,%rcx
  0x00007fab7410eb5c: mov    %ecx,0x8(%rax)
  0x00007fab7410eb5f: mov    %ebx,0xc(%rax)
  0x00007fab7410eb62: sub    $0x10,%rsi
  0x00007fab7410eb66: je     0x00007fab7410eb7d
  0x00007fab7410eb6c: xor    %rbx,%rbx
  0x00007fab7410eb6f: shr    $0x3,%rsi
  0x00007fab7410eb73: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fab7410eb78: dec    %rsi
  0x00007fab7410eb7b: jne    0x00007fab7410eb73  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fab7410eb7d: movabs $0x7fab61af7188,%rsi  ;   {metadata(method data for {method} {0x00007fab619ce750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7410eb87: addq   $0x1,0x130(%rsi)
  0x00007fab7410eb8f: movabs $0x7fab61a9c058,%rsi  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7410eb99: mov    0xfc(%rsi),%edx
  0x00007fab7410eb9f: add    $0x8,%edx
  0x00007fab7410eba2: mov    %edx,0xfc(%rsi)
  0x00007fab7410eba8: movabs $0x7fab619a58b8,%rsi  ;   {metadata({method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7410ebb2: and    $0x7ffff8,%edx
  0x00007fab7410ebb8: cmp    $0x0,%edx
  0x00007fab7410ebbb: je     0x00007fab7410ede8
  0x00007fab7410ebc1: mov    0xa8(%rsp),%ecx
  0x00007fab7410ebc8: cmp    %r8d,%ecx
  0x00007fab7410ebcb: movabs $0x7fab61a9c058,%rsi  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7410ebd5: movabs $0x130,%rdx
  0x00007fab7410ebdf: jg     0x00007fab7410ebef
  0x00007fab7410ebe5: movabs $0x140,%rdx
  0x00007fab7410ebef: mov    (%rsi,%rdx,1),%r9
  0x00007fab7410ebf3: lea    0x1(%r9),%r9
  0x00007fab7410ebf7: mov    %r9,(%rsi,%rdx,1)
  0x00007fab7410ebfb: jg     0x00007fab7410ec19  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fab7410ec01: movabs $0x7fab61a9c058,%rsi  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7410ec0b: incl   0x150(%rsi)
  0x00007fab7410ec11: mov    %rcx,%r9
  0x00007fab7410ec14: jmpq   0x00007fab7410ec1c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fab7410ec19: mov    %r8,%r9            ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fab7410ec1c: mov    0xb0(%rsp),%rsi
  0x00007fab7410ec24: movabs $0x7fab61af7188,%rdx  ;   {metadata(method data for {method} {0x00007fab619ce750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7410ec2e: addq   $0x1,0x140(%rdx)
  0x00007fab7410ec36: mov    $0x0,%edx
  0x00007fab7410ec3b: mov    %rax,%rcx
  0x00007fab7410ec3e: mov    $0x0,%r8d
  0x00007fab7410ec44: mov    %rax,0xc8(%rsp)
  0x00007fab7410ec4c: lea    (%rdx,%r9,1),%rdi
  0x00007fab7410ec50: cmp    0xc(%rsi),%edi
  0x00007fab7410ec53: ja     0x00007fab7410edff
  0x00007fab7410ec59: lea    (%r8,%r9,1),%rdi
  0x00007fab7410ec5d: cmp    0xc(%rcx),%edi
  0x00007fab7410ec60: ja     0x00007fab7410edff
  0x00007fab7410ec66: test   %r9d,%r9d
  0x00007fab7410ec69: jl     0x00007fab7410edff
  0x00007fab7410ec6f: je     0x00007fab7410ecab
  0x00007fab7410ec75: movslq %edx,%rdx
  0x00007fab7410ec78: movslq %r8d,%r8
  0x00007fab7410ec7b: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007fab7410ec80: lea    0x10(%rcx,%r8,2),%rsi
  0x00007fab7410ec85: mov    %r9,%rdx
  0x00007fab7410ec88: test   $0xf,%esp
  0x00007fab7410ec8e: je     0x00007fab7410eca6
  0x00007fab7410ec94: sub    $0x8,%rsp
  0x00007fab7410ec98: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007fab7410ec9d: add    $0x8,%rsp
  0x00007fab7410eca1: jmpq   0x00007fab7410ecab
  0x00007fab7410eca6: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007fab7410ecab: mov    0xc8(%rsp),%rax
  0x00007fab7410ecb3: mov    0xb8(%rsp),%rsi
  0x00007fab7410ecbb: mov    %rax,%r10
  0x00007fab7410ecbe: shr    $0x3,%r10
  0x00007fab7410ecc2: mov    %r10d,0x10(%rsi)
  0x00007fab7410ecc6: mov    %rsi,%rdx
  0x00007fab7410ecc9: shr    $0x9,%rdx
  0x00007fab7410eccd: movabs $0x7fab701ff000,%rcx
  0x00007fab7410ecd7: movb   $0x0,(%rdx,%rcx,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fab7410ecdb: mov    0xac(%rsp),%ebx
  0x00007fab7410ece2: mov    0xc0(%rsp),%rdi
  0x00007fab7410ecea: mov    0x10(%rsi),%r8d
  0x00007fab7410ecee: shl    $0x3,%r8           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x00007fab7410ecf2: mov    0xc(%rsi),%r9d     ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x00007fab7410ecf6: mov    %rdi,%rdx
  0x00007fab7410ecf9: movabs $0x7fab61af6968,%rcx  ;   {metadata(method data for {method} {0x00007fab619166f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7410ed03: addq   $0x1,0x208(%rcx)
  0x00007fab7410ed0b: mov    $0x0,%edx
  0x00007fab7410ed10: mov    %rbx,%rcx
  0x00007fab7410ed13: mov    %rdi,%rsi          ;*invokevirtual getChars {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x00007fab7410ed16: nop
  0x00007fab7410ed17: callq  0x00007fab74047d60  ; OopMap{[184]=Oop off=1084}
                                                ;*invokevirtual getChars {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x00007fab7410ed1c: mov    0xb8(%rsp),%rsi
  0x00007fab7410ed24: mov    0xc(%rsi),%eax     ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x00007fab7410ed27: add    0xac(%rsp),%eax
  0x00007fab7410ed2e: mov    %eax,0xc(%rsi)     ;*putfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x00007fab7410ed31: mov    %rsi,%rax
  0x00007fab7410ed34: add    $0xe0,%rsp
  0x00007fab7410ed3b: pop    %rbp
  0x00007fab7410ed3c: test   %eax,0x1b6d33be(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7410ed42: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x00007fab7410ed43: mov    %rsi,%rdi
  0x00007fab7410ed46: movabs $0x7fab61af6968,%rbx  ;   {metadata(method data for {method} {0x00007fab619166f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7410ed50: addq   $0x1,0x150(%rbx)
  0x00007fab7410ed58: nop
  0x00007fab7410ed59: nop
  0x00007fab7410ed5a: nop
  0x00007fab7410ed5b: nop
  0x00007fab7410ed5c: nop
  0x00007fab7410ed5d: nop
  0x00007fab7410ed5e: nop
  0x00007fab7410ed5f: callq  0x00007fab74047d60  ; OopMap{off=1156}
                                                ;*invokespecial appendNull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x00007fab7410ed64: add    $0xe0,%rsp
  0x00007fab7410ed6b: pop    %rbp
  0x00007fab7410ed6c: test   %eax,0x1b6d338e(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7410ed72: retq   
  0x00007fab7410ed73: mov    %rdi,0x8(%rsp)
  0x00007fab7410ed78: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7410ed80: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1189}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x00007fab7410ed85: jmpq   0x00007fab7410e949
  0x00007fab7410ed8a: callq  0x00007fab740fc000  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1199}
                                                ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00007fab7410ed8f: mov    %rdi,0x8(%rsp)
  0x00007fab7410ed94: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7410ed9c: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1217}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00007fab7410eda1: jmpq   0x00007fab7410e9cd
  0x00007fab7410eda6: callq  0x00007fab740fc000  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1227}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00007fab7410edab: mov    %rax,0x8(%rsp)
  0x00007fab7410edb0: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7410edb8: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1245}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007fab7410edbd: jmpq   0x00007fab7410ea2a
  0x00007fab7410edc2: callq  0x00007fab740fc000  ; OopMap{rsi=Oop [184]=Oop rdx=Oop rax=Oop off=1255}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007fab7410edc7: mov    %rbx,0x8(%rsp)
  0x00007fab7410edcc: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7410edd4: callq  0x00007fab741005e0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1273}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007fab7410edd9: jmpq   0x00007fab7410eb03
  0x00007fab7410edde: callq  0x00007fab740fd020  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1283}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007fab7410ede3: jmpq   0x00007fab7410eb7d
  0x00007fab7410ede8: mov    %rsi,0x8(%rsp)
  0x00007fab7410eded: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7410edf5: callq  0x00007fab741005e0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1306}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007fab7410edfa: jmpq   0x00007fab7410ebc1
  0x00007fab7410edff: callq  0x00007fab74048160  ; OopMap{[184]=Oop [192]=Oop [200]=Oop off=1316}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x00007fab7410ee04: jmpq   0x00007fab7410ecab
  0x00007fab7410ee09: nop
  0x00007fab7410ee0a: nop
  0x00007fab7410ee0b: mov    0x2c0(%r15),%rax
  0x00007fab7410ee12: movabs $0x0,%r10
  0x00007fab7410ee1c: mov    %r10,0x2c0(%r15)
  0x00007fab7410ee23: movabs $0x0,%r10
  0x00007fab7410ee2d: mov    %r10,0x2c8(%r15)
  0x00007fab7410ee34: add    $0xe0,%rsp
  0x00007fab7410ee3b: pop    %rbp
  0x00007fab7410ee3c: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7410ee41: hlt    
  0x00007fab7410ee42: hlt    
  0x00007fab7410ee43: hlt    
  0x00007fab7410ee44: hlt    
  0x00007fab7410ee45: hlt    
  0x00007fab7410ee46: hlt    
  0x00007fab7410ee47: hlt    
  0x00007fab7410ee48: hlt    
  0x00007fab7410ee49: hlt    
  0x00007fab7410ee4a: hlt    
  0x00007fab7410ee4b: hlt    
  0x00007fab7410ee4c: hlt    
  0x00007fab7410ee4d: hlt    
  0x00007fab7410ee4e: hlt    
  0x00007fab7410ee4f: hlt    
  0x00007fab7410ee50: hlt    
  0x00007fab7410ee51: hlt    
  0x00007fab7410ee52: hlt    
  0x00007fab7410ee53: hlt    
  0x00007fab7410ee54: hlt    
  0x00007fab7410ee55: hlt    
  0x00007fab7410ee56: hlt    
  0x00007fab7410ee57: hlt    
  0x00007fab7410ee58: hlt    
  0x00007fab7410ee59: hlt    
  0x00007fab7410ee5a: hlt    
  0x00007fab7410ee5b: hlt    
  0x00007fab7410ee5c: hlt    
  0x00007fab7410ee5d: hlt    
  0x00007fab7410ee5e: hlt    
  0x00007fab7410ee5f: hlt    
[Stub Code]
  0x00007fab7410ee60: nop                       ;   {no_reloc}
  0x00007fab7410ee61: nop
  0x00007fab7410ee62: nop
  0x00007fab7410ee63: nop
  0x00007fab7410ee64: nop
  0x00007fab7410ee65: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7410ee6f: jmpq   0x00007fab7410ee6f  ;   {runtime_call}
  0x00007fab7410ee74: nop
  0x00007fab7410ee75: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7410ee7f: jmpq   0x00007fab7410ee7f  ;   {runtime_call}
  0x00007fab7410ee84: nop
  0x00007fab7410ee85: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7410ee8f: jmpq   0x00007fab7410ee8f  ;   {runtime_call}
  0x00007fab7410ee94: nop
  0x00007fab7410ee95: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7410ee9f: jmpq   0x00007fab7410ee9f  ;   {runtime_call}
[Exception Handler]
  0x00007fab7410eea4: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab7410eea9: mov    %rsp,-0x28(%rsp)
  0x00007fab7410eeae: sub    $0x80,%rsp
  0x00007fab7410eeb5: mov    %rax,0x78(%rsp)
  0x00007fab7410eeba: mov    %rcx,0x70(%rsp)
  0x00007fab7410eebf: mov    %rdx,0x68(%rsp)
  0x00007fab7410eec4: mov    %rbx,0x60(%rsp)
  0x00007fab7410eec9: mov    %rbp,0x50(%rsp)
  0x00007fab7410eece: mov    %rsi,0x48(%rsp)
  0x00007fab7410eed3: mov    %rdi,0x40(%rsp)
  0x00007fab7410eed8: mov    %r8,0x38(%rsp)
  0x00007fab7410eedd: mov    %r9,0x30(%rsp)
  0x00007fab7410eee2: mov    %r10,0x28(%rsp)
  0x00007fab7410eee7: mov    %r11,0x20(%rsp)
  0x00007fab7410eeec: mov    %r12,0x18(%rsp)
  0x00007fab7410eef1: mov    %r13,0x10(%rsp)
  0x00007fab7410eef6: mov    %r14,0x8(%rsp)
  0x00007fab7410eefb: mov    %r15,(%rsp)
  0x00007fab7410eeff: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7410ef09: movabs $0x7fab7410eea9,%rsi  ;   {internal_word}
  0x00007fab7410ef13: mov    %rsp,%rdx
  0x00007fab7410ef16: and    $0xfffffffffffffff0,%rsp
  0x00007fab7410ef1a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7410ef1f: hlt    
[Deopt Handler Code]
  0x00007fab7410ef20: movabs $0x7fab7410ef20,%r10  ;   {section_word}
  0x00007fab7410ef2a: push   %r10
  0x00007fab7410ef2c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7410ef31: hlt    
  0x00007fab7410ef32: hlt    
  0x00007fab7410ef33: hlt    
  0x00007fab7410ef34: hlt    
  0x00007fab7410ef35: hlt    
  0x00007fab7410ef36: hlt    
  0x00007fab7410ef37: hlt    
<nmethod compile_id='10' compiler='C1' level='3' entry='0x00007fab7410e8e0' size='3200' address='0x00007fab7410e710' relocation_offset='312' insts_offset='464' stub_offset='1872' scopes_data_offset='2128' scopes_pcs_offset='2536' dependencies_offset='3160' nul_chk_table_offset='3168' metadata_offset='2088' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='262' iicount='262' stamp='0.062'/>
<writer thread='140374823413504'/>
[Loaded java.util.concurrent.ConcurrentHashMap$ForwardingNode from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.lang.IndexOutOfBoundsException from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/String.getChars  [0x00007fab7410f5a0, 0x00007fab7410f9d8]  1080 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61895bf8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8:r8     = &apos;[C&apos;
  # parm3:    r9        = int
  #           [sp+0x70]  (sp of caller)
  0x00007fab7410f5a0: mov    0x8(%rsi),%r10d
  0x00007fab7410f5a4: shl    $0x3,%r10
  0x00007fab7410f5a8: cmp    %rax,%r10
  0x00007fab7410f5ab: jne    
<writer thread='140374823413504'/>
[Loaded java.util.UUID from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
0x00007fab74047b60                              ;   {runtime_call}
  0x00007fab7410f5b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7410f5bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7410f5c0: mov    %eax,-0x14000(%rsp)
  0x00007fab7410f5c7: push   %rbp
  0x00007fab7410f5c8: sub    $0x60,%rsp
  0x00007fab7410f5cc: mov    %rdx,%rdi
  0x00007fab7410f5cf: movabs $0x7fab61af7320,%rdx  ;   {metadata(method data for {method} {0x00007fab61895bf8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410f5d9: mov    0xfc(%rdx),%ebx
  0x00007fab7410f5df: add    $0x8,%ebx
  0x00007fab7410f5e2: mov    %ebx,0xfc(%rdx)
  0x00007fab7410f5e8: movabs $0x7fab61895bf8,%rdx  ;   {metadata({method} {0x00007fab61895bf8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410f5f2: and    $0x1ff8,%ebx
  0x00007fab7410f5f8: cmp    $0x0,%ebx
  0x00007fab7410f5fb: je     0x00007fab7410f826  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@0 (line 817)

  0x00007fab7410f601: cmp    $0x0,%edi
  0x00007fab7410f604: movabs $0x7fab61af7320,%rdx  ;   {metadata(method data for {method} {0x00007fab61895bf8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410f60e: movabs $0x130,%rbx
  0x00007fab7410f618: jge    0x00007fab7410f628
  0x00007fab7410f61e: movabs $0x140,%rbx
  0x00007fab7410f628: mov    (%rdx,%rbx,1),%rax
  0x00007fab7410f62c: lea    0x1(%rax),%rax
  0x00007fab7410f630: mov    %rax,(%rdx,%rbx,1)
  0x00007fab7410f634: jl     0x00007fab7410f7e6  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@1 (line 817)

  0x00007fab7410f63a: mov    0xc(%rsi),%esi
  0x00007fab7410f63d: shl    $0x3,%rsi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@15 (line 820)

  0x00007fab7410f641: mov    0xc(%rsi),%edx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x00007fab7410f83d
  0x00007fab7410f644: cmp    %edx,%ecx
  0x00007fab7410f646: movabs $0x7fab61af7320,%rdx  ;   {metadata(method data for {method} {0x00007fab61895bf8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410f650: movabs $0x160,%rbx
  0x00007fab7410f65a: jle    0x00007fab7410f66a
  0x00007fab7410f660: movabs $0x170,%rbx
  0x00007fab7410f66a: mov    (%rdx,%rbx,1),%rax
  0x00007fab7410f66e: lea    0x1(%rax),%rax
  0x00007fab7410f672: mov    %rax,(%rdx,%rbx,1)
  0x00007fab7410f676: jg     0x00007fab7410f7a6  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@19 (line 820)

  0x00007fab7410f67c: cmp    %ecx,%edi
  0x00007fab7410f67e: movabs $0x7fab61af7320,%rdx  ;   {metadata(method data for {method} {0x00007fab61895bf8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410f688: movabs $0x190,%rbx
  0x00007fab7410f692: jle    0x00007fab7410f6a2
  0x00007fab7410f698: movabs $0x1a0,%rbx
  0x00007fab7410f6a2: mov    (%rdx,%rbx,1),%rax
  0x00007fab7410f6a6: lea    0x1(%rax),%rax
  0x00007fab7410f6aa: mov    %rax,(%rdx,%rbx,1)
  0x00007fab7410f6ae: jg     0x00007fab7410f75c  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@33 (line 823)

  0x00007fab7410f6b4: movabs $0x7fab61af7320,%rdx  ;   {metadata(method data for {method} {0x00007fab61895bf8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410f6be: addq   $0x1,0x1c0(%rdx)
  0x00007fab7410f6c6: mov    %rcx,%rbx
  0x00007fab7410f6c9: sub    %edi,%ebx
  0x00007fab7410f6cb: mov    %rdi,%rdx
  0x00007fab7410f6ce: mov    %r8,%rcx
  0x00007fab7410f6d1: mov    %r9,%r8
  0x00007fab7410f6d4: mov    %rbx,%r9
  0x00007fab7410f6d7: test   %rcx,%rcx
  0x00007fab7410f6da: je     0x00007fab7410f842
  0x00007fab7410f6e0: test   %edx,%edx
  0x00007fab7410f6e2: jl     0x00007fab7410f842
  0x00007fab7410f6e8: test   %r8d,%r8d
  0x00007fab7410f6eb: jl     0x00007fab7410f842
  0x00007fab7410f6f1: lea    (%rdx,%r9,1),%rdi
  0x00007fab7410f6f5: cmp    0xc(%rsi),%edi
  0x00007fab7410f6f8: ja     0x00007fab7410f842
  0x00007fab7410f6fe: lea    (%r8,%r9,1),%rdi
  0x00007fab7410f702: cmp    0xc(%rcx),%edi
  0x00007fab7410f705: ja     0x00007fab7410f842
  0x00007fab7410f70b: test   %r9d,%r9d
  0x00007fab7410f70e: jl     0x00007fab7410f842
  0x00007fab7410f714: je     0x00007fab7410f750
  0x00007fab7410f71a: movslq %edx,%rdx
  0x00007fab7410f71d: movslq %r8d,%r8
  0x00007fab7410f720: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007fab7410f725: lea    0x10(%rcx,%r8,2),%rsi
  0x00007fab7410f72a: mov    %r9,%rdx
  0x00007fab7410f72d: test   $0xf,%esp
  0x00007fab7410f733: je     0x00007fab7410f74b
  0x00007fab7410f739: sub    $0x8,%rsp
  0x00007fab7410f73d: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x00007fab7410f742: add    $0x8,%rsp
  0x00007fab7410f746: jmpq   0x00007fab7410f750
  0x00007fab7410f74b: callq  Stub::jshort_arraycopy  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {runtime_call}
  0x00007fab7410f750: add    $0x60,%rsp
  0x00007fab7410f754: pop    %rbp
  0x00007fab7410f755: test   %eax,0x1b6d29a5(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7410f75b: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@61 (line 827)

  0x00007fab7410f75c: nopl   0x0(%rax)
  0x00007fab7410f760: jmpq   0x00007fab7410f860  ;   {no_reloc}
  0x00007fab7410f765: add    %al,(%rax)
  0x00007fab7410f767: add    %al,(%rax)
  0x00007fab7410f769: add    %ch,%cl
  0x00007fab7410f76b: sti    
  0x00007fab7410f76c: add    %al,(%rax)
  0x00007fab7410f76e: add    %cl,-0x75(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@36 (line 824)

  0x00007fab7410f771: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00007fab61895bf8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410f774: and    %dh,-0x51(%rbx)
  0x00007fab7410f777: (bad)  
  0x00007fab7410f778: stos   %eax,%es:(%rdi)
  0x00007fab7410f779: jg     0x00007fab7410f77b
  0x00007fab7410f77b: add    %cl,-0x7d(%rax)
  0x00007fab7410f77e: xchg   %dh,0x1000001(%rax)
  0x00007fab7410f784: sub    %edi,%ecx
  0x00007fab7410f786: mov    %rcx,%rdx
  0x00007fab7410f789: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@43 (line 824)

  0x00007fab7410f78c: mov    %rax,0x38(%rsp)
  0x00007fab7410f791: nop
  0x00007fab7410f792: nop
  0x00007fab7410f793: nop
  0x00007fab7410f794: nop
  0x00007fab7410f795: nop
  0x00007fab7410f796: nop
  0x00007fab7410f797: callq  0x00007fab74047d60  ; OopMap{[56]=Oop off=508}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x00007fab7410f79c: mov    0x38(%rsp),%rax
  0x00007fab7410f7a1: jmpq   0x00007fab7410f8ee  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@46 (line 824)

  0x00007fab7410f7a6: xchg   %ax,%ax
  0x00007fab7410f7a8: jmpq   0x00007fab7410f886  ;   {no_reloc}
  0x00007fab7410f7ad: add    %al,(%rax)
  0x00007fab7410f7af: add    %al,(%rax)
  0x00007fab7410f7b1: add    %ch,%cl
  0x00007fab7410f7b3: flds   (%rax)
  0x00007fab7410f7b5: add    %al,(%rax)         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@22 (line 821)

  0x00007fab7410f7b7: mov    %rax,%rdx
  0x00007fab7410f7ba: movabs $0x7fab61af7320,%rsi  ;   {metadata(method data for {method} {0x00007fab61895bf8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410f7c4: addq   $0x1,0x180(%rsi)
  0x00007fab7410f7cc: mov    %rcx,%rdx
  0x00007fab7410f7cf: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@27 (line 821)

  0x00007fab7410f7d2: mov    %rax,0x40(%rsp)
  0x00007fab7410f7d7: callq  0x00007fab74047d60  ; OopMap{[64]=Oop off=572}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x00007fab7410f7dc: mov    0x40(%rsp),%rax
  0x00007fab7410f7e1: jmpq   0x00007fab7410f8ee  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@30 (line 821)

  0x00007fab7410f7e6: xchg   %ax,%ax
  0x00007fab7410f7e8: jmpq   0x00007fab7410f8ac  ;   {no_reloc}
  0x00007fab7410f7ed: add    %al,(%rax)
  0x00007fab7410f7ef: add    %al,(%rax)
  0x00007fab7410f7f1: add    %ch,%cl
  0x00007fab7410f7f3: mov    $0x48000000,%edi   ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@4 (line 818)

  0x00007fab7410f7f8: mov    %eax,%edx
  0x00007fab7410f7fa: movabs $0x7fab61af7320,%rsi  ;   {metadata(method data for {method} {0x00007fab61895bf8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7410f804: addq   $0x1,0x150(%rsi)
  0x00007fab7410f80c: mov    %rdi,%rdx
  0x00007fab7410f80f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@9 (line 818)

  0x00007fab7410f812: mov    %rax,0x48(%rsp)
  0x00007fab7410f817: callq  0x00007fab74047d60  ; OopMap{[72]=Oop off=636}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x00007fab7410f81c: mov    0x48(%rsp),%rax
  0x00007fab7410f821: jmpq   0x00007fab7410f8ee
  0x00007fab7410f826: mov    %rdx,0x8(%rsp)
  0x00007fab7410f82b: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7410f833: callq  0x00007fab741005e0  ; OopMap{rsi=Oop r8=Oop off=664}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x00007fab7410f838: jmpq   0x00007fab7410f601
  0x00007fab7410f83d: callq  0x00007fab740fc000  ; OopMap{r8=Oop rsi=Oop off=674}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x00007fab7410f842: nop
  0x00007fab7410f843: nop
  0x00007fab7410f844: nop
  0x00007fab7410f845: nop
  0x00007fab7410f846: nop
  0x00007fab7410f847: callq  0x00007fab74048160  ; OopMap{off=684}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x00007fab7410f84c: jmpq   0x00007fab7410f750
  0x00007fab7410f851: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab7410f85b: mov    $0xa050f00,%eax
  0x00007fab7410f860: callq  0x00007fab740ff5e0  ; OopMap{off=709}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x00007fab7410f865: jmpq   0x00007fab7410f760
  0x00007fab7410f86a: mov    %rdx,%rdx
  0x00007fab7410f86d: callq  0x00007fab740fc4a0  ; OopMap{off=722}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x00007fab7410f872: jmpq   0x00007fab7410f76f
  0x00007fab7410f877: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab7410f881: mov    $0xa050f00,%eax
  0x00007fab7410f886: callq  0x00007fab740ff5e0  ; OopMap{off=747}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x00007fab7410f88b: jmpq   0x00007fab7410f7a8
  0x00007fab7410f890: mov    %rdx,%rdx
  0x00007fab7410f893: callq  0x00007fab740fc4a0  ; OopMap{off=760}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x00007fab7410f898: jmpq   0x00007fab7410f7b7
  0x00007fab7410f89d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab7410f8a7: mov    $0xa050f00,%eax
  0x00007fab7410f8ac: callq  0x00007fab740ff5e0  ; OopMap{off=785}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x00007fab7410f8b1: jmpq   0x00007fab7410f7e8
  0x00007fab7410f8b6: mov    %rdx,%rdx
  0x00007fab7410f8b9: callq  0x00007fab740fc4a0  ; OopMap{off=798}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x00007fab7410f8be: jmpq   0x00007fab7410f7f7
  0x00007fab7410f8c3: nop
  0x00007fab7410f8c4: nop
  0x00007fab7410f8c5: mov    0x2c0(%r15),%rax
  0x00007fab7410f8cc: movabs $0x0,%r10
  0x00007fab7410f8d6: mov    %r10,0x2c0(%r15)
  0x00007fab7410f8dd: movabs $0x0,%r10
  0x00007fab7410f8e7: mov    %r10,0x2c8(%r15)
  0x00007fab7410f8ee: add    $0x60,%rsp
  0x00007fab7410f8f2: pop    %rbp
  0x00007fab7410f8f3: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7410f8f8: hlt    
  0x00007fab7410f8f9: hlt    
  0x00007fab7410f8fa: hlt    
  0x00007fab7410f8fb: hlt    
  0x00007fab7410f8fc: hlt    
  0x00007fab7410f8fd: hlt    
  0x00007fab7410f8fe: hlt    
  0x00007fab7410f8ff: hlt    
[Stub Code]
  0x00007fab7410f900: nop                       ;   {no_reloc}
  0x00007fab7410f901: nop
  0x00007fab7410f902: nop
  0x00007fab7410f903: nop
  0x00007fab7410f904: nop
  0x00007fab7410f905: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7410f90f: jmpq   0x00007fab7410f90f  ;   {runtime_call}
  0x00007fab7410f914: nop
  0x00007fab7410f915: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7410f91f: jmpq   0x00007fab7410f91f  ;   {runtime_call}
  0x00007fab7410f924: nop
  0x00007fab7410f925: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7410f92f: jmpq   0x00007fab7410f92f  ;   {runtime_call}
  0x00007fab7410f934: nop
  0x00007fab7410f935: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7410f93f: jmpq   0x00007fab7410f93f  ;   {runtime_call}
[Exception Handler]
  0x00007fab7410f944: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab7410f949: mov    %rsp,-0x28(%rsp)
  0x00007fab7410f94e: sub    $0x80,%rsp
  0x00007fab7410f955: mov    %rax,0x78(%rsp)
  0x00007fab7410f95a: mov    %rcx,0x70(%rsp)
  0x00007fab7410f95f: mov    %rdx,0x68(%rsp)
  0x00007fab7410f964: mov    %rbx,0x60(%rsp)
  0x00007fab7410f969: mov    %rbp,0x50(%rsp)
  0x00007fab7410f96e: mov    %rsi,0x48(%rsp)
  0x00007fab7410f973: mov    %rdi,0x40(%rsp)
  0x00007fab7410f978: mov    %r8,0x38(%rsp)
  0x00007fab7410f97d: mov    %r9,0x30(%rsp)
  0x00007fab7410f982: mov    %r10,0x28(%rsp)
  0x00007fab7410f987: mov    %r11,0x20(%rsp)
  0x00007fab7410f98c: mov    %r12,0x18(%rsp)
  0x00007fab7410f991: mov    %r13,0x10(%rsp)
  0x00007fab7410f996: mov    %r14,0x8(%rsp)
  0x00007fab7410f99b: mov    %r15,(%rsp)
  0x00007fab7410f99f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7410f9a9: movabs $0x7fab7410f949,%rsi  ;   {internal_word}
  0x00007fab7410f9b3: mov    %rsp,%rdx
  0x00007fab7410f9b6: and    $0xfffffffffffffff0,%rsp
  0x00007fab7410f9ba: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7410f9bf: hlt    
[Deopt Handler Code]
  0x00007fab7410f9c0: movabs $0x7fab7410f9c0,%r10  ;   {section_word}
  0x00007fab7410f9ca: push   %r10
  0x00007fab7410f9cc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7410f9d1: hlt    
  0x00007fab7410f9d2: hlt    
  0x00007fab7410f9d3: hlt    
  0x00007fab7410f9d4: hlt    
  0x00007fab7410f9d5: hlt    
  0x00007fab7410f9d6: hlt    
  0x00007fab7410f9d7: hlt    
<nmethod compile_id='11' compiler='C1' level='3' entry='0x00007fab7410f5a0' size='2288' address='0x00007fab7410f3d0' relocation_offset='312' insts_offset='464' stub_offset='1328' scopes_data_offset='1552' scopes_pcs_offset='1784' dependencies_offset='2264' nul_chk_table_offset='2272' metadata_offset='1544' method='java/lang/String getChars (II[CI)V' bytes='62' count='262' iicount='262' stamp='0.064'/>
<writer thread='140374823413504'/>
<task_queued compile_id='12' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='59' count='256' iicount='256' level='3' stamp='0.064' comment='tiered' hot_count='256'/>
<task_queued compile_id='13' method='java/lang/String charAt (I)C' bytes='29' count='5632' iicount='5632' level='4' stamp='0.064' comment='tiered' hot_count='5632'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
com/github/marschall/charsequences/CharSequences.hexDigit  [0x00007fab7410fe60, 0x00007fab741101c8]  872 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab61c93460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;
  # parm0:    rsi       = char
  #           [sp+0x40]  (sp of caller)
  0x00007fab7410fe60: mov    %eax,-0x14000(%rsp)
  0x00007fab7410fe67: push   %rbp
  0x00007fab7410fe68: sub    $0x30,%rsp
  0x00007fab7410fe6c: movabs $0x7fab61c938d8,%rax  ;   {metadata(method data for {method} {0x00007fab61c93460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab7410fe76: mov    0xfc(%rax),%edx
  0x00007fab7410fe7c: add    $0x8,%edx
  0x00007fab7410fe7f: mov    %edx,0xfc(%rax)
  0x00007fab7410fe85: movabs $0x7fab61c93460,%rax  ;   {metadata({method} {0x00007fab61c93460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab7410fe8f: and    $0x1ff8,%edx
  0x00007fab7410fe95: cmp    $0x0,%edx
  0x00007fab7410fe98: je     0x00007fab741100a6  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; -
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.services.JVMCIClassLoaderFactory from /home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci-services.jar]
<writer thread='140373945784064'/>
 com.github.marschall.charsequences.CharSequences::hexDigit@0 (line 496)

  0x00007fab7410fe9e: cmp    $0x30,%esi
  0x00007fab7410fea1: movabs $0x7fab61c938d8,%rax  ;   {metadata(method data for {method} {0x00007fab61c93460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab7410feab: movabs $0x130,%rdx
  0x00007fab7410feb5: jl     0x00007fab7410fec5
  0x00007fab7410febb: movabs $0x140,%rdx
  0x00007fab7410fec5: mov    (%rax,%rdx,1),%rdi
  0x00007fab7410fec9: lea    0x1(%rdi),%rdi
  0x00007fab7410fecd: mov    %rdi,(%rax,%rdx,1)
  0x00007fab7410fed1: jl     0x00007fab7410ff10  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)

  0x00007fab7410fed7: cmp    $0x39,%esi
  0x00007fab7410feda: movabs $0x7fab61c938d8,%rax  ;   {metadata(method data for {method} {0x00007fab61c93460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab7410fee4: movabs $0x150,%rdx
  0x00007fab7410feee: jg     0x00007fab7410fefe
  0x00007fab7410fef4: movabs $0x160,%rdx
  0x00007fab7410fefe: mov    (%rax,%rdx,1),%rdi
  0x00007fab7410ff02: lea    0x1(%rdi),%rdi
  0x00007fab7410ff06: mov    %rdi,(%rax,%rdx,1)
  0x00007fab7410ff0a: jle    0x00007fab74110018  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)

  0x00007fab7410ff10: cmp    $0x61,%esi
  0x00007fab7410ff13: movabs $0x7fab61c938d8,%rax  ;   {metadata(method data for {method} {0x00007fab61c93460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab7410ff1d: movabs $0x170,%rdx
  0x00007fab7410ff27: jl     0x00007fab7410ff37
  0x00007fab7410ff2d: movabs $0x180,%rdx
  0x00007fab7410ff37: mov    (%rax,%rdx,1),%rdi
  0x00007fab7410ff3b: lea    0x1(%rdi),%rdi
  0x00007fab7410ff3f: mov    %rdi,(%rax,%rdx,1)
  0x00007fab7410ff43: jl     0x00007fab7410ff82  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)

  0x00007fab7410ff49: cmp    $0x66,%esi
  0x00007fab7410ff4c: movabs $0x7fab61c938d8,%rax  ;   {metadata(method data for {method} {0x00007fab61c93460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab7410ff56: movabs $0x190,%rdx
  0x00007fab7410ff60: jg     0x00007fab7410ff70
  0x00007fab7410ff66: movabs $0x1a0,%rdx
  0x00007fab7410ff70: mov    (%rax,%rdx,1),%rdi
  0x00007fab7410ff74: lea    0x1(%rdi),%rdi
  0x00007fab7410ff78: mov    %rdi,(%rax,%rdx,1)
  0x00007fab7410ff7c: jle    0x00007fab74110006  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)

  0x00007fab7410ff82: cmp    $0x41,%esi
  0x00007fab7410ff85: movabs $0x7fab61c938d8,%rax  ;   {metadata(method data for {method} {0x00007fab61c93460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab7410ff8f: movabs $0x1b0,%rdx
  0x00007fab7410ff99: jl     0x00007fab7410ffa9
  0x00007fab7410ff9f: movabs $0x1c0,%rdx
  0x00007fab7410ffa9: mov    (%rax,%rdx,1),%rdi
  0x00007fab7410ffad: lea    0x1(%rdi),%rdi
  0x00007fab7410ffb1: mov    %rdi,(%rax,%rdx,1)
  0x00007fab7410ffb5: jl     0x00007fab7411002a  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@37 (line 505)

  0x00007fab7410ffbb: cmp    $0x46,%esi
  0x00007fab7410ffbe: movabs $0x7fab61c938d8,%rax  ;   {metadata(method data for {method} {0x00007fab61c93460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab7410ffc8: movabs $0x1d0,%rdx
  0x00007fab7410ffd2: jg     0x00007fab7410ffe2
  0x00007fab7410ffd8: movabs $0x1e0,%rdx
  0x00007fab7410ffe2: mov    (%rax,%rdx,1),%rdi
  0x00007fab7410ffe6: lea    0x1(%rdi),%rdi
  0x00007fab7410ffea: mov    %rdi,(%rax,%rdx,1)
  0x00007fab7410ffee: jg     0x00007fab7411002a  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@43 (line 505)

  0x00007fab7410fff4: sub    $0x37,%esi
  0x00007fab7410fff7: mov    %rsi,%rax
  0x00007fab7410fffa: add    $0x30,%rsp
  0x00007fab7410fffe: pop    %rbp
  0x00007fab7410ffff: test   %eax,0x1b6d20fb(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74110005: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@50 (line 509)

  0x00007fab74110006: sub    $0x57,%esi
  0x00007fab74110009: mov    %rsi,%rax
  0x00007fab7411000c: add    $0x30,%rsp
  0x00007fab74110010: pop    %rbp
  0x00007fab74110011: test   %eax,0x1b6d20e9(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74110017: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@33 (line 503)

  0x00007fab74110018: sub    $0x30,%esi
  0x00007fab7411001b: mov    %rsi,%rax
  0x00007fab7411001e: add    $0x30,%rsp
  0x00007fab74110022: pop    %rbp
  0x00007fab74110023: test   %eax,0x1b6d20d7(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74110029: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@16 (line 497)

  0x00007fab7411002a: nopw   0x0(%rax,%rax,1)
  0x00007fab74110030: jmpq   0x00007fab741100cc  ;   {no_reloc}
  0x00007fab74110035: add    %al,(%rax)
  0x00007fab74110037: add    %al,(%rax)
  0x00007fab74110039: add    %cl,-0x75(%rcx)
  0x00007fab7411003c: rex.RXB (bad) 
  0x00007fab7411003e: lea    0x20(%rax),%rdi
  0x00007fab74110042: cmp    0x70(%r15),%rdi
  0x00007fab74110046: ja     0x00007fab741100d6
  0x00007fab7411004c: mov    %rdi,0x60(%r15)
  0x00007fab74110050: mov    0xa8(%rdx),%rcx
  0x00007fab74110057: mov    %rcx,(%rax)
  0x00007fab7411005a: mov    %rdx,%rcx
  0x00007fab7411005d: shr    $0x3,%rcx
  0x00007fab74110061: mov    %ecx,0x8(%rax)
  0x00007fab74110064: xor    %rcx,%rcx
  0x00007fab74110067: mov    %ecx,0xc(%rax)
  0x00007fab7411006a: xor    %rcx,%rcx
  0x00007fab7411006d: mov    %rcx,0x10(%rax)
  0x00007fab74110071: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@51 (line 511)

  0x00007fab74110075: mov    %rax,%rsi
  0x00007fab74110078: movabs $0x7fab61c938d8,%rdi  ;   {metadata(method data for {method} {0x00007fab61c93460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74110082: addq   $0x1,0x1f0(%rdi)
  0x00007fab7411008a: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@55 (line 511)

  0x00007fab7411008d: mov    %rax,0x20(%rsp)
  0x00007fab74110092: nop
  0x00007fab74110093: nop
  0x00007fab74110094: nop
  0x00007fab74110095: nop
  0x00007fab74110096: nop
  0x00007fab74110097: callq  0x00007fab74047d60  ; OopMap{[32]=Oop off=572}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@55 (line 511)
                                                ;   {optimized virtual_call}
  0x00007fab7411009c: mov    0x20(%rsp),%rax
  0x00007fab741100a1: jmpq   0x00007fab7411010b
  0x00007fab741100a6: mov    %rax,0x8(%rsp)
  0x00007fab741100ab: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741100b3: callq  0x00007fab741005e0  ; OopMap{off=600}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@-1 (line 496)
                                                ;   {runtime_call}
  0x00007fab741100b8: jmpq   0x00007fab7410fe9e
  0x00007fab741100bd: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab741100c7: mov    $0xa050f00,%eax
  0x00007fab741100cc: callq  0x00007fab740ff5e0  ; OopMap{off=625}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@51 (line 511)
                                                ;   {runtime_call}
  0x00007fab741100d1: jmpq   0x00007fab74110030
  0x00007fab741100d6: mov    %rdx,%rdx
  0x00007fab741100d9: callq  0x00007fab740fc760  ; OopMap{off=638}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@51 (line 511)
                                                ;   {runtime_call}
  0x00007fab741100de: jmp    0x00007fab74110075
  0x00007fab741100e0: nop
  0x00007fab741100e1: nop
  0x00007fab741100e2: mov    0x2c0(%r15),%rax
  0x00007fab741100e9: movabs $0x0,%r10
  0x00007fab741100f3: mov    %r10,0x2c0(%r15)
  0x00007fab741100fa: movabs $0x0,%r10
  0x00007fab74110104: mov    %r10,0x2c8(%r15)
  0x00007fab7411010b: add    $0x30,%rsp
  0x00007fab7411010f: pop    %rbp
  0x00007fab74110110: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74110115: hlt    
  0x00007fab74110116: hlt    
  0x00007fab74110117: hlt    
  0x00007fab74110118: hlt    
  0x00007fab74110119: hlt    
  0x00007fab7411011a: hlt    
  0x00007fab7411011b: hlt    
  0x00007fab7411011c: hlt    
  0x00007fab7411011d: hlt    
  0x00007fab7411011e: hlt    
  0x00007fab7411011f: hlt    
[Stub Code]
  0x00007fab74110120: nop                       ;   {no_reloc}
  0x00007fab74110121: nop
  0x00007fab74110122: nop
  0x00007fab74110123: nop
  0x00007fab74110124: nop
  0x00007fab74110125: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411012f: jmpq   0x00007fab7411012f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74110134: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74110139: mov    %rsp,-0x28(%rsp)
  0x00007fab7411013e: sub    $0x80,%rsp
  0x00007fab74110145: mov    %rax,0x78(%rsp)
  0x00007fab7411014a: mov    %rcx,0x70(%rsp)
  0x00007fab7411014f: mov    %rdx,0x68(%rsp)
  0x00007fab74110154: mov    %rbx,0x60(%rsp)
  0x00007fab74110159: mov    %rbp,0x50(%rsp)
  0x00007fab7411015e: mov    %rsi,0x48(%rsp)
  0x00007fab74110163: mov    %rdi,0x40(%rsp)
  0x00007fab74110168: mov    %r8,0x38(%rsp)
  0x00007fab7411016d: mov    %r9,0x30(%rsp)
  0x00007fab74110172: mov    %r10,0x28(%rsp)
  0x00007fab74110177: mov    %r11,0x20(%rsp)
  0x00007fab7411017c: mov    %r12,0x18(%rsp)
  0x00007fab74110181: mov    %r13,0x10(%rsp)
  0x00007fab74110186: mov    %r14,0x8(%rsp)
  0x00007fab7411018b: mov    %r15,(%rsp)
  0x00007fab7411018f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74110199: movabs $0x7fab74110139,%rsi  ;   {internal_word}
  0x00007fab741101a3: mov    %rsp,%rdx
  0x00007fab741101a6: and    $0xfffffffffffffff0,%rsp
  0x00007fab741101aa: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741101af: hlt    
[Deopt Handler Code]
  0x00007fab741101b0: movabs $0x7fab741101b0,%r10  ;   {section_word}
  0x00007fab741101ba: push   %r10
  0x00007fab741101bc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab741101c1: hlt    
  0x00007fab741101c2: hlt    
  0x00007fab741101c3: hlt    
  0x00007fab741101c4: hlt    
  0x00007fab741101c5: hlt    
  0x00007fab741101c6: hlt    
  0x00007fab741101c7: hlt    
<nmethod compile_id='12' compiler='C1' level='3' entry='0x00007fab7410fe60' size='1688' address='0x00007fab7410fcd0' relocation_offset='312' insts_offset='400' stub_offset='1104' scopes_data_offset='1288' scopes_pcs_offset='1392' dependencies_offset='1680' oops_offset='1272' metadata_offset='1280' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='59' count='4064' iicount='4064' stamp='0.065'/>
<writer thread='140374823413504'/>
<task_queued compile_id='14' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='276' count='128' backedge_count='4064' iicount='128' level='3' stamp='0.065' comment='tiered' hot_count='128'/>
<writer thread='140373948942080'/>
[Loaded java.nio.file.Paths from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140374823413504'/>
<task_queued compile_id='15' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='59' count='5632' iicount='5632' level='4' stamp='0.066' comment='tiered' hot_count='5632'/>
<writer thread='140373948942080'/>
[Loaded java.nio.file.FileSystems from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.file.FileSystems$DefaultFileSystemHolder from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.file.FileSystems$DefaultFileSystemHolder$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140374823413504'/>
<task_queued compile_id='16' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='256' iicount='256' level='3' stamp='0.066' comment='tiered' hot_count='256'/>
<task_queued compile_id='17' method='java/util/UUID &lt;init&gt; (JJ)V' bytes='15' count='256' iicount='256' level='3' stamp='0.066' comment='tiered' hot_count='256'/>
<writer thread='140373948942080'/>
[Loaded sun.nio.fs.DefaultFileSystemProvider from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140374823413504'/>
----------------------------------------------------------------------
java/lang/System.identityHashCode  [0x00007fab74110520, 0x00007fab74110750]  560 bytes
[Entry Point]
  # {method} {0x00007fab618ae7e8} &apos;identityHashCode&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;jav
<writer thread='140373948942080'/>
[Loaded java.nio.file.spi.FileSystemProvider from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140374823413504'/>
a/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fab74110520: mov    0x8(%rsi),%r10d
  0x00007fab74110524: shl    $0x3,%r10
  0x00007fab74110528: cmp    %r10,%rax
  0x00007fab7411052b: je     0x00007fab74110538
  0x00007fab74110531: jmpq   0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74110536: xchg   %ax,%ax
[Verified Entry Point]
  0x00007fab74110538: cmp    $0x0,%rsi
  0x00007fab7411053c: jne    0x00007fab74110546
  0x00007fab74110542: xor    %rax,%rax
  0x00007fab74110545: retq   
  0x00007fab74110546: mov    (%rsi),%rax
  0x00007fab74110549: test   $0x1,%rax
  0x00007fab7411054f: je     0x00007fab74110573
  0x00007fab74110555: test   $0x4,%rax
  0x00007fab7411055b: jne    0x00007fab74110573
  0x00007fab74110561: shr    $0x8,%rax
  0x00007fab74110565: and    $0x7fffffff,%rax
  0x00007fab7411056c: je     0x00007fab74110573
  0x00007fab74110572: retq   
  0x00007fab74110573: mov    %eax,-0x14000(%rsp)
  0x00007fab7411057a: push   %rbp
  0x00007fab7411057b: mov    %rsp,%rbp
  0x00007fab7411057e: sub    $0x40,%rsp
  0x00007fab74110582: mov    %rsi,(%rsp)
  0x00007fab74110586: cmp    $0x0,%rsi
  0x00007fab7411058a: lea    (%rsp),%rdx
  0x00007fab7411058e: cmove  (%rsp),%rdx
  0x00007fab74110593: movabs $0x670b80c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007fab7411059d: mov    %r14,0x30(%rsp)
  0x00007fab741105a2: lea    0x30(%rsp),%r14
  0x00007fab741105a7: mov    %r14,%rsi          ; OopMap{[0]=Oop [48]=Oop off=138}
  0x00007fab741105aa: movabs $0x7fab741105aa,%r10  ;   {section_word}
  0x00007fab741105b4: mov    %r10,0x1c8(%r15)
  0x00007fab741105bb: mov    %rsp,0x1c0(%r15)
  0x00007fab741105c2: cmpb   $0x0,0x1a86440b(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab741105c9: je     0x00007fab74110603
  0x00007fab741105cf: push   %rsi
  0x00007fab741105d0: push   %rdx
  0x00007fab741105d1: movabs $0x7fab618ae7e8,%rsi  ;   {metadata({method} {0x00007fab618ae7e8} &apos;identityHashCode&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/lang/System&apos;)}
  0x00007fab741105db: mov    %r15,%rdi
  0x00007fab741105de: test   $0xf,%esp
  0x00007fab741105e4: je     0x00007fab741105fc
  0x00007fab741105ea: sub    $0x8,%rsp
  0x00007fab741105ee: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab741105f3: add    $0x8,%rsp
  0x00007fab741105f7: jmpq   0x00007fab74110601
  0x00007fab741105fc: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab74110601: pop    %rdx
  0x00007fab74110602: pop    %rsi
  0x00007fab74110603: lea    0x1e0(%r15),%rdi
  0x00007fab7411060a: movl   $0x4,0x258(%r15)
  0x00007fab74110615: callq  0x00007fab8d07fe50  ;   {runtime_call}
  0x00007fab7411061a: vzeroupper 
  0x00007fab7411061d: movl   $0x5,0x258(%r15)
  0x00007fab74110628: mov    %r15d,%ecx
  0x00007fab7411062b: shr    $0x4,%ecx
  0x00007fab7411062e: and    $0xffc,%ecx
  0x00007fab74110634: movabs $0x7fab8f7e1000,%r10  ;   {external_word}
  0x00007fab7411063e: mov    %ecx,(%r10,%rcx,1)
  0x00007fab74110642: cmpl   $0x0,0x1a86f370(%rip)        # 0x00007fab8e97f9bc
                                                ;   {external_word}
  0x00007fab7411064c: jne    0x00007fab74110660
  0x00007fab74110652: cmpl   $0x0,0x30(%r15)
  0x00007fab7411065a: je     0x00007fab74110681
  0x00007fab74110660: mov    %rax,-0x8(%rbp)
  0x00007fab74110664: mov    %r15,%rdi
  0x00007fab74110667: mov    %rsp,%r12
  0x00007fab7411066a: sub    $0x0,%rsp
  0x00007fab7411066e: and    $0xfffffffffffffff0,%rsp
  0x00007fab74110672: callq  0x00007fab8e40fc20  ;   {runtime_call}
  0x00007fab74110677: mov    %r12,%rsp
  0x00007fab7411067a: xor    %r12,%r12
  0x00007fab7411067d: mov    -0x8(%rbp),%rax
  0x00007fab74110681: movl   $0x8,0x258(%r15)
  0x00007fab7411068c: cmpl   $0x1,0x2b0(%r15)
  0x00007fab74110697: je     0x00007fab74110727
  0x00007fab7411069d: cmpb   $0x0,0x1a864330(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab741106a4: je     0x00007fab741106e2
  0x00007fab741106aa: mov    %rax,-0x8(%rbp)
  0x00007fab741106ae: movabs $0x7fab618ae7e8,%rsi  ;   {metadata({method} {0x00007fab618ae7e8} &apos;identityHashCode&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/lang/System&apos;)}
  0x00007fab741106b8: mov    %r15,%rdi
  0x00007fab741106bb: test   $0xf,%esp
  0x00007fab741106c1: je     0x00007fab741106d9
  0x00007fab741106c7: sub    $0x8,%rsp
  0x00007fab741106cb: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab741106d0: add    $0x8,%rsp
  0x00007fab741106d4: jmpq   0x00007fab741106de
  0x00007fab741106d9: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab741106de: mov    -0x8(%rbp),%rax
  0x00007fab741106e2: movabs $0x0,%r10
  0x00007fab741106ec: mov    %r10,0x1c0(%r15)
  0x00007fab741106f3: movabs $0x0,%r10
  0x00007fab741106fd: mov    %r10,0x1c8(%r15)
  0x00007fab74110704: mov    0x38(%r15),%rcx
  0x00007fab74110708: movl   $0x0,0x100(%rcx)
  0x00007fab74110712: leaveq 
  0x00007fab74110713: cmpq   $0x0,0x8(%r15)
  0x00007fab7411071b: jne    0x00007fab74110722
  0x00007fab74110721: retq   
  0x00007fab74110722: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00007fab74110727: mov    %rax,-0x8(%rbp)
  0x00007fab7411072b: mov    %rsp,%r12
  0x00007fab7411072e: sub    $0x0,%rsp
  0x00007fab74110732: and    $0xfffffffffffffff0,%rsp
  0x00007fab74110736: callq  0x00007fab8e372120  ;   {runtime_call}
  0x00007fab7411073b: mov    %r12,%rsp
  0x00007fab7411073e: xor    %r12,%r12
  0x00007fab74110741: mov    -0x8(%rbp),%rax
  0x00007fab74110745: jmpq   0x00007fab7411069d
  0x00007fab7411074a: hlt    
  0x00007fab7411074b: hlt    
  0x00007fab7411074c: hlt    
  0x00007fab7411074d: hlt    
  0x00007fab7411074e: hlt    
  0x00007fab7411074f: hlt    
<nmethod compile_id='18' compile_kind='c2n' level='0' entry='0x00007fab74110520' size='960' address='0x00007fab74110390' relocation_offset='312' consts_offset='960' insts_offset='400' method='java/lang/System identityHashCode (Ljava/lang/Object;)I' bytes='0' count='384' iicount='384' stamp='0.067'/>
<writer thread='140373948942080'/>
[Loaded sun.nio.fs.AbstractFileSystemProvider from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
com/github/marschall/charsequences/CharSequences.uuidFromCharSequence  [0x00007fab74110ae0, 0x00007fab74113468]  10632 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/CharSequence&apos;
  #           [sp+0xf0]  (sp of caller)
  0x00007fab74110ae0: mov    %eax,-0x14000(%rsp)
  0x00007fab74110ae7: push   %rbp
  0x00007fab74110ae8: sub    $0xe0,%rsp
  0x00007fab74110aef: mov    %rsi,0x68(%rsp)
  0x00007fab74110af4: movabs $0x7fab61c94028,%rdi  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74110afe: mov    0xfc(%rdi),%ebx
  0x00007fab74110b04: add    $0x8,%ebx
  0x00007fab74110b07: mov    %ebx,0xfc(%rdi)
  0x00007fab74110b0d: movabs $0x7fab61c932a8,%rdi  ;   {metadata({method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74110b17: and    $0x1ff8,%ebx
  0x00007fab74110b1d: cmp    $0x0,%ebx
  0x00007fab74110b20: je     0x00007fab74113081  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@0 (line 455)

  0x00007fab74110b26: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00007fab74113098
  0x00007fab74110b29: mov    %rsi,%rdi
  0x00007fab74110b2c: movabs $0x7fab61c94028,%rbx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74110b36: mov    0x8(%rdi),%edi
  0x00007fab74110b39: shl    $0x3,%rdi
  0x00007fab74110b3d: cmp    0x140(%rbx),%rdi
  0x00007fab74110b44: jne    0x00007fab74110b53
  0x00007fab74110b46: addq   $0x1,0x148(%rbx)
  0x00007fab74110b4e: jmpq   0x00007fab74110d15
  0x00007fab74110b53: cmp    0x150(%rbx),%rdi
  0x00007fab74110b5a: jne    0x00007fab74110b69
  0x00007fab74110b5c: addq   $0x1,0x158(%rbx)
  0x00007fab74110b64: jmpq   0x00007fab74110d15
  0x00007fab74110b69: cmp    0x160(%rbx),%rdi
  0x00007fab74110b70: jne    0x00007fab74110b7f
  0x00007fab74110b72: addq   $0x1,0x168(%rbx)
  0x00007fab74110b7a: jmpq   0x00007fab74110d15
  0x00007fab74110b7f: cmp    0x170(%rbx),%rdi
  0x00007fab74110b86: jne    0x00007fab74110b95
  0x00007fab74110b88: addq   $0x1,0x178(%rbx)
  0x00007fab74110b90: jmpq   0x00007fab74110d15
  0x00007fab74110b95: cmp    0x180(%rbx),%rdi
  0x00007fab74110b9c: jne    0x00007fab74110bab
  0x00007fab74110b9e: addq   $0x1,0x188(%rbx)
  0x00007fab74110ba6: jmpq   0x00007fab74110d15
  0x00007fab74110bab: cmp    0x190(%rbx),%rdi
  0x00007fab74110bb2: jne    0x00007fab74110bc1
  0x00007fab74110bb4: addq   $0x1,0x198(%rbx)
  0x00007fab74110bbc: jmpq   0x00007fab74110d15
  0x00007fab74110bc1: cmp    0x1a0(%rbx),%rdi
  0x00007fab74110bc8: jne    0x00007fab74110bd7
  0x00007fab74110bca: addq   $0x1,0x1a8(%rbx)
  0x00007fab74110bd2: jmpq   0x00007fab74110d15
  0x00007fab74110bd7: cmp    0x1b0(%rbx),%rdi
  0x00007fab74110bde: jne    0x00007fab74110bed
  0x00007fab74110be0: addq   $0x1,0x1b8(%rbx)
  0x00007fab74110be8: jmpq   0x00007fab74110d15
  0x00007fab74110bed: cmpq   $0x0,0x140(%rbx)
  0x00007fab74110bf8: jne    0x00007fab74110c11
  0x00007fab74110bfa: mov    %rdi,0x140(%rbx)
  0x00007fab74110c01: movq   $0x1,0x148(%rbx)
  0x00007fab74110c0c: jmpq   0x00007fab74110d15
  0x00007fab74110c11: cmpq   $0x0,0x150(%rbx)
  0x00007fab74110c1c: jne    0x00007fab74110c35
  0x00007fab74110c1e: mov    %rdi,0x150(%rbx)
  0x00007fab74110c25: movq   $0x1,0x158(%rbx)
  0x00007fab74110c30: jmpq   0x00007fab74110d15
  0x00007fab74110c35: cmpq   $0x0,0x160(%rbx)
  0x00007fab74110c40: jne    0x00007fab74110c59
  0x00007fab74110c42: mov    %rdi,0x160(%rbx)
  0x00007fab74110c49: movq   $0x1,0x168(%rbx)
  0x00007fab74110c54: jmpq   0x00007fab74110d15
  0x00007fab74110c59: cmpq   $0x0,0x170(%rbx)
  0x00007fab74110c64: jne    0x00007fab74110c7d
  0x00007fab74110c66: mov    %rdi,0x170(%rbx)
  0x00007fab74110c6d: movq   $0x1,0x178(%rbx)
  0x00007fab74110c78: jmpq   0x00007fab74110d15
  0x00007fab74110c7d: cmpq   $0x0,0x180(%rbx)
  0x00007fab74110c88: jne    0x00007fab74110ca1
  0x00007fab74110c8a: mov    %rdi,0x180(%rbx)
  0x00007fab74110c91: movq   $0x1,0x188(%rbx)
  0x00007fab74110c9c: jmpq   0x00007fab74110d15
  0x00007fab74110ca1: cmpq   $0x0,0x190(%rbx)
  0x00007fab74110cac: jne    0x00007fab74110cc5
  0x00007fab74110cae: mov    %rdi,0x190(%rbx)
  0x00007fab74110cb5: movq   $0x1,0x198(%rbx)
  0x00007fab74110cc0: jmpq   0x00007fab74110d15
  0x00007fab74110cc5: cmpq   $0x0,0x1a0(%rbx)
  0x00007fab74110cd0: jne    0x00007fab74110ce9
  0x00007fab74110cd2: mov    %rdi,0x1a0(%rbx)
  0x00007fab74110cd9: movq   $0x1,0x1a8(%rbx)
  0x00007fab74110ce4: jmpq   0x00007fab74110d15
  0x00007fab74110ce9: cmpq   $0x0,0x1b0(%rbx)
  0x00007fab74110cf4: jne    0x00007fab74110d0d
  0x00007fab74110cf6: mov    %rdi,0x1b0(%rbx)
  0x00007fab74110cfd: movq   $0x1,0x1b8(%rbx)
  0x00007fab74110d08: jmpq   0x00007fab74110d15
  0x00007fab74110d0d: addq   $0x1,0x130(%rbx)
  0x00007fab74110d15: mov    %rsi,%rdi
  0x00007fab74110d18: mov    %rdi,%rsi          ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)

  0x00007fab74110d1b: nop
  0x00007fab74110d1c: nop
  0x00007fab74110d1d: movabs $0xffffffffffffffff,%rax
  0x00007fab74110d27: callq  0x00007fab74047f60  ; OopMap{[104]=Oop off=588}
                                                ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ;   {virtual_call}
  0x00007fab74110d2c: cmp    $0x24,%eax
  0x00007fab74110d2f: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74110d39: movabs $0x1c8,%rsi
  0x00007fab74110d43: je     0x00007fab74110d53
  0x00007fab74110d49: movabs $0x1d8,%rsi
  0x00007fab74110d53: mov    (%rdx,%rsi,1),%rdi
  0x00007fab74110d57: lea    0x1(%rdi),%rdi
  0x00007fab74110d5b: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab74110d5f: jne    0x00007fab74112b51  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@8 (line 455)

  0x00007fab74110d65: mov    0x68(%rsp),%rsi
  0x00007fab74110d6a: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74110d74: mov    0x8(%rsi),%esi
  0x00007fab74110d77: shl    $0x3,%rsi
  0x00007fab74110d7b: cmp    0x208(%rdx),%rsi
  0x00007fab74110d82: jne    0x00007fab74110d91
  0x00007fab74110d84: addq   $0x1,0x210(%rdx)
  0x00007fab74110d8c: jmpq   0x00007fab74110f53
  0x00007fab74110d91: cmp    0x218(%rdx),%rsi
  0x00007fab74110d98: jne    0x00007fab74110da7
  0x00007fab74110d9a: addq   $0x1,0x220(%rdx)
  0x00007fab74110da2: jmpq   0x00007fab74110f53
  0x00007fab74110da7: cmp    0x228(%rdx),%rsi
  0x00007fab74110dae: jne    0x00007fab74110dbd
  0x00007fab74110db0: addq   $0x1,0x230(%rdx)
  0x00007fab74110db8: jmpq   0x00007fab74110f53
  0x00007fab74110dbd: cmp    0x238(%rdx),%rsi
  0x00007fab74110dc4: jne    0x00007fab74110dd3
  0x00007fab74110dc6: addq   $0x1,0x240(%rdx)
  0x00007fab74110dce: jmpq   0x00007fab74110f53
  0x00007fab74110dd3: cmp    0x248(%rdx),%rsi
  0x00007fab74110dda: jne    0x00007fab74110de9
  0x00007fab74110ddc: addq   $0x1,0x250(%rdx)
  0x00007fab74110de4: jmpq   0x00007fab74110f53
  0x00007fab74110de9: cmp    0x258(%rdx),%rsi
  0x00007fab74110df0: jne    0x00007fab74110dff
  0x00007fab74110df2: addq   $0x1,0x260(%rdx)
  0x00007fab74110dfa: jmpq   0x00007fab74110f53
  0x00007fab74110dff: cmp    0x268(%rdx),%rsi
  0x00007fab74110e06: jne    0x00007fab74110e15
  0x00007fab74110e08: addq   $0x1,0x270(%rdx)
  0x00007fab74110e10: jmpq   0x00007fab74110f53
  0x00007fab74110e15: cmp    0x278(%rdx),%rsi
  0x00007fab74110e1c: jne    0x00007fab74110e2b
  0x00007fab74110e1e: addq   $0x1,0x280(%rdx)
  0x00007fab74110e26: jmpq   0x00007fab74110f53
  0x00007fab74110e2b: cmpq   $0x0,0x208(%rdx)
  0x00007fab74110e36: jne    0x00007fab74110e4f
  0x00007fab74110e38: mov    %rsi,0x208(%rdx)
  0x00007fab74110e3f: movq   $0x1,0x210(%rdx)
  0x00007fab74110e4a: jmpq   0x00007fab74110f53
  0x00007fab74110e4f: cmpq   $0x0,0x218(%rdx)
  0x00007fab74110e5a: jne    0x00007fab74110e73
  0x00007fab74110e5c: mov    %rsi,0x218(%rdx)
  0x00007fab74110e63: movq   $0x1,0x220(%rdx)
  0x00007fab74110e6e: jmpq   0x00007fab74110f53
  0x00007fab74110e73: cmpq   $0x0,0x228(%rdx)
  0x00007fab74110e7e: jne    0x00007fab74110e97
  0x00007fab74110e80: mov    %rsi,0x228(%rdx)
  0x00007fab74110e87: movq   $0x1,0x230(%rdx)
  0x00007fab74110e92: jmpq   0x00007fab74110f53
  0x00007fab74110e97: cmpq   $0x0,0x238(%rdx)
  0x00007fab74110ea2: jne    0x00007fab74110ebb
  0x00007fab74110ea4: mov    %rsi,0x238(%rdx)
  0x00007fab74110eab: movq   $0x1,0x240(%rdx)
  0x00007fab74110eb6: jmpq   0x00007fab74110f53
  0x00007fab74110ebb: cmpq   $0x0,0x248(%rdx)
  0x00007fab74110ec6: jne    0x00007fab74110edf
  0x00007fab74110ec8: mov    %rsi,0x248(%rdx)
  0x00007fab74110ecf: movq   $0x1,0x250(%rdx)
  0x00007fab74110eda: jmpq   0x00007fab74110f53
  0x00007fab74110edf: cmpq   $0x0,0x258(%rdx)
  0x00007fab74110eea: jne    0x00007fab74110f03
  0x00007fab74110eec: mov    %rsi,0x258(%rdx)
  0x00007fab74110ef3: movq   $0x1,0x260(%rdx)
  0x00007fab74110efe: jmpq   0x00007fab74110f53
  0x00007fab74110f03: cmpq   $0x0,0x268(%rdx)
  0x00007fab74110f0e: jne    0x00007fab74110f27
  0x00007fab74110f10: mov    %rsi,0x268(%rdx)
  0x00007fab74110f17: movq   $0x1,0x270(%rdx)
  0x00007fab74110f22: jmpq   0x00007fab74110f53
  0x00007fab74110f27: cmpq   $0x0,0x278(%rdx)
  0x00007fab74110f32: jne    0x00007fab74110f4b
  0x00007fab74110f34: mov    %rsi,0x278(%rdx)
  0x00007fab74110f3b: movq   $0x1,0x280(%rdx)
  0x00007fab74110f46: jmpq   0x00007fab74110f53
  0x00007fab74110f4b: addq   $0x1,0x1f8(%rdx)
  0x00007fab74110f53: mov    $0x8,%edx
  0x00007fab74110f58: mov    0x68(%rsp),%rsi    ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@19 (line 458)

  0x00007fab74110f5d: movabs $0xffffffffffffffff,%rax
  0x00007fab74110f67: callq  0x00007fab74047f60  ; OopMap{[104]=Oop off=1164}
                                                ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@19 (line 458)
                                                ;   {virtual_call}
  0x00007fab74110f6c: cmp    $0x2d,%eax
  0x00007fab74110f6f: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74110f79: movabs $0x290,%rsi
  0x00007fab74110f83: jne    0x00007fab74110f93
  0x00007fab74110f89: movabs $0x2a0,%rsi
  0x00007fab74110f93: mov    (%rdx,%rsi,1),%rdi
  0x00007fab74110f97: lea    0x1(%rdi),%rdi
  0x00007fab74110f9b: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab74110f9f: jne    0x00007fab7411261e  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@26 (line 458)

  0x00007fab74110fa5: mov    0x68(%rsp),%rsi
  0x00007fab74110faa: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74110fb4: mov    0x8(%rsi),%esi
  0x00007fab74110fb7: shl    $0x3,%rsi
  0x00007fab74110fbb: cmp    0x2c0(%rdx),%rsi
  0x00007fab74110fc2: jne    0x00007fab74110fd1
  0x00007fab74110fc4: addq   $0x1,0x2c8(%rdx)
  0x00007fab74110fcc: jmpq   0x00007fab74111193
  0x00007fab74110fd1: cmp    0x2d0(%rdx),%rsi
  0x00007fab74110fd8: jne    0x00007fab74110fe7
  0x00007fab74110fda: addq   $0x1,0x2d8(%rdx)
  0x00007fab74110fe2: jmpq   0x00007fab74111193
  0x00007fab74110fe7: cmp    0x2e0(%rdx),%rsi
  0x00007fab74110fee: jne    0x00007fab74110ffd
  0x00007fab74110ff0: addq   $0x1,0x2e8(%rdx)
  0x00007fab74110ff8: jmpq   0x00007fab74111193
  0x00007fab74110ffd: cmp    0x2f0(%rdx),%rsi
  0x00007fab74111004: jne    0x00007fab74111013
  0x00007fab74111006: addq   $0x1,0x2f8(%rdx)
  0x00007fab7411100e: jmpq   0x00007fab74111193
  0x00007fab74111013: cmp    0x300(%rdx),%rsi
  0x00007fab7411101a: jne    0x00007fab74111029
  0x00007fab7411101c: addq   $0x1,0x308(%rdx)
  0x00007fab74111024: jmpq   0x00007fab74111193
  0x00007fab74111029: cmp    0x310(%rdx),%rsi
  0x00007fab74111030: jne    0x00007fab7411103f
  0x00007fab74111032: addq   $0x1,0x318(%rdx)
  0x00007fab7411103a: jmpq   0x00007fab74111193
  0x00007fab7411103f: cmp    0x320(%rdx),%rsi
  0x00007fab74111046: jne    0x00007fab74111055
  0x00007fab74111048: addq   $0x1,0x328(%rdx)
  0x00007fab74111050: jmpq   0x00007fab74111193
  0x00007fab74111055: cmp    0x330(%rdx),%rsi
  0x00007fab7411105c: jne    0x00007fab7411106b
  0x00007fab7411105e: addq   $0x1,0x338(%rdx)
  0x00007fab74111066: jmpq   0x00007fab74111193
  0x00007fab7411106b: cmpq   $0x0,0x2c0(%rdx)
  0x00007fab74111076: jne    0x00007fab7411108f
  0x00007fab74111078: mov    %rsi,0x2c0(%rdx)
  0x00007fab7411107f: movq   $0x1,0x2c8(%rdx)
  0x00007fab7411108a: jmpq   0x00007fab74111193
  0x00007fab7411108f: cmpq   $0x0,0x2d0(%rdx)
  0x00007fab7411109a: jne    0x00007fab741110b3
  0x00007fab7411109c: mov    %rsi,0x2d0(%rdx)
  0x00007fab741110a3: movq   $0x1,0x2d8(%rdx)
  0x00007fab741110ae: jmpq   0x00007fab74111193
  0x00007fab741110b3: cmpq   $0x0,0x2e0(%rdx)
  0x00007fab741110be: jne    0x00007fab741110d7
  0x00007fab741110c0: mov    %rsi,0x2e0(%rdx)
  0x00007fab741110c7: movq   $0x1,0x2e8(%rdx)
  0x00007fab741110d2: jmpq   0x00007fab74111193
  0x00007fab741110d7: cmpq   $0x0,0x2f0(%rdx)
  0x00007fab741110e2: jne    0x00007fab741110fb
  0x00007fab741110e4: mov    %rsi,0x2f0(%rdx)
  0x00007fab741110eb: movq   $0x1,0x2f8(%rdx)
  0x00007fab741110f6: jmpq   0x00007fab74111193
  0x00007fab741110fb: cmpq   $0x0,0x300(%rdx)
  0x00007fab74111106: jne    0x00007fab7411111f
  0x00007fab74111108: mov    %rsi,0x300(%rdx)
  0x00007fab7411110f: movq   $0x1,0x308(%rdx)
  0x00007fab7411111a: jmpq   0x00007fab74111193
  0x00007fab7411111f: cmpq   $0x0,0x310(%rdx)
  0x00007fab7411112a: jne    0x00007fab74111143
  0x00007fab7411112c: mov    %rsi,0x310(%rdx)
  0x00007fab74111133: movq   $0x1,0x318(%rdx)
  0x00007fab7411113e: jmpq   0x00007fab74111193
  0x00007fab74111143: cmpq   $0x0,0x320(%rdx)
  0x00007fab7411114e: jne    0x00007fab74111167
  0x00007fab74111150: mov    %rsi,0x320(%rdx)
  0x00007fab74111157: movq   $0x1,0x328(%rdx)
  0x00007fab74111162: jmpq   0x00007fab74111193
  0x00007fab74111167: cmpq   $0x0,0x330(%rdx)
  0x00007fab74111172: jne    0x00007fab7411118b
  0x00007fab74111174: mov    %rsi,0x330(%rdx)
  0x00007fab7411117b: movq   $0x1,0x338(%rdx)
  0x00007fab74111186: jmpq   0x00007fab74111193
  0x00007fab7411118b: addq   $0x1,0x2b0(%rdx)
  0x00007fab74111193: mov    $0xd,%edx
  0x00007fab74111198: mov    0x68(%rsp),%rsi    ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@32 (line 458)

  0x00007fab7411119d: movabs $0xffffffffffffffff,%rax
  0x00007fab741111a7: callq  0x00007fab74047f60  ; OopMap{[104]=Oop off=1740}
                                                ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@32 (line 458)
                                                ;   {virtual_call}
  0x00007fab741111ac: cmp    $0x2d,%eax
  0x00007fab741111af: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab741111b9: movabs $0x348,%rsi
  0x00007fab741111c3: jne    0x00007fab741111d3
  0x00007fab741111c9: movabs $0x358,%rsi
  0x00007fab741111d3: mov    (%rdx,%rsi,1),%rdi
  0x00007fab741111d7: lea    0x1(%rdi),%rdi
  0x00007fab741111db: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab741111df: jne    0x00007fab7411261e  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@39 (line 458)

  0x00007fab741111e5: mov    0x68(%rsp),%rsi
  0x00007fab741111ea: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab741111f4: mov    0x8(%rsi),%esi
  0x00007fab741111f7: shl    $0x3,%rsi
  0x00007fab741111fb: cmp    0x378(%rdx),%rsi
  0x00007fab74111202: jne    0x00007fab74111211
  0x00007fab74111204: addq   $0x1,0x380(%rdx)
  0x00007fab7411120c: jmpq   0x00007fab741113d3
  0x00007fab74111211: cmp    0x388(%rdx),%rsi
  0x00007fab74111218: jne    0x00007fab74111227
  0x00007fab7411121a: addq   $0x1,0x390(%rdx)
  0x00007fab74111222: jmpq   0x00007fab741113d3
  0x00007fab74111227: cmp    0x398(%rdx),%rsi
  0x00007fab7411122e: jne    0x00007fab7411123d
  0x00007fab74111230: addq   $0x1,0x3a0(%rdx)
  0x00007fab74111238: jmpq   0x00007fab741113d3
  0x00007fab7411123d: cmp    0x3a8(%rdx),%rsi
  0x00007fab74111244: jne    0x00007fab74111253
  0x00007fab74111246: addq   $0x1,0x3b0(%rdx)
  0x00007fab7411124e: jmpq   0x00007fab741113d3
  0x00007fab74111253: cmp    0x3b8(%rdx),%rsi
  0x00007fab7411125a: jne    0x00007fab74111269
  0x00007fab7411125c: addq   $0x1,0x3c0(%rdx)
  0x00007fab74111264: jmpq   0x00007fab741113d3
  0x00007fab74111269: cmp    0x3c8(%rdx),%rsi
  0x00007fab74111270: jne    0x00007fab7411127f
  0x00007fab74111272: addq   $0x1,0x3d0(%rdx)
  0x00007fab7411127a: jmpq   0x00007fab741113d3
  0x00007fab7411127f: cmp    0x3d8(%rdx),%rsi
  0x00007fab74111286: jne    0x00007fab74111295
  0x00007fab74111288: addq   $0x1,0x3e0(%rdx)
  0x00007fab74111290: jmpq   0x00007fab741113d3
  0x00007fab74111295: cmp    0x3e8(%rdx),%rsi
  0x00007fab7411129c: jne    0x00007fab741112ab
  0x00007fab7411129e: addq   $0x1,0x3f0(%rdx)
  0x00007fab741112a6: jmpq   0x00007fab741113d3
  0x00007fab741112ab: cmpq   $0x0,0x378(%rdx)
  0x00007fab741112b6: jne    0x00007fab741112cf
  0x00007fab741112b8: mov    %rsi,0x378(%rdx)
  0x00007fab741112bf: movq   $0x1,0x380(%rdx)
  0x00007fab741112ca: jmpq   0x00007fab741113d3
  0x00007fab741112cf: cmpq   $0x0,0x388(%rdx)
  0x00007fab741112da: jne    0x00007fab741112f3
  0x00007fab741112dc: mov    %rsi,0x388(%rdx)
  0x00007fab741112e3: movq   $0x1,0x390(%rdx)
  0x00007fab741112ee: jmpq   0x00007fab741113d3
  0x00007fab741112f3: cmpq   $0x0,0x398(%rdx)
  0x00007fab741112fe: jne    0x00007fab74111317
  0x00007fab74111300: mov    %rsi,0x398(%rdx)
  0x00007fab74111307: movq   $0x1,0x3a0(%rdx)
  0x00007fab74111312: jmpq   0x00007fab741113d3
  0x00007fab74111317: cmpq   $0x0,0x3a8(%rdx)
  0x00007fab74111322: jne    0x00007fab7411133b
  0x00007fab74111324: mov    %rsi,0x3a8(%rdx)
  0x00007fab7411132b: movq   $0x1,0x3b0(%rdx)
  0x00007fab74111336: jmpq   0x00007fab741113d3
  0x00007fab7411133b: cmpq   $0x0,0x3b8(%rdx)
  0x00007fab74111346: jne    0x00007fab7411135f
  0x00007fab74111348: mov    %rsi,0x3b8(%rdx)
  0x00007fab7411134f: movq   $0x1,0x3c0(%rdx)
  0x00007fab7411135a: jmpq   0x00007fab741113d3
  0x00007fab7411135f: cmpq   $0x0,0x3c8(%rdx)
  0x00007fab7411136a: jne    0x00007fab74111383
  0x00007fab7411136c: mov    %rsi,0x3c8(%rdx)
  0x00007fab74111373: movq   $0x1,0x3d0(%rdx)
  0x00007fab7411137e: jmpq   0x00007fab741113d3
  0x00007fab74111383: cmpq   $0x0,0x3d8(%rdx)
  0x00007fab7411138e: jne    0x00007fab741113a7
  0x00007fab74111390: mov    %rsi,0x3d8(%rdx)
  0x00007fab74111397: movq   $0x1,0x3e0(%rdx)
  0x00007fab741113a2: jmpq   0x00007fab741113d3
  0x00007fab741113a7: cmpq   $0x0,0x3e8(%rdx)
  0x00007fab741113b2: jne    0x00007fab741113cb
  0x00007fab741113b4: mov    %rsi,0x3e8(%rdx)
  0x00007fab741113bb: movq   $0x1,0x3f0(%rdx)
  0x00007fab741113c6: jmpq   0x00007fab741113d3
  0x00007fab741113cb: addq   $0x1,0x368(%rdx)
  0x00007fab741113d3: mov    $0x12,%edx
  0x00007fab741113d8: mov    0x68(%rsp),%rsi    ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@45 (line 458)

  0x00007fab741113dd: movabs $0xffffffffffffffff,%rax
  0x00007fab741113e7: callq  0x00007fab74047f60  ; OopMap{[104]=Oop off=2316}
                                                ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@45 (line 458)
                                                ;   {virtual_call}
  0x00007fab741113ec: cmp    $0x2d,%eax
  0x00007fab741113ef: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab741113f9: movabs $0x400,%rsi
  0x00007fab74111403: jne    0x00007fab74111413
  0x00007fab74111409: movabs $0x410,%rsi
  0x00007fab74111413: mov    (%rdx,%rsi,1),%rdi
  0x00007fab74111417: lea    0x1(%rdi),%rdi
  0x00007fab7411141b: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab7411141f: jne    0x00007fab7411261e  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@52 (line 458)

  0x00007fab74111425: mov    0x68(%rsp),%rsi
  0x00007fab7411142a: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74111434: mov    0x8(%rsi),%esi
  0x00007fab74111437: shl    $0x3,%rsi
  0x00007fab7411143b: cmp    0x430(%rdx),%rsi
  0x00007fab74111442: jne    0x00007fab74111451
  0x00007fab74111444: addq   $0x1,0x438(%rdx)
  0x00007fab7411144c: jmpq   0x00007fab74111613
  0x00007fab74111451: cmp    0x440(%rdx),%rsi
  0x00007fab74111458: jne    0x00007fab74111467
  0x00007fab7411145a: addq   $0x1,0x448(%rdx)
  0x00007fab74111462: jmpq   0x00007fab74111613
  0x00007fab74111467: cmp    0x450(%rdx),%rsi
  0x00007fab7411146e: jne    0x00007fab7411147d
  0x00007fab74111470: addq   $0x1,0x458(%rdx)
  0x00007fab74111478: jmpq   0x00007fab74111613
  0x00007fab7411147d: cmp    0x460(%rdx),%rsi
  0x00007fab74111484: jne    0x00007fab74111493
  0x00007fab74111486: addq   $0x1,0x468(%rdx)
  0x00007fab7411148e: jmpq   0x00007fab74111613
  0x00007fab74111493: cmp    0x470(%rdx),%rsi
  0x00007fab7411149a: jne    0x00007fab741114a9
  0x00007fab7411149c: addq   $0x1,0x478(%rdx)
  0x00007fab741114a4: jmpq   0x00007fab74111613
  0x00007fab741114a9: cmp    0x480(%rdx),%rsi
  0x00007fab741114b0: jne    0x00007fab741114bf
  0x00007fab741114b2: addq   $0x1,0x488(%rdx)
  0x00007fab741114ba: jmpq   0x00007fab74111613
  0x00007fab741114bf: cmp    0x490(%rdx),%rsi
  0x00007fab741114c6: jne    0x00007fab741114d5
  0x00007fab741114c8: addq   $0x1,0x498(%rdx)
  0x00007fab741114d0: jmpq   0x00007fab74111613
  0x00007fab741114d5: cmp    0x4a0(%rdx),%rsi
  0x00007fab741114dc: jne    0x00007fab741114eb
  0x00007fab741114de: addq   $0x1,0x4a8(%rdx)
  0x00007fab741114e6: jmpq   0x00007fab74111613
  0x00007fab741114eb: cmpq   $0x0,0x430(%rdx)
  0x00007fab741114f6: jne    0x00007fab7411150f
  0x00007fab741114f8: mov    %rsi,0x430(%rdx)
  0x00007fab741114ff: movq   $0x1,0x438(%rdx)
  0x00007fab7411150a: jmpq   0x00007fab74111613
  0x00007fab7411150f: cmpq   $0x0,0x440(%rdx)
  0x00007fab7411151a: jne    0x00007fab74111533
  0x00007fab7411151c: mov    %rsi,0x440(%rdx)
  0x00007fab74111523: movq   $0x1,0x448(%rdx)
  0x00007fab7411152e: jmpq   0x00007fab74111613
  0x00007fab74111533: cmpq   $0x0,0x450(%rdx)
  0x00007fab7411153e: jne    0x00007fab74111557
  0x00007fab74111540: mov    %rsi,0x450(%rdx)
  0x00007fab74111547: movq   $0x1,0x458(%rdx)
  0x00007fab74111552: jmpq   0x00007fab74111613
  0x00007fab74111557: cmpq   $0x0,0x460(%rdx)
  0x00007fab74111562: jne    0x00007fab7411157b
  0x00007fab74111564: mov    %rsi,0x460(%rdx)
  0x00007fab7411156b: movq   $0x1,0x468(%rdx)
  0x00007fab74111576: jmpq   0x00007fab74111613
  0x00007fab7411157b: cmpq   $0x0,0x470(%rdx)
  0x00007fab74111586: jne    0x00007fab7411159f
  0x00007fab74111588: mov    %rsi,0x470(%rdx)
  0x00007fab7411158f: movq   $0x1,0x478(%rdx)
  0x00007fab7411159a: jmpq   0x00007fab74111613
  0x00007fab7411159f: cmpq   $0x0,0x480(%rdx)
  0x00007fab741115aa: jne    0x00007fab741115c3
  0x00007fab741115ac: mov    %rsi,0x480(%rdx)
  0x00007fab741115b3: movq   $0x1,0x488(%rdx)
  0x00007fab741115be: jmpq   0x00007fab74111613
  0x00007fab741115c3: cmpq   $0x0,0x490(%rdx)
  0x00007fab741115ce: jne    0x00007fab741115e7
  0x00007fab741115d0: mov    %rsi,0x490(%rdx)
  0x00007fab741115d7: movq   $0x1,0x498(%rdx)
  0x00007fab741115e2: jmpq   0x00007fab74111613
  0x00007fab741115e7: cmpq   $0x0,0x4a0(%rdx)
  0x00007fab741115f2: jne    0x00007fab7411160b
  0x00007fab741115f4: mov    %rsi,0x4a0(%rdx)
  0x00007fab741115fb: movq   $0x1,0x4a8(%rdx)
  0x00007fab74111606: jmpq   0x00007fab74111613
  0x00007fab7411160b: addq   $0x1,0x420(%rdx)
  0x00007fab74111613: mov    $0x17,%edx
  0x00007fab74111618: mov    0x68(%rsp),%rsi    ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@58 (line 458)

  0x00007fab7411161d: movabs $0xffffffffffffffff,%rax
  0x00007fab74111627: callq  0x00007fab74047f60  ; OopMap{[104]=Oop off=2892}
                                                ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@58 (line 458)
                                                ;   {virtual_call}
  0x00007fab7411162c: cmp    $0x2d,%eax
  0x00007fab7411162f: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74111639: movabs $0x4b8,%rsi
  0x00007fab74111643: je     0x00007fab74111653
  0x00007fab74111649: movabs $0x4c8,%rsi
  0x00007fab74111653: mov    (%rdx,%rsi,1),%rdi
  0x00007fab74111657: lea    0x1(%rdi),%rdi
  0x00007fab7411165b: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab7411165f: jne    0x00007fab7411261e  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@65 (line 458)

  0x00007fab74111665: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab7411166f: incl   0x4e8(%rdx)
  0x00007fab74111675: mov    $0x0,%edi
  0x00007fab7411167a: movabs $0x0,%rbx
  0x00007fab74111684: jmpq   0x00007fab741118d5  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@80 (line 465)

  0x00007fab74111689: nopl   0x0(%rax)
  0x00007fab74111690: mov    %rsi,%rdx
  0x00007fab74111693: movabs $0x7fab61c94028,%rax  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab7411169d: mov    0x8(%rdx),%edx
  0x00007fab741116a0: shl    $0x3,%rdx
  0x00007fab741116a4: cmp    0x510(%rax),%rdx
  0x00007fab741116ab: jne    0x00007fab741116ba
  0x00007fab741116ad: addq   $0x1,0x518(%rax)
  0x00007fab741116b5: jmpq   0x00007fab7411187c
  0x00007fab741116ba: cmp    0x520(%rax),%rdx
  0x00007fab741116c1: jne    0x00007fab741116d0
  0x00007fab741116c3: addq   $0x1,0x528(%rax)
  0x00007fab741116cb: jmpq   0x00007fab7411187c
  0x00007fab741116d0: cmp    0x530(%rax),%rdx
  0x00007fab741116d7: jne    0x00007fab741116e6
  0x00007fab741116d9: addq   $0x1,0x538(%rax)
  0x00007fab741116e1: jmpq   0x00007fab7411187c
  0x00007fab741116e6: cmp    0x540(%rax),%rdx
  0x00007fab741116ed: jne    0x00007fab741116fc
  0x00007fab741116ef: addq   $0x1,0x548(%rax)
  0x00007fab741116f7: jmpq   0x00007fab7411187c
  0x00007fab741116fc: cmp    0x550(%rax),%rdx
  0x00007fab74111703: jne    0x00007fab74111712
  0x00007fab74111705: addq   $0x1,0x558(%rax)
  0x00007fab7411170d: jmpq   0x00007fab7411187c
  0x00007fab74111712: cmp    0x560(%rax),%rdx
  0x00007fab74111719: jne    0x00007fab74111728
  0x00007fab7411171b: addq   $0x1,0x568(%rax)
  0x00007fab74111723: jmpq   0x00007fab7411187c
  0x00007fab74111728: cmp    0x570(%rax),%rdx
  0x00007fab7411172f: jne    0x00007fab7411173e
  0x00007fab74111731: addq   $0x1,0x578(%rax)
  0x00007fab74111739: jmpq   0x00007fab7411187c
  0x00007fab7411173e: cmp    0x580(%rax),%rdx
  0x00007fab74111745: jne    0x00007fab74111754
  0x00007fab74111747: addq   $0x1,0x588(%rax)
  0x00007fab7411174f: jmpq   0x00007fab7411187c
  0x00007fab74111754: cmpq   $0x0,0x510(%rax)
  0x00007fab7411175f: jne    0x00007fab74111778
  0x00007fab74111761: mov    %rdx,0x510(%rax)
  0x00007fab74111768: movq   $0x1,0x518(%rax)
  0x00007fab74111773: jmpq   0x00007fab7411187c
  0x00007fab74111778: cmpq   $0x0,0x520(%rax)
  0x00007fab74111783: jne    0x00007fab7411179c
  0x00007fab74111785: mov    %rdx,0x520(%rax)
  0x00007fab7411178c: movq   $0x1,0x528(%rax)
  0x00007fab74111797: jmpq   0x00007fab7411187c
  0x00007fab7411179c: cmpq   $0x0,0x530(%rax)
  0x00007fab741117a7: jne    0x00007fab741117c0
  0x00007fab741117a9: mov    %rdx,0x530(%rax)
  0x00007fab741117b0: movq   $0x1,0x538(%rax)
  0x00007fab741117bb: jmpq   0x00007fab7411187c
  0x00007fab741117c0: cmpq   $0x0,0x540(%rax)
  0x00007fab741117cb: jne    0x00007fab741117e4
  0x00007fab741117cd: mov    %rdx,0x540(%rax)
  0x00007fab741117d4: movq   $0x1,0x548(%rax)
  0x00007fab741117df: jmpq   0x00007fab7411187c
  0x00007fab741117e4: cmpq   $0x0,0x550(%rax)
  0x00007fab741117ef: jne    0x00007fab74111808
  0x00007fab741117f1: mov    %rdx,0x550(%rax)
  0x00007fab741117f8: movq   $0x1,0x558(%rax)
  0x00007fab74111803: jmpq   0x00007fab7411187c
  0x00007fab74111808: cmpq   $0x0,0x560(%rax)
  0x00007fab74111813: jne    0x00007fab7411182c
  0x00007fab74111815: mov    %rdx,0x560(%rax)
  0x00007fab7411181c: movq   $0x1,0x568(%rax)
  0x00007fab74111827: jmpq   0x00007fab7411187c
  0x00007fab7411182c: cmpq   $0x0,0x570(%rax)
  0x00007fab74111837: jne    0x00007fab74111850
  0x00007fab74111839: mov    %rdx,0x570(%rax)
  0x00007fab74111840: movq   $0x1,0x578(%rax)
  0x00007fab7411184b: jmpq   0x00007fab7411187c
  0x00007fab74111850: cmpq   $0x0,0x580(%rax)
  0x00007fab7411185b: jne    0x00007fab74111874
  0x00007fab7411185d: mov    %rdx,0x580(%rax)
  0x00007fab74111864: movq   $0x1,0x588(%rax)
  0x00007fab7411186f: jmpq   0x00007fab7411187c
  0x00007fab74111874: addq   $0x1,0x500(%rax)
  0x00007fab7411187c: mov    %rdi,%rdx
  0x00007fab7411187f: mov    %rsi,%rax
  0x00007fab74111882: mov    %rax,%rsi          ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)

  0x00007fab74111885: mov    %edi,0x78(%rsp)
  0x00007fab74111889: nop
  0x00007fab7411188a: nop
  0x00007fab7411188b: nop
  0x00007fab7411188c: nop
  0x00007fab7411188d: movabs $0xffffffffffffffff,%rax
  0x00007fab74111897: callq  0x00007fab74047f60  ; OopMap{[104]=Oop off=3516}
                                                ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)
                                                ;   {virtual_call}
  0x00007fab7411189c: movabs $0x7fab61c94028,%rsi  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab741118a6: addq   $0x1,0x598(%rsi)
  0x00007fab741118ae: mov    %rax,%rsi          ;*invokestatic hexDigit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fab741118b1: nop
  0x00007fab741118b2: nop
  0x00007fab741118b3: nop
  0x00007fab741118b4: nop
  0x00007fab741118b5: nop
  0x00007fab741118b6: nop
  0x00007fab741118b7: callq  0x00007fab74048160  ; OopMap{[104]=Oop off=3548}
                                                ;*invokestatic hexDigit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ;   {static_call}
  0x00007fab741118bc: mov    $0x4,%ecx
  0x00007fab741118c1: mov    0x70(%rsp),%rbx
  0x00007fab741118c6: shl    %cl,%rbx
  0x00007fab741118c9: movslq %eax,%rax
  0x00007fab741118cc: or     %rax,%rbx
  0x00007fab741118cf: mov    0x78(%rsp),%edi
  0x00007fab741118d3: inc    %edi
  0x00007fab741118d5: mov    %rbx,0x70(%rsp)
  0x00007fab741118da: mov    0x68(%rsp),%rsi
  0x00007fab741118df: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab741118e9: mov    0x100(%rdx),%eax
  0x00007fab741118ef: add    $0x8,%eax
  0x00007fab741118f2: mov    %eax,0x100(%rdx)
  0x00007fab741118f8: movabs $0x7fab61c932a8,%rdx  ;   {metadata({method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74111902: and    $0xfff8,%eax
  0x00007fab74111908: cmp    $0x0,%eax
  0x00007fab7411190b: je     0x00007fab7411309d  ; OopMap{rsi=Oop [104]=Oop off=3633}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@111 (line 465)

  0x00007fab74111911: test   %eax,0x1b6d07e9(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab74111917: cmp    $0x8,%edi
  0x00007fab7411191a: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74111924: movabs $0x5a8,%rax
  0x00007fab7411192e: jl     0x00007fab7411193e
  0x00007fab74111934: movabs $0x5b8,%rax
  0x00007fab7411193e: mov    (%rdx,%rax,1),%rcx
  0x00007fab74111942: lea    0x1(%rcx),%rcx
  0x00007fab74111946: mov    %rcx,(%rdx,%rax,1)
  0x00007fab7411194a: jl     0x00007fab74111690  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@111 (line 465)

  0x00007fab74111950: mov    0x70(%rsp),%rbx
  0x00007fab74111955: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab7411195f: incl   0x5c8(%rdx)
  0x00007fab74111965: mov    $0x9,%edi
  0x00007fab7411196a: jmpq   0x00007fab74111bb8  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@118 (line 469)

  0x00007fab7411196f: nop
  0x00007fab74111970: mov    %rsi,%rdx
  0x00007fab74111973: movabs $0x7fab61c94028,%rax  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab7411197d: mov    0x8(%rdx),%edx
  0x00007fab74111980: shl    $0x3,%rdx
  0x00007fab74111984: cmp    0x5f0(%rax),%rdx
  0x00007fab7411198b: jne    0x00007fab7411199a
  0x00007fab7411198d: addq   $0x1,0x5f8(%rax)
  0x00007fab74111995: jmpq   0x00007fab74111b5c
  0x00007fab7411199a: cmp    0x600(%rax),%rdx
  0x00007fab741119a1: jne    0x00007fab741119b0
  0x00007fab741119a3: addq   $0x1,0x608(%rax)
  0x00007fab741119ab: jmpq   0x00007fab74111b5c
  0x00007fab741119b0: cmp    0x610(%rax),%rdx
  0x00007fab741119b7: jne    0x00007fab741119c6
  0x00007fab741119b9: addq   $0x1,0x618(%rax)
  0x00007fab741119c1: jmpq   0x00007fab74111b5c
  0x00007fab741119c6: cmp    0x620(%rax),%rdx
  0x00007fab741119cd: jne    0x00007fab741119dc
  0x00007fab741119cf: addq   $0x1,0x628(%rax)
  0x00007fab741119d7: jmpq   0x00007fab74111b5c
  0x00007fab741119dc: cmp    0x630(%rax),%rdx
  0x00007fab741119e3: jne    0x00007fab741119f2
  0x00007fab741119e5: addq   $0x1,0x638(%rax)
  0x00007fab741119ed: jmpq   0x00007fab74111b5c
  0x00007fab741119f2: cmp    0x640(%rax),%rdx
  0x00007fab741119f9: jne    0x00007fab74111a08
  0x00007fab741119fb: addq   $0x1,0x648(%rax)
  0x00007fab74111a03: jmpq   0x00007fab74111b5c
  0x00007fab74111a08: cmp    0x650(%rax),%rdx
  0x00007fab74111a0f: jne    0x00007fab74111a1e
  0x00007fab74111a11: addq   $0x1,0x658(%rax)
  0x00007fab74111a19: jmpq   0x00007fab74111b5c
  0x00007fab74111a1e: cmp    0x660(%rax),%rdx
  0x00007fab74111a25: jne    0x00007fab74111a34
  0x00007fab74111a27: addq   $0x1,0x668(%rax)
  0x00007fab74111a2f: jmpq   0x00007fab74111b5c
  0x00007fab74111a34: cmpq   $0x0,0x5f0(%rax)
  0x00007fab74111a3f: jne    0x00007fab74111a58
  0x00007fab74111a41: mov    %rdx,0x5f0(%rax)
  0x00007fab74111a48: movq   $0x1,0x5f8(%rax)
  0x00007fab74111a53: jmpq   0x00007fab74111b5c
  0x00007fab74111a58: cmpq   $0x0,0x600(%rax)
  0x00007fab74111a63: jne    0x00007fab74111a7c
  0x00007fab74111a65: mov    %rdx,0x600(%rax)
  0x00007fab74111a6c: movq   $0x1,0x608(%rax)
  0x00007fab74111a77: jmpq   0x00007fab74111b5c
  0x00007fab74111a7c: cmpq   $0x0,0x610(%rax)
  0x00007fab74111a87: jne    0x00007fab74111aa0
  0x00007fab74111a89: mov    %rdx,0x610(%rax)
  0x00007fab74111a90: movq   $0x1,0x618(%rax)
  0x00007fab74111a9b: jmpq   0x00007fab74111b5c
  0x00007fab74111aa0: cmpq   $0x0,0x620(%rax)
  0x00007fab74111aab: jne    0x00007fab74111ac4
  0x00007fab74111aad: mov    %rdx,0x620(%rax)
  0x00007fab74111ab4: movq   $0x1,0x628(%rax)
  0x00007fab74111abf: jmpq   0x00007fab74111b5c
  0x00007fab74111ac4: cmpq   $0x0,0x630(%rax)
  0x00007fab74111acf: jne    0x00007fab74111ae8
  0x00007fab74111ad1: mov    %rdx,0x630(%rax)
  0x00007fab74111ad8: movq   $0x1,0x638(%rax)
  0x00007fab74111ae3: jmpq   0x00007fab74111b5c
  0x00007fab74111ae8: cmpq   $0x0,0x640(%rax)
  0x00007fab74111af3: jne    0x00007fab74111b0c
  0x00007fab74111af5: mov    %rdx,0x640(%rax)
  0x00007fab74111afc: movq   $0x1,0x648(%rax)
  0x00007fab74111b07: jmpq   0x00007fab74111b5c
  0x00007fab74111b0c: cmpq   $0x0,0x650(%rax)
  0x00007fab74111b17: jne    0x00007fab74111b30
  0x00007fab74111b19: mov    %rdx,0x650(%rax)
  0x00007fab74111b20: movq   $0x1,0x658(%rax)
  0x00007fab74111b2b: jmpq   0x00007fab74111b5c
  0x00007fab74111b30: cmpq   $0x0,0x660(%rax)
  0x00007fab74111b3b: jne    0x00007fab74111b54
  0x00007fab74111b3d: mov    %rdx,0x660(%rax)
  0x00007fab74111b44: movq   $0x1,0x668(%rax)
  0x00007fab74111b4f: jmpq   0x00007fab74111b5c
  0x00007fab74111b54: addq   $0x1,0x5e0(%rax)
  0x00007fab74111b5c: mov    %rdi,%rdx
  0x00007fab74111b5f: mov    %rsi,%rax
  0x00007fab74111b62: mov    %rax,%rsi          ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)

  0x00007fab74111b65: mov    %edi,0x7c(%rsp)
  0x00007fab74111b69: nop
  0x00007fab74111b6a: nop
  0x00007fab74111b6b: nop
  0x00007fab74111b6c: nop
  0x00007fab74111b6d: movabs $0xffffffffffffffff,%rax
  0x00007fab74111b77: callq  0x00007fab74047f60  ; OopMap{[104]=Oop off=4252}
                                                ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)
                                                ;   {virtual_call}
  0x00007fab74111b7c: movabs $0x7fab61c94028,%rsi  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74111b86: addq   $0x1,0x678(%rsi)
  0x00007fab74111b8e: mov    %rax,%rsi          ;*invokestatic hexDigit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fab74111b91: nop
  0x00007fab74111b92: nop
  0x00007fab74111b93: nop
  0x00007fab74111b94: nop
  0x00007fab74111b95: nop
  0x00007fab74111b96: nop
  0x00007fab74111b97: callq  0x00007fab74048160  ; OopMap{[104]=Oop off=4284}
                                                ;*invokestatic hexDigit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ;   {static_call}
  0x00007fab74111b9c: mov    $0x4,%ecx
  0x00007fab74111ba1: mov    0x80(%rsp),%rbx
  0x00007fab74111ba9: shl    %cl,%rbx
  0x00007fab74111bac: movslq %eax,%rax
  0x00007fab74111baf: or     %rax,%rbx
  0x00007fab74111bb2: mov    0x7c(%rsp),%edi
  0x00007fab74111bb6: inc    %edi
  0x00007fab74111bb8: mov    %rbx,0x80(%rsp)
  0x00007fab74111bc0: mov    0x68(%rsp),%rsi
  0x00007fab74111bc5: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74111bcf: mov    0x100(%rdx),%eax
  0x00007fab74111bd5: add    $0x8,%eax
  0x00007fab74111bd8: mov    %eax,0x100(%rdx)
  0x00007fab74111bde: movabs $0x7fab61c932a8,%rdx  ;   {metadata({method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74111be8: and    $0xfff8,%eax
  0x00007fab74111bee: cmp    $0x0,%eax
  0x00007fab74111bf1: je     0x00007fab741130b4  ; OopMap{rsi=Oop [104]=Oop off=4375}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@149 (line 469)

  0x00007fab74111bf7: test   %eax,0x1b6d0503(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab74111bfd: cmp    $0xd,%edi
  0x00007fab74111c00: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74111c0a: movabs $0x688,%rax
  0x00007fab74111c14: jl     0x00007fab74111c24
  0x00007fab74111c1a: movabs $0x698,%rax
  0x00007fab74111c24: mov    (%rdx,%rax,1),%rcx
  0x00007fab74111c28: lea    0x1(%rcx),%rcx
  0x00007fab74111c2c: mov    %rcx,(%rdx,%rax,1)
  0x00007fab74111c30: jl     0x00007fab74111970  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@149 (line 469)

  0x00007fab74111c36: mov    0x80(%rsp),%rbx
  0x00007fab74111c3e: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74111c48: incl   0x6a8(%rdx)
  0x00007fab74111c4e: mov    $0xe,%edi
  0x00007fab74111c53: jmpq   0x00007fab74111ea3  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@156 (line 473)

  0x00007fab74111c58: mov    %rsi,%rdx
  0x00007fab74111c5b: movabs $0x7fab61c94028,%rax  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74111c65: mov    0x8(%rdx),%edx
  0x00007fab74111c68: shl    $0x3,%rdx
  0x00007fab74111c6c: cmp    0x6d0(%rax),%rdx
  0x00007fab74111c73: jne    0x00007fab74111c82
  0x00007fab74111c75: addq   $0x1,0x6d8(%rax)
  0x00007fab74111c7d: jmpq   0x00007fab74111e44
  0x00007fab74111c82: cmp    0x6e0(%rax),%rdx
  0x00007fab74111c89: jne    0x00007fab74111c98
  0x00007fab74111c8b: addq   $0x1,0x6e8(%rax)
  0x00007fab74111c93: jmpq   0x00007fab74111e44
  0x00007fab74111c98: cmp    0x6f0(%rax),%rdx
  0x00007fab74111c9f: jne    0x00007fab74111cae
  0x00007fab74111ca1: addq   $0x1,0x6f8(%rax)
  0x00007fab74111ca9: jmpq   0x00007fab74111e44
  0x00007fab74111cae: cmp    0x700(%rax),%rdx
  0x00007fab74111cb5: jne    0x00007fab74111cc4
  0x00007fab74111cb7: addq   $0x1,0x708(%rax)
  0x00007fab74111cbf: jmpq   0x00007fab74111e44
  0x00007fab74111cc4: cmp    0x710(%rax),%rdx
  0x00007fab74111ccb: jne    0x00007fab74111cda
  0x00007fab74111ccd: addq   $0x1,0x718(%rax)
  0x00007fab74111cd5: jmpq   0x00007fab74111e44
  0x00007fab74111cda: cmp    0x720(%rax),%rdx
  0x00007fab74111ce1: jne    0x00007fab74111cf0
  0x00007fab74111ce3: addq   $0x1,0x728(%rax)
  0x00007fab74111ceb: jmpq   0x00007fab74111e44
  0x00007fab74111cf0: cmp    0x730(%rax),%rdx
  0x00007fab74111cf7: jne    0x00007fab74111d06
  0x00007fab74111cf9: addq   $0x1,0x738(%rax)
  0x00007fab74111d01: jmpq   0x00007fab74111e44
  0x00007fab74111d06: cmp    0x740(%rax),%rdx
  0x00007fab74111d0d: jne    0x00007fab74111d1c
  0x00007fab74111d0f: addq   $0x1,0x748(%rax)
  0x00007fab74111d17: jmpq   0x00007fab74111e44
  0x00007fab74111d1c: cmpq   $0x0,0x6d0(%rax)
  0x00007fab74111d27: jne    0x00007fab74111d40
  0x00007fab74111d29: mov    %rdx,0x6d0(%rax)
  0x00007fab74111d30: movq   $0x1,0x6d8(%rax)
  0x00007fab74111d3b: jmpq   0x00007fab74111e44
  0x00007fab74111d40: cmpq   $0x0,0x6e0(%rax)
  0x00007fab74111d4b: jne    0x00007fab74111d64
  0x00007fab74111d4d: mov    %rdx,0x6e0(%rax)
  0x00007fab74111d54: movq   $0x1,0x6e8(%rax)
  0x00007fab74111d5f: jmpq   0x00007fab74111e44
  0x00007fab74111d64: cmpq   $0x0,0x6f0(%rax)
  0x00007fab74111d6f: jne    0x00007fab74111d88
  0x00007fab74111d71: mov    %rdx,0x6f0(%rax)
  0x00007fab74111d78: movq   $0x1,0x6f8(%rax)
  0x00007fab74111d83: jmpq   0x00007fab74111e44
  0x00007fab74111d88: cmpq   $0x0,0x700(%rax)
  0x00007fab74111d93: jne    0x00007fab74111dac
  0x00007fab74111d95: mov    %rdx,0x700(%rax)
  0x00007fab74111d9c: movq   $0x1,0x708(%rax)
  0x00007fab74111da7: jmpq   0x00007fab74111e44
  0x00007fab74111dac: cmpq   $0x0,0x710(%rax)
  0x00007fab74111db7: jne    0x00007fab74111dd0
  0x00007fab74111db9: mov    %rdx,0x710(%rax)
  0x00007fab74111dc0: movq   $0x1,0x718(%rax)
  0x00007fab74111dcb: jmpq   0x00007fab74111e44
  0x00007fab74111dd0: cmpq   $0x0,0x720(%rax)
  0x00007fab74111ddb: jne    0x00007fab74111df4
  0x00007fab74111ddd: mov    %rdx,0x720(%rax)
  0x00007fab74111de4: movq   $0x1,0x728(%rax)
  0x00007fab74111def: jmpq   0x00007fab74111e44
  0x00007fab74111df4: cmpq   $0x0,0x730(%rax)
  0x00007fab74111dff: jne    0x00007fab74111e18
  0x00007fab74111e01: mov    %rdx,0x730(%rax)
  0x00007fab74111e08: movq   $0x1,0x738(%rax)
  0x00007fab74111e13: jmpq   0x00007fab74111e44
  0x00007fab74111e18: cmpq   $0x0,0x740(%rax)
  0x00007fab74111e23: jne    0x00007fab74111e3c
  0x00007fab74111e25: mov    %rdx,0x740(%rax)
  0x00007fab74111e2c: movq   $0x1,0x748(%rax)
  0x00007fab74111e37: jmpq   0x00007fab74111e44
  0x00007fab74111e3c: addq   $0x1,0x6c0(%rax)
  0x00007fab74111e44: mov    %rdi,%rdx
  0x00007fab74111e47: mov    %rsi,%rax
  0x00007fab74111e4a: mov    %rax,%rsi          ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)

  0x00007fab74111e4d: mov    %edi,0x90(%rsp)
  0x00007fab74111e54: nop
  0x00007fab74111e55: movabs $0xffffffffffffffff,%rax
  0x00007fab74111e5f: callq  0x00007fab74047f60  ; OopMap{[104]=Oop off=4996}
                                                ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)
                                                ;   {virtual_call}
  0x00007fab74111e64: movabs $0x7fab61c94028,%rsi  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74111e6e: addq   $0x1,0x758(%rsi)
  0x00007fab74111e76: mov    %rax,%rsi          ;*invokestatic hexDigit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fab74111e79: nop
  0x00007fab74111e7a: nop
  0x00007fab74111e7b: nop
  0x00007fab74111e7c: nop
  0x00007fab74111e7d: nop
  0x00007fab74111e7e: nop
  0x00007fab74111e7f: callq  0x00007fab74048160  ; OopMap{[104]=Oop off=5028}
                                                ;*invokestatic hexDigit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ;   {static_call}
  0x00007fab74111e84: mov    $0x4,%ecx
  0x00007fab74111e89: mov    0x88(%rsp),%rbx
  0x00007fab74111e91: shl    %cl,%rbx
  0x00007fab74111e94: movslq %eax,%rax
  0x00007fab74111e97: or     %rax,%rbx
  0x00007fab74111e9a: mov    0x90(%rsp),%edi
  0x00007fab74111ea1: inc    %edi
  0x00007fab74111ea3: mov    %rbx,0x88(%rsp)
  0x00007fab74111eab: mov    0x68(%rsp),%rsi
  0x00007fab74111eb0: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74111eba: mov    0x100(%rdx),%eax
  0x00007fab74111ec0: add    $0x8,%eax
  0x00007fab74111ec3: mov    %eax,0x100(%rdx)
  0x00007fab74111ec9: movabs $0x7fab61c932a8,%rdx  ;   {metadata({method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74111ed3: and    $0xfff8,%eax
  0x00007fab74111ed9: cmp    $0x0,%eax
  0x00007fab74111edc: je     0x00007fab741130cb  ; OopMap{rsi=Oop [104]=Oop off=5122}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@187 (line 473)

  0x00007fab74111ee2: test   %eax,0x1b6d0218(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab74111ee8: cmp    $0x12,%edi
  0x00007fab74111eeb: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74111ef5: movabs $0x768,%rax
  0x00007fab74111eff: jl     0x00007fab74111f0f
  0x00007fab74111f05: movabs $0x778,%rax
  0x00007fab74111f0f: mov    (%rdx,%rax,1),%rcx
  0x00007fab74111f13: lea    0x1(%rcx),%rcx
  0x00007fab74111f17: mov    %rcx,(%rdx,%rax,1)
  0x00007fab74111f1b: jl     0x00007fab74111c58  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@187 (line 473)

  0x00007fab74111f21: mov    0x88(%rsp),%rbx
  0x00007fab74111f29: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74111f33: incl   0x788(%rdx)
  0x00007fab74111f39: mov    $0x13,%edi
  0x00007fab74111f3e: movabs $0x0,%rax
  0x00007fab74111f48: mov    %rax,0x98(%rsp)
  0x00007fab74111f50: mov    %rbx,0x88(%rsp)
  0x00007fab74111f58: jmpq   0x00007fab741121b6  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@194 (line 479)

  0x00007fab74111f5d: data16 xchg %ax,%ax
  0x00007fab74111f60: mov    %rsi,%rdx
  0x00007fab74111f63: movabs $0x7fab61c94028,%rcx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74111f6d: mov    0x8(%rdx),%edx
  0x00007fab74111f70: shl    $0x3,%rdx
  0x00007fab74111f74: cmp    0x7b0(%rcx),%rdx
  0x00007fab74111f7b: jne    0x00007fab74111f8a
  0x00007fab74111f7d: addq   $0x1,0x7b8(%rcx)
  0x00007fab74111f85: jmpq   0x00007fab7411214c
  0x00007fab74111f8a: cmp    0x7c0(%rcx),%rdx
  0x00007fab74111f91: jne    0x00007fab74111fa0
  0x00007fab74111f93: addq   $0x1,0x7c8(%rcx)
  0x00007fab74111f9b: jmpq   0x00007fab7411214c
  0x00007fab74111fa0: cmp    0x7d0(%rcx),%rdx
  0x00007fab74111fa7: jne    0x00007fab74111fb6
  0x00007fab74111fa9: addq   $0x1,0x7d8(%rcx)
  0x00007fab74111fb1: jmpq   0x00007fab7411214c
  0x00007fab74111fb6: cmp    0x7e0(%rcx),%rdx
  0x00007fab74111fbd: jne    0x00007fab74111fcc
  0x00007fab74111fbf: addq   $0x1,0x7e8(%rcx)
  0x00007fab74111fc7: jmpq   0x00007fab7411214c
  0x00007fab74111fcc: cmp    0x7f0(%rcx),%rdx
  0x00007fab74111fd3: jne    0x00007fab74111fe2
  0x00007fab74111fd5: addq   $0x1,0x7f8(%rcx)
  0x00007fab74111fdd: jmpq   0x00007fab7411214c
  0x00007fab74111fe2: cmp    0x800(%rcx),%rdx
  0x00007fab74111fe9: jne    0x00007fab74111ff8
  0x00007fab74111feb: addq   $0x1,0x808(%rcx)
  0x00007fab74111ff3: jmpq   0x00007fab7411214c
  0x00007fab74111ff8: cmp    0x810(%rcx),%rdx
  0x00007fab74111fff: jne    0x00007fab7411200e
  0x00007fab74112001: addq   $0x1,0x818(%rcx)
  0x00007fab74112009: jmpq   0x00007fab7411214c
  0x00007fab7411200e: cmp    0x820(%rcx),%rdx
  0x00007fab74112015: jne    0x00007fab74112024
  0x00007fab74112017: addq   $0x1,0x828(%rcx)
  0x00007fab7411201f: jmpq   0x00007fab7411214c
  0x00007fab74112024: cmpq   $0x0,0x7b0(%rcx)
  0x00007fab7411202f: jne    0x00007fab74112048
  0x00007fab74112031: mov    %rdx,0x7b0(%rcx)
  0x00007fab74112038: movq   $0x1,0x7b8(%rcx)
  0x00007fab74112043: jmpq   0x00007fab7411214c
  0x00007fab74112048: cmpq   $0x0,0x7c0(%rcx)
  0x00007fab74112053: jne    0x00007fab7411206c
  0x00007fab74112055: mov    %rdx,0x7c0(%rcx)
  0x00007fab7411205c: movq   $0x1,0x7c8(%rcx)
  0x00007fab74112067: jmpq   0x00007fab7411214c
  0x00007fab7411206c: cmpq   $0x0,0x7d0(%rcx)
  0x00007fab74112077: jne    0x00007fab74112090
  0x00007fab74112079: mov    %rdx,0x7d0(%rcx)
  0x00007fab74112080: movq   $0x1,0x7d8(%rcx)
  0x00007fab7411208b: jmpq   0x00007fab7411214c
  0x00007fab74112090: cmpq   $0x0,0x7e0(%rcx)
  0x00007fab7411209b: jne    0x00007fab741120b4
  0x00007fab7411209d: mov    %rdx,0x7e0(%rcx)
  0x00007fab741120a4: movq   $0x1,0x7e8(%rcx)
  0x00007fab741120af: jmpq   0x00007fab7411214c
  0x00007fab741120b4: cmpq   $0x0,0x7f0(%rcx)
  0x00007fab741120bf: jne    0x00007fab741120d8
  0x00007fab741120c1: mov    %rdx,0x7f0(%rcx)
  0x00007fab741120c8: movq   $0x1,0x7f8(%rcx)
  0x00007fab741120d3: jmpq   0x00007fab7411214c
  0x00007fab741120d8: cmpq   $0x0,0x800(%rcx)
  0x00007fab741120e3: jne    0x00007fab741120fc
  0x00007fab741120e5: mov    %rdx,0x800(%rcx)
  0x00007fab741120ec: movq   $0x1,0x808(%rcx)
  0x00007fab741120f7: jmpq   0x00007fab7411214c
  0x00007fab741120fc: cmpq   $0x0,0x810(%rcx)
  0x00007fab74112107: jne    0x00007fab74112120
  0x00007fab74112109: mov    %rdx,0x810(%rcx)
  0x00007fab74112110: movq   $0x1,0x818(%rcx)
  0x00007fab7411211b: jmpq   0x00007fab7411214c
  0x00007fab74112120: cmpq   $0x0,0x820(%rcx)
  0x00007fab7411212b: jne    0x00007fab74112144
  0x00007fab7411212d: mov    %rdx,0x820(%rcx)
  0x00007fab74112134: movq   $0x1,0x828(%rcx)
  0x00007fab7411213f: jmpq   0x00007fab7411214c
  0x00007fab74112144: addq   $0x1,0x7a0(%rcx)
  0x00007fab7411214c: mov    %rdi,%rdx
  0x00007fab7411214f: mov    %rsi,%rcx
  0x00007fab74112152: mov    %rcx,%rsi          ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)

  0x00007fab74112155: mov    %edi,0x94(%rsp)
  0x00007fab7411215c: nop
  0x00007fab7411215d: movabs $0xffffffffffffffff,%rax
  0x00007fab74112167: callq  0x00007fab74047f60  ; OopMap{[104]=Oop off=5772}
                                                ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)
                                                ;   {virtual_call}
  0x00007fab7411216c: movabs $0x7fab61c94028,%rsi  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74112176: addq   $0x1,0x838(%rsi)
  0x00007fab7411217e: mov    %rax,%rsi          ;*invokestatic hexDigit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fab74112181: nop
  0x00007fab74112182: nop
  0x00007fab74112183: nop
  0x00007fab74112184: nop
  0x00007fab74112185: nop
  0x00007fab74112186: nop
  0x00007fab74112187: callq  0x00007fab74048160  ; OopMap{[104]=Oop off=5804}
                                                ;*invokestatic hexDigit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ;   {static_call}
  0x00007fab7411218c: mov    $0x4,%ecx
  0x00007fab74112191: mov    0x98(%rsp),%rdx
  0x00007fab74112199: shl    %cl,%rdx
  0x00007fab7411219c: movslq %eax,%rax
  0x00007fab7411219f: or     %rax,%rdx
  0x00007fab741121a2: mov    0x94(%rsp),%edi
  0x00007fab741121a9: inc    %edi
  0x00007fab741121ab: mov    %rdx,%rax          ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@221 (line 479)

  0x00007fab741121ae: mov    %rax,0x98(%rsp)
  0x00007fab741121b6: mov    0x68(%rsp),%rsi
  0x00007fab741121bb: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab741121c5: mov    0x100(%rdx),%ecx
  0x00007fab741121cb: add    $0x8,%ecx
  0x00007fab741121ce: mov    %ecx,0x100(%rdx)
  0x00007fab741121d4: movabs $0x7fab61c932a8,%rdx  ;   {metadata({method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab741121de: and    $0xfff8,%ecx
  0x00007fab741121e4: cmp    $0x0,%ecx
  0x00007fab741121e7: je     0x00007fab741130e2  ; OopMap{rsi=Oop [104]=Oop off=5901}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@225 (line 479)

  0x00007fab741121ed: test   %eax,0x1b6cff0d(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab741121f3: cmp    $0x17,%edi
  0x00007fab741121f6: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74112200: movabs $0x848,%rcx
  0x00007fab7411220a: jl     0x00007fab7411221a
  0x00007fab74112210: movabs $0x858,%rcx
  0x00007fab7411221a: mov    (%rdx,%rcx,1),%r8
  0x00007fab7411221e: lea    0x1(%r8),%r8
  0x00007fab74112222: mov    %r8,(%rdx,%rcx,1)
  0x00007fab74112226: jl     0x00007fab74111f60  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@225 (line 479)

  0x00007fab7411222c: mov    0x98(%rsp),%rax
  0x00007fab74112234: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab7411223e: incl   0x868(%rdx)
  0x00007fab74112244: mov    $0x18,%edi
  0x00007fab74112249: mov    %rax,0xa0(%rsp)
  0x00007fab74112251: jmpq   0x00007fab741124ae  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@232 (line 483)

  0x00007fab74112256: xchg   %ax,%ax
  0x00007fab74112258: mov    %rsi,%rdx
  0x00007fab7411225b: movabs $0x7fab61c94028,%rbx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74112265: mov    0x8(%rdx),%edx
  0x00007fab74112268: shl    $0x3,%rdx
  0x00007fab7411226c: cmp    0x890(%rbx),%rdx
  0x00007fab74112273: jne    0x00007fab74112282
  0x00007fab74112275: addq   $0x1,0x898(%rbx)
  0x00007fab7411227d: jmpq   0x00007fab74112444
  0x00007fab74112282: cmp    0x8a0(%rbx),%rdx
  0x00007fab74112289: jne    0x00007fab74112298
  0x00007fab7411228b: addq   $0x1,0x8a8(%rbx)
  0x00007fab74112293: jmpq   0x00007fab74112444
  0x00007fab74112298: cmp    0x8b0(%rbx),%rdx
  0x00007fab7411229f: jne    0x00007fab741122ae
  0x00007fab741122a1: addq   $0x1,0x8b8(%rbx)
  0x00007fab741122a9: jmpq   0x00007fab74112444
  0x00007fab741122ae: cmp    0x8c0(%rbx),%rdx
  0x00007fab741122b5: jne    0x00007fab741122c4
  0x00007fab741122b7: addq   $0x1,0x8c8(%rbx)
  0x00007fab741122bf: jmpq   0x00007fab74112444
  0x00007fab741122c4: cmp    0x8d0(%rbx),%rdx
  0x00007fab741122cb: jne    0x00007fab741122da
  0x00007fab741122cd: addq   $0x1,0x8d8(%rbx)
  0x00007fab741122d5: jmpq   0x00007fab74112444
  0x00007fab741122da: cmp    0x8e0(%rbx),%rdx
  0x00007fab741122e1: jne    0x00007fab741122f0
  0x00007fab741122e3: addq   $0x1,0x8e8(%rbx)
  0x00007fab741122eb: jmpq   0x00007fab74112444
  0x00007fab741122f0: cmp    0x8f0(%rbx),%rdx
  0x00007fab741122f7: jne    0x00007fab74112306
  0x00007fab741122f9: addq   $0x1,0x8f8(%rbx)
  0x00007fab74112301: jmpq   0x00007fab74112444
  0x00007fab74112306: cmp    0x900(%rbx),%rdx
  0x00007fab7411230d: jne    0x00007fab7411231c
  0x00007fab7411230f: addq   $0x1,0x908(%rbx)
  0x00007fab74112317: jmpq   0x00007fab74112444
  0x00007fab7411231c: cmpq   $0x0,0x890(%rbx)
  0x00007fab74112327: jne    0x00007fab74112340
  0x00007fab74112329: mov    %rdx,0x890(%rbx)
  0x00007fab74112330: movq   $0x1,0x898(%rbx)
  0x00007fab7411233b: jmpq   0x00007fab74112444
  0x00007fab74112340: cmpq   $0x0,0x8a0(%rbx)
  0x00007fab7411234b: jne    0x00007fab74112364
  0x00007fab7411234d: mov    %rdx,0x8a0(%rbx)
  0x00007fab74112354: movq   $0x1,0x8a8(%rbx)
  0x00007fab7411235f: jmpq   0x00007fab74112444
  0x00007fab74112364: cmpq   $0x0,0x8b0(%rbx)
  0x00007fab7411236f: jne    0x00007fab74112388
  0x00007fab74112371: mov    %rdx,0x8b0(%rbx)
  0x00007fab74112378: movq   $0x1,0x8b8(%rbx)
  0x00007fab74112383: jmpq   0x00007fab74112444
  0x00007fab74112388: cmpq   $0x0,0x8c0(%rbx)
  0x00007fab74112393: jne    0x00007fab741123ac
  0x00007fab74112395: mov    %rdx,0x8c0(%rbx)
  0x00007fab7411239c: movq   $0x1,0x8c8(%rbx)
  0x00007fab741123a7: jmpq   0x00007fab74112444
  0x00007fab741123ac: cmpq   $0x0,0x8d0(%rbx)
  0x00007fab741123b7: jne    0x00007fab741123d0
  0x00007fab741123b9: mov    %rdx,0x8d0(%rbx)
  0x00007fab741123c0: movq   $0x1,0x8d8(%rbx)
  0x00007fab741123cb: jmpq   0x00007fab74112444
  0x00007fab741123d0: cmpq   $0x0,0x8e0(%rbx)
  0x00007fab741123db: jne    0x00007fab741123f4
  0x00007fab741123dd: mov    %rdx,0x8e0(%rbx)
  0x00007fab741123e4: movq   $0x1,0x8e8(%rbx)
  0x00007fab741123ef: jmpq   0x00007fab74112444
  0x00007fab741123f4: cmpq   $0x0,0x8f0(%rbx)
  0x00007fab741123ff: jne    0x00007fab74112418
  0x00007fab74112401: mov    %rdx,0x8f0(%rbx)
  0x00007fab74112408: movq   $0x1,0x8f8(%rbx)
  0x00007fab74112413: jmpq   0x00007fab74112444
  0x00007fab74112418: cmpq   $0x0,0x900(%rbx)
  0x00007fab74112423: jne    0x00007fab7411243c
  0x00007fab74112425: mov    %rdx,0x900(%rbx)
  0x00007fab7411242c: movq   $0x1,0x908(%rbx)
  0x00007fab74112437: jmpq   0x00007fab74112444
  0x00007fab7411243c: addq   $0x1,0x880(%rbx)
  0x00007fab74112444: mov    %rdi,%rdx
  0x00007fab74112447: mov    %rsi,%rbx
  0x00007fab7411244a: mov    %rbx,%rsi          ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)

  0x00007fab7411244d: mov    %edi,0xa8(%rsp)
  0x00007fab74112454: nop
  0x00007fab74112455: movabs $0xffffffffffffffff,%rax
  0x00007fab7411245f: callq  0x00007fab74047f60  ; OopMap{[104]=Oop off=6532}
                                                ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)
                                                ;   {virtual_call}
  0x00007fab74112464: movabs $0x7fab61c94028,%rsi  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab7411246e: addq   $0x1,0x918(%rsi)
  0x00007fab74112476: mov    %rax,%rsi          ;*invokestatic hexDigit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fab74112479: nop
  0x00007fab7411247a: nop
  0x00007fab7411247b: nop
  0x00007fab7411247c: nop
  0x00007fab7411247d: nop
  0x00007fab7411247e: nop
  0x00007fab7411247f: callq  0x00007fab74048160  ; OopMap{[104]=Oop off=6564}
                                                ;*invokestatic hexDigit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ;   {static_call}
  0x00007fab74112484: mov    $0x4,%ecx
  0x00007fab74112489: mov    0xa0(%rsp),%rdx
  0x00007fab74112491: shl    %cl,%rdx
  0x00007fab74112494: movslq %eax,%rax
  0x00007fab74112497: or     %rax,%rdx
  0x00007fab7411249a: mov    0xa8(%rsp),%edi
  0x00007fab741124a1: inc    %edi
  0x00007fab741124a3: mov    %rdx,%rbx          ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@259 (line 483)

  0x00007fab741124a6: mov    %rbx,0xa0(%rsp)
  0x00007fab741124ae: mov    0x68(%rsp),%rsi
  0x00007fab741124b3: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab741124bd: mov    0x100(%rdx),%ebx
  0x00007fab741124c3: add    $0x8,%ebx
  0x00007fab741124c6: mov    %ebx,0x100(%rdx)
  0x00007fab741124cc: movabs $0x7fab61c932a8,%rdx  ;   {metadata({method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab741124d6: and    $0xfff8,%ebx
  0x00007fab741124dc: cmp    $0x0,%ebx
  0x00007fab741124df: je     0x00007fab741130f9  ; OopMap{rsi=Oop [104]=Oop off=6661}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@263 (line 483)

  0x00007fab741124e5: test   %eax,0x1b6cfc15(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab741124eb: cmp    $0x24,%edi
  0x00007fab741124ee: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab741124f8: movabs $0x928,%rbx
  0x00007fab74112502: jl     0x00007fab74112512
  0x00007fab74112508: movabs $0x938,%rbx
  0x00007fab74112512: mov    (%rdx,%rbx,1),%rcx
  0x00007fab74112516: lea    0x1(%rcx),%rcx
  0x00007fab7411251a: mov    %rcx,(%rdx,%rbx,1)
  0x00007fab7411251e: jl     0x00007fab74112258  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@263 (line 483)

  0x00007fab74112524: mov    0xa0(%rsp),%rbx
  0x00007fab7411252c: mov    0x88(%rsp),%r8
  0x00007fab74112534: movabs $0x7c0040b08,%rdx  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007fab7411253e: mov    0x60(%r15),%rax
  0x00007fab74112542: lea    0x20(%rax),%rdi
  0x00007fab74112546: cmp    0x70(%r15),%rdi
  0x00007fab7411254a: ja     0x00007fab74113110
  0x00007fab74112550: mov    %rdi,0x60(%r15)
  0x00007fab74112554: mov    0xa8(%rdx),%rcx
  0x00007fab7411255b: mov    %rcx,(%rax)
  0x00007fab7411255e: mov    %rdx,%rcx
  0x00007fab74112561: shr    $0x3,%rcx
  0x00007fab74112565: mov    %ecx,0x8(%rax)
  0x00007fab74112568: xor    %rcx,%rcx
  0x00007fab7411256b: mov    %ecx,0xc(%rax)
  0x00007fab7411256e: xor    %rcx,%rcx
  0x00007fab74112571: mov    %rcx,0x10(%rax)
  0x00007fab74112575: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@266 (line 488)

  0x00007fab74112579: mov    %rax,%rdx
  0x00007fab7411257c: movabs $0x7fab61c94028,%rsi  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74112586: addq   $0x1,0x948(%rsi)
  0x00007fab7411258e: movabs $0x7fab61aff8a8,%rdx  ;   {metadata(method data for {method} {0x00007fab61af9900} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007fab74112598: mov    0xfc(%rdx),%esi
  0x00007fab7411259e: add    $0x8,%esi
  0x00007fab741125a1: mov    %esi,0xfc(%rdx)
  0x00007fab741125a7: movabs $0x7fab61af9900,%rdx  ;   {metadata({method} {0x00007fab61af9900} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007fab741125b1: and    $0x7ffff8,%esi
  0x00007fab741125b7: cmp    $0x0,%esi
  0x00007fab741125ba: je     0x00007fab7411311d
  0x00007fab741125c0: mov    %rax,%rdx
  0x00007fab741125c3: movabs $0x7fab61aff8a8,%rsi  ;   {metadata(method data for {method} {0x00007fab61af9900} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007fab741125cd: addq   $0x1,0x130(%rsi)
  0x00007fab741125d5: movabs $0x7fab61a342a0,%rdx  ;   {metadata(method data for {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab741125df: mov    0xfc(%rdx),%esi
  0x00007fab741125e5: add    $0x8,%esi
  0x00007fab741125e8: mov    %esi,0xfc(%rdx)
  0x00007fab741125ee: movabs $0x7fab618914d8,%rdx  ;   {metadata({method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab741125f8: and    $0x7ffff8,%esi
  0x00007fab741125fe: cmp    $0x0,%esi
  0x00007fab74112601: je     0x00007fab74113134
  0x00007fab74112607: mov    %r8,0x10(%rax)     ;*putfield mostSigBits {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.UUID::&lt;init&gt;@6 (line 129)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@272 (line 488)

  0x00007fab7411260b: mov    %rbx,0x18(%rax)    ;*putfield leastSigBits {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.UUID::&lt;init&gt;@11 (line 130)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@272 (line 488)

  0x00007fab7411260f: add    $0xe0,%rsp
  0x00007fab74112616: pop    %rbp
  0x00007fab74112617: test   %eax,0x1b6cfae3(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411261d: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@275 (line 488)

  0x00007fab7411261e: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74112628: addq   $0x1,0x4d8(%rdx)
  0x00007fab74112630: movabs $0x7fab61c949c0,%rdx  ;   {metadata(method data for {method} {0x00007fab61c93380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab7411263a: mov    0xfc(%rdx),%esi
  0x00007fab74112640: add    $0x8,%esi
  0x00007fab74112643: mov    %esi,0xfc(%rdx)
  0x00007fab74112649: movabs $0x7fab61c93380,%rdx  ;   {metadata({method} {0x00007fab61c93380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74112653: and    $0x7ffff8,%esi
  0x00007fab74112659: cmp    $0x0,%esi
  0x00007fab7411265c: je     0x00007fab7411314b
  0x00007fab74112662: nopw   0x0(%rax,%rax,1)
  0x00007fab74112668: jmpq   0x00007fab74113171  ;   {no_reloc}
  0x00007fab7411266d: add    %al,(%rax)
  0x00007fab7411266f: add    %al,(%rax)
  0x00007fab74112671: add    %cl,-0x75(%rcx)
  0x00007fab74112674: rex.RXB (bad) 
  0x00007fab74112676: lea    0x20(%rax),%rdi
  0x00007fab7411267a: cmp    0x70(%r15),%rdi
  0x00007fab7411267e: ja     0x00007fab7411317b
  0x00007fab74112684: mov    %rdi,0x60(%r15)
  0x00007fab74112688: mov    0xa8(%rdx),%rcx
  0x00007fab7411268f: mov    %rcx,(%rax)
  0x00007fab74112692: mov    %rdx,%rcx
  0x00007fab74112695: shr    $0x3,%rcx
  0x00007fab74112699: mov    %ecx,0x8(%rax)
  0x00007fab7411269c: xor    %rcx,%rcx
  0x00007fab7411269f: mov    %ecx,0xc(%rax)
  0x00007fab741126a2: xor    %rcx,%rcx
  0x00007fab741126a5: mov    %rcx,0x10(%rax)
  0x00007fab741126a9: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@0 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)

  0x00007fab741126ad: data16 xchg %ax,%ax
  0x00007fab741126b0: jmpq   0x00007fab74113197  ;   {no_reloc}
  0x00007fab741126b5: add    %al,(%rax)
  0x00007fab741126b7: add    %al,(%rax)
  0x00007fab741126b9: add    %cl,-0x77(%rax)
  0x00007fab741126bc: test   %ah,(%rax,%rdi,4)
  0x00007fab741126bf: add    %al,(%rax)
  0x00007fab741126c1: add    %ch,%cl
  0x00007fab741126c3: fimull (%rdx)
  0x00007fab741126c5: add    %al,(%rax)         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@4 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)

  0x00007fab741126c7: mov    %rax,%rdx
  0x00007fab741126ca: movabs $0x7fab61c949c0,%rsi  ;   {metadata(method data for {method} {0x00007fab61c93380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab741126d4: addq   $0x1,0x130(%rsi)
  0x00007fab741126dc: movabs $0x671594820,%rdx  ;   {oop(&quot;Invalid UUID string: &quot;)}
  0x00007fab741126e6: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@10 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)

  0x00007fab741126e9: mov    %rax,0xb0(%rsp)
  0x00007fab741126f1: nop
  0x00007fab741126f2: nop
  0x00007fab741126f3: nop
  0x00007fab741126f4: nop
  0x00007fab741126f5: nop
  0x00007fab741126f6: nop
  0x00007fab741126f7: callq  0x00007fab74047d60  ; OopMap{[104]=Oop [176]=Oop [184]=Oop off=7196}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@10 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {optimized virtual_call}
  0x00007fab741126fc: mov    0xb0(%rsp),%rax
  0x00007fab74112704: movabs $0x7fab61c949c0,%rdx  ;   {metadata(method data for {method} {0x00007fab61c93380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab7411270e: mov    0x8(%rax),%eax
  0x00007fab74112711: shl    $0x3,%rax
  0x00007fab74112715: cmp    0x150(%rdx),%rax
  0x00007fab7411271c: jne    0x00007fab7411272b
  0x00007fab7411271e: addq   $0x1,0x158(%rdx)
  0x00007fab74112726: jmpq   0x00007fab741128ed
  0x00007fab7411272b: cmp    0x160(%rdx),%rax
  0x00007fab74112732: jne    0x00007fab74112741
  0x00007fab74112734: addq   $0x1,0x168(%rdx)
  0x00007fab7411273c: jmpq   0x00007fab741128ed
  0x00007fab74112741: cmp    0x170(%rdx),%rax
  0x00007fab74112748: jne    0x00007fab74112757
  0x00007fab7411274a: addq   $0x1,0x178(%rdx)
  0x00007fab74112752: jmpq   0x00007fab741128ed
  0x00007fab74112757: cmp    0x180(%rdx),%rax
  0x00007fab7411275e: jne    0x00007fab7411276d
  0x00007fab74112760: addq   $0x1,0x188(%rdx)
  0x00007fab74112768: jmpq   0x00007fab741128ed
  0x00007fab7411276d: cmp    0x190(%rdx),%rax
  0x00007fab74112774: jne    0x00007fab74112783
  0x00007fab74112776: addq   $0x1,0x198(%rdx)
  0x00007fab7411277e: jmpq   0x00007fab741128ed
  0x00007fab74112783: cmp    0x1a0(%rdx),%rax
  0x00007fab7411278a: jne    0x00007fab74112799
  0x00007fab7411278c: addq   $0x1,0x1a8(%rdx)
  0x00007fab74112794: jmpq   0x00007fab741128ed
  0x00007fab74112799: cmp    0x1b0(%rdx),%rax
  0x00007fab741127a0: jne    0x00007fab741127af
  0x00007fab741127a2: addq   $0x1,0x1b8(%rdx)
  0x00007fab741127aa: jmpq   0x00007fab741128ed
  0x00007fab741127af: cmp    0x1c0(%rdx),%rax
  0x00007fab741127b6: jne    0x00007fab741127c5
  0x00007fab741127b8: addq   $0x1,0x1c8(%rdx)
  0x00007fab741127c0: jmpq   0x00007fab741128ed
  0x00007fab741127c5: cmpq   $0x0,0x150(%rdx)
  0x00007fab741127d0: jne    0x00007fab741127e9
  0x00007fab741127d2: mov    %rax,0x150(%rdx)
  0x00007fab741127d9: movq   $0x1,0x158(%rdx)
  0x00007fab741127e4: jmpq   0x00007fab741128ed
  0x00007fab741127e9: cmpq   $0x0,0x160(%rdx)
  0x00007fab741127f4: jne    0x00007fab7411280d
  0x00007fab741127f6: mov    %rax,0x160(%rdx)
  0x00007fab741127fd: movq   $0x1,0x168(%rdx)
  0x00007fab74112808: jmpq   0x00007fab741128ed
  0x00007fab7411280d: cmpq   $0x0,0x170(%rdx)
  0x00007fab74112818: jne    0x00007fab74112831
  0x00007fab7411281a: mov    %rax,0x170(%rdx)
  0x00007fab74112821: movq   $0x1,0x178(%rdx)
  0x00007fab7411282c: jmpq   0x00007fab741128ed
  0x00007fab74112831: cmpq   $0x0,0x180(%rdx)
  0x00007fab7411283c: jne    0x00007fab74112855
  0x00007fab7411283e: mov    %rax,0x180(%rdx)
  0x00007fab74112845: movq   $0x1,0x188(%rdx)
  0x00007fab74112850: jmpq   0x00007fab741128ed
  0x00007fab74112855: cmpq   $0x0,0x190(%rdx)
  0x00007fab74112860: jne    0x00007fab74112879
  0x00007fab74112862: mov    %rax,0x190(%rdx)
  0x00007fab74112869: movq   $0x1,0x198(%rdx)
  0x00007fab74112874: jmpq   0x00007fab741128ed
  0x00007fab74112879: cmpq   $0x0,0x1a0(%rdx)
  0x00007fab74112884: jne    0x00007fab7411289d
  0x00007fab74112886: mov    %rax,0x1a0(%rdx)
  0x00007fab7411288d: movq   $0x1,0x1a8(%rdx)
  0x00007fab74112898: jmpq   0x00007fab741128ed
  0x00007fab7411289d: cmpq   $0x0,0x1b0(%rdx)
  0x00007fab741128a8: jne    0x00007fab741128c1
  0x00007fab741128aa: mov    %rax,0x1b0(%rdx)
  0x00007fab741128b1: movq   $0x1,0x1b8(%rdx)
  0x00007fab741128bc: jmpq   0x00007fab741128ed
  0x00007fab741128c1: cmpq   $0x0,0x1c0(%rdx)
  0x00007fab741128cc: jne    0x00007fab741128e5
  0x00007fab741128ce: mov    %rax,0x1c0(%rdx)
  0x00007fab741128d5: movq   $0x1,0x1c8(%rdx)
  0x00007fab741128e0: jmpq   0x00007fab741128ed
  0x00007fab741128e5: addq   $0x1,0x140(%rdx)
  0x00007fab741128ed: mov    0x68(%rsp),%rdx
  0x00007fab741128f2: mov    0xb0(%rsp),%rsi    ;*invokevirtual append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@14 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)

  0x00007fab741128fa: nop
  0x00007fab741128fb: nop
  0x00007fab741128fc: nop
  0x00007fab741128fd: movabs $0xffffffffffffffff,%rax
  0x00007fab74112907: callq  0x00007fab74047f60  ; OopMap{[184]=Oop off=7724}
                                                ;*invokevirtual append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@14 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {virtual_call}
  0x00007fab7411290c: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00007fab741131ae
  0x00007fab7411290f: mov    %rax,%rsi
  0x00007fab74112912: movabs $0x7fab61c949c0,%rdi  ;   {metadata(method data for {method} {0x00007fab61c93380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab7411291c: mov    0x8(%rsi),%esi
  0x00007fab7411291f: shl    $0x3,%rsi
  0x00007fab74112923: cmp    0x1e8(%rdi),%rsi
  0x00007fab7411292a: jne    0x00007fab74112939
  0x00007fab7411292c: addq   $0x1,0x1f0(%rdi)
  0x00007fab74112934: jmpq   0x00007fab74112afb
  0x00007fab74112939: cmp    0x1f8(%rdi),%rsi
  0x00007fab74112940: jne    0x00007fab7411294f
  0x00007fab74112942: addq   $0x1,0x200(%rdi)
  0x00007fab7411294a: jmpq   0x00007fab74112afb
  0x00007fab7411294f: cmp    0x208(%rdi),%rsi
  0x00007fab74112956: jne    0x00007fab74112965
  0x00007fab74112958: addq   $0x1,0x210(%rdi)
  0x00007fab74112960: jmpq   0x00007fab74112afb
  0x00007fab74112965: cmp    0x218(%rdi),%rsi
  0x00007fab7411296c: jne    0x00007fab7411297b
  0x00007fab7411296e: addq   $0x1,0x220(%rdi)
  0x00007fab74112976: jmpq   0x00007fab74112afb
  0x00007fab7411297b: cmp    0x228(%rdi),%rsi
  0x00007fab74112982: jne    0x00007fab74112991
  0x00007fab74112984: addq   $0x1,0x230(%rdi)
  0x00007fab7411298c: jmpq   0x00007fab74112afb
  0x00007fab74112991: cmp    0x238(%rdi),%rsi
  0x00007fab74112998: jne    0x00007fab741129a7
  0x00007fab7411299a: addq   $0x1,0x240(%rdi)
  0x00007fab741129a2: jmpq   0x00007fab74112afb
  0x00007fab741129a7: cmp    0x248(%rdi),%rsi
  0x00007fab741129ae: jne    0x00007fab741129bd
  0x00007fab741129b0: addq   $0x1,0x250(%rdi)
  0x00007fab741129b8: jmpq   0x00007fab74112afb
  0x00007fab741129bd: cmp    0x258(%rdi),%rsi
  0x00007fab741129c4: jne    0x00007fab741129d3
  0x00007fab741129c6: addq   $0x1,0x260(%rdi)
  0x00007fab741129ce: jmpq   0x00007fab74112afb
  0x00007fab741129d3: cmpq   $0x0,0x1e8(%rdi)
  0x00007fab741129de: jne    0x00007fab741129f7
  0x00007fab741129e0: mov    %rsi,0x1e8(%rdi)
  0x00007fab741129e7: movq   $0x1,0x1f0(%rdi)
  0x00007fab741129f2: jmpq   0x00007fab74112afb
  0x00007fab741129f7: cmpq   $0x0,0x1f8(%rdi)
  0x00007fab74112a02: jne    0x00007fab74112a1b
  0x00007fab74112a04: mov    %rsi,0x1f8(%rdi)
  0x00007fab74112a0b: movq   $0x1,0x200(%rdi)
  0x00007fab74112a16: jmpq   0x00007fab74112afb
  0x00007fab74112a1b: cmpq   $0x0,0x208(%rdi)
  0x00007fab74112a26: jne    0x00007fab74112a3f
  0x00007fab74112a28: mov    %rsi,0x208(%rdi)
  0x00007fab74112a2f: movq   $0x1,0x210(%rdi)
  0x00007fab74112a3a: jmpq   0x00007fab74112afb
  0x00007fab74112a3f: cmpq   $0x0,0x218(%rdi)
  0x00007fab74112a4a: jne    0x00007fab74112a63
  0x00007fab74112a4c: mov    %rsi,0x218(%rdi)
  0x00007fab74112a53: movq   $0x1,0x220(%rdi)
  0x00007fab74112a5e: jmpq   0x00007fab74112afb
  0x00007fab74112a63: cmpq   $0x0,0x228(%rdi)
  0x00007fab74112a6e: jne    0x00007fab74112a87
  0x00007fab74112a70: mov    %rsi,0x228(%rdi)
  0x00007fab74112a77: movq   $0x1,0x230(%rdi)
  0x00007fab74112a82: jmpq   0x00007fab74112afb
  0x00007fab74112a87: cmpq   $0x0,0x238(%rdi)
  0x00007fab74112a92: jne    0x00007fab74112aab
  0x00007fab74112a94: mov    %rsi,0x238(%rdi)
  0x00007fab74112a9b: movq   $0x1,0x240(%rdi)
  0x00007fab74112aa6: jmpq   0x00007fab74112afb
  0x00007fab74112aab: cmpq   $0x0,0x248(%rdi)
  0x00007fab74112ab6: jne    0x00007fab74112acf
  0x00007fab74112ab8: mov    %rsi,0x248(%rdi)
  0x00007fab74112abf: movq   $0x1,0x250(%rdi)
  0x00007fab74112aca: jmpq   0x00007fab74112afb
  0x00007fab74112acf: cmpq   $0x0,0x258(%rdi)
  0x00007fab74112ada: jne    0x00007fab74112af3
  0x00007fab74112adc: mov    %rsi,0x258(%rdi)
  0x00007fab74112ae3: movq   $0x1,0x260(%rdi)
  0x00007fab74112aee: jmpq   0x00007fab74112afb
  0x00007fab74112af3: addq   $0x1,0x1d8(%rdi)
  0x00007fab74112afb: mov    %rax,%rsi          ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@17 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)

  0x00007fab74112afe: nop
  0x00007fab74112aff: nop
  0x00007fab74112b00: nop
  0x00007fab74112b01: nop
  0x00007fab74112b02: nop
  0x00007fab74112b03: nop
  0x00007fab74112b04: nop
  0x00007fab74112b05: movabs $0xffffffffffffffff,%rax
  0x00007fab74112b0f: callq  0x00007fab74047f60  ; OopMap{[184]=Oop off=8244}
                                                ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@17 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {virtual_call}
  0x00007fab74112b14: mov    0xb8(%rsp),%rdx
  0x00007fab74112b1c: movabs $0x7fab61c949c0,%rsi  ;   {metadata(method data for {method} {0x00007fab61c93380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74112b26: addq   $0x1,0x270(%rsi)
  0x00007fab74112b2e: mov    %rax,%rdx
  0x00007fab74112b31: mov    0xb8(%rsp),%rsi    ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@20 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)

  0x00007fab74112b39: nop
  0x00007fab74112b3a: nop
  0x00007fab74112b3b: nop
  0x00007fab74112b3c: nop
  0x00007fab74112b3d: nop
  0x00007fab74112b3e: nop
  0x00007fab74112b3f: callq  0x00007fab74047d60  ; OopMap{[184]=Oop off=8292}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@20 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {optimized virtual_call}
  0x00007fab74112b44: mov    0xb8(%rsp),%rax
  0x00007fab74112b4c: jmpq   0x00007fab74113246  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@72 (line 459)

  0x00007fab74112b51: movabs $0x7fab61c94028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c932a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74112b5b: addq   $0x1,0x1e8(%rdx)
  0x00007fab74112b63: movabs $0x7fab61c949c0,%rdx  ;   {metadata(method data for {method} {0x00007fab61c93380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74112b6d: mov    0xfc(%rdx),%edi
  0x00007fab74112b73: add    $0x8,%edi
  0x00007fab74112b76: mov    %edi,0xfc(%rdx)
  0x00007fab74112b7c: movabs $0x7fab61c93380,%rdx  ;   {metadata({method} {0x00007fab61c93380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74112b86: and    $0x7ffff8,%edi
  0x00007fab74112b8c: cmp    $0x0,%edi
  0x00007fab74112b8f: je     0x00007fab741131b3
  0x00007fab74112b95: data16 xchg %ax,%ax
  0x00007fab74112b98: jmpq   0x00007fab741131d9  ;   {no_reloc}
  0x00007fab74112b9d: add    %al,(%rax)
  0x00007fab74112b9f: add    %al,(%rax)
  0x00007fab74112ba1: add    %cl,-0x75(%rcx)
  0x00007fab74112ba4: rex.RXB (bad) 
  0x00007fab74112ba6: lea    0x20(%rax),%rdi
  0x00007fab74112baa: cmp    0x70(%r15),%rdi
  0x00007fab74112bae: ja     0x00007fab741131e3
  0x00007fab74112bb4: mov    %rdi,0x60(%r15)
  0x00007fab74112bb8: mov    0xa8(%rdx),%rcx
  0x00007fab74112bbf: mov    %rcx,(%rax)
  0x00007fab74112bc2: mov    %rdx,%rcx
  0x00007fab74112bc5: shr    $0x3,%rcx
  0x00007fab74112bc9: mov    %ecx,0x8(%rax)
  0x00007fab74112bcc: xor    %rcx,%rcx
  0x00007fab74112bcf: mov    %ecx,0xc(%rax)
  0x00007fab74112bd2: xor    %rcx,%rcx
  0x00007fab74112bd5: mov    %rcx,0x10(%rax)
  0x00007fab74112bd9: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@0 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)

  0x00007fab74112bdd: data16 xchg %ax,%ax
  0x00007fab74112be0: jmpq   0x00007fab741131ff  ;   {no_reloc}
  0x00007fab74112be5: add    %al,(%rax)
  0x00007fab74112be7: add    %al,(%rax)
  0x00007fab74112be9: add    %cl,-0x77(%rax)
  0x00007fab74112bec: test   %ah,(%rax,%rcx,8)
  0x00007fab74112bef: add    %al,(%rax)
  0x00007fab74112bf1: add    %ch,%cl
  0x00007fab74112bf3: adc    (%rsi),%al
  0x00007fab74112bf5: add    %al,(%rax)         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@4 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)

  0x00007fab74112bf7: mov    %rax,%rdx
  0x00007fab74112bfa: movabs $0x7fab61c949c0,%rsi  ;   {metadata(method data for {method} {0x00007fab61c93380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74112c04: addq   $0x1,0x130(%rsi)
  0x00007fab74112c0c: movabs $0x671594820,%rdx  ;   {oop(&quot;Invalid UUID string: &quot;)}
  0x00007fab74112c16: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@10 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)

  0x00007fab74112c19: mov    %rax,0xc0(%rsp)
  0x00007fab74112c21: nop
  0x00007fab74112c22: nop
  0x00007fab74112c23: nop
  0x00007fab74112c24: nop
  0x00007fab74112c25: nop
  0x00007fab74112c26: nop
  0x00007fab74112c27: callq  0x00007fab74047d60  ; OopMap{[192]=Oop [200]=Oop [104]=Oop off=8524}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@10 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {optimized virtual_call}
  0x00007fab74112c2c: mov    0xc0(%rsp),%rax
  0x00007fab74112c34: movabs $0x7fab61c949c0,%rdx  ;   {metadata(method data for {method} {0x00007fab61c93380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74112c3e: mov    0x8(%rax),%eax
  0x00007fab74112c41: shl    $0x3,%rax
  0x00007fab74112c45: cmp    0x150(%rdx),%rax
  0x00007fab74112c4c: jne    0x00007fab74112c5b
  0x00007fab74112c4e: addq   $0x1,0x158(%rdx)
  0x00007fab74112c56: jmpq   0x00007fab74112e1d
  0x00007fab74112c5b: cmp    0x160(%rdx),%rax
  0x00007fab74112c62: jne    0x00007fab74112c71
  0x00007fab74112c64: addq   $0x1,0x168(%rdx)
  0x00007fab74112c6c: jmpq   0x00007fab74112e1d
  0x00007fab74112c71: cmp    0x170(%rdx),%rax
  0x00007fab74112c78: jne    0x00007fab74112c87
  0x00007fab74112c7a: addq   $0x1,0x178(%rdx)
  0x00007fab74112c82: jmpq   0x00007fab74112e1d
  0x00007fab74112c87: cmp    0x180(%rdx),%rax
  0x00007fab74112c8e: jne    0x00007fab74112c9d
  0x00007fab74112c90: addq   $0x1,0x188(%rdx)
  0x00007fab74112c98: jmpq   0x00007fab74112e1d
  0x00007fab74112c9d: cmp    0x190(%rdx),%rax
  0x00007fab74112ca4: jne    0x00007fab74112cb3
  0x00007fab74112ca6: addq   $0x1,0x198(%rdx)
  0x00007fab74112cae: jmpq   0x00007fab74112e1d
  0x00007fab74112cb3: cmp    0x1a0(%rdx),%rax
  0x00007fab74112cba: jne    0x00007fab74112cc9
  0x00007fab74112cbc: addq   $0x1,0x1a8(%rdx)
  0x00007fab74112cc4: jmpq   0x00007fab74112e1d
  0x00007fab74112cc9: cmp    0x1b0(%rdx),%rax
  0x00007fab74112cd0: jne    0x00007fab74112cdf
  0x00007fab74112cd2: addq   $0x1,0x1b8(%rdx)
  0x00007fab74112cda: jmpq   0x00007fab74112e1d
  0x00007fab74112cdf: cmp    0x1c0(%rdx),%rax
  0x00007fab74112ce6: jne    0x00007fab74112cf5
  0x00007fab74112ce8: addq   $0x1,0x1c8(%rdx)
  0x00007fab74112cf0: jmpq   0x00007fab74112e1d
  0x00007fab74112cf5: cmpq   $0x0,0x150(%rdx)
  0x00007fab74112d00: jne    0x00007fab74112d19
  0x00007fab74112d02: mov    %rax,0x150(%rdx)
  0x00007fab74112d09: movq   $0x1,0x158(%rdx)
  0x00007fab74112d14: jmpq   0x00007fab74112e1d
  0x00007fab74112d19: cmpq   $0x0,0x160(%rdx)
  0x00007fab74112d24: jne    0x00007fab74112d3d
  0x00007fab74112d26: mov    %rax,0x160(%rdx)
  0x00007fab74112d2d: movq   $0x1,0x168(%rdx)
  0x00007fab74112d38: jmpq   0x00007fab74112e1d
  0x00007fab74112d3d: cmpq   $0x0,0x170(%rdx)
  0x00007fab74112d48: jne    0x00007fab74112d61
  0x00007fab74112d4a: mov    %rax,0x170(%rdx)
  0x00007fab74112d51: movq   $0x1,0x178(%rdx)
  0x00007fab74112d5c: jmpq   0x00007fab74112e1d
  0x00007fab74112d61: cmpq   $0x0,0x180(%rdx)
  0x00007fab74112d6c: jne    0x00007fab74112d85
  0x00007fab74112d6e: mov    %rax,0x180(%rdx)
  0x00007fab74112d75: movq   $0x1,0x188(%rdx)
  0x00007fab74112d80: jmpq   0x00007fab74112e1d
  0x00007fab74112d85: cmpq   $0x0,0x190(%rdx)
  0x00007fab74112d90: jne    0x00007fab74112da9
  0x00007fab74112d92: mov    %rax,0x190(%rdx)
  0x00007fab74112d99: movq   $0x1,0x198(%rdx)
  0x00007fab74112da4: jmpq   0x00007fab74112e1d
  0x00007fab74112da9: cmpq   $0x0,0x1a0(%rdx)
  0x00007fab74112db4: jne    0x00007fab74112dcd
  0x00007fab74112db6: mov    %rax,0x1a0(%rdx)
  0x00007fab74112dbd: movq   $0x1,0x1a8(%rdx)
  0x00007fab74112dc8: jmpq   0x00007fab74112e1d
  0x00007fab74112dcd: cmpq   $0x0,0x1b0(%rdx)
  0x00007fab74112dd8: jne    0x00007fab74112df1
  0x00007fab74112dda: mov    %rax,0x1b0(%rdx)
  0x00007fab74112de1: movq   $0x1,0x1b8(%rdx)
  0x00007fab74112dec: jmpq   0x00007fab74112e1d
  0x00007fab74112df1: cmpq   $0x0,0x1c0(%rdx)
  0x00007fab74112dfc: jne    0x00007fab74112e15
  0x00007fab74112dfe: mov    %rax,0x1c0(%rdx)
  0x00007fab74112e05: movq   $0x1,0x1c8(%rdx)
  0x00007fab74112e10: jmpq   0x00007fab74112e1d
  0x00007fab74112e15: addq   $0x1,0x140(%rdx)
  0x00007fab74112e1d: mov    0x68(%rsp),%rdx
  0x00007fab74112e22: mov    0xc0(%rsp),%rsi    ;*invokevirtual append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@14 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)

  0x00007fab74112e2a: nop
  0x00007fab74112e2b: nop
  0x00007fab74112e2c: nop
  0x00007fab74112e2d: movabs $0xffffffffffffffff,%rax
  0x00007fab74112e37: callq  0x00007fab74047f60  ; OopMap{[200]=Oop off=9052}
                                                ;*invokevirtual append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@14 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {virtual_call}
  0x00007fab74112e3c: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00007fab74113216
  0x00007fab74112e3f: mov    %rax,%rsi
  0x00007fab74112e42: movabs $0x7fab61c949c0,%rdi  ;   {metadata(method data for {method} {0x00007fab61c93380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74112e4c: mov    0x8(%rsi),%esi
  0x00007fab74112e4f: shl    $0x3,%rsi
  0x00007fab74112e53: cmp    0x1e8(%rdi),%rsi
  0x00007fab74112e5a: jne    0x00007fab74112e69
  0x00007fab74112e5c: addq   $0x1,0x1f0(%rdi)
  0x00007fab74112e64: jmpq   0x00007fab7411302b
  0x00007fab74112e69: cmp    0x1f8(%rdi),%rsi
  0x00007fab74112e70: jne    0x00007fab74112e7f
  0x00007fab74112e72: addq   $0x1,0x200(%rdi)
  0x00007fab74112e7a: jmpq   0x00007fab7411302b
  0x00007fab74112e7f: cmp    0x208(%rdi),%rsi
  0x00007fab74112e86: jne    0x00007fab74112e95
  0x00007fab74112e88: addq   $0x1,0x210(%rdi)
  0x00007fab74112e90: jmpq   0x00007fab7411302b
  0x00007fab74112e95: cmp    0x218(%rdi),%rsi
  0x00007fab74112e9c: jne    0x00007fab74112eab
  0x00007fab74112e9e: addq   $0x1,0x220(%rdi)
  0x00007fab74112ea6: jmpq   0x00007fab7411302b
  0x00007fab74112eab: cmp    0x228(%rdi),%rsi
  0x00007fab74112eb2: jne    0x00007fab74112ec1
  0x00007fab74112eb4: addq   $0x1,0x230(%rdi)
  0x00007fab74112ebc: jmpq   0x00007fab7411302b
  0x00007fab74112ec1: cmp    0x238(%rdi),%rsi
  0x00007fab74112ec8: jne    0x00007fab74112ed7
  0x00007fab74112eca: addq   $0x1,0x240(%rdi)
  0x00007fab74112ed2: jmpq   0x00007fab7411302b
  0x00007fab74112ed7: cmp    0x248(%rdi),%rsi
  0x00007fab74112ede: jne    0x00007fab74112eed
  0x00007fab74112ee0: addq   $0x1,0x250(%rdi)
  0x00007fab74112ee8: jmpq   0x00007fab7411302b
  0x00007fab74112eed: cmp    0x258(%rdi),%rsi
  0x00007fab74112ef4: jne    0x00007fab74112f03
  0x00007fab74112ef6: addq   $0x1,0x260(%rdi)
  0x00007fab74112efe: jmpq   0x00007fab7411302b
  0x00007fab74112f03: cmpq   $0x0,0x1e8(%rdi)
  0x00007fab74112f0e: jne    0x00007fab74112f27
  0x00007fab74112f10: mov    %rsi,0x1e8(%rdi)
  0x00007fab74112f17: movq   $0x1,0x1f0(%rdi)
  0x00007fab74112f22: jmpq   0x00007fab7411302b
  0x00007fab74112f27: cmpq   $0x0,0x1f8(%rdi)
  0x00007fab74112f32: jne    0x00007fab74112f4b
  0x00007fab74112f34: mov    %rsi,0x1f8(%rdi)
  0x00007fab74112f3b: movq   $0x1,0x200(%rdi)
  0x00007fab74112f46: jmpq   0x00007fab7411302b
  0x00007fab74112f4b: cmpq   $0x0,0x208(%rdi)
  0x00007fab74112f56: jne    0x00007fab74112f6f
  0x00007fab74112f58: mov    %rsi,0x208(%rdi)
  0x00007fab74112f5f: movq   $0x1,0x210(%rdi)
  0x00007fab74112f6a: jmpq   0x00007fab7411302b
  0x00007fab74112f6f: cmpq   $0x0,0x218(%rdi)
  0x00007fab74112f7a: jne    0x00007fab74112f93
  0x00007fab74112f7c: mov    %rsi,0x218(%rdi)
  0x00007fab74112f83: movq   $0x1,0x220(%rdi)
  0x00007fab74112f8e: jmpq   0x00007fab7411302b
  0x00007fab74112f93: cmpq   $0x0,0x228(%rdi)
  0x00007fab74112f9e: jne    0x00007fab74112fb7
  0x00007fab74112fa0: mov    %rsi,0x228(%rdi)
  0x00007fab74112fa7: movq   $0x1,0x230(%rdi)
  0x00007fab74112fb2: jmpq   0x00007fab7411302b
  0x00007fab74112fb7: cmpq   $0x0,0x238(%rdi)
  0x00007fab74112fc2: jne    0x00007fab74112fdb
  0x00007fab74112fc4: mov    %rsi,0x238(%rdi)
  0x00007fab74112fcb: movq   $0x1,0x240(%rdi)
  0x00007fab74112fd6: jmpq   0x00007fab7411302b
  0x00007fab74112fdb: cmpq   $0x0,0x248(%rdi)
  0x00007fab74112fe6: jne    0x00007fab74112fff
  0x00007fab74112fe8: mov    %rsi,0x248(%rdi)
  0x00007fab74112fef: movq   $0x1,0x250(%rdi)
  0x00007fab74112ffa: jmpq   0x00007fab7411302b
  0x00007fab74112fff: cmpq   $0x0,0x258(%rdi)
  0x00007fab7411300a: jne    0x00007fab74113023
  0x00007fab7411300c: mov    %rsi,0x258(%rdi)
  0x00007fab74113013: movq   $0x1,0x260(%rdi)
  0x00007fab7411301e: jmpq   0x00007fab7411302b
  0x00007fab74113023: addq   $0x1,0x1d8(%rdi)
  0x00007fab7411302b: mov    %rax,%rsi          ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@17 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)

  0x00007fab7411302e: nop
  0x00007fab7411302f: nop
  0x00007fab74113030: nop
  0x00007fab74113031: nop
  0x00007fab74113032: nop
  0x00007fab74113033: nop
  0x00007fab74113034: nop
  0x00007fab74113035: movabs $0xffffffffffffffff,%rax
  0x00007fab7411303f: callq  0x00007fab74047f60  ; OopMap{[200]=Oop off=9572}
                                                ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@17 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {virtual_call}
  0x00007fab74113044: mov    0xc8(%rsp),%rdx
  0x00007fab7411304c: movabs $0x7fab61c949c0,%rsi  ;   {metadata(method data for {method} {0x00007fab61c93380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fab74113056: addq   $0x1,0x270(%rsi)
  0x00007fab7411305e: mov    %rax,%rdx
  0x00007fab74113061: mov    0xc8(%rsp),%rsi    ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@20 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)

  0x00007fab74113069: nop
  0x00007fab7411306a: nop
  0x00007fab7411306b: nop
  0x00007fab7411306c: nop
  0x00007fab7411306d: nop
  0x00007fab7411306e: nop
  0x00007fab7411306f: callq  0x00007fab74047d60  ; OopMap{[200]=Oop off=9620}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@20 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {optimized virtual_call}
  0x00007fab74113074: mov    0xc8(%rsp),%rax
  0x00007fab7411307c: jmpq   0x00007fab74113246
  0x00007fab74113081: mov    %rdi,0x8(%rsp)
  0x00007fab74113086: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411308e: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [104]=Oop off=9651}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@-1 (line 455)
                                                ;   {runtime_call}
  0x00007fab74113093: jmpq   0x00007fab74110b26
  0x00007fab74113098: callq  0x00007fab740fc000  ; OopMap{rsi=Oop [104]=Oop off=9661}
                                                ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ;   {runtime_call}
  0x00007fab7411309d: mov    %rdx,0x8(%rsp)
  0x00007fab741130a2: movq   $0x6f,(%rsp)
  0x00007fab741130aa: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [104]=Oop off=9679}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@111 (line 465)
                                                ;   {runtime_call}
  0x00007fab741130af: jmpq   0x00007fab74111911
  0x00007fab741130b4: mov    %rdx,0x8(%rsp)
  0x00007fab741130b9: movq   $0x95,(%rsp)
  0x00007fab741130c1: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [104]=Oop off=9702}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@149 (line 469)
                                                ;   {runtime_call}
  0x00007fab741130c6: jmpq   0x00007fab74111bf7
  0x00007fab741130cb: mov    %rdx,0x8(%rsp)
  0x00007fab741130d0: movq   $0xbb,(%rsp)
  0x00007fab741130d8: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [104]=Oop off=9725}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@187 (line 473)
                                                ;   {runtime_call}
  0x00007fab741130dd: jmpq   0x00007fab74111ee2
  0x00007fab741130e2: mov    %rdx,0x8(%rsp)
  0x00007fab741130e7: movq   $0xe1,(%rsp)
  0x00007fab741130ef: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [104]=Oop off=9748}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@225 (line 479)
                                                ;   {runtime_call}
  0x00007fab741130f4: jmpq   0x00007fab741121ed
  0x00007fab741130f9: mov    %rdx,0x8(%rsp)
  0x00007fab741130fe: movq   $0x107,(%rsp)
  0x00007fab74113106: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [104]=Oop off=9771}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@263 (line 483)
                                                ;   {runtime_call}
  0x00007fab7411310b: jmpq   0x00007fab741124e5
  0x00007fab74113110: mov    %rdx,%rdx
  0x00007fab74113113: callq  0x00007fab740fc760  ; OopMap{off=9784}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@266 (line 488)
                                                ;   {runtime_call}
  0x00007fab74113118: jmpq   0x00007fab74112579
  0x00007fab7411311d: mov    %rdx,0x8(%rsp)
  0x00007fab74113122: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411312a: callq  0x00007fab741005e0  ; OopMap{rax=Oop off=9807}
                                                ;*synchronization entry
                                                ; - java.util.UUID::&lt;init&gt;@-1 (line 128)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@272 (line 488)
                                                ;   {runtime_call}
  0x00007fab7411312f: jmpq   0x00007fab741125c0
  0x00007fab74113134: mov    %rdx,0x8(%rsp)
  0x00007fab74113139: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74113141: callq  0x00007fab741005e0  ; OopMap{rax=Oop off=9830}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.UUID::&lt;init&gt;@1 (line 128)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@272 (line 488)
                                                ;   {runtime_call}
  0x00007fab74113146: jmpq   0x00007fab74112607
  0x00007fab7411314b: mov    %rdx,0x8(%rsp)
  0x00007fab74113150: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74113158: callq  0x00007fab741005e0  ; OopMap{[104]=Oop off=9853}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@-1 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {runtime_call}
  0x00007fab7411315d: jmpq   0x00007fab74112662
  0x00007fab74113162: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab7411316c: mov    $0xa050f00,%eax
  0x00007fab74113171: callq  0x00007fab740ff5e0  ; OopMap{[104]=Oop off=9878}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@0 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {runtime_call}
  0x00007fab74113176: jmpq   0x00007fab74112668
  0x00007fab7411317b: mov    %rdx,%rdx
  0x00007fab7411317e: callq  0x00007fab740fc760  ; OopMap{[104]=Oop off=9891}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@0 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {runtime_call}
  0x00007fab74113183: jmpq   0x00007fab741126ad
  0x00007fab74113188: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab74113192: mov    $0xa050f00,%eax
  0x00007fab74113197: callq  0x00007fab740ff5e0  ; OopMap{[104]=Oop rax=Oop off=9916}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@4 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {runtime_call}
  0x00007fab7411319c: jmpq   0x00007fab741126b0
  0x00007fab741131a1: mov    %rdx,%rdx
  0x00007fab741131a4: callq  0x00007fab740fc4a0  ; OopMap{[104]=Oop [184]=Oop off=9929}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@4 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {runtime_call}
  0x00007fab741131a9: jmpq   0x00007fab741126c7
  0x00007fab741131ae: callq  0x00007fab740fc000  ; OopMap{[184]=Oop rax=Oop off=9939}
                                                ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@17 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {runtime_call}
  0x00007fab741131b3: mov    %rdx,0x8(%rsp)
  0x00007fab741131b8: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741131c0: callq  0x00007fab741005e0  ; OopMap{[104]=Oop off=9957}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@-1 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {runtime_call}
  0x00007fab741131c5: jmpq   0x00007fab74112b95
  0x00007fab741131ca: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab741131d4: mov    $0xa050f00,%eax
  0x00007fab741131d9: callq  0x00007fab740ff5e0  ; OopMap{[104]=Oop off=9982}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@0 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {runtime_call}
  0x00007fab741131de: jmpq   0x00007fab74112b98
  0x00007fab741131e3: mov    %rdx,%rdx
  0x00007fab741131e6: callq  0x00007fab740fc760  ; OopMap{[104]=Oop off=9995}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@0 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {runtime_call}
  0x00007fab741131eb: jmpq   0x00007fab74112bdd
  0x00007fab741131f0: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab741131fa: mov    $0xa050f00,%eax
  0x00007fab741131ff: callq  0x00007fab740ff5e0  ; OopMap{[104]=Oop rax=Oop off=10020}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@4 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {runtime_call}
  0x00007fab74113204: jmpq   0x00007fab74112be0
  0x00007fab74113209: mov    %rdx,%rdx
  0x00007fab7411320c: callq  0x00007fab740fc4a0  ; OopMap{[104]=Oop [200]=Oop off=10033}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@4 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {runtime_call}
  0x00007fab74113211: jmpq   0x00007fab74112bf7
  0x00007fab74113216: callq  0x00007fab740fc000  ; OopMap{[200]=Oop rax=Oop off=10043}
                                                ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@17 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {runtime_call}
  0x00007fab7411321b: nop
  0x00007fab7411321c: nop
  0x00007fab7411321d: mov    0x2c0(%r15),%rax
  0x00007fab74113224: movabs $0x0,%r10
  0x00007fab7411322e: mov    %r10,0x2c0(%r15)
  0x00007fab74113235: movabs $0x0,%r10
  0x00007fab7411323f: mov    %r10,0x2c8(%r15)
  0x00007fab74113246: add    $0xe0,%rsp
  0x00007fab7411324d: pop    %rbp
  0x00007fab7411324e: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74113253: hlt    
  0x00007fab74113254: hlt    
  0x00007fab74113255: hlt    
  0x00007fab74113256: hlt    
  0x00007fab74113257: hlt    
  0x00007fab74113258: hlt    
  0x00007fab74113259: hlt    
  0x00007fab7411325a: hlt    
  0x00007fab7411325b: hlt    
  0x00007fab7411325c: hlt    
  0x00007fab7411325d: hlt    
  0x00007fab7411325e: hlt    
  0x00007fab7411325f: hlt    
[Stub Code]
  0x00007fab74113260: nop                       ;   {no_reloc}
  0x00007fab74113261: nop
  0x00007fab74113262: nop
  0x00007fab74113263: nop
  0x00007fab74113264: nop
  0x00007fab74113265: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411326f: jmpq   0x00007fab7411326f  ;   {runtime_call}
  0x00007fab74113274: nop
  0x00007fab74113275: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411327f: jmpq   0x00007fab7411327f  ;   {runtime_call}
  0x00007fab74113284: nop
  0x00007fab74113285: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411328f: jmpq   0x00007fab7411328f  ;   {runtime_call}
  0x00007fab74113294: nop
  0x00007fab74113295: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411329f: jmpq   0x00007fab7411329f  ;   {runtime_call}
  0x00007fab741132a4: nop
  0x00007fab741132a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741132af: jmpq   0x00007fab741132af  ;   {runtime_call}
  0x00007fab741132b4: nop
  0x00007fab741132b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741132bf: jmpq   0x00007fab741132bf  ;   {runtime_call}
  0x00007fab741132c4: nop
  0x00007fab741132c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741132cf: jmpq   0x00007fab741132cf  ;   {runtime_call}
  0x00007fab741132d4: nop
  0x00007fab741132d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741132df: jmpq   0x00007fab741132df  ;   {runtime_call}
  0x00007fab741132e4: nop
  0x00007fab741132e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741132ef: jmpq   0x00007fab741132ef  ;   {runtime_call}
  0x00007fab741132f4: nop
  0x00007fab741132f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741132ff: jmpq   0x00007fab741132ff  ;   {runtime_call}
  0x00007fab74113304: nop
  0x00007fab74113305: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411330f: jmpq   0x00007fab7411330f  ;   {runtime_call}
  0x00007fab74113314: nop
  0x00007fab74113315: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411331f: jmpq   0x00007fab7411331f  ;   {runtime_call}
  0x00007fab74113324: nop
  0x00007fab74113325: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411332f: jmpq   0x00007fab7411332f  ;   {runtime_call}
  0x00007fab74113334: nop
  0x00007fab74113335: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411333f: jmpq   0x00007fab7411333f  ;   {runtime_call}
  0x00007fab74113344: nop
  0x00007fab74113345: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411334f: jmpq   0x00007fab7411334f  ;   {runtime_call}
  0x00007fab74113354: nop
  0x00007fab74113355: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411335f: jmpq   0x00007fab7411335f  ;   {runtime_call}
  0x00007fab74113364: nop
  0x00007fab74113365: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411336f: jmpq   0x00007fab7411336f  ;   {runtime_call}
  0x00007fab74113374: nop
  0x00007fab74113375: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411337f: jmpq   0x00007fab7411337f  ;   {runtime_call}
  0x00007fab74113384: nop
  0x00007fab74113385: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411338f: jmpq   0x00007fab7411338f  ;   {runtime_call}
  0x00007fab74113394: nop
  0x00007fab74113395: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411339f: jmpq   0x00007fab7411339f  ;   {runtime_call}
  0x00007fab741133a4: nop
  0x00007fab741133a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741133af: jmpq   0x00007fab741133af  ;   {runtime_call}
  0x00007fab741133b4: nop
  0x00007fab741133b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741133bf: jmpq   0x00007fab741133bf  ;   {runtime_call}
  0x00007fab741133c4: nop
  0x00007fab741133c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741133cf: jmpq   0x00007fab741133cf  ;   {runtime_call}
[Exception Handler]
  0x00007fab741133d4: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab741133d9: mov    %rsp,-0x28(%rsp)
  0x00007fab741133de: sub    $0x80,%rsp
  0x00007fab741133e5: mov    %rax,0x78(%rsp)
  0x00007fab741133ea: mov    %rcx,0x70(%rsp)
  0x00007fab741133ef: mov    %rdx,0x68(%rsp)
  0x00007fab741133f4: mov    %rbx,0x60(%rsp)
  0x00007fab741133f9: mov    %rbp,0x50(%rsp)
  0x00007fab741133fe: mov    %rsi,0x48(%rsp)
  0x00007fab74113403: mov    %rdi,0x40(%rsp)
  0x00007fab74113408: mov    %r8,0x38(%rsp)
  0x00007fab7411340d: mov    %r9,0x30(%rsp)
  0x00007fab74113412: mov    %r10,0x28(%rsp)
  0x00007fab74113417: mov    %r11,0x20(%rsp)
  0x00007fab7411341c: mov    %r12,0x18(%rsp)
  0x00007fab74113421: mov    %r13,0x10(%rsp)
  0x00007fab74113426: mov    %r14,0x8(%rsp)
  0x00007fab7411342b: mov    %r15,(%rsp)
  0x00007fab7411342f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74113439: movabs $0x7fab741133d9,%rsi  ;   {internal_word}
  0x00007fab74113443: mov    %rsp,%rdx
  0x00007fab74113446: and    $0xfffffffffffffff0,%rsp
  0x00007fab7411344a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7411344f: hlt    
[Deopt Handler Code]
  0x00007fab74113450: movabs $0x7fab74113450,%r10  ;   {section_word}
  0x00007fab7411345a: push   %r10
  0x00007fab7411345c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74113461: hlt    
  0x00007fab74113462: hlt    
  0x00007fab74113463: hlt    
  0x00007fab74113464: hlt    
  0x00007fab74113465: hlt    
  0x00007fab74113466: hlt    
  0x00007fab74113467: hlt    
<nmethod compile_id='14' compiler='C1' level='3' entry='0x00007fab74110ae0' size='14264' address='0x00007fab74110790' relocation_offset='312' insts_offset='848' stub_offset='10960' scopes_data_offset='11520' scopes_pcs_offset='12592' dependencies_offset='14224' nul_chk_table_offset='14232' oops_offset='11480' metadata_offset='11488' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='276' count='627' backedge_count='20064' iicount='627' stamp='0.076'/>
<writer thread='140374823413504'/>
<task_queued compile_id='19' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='2560' iicount='2560' level='1' stamp='0.076' comment='tiered' hot_count='2560'/>
<writer thread='140373948942080'/>
[Loaded sun.nio.fs.UnixFileSystemProvider from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.fs.LinuxFileSystemProvider from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140374823413504'/>
<task_queued compile_id='20' method='java/lang/String length ()I' bytes='6' count='1410' iicount='1410' level='1' stamp='0.076' comment='tiered' hot_count='1410'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/Object.&lt;init&gt;  [0x00007fab74114100, 0x00007fab74114210]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab74114100: mov    0x8(%rsi),%r10d
  0x00007fab74114104: shl    $0x3,%r10
  0x00007fab74114108: cmp    %rax,%r10
  0x00007fab7411410b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74114111: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7411411c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74114120: mov    %eax,-0x14000(%rsp)
  0x00007fab74114127: push   %rbp
  0x00007fab74114128: sub    $0x30,%rsp
  0x00007fab7411412c: mov    %rsi,%rdi          ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x00007fab7411412f: mov    %rsi,0x20(%rsp)
  0x00007fab74114134: callq  0x00007fab740fc220  ; OopMap{[32]=Oop off=57}
                                                ;*return {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x00007fab74114139: add    $0x30,%rsp
  0x00007fab7411413d: pop    %rbp
  0x00007fab7411413e: test   %eax,0x1b6cdfbc(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74114144: retq   
  0x00007fab74114145: nop
  0x00007fab74114146: nop
  0x00007fab74114147: mov    0x2c0(%r15),%rax
  0x00007fab7411414e: movabs $0x0,%r10
  0x00007fab74114158: mov    %r10,0x2c0(%r15)
  0x00007fab7411415f: movabs $0x0,%r10
  0x00007fab74114169: mov    %r10,0x2c8(%r15)
  0x00007fab74114170: add    $0x30,%rsp
  0x00007fab74114174: pop    %rbp
  0x00007fab74114175: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7411417a: hlt    
  0x00007fab7411417b: hlt    
  0x00007fab7411417c: hlt    
  0x00007fab7411417d: hlt    
  0x00007fab7411417e: hlt    
  0x00007fab7411417f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74114180: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74114185: mov    %rsp,-0x28(%rsp)
  0x00007fab7411418a: sub    $0x80,%rsp
  0x00007fab74114191: mov    %rax,0x78(%rsp)
  0x00007fab74114196: mov    %rcx,0x70(%rsp)
  0x00007fab7411419b: mov    %rdx,0x68(%rsp)
  0x00007fab741141a0: mov    %rbx,0x60(%rsp)
  0x00007fab741141a5: mov    %rbp,0x50(%rsp)
  0x00007fab741141aa: mov    %rsi,0x48(%rsp)
  0x00007fab741141af: mov    %rdi,0x40(%rsp)
  0x00007fab741141b4: mov    %r8,0x38(%rsp)
  0x00007fab741141b9: 
<writer thread='140373948942080'/>
[Loaded java.nio.file.FileSystem from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
mov    %r9,0x30(%rsp)
  0x00007fab741141be: mov    %r10,0x28(%rsp)
  0x00007fab741141c3: mov    %r11,0x20(%rsp)
  0x00007fab741141c8: mov    %r12,0x18(%rsp)
  0x00007fab741141cd: mov    %r13,0x10(%rsp)
  0x00007fab741141d2: mov    %r14,0x8(%rsp)
  0x00007fab741141d7: mov    %r15,(%rsp)
  0x00007fab741141db: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741141e5: movabs $0x7fab74114185,%rsi  ;   {internal_word}
  0x00007fab741141ef: mov    %rsp,%rdx
  0x00007fab741141f2: and    $0xfffffffffffffff0,%rsp
  0x00007fab741141f6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741141fb: hlt    
[Deopt Handler Code]
  0x00007fab741141fc: movabs $0x7fab741141fc,%r10  ;   {section_word}
  0x00007fab74114206: push   %r10
  0x00007fab74114208: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7411420d: hlt    
  0x00007fab7411420e: hlt    
  0x00007fab7411420f: hlt    
<nmethod compile_id='19' compiler='C1' level='1' entry='0x00007fab74114100' size='744' address='0x00007fab74113f90' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='672' dependencies_offset='736' metadata_offset='640' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='2816' iicount='2816' stamp='0.077'/>
<make_not_entrant thread='140373945784064' compile_id='4' compiler='C1' level='3' stamp='0.077'/>
<writer thread='140374823413504'/>
<task_queued compile_id='21' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='276' count='878' backedge_count='29318' iicount='878' level='4' stamp='0.077' comment='tiered' hot_count='878'/>
<writer thread='140373948942080'/>
[Loaded sun.nio.fs.UnixFileSystem from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.fs.LinuxFileSystem from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/String.length  [0x00007fab74114400, 0x00007fab74114510]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61895538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab74114400: mov    0x8(%rsi),%r10d
  0x00007fab74114404: shl    $0x3,%r10
  0x00007fab74114408: cmp    %rax,%r10
  0x00007fab7411440b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74114411: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7411441c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74114420: mov    %eax,-0x14000(%rsp)
  0x00007fab74114427: push   %rbp
  0x00007fab74114428: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@0 (line 623)

  0x00007fab7411442c: mov    0xc(%rsi),%eax
  0x00007fab7411442f: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 623)

  0x00007fab74114433: mov    0xc(%rax),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x00007fab74114442
  0x00007fab74114436: add    $0x30,%rsp
  0x00007fab7411443a: pop    %rbp
  0x00007fab7411443b: test   %eax,0x1b6cdcbf(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74114441: retq   
  0x00007fab74114442: callq  0x00007fab740fc000  ; OopMap{off=71}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x00007fab74114447: nop
  0x00007fab74114448: nop
  0x00007fab74114449: mov    0x2c0(%r15),%rax
  0x00007fab74114450: movabs $0x0,%r10
  0x00007fab7411445a: mov    %r10,0x2c0(%r15)
  0x00007fab74114461: movabs $0x0,%r10
  0x00007fab7411446b: mov    %r10,0x2c8(%r15)
  0x00007fab74114472: add    $0x30,%rsp
  0x00007fab74114476: pop    %rbp
  0x00007fab74114477: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7411447c: hlt    
  0x00007fab7411447d: hlt    
  0x00007fab7411447e: hlt    
  0x00007fab7411447f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74114480: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74114485: mov    %rsp,-0x28(%rsp)
  0x00007fab7411448a: sub    $0x80,%rsp
  0x00007fab74114491: mov    %rax,0x78(%rsp)
  0x00007fab74114496: mov    %rcx,0x70(%rsp)
<writer thread='140373948942080'/>
[Loaded sun.nio.fs.AbstractPath from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
  0x00007fab7411449b: mov    %rdx,0x68(%rsp)
  0x00007fab741144a0: mov    %rbx,0x60(%rsp)
  0x00007fab741144a5: mov    %rbp,0x50(%rsp)
  0x00007fab741144aa: mov    %rsi,0x48(%rsp)
  0x00007fab741144af: mov    %rdi,0x40(%rsp)
  0x00007fab741144b4: mov    %r8,0x38(%rsp)
  0x00007fab741144b9: mov    %r9,0x30(%rsp)
  0x00007fab741144be: mov    %r10,0x28(%rsp)
  0x00007fab741144c3: mov    %r11,0x20(%rsp)
  0x00007fab741144c8: mov    %r12,0x18(%rsp)
  0x00007fab741144cd: mov    %r13,0x10(%rsp)
  0x00007fab741144d2: mov    %r14,0x8(%rsp)
  0x00007fab741144d7: mov    %r15,(%rsp)
  0x00007fab741144db: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741144e5: movabs $0x7fab74114485,%rsi  ;   {internal_word}
  0x00007fab741144ef: mov    %rsp,%rdx
  0x00007fab741144f2: and    $0xfffffffffffffff0,%rsp
  0x00007fab741144f6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741144fb: hlt    
[Deopt Handler Code]
  0x00007fab741144fc: movabs $0x7fab741144fc,%r10  ;   {section_word}
  0x00007fab74114506: push   %r10
  0x00007fab74114508: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7411450d: hlt    
  0x00007fab7411450e: hlt    
  0x00007fab7411450f: hlt    
<nmethod compile_id='20' compiler='C1' level='1' entry='0x00007fab74114400' size='800' address='0x00007fab74114290' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='680' dependencies_offset='776' nul_chk_table_offset='784' metadata_offset='640' method='java/lang/String length ()I' bytes='6' count='2368' iicount='2368' stamp='0.077'/>
<make_not_entrant thread='140373945784064' compile_id='2' compiler='C1' level='3' stamp='0.077'/>
<writer thread='140373948942080'/>
[Loaded sun.nio.fs.UnixPath from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
com/github/marschall/charsequences/ParseUuidCompilation.parse  [0x00007fab74114740, 0x00007fab741148c8]  392 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61c91428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab74114740: mov    0x8(%rsi),%r10d
  0x00007fab74114744: shl    $0x3,%r10
  0x00007fab74114748: cmp    %rax,%r10
  0x00007fab7411474b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74114751: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7411475c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
<writer thread='140373948942080'/>
[Loaded sun.nio.fs.Util from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
  0x00007fab74114760: mov    %eax,-0x14000(%rsp)
  0x00007fab74114767: push   %rbp
  0x00007fab74114768: sub    $0x30,%rsp
  0x00007fab7411476c: movabs $0x7fab61c94c80,%rdi  ;   {metadata(method data for {method} {0x00007fab61c91428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74114776: mov    0xfc(%rdi),%ebx
  0x00007fab7411477c: add    $0x8,%ebx
  0x00007fab7411477f: mov    %ebx,0xfc(%rdi)
  0x00007fab74114785: movabs $0x7fab61c91428,%rdi  ;   {metadata({method} {0x00007fab61c91428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab7411478f: and    $0x1ff8,%ebx
  0x00007fab74114795: cmp    $0x0,%ebx
  0x00007fab74114798: je     0x00007fab741147d0  ;*ldc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@0 (line 21)

  0x00007fab7411479e: movabs $0x7fab61c94c80,%rsi  ;   {metadata(method data for {method} {0x00007fab61c91428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab741147a8: addq   $0x1,0x130(%rsi)
  0x00007fab741147b0: movabs $0x670be2918,%rsi  ;*invokestatic uuidFromCharSequence {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {oop(&quot;ba226cf7-d156-4b18-a78a-094736208cc9&quot;)}
  0x00007fab741147ba: nop
  0x00007fab741147bb: nop
  0x00007fab741147bc: nop
  0x00007fab741147bd: nop
  0x00007fab741147be: nop
  0x00007fab741147bf: callq  0x00007fab74048160  ; OopMap{off=132}
                                                ;*invokestatic uuidFromCharSequence {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {static_call}
  0x00007fab741147c4: add    $0x30,%rsp
  0x00007fab741147c8: pop    %rbp
  0x00007fab741147c9: test   %eax,0x1b6cd931(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741147cf: retq   
  0x00007fab741147d0: mov    %rdi,0x8(%rsp)
  0x00007fab741147d5: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741147dd: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=162}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@-1 (line 21)
                                                ;   {runtime_call}
  0x00007fab741147e2: jmp    0x00007fab7411479e
  0x00007fab741147e4: nop
  0x00007fab741147e5: nop
  0x00007fab741147e6: mov    0x2c0(%r15),%rax
  0x00007fab741147ed: movabs $0x0,%r10
  0x00007fab741147f7: mov    %r10,0x2c0(%r15)
  0x00007fab741147fe: movabs $0x0,%r10
  0x00007fab74114808: mov    %r10,0x2c8(%r15)
  0x00007fab7411480f: add    $0x30,%rsp
  0x00007fab74114813: pop    %rbp
  0x00007fab74114814: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74114819: hlt    
  0x00007fab7411481a: hlt    
  0x00007fab7411481b: hlt    
  0x00007fab7411481c: hlt    
  0x00007fab7411481d: hlt    
  0x00007fab7411481e: hlt    
  0x00007fab7411481f: hlt    
[Stub Code]
  0x00007fab74114820: nop                       ;   {no_reloc}
  0x00007fab74114821: nop
  0x00007fab74114822: nop
  0x00007fab74114823: nop
  0x00007fab74114824: nop
  0x00007fab74114825: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411482f: jmpq   0x00007fab7411482f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74114834: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74114839: mov    %rsp,-0x28(%rsp)
  0x00007fab7411483e: sub    $0x80,%rsp
  0x00007fab74114845: mov    %rax,0x78(%rsp)
  0x00007fab7411484a: mov    %rcx,0x70(%rsp)
  0x00007fab7411484f: mov    %rdx,0x68(%rsp)
  0x00007fab74114854: mov    %rbx,0x60(%rsp)
  0x00007fab74114859: mov    %rbp,0x50(%rsp)
  0x00007fab7411485e: mov    %rsi,0x48(%rsp)
  0x00007fab74114863: mov    %rdi,0x40(%rsp)
  0x00007fab74114868: mov    %r8,0x38(%rsp)
  0x00007fab7411486d: mov    %r9,0x30(%rsp)
  0x00007fab74114872: mov    %r10,0x28(%rsp)
  0x00007fab74114877: mov    %r11,0x20(%rsp)
  0x00007fab7411487c: mov    %r12,0x18(%rsp)
  0x00007fab74114881: mov    %r13,0x10(%rsp)
  0x00007fab74114886: mov    %r14,0x8(%rsp)
  0x00007fab7411488b: mov    %r15,(%rsp)
  0x00007fab7411488f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74114899: movabs $0x7fab74114839,%rsi  ;   {internal_word}
  0x00007fab741148a3: mov    %rsp,%rdx
  0x00007fab741148a6: and    $0xfffffffffffffff0,%rsp
  0x00007fab741148aa: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741148af: hlt    
[Deopt Handler Code]
  0x00007fab741148b0: movabs $0x7fab741148b0,%r10  ;   {section_word}
  0x00007fab741148ba: push   %r10
  0x00007fab741148bc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab741148c1: hlt    
  0x00007fab741148c2: hlt    
  0x00007fab741148c3: hlt    
  0x00007fab741148c4: hlt    
  0x00007fab741148c5: hlt    
  0x00007fab741148c6: hlt    
  0x00007fab741148c7: hlt    
<nmethod compile_id='16' compiler='C1' level='3' entry='0x00007fab74114740' size='912' address='0x00007fab741145d0' relocation_offset='312' insts_offset='368' stub_offset='592' scopes_data_offset='776' scopes_pcs_offset='808' dependencies_offset='904' oops_offset='760' metadata_offset='768' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='2721' iicount='2721' stamp='0.078'/>
----------------------------------------------------------------------
java/util/UUID.&lt;init&gt;  [0x00007fab74114b00, 0x00007fab74114cb0]  432 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61af9900} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;
  # this:     rsi:rsi   = &apos;java/util/UUID&apos;
  # parm0:    rdx:rdx   = long
  # parm1:    rcx:rcx   = long
  #           [sp+0x40]  (sp of caller)
  0x00007fab74114b00: mov    0x8(%rsi),%r10d
  0x00007fab74114b04: shl    $0x3,%r10
  0x00007fab74114b08: cmp    %rax,%r10
  0x00007fab74114b0b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74114b11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74114b1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74114b20: mov    %eax,-0x14000(%rsp)
  0x00007fab74114b27: push   %rbp
  0x00007fab74114b28: sub    $0x30,%rsp
  0x00007fab74114b2c: movabs $0x7fab61aff8a8,%rdi
<writer thread='140373948942080'/>
[Loaded sun.nio.fs.UnixNativeDispatcher from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
  ;   {metadata(method data for {method} {0x00007fab61af9900} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007fab74114b36: mov    0xfc(%rdi),%ebx
  0x00007fab74114b3c: add    $0x8,%ebx
  0x00007fab74114b3f: mov    %ebx,0xfc(%rdi)
  0x00007fab74114b45: movabs $0x7fab61af9900,%rdi  ;   {metadata({method} {0x00007fab61af9900} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007fab74114b4f: and    $0x1ff8,%ebx
  0x00007fab74114b55: cmp    $0x0,%ebx
  0x00007fab74114b58: je     0x00007fab74114bb9  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.UUID::&lt;init&gt;@0 (line 128)

  0x00007fab74114b5e: mov    %rsi,%rdi
  0x00007fab74114b61: movabs $0x7fab61aff8a8,%rbx  ;   {metadata(method data for {method} {0x00007fab61af9900} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007fab74114b6b: addq   $0x1,0x130(%rbx)
  0x00007fab74114b73: movabs $0x7fab61a342a0,%rdi  ;   {metadata(method data for {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab74114b7d: mov    0xfc(%rdi),%ebx
  0x00007fab74114b83: add    $0x8,%ebx
  0x00007fab74114b86: mov    %ebx,0xfc(%rdi)
  0x00007fab74114b8c: movabs $0x7fab618914d8,%rdi  ;   {metadata({method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab74114b96: and    $0x7ffff8,%ebx
  0x00007fab74114b9c: cmp    $0x0,%ebx
  0x00007fab74114b9f: je     0x00007fab74114bcd
  0x00007fab74114ba5: mov    %rdx,0x10(%rsi)    ;*putfield mostSigBits {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.UUID::&lt;init&gt;@6 (line 129)

  0x00007fab74114ba9: mov    %rcx,0x18(%rsi)    ;*putfield leastSigBits {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.UUID::&lt;init&gt;@11 (line 130)

  0x00007fab74114bad: add    $0x30,%rsp
  0x00007fab74114bb1: pop    %rbp
  0x00007fab74114bb2: test   %eax,0x1b6cd548(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74114bb8: retq   
  0x00007fab74114bb9: mov    %rdi,0x8(%rsp)
  0x00007fab74114bbe: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74114bc6: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=203}
                                                ;*synchronization entry
                                                ; - java.util.UUID::&lt;init&gt;@-1 (line 128)
                                                ;   {runtime_call}
  0x00007fab74114bcb: jmp    0x00007fab74114b5e
  0x00007fab74114bcd: mov    %rdi,0x8(%rsp)
  0x00007fab74114bd2: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74114bda: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=223}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.UUID::&lt;init&gt;@1 (line 128)
                                                ;   {runtime_call}
  0x00007fab74114bdf: jmp    0x00007fab74114ba5
  0x00007fab74114be1: nop
  0x00007fab74114be2: nop
  0x00007fab74114be3: mov    0x2c0(%r15),%rax
  0x00007fab74114bea: movabs $0x0,%r10
  0x00007fab74114bf4: mov    %r10,0x2c0(%r15)
  0x00007fab74114bfb: movabs $0x0,%r10
  0x00007fab74114c05: mov    %r10,0x2c8(%r15)
  0x00007fab74114c0c: add    $0x30,%rsp
  0x00007fab74114c10: pop    %rbp
  0x00007fab74114c11: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74114c16: hlt    
  0x00007fab74114c17: hlt    
  0x00007fab74114c18: hlt    
  0x00007fab74114c19: hlt    
  0x00007fab74114c1a: hlt    
  0x00007fab74114c1b: hlt    
  0x00007fab74114c1c: hlt    
  0x00007fab74114c1d: hlt    
  0x00007fab74114c1e: hlt    
  0x00007fab74114c1f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74114c20: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74114c25: mov    %rsp,-0x28(%rsp)
  0x00007fab74114c2a: sub    $0x80,%rsp
  0x00007fab74114c31: mov    %rax,0x78(%rsp)
  0x00007fab74114c36: mov    %rcx,0x70(%rsp)
  0x00007fab74114c3b: mov    %rdx,0x68(%rsp)
  0x00007fab74114c40: mov    %rbx,0x60(%rsp)
  0x00007fab74114c45: mov    %rbp,0x50(%rsp)
  0x00007fab74114c4a: mov    %rsi,0x48(%rsp)
  0x00007fab74114c4f: mov    %rdi,0x40(%rsp)
  0x00007fab74114c54: mov    %r8,0x38(%rsp)
  0x00007fab74114c59: mov    %r9,0x30(%rsp)
  0x00007fab74114c5e: mov    %r10,0x28(%rsp)
  0x00007fab74114c63: mov    %r11,0x20(%rsp)
  0x00007fab74114c68: mov    %r12,0x18(%rsp)
  0x00007fab74114c6d: mov    %r13,0x10(%rsp)
  0x00007fab74114c72: mov    %r14,0x8(%rsp)
  0x00007fab74114c77: mov    %r15,(%rsp)
  0x00007fab74114c7b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74114c85: movabs $0x7fab74114c25,%rsi  ;   {internal_word}
  0x00007fab74114c8f: mov    %rsp,%rdx
  0x00007fab74114c92: and    $0xfffffffffffffff0,%rsp
  0x00007fab74114c96: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74114c9b: hlt    
[Deopt Handler Code]
  0x00007fab74114c9c: movabs $0x7fab74114c9c,%r10  ;   {section_word}
  0x00007fab74114ca6: push   %r10
  0x00007fab74114ca8: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74114cad: hlt    
  0x00007fab74114cae: hlt    
  0x00007fab74114caf: hlt    
<nmethod compile_id='17' compiler='C1' level='3' entry='0x00007fab74114b00' size='992' address='0x00007fab74114990' relocation_offset='312' insts_offset='368' stub_offset='656' scopes_data_offset='816' scopes_pcs_offset='872' dependencies_offset='984' metadata_offset='800' method='java/util/UUID &lt;init&gt; (JJ)V' bytes='15' count='3888' iicount='3888' stamp='0.078'/>
<writer thread='140373948942080'/>
[Loaded sun.nio.fs.UnixNativeDispatcher$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.file.attribute.BasicFileAttributes from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.file.attribute.PosixFileAttributes from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.fs.UnixFileAttributes from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.fs.UnixFileStoreAttributes from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.fs.UnixMountEntry from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140374823413504'/>
<task_queued compile_id='22' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='5632' iicount='5632' level='4' stamp='0.079' comment='tiered' hot_count='5632'/>
<writer thread='140373948942080'/>
[Loaded java.net.URI from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.net.URI$Parser from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<task_queued compile_id='23' method='java/lang/String indexOf (I)I' bytes='7' count='256' iicount='256' level='3' stamp='0.079' comment='tiered' hot_count='256'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
<writer thread='140373948942080'/>
[Loaded java.nio.file.OpenOption from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
java/lang/String.indexOf  [0x00007fab74116e80, 0x00007fab74117008]  392 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61896ee8} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fab74116e80: mov    0x8(%rsi),%r10d
  0x00007fab74116e84: shl    $0x3,%r10
  0x00007fab74116e88: cmp    %rax,%r10
  0x00007fab74116e8b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74116e91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74116e9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74116ea0: mov    %eax,-0x14000(%rsp)
  0x00007fab74116ea7: push   %rbp
  0x00007fab74116ea8: sub    $0x30,%rsp
  0x00007fab74116eac: movabs $0x7fab61b2c4f0,%rcx  ;   {metadata(method data for {method} {0x00007fab61896ee8} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74116eb6: mov    0xfc(%rcx),%edi
  0x00007fab74116ebc: add    $0x8,%edi
  0x00007fab74116ebf: mov    %edi,0xfc(%rcx)
  0x00007fab74116ec5: movabs $0x7fab61896ee8,%rcx  ;   {metadata({method} {0x00007fab61896ee8} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74116ecf: and    $0x1ff8,%edi
  0x00007fab74116ed5: cmp    $0x0,%edi
  0x00007fab74116ed8: je     0x00007fab74116f10  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x00007fab74116ede: mov    %rsi,%rcx
  0x00007fab74116ee1: movabs $0x7fab61b2c4f0,%rdi  ;   {metadata(method data for {method} {0x00007fab61896ee8} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74116eeb: addq   $0x1,0x130(%rdi)
  0x00007fab74116ef3: mov    $0x0,%ecx          ;*invokevirtual indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x00007fab74116ef8: nop
  0x00007fab74116ef9: nop
  0x00007fab74116efa: nop
  0x00007fab74116efb: nop
  0x00007fab74116efc: nop
  0x00007fab74116efd: nop
  0x00007fab74116efe: nop
  0x00007fab74116eff: callq  0x00007fab74047d60  ; OopMap{off=132}
                                                ;*invokevirtual indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x00007fab74116f04: add    $0x30,%rsp
  0x00007fab74116f08: pop    %rbp
  0x00007fab74116f09: test   %eax,0x1b6cb1f1(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74116f0f: retq   
  0x00007fab74116f10: mov    %rcx,0x8(%rsp)
  0x00007fab74116f15: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74116f1d: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=162}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x00007fab74116f22: jmp    0x00007fab74116ede
  0x00007fab74116f24: nop
  0x00007fab74116f25: nop
  0x00007fab74116f26: mov    0x2c0(%r15),%rax
  0x00007fab74116f2d: movabs $0x0,%r10
  0x00007fab74116f37: mov    %r10,0x2c0(%r15)
  0x00007fab74116f3e: movabs $0x0,%r10
  0x00007fab74116f48: mov    %r10,0x2c8(%r15)
  0x00007fab74116f4f: add    $0x30,%rsp
  0x00007fab74116f53: pop    %rbp
  0x00007fab74116f54: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74116f59: hlt    
  0x00007fab74116f5a: hlt    
  0x00007fab74116f5b: hlt    
  0x00007fab74116f5c: hlt    
  0x00007fab74116f5d: hlt    
  0x00007fab74116f5e: hlt    
  0x00007fab74116f5f: hlt    
[Stub Code]
  0x00007fab74116f60: nop                       ;   {no_reloc}
  0x00007fab74116f61: nop
  0x00007fab74116f62: nop
  0x00007fab74116f63: nop
  0x00007fab74116f64: nop
  0x00007fab74116f65: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74116f6f: jmpq   0x00007fab74116f6f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74116f74: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74116f79: mov    %rsp,-0x28(%rsp)
  0x00007fab74116f7e: sub    $0x80,%rsp
  0x00007fab74116f85: mov    %rax,0x78(%rsp)
  0x00007fab74116f8a: mov    %rcx,0x70(%rsp)
  0x00007fab74116f8f: mov    %rdx,0x68(%rsp)
  0x00007fab74116f94: mov    %rbx,0x60(%rsp)
  0x00007fab74116f99: mov    %rbp,0x50(%rsp)
  0x00007fab74116f9e: mov    %rsi,0x48(%rsp)
  0x00007fab74116fa3: mov    %rdi,0x40(%rsp)
  0x00007fab74116fa8: mov    %r8,0x38(%rsp)
  0x00007fab74116fad: mov    %r9,0x30(%rsp)
  0x00007fab74116fb2: mov    %r10,0x28(%rsp)
  0x00007fab74116fb7: mov    %r11,0x20(%rsp)
  0x00007fab74116fbc: mov    %r12,0x18(%rsp)
  0x00007fab74116fc1: mov    %r13,0x10(%rsp)
  0x00007fab74116fc6: mov    %r14,0x8(%rsp)
  0x00007fab74116fcb: mov    %r15,(%rsp)
  0x00007fab74116fcf: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74116fd9: movabs $0x7fab74116f79,%rsi  ;   {internal_word}
  0x00007fab74116fe3: mov    %rsp,%rdx
  0x00007fab74116fe6: and    $0xfffffffffffffff0,%rsp
  0x00007fab74116fea: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74116fef: hlt    
[Deopt Handler Code]
  0x00007fab74116ff0: movabs $0x7fab74116ff0,%r10  ;   {section_word}
  0x00007fab74116ffa: push   %r10
  0x00007fab74116ffc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74117001: hlt    
  0x00007fab74117002: hlt    
  0x00007fab74117003: hlt    
  0x00007fab74117004: hlt    
  0x00007fab74117005: hlt    
  0x00007fab74117006: hlt    
  0x00007fab74117007: hlt    
<nmethod compile_id='23' compiler='C1' level='3' entry='0x00007fab74116e80' size='912' address='0x00007fab74116d10' relocation_offset='312' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='808' dependencies_offset='904' metadata_offset='760' method='java/lang/String indexOf (I)I' bytes='7' count='268' iicount='268' stamp='0.080'/>
<writer thread='140373948942080'/>
[Loaded java.nio.file.CopyOption from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.file.LinkOption from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.file.Files from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.file.attribute.DosFileAttributes from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.file.attribute.AttributeView from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.file.attribute.FileAttributeView from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.file.attribute.BasicFileAttributeView from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.file.attribute.DosFileAttributeView from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.file.attribute.UserDefinedFileAttributeView from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.fs.UnixFileAttributeViews from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.fs.DynamicFileAttributeView from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.fs.AbstractBasicFileAttributeView from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.fs.UnixFileAttributeViews$Basic from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.fs.NativeBuffers from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.fs.NativeBuffer from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.fs.NativeBuffer$Deallocator from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.fs.UnixFileAttributes$UnixAsBasicFileAttributes from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.file.AccessMode from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.fs.UnixUriUtils from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<task_queued compile_id='24' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='477' iicount='477' level='3' stamp='0.081' comment='tiered' hot_count='477'/>
<task_queued compile_id='25' method='java/net/URI$Parser charAt (I)C' bytes='9' count='256' iicount='256' level='3' stamp='0.081' comment='tiered' hot_count='256'/>
<task_queued compile_id='26' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='256' iicount='256' level='3' stamp='0.081' comment='tiered' hot_count='256'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.ensureCapacityInternal  [0x00007fab74117280, 0x00007fab741176f8]  1144 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61915be0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = int
  #           [sp+0xb0]
<writer thread='140373948942080'/>
[Loaded java.nio.file.attribute.FileAttribute from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
  (sp of caller)
  0x00007fab74117280: mov    0x8(%rsi),%r10d
  0x00007fab74117284: shl    $0x3,%r10
  0x00007fab74117288: cmp    %rax,%r10
  0x00007fab7411728b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74117291: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7411729c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab741172a0: mov    %eax,-0x14000(%rsp)
  0x00007fab741172a7: push   %rbp
  0x00007fab741172a8: sub    $0xa0,%rsp
  0x00007fab741172af: movabs $0x7fab61af6de0,%rdi  ;   {metadata(method data for {method} {0x00007fab61915be0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab741172b9: mov    0xfc(%rdi),%ebx
  0x00007fab741172bf: add    $0x8,%ebx
  0x00007fab741172c2: mov    %ebx,0xfc(%rdi)
  0x00007fab741172c8: movabs $0x7fab61915be0,%rdi  ;   {metadata({method} {0x00007fab61915be0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab741172d2: and    $0x1ff8,%ebx
  0x00007fab741172d8: cmp    $0x0,%ebx
  0x00007fab741172db: je     0x00007fab7411758f  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 123)

  0x00007fab741172e1: mov    0x10(%rsi),%edi
  0x00007fab741172e4: shl    $0x3,%rdi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x00007fab741172e8: mov    0xc(%rdi),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x00007fab741175a6
  0x00007fab741172eb: mov    %rdx,%rax
  0x00007fab741172ee: sub    %ebx,%eax
  0x00007fab741172f0: cmp    $0x0,%eax
  0x00007fab741172f3: movabs $0x7fab61af6de0,%rax  ;   {metadata(method data for {method} {0x00007fab61915be0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab741172fd: movabs $0x130,%rcx
  0x00007fab74117307: jle    0x00007fab74117317
  0x00007fab7411730d: movabs $0x140,%rcx
  0x00007fab74117317: mov    (%rax,%rcx,1),%r8
  0x00007fab7411731b: lea    0x1(%r8),%r8
  0x00007fab7411731f: mov    %r8,(%rax,%rcx,1)
  0x00007fab74117323: jle    0x00007fab74117580  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)

  0x00007fab74117329: mov    %ebx,0x78(%rsp)
  0x00007fab7411732d: mov    %rdi,0x80(%rsp)
  0x00007fab74117335: mov    %rsi,%rax
  0x00007fab74117338: movabs $0x7fab61af6de0,%rcx  ;   {metadata(method data for {method} {0x00007fab61915be0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab74117342: addq   $0x1,0x150(%rcx)
  0x00007fab7411734a: mov    %rsi,%rax
  0x00007fab7411734d: mov    %rax,%rsi          ;*invokespecial newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00007fab74117350: mov    %rax,0x88(%rsp)
  0x00007fab74117358: nop
  0x00007fab74117359: nop
  0x00007fab7411735a: nop
  0x00007fab7411735b: nop
  0x00007fab7411735c: nop
  0x00007fab7411735d: nop
  0x00007fab7411735e: nop
  0x00007fab7411735f: callq  0x00007fab74047d60  ; OopMap{[136]=Oop [128]=Oop off=228}
                                                ;*invokespecial newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x00007fab74117364: mov    %rax,%r8           ;*invokespecial newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00007fab74117367: movabs $0x7fab61af6de0,%rbx  ;   {metadata(method data for {method} {0x00007fab61915be0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab74117371: addq   $0x1,0x160(%rbx)
  0x00007fab74117379: movabs $0x7fab61af7188,%rbx  ;   {metadata(method data for {method} {0x00007fab619ce750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab74117383: mov    0xfc(%rbx),%edx
  0x00007fab74117389: add    $0x8,%edx
  0x00007fab7411738c: mov    %edx,0xfc(%rbx)
  0x00007fab74117392: movabs $0x7fab619ce750,%rbx  ;   {metadata({method} {0x00007fab619ce750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7411739c: and    $0x7ffff8,%edx
  0x00007fab741173a2: cmp    $0x0,%edx
  0x00007fab741173a5: je     0x00007fab741175ab
  0x00007fab741173ab: mov    %r8,%rbx
  0x00007fab741173ae: movabs $0x7c00001f8,%rdx  ;   {metadata({type array char})}
  0x00007fab741173b8: movslq %ebx,%rbx
  0x00007fab741173bb: mov    %rbx,%rdi
  0x00007fab741173be: cmp    $0xffffff,%rbx
  0x00007fab741173c5: ja     0x00007fab741175c2
  0x00007fab741173cb: movabs $0x17,%rsi
  0x00007fab741173d5: lea    (%rsi,%rbx,2),%rsi
  0x00007fab741173d9: and    $0xfffffffffffffff8,%rsi
  0x00007fab741173dd: mov    0x60(%r15),%rax
  0x00007fab741173e1: lea    (%rax,%rsi,1),%rsi
  0x00007fab741173e5: cmp    0x70(%r15),%rsi
  0x00007fab741173e9: ja     0x00007fab741175c2
  0x00007fab741173ef: mov    %rsi,0x60(%r15)
  0x00007fab741173f3: sub    %rax,%rsi
  0x00007fab741173f6: movq   $0x1,(%rax)
  0x00007fab741173fd: mov    %rdx,%rcx
  0x00007fab74117400: shr    $0x3,%rcx
  0x00007fab74117404: mov    %ecx,0x8(%rax)
  0x00007fab74117407: mov    %ebx,0xc(%rax)
  0x00007fab7411740a: sub    $0x10,%rsi
  0x00007fab7411740e: je     0x00007fab74117425
  0x00007fab74117414: xor    %rbx,%rbx
  0x00007fab74117417: shr    $0x3,%rsi
  0x00007fab7411741b: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fab74117420: dec    %rsi
  0x00007fab74117423: jne    0x00007fab7411741b  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00007fab74117425: movabs $0x7fab61af7188,%rsi  ;   {metadata(method data for {method} {0x00007fab619ce750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7411742f: addq   $0x1,0x130(%rsi)
  0x00007fab74117437: movabs $0x7fab61a9c058,%rsi  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab74117441: mov    0xfc(%rsi),%edx
  0x00007fab74117447: add    $0x8,%edx
  0x00007fab7411744a: mov    %edx,0xfc(%rsi)
  0x00007fab74117450: movabs $0x7fab619a58b8,%rsi  ;   {metadata({method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7411745a: and    $0x7ffff8,%edx
  0x00007fab74117460: cmp    $0x0,%edx
  0x00007fab74117463: je     0x00007fab741175cc
  0x00007fab74117469: mov    0x78(%rsp),%ebx
  0x00007fab7411746d: cmp    %r8d,%ebx
  0x00007fab74117470: movabs $0x7fab61a9c058,%rsi  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7411747a: movabs $0x130,%rdx
  0x00007fab74117484: jg     0x00007fab74117494
  0x00007fab7411748a: movabs $0x140,%rdx
  0x00007fab74117494: mov    (%rsi,%rdx,1),%rcx
  0x00007fab74117498: lea    0x1(%rcx),%rcx
  0x00007fab7411749c: mov    %rcx,(%rsi,%rdx,1)
  0x00007fab741174a0: jg     0x00007fab741174bb  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00007fab741174a6: movabs $0x7fab61a9c058,%rsi  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab741174b0: incl   0x150(%rsi)
  0x00007fab741174b6: jmpq   0x00007fab741174be  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00007fab741174bb: mov    %r8,%rbx           ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00007fab741174be: mov    0x80(%rsp),%rdi
  0x00007fab741174c6: movabs $0x7fab61af7188,%rsi  ;   {metadata(method data for {method} {0x00007fab619ce750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab741174d0: addq   $0x1,0x140(%rsi)
  0x00007fab741174d8: mov    %rdi,%rsi
  0x00007fab741174db: mov    $0x0,%edx
  0x00007fab741174e0: mov    %rax,%rcx
  0x00007fab741174e3: mov    $0x0,%r8d
  0x00007fab741174e9: mov    %rbx,%r9
  0x00007fab741174ec: mov    %rax,0x90(%rsp)
  0x00007fab741174f4: lea    (%rdx,%r9,1),%rdi
  0x00007fab741174f8: cmp    0xc(%rsi),%edi
  0x00007fab741174fb: ja     0x00007fab741175e3
  0x00007fab74117501: lea    (%r8,%r9,1),%rdi
  0x00007fab74117505: cmp    0xc(%rcx),%edi
  0x00007fab74117508: ja     0x00007fab741175e3
  0x00007fab7411750e: test   %r9d,%r9d
  0x00007fab74117511: jl     0x00007fab741175e3
  0x00007fab74117517: je     0x00007fab74117553
  0x00007fab7411751d: movslq %edx,%rdx
  0x00007fab74117520: movslq %r8d,%r8
  0x00007fab74117523: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007fab74117528: lea    0x10(%rcx,%r8,2),%rsi
  0x00007fab7411752d: mov    %r9,%rdx
  0x00007fab74117530: test   $0xf,%esp
  0x00007fab74117536: je     0x00007fab7411754e
  0x00007fab7411753c: sub    $0x8,%rsp
  0x00007fab74117540: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007fab74117545: add    $0x8,%rsp
  0x00007fab74117549: jmpq   0x00007fab74117553
  0x00007fab7411754e: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00007fab74117553: mov    0x90(%rsp),%rax
  0x00007fab7411755b: mov    0x88(%rsp),%rsi
  0x00007fab74117563: mov    %rax,%r10
  0x00007fab74117566: shr    $0x3,%r10
  0x00007fab7411756a: mov    %r10d,0x10(%rsi)
  0x00007fab7411756e: shr    $0x9,%rsi
  0x00007fab74117572: movabs $0x7fab701ff000,%rdi
  0x00007fab7411757c: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x00007fab74117580: add    $0xa0,%rsp
  0x00007fab74117587: pop    %rbp
  0x00007fab74117588: test   %eax,0x1b6cab72(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411758e: retq   
  0x00007fab7411758f: mov    %rdi,0x8(%rsp)
  0x00007fab74117594: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411759c: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=801}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ;   {runtime_call}
  0x00007fab741175a1: jmpq   0x00007fab741172e1
  0x00007fab741175a6: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rdi=Oop off=811}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x00007fab741175ab: mov    %rbx,0x8(%rsp)
  0x00007fab741175b0: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741175b8: callq  0x00007fab741005e0  ; OopMap{[136]=Oop [128]=Oop off=829}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00007fab741175bd: jmpq   0x00007fab741173ab
  0x00007fab741175c2: callq  0x00007fab740fd020  ; OopMap{[136]=Oop [128]=Oop off=839}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00007fab741175c7: jmpq   0x00007fab74117425
  0x00007fab741175cc: mov    %rsi,0x8(%rsp)
  0x00007fab741175d1: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741175d9: callq  0x00007fab741005e0  ; OopMap{[136]=Oop [128]=Oop rax=Oop off=862}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00007fab741175de: jmpq   0x00007fab74117469
  0x00007fab741175e3: nop
  0x00007fab741175e4: nop
  0x00007fab741175e5: nop
  0x00007fab741175e6: nop
  0x00007fab741175e7: callq  0x00007fab74048160  ; OopMap{[136]=Oop [144]=Oop off=876}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {static_call}
  0x00007fab741175ec: jmpq   0x00007fab74117553
  0x00007fab741175f1: nop
  0x00007fab741175f2: nop
  0x00007fab741175f3: mov    0x2c0(%r15),%rax
  0x00007fab741175fa: movabs $0x0,%r10
  0x00007fab74117604: mov    %r10,0x2c0(%r15)
  0x00007fab7411760b: movabs $0x0,%r10
  0x00007fab74117615: mov    %r10,0x2c8(%r15)
  0x00007fab7411761c: add    $0xa0,%rsp
  0x00007fab74117623: pop    %rbp
  0x00007fab74117624: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74117629: hlt    
  0x00007fab7411762a: hlt    
  0x00007fab7411762b: hlt    
  0x00007fab7411762c: hlt    
  0x00007fab7411762d: hlt    
  0x00007fab7411762e: hlt    
  0x00007fab7411762f: hlt    
  0x00007fab74117630: hlt    
  0x00007fab74117631: hlt    
  0x00007fab74117632: hlt    
  0x00007fab74117633: hlt    
  0x00007fab74117634: hlt    
  0x00007fab74117635: hlt    
  0x00007fab74117636: hlt    
  0x00007fab74117637: hlt    
  0x00007fab74117638: hlt    
  0x00007fab74117639: hlt    
  0x00007fab7411763a: hlt    
  0x00007fab7411763b: hlt    
  0x00007fab7411763c: hlt    
  0x00007fab7411763d: hlt    
  0x00007fab7411763e: hlt    
  0x00007fab7411763f: hlt    
[Stub Code]
  0x00007fab74117640: nop                       ;   {no_reloc}
  0x00007fab74117641: nop
  0x00007fab74117642: nop
  0x00007fab74117643: nop
  0x00007fab74117644: nop
  0x00007fab74117645: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411764f: jmpq   0x00007fab7411764f  ;   {runtime_call}
  0x00007fab74117654: nop
  0x00007fab74117655: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411765f: jmpq   0x00007fab7411765f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74117664: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74117669: mov    %rsp,-0x28(%rsp)
  0x00007fab7411766e: sub    $0x80,%rsp
  0x00007fab74117675: mov    %rax,0x78(%rsp)
  0x00007fab7411767a: mov    %rcx,0x70(%rsp)
  0x00007fab7411767f: mov    %rdx,0x68(%rsp)
  0x00007fab74117684: mov    %rbx,0x60(%rsp)
  0x00007fab74117689: mov    %rbp,0x50(%rsp)
  0x00007fab7411768e: mov    %rsi,0x48(%rsp)
  0x00007fab74117693: mov    %rdi,0x40(%rsp)
  0x00007fab74117698: mov    %r8,0x38(%rsp)
  0x00007fab7411769d: mov    %r9,0x30(%rsp)
  0x00007fab741176a2: mov    %r10,0x28(%rsp)
  0x00007fab741176a7: mov    %r11,0x20(%rsp)
  0x00007fab741176ac: mov    %r12,0x18(%rsp)
  0x00007fab741176b1: mov    %r13,0x10(%rsp)
  0x00007fab741176b6: mov    %r14,0x8(%rsp)
  0x00007fab741176bb: mov    %r15,(%rsp)
  0x00007fab741176bf: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741176c9: movabs $0x7fab74117669,%rsi  ;   {internal_word}
  0x00007fab741176d3: mov    %rsp,%rdx
  0x00007fab741176d6: and    $0xfffffffffffffff0,%rsp
  0x00007fab741176da: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741176df: hlt    
[Deopt Handler Code]
  0x00007fab741176e0: movabs $0x7fab741176e0,%r10  ;   {section_word}
  0x00007fab741176ea: push   %r10
  0x00007fab741176ec: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab741176f1: hlt    
  0x00007fab741176f2: hlt    
  0x00007fab741176f3: hlt    
  0x00007fab741176f4: hlt    
  0x00007fab741176f5: hlt    
  0x00007fab741176f6: hlt    
  0x00007fab741176f7: hlt    
<nmethod compile_id='24' compiler='C1' level='3' entry='0x00007fab74117280' size='2160' address='0x00007fab741170d0' relocation_offset='312' insts_offset='432' stub_offset='1392' scopes_data_offset='1600' scopes_pcs_offset='1800' dependencies_offset='2136' nul_chk_table_offset='2144' metadata_offset='1576' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='630' iicount='630' stamp='0.144'/>
<writer thread='140374823413504'/>
<task_queued compile_id='27' compile_kind='osr' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='84992' iicount='1' osr_bci='9' level='3' stamp='0.144' comment='tiered' hot_count='84992'/>
<writer thread='140373948942080'/>
[Loaded sun.nio.fs.UnixFileModeAttribute from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.fs.UnixChannelFactory from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.fs.UnixChannelFactory$Flags from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
com/github/marschall/charsequences/ParseUuidCompilation.&lt;init&gt;  [0x00007fab74117d20, 0x00007fab74118328]  1544 bytes
<writer thread='140373948942080'/>
[Loaded java.util.HashMap$KeySet from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
[Entry Point]
[Constants]
  # {method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;
  0x00007fab74117d20: mov    0x8(%rsi),%r10d
  0x00007fab74117d24: shl    $0x3,%r10
  0x00007fab74117d28: cmp    %rax,%r10
  0x00007fab74117d2b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74117d31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74117d3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74117d40: mov    %eax,-0x14000(%rsp)
  0x00007fab74117d47: push   %rbp
  0x00007fab74117d48: sub    $0x50,%rsp
  0x00007fab74117d4c: movabs $0x7fab61c95028,%rdi  ;   {metadata(method data for {method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74117d56: mov    0xfc(%rdi),%ebx
  0x00007fab74117d5c: add    $0x8,%ebx
  0x00007fab74117d5f: mov    %ebx,0xfc(%rdi)
  0x00007fab74117d65: movabs $0x7fab61c91370,%rdi  ;   {metadata({method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74117d6f: and    $0x1ff8,%ebx
  0x00007fab74117d75: cmp    $0x0,%ebx
  0x00007fab74117d78: je     0x00007fab741181a8  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@0 (line 9)

  0x00007fab74117d7e: mov    %rsi,%rdi
  0x00007fab74117d81: movabs $0x7fab61c95028,%rbx  ;   {metadata(method data for {method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74117d8b: addq   $0x1,0x130(%rbx)
  0x00007fab74117d93: movabs $0x7fab61a342a0,%rdi  ;   {metadata(method data for {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab74117d9d: mov    0xfc(%rdi),%ebx
  0x00007fab74117da3: add    $0x8,%ebx
  0x00007fab74117da6: mov    %ebx,0xfc(%rdi)
  0x00007fab74117dac: movabs $0x7fab618914d8,%rdi  ;   {metadata({method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab74117db6: and    $0x7ffff8,%ebx
  0x00007fab74117dbc: cmp    $0x0,%ebx
  0x00007fab74117dbf: je     0x00007fab741181bf
  0x00007fab74117dc5: movabs $0x7fab61c95028,%rdi  ;   {metadata(method data for {method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74117dcf: incl   0x140(%rdi)
  0x00007fab74117dd5: mov    $0x0,%edi          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@6 (line 11)

  0x00007fab74117dda: nopw   0x0(%rax,%rax,1)
  0x00007fab74117de0: movabs $0x7fab61c95028,%rbx  ;   {metadata(method data for {method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74117dea: mov    0x100(%rbx),%eax
  0x00007fab74117df0: add    $0x8,%eax
  0x00007fab74117df3: mov    %eax,0x100(%rbx)
  0x00007fab74117df9: movabs $0x7fab61c91370,%rbx  ;   {metadata({method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74117e03: and    $0xfff8,%eax
  0x00007fab74117e09: cmp    $0x0,%eax
  0x00007fab74117e0c: je     0x00007fab741181d6  ; OopMap{rsi=Oop off=242}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)

  0x00007fab74117e12: test   %eax,0x1b6ca2e8(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab74117e18: cmp    $0xf4240,%edi
  0x00007fab74117e1e: movabs $0x7fab61c95028,%rbx  ;   {metadata(method data for {method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74117e28: movabs $0x2b8,%rax
  0x00007fab74117e32: jl     0x00007fab74117e42
  0x00007fab74117e38: movabs $0x2c8,%rax
  0x00007fab74117e42: mov    (%rbx,%rax,1),%rdx
  0x00007fab74117e46: lea    0x1(%rdx),%rdx
  0x00007fab74117e4a: mov    %rdx,(%rbx,%rax,1)
  0x00007fab74117e4e: jge    0x00007fab74118164  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)

  0x00007fab74117e54: mov    %edi,0x2c(%rsp)
  0x00007fab74117e58: cmp    (%rsi),%rax        ;*invokevirtual parse {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ; implicit exception: dispatches to 0x00007fab741181ed
  0x00007fab74117e5b: mov    %rsi,%rbx
  0x00007fab74117e5e: movabs $0x7fab61c95028,%rax  ;   {metadata(method data for {method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74117e68: movabs $0x7c0060028,%r10  ;   {metadata(&apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74117e72: mov    %r10,0x168(%rax)
  0x00007fab74117e79: addq   $0x1,0x170(%rax)
  0x00007fab74117e81: movabs $0x7fab61c94c80,%rbx  ;   {metadata(method data for {method} {0x00007fab61c91428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74117e8b: mov    0xfc(%rbx),%eax
  0x00007fab74117e91: add    $0x8,%eax
  0x00007fab74117e94: mov    %eax,0xfc(%rbx)
  0x00007fab74117e9a: movabs $0x7fab61c91428,%rbx  ;   {metadata({method} {0x00007fab61c91428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74117ea4: and    $0x7ffff8,%eax
  0x00007fab74117eaa: cmp    $0x0,%eax
  0x00007fab74117ead: je     0x00007fab741181f2
  0x00007fab74117eb3: movabs $0x7fab61c94c80,%rbx  ;   {metadata(method data for {method} {0x00007fab61c91428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74117ebd: addq   $0x1,0x130(%rbx)
  0x00007fab74117ec5: mov    %rsi,0x38(%rsp)
  0x00007fab74117eca: movabs $0x670be2918,%rsi  ;*invokestatic uuidFromCharSequence {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {oop(&quot;ba226cf7-d156-4b18-a78a-094736208cc9&quot;)}
  0x00007fab74117ed4: nop
  0x00007fab74117ed5: nop
  0x00007fab74117ed6: nop
  0x00007fab74117ed7: callq  0x00007fab74048160  ; OopMap{[56]=Oop off=444}
                                                ;*invokestatic uuidFromCharSequence {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {static_call}
  0x00007fab74117edc: movabs $0x7fab61c95028,%rsi  ;   {metadata(method data for {method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74117ee6: addq   $0x1,0x1f0(%rsi)
  0x00007fab74117eee: mov    %rax,%rsi          ;*invokestatic identityHashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)

  0x00007fab74117ef1: nop
  0x00007fab74117ef2: nop
  0x00007fab74117ef3: nop
  0x00007fab74117ef4: nop
  0x00007fab74117ef5: nop
  0x00007fab74117ef6: nop
  0x00007fab74117ef7: callq  0x00007fab74048160  ; OopMap{[56]=Oop off=476}
                                                ;*invokestatic identityHashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)
                                                ;   {static_call}
  0x00007fab74117efc: cmp    $0x1,%eax
  0x00007fab74117eff: movabs $0x7fab61c95028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74117f09: movabs $0x200,%rsi
  0x00007fab74117f13: jne    0x00007fab74117f23
  0x00007fab74117f19: movabs $0x210,%rsi
  0x00007fab74117f23: mov    (%rdx,%rsi,1),%rdi
  0x00007fab74117f27: lea    0x1(%rdi),%rdi
  0x00007fab74117f2b: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab74117f2f: jne    0x00007fab74118154  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@19 (line 13)

  0x00007fab74117f35: movabs $0x670b80c78,%rdx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007fab74117f3f: mov    0x6c(%rdx),%esi
  0x00007fab74117f42: shl    $0x3,%rsi          ;*getstatic out {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@22 (line 14)

  0x00007fab74117f46: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00007fab74118209
  0x00007fab74117f49: mov    %rsi,%rdx
  0x00007fab74117f4c: movabs $0x7fab61c95028,%rdi  ;   {metadata(method data for {method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74117f56: mov    0x8(%rdx),%edx
  0x00007fab74117f59: shl    $0x3,%rdx
  0x00007fab74117f5d: cmp    0x230(%rdi),%rdx
  0x00007fab74117f64: jne    0x00007fab74117f73
  0x00007fab74117f66: addq   $0x1,0x238(%rdi)
  0x00007fab74117f6e: jmpq   0x00007fab74118135
  0x00007fab74117f73: cmp    0x240(%rdi),%rdx
  0x00007fab74117f7a: jne    0x00007fab74117f89
  0x00007fab74117f7c: addq   $0x1,0x248(%rdi)
  0x00007fab74117f84: jmpq   0x00007fab74118135
  0x00007fab74117f89: cmp    0x250(%rdi),%rdx
  0x00007fab74117f90: jne    0x00007fab74117f9f
  0x00007fab74117f92: addq   $0x1,0x258(%rdi)
  0x00007fab74117f9a: jmpq   0x00007fab74118135
  0x00007fab74117f9f: cmp    0x260(%rdi),%rdx
  0x00007fab74117fa6: jne    0x00007fab74117fb5
  0x00007fab74117fa8: addq   $0x1,0x268(%rdi)
  0x00007fab74117fb0: jmpq   0x00007fab74118135
  0x00007fab74117fb5: cmp    0x270(%rdi),%rdx
  0x00007fab74117fbc: jne    0x00007fab74117fcb
  0x00007fab74117fbe: addq   $0x1,0x278(%rdi)
  0x00007fab74117fc6: jmpq   0x00007fab74118135
  0x00007fab74117fcb: cmp    0x280(%rdi),%rdx
  0x00007fab74117fd2: jne    0x00007fab74117fe1
  0x00007fab74117fd4: addq   $0x1,0x288(%rdi)
  0x00007fab74117fdc: jmpq   0x00007fab74118135
  0x00007fab74117fe1: cmp    0x290(%rdi),%rdx
  0x00007fab74117fe8: jne    0x00007fab74117ff7
  0x00007fab74117fea: addq   $0x1,0x298(%rdi)
  0x00007fab74117ff2: jmpq   0x00007fab74118135
  0x00007fab74117ff7: cmp    0x2a0(%rdi),%rdx
  0x00007fab74117ffe: jne    0x00007fab7411800d
  0x00007fab74118000: addq   $0x1,0x2a8(%rdi)
  0x00007fab74118008: jmpq   0x00007fab74118135
  0x00007fab7411800d: cmpq   $0x0,0x230(%rdi)
  0x00007fab74118018: jne    0x00007fab74118031
  0x00007fab7411801a: mov    %rdx,0x230(%rdi)
  0x00007fab74118021: movq   $0x1,0x238(%rdi)
  0x00007fab7411802c: jmpq   0x00007fab74118135
  0x00007fab74118031: cmpq   $0x0,0x240(%rdi)
  0x00007fab7411803c: jne    0x00007fab74118055
  0x00007fab7411803e: mov    %rdx,0x240(%rdi)
  0x00007fab74118045: movq   $0x1,0x248(%rdi)
  0x00007fab74118050: jmpq   0x00007fab74118135
  0x00007fab74118055: cmpq   $0x0,0x250(%rdi)
  0x00007fab74118060: jne    0x00007fab74118079
  0x00007fab74118062: mov    %rdx,0x250(%rdi)
  0x00007fab74118069: movq   $0x1,0x258(%rdi)
  0x00007fab74118074: jmpq   0x00007fab74118135
  0x00007fab74118079: cmpq   $0x0,0x260(%rdi)
  0x00007fab74118084: jne    0x00007fab7411809d
  0x00007fab74118086: mov    %rdx,0x260(%rdi)
  0x00007fab7411808d: movq   $0x1,0x268(%rdi)
  0x00007fab74118098: jmpq   0x00007fab74118135
  0x00007fab7411809d: cmpq   $0x0,0x270(%rdi)
  0x00007fab741180a8: jne    0x00007fab741180c1
  0x00007fab741180aa: mov    %rdx,0x270(%rdi)
  0x00007fab741180b1: movq   $0x1,0x278(%rdi)
  0x00007fab741180bc: jmpq   0x00007fab74118135
  0x00007fab741180c1: cmpq   $0x0,0x280(%rdi)
  0x00007fab741180cc: jne    0x00007fab741180e5
  0x00007fab741180ce: mov    %rdx,0x280(%rdi)
  0x00007fab741180d5: movq   $0x1,0x288(%rdi)
  0x00007fab741180e0: jmpq   0x00007fab74118135
  0x00007fab741180e5: cmpq   $0x0,0x290(%rdi)
  0x00007fab741180f0: jne    0x00007fab74118109
  0x00007fab741180f2: mov    %rdx,0x290(%rdi)
  0x00007fab741180f9: movq   $0x1,0x298(%rdi)
  0x00007fab74118104: jmpq   0x00007fab74118135
  0x00007fab74118109: cmpq   $0x0,0x2a0(%rdi)
  0x00007fab74118114: jne    0x00007fab7411812d
  0x00007fab74118116: mov    %rdx,0x2a0(%rdi)
  0x00007fab7411811d: movq   $0x1,0x2a8(%rdi)
  0x00007fab74118128: jmpq   0x00007fab74118135
  0x00007fab7411812d: addq   $0x1,0x220(%rdi)
  0x00007fab74118135: movabs $0x671594878,%rdx  ;*invokevirtual println {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {oop(&quot;X&quot;)}
  0x00007fab7411813f: nop
  0x00007fab74118140: nop
  0x00007fab74118141: nop
  0x00007fab74118142: nop
  0x00007fab74118143: nop
  0x00007fab74118144: nop
  0x00007fab74118145: movabs $0xffffffffffffffff,%rax
  0x00007fab7411814f: callq  0x00007fab74047f60  ; OopMap{[56]=Oop off=1076}
                                                ;*invokevirtual println {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {virtual_call}
  0x00007fab74118154: mov    0x2c(%rsp),%edi
  0x00007fab74118158: mov    0x38(%rsp),%rsi
  0x00007fab7411815d: inc    %edi
  0x00007fab7411815f: jmpq   0x00007fab74117de0  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@33 (line 11)

  0x00007fab74118164: add    $0x50,%rsp
  0x00007fab74118168: pop    %rbp
  0x00007fab74118169: test   %eax,0x1b6c9f91(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411816f: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@39 (line 18)

  0x00007fab74118170: mov    %eax,-0x14000(%rsp)
  0x00007fab74118177: push   %rbp
  0x00007fab74118178: sub    $0x50,%rsp
  0x00007fab7411817c: mov    0x10(%rsi),%rbx
  0x00007fab74118180: mov    0x8(%rsi),%eax
  0x00007fab74118183: mov    %rsi,%rdi
  0x00007fab74118186: mov    %rbx,0x30(%rsp)
  0x00007fab7411818b: mov    %eax,0x28(%rsp)
  0x00007fab7411818f: callq  0x00007fab8e373ae0  ;   {runtime_call}
  0x00007fab74118194: mov    0x28(%rsp),%eax
  0x00007fab74118198: mov    %rax,%rdi
  0x00007fab7411819b: mov    0x30(%rsp),%rbx
  0x00007fab741181a0: mov    %rbx,%rsi
  0x00007fab741181a3: jmpq   0x00007fab74117e54
  0x00007fab741181a8: mov    %rdi,0x8(%rsp)
  0x00007fab741181ad: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741181b5: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=1178}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@-1 (line 9)
                                                ;   {runtime_call}
  0x00007fab741181ba: jmpq   0x00007fab74117d7e
  0x00007fab741181bf: mov    %rdi,0x8(%rsp)
  0x00007fab741181c4: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741181cc: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=1201}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@1 (line 9)
                                                ;   {runtime_call}
  0x00007fab741181d1: jmpq   0x00007fab74117dc5
  0x00007fab741181d6: mov    %rbx,0x8(%rsp)
  0x00007fab741181db: movq   $0x24,(%rsp)
  0x00007fab741181e3: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=1224}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)
                                                ;   {runtime_call}
  0x00007fab741181e8: jmpq   0x00007fab74117e12
  0x00007fab741181ed: callq  0x00007fab740fc000  ; OopMap{rsi=Oop off=1234}
                                                ;*invokevirtual parse {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {runtime_call}
  0x00007fab741181f2: mov    %rbx,0x8(%rsp)
  0x00007fab741181f7: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741181ff: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=1252}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@-1 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {runtime_call}
  0x00007fab74118204: jmpq   0x00007fab74117eb3
  0x00007fab74118209: callq  0x00007fab740fc000  ; OopMap{[56]=Oop rsi=Oop off=1262}
                                                ;*invokevirtual println {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {runtime_call}
  0x00007fab7411820e: nop
  0x00007fab7411820f: nop
  0x00007fab74118210: mov    0x2c0(%r15),%rax
  0x00007fab74118217: movabs $0x0,%r10
  0x00007fab74118221: mov    %r10,0x2c0(%r15)
  0x00007fab74118228: movabs $0x0,%r10
  0x00007fab74118232: mov    %r10,0x2c8(%r15)
  0x00007fab74118239: add    $0x50,%rsp
  0x00007fab7411823d: pop    %rbp
  0x00007fab7411823e: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74118243: hlt    
  0x00007fab74118244: hlt    
  0x00007fab74118245: hlt    
  0x00007fab74118246: hlt    
  0x00007fab74118247: hlt    
  0x00007fab74118248: hlt    
  0x00007fab74118249: hlt    
  0x00007fab7411824a: hlt    
  0x00007fab7411824b: hlt    
  0x00007fab7411824c: hlt    
  0x00007fab7411824d: hlt    
  0x00007fab7411824e: hlt    
  0x00007fab7411824f: hlt    
  0x00007fab74118250: hlt    
  0x00007fab74118251: hlt    
  0x00007fab74118252: hlt    
  0x00007fab74118253: hlt    
  0x00007fab74118254: hlt    
  0x00007fab74118255: hlt    
  0x00007fab74118256: hlt    
  0x00007fab74118257: hlt    
  0x00007fab74118258: hlt    
  0x00007fab74118259: hlt    
  0x00007fab7411825a: hlt    
  0x00007fab7411825b: hlt    
  0x00007fab7411825c: hlt    
  0x00007fab7411825d: hlt    
  0x00007fab7411825e: hlt    
  0x00007fab7411825f: hlt    
[Stub Code]
  0x00007fab74118260: nop                       ;   {no_reloc}
  0x00007fab74118261: nop
  0x00007fab74118262: nop
  0x00007fab74118263: nop
  0x00007fab74118264: nop
  0x00007fab74118265: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411826f: jmpq   0x00007fab7411826f  ;   {runtime_call}
  0x00007fab74118274: nop
  0x00007fab74118275: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411827f: jmpq   0x00007fab7411827f  ;   {runtime_call}
  0x00007fab74118284: nop
  0x00007fab74118285: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411828f: jmpq   0x00007fab7411828f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74118294: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74118299: mov    %rsp,-0x28(%rsp)
  0x00007fab7411829e: sub    $0x80,%rsp
  0x00007fab741182a5: mov    %rax,0x78(%rsp)
  0x00007fab741182aa: mov    %rcx,0x70(%rsp)
  0x00007fab741182af: mov    %rdx,0x68(%rsp)
  0x00007fab741182b4: mov    %rbx,0x60(%rsp)
  0x00007fab741182b9: mov    %rbp,0x50(%rsp)
  0x00007fab741182be: mov    %rsi,0x48(%rsp)
  0x00007fab741182c3: mov    %rdi,0x40(%rsp)
  0x00007fab741182c8: mov    %r8,0x38(%rsp)
  0x00007fab741182cd: mov    %r9,0x30(%rsp)
  0x00007fab741182d2: mov    %r10,0x28(%rsp)
  0x00007fab741182d7: mov    %r11,0x20(%rsp)
  0x00007fab741182dc: mov    %r12,0x18(%rsp)
  0x00007fab741182e1: mov    %r13,0x10(%rsp)
  0x00007fab741182e6: mov    %r14,0x8(%rsp)
  0x00007fab741182eb: mov    %r15,(%rsp)
  0x00007fab741182ef: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741182f9: movabs $0x7fab74118299,%rsi  ;   {internal_word}
  0x00007fab74118303: mov    %rsp,%rdx
  0x00007fab74118306: and    $0xfffffffffffffff0,%rsp
  0x00007fab7411830a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7411830f: hlt    
[Deopt Handler Code]
  0x00007fab74118310: movabs $0x7fab74118310,%r10  ;   {section_word}
  0x00007fab7411831a: push   %r10
  0x00007fab7411831c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74118321: hlt    
  0x00007fab74118322: hlt    
  0x00007fab74118323: hlt    
  0x00007fab74118324: hlt    
  0x00007fab74118325: hlt    
  0x00007fab74118326: hlt    
  0x00007fab74118327: hlt    
<nmethod compile_id='27' compile_kind='osr' compiler='C1' level='3' entry='0x00007fab74117d20' size='2648' address='0x00007fab74117b50' relocation_offset='312' insts_offset='464' stub_offset='1808' scopes_data_offset='2048' scopes_pcs_offset='2248' dependencies_offset='2616' nul_chk_table_offset='2624' oops_offset='2008' metadata_offset='2016' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='89896' iicount='1' stamp='0.146'/>
<writer thread='140373948942080'/>
[Loaded java.util.HashMap$HashIterator from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.HashMap$KeyIterator from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<task_queued compile_id='28' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='256' iicount='256' level='3' stamp='0.146' comment='tiered' hot_count='256'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/net/URI$Parser.charAt  [0x00007fab74118760, 0x00007fab74118a48]  744 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61b29c70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/net/URI$Parser&apos;
  # this:     rsi:rsi   = &apos;java/net/URI$Parser&apos;
  # parm0:    rdx       = int
  #           [sp+0x60]  (sp of caller)
  0x00007fab74118760: mov    0x8(%rsi),%r10d
  0x00007fab74118764: shl    $0x3,%r10
  0x00007fab74118768: cmp    %rax,%r10
  0x00007fab7411876b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74118771: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7411877c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74118780: mov    %eax,-0x14000(%rsp)
  0x00007fab74118787: push   %rbp
  0x00007fab74118788: sub    $0x50,%rsp
  0x00007fab7411878c: mov    %rdx,%rdi
  0x00007fab7411878f: movabs $0x7fab61b3f168,%rax  ;   {metadata(method data for {method} {0x00007fab61b29c70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/net/URI$Parser&apos;)}
  0x00007fab74118799: mov    0xfc(%rax),%edx
  0x00007fab7411879f: add    $0x8,%edx
  0x00007fab741187a2: mov    %edx,0xfc(%rax)
  0x00007fab741187a8: movabs $0x7fab61b29c70,%rax  ;   {metadata({method} {0x00007fab61b29c70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/net/URI$Parser&apos;)}
  0x00007fab741187b2: and    $0x1ff8,%edx
  0x00007fab741187b8: cmp    $0x0,%edx
  0x00007fab741187bb: je     0x00007fab741188ee  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI$Parser::charAt@0 (line 2876)

  0x00007fab741187c1: mov    0x14(%rsi),%eax
  0x00007fab741187c4: shl    $0x3,%rax          ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI$Parser::charAt@1 (line 2876)

  0x00007fab741187c8: cmp    (%rax),%rax        ;*invokevirtual charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)
                                                ; implicit exception: dispatches to 0x00007fab74118905
  0x00007fab741187cb: mov    %rax,%rdx
  0x00007fab741187ce: movabs $0x7fab61b3f168,%rsi  ;   {metadata(method data for {method} {0x00007fab61b29c70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/net/URI$Parser&apos;)}
  0x00007fab741187d8: addq   $0x1,0x130(%rsi)
  0x00007fab741187e0: movabs $0x7fab61a543b8,%rdx  ;   {metadata(method data for {method} {0x00007fab618956b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741187ea: mov    0xfc(%rdx),%esi
  0x00007fab741187f0: add    $0x8,%esi
  0x00007fab741187f3: mov    %esi,0xfc(%rdx)
  0x00007fab741187f9: movabs $0x7fab618956b0,%rdx  ;   {metadata({method} {0x00007fab618956b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74118803: and    $0x7ffff8,%esi
  0x00007fab74118809: cmp    $0x0,%esi
  0x00007fab7411880c: je     0x00007fab7411890a
  0x00007fab74118812: cmp    $0x0,%edi
  0x00007fab74118815: movabs $0x7fab61a543b8,%rdx  ;   {metadata(method data for {method} {0x00007fab618956b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7411881f: movabs $0x130,%rsi
  0x00007fab74118829: jl     0x00007fab74118839
  0x00007fab7411882f: movabs $0x140,%rsi
  0x00007fab74118839: mov    (%rdx,%rsi,1),%rbx
  0x00007fab7411883d: lea    0x1(%rbx),%rbx
  0x00007fab74118841: mov    %rbx,(%rdx,%rsi,1)
  0x00007fab74118845: jl     0x00007fab741188ad  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)

  0x00007fab7411884b: mov    0xc(%rax),%eax
  0x00007fab7411884e: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)

  0x00007fab74118852: mov    0xc(%rax),%edx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)
                                                ; implicit exception: dispatches to 0x00007fab74118921
  0x00007fab74118855: cmp    %edx,%edi
  0x00007fab74118857: movabs $0x7fab61a543b8,%rdx  ;   {metadata(method data for {method} {0x00007fab618956b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74118861: movabs $0x150,%rsi
  0x00007fab7411886b: jl     0x00007fab7411887b
  0x00007fab74118871: movabs $0x160,%rsi
  0x00007fab7411887b: mov    (%rdx,%rsi,1),%rbx
  0x00007fab7411887f: lea    0x1(%rbx),%rbx
  0x00007fab74118883: mov    %rbx,(%rdx,%rsi,1)
  0x00007fab74118887: jge    0x00007fab741188ad  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)

  0x00007fab7411888d: movslq %edi,%rdi
  0x00007fab74118890: movzwl 0x10(%rax,%rdi,2),%eax  ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)

  0x00007fab74118895: and    $0xffff,%eax
  0x00007fab7411889b: and    $0xffff,%eax
  0x00007fab741188a1: add    $0x50,%rsp
  0x00007fab741188a5: pop    %rbp
  0x00007fab741188a6: test   %eax,0x1b6c9854(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741188ac: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI$Parser::charAt@8 (line 2876)

  0x00007fab741188ad: data16 xchg %ax,%ax
  0x00007fab741188b0: jmpq   0x00007fab74118935  ;   {no_reloc}
  0x00007fab741188b5: add    %al,(%rax)
  0x00007fab741188b7: add    %al,(%rax)
  0x00007fab741188b9: add    %ch,%cl
  0x00007fab741188bb: addb   $0x0,(%rax)
  0x00007fab741188be: add    %cl,-0x75(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)

  0x00007fab741188c1: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00007fab618956b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741188c4: mov    $0xab61a543,%eax
  0x00007fab741188c9: jg     0x00007fab741188cb
  0x00007fab741188cb: add    %cl,-0x7d(%rax)
  0x00007fab741188ce: xchg   %dh,0x1(%rax)
  0x00007fab741188d1: add    %al,(%rax)
  0x00007fab741188d3: add    %ecx,-0x75(%rax)
  0x00007fab741188d6: xlat   %ds:(%rbx)
  0x00007fab741188d7: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)

  0x00007fab741188da: mov    %rax,0x38(%rsp)
  0x00007fab741188df: callq  0x00007fab74047d60  ; OopMap{[56]=Oop off=388}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)
                                                ;   {optimized virtual_call}
  0x00007fab741188e4: mov    0x38(%rsp),%rax
  0x00007fab741188e9: jmpq   0x00007fab74118977
  0x00007fab741188ee: mov    %rax,0x8(%rsp)
  0x00007fab741188f3: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741188fb: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=416}
                                                ;*synchronization entry
                                                ; - java.net.URI$Parser::charAt@-1 (line 2876)
                                                ;   {runtime_call}
  0x00007fab74118900: jmpq   0x00007fab741187c1
  0x00007fab74118905: callq  0x00007fab740fc000  ; OopMap{rax=Oop off=426}
                                                ;*invokevirtual charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)
                                                ;   {runtime_call}
  0x00007fab7411890a: mov    %rdx,0x8(%rsp)
  0x00007fab7411890f: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74118917: callq  0x00007fab741005e0  ; OopMap{rax=Oop off=444}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)
                                                ;   {runtime_call}
  0x00007fab7411891c: jmpq   0x00007fab74118812
  0x00007fab74118921: callq  0x00007fab740fc000  ; OopMap{rax=Oop off=454}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)
                                                ;   {runtime_call}
  0x00007fab74118926: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab74118930: mov    $0xa050f00,%eax
  0x00007fab74118935: callq  0x00007fab740ff5e0  ; OopMap{off=474}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)
                                                ;   {runtime_call}
  0x00007fab7411893a: jmpq   0x00007fab741188b0
  0x00007fab7411893f: mov    %rdx,%rdx
  0x00007fab74118942: callq  0x00007fab740fc4a0  ; OopMap{off=487}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)
                                                ;   {runtime_call}
  0x00007fab74118947: jmpq   0x00007fab741188bf
  0x00007fab7411894c: nop
  0x00007fab7411894d: nop
  0x00007fab7411894e: mov    0x2c0(%r15),%rax
  0x00007fab74118955: movabs $0x0,%r10
  0x00007fab7411895f: mov    %r10,0x2c0(%r15)
  0x00007fab74118966: movabs $0x0,%r10
  0x00007fab74118970: mov    %r10,0x2c8(%r15)
  0x00007fab74118977: add    $0x50,%rsp
  0x00007fab7411897b: pop    %rbp
  0x00007fab7411897c: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74118981: hlt    
  0x00007fab74118982: hlt    
  0x00007fab74118983: hlt    
  0x00007fab74118984: hlt    
  0x00007fab74118985: hlt    
  0x00007fab74118986: hlt    
  0x00007fab74118987: hlt    
  0x00007fab74118988: hlt    
  0x00007fab74118989: hlt    
  0x00007fab7411898a: hlt    
  0x00007fab7411898b: hlt    
  0x00007fab7411898c: hlt    
  0x00007fab7411898d: hlt    
  0x00007fab7411898e: hlt    
  0x00007fab7411898f: hlt    
  0x00007fab74118990: hlt    
  0x00007fab74118991: hlt    
  0x00007fab74118992: hlt    
  0x00007fab74118993: hlt    
  0x00007fab74118994: hlt    
  0x00007fab74118995: hlt    
  0x00007fab74118996: hlt    
  0x00007fab74118997: hlt    
  0x00007fab74118998: hlt    
  0x00007fab74118999: hlt    
  0x00007fab7411899a: hlt    
  0x00007fab7411899b: hlt    
  0x00007fab7411899c: hlt    
  0x00007fab7411899d: hlt    
  0x00007fab7411899e: hlt    
  0x00007fab7411899f: hlt    
[Stub Code]
  0x00007fab741189a0: nop                       ;   {no_reloc}
  0x00007fab741189a1: nop
  0x00007fab741189a2: nop
  0x00007fab741189a3: nop
  0x00007fab741189a4: nop
  0x00007fab741189a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741189af: jmpq   0x00007fab741189af  ;   {runtime_call}
[Exception Handler]
  0x00007fab741189b4: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab741189b9: mov    %rsp,-0x28(%rsp)
  0x00007fab741189be: sub    $0x80,%rsp
  0x00007fab741189c5: mov    %rax,0x78(%rsp)
  0x00007fab741189ca: mov    %rcx,0x70(%rsp)
  0x00007fab741189cf: mov    %rdx,0x68(%rsp)
  0x00007fab741189d4: mov    %rbx,0x60(%rsp)
  0x00007fab741189d9: mov    %rbp,0x50(%rsp)
  0x00007fab741189de: mov    %rsi,0x48(%rsp)
  0x00007fab741189e3: mov    %rdi,0x40(%rsp)
  0x00007fab741189e8: mov    %r8,0x38(%rsp)
  0x00007fab741189ed: mov    %r9,0x30(%rsp)
  0x00007fab741189f2: mov    %r10,0x28(%rsp)
  0x00007fab741189f7: mov    %r11,0x20(%rsp)
  0x00007fab741189fc: mov    %r12,0x18(%rsp)
  0x00007fab74118a01: mov    %r13,0x10(%rsp)
  0x00007fab74118a06: mov    %r14,0x8(%rsp)
  0x00007fab74118a0b: mov    %r15,(%rsp)
  0x00007fab74118a0f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74118a19: movabs $0x7fab741189b9,%rsi  ;   {internal_word}
  0x00007fab74118a23: mov    %rsp,%rdx
  0x00007fab74118a26: and    $0xfffffffffffffff0,%rsp
  0x00007fab74118a2a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74118a2f: hlt    
[Deopt Handler Code]
  0x00007fab74118a30: movabs $0x7fab74118a30,%r10  ;   {section_word}
  0x00007fab74118a3a: push   %r10
  0x00007fab74118a3c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74118a41: hlt    
  0x00007fab74118a42: hlt    
  0x00007fab74118a43: hlt    
  0x00007fab74118a44: hlt    
  0x00007fab74118a45: hlt    
  0x00007fab74118a46: hlt    
  0x00007fab74118a47: hlt    
<nmethod compile_id='25' compiler='C1' level='3' entry='0x00007fab74118760' size='1648' address='0x00007fab741185d0' relocation_offset='312' insts_offset='400' stub_offset='976' scopes_data_offset='1160' scopes_pcs_offset='1296' dependencies_offset='1616' nul_chk_table_offset='1624' metadata_offset='1144' method='java/net/URI$Parser charAt (I)C' bytes='9' count='606' iicount='606' stamp='0.147'/>
<writer thread='140373948942080'/>
<task_queued compile_id='29' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='384' iicount='384' level='1' stamp='0.147' comment='tiered' hot_count='384'/>
<writer thread='140374823413504'/>
<task_queued compile_id='30' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='90173' iicount='1' level='3' stamp='0.147' comment='tiered' hot_count='1'/>
<writer thread='140373948942080'/>
[Loaded java.nio.channels.Channel from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.channels.ReadableByteChannel from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.channels.WritableByteChannel from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.channels.ByteChannel from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.channels.SeekableByteChannel from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.channels.GatheringByteChannel from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
com/github/marschall/charsequences/ParseUuidCompilation.&lt;init&gt;  [0x00007fab74118e20, 0x00007fab741193c8]  1448 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fab74118e20: mov    0x8(%rsi),%r10d
  0x00007fab74118e24: shl    $0x3,%r10
  0x00007fab74118e28: cmp    %rax,%r10
  0x00007fab74118e2b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74118e31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74118e3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74118e40: mov    %eax,-0x14000(%rsp)
  0x00007fab74118e47: push   %rbp
  0x00007fab74118e48: sub    $0x40,%rsp
  0x00007fab74118e4c: mov    %rsi,0x30(%rsp)
  0x00007fab74118e51: movabs $0x7fab61c95028,%rdi  ;   {metadata(method data for {method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74118e5b: mov    0xfc(%rdi),%ebx
  0x00007fab74118e61: add    $0x8,%ebx
  0x00007fab74118e64: mov    %ebx,0xfc(%rdi)
  0x00007fab74118e6a: movabs $0x7fab61c91370,%rdi  ;   {metadata({method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74118e74: and    $0x1ff8,%ebx
  0x00007fab74118e7a: cmp    $0x0,%ebx
  0x00007fab74118e7d: je     0x00007fab74119257  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@0 (line 9)

  0x00007fab74118e83: mov    %rsi,%rdi
  0x00007fab74118e86: movabs $0x7fab61c95028,%rbx  ;   {metadata(method data for {method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74118e90: addq   $0x1,0x130(%rbx)
  0x00007fab74118e98: movabs $0x7fab61a342a0,%rdi  ;   {metadata(method data for {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab74118ea2: mov    0xfc(%rdi),%ebx
  0x00007fab74118ea8: add    $0x8,%ebx
  0x00007fab74118eab: mov    %ebx,0xfc(%rdi)
  0x00007fab74118eb1: movabs $0x7fab618914d8,%rdi  ;   {metadata({method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab74118ebb: and    $0x7ffff8,%ebx
  0x00007fab74118ec1: cmp    $0x0,%ebx
  0x00007fab74118ec4: je     0x00007fab7411926e
  0x00007fab74118eca: movabs $0x7fab61c95028,%rdi  ;   {metadata(method data for {method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74118ed4: incl   0x140(%rdi)
  0x00007fab74118eda: mov    $0x0,%edi
  0x00007fab74118edf: jmpq   0x00007fab741191d7  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@6 (line 11)

  0x00007fab74118ee4: nopl   0x0(%rax)
  0x00007fab74118ee8: mov    %edi,0x28(%rsp)
  0x00007fab74118eec: mov    %rsi,%rbx
  0x00007fab74118eef: movabs $0x7fab61c95028,%rax  ;   {metadata(method data for {method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74118ef9: addq   $0x1,0x170(%rax)
  0x00007fab74118f01: movabs $0x7fab61c94c80,%rbx  ;   {metadata(method data for {method} {0x00007fab61c91428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74118f0b: mov    0xfc(%rbx),%eax
  0x00007fab74118f11: add    $0x8,%eax
  0x00007fab74118f14: mov    %eax,0xfc(%rbx)
  0x00007fab74118f1a: movabs $0x7fab61c91428,%rbx  ;   {metadata({method} {0x00007fab61c91428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74118f24: and    $0x7ffff8,%eax
  0x00007fab74118f2a: cmp    $0x0,%eax
  0x00007fab74118f2d: je     0x00007fab74119285
  0x00007fab74118f33: movabs $0x7fab61c94c80,%rbx  ;   {metadata(method data for {method} {0x00007fab61c91428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74118f3d: addq   $0x1,0x130(%rbx)
  0x00007fab74118f45: movabs $0x670be2918,%rsi  ;*invokestatic uuidFromCharSequence {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {oop(&quot;ba226cf7-d156-4b18-a78a-094736208cc9&quot;)}
  0x00007fab74118f4f: callq  0x00007fab74048160  ; OopMap{[48]=Oop off=308}
                                                ;*invokestatic uuidFromCharSequence {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {static_call}
  0x00007fab74118f54: movabs $0x7fab61c95028,%rsi  ;   {metadata(method data for {method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74118f5e: addq   $0x1,0x1f0(%rsi)
  0x00007fab74118f66: mov    %rax,%rsi          ;*invokestatic identityHashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)

  0x00007fab74118f69: nop
  0x00007fab74118f6a: nop
  0x00007fab74118f6b: nop
  0x00007fab74118f6c: nop
  0x00007fab74118f6d: nop
  0x00007fab74118f6e: nop
  0x00007fab74118f6f: callq  0x00007fab74048160  ; OopMap{[48]=Oop off=340}
                                                ;*invokestatic identityHashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)
                                                ;   {static_call}
  0x00007fab74118f74: cmp    $0x1,%eax
  0x00007fab74118f77: movabs $0x7fab61c95028,%rdx  ;   {metadata(method data for {method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74118f81: movabs $0x200,%rsi
  0x00007fab74118f8b: jne    0x00007fab74118f9b
  0x00007fab74118f91: movabs $0x210,%rsi
  0x00007fab74118f9b: mov    (%rdx,%rsi,1),%rdi
  0x00007fab74118f9f: lea    0x1(%rdi),%rdi
  0x00007fab74118fa3: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab74118fa7: jne    0x00007fab741191cc  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@19 (line 13)

  0x00007fab74118fad: movabs $0x670b80c78,%rdx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007fab74118fb7: mov    0x6c(%rdx),%esi
  0x00007fab74118fba: shl    $0x3,%rsi          ;*getstatic out {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@22 (line 14)

  0x00007fab74118fbe: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00007fab7411929c
  0x00007fab74118fc1: mov    %rsi,%rdx
  0x00007fab74118fc4: movabs $0x7fab61c95028,%rdi  ;   {metadata(method data for {method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab74118fce: mov    0x8(%rdx),%edx
  0x00007fab74118fd1: shl    $0x3,%rdx
  0x00007fab74118fd5: cmp    0x230(%rdi),%rdx
  0x00007fab74118fdc: jne    0x00007fab74118feb
  0x00007fab74118fde: addq   $0x1,0x238(%rdi)
  0x00007fab74118fe6: jmpq   0x00007fab741191ad
  0x00007fab74118feb: cmp    0x240(%rdi),%rdx
  0x00007fab74118ff2: jne    0x00007fab74119001
  0x00007fab74118ff4: addq   $0x1,0x248(%rdi)
  0x00007fab74118ffc: jmpq   0x00007fab741191ad
  0x00007fab74119001: cmp    0x250(%rdi),%rdx
  0x00007fab74119008: jne    0x00007fab74119017
  0x00007fab7411900a: addq   $0x1,0x258(%rdi)
  0x00007fab74119012: jmpq   0x00007fab741191ad
  0x00007fab74119017: cmp    0x260(%rdi),%rdx
  0x00007fab7411901e: jne    0x00007fab7411902d
  0x00007fab74119020: addq   $0x1,0x268(%rdi)
  0x00007fab74119028: jmpq   0x00007fab741191ad
  0x00007fab7411902d: cmp    0x270(%rdi),%rdx
  0x00007fab74119034: jne    0x00007fab74119043
  0x00007fab74119036: addq   $0x1,0x278(%rdi)
  0x00007fab7411903e: jmpq   0x00007fab741191ad
  0x00007fab74119043: cmp    0x280(%rdi),%rdx
  0x00007fab7411904a: jne    0x00007fab74119059
  0x00007fab7411904c: addq   $0x1,0x288(%rdi)
  0x00007fab74119054: jmpq   0x00007fab741191ad
  0x00007fab74119059: cmp    0x290(%rdi),%rdx
  0x00007fab74119060: jne    0x00007fab7411906f
  0x00007fab74119062: addq   $0x1,0x298(%rdi)
  0x00007fab7411906a: jmpq   0x00007fab741191ad
  0x00007fab7411906f: cmp    0x2a0(%rdi),%rdx
  0x00007fab74119076: jne    0x00007fab74119085
  0x00007fab74119078: addq   $0x1,0x2a8(%rdi)
  0x00007fab74119080: jmpq   0x00007fab741191ad
  0x00007fab74119085: cmpq   $0x0,0x230(%rdi)
  0x00007fab74119090: jne    0x00007fab741190a9
  0x00007fab74119092: mov    %rdx,0x230(%rdi)
  0x00007fab74119099: movq   $0x1,0x238(%rdi)
  0x00007fab741190a4: jmpq   0x00007fab741191ad
  0x00007fab741190a9: cmpq   $0x0,0x240(%rdi)
  0x00007fab741190b4: jne    0x00007fab741190cd
  0x00007fab741190b6: mov    %rdx,0x240(%rdi)
  0x00007fab741190bd: movq   $0x1,0x248(%rdi)
  0x00007fab741190c8: jmpq   0x00007fab741191ad
  0x00007fab741190cd: cmpq   $0x0,0x250(%rdi)
  0x00007fab741190d8: jne    0x00007fab741190f1
  0x00007fab741190da: mov    %rdx,0x250(%rdi)
  0x00007fab741190e1: movq   $0x1,0x258(%rdi)
  0x00007fab741190ec: jmpq   0x00007fab741191ad
  0x00007fab741190f1: cmpq   $0x0,0x260(%rdi)
  0x00007fab741190fc: jne    0x00007fab74119115
  0x00007fab741190fe: mov    %rdx,0x260(%rdi)
  0x00007fab74119105: movq   $0x1,0x268(%rdi)
  0x00007fab74119110: jmpq   0x00007fab741191ad
  0x00007fab74119115: cmpq   $0x0,0x270(%rdi)
  0x00007fab74119120: jne    0x00007fab74119139
  0x00007fab74119122: mov    %rdx,0x270(%rdi)
  0x00007fab74119129: movq   $0x1,0x278(%rdi)
  0x00007fab74119134: jmpq   0x00007fab741191ad
  0x00007fab74119139: cmpq   $0x0,0x280(%rdi)
  0x00007fab74119144: jne    0x00007fab7411915d
  0x00007fab74119146: mov    %rdx,0x280(%rdi)
  0x00007fab7411914d: movq   $0x1,0x288(%rdi)
  0x00007fab74119158: jmpq   0x00007fab741191ad
  0x00007fab7411915d: cmpq   $0x0,0x290(%rdi)
  0x00007fab74119168: jne    0x00007fab74119181
  0x00007fab7411916a: mov    %rdx,0x290(%rdi)
  0x00007fab74119171: movq   $0x1,0x298(%rdi)
  0x00007fab7411917c: jmpq   0x00007fab741191ad
  0x00007fab74119181: cmpq   $0x0,0x2a0(%rdi)
  0x00007fab7411918c: jne    0x00007fab741191a5
  0x00007fab7411918e: mov    %rdx,0x2a0(%rdi)
  0x00007fab74119195: movq   $0x1,0x2a8(%rdi)
  0x00007fab741191a0: jmpq   0x00007fab741191ad
  0x00007fab741191a5: addq   $0x1,0x220(%rdi)
  0x00007fab741191ad: movabs $0x671594878,%rdx  ;*invokevirtual println {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {oop(&quot;X&quot;)}
  0x00007fab741191b7: nop
  0x00007fab741191b8: nop
  0x00007fab741191b9: nop
  0x00007fab741191ba: nop
  0x00007fab741191bb: nop
  0x00007fab741191bc: nop
  0x00007fab741191bd: movabs $0xffffffffffffffff,%rax
  0x00007fab741191c7: callq  0x00007fab74047f60  ; OopMap{[48]=Oop off=940}
                                                ;*invokevirtual println {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {virtual_call}
  0x00007fab741191cc: mov    0x28(%rsp),%edi
  0x00007fab741191d0: inc    %edi
  0x00007fab741191d2: mov    0x30(%rsp),%rsi
  0x00007fab741191d7: movabs $0x7fab61c95028,%rbx  ;   {metadata(method data for {method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab741191e1: mov    0x100(%rbx),%eax
  0x00007fab741191e7: add    $0x8,%eax
  0x00007fab741191ea: mov    %eax,0x100(%rbx)
  0x00007fab741191f0: movabs $0x7fab61c91370,%rbx  ;   {metadata({method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab741191fa: and    $0xfff8,%eax
  0x00007fab74119200: cmp    $0x0,%eax
  0x00007fab74119203: je     0x00007fab741192a1  ; OopMap{rsi=Oop [48]=Oop off=1001}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)

  0x00007fab74119209: test   %eax,0x1b6c8ef1(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab7411920f: cmp    $0xf4240,%edi
  0x00007fab74119215: movabs $0x7fab61c95028,%rbx  ;   {metadata(method data for {method} {0x00007fab61c91370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fab7411921f: movabs $0x2b8,%rax
  0x00007fab74119229: jl     0x00007fab74119239
  0x00007fab7411922f: movabs $0x2c8,%rax
  0x00007fab74119239: mov    (%rbx,%rax,1),%rdx
  0x00007fab7411923d: lea    0x1(%rdx),%rdx
  0x00007fab74119241: mov    %rdx,(%rbx,%rax,1)
  0x00007fab74119245: jl     0x00007fab74118ee8  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)

  0x00007fab7411924b: add    $0x40,%rsp
  0x00007fab7411924f: pop    %rbp
  0x00007fab74119250: test   %eax,0x1b6c8eaa(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74119256: retq   
  0x00007fab74119257: mov    %rdi,0x8(%rsp)
  0x00007fab7411925c: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74119264: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [48]=Oop off=1097}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@-1 (line 9)
                                                ;   {runtime_call}
  0x00007fab74119269: jmpq   0x00007fab74118e83
  0x00007fab7411926e: mov    %rdi,0x8(%rsp)
  0x00007fab74119273: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411927b: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [48]=Oop off=1120}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@1 (line 9)
                                                ;   {runtime_call}
  0x00007fab74119280: jmpq   0x00007fab74118eca
  0x00007fab74119285: mov    %rbx,0x8(%rsp)
  0x00007fab7411928a: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74119292: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [48]=Oop off=1143}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@-1 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {runtime_call}
  0x00007fab74119297: jmpq   0x00007fab74118f33
  0x00007fab7411929c: callq  0x00007fab740fc000  ; OopMap{[48]=Oop rsi=Oop off=1153}
                                                ;*invokevirtual println {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {runtime_call}
  0x00007fab741192a1: mov    %rbx,0x8(%rsp)
  0x00007fab741192a6: movq   $0x24,(%rsp)
  0x00007fab741192ae: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [48]=Oop off=1171}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)
                                                ;   {runtime_call}
  0x00007fab741192b3: jmpq   0x00007fab74119209
  0x00007fab741192b8: nop
  0x00007fab741192b9: nop
  0x00007fab741192ba: mov    0x2c0(%r15),%rax
  0x00007fab741192c1: movabs $0x0,%r10
  0x00007fab741192cb: mov    %r10,0x2c0(%r15)
  0x00007fab741192d2: movabs $0x0,%r10
  0x00007fab741192dc: mov    %r10,0x2c8(%r15)
  0x00007fab741192e3: add    $0x40,%rsp
  0x00007fab741192e7: pop    %rbp
  0x00007fab741192e8: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab741192ed: hlt    
  0x00007fab741192ee: hlt    
  0x00007fab741192ef: hlt    
  0x00007fab741192f0: hlt    
  0x00007fab741192f1: hlt    
  0x00007fab741192f2: hlt    
  0x00007fab741192f3: hlt    
  0x00007fab741192f4: hlt    
  0x00007fab741192f5: hlt    
  0x00007fab741192f6: hlt    
  0x00007fab741192f7: hlt    
  0x00007fab741192f8: hlt    
  0x00007fab741192f9: hlt    
  0x00007fab741192fa: hlt    
  0x00007fab741192fb: hlt    
  0x00007fab741192fc: hlt    
  0x00007fab741192fd: hlt    
  0x00007fab741192fe: hlt    
  0x00007fab741192ff: hlt    
[Stub Code]
  0x00007fab74119300: nop                       ;   {no_reloc}
  0x00007fab74119301: nop
  0x00007fab74119302: nop
  0x00007fab74119303: nop
  0x00007fab74119304: nop
  0x00007fab74119305: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411930f: jmpq   0x00007fab7411930f  ;   {runtime_call}
  0x00007fab74119314: nop
  0x00007fab74119315: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411931f: jmpq   0x00007fab7411931f  ;   {runtime_call}
  0x00007fab74119324: nop
  0x00007fab74119325: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411932f: jmpq   0x00007fab7411932f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74119334: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74119339: mov    %rsp,-0x28(%rsp)
  0x00007fab7411933e: sub    $0x80,%rsp
  0x00007fab74119345: mov    %rax,0x78(%rsp)
  0x00007fab7411934a: mov    %rcx,0x70(%rsp)
  0x00007fab7411934f: mov    %rdx,0x68(%rsp)
  0x00007fab74119354: mov    %rbx,0x60(%rsp)
  0x00007fab74119359: mov    %rbp,0x50(%rsp)
  0x00007fab7411935e: mov    %rsi,0x48(%rsp)
  0x00007fab74119363: mov    %rdi,0x40(%rsp)
  0x00007fab74119368: mov    %r8,0x38(%rsp)
  0x00007fab7411936d: mov    %r9,0x30(%rsp)
  0x00007fab74119372: mov    %r10,0x28(%rsp)
  0x00007fab74119377: mov    %r11,0x20(%rsp)
  0x00007fab7411937c: mov    %r12,0x18(%rsp)
  0x00007fab74119381: mov    %r13,0x10(%rsp)
  0x00007fab74119386: mov    %r14,0x8(%rsp)
  0x00007fab7411938b: mov    %r15,(%rsp)
  0x00007fab7411938f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74119399: movabs $0x7fab74119339,%rsi  ;   {internal_word}
  0x00007fab741193a3: mov    %rsp,%rdx
  0x00007fab741193a6: and    $0xfffffffffffffff0,%rsp
  0x00007fab741193aa: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741193af: hlt    
[Deopt Handler Code]
  0x00007fab741193b0: movabs $0x7fab741193b0,%r10  ;   {section_word}
  0x00007fab741193ba: push   %r10
  0x00007fab741193bc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab741193c1: hlt    
  0x00007fab741193c2: hlt    
  0x00007fab741193c3: hlt    
  0x00007fab741193c4: hlt    
  0x00007fab741193c5: hlt    
  0x00007fab741193c6: hlt    
  0x00007fab741193c7: hlt    
<nmethod compile_id='30' compiler='C1' level='3' entry='0x00007fab74118e20' size='2464' address='0x00007fab74118c50' relocation_offset='312' insts_offset='464' stub_offset='1712' scopes_data_offset='1952' scopes_pcs_offset='2136' dependencies_offset='2440' nul_chk_table_offset='2448' oops_offset='1912' metadata_offset='1920' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='92318' iicount='1' stamp='0.149'/>
<writer thread='140373948942080'/>
[Loaded java.nio.channels.ScatteringByteChannel from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.channels.InterruptibleChannel from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.channels.spi.AbstractInterruptibleChannel from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.channels.FileChannel from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.ch.FileChannelImpl from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.ch.IOUtil from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/StringBuilder.append  [0x00007fab7411a220, 0x00007fab7411a7b8]  1432 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab6191a870} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/StringBuilder&apos;
  # parm0:    rdx       = char
  #           [sp+0x100]  (sp of caller)
  0x00007fab7411a220: mov    0x8(%rsi),%r10d
  0x00007fab7411a224: shl    $0x3,%r10
  0x00007fab7411a228: cmp    %rax,%r10
  0x00007fab7411a22b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7411a231: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7411a23c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7411a240: mov    %eax,-0x14000(%rsp)
  0x00007fab7411a247: push   %rbp
  0x00007fab7411a248: sub    $0xf0,%rsp
  0x00007fab7411a24f: movabs $0x7fab61b4b858,%rdi  ;   {metadata(method data for {method} {0x00007fab6191a870} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab7411a259: mov    0xfc(%rdi),%ebx
  0x00007fab7411a25f: add    $0x8,%ebx
  0x00007fab7411a262: mov    %ebx,0xfc(%rdi)
  0x00007fab7411a268: movabs $0x7fab6191a870,%rdi  ;   {metadata({method} {0x00007fab6191a870} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab7411a272: and    $0x1ff8,%ebx
  0x00007fab7411a278: cmp    $0x0,%ebx
  0x00007fab7411a27b: je     0x00007fab7411a60a  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@0 (line 202)

  0x00007fab7411a281: mov    %rsi,%rdi
  0x00007fab7411a284: movabs $0x7fab61b4b858,%rbx  ;   {metadata(method data for {method} {0x00007fab6191a870} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab7411a28e: addq   $0x1,0x130(%rbx)
  0x00007fab7411a296: movabs $0x7fab61b4c980,%rdi  ;   {metadata(method data for {method} {0x00007fab61917048} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7411a2a0: mov    0xfc(%rdi),%ebx
  0x00007fab7411a2a6: add    $0x8,%ebx
  0x00007fab7411a2a9: mov    %ebx,0xfc(%rdi)
  0x00007fab7411a2af: movabs $0x7fab61917048,%rdi  ;   {metadata({method} {0x00007fab61917048} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7411a2b9: and    $0x7ffff8,%ebx
  0x00007fab7411a2bf: cmp    $0x0,%ebx
  0x00007fab7411a2c2: je     0x00007fab7411a621
  0x00007fab7411a2c8: mov    0xc(%rsi),%edi     ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007fab7411a2cb: inc    %edi
  0x00007fab7411a2cd: mov    %rsi,%rbx
  0x00007fab7411a2d0: movabs $0x7fab61b4c980,%rax  ;   {metadata(method data for {method} {0x00007fab61917048} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7411a2da: addq   $0x1,0x130(%rax)
  0x00007fab7411a2e2: movabs $0x7fab61af6de0,%rbx  ;   {metadata(method data for {method} {0x00007fab61915be0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7411a2ec: mov    0xfc(%rbx),%eax
  0x00007fab7411a2f2: add    $0x8,%eax
  0x00007fab7411a2f5: mov    %eax,0xfc(%rbx)
  0x00007fab7411a2fb: movabs $0x7fab61915be0,%rbx  ;   {metadata({method} {0x00007fab61915be0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7411a305: and    $0x7ffff8,%eax
  0x00007fab7411a30b: cmp    $0x0,%eax
  0x00007fab7411a30e: je     0x00007fab7411a638
  0x00007fab7411a314: mov    0x10(%rsi),%ebx
  0x00007fab7411a317: shl    $0x3,%rbx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007fab7411a31b: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; implicit exception: dispatches to 0x00007fab7411a64f
  0x00007fab7411a31e: mov    %rdi,%rcx
  0x00007fab7411a321: sub    %eax,%ecx
  0x00007fab7411a323: cmp    $0x0,%ecx
  0x00007fab7411a326: movabs $0x7fab61af6de0,%rcx  ;   {metadata(method data for {method} {0x00007fab61915be0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7411a330: movabs $0x130,%r8
  0x00007fab7411a33a: jle    0x00007fab7411a34a
  0x00007fab7411a340: movabs $0x140,%r8
  0x00007fab7411a34a: mov    (%rcx,%r8,1),%r9
  0x00007fab7411a34e: lea    0x1(%r9),%r9
  0x00007fab7411a352: mov    %r9,(%rcx,%r8,1)
  0x00007fab7411a356: jg     0x00007fab7411a368  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007fab7411a35c: mov    %edx,0xc4(%rsp)
  0x00007fab7411a363: jmpq   0x00007fab7411a5ce  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007fab7411a368: mov    %eax,0xc0(%rsp)
  0x00007fab7411a36f: mov    %rbx,0xc8(%rsp)
  0x00007fab7411a377: mov    %edx,0xc4(%rsp)
  0x00007fab7411a37e: mov    %rsi,%rcx
  0x00007fab7411a381: movabs $0x7fab61af6de0,%r8  ;   {metadata(method data for {method} {0x00007fab61915be0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7411a38b: addq   $0x1,0x150(%r8)
  0x00007fab7411a393: mov    %rdi,%rdx
  0x00007fab7411a396: mov    %rsi,%rdi
  0x00007fab7411a399: mov    %rdi,%rsi          ;*invokespecial newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007fab7411a39c: mov    %rdi,0xd0(%rsp)
  0x00007fab7411a3a4: nop
  0x00007fab7411a3a5: nop
  0x00007fab7411a3a6: nop
  0x00007fab7411a3a7: callq  0x00007fab74047d60  ; OopMap{[208]=Oop [200]=Oop off=396}
                                                ;*invokespecial newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {optimized virtual_call}
  0x00007fab7411a3ac: mov    %rax,%r8           ;*invokespecial newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007fab7411a3af: movabs $0x7fab61af6de0,%rbx  ;   {metadata(method data for {method} {0x00007fab61915be0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7411a3b9: addq   $0x1,0x160(%rbx)
  0x00007fab7411a3c1: movabs $0x7fab61af7188,%rbx  ;   {metadata(method data for {method} {0x00007fab619ce750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7411a3cb: mov    0xfc(%rbx),%edx
  0x00007fab7411a3d1: add    $0x8,%edx
  0x00007fab7411a3d4: mov    %edx,0xfc(%rbx)
  0x00007fab7411a3da: movabs $0x7fab619ce750,%rbx  ;   {metadata({method} {0x00007fab619ce750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7411a3e4: and    $0x7ffff8,%edx
  0x00007fab7411a3ea: cmp    $0x0,%edx
  0x00007fab7411a3ed: je     0x00007fab7411a654
  0x00007fab7411a3f3: mov    %r8,%rbx
  0x00007fab7411a3f6: movabs $0x7c00001f8,%rdx  ;   {metadata({type array char})}
  0x00007fab7411a400: movslq %ebx,%rbx
  0x00007fab7411a403: mov    %rbx,%rdi
  0x00007fab7411a406: cmp    $0xffffff,%rbx
  0x00007fab7411a40d: ja     0x00007fab7411a66b
  0x00007fab7411a413: movabs $0x17,%rsi
  0x00007fab7411a41d: lea    (%rsi,%rbx,2),%rsi
  0x00007fab7411a421: and    $0xfffffffffffffff8,%rsi
  0x00007fab7411a425: mov    0x60(%r15),%rax
  0x00007fab7411a429: lea    (%rax,%rsi,1),%rsi
  0x00007fab7411a42d: cmp    0x70(%r15),%rsi
  0x00007fab7411a431: ja     0x00007fab7411a66b
  0x00007fab7411a437: mov    %rsi,0x60(%r15)
  0x00007fab7411a43b: sub    %rax,%rsi
  0x00007fab7411a43e: movq   $0x1,(%rax)
  0x00007fab7411a445: mov    %rdx,%rcx
  0x00007fab7411a448: shr    $0x3,%rcx
  0x00007fab7411a44c: mov    %ecx,0x8(%rax)
  0x00007fab7411a44f: mov    %ebx,0xc(%rax)
  0x00007fab7411a452: sub    $0x10,%rsi
  0x00007fab7411a456: je     0x00007fab7411a46d
  0x00007fab7411a45c: xor    %rbx,%rbx
  0x00007fab7411a45f: shr    $0x3,%rsi
  0x00007fab7411a463: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fab7411a468: dec    %rsi
  0x00007fab7411a46b: jne    0x00007fab7411a463  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007fab7411a46d: movabs $0x7fab61af7188,%rsi  ;   {metadata(method data for {method} {0x00007fab619ce750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7411a477: addq   $0x1,0x130(%rsi)
  0x00007fab7411a47f: movabs $0x7fab61a9c058,%rsi  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7411a489: mov    0xfc(%rsi),%edx
  0x00007fab7411a48f: add    $0x8,%edx
  0x00007fab7411a492: mov    %edx,0xfc(%rsi)
  0x00007fab7411a498: movabs $0x7fab619a58b8,%rsi  ;   {metadata({method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7411a4a2: and    $0x7ffff8,%edx
  0x00007fab7411a4a8: cmp    $0x0,%edx
  0x00007fab7411a4ab: je     0x00007fab7411a675
  0x00007fab7411a4b1: mov    0xc0(%rsp),%esi
  0x00007fab7411a4b8: cmp    %r8d,%esi
  0x00007fab7411a4bb: movabs $0x7fab61a9c058,%rdx  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7411a4c5: movabs $0x130,%rcx
  0x00007fab7411a4cf: jg     0x00007fab7411a4df
  0x00007fab7411a4d5: movabs $0x140,%rcx
  0x00007fab7411a4df: mov    (%rdx,%rcx,1),%r9
  0x00007fab7411a4e3: lea    0x1(%r9),%r9
  0x00007fab7411a4e7: mov    %r9,(%rdx,%rcx,1)
  0x00007fab7411a4eb: jg     0x00007fab7411a509  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007fab7411a4f1: movabs $0x7fab61a9c058,%rdx  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7411a4fb: incl   0x150(%rdx)
  0x00007fab7411a501: mov    %rsi,%r9
  0x00007fab7411a504: jmpq   0x00007fab7411a50c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007fab7411a509: mov    %r8,%r9            ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007fab7411a50c: mov    0xc8(%rsp),%rbx
  0x00007fab7411a514: movabs $0x7fab61af7188,%rsi  ;   {metadata(method data for {method} {0x00007fab619ce750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7411a51e: addq   $0x1,0x140(%rsi)
  0x00007fab7411a526: mov    %rbx,%rsi
  0x00007fab7411a529: mov    $0x0,%edx
  0x00007fab7411a52e: mov    %rax,%rcx
  0x00007fab7411a531: mov    $0x0,%r8d
  0x00007fab7411a537: mov    %rax,0xd8(%rsp)
  0x00007fab7411a53f: lea    (%rdx,%r9,1),%rdi
  0x00007fab7411a543: cmp    0xc(%rsi),%edi
  0x00007fab7411a546: ja     0x00007fab7411a68c
  0x00007fab7411a54c: lea    (%r8,%r9,1),%rdi
  0x00007fab7411a550: cmp    0xc(%rcx),%edi
  0x00007fab7411a553: ja     0x00007fab7411a68c
  0x00007fab7411a559: test   %r9d,%r9d
  0x00007fab7411a55c: jl     0x00007fab7411a68c
  0x00007fab7411a562: je     0x00007fab7411a59e
  0x00007fab7411a568: movslq %edx,%rdx
  0x00007fab7411a56b: movslq %r8d,%r8
  0x00007fab7411a56e: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007fab7411a573: lea    0x10(%rcx,%r8,2),%rsi
  0x00007fab7411a578: mov    %r9,%rdx
  0x00007fab7411a57b: test   $0xf,%esp
  0x00007fab7411a581: je     0x00007fab7411a599
  0x00007fab7411a587: sub    $0x8,%rsp
  0x00007fab7411a58b: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007fab7411a590: add    $0x8,%rsp
  0x00007fab7411a594: jmpq   0x00007fab7411a59e
  0x00007fab7411a599: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00007fab7411a59e: mov    0xd8(%rsp),%rax
  0x00007fab7411a5a6: mov    0xd0(%rsp),%rsi
  0x00007fab7411a5ae: mov    %rax,%r10
  0x00007fab7411a5b1: shr    $0x3,%r10
  0x00007fab7411a5b5: mov    %r10d,0x10(%rsi)
  0x00007fab7411a5b9: mov    %rsi,%rax
  0x00007fab7411a5bc: shr    $0x9,%rax
  0x00007fab7411a5c0: movabs $0x7fab701ff000,%rdi
  0x00007fab7411a5ca: movb   $0x0,(%rax,%rdi,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007fab7411a5ce: mov    0xc4(%rsp),%edx
  0x00007fab7411a5d5: mov    0x10(%rsi),%eax
  0x00007fab7411a5d8: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007fab7411a5dc: mov    0xc(%rsi),%edi     ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007fab7411a5df: mov    %rdi,%rbx
  0x00007fab7411a5e2: inc    %ebx
  0x00007fab7411a5e4: mov    %ebx,0xc(%rsi)     ;*putfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007fab7411a5e7: movslq %edi,%rbx
  0x00007fab7411a5ea: cmp    0xc(%rax),%edi     ; implicit exception: dispatches to 0x00007fab7411a699
  0x00007fab7411a5ed: jae    0x00007fab7411a6a3
  0x00007fab7411a5f3: mov    %dx,0x10(%rax,%rbx,2)  ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007fab7411a5f8: mov    %rsi,%rax
  0x00007fab7411a5fb: add    $0xf0,%rsp
  0x00007fab7411a602: pop    %rbp
  0x00007fab7411a603: test   %eax,0x1b6c7af7(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411a609: retq   
  0x00007fab7411a60a: mov    %rdi,0x8(%rsp)
  0x00007fab7411a60f: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411a617: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=1020}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 202)
                                                ;   {runtime_call}
  0x00007fab7411a61c: jmpq   0x00007fab7411a281
  0x00007fab7411a621: mov    %rdi,0x8(%rsp)
  0x00007fab7411a626: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411a62e: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=1043}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00007fab7411a633: jmpq   0x00007fab7411a2c8
  0x00007fab7411a638: mov    %rbx,0x8(%rsp)
  0x00007fab7411a63d: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411a645: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=1066}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00007fab7411a64a: jmpq   0x00007fab7411a314
  0x00007fab7411a64f: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rbx=Oop off=1076}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00007fab7411a654: mov    %rbx,0x8(%rsp)
  0x00007fab7411a659: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411a661: callq  0x00007fab741005e0  ; OopMap{[208]=Oop [200]=Oop off=1094}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00007fab7411a666: jmpq   0x00007fab7411a3f3
  0x00007fab7411a66b: callq  0x00007fab740fd020  ; OopMap{[208]=Oop [200]=Oop off=1104}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00007fab7411a670: jmpq   0x00007fab7411a46d
  0x00007fab7411a675: mov    %rsi,0x8(%rsp)
  0x00007fab7411a67a: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411a682: callq  0x00007fab741005e0  ; OopMap{[208]=Oop [200]=Oop rax=Oop off=1127}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00007fab7411a687: jmpq   0x00007fab7411a4b1
  0x00007fab7411a68c: nop
  0x00007fab7411a68d: nop
  0x00007fab7411a68e: nop
  0x00007fab7411a68f: callq  0x00007fab74048160  ; OopMap{[208]=Oop [216]=Oop off=1140}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {static_call}
  0x00007fab7411a694: jmpq   0x00007fab7411a59e
  0x00007fab7411a699: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rax=Oop off=1150}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00007fab7411a69e: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rax=Oop off=1155}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00007fab7411a6a3: mov    %rdi,(%rsp)
  0x00007fab7411a6a7: callq  0x00007fab740fb940  ; OopMap{rsi=Oop rax=Oop off=1164}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00007fab7411a6ac: nop
  0x00007fab7411a6ad: nop
  0x00007fab7411a6ae: mov    0x2c0(%r15),%rax
  0x00007fab7411a6b5: movabs $0x0,%r10
  0x00007fab7411a6bf: mov    %r10,0x2c0(%r15)
  0x00007fab7411a6c6: movabs $0x0,%r10
  0x00007fab7411a6d0: mov    %r10,0x2c8(%r15)
  0x00007fab7411a6d7: add    $0xf0,%rsp
  0x00007fab7411a6de: pop    %rbp
  0x00007fab7411a6df: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7411a6e4: hlt    
  0x00007fab7411a6e5: hlt    
  0x00007fab7411a6e6: hlt    
  0x00007fab7411a6e7: hlt    
  0x00007fab7411a6e8: hlt    
  0x00007fab7411a6e9: hlt    
  0x00007fab7411a6ea: hlt    
  0x00007fab7411a6eb: hlt    
  0x00007fab7411a6ec: hlt    
  0x00007fab7411a6ed: hlt    
  0x00007fab7411a6ee: hlt    
  0x00007fab7411a6ef: hlt    
  0x00007fab7411a6f0: hlt    
  0x00007fab7411a6f1: hlt    
  0x00007fab7411a6f2: hlt    
  0x00007fab7411a6f3: hlt    
  0x00007fab7411a6f4: hlt    
  0x00007fab7411a6f5: hlt    
  0x00007fab7411a6f6: hlt    
  0x00007fab7411a6f7: hlt    
  0x00007fab7411a6f8: hlt    
  0x00007fab7411a6f9: hlt    
  0x00007fab7411a6fa: hlt    
  0x00007fab7411a6fb: hlt    
  0x00007fab7411a6fc: hlt    
  0x00007fab7411a6fd: hlt    
  0x00007fab7411a6fe: hlt    
  0x00007fab7411a6ff: hlt    
[Stub Code]
  0x00007fab7411a700: nop                       ;   {no_reloc}
  0x00007fab7411a701: nop
  0x00007fab7411a702: nop
  0x00007fab7411a703: nop
  0x00007fab7411a704: nop
  0x00007fab7411a705: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411a70f: jmpq   0x00007fab7411a70f  ;   {runtime_call}
  0x00007fab7411a714: nop
  0x00007fab7411a715: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411a71f: jmpq   0x00007fab7411a71f  ;   {runtime_call}
[Exception Handler]
  0x00007fab7411a724: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab7411a729: mov    %rsp,-0x28(%rsp)
  0x00007fab7411a72e: sub    $0x80,%rsp
  0x00007fab7411a735: mov    %rax,0x78(%rsp)
  0x00007fab7411a73a: mov    %rcx,0x70(%rsp)
  0x00007fab7411a73f: mov    %rdx,0x68(%rsp)
  0x00007fab7411a744: mov    %rbx,0x60(%rsp)
  0x00007fab7411a749: mov    %rbp,0x50(%rsp)
  0x00007fab7411a74e: mov    %rsi,0x48(%rsp)
  0x00007fab7411a753: mov    %rdi,0x40(%rsp)
  0x00007fab7411a758: mov    %r8,0x38(%rsp)
  0x00007fab7411a75d: mov    %r9,0x30(%rsp)
  0x00007fab7411a762: mov    %r10,0x28(%rsp)
  0x00007fab7411a767: mov    %r11,0x20(%rsp)
  0x00007fab7411a76c: mov    %r12,0x18(%rsp)
  0x00007fab7411a771: mov    %r13,0x10(%rsp)
  0x00007fab7411a776: mov    %r14,0x8(%rsp)
  0x00007fab7411a77b: mov    %r15,(%rsp)
  0x00007fab7411a77f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7411a789: movabs $0x7fab7411a729,%rsi  ;   {internal_word}
  0x00007fab7411a793: mov    %rsp,%rdx
  0x00007fab7411a796: and    $0xfffffffffffffff0,%rsp
  0x00007fab7411a79a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7411a79f: hlt    
[Deopt Handler Code]
  0x00007fab7411a7a0: movabs $0x7fab7411a7a0,%r10  ;   {section_word}
  0x00007fab7411a7aa: push   %r10
  0x00007fab7411a7ac: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7411a7b1: hlt    
  0x00007fab7411a7b2: hlt    
  0x00007fab7411a7b3: hlt    
  0x00007fab7411a7b4: hlt    
  0x00007fab7411a7b5: hlt    
  0x00007fab7411a7b6: hlt    
  0x00007fab7411a7b7: hlt    
<nmethod compile_id='26' compiler='C1' level='3' entry='0x00007fab7411a220' size='2816' address='0x00007fab7411a050' relocation_offset='312' insts_offset='464' stub_offset='1712' scopes_data_offset='1936' scopes_pcs_offset='2264' dependencies_offset='2776' nul_chk_table_offset='2784' metadata_offset='1896' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='355' iicount='355' stamp='0.152'/>
<writer thread='140373948942080'/>
[Loaded sun.nio.ch.IOUtil$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/ref/Reference.get  [0x00007fab7411ad00, 0x00007fab7411ae10]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab618bf3f8} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/Reference&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab7411ad00: mov    0x8(%rsi),%r10d
  0x00007fab7411ad04: shl    $0x3,%r10
  0x00007fab7411ad08: cmp    %rax,%r10
  0x00007fab7411ad0b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7411ad11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7411ad1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7411ad20: mov    %eax,-0x14000(%rsp)
  0x00007fab7411ad27: push   %rbp
  0x00007fab7411ad28: sub    $0x30,%rsp
  0x00007fab7411ad2c: mov    0xc(%rsi),%eax
  0x00007fab7411ad2f: shl    $0x3,%rax          ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.Reference::get@0 (line 254)

  0x00007fab7411ad33: add    $0x30,%rsp
  0x00007fab7411ad37: pop    %rbp
  0x00007fab7411ad38: test   %eax,0x1b6c73c2(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411ad3e: retq   
  0x00007fab7411ad3f: nop
  0x00007fab7411ad40: nop
  0x00007fab7411ad41: mov    0x2c0(%r15),%rax
  0x00007fab7411ad48: movabs $0x0,%r10
  0x00007fab7411ad52: mov    %r10,0x2c0(%r15)
  0x00007fab7411ad59: movabs $0x0,%r10
  0x00007fab7411ad63: mov    %r10,0x2c8(%r15)
  0x00007fab7411ad6a: add    $0x30,%rsp
  0x00007fab7411ad6e: pop    %rbp
  0x00007fab7411ad6f: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7411ad74: hlt    
  0x00007fab7411ad75: hlt    
  0x00007fab7411ad76: hlt    
  0x00007fab7411ad77: hlt    
  0x00007fab7411ad78: hlt    
  0x00007fab7411ad79: hlt    
  0x00007fab7411ad7a: hlt    
  0x00007fab7411ad7b: hlt    
  0x00007fab7411ad7c: hlt    
  0x00007fab7411ad7d: hlt    
  0x00007fab7411ad7e: hlt    
  0x00007fab7411ad7f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab7411ad80: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7411ad85: mov    %rsp,-0x28(%rsp)
  0x00007fab7411ad8a: sub    $0x80,%rsp
  0x00007fab7411ad91: mov    %rax,0x78(%rsp)
  0x00007fab7411ad96: mov    %rcx,0x70(%rsp)
  0x00007fab7411ad9b: mov    %rdx,0x68(%rsp)
  0x00007fab7411ada0: mov    %rbx,0x60(%rsp)
  0x00007fab7411ada5: mov    %rbp,0x50(%rsp)
  0x00007fab7411adaa: mov    %rsi,0x48(%rsp)
  0x00007fab7411adaf: mov    %rdi,0x40(%rsp)
  0x00007fab7411adb4: mov    %r8,0x38(%rsp)
  0x00007fab7411adb9: mov    %r9,0x30(%rsp)
  0x00007fab7411adbe: mov    %r10,0x28(%rsp)
  0x00007fab7411adc3: mov    %r11,0x20(%rsp)
  0x00007fab7411adc8: mov    %r12,0x18(%rsp)
  0x00007fab7411adcd: mov    %r13,0x10(%rsp)
  0x00007fab7411add2: mov    %r14,0x8(%rsp)
  0x00007fab7411add7: mov    %r15,(%rsp)
  0x00007fab7411addb: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7411ade5: movabs $0x7fab7411ad85,%rsi  ;   {internal_word}
  0x00007fab7411adef: mov    %rsp,%rdx
  0x00007fab7411adf2: and    $0xfffffffffffffff0,%rsp
  0x00007fab7411adf6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7411adfb: hlt    
[Deopt Handler Code]
  0x00007fab7411adfc: movabs $0x7fab7411adfc,%r10  ;   {section_word}
  0x00007fab7411ae06: push   %r10
  0x00007fab7411ae08: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7411ae0d: hlt    
  0x00007fab7411ae0e: hlt    
  0x00007fab7411ae0f: hlt    
<nmethod compile_id='29' compiler='C1' level='1' entry='0x00007fab7411ad00' size='712' address='0x00007fab7411ab90' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='656' dependencies_offset='704' metadata_offset='640' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='384' iicount='384' stamp='0.152'/>
----------------------------------------------------------------------
java/lang/System.getSecurityManager  [0x00007fab7411b000, 0x00007fab7411b150]  336 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab618ae598} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab7411b000: mov    %eax,-0x14000(%rsp)
  0x00007fab7411b007: push   %rbp
  0x00007fab7411b008: sub    $0x30,%rsp
  0x00007fab7411b00c: movabs $0x7fab61b51e58,%rax  ;   {metadata(method data for {method} {0x00007fab618ae598} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00007fab7411b016: mov    0xfc(%rax),%esi
  0x00007fab7411b01c: add    $0x8,%esi
  0x00007fab7411b01f: mov    %esi,0xfc(%rax)
  0x00007fab7411b025: movabs $0x7fab618ae598,%rax  ;   {metadata({method} {0x00007fab618ae598} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00007fab7411b02f: and    $0x1ff8,%esi
  0x00007fab7411b035: cmp    $0x0,%esi
  0x00007fab7411b038: je     0x00007fab7411b05b
  0x00007fab7411b03e: movabs $0x670b80c78,%rax  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007fab7411b048: mov    0x74(%rax),%eax
  0x00007fab7411b04b: shl    $0x3,%rax          ;*getstatic security {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x00007fab7411b04f: add    $0x30,%rsp
  0x00007fab7411b053: pop    %rbp
  0x00007fab7411b054: test   %eax,0x1b6c70a6(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411b05a: retq   
  0x00007fab7411b05b: mov    %rax,0x8(%rsp)
  0x00007fab7411b060: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411b068: callq  0x00007fab741005e0  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x00007fab7411b06d: jmp    0x00007fab7411b03e
  0x00007fab7411b06f: nop
  0x00007fab7411b070: nop
  0x00007fab7411b071: mov    0x2c0(%r15),%rax
  0x00007fab7411b078: movabs $0x0,%r10
  0x00007fab7411b082: mov    %r10,0x2c0(%r15)
  0x00007fab7411b089: movabs $0x0,%r10
  0x00007fab7411b093: mov    %r10,0x2c8(%r15)
  0x00007fab7411b09a: add    $0x30,%rsp
  0x00007fab7411b09e: pop    %rbp
  0x00007fab7411b09f: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7411b0a4: hlt    
  0x00007fab7411b0a5: hlt    
  0x00007fab7411b0a6: hlt    
  0x00007fab7411b0a7: hlt    
  0x00007fab7411b0a8: hlt    
  0x00007fab7411b0a9: hlt    
  0x00007fab7411b0aa: hlt    
  0x00007fab7411b0ab: hlt    
  0x00007fab7411b0ac: hlt    
  0x00007fab7411b0ad: hlt    
  0x00007fab7411b0ae: hlt    
  0x00007fab7411b0af: hlt    
  0x00007fab7411b0b0: hlt    
  0x00007fab7411b0b1: hlt    
  0x00007fab7411b0b2: hlt    
  0x00007fab7411b0b3: hlt    
  0x00007fab7411b0b4: hlt    
  0x00007fab7411b0b5: hlt    
  0x00007fab7411b0b6: hlt    
  0x00007fab7411b0b7: hlt    
  0x00007fab7411b0b8: hlt    
  0x00007fab7411b0b9: hlt    
  0x00007fab7411b0ba: hlt    
  0x00007fab7411b0bb: hlt    
  0x00007fab7411b0bc: hlt    
  0x00007fab7411b0bd: hlt    
  0x00007fab7411b0be: hlt    
  0x00007fab7411b0bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab7411b0c0: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7411b0c5: mov    %rsp,-0x28(%rsp)
  0x00007fab7411b0ca: sub    $0x80,%rsp
  0x00007fab7411b0d1: mov    %rax,0x78(%rsp)
  0x00007fab7411b0d6: mov    %rcx,0x70(%rsp)
  0x00007fab7411b0db: mov    %rdx,0x68(%rsp)
  0x00007fab7411b0e0: mov    %rbx,0x60(%rsp)
  0x00007fab7411b0e5: mov    %rbp,0x50(%rsp)
  0x00007fab7411b0ea: mov    %rsi,0x48(%rsp)
  0x00007fab7411b0ef: mov    %rdi,0x40(%rsp)
  0x00007fab7411b0f4: mov    %r8,0x38(%rsp)
<writer thread='140373948942080'/>
[Loaded sun.nio.ch.NativeThreadSet from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>

  0x00007fab7411b0f9: mov    %r9,0x30(%rsp)
  0x00007fab7411b0fe: mov    %r10,0x28(%rsp)
  0x00007fab7411b103: mov    %r11,0x20(%rsp)
  0x00007fab7411b108: mov    %r12,0x18(%rsp)
  0x00007fab7411b10d: mov    %r13,0x10(%rsp)
  0x00007fab7411b112: mov    %r14,0x8(%rsp)
  0x00007fab7411b117: mov    %r15,(%rsp)
  0x00007fab7411b11b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7411b125: movabs $0x7fab7411b0c5,%rsi  ;   {internal_word}
  0x00007fab7411b12f: mov    %rsp,%rdx
  0x00007fab7411b132: and    $0xfffffffffffffff0,%rsp
  0x00007fab7411b136: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7411b13b: hlt    
[Deopt Handler Code]
  0x00007fab7411b13c: movabs $0x7fab7411b13c,%r10  ;   {section_word}
  0x00007fab7411b146: push   %r10
  0x00007fab7411b148: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7411b14d: hlt    
  0x00007fab7411b14e: hlt    
  0x00007fab7411b14f: hlt    
<nmethod compile_id='28' compiler='C1' level='3' entry='0x00007fab7411b000' size='800' address='0x00007fab7411ae90' relocation_offset='312' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='263' iicount='263' stamp='0.153'/>
<writer thread='140373948942080'/>
[Loaded sun.nio.ch.NativeDispatcher from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.ch.FileDispatcher from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.ch.FileDispatcherImpl from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.channels.Channels from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.ch.ChannelInputStream from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.ch.Interruptible from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.channels.spi.AbstractInterruptibleChannel$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.ch.NativeThread from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.ch.IOStatus from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.channels.SelectableChannel from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.ch.Util from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.ch.Util$2 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.ch.Util$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.ch.Util$BufferCache from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.nio.DirectByteBuffer$Deallocator from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.ArrayList$SubList from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.ListIterator from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.ArrayList$SubList$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<task_queued compile_id='31' method='sun/nio/fs/UnixUriUtils match (CJJ)Z' bytes='50' count='384' iicount='384' level='3' stamp='0.154' comment='tiered' hot_count='384'/>
<task_queued compile_id='32' method='java/net/URI access$300 (CJJ)Z' bytes='7' count='384' iicount='384' level='3' stamp='0.154' comment='tiered' hot_count='384'/>
<task_queued compile_id='33' method='java/net/URI match (CJJ)Z' bytes='56' count='384' iicount='384' level='3' stamp='0.154' comment='tiered' hot_count='384'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
sun/nio/fs/UnixUriUtils.match  [0x00007fab7411c1c0, 0x00007fab7411c490]  720 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab61b3e430} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;sun/nio/fs/UnixUriUtils&apos;
  # parm0:    rsi       = char
  # parm1:    rdx:rdx   = long
  # parm2:    rcx:rcx   = long
  #           [sp+0x40]  (sp of caller)
  0x00007fab7411c1c0: mov    %eax,-0x14000(%rsp)
  0x00007fab7411c1c7: push   %rbp
  0x00007fab7411c1c8: sub    $0x30,%rsp
  0x00007fab7411c1cc: mov    %rcx,%rax
  0x00007fab7411c1cf: movabs $0x7fab61b62910,%rcx  ;   {metadata(method data for {method} {0x00007fab61b3e430} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;sun/nio/fs/UnixUriUtils&apos;)}
  0x00007fab7411c1d9: mov    0xfc(%rcx),%edi
  0x00007fab7411c1df: add    $0x8,%edi
  0x00007fab7411c1e2: mov    %edi,0xfc(%rcx)
  0x00007fab7411c1e8: movabs $0x7fab61b3e430,%rcx  ;   {metadata({method} {0x00007fab61b3e430} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;sun/nio/fs/UnixUriUtils&apos;)}
  0x00007fab7411c1f2: and    $0x1ff8,%edi
  0x00007fab7411c1f8: cmp    $0x0,%edi
  0x00007fab7411c1fb: je     0x00007fab7411c397  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@0 (line 182)

<writer thread='140373948942080'/>
[Loaded java.net.URLClassLoader$5 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
  0x00007fab7411c201: cmp    $0x40,%esi
  0x00007fab7411c204: movabs $0x7fab61b62910,%rcx  ;   {metadata(method data for {method} {0x00007fab61b3e430} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;sun/nio/fs/UnixUriUtils&apos;)}
  0x00007fab7411c20e: movabs $0x130,%rdi
  0x00007fab7411c218: jge    0x00007fab7411c228
  0x00007fab7411c21e: movabs $0x140,%rdi
  0x00007fab7411c228: mov    (%rcx,%rdi,1),%rbx
  0x00007fab7411c22c: lea    0x1(%rbx),%rbx
  0x00007fab7411c230: mov    %rbx,(%rcx,%rdi,1)
  0x00007fab7411c234: jge    0x00007fab7411c295  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@3 (line 182)

  0x00007fab7411c23a: mov    %rsi,%rcx
  0x00007fab7411c23d: movabs $0x1,%rax
  0x00007fab7411c247: shl    %cl,%rax
  0x00007fab7411c24a: and    %rdx,%rax
  0x00007fab7411c24d: movabs $0x0,%rcx
  0x00007fab7411c257: cmp    %rcx,%rax
  0x00007fab7411c25a: movabs $0x7fab61b62910,%rcx  ;   {metadata(method data for {method} {0x00007fab61b3e430} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;sun/nio/fs/UnixUriUtils&apos;)}
  0x00007fab7411c264: movabs $0x160,%rax
  0x00007fab7411c26e: jne    0x00007fab7411c27e
  0x00007fab7411c274: movabs $0x150,%rax
  0x00007fab7411c27e: mov    (%rcx,%rax,1),%rsi
  0x00007fab7411c282: lea    0x1(%rsi),%rsi
  0x00007fab7411c286: mov    %rsi,(%rcx,%rax,1)
  0x00007fab7411c28a: jne    0x00007fab7411c373
  0x00007fab7411c290: jmpq   0x00007fab7411c369  ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@12 (line 183)

  0x00007fab7411c295: cmp    $0x80,%esi
  0x00007fab7411c29b: movabs $0x7fab61b62910,%rcx  ;   {metadata(method data for {method} {0x00007fab61b3e430} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;sun/nio/fs/UnixUriUtils&apos;)}
  0x00007fab7411c2a5: movabs $0x188,%rdi
  0x00007fab7411c2af: jge    0x00007fab7411c2bf
  0x00007fab7411c2b5: movabs $0x198,%rdi
  0x00007fab7411c2bf: mov    (%rcx,%rdi,1),%rbx
  0x00007fab7411c2c3: lea    0x1(%rbx),%rbx
  0x00007fab7411c2c7: mov    %rbx,(%rcx,%rdi,1)
  0x00007fab7411c2cb: jge    0x00007fab7411c358  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@26 (line 184)

  0x00007fab7411c2d1: sub    $0x40,%esi
  0x00007fab7411c2d4: mov    %rsi,%rcx
  0x00007fab7411c2d7: movabs $0x1,%rsi
  0x00007fab7411c2e1: shl    %cl,%rsi
  0x00007fab7411c2e4: and    %rax,%rsi
  0x00007fab7411c2e7: movabs $0x0,%rax
  0x00007fab7411c2f1: cmp    %rax,%rsi
  0x00007fab7411c2f4: movabs $0x7fab61b62910,%rax  ;   {metadata(method data for {method} {0x00007fab61b3e430} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;sun/nio/fs/UnixUriUtils&apos;)}
  0x00007fab7411c2fe: movabs $0x1b8,%rsi
  0x00007fab7411c308: jne    0x00007fab7411c318
  0x00007fab7411c30e: movabs $0x1a8,%rsi
  0x00007fab7411c318: mov    (%rax,%rsi,1),%rdi
  0x00007fab7411c31c: lea    0x1(%rdi),%rdi
  0x00007fab7411c320: mov    %rdi,(%rax,%rsi,1)
  0x00007fab7411c324: jne    0x00007fab7411c334  ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@38 (line 185)

  0x00007fab7411c32a: mov    $0x0,%eax
  0x00007fab7411c32f: jmpq   0x00007fab7411c349  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@47 (line 185)

  0x00007fab7411c334: movabs $0x7fab61b62910,%rax  ;   {metadata(method data for {method} {0x00007fab61b3e430} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;sun/nio/fs/UnixUriUtils&apos;)}
  0x00007fab7411c33e: incl   0x1c8(%rax)
  0x00007fab7411c344: mov    $0x1,%eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@43 (line 185)

  0x00007fab7411c349: and    $0x1,%eax
  0x00007fab7411c34c: add    $0x30,%rsp
  0x00007fab7411c350: pop    %rbp
  0x00007fab7411c351: test   %eax,0x1b6c5da9(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411c357: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@47 (line 185)

  0x00007fab7411c358: mov    $0x0,%eax
  0x00007fab7411c35d: add    $0x30,%rsp
  0x00007fab7411c361: pop    %rbp
  0x00007fab7411c362: test   %eax,0x1b6c5d98(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411c368: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@49 (line 186)

  0x00007fab7411c369: mov    $0x0,%eax
  0x00007fab7411c36e: jmpq   0x00007fab7411c388  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@21 (line 183)

  0x00007fab7411c373: movabs $0x7fab61b62910,%rax  ;   {metadata(method data for {method} {0x00007fab61b3e430} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;sun/nio/fs/UnixUriUtils&apos;)}
  0x00007fab7411c37d: incl   0x170(%rax)
  0x00007fab7411c383: mov    $0x1,%eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@17 (line 183)

  0x00007fab7411c388: and    $0x1,%eax
  0x00007fab7411c38b: add    $0x30,%rsp
  0x00007fab7411c38f: pop    %rbp
  0x00007fab7411c390: test   %eax,0x1b6c5d6a(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411c396: retq   
  0x00007fab7411c397: mov    %rcx,0x8(%rsp)
  0x00007fab7411c39c: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411c3a4: callq  0x00007fab741005e0  ; OopMap{off=489}
                                                ;*synchronization entry
                                                ; - sun.nio.fs.UnixUriUtils::match@-1 (line 182)
                                                ;   {runtime_call}
  0x00007fab7411c3a9: jmpq   0x00007fab7411c201
  0x00007fab7411c3ae: nop
  0x00007fab7411c3af: nop
  0x00007fab7411c3b0: mov    0x2c0(%r15),%rax
  0x00007fab7411c3b7: movabs $0x0,%r10
  0x00007fab7411c3c1: mov    %r10,0x2c0(%r15)
  0x00007fab7411c3c8: movabs $0x0,%r10
  0x00007fab7411c3d2: mov    %r10,0x2c8(%r15)
  0x00007fab7411c3d9: add    $0x30,%rsp
  0x00007fab7411c3dd: pop    %rbp
  0x00007fab7411c3de: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7411c3e3: hlt    
  0x00007fab7411c3e4: hlt    
  0x00007fab7411c3e5: hlt    
  0x00007fab7411c3e6: hlt    
  0x00007fab7411c3e7: hlt    
  0x00007fab7411c3e8: hlt    
  0x00007fab7411c3e9: hlt    
  0x00007fab7411c3ea: hlt    
  0x00007fab7411c3eb: hlt    
  0x00007fab7411c3ec: hlt    
  0x00007fab7411c3ed: hlt    
  0x00007fab7411c3ee: hlt    
  0x00007fab7411c3ef: hlt    
  0x00007fab7411c3f0: hlt    
  0x00007fab7411c3f1: hlt    
  0x00007fab7411c3f2: hlt    
  0x00007fab7411c3f3: hlt    
  0x00007fab7411c3f4: hlt    
  0x00007fab7411c3f5: hlt    
  0x00007fab7411c3f6: hlt    
  0x00007fab7411c3f7: hlt    
  0x00007fab7411c3f8: hlt    
  0x00007fab7411c3f9: hlt    
  0x00007fab7411c3fa: hlt    
  0x00007fab7411c3fb: hlt    
  0x00007fab7411c3fc: hlt    
  0x00007fab7411c3fd: hlt    
  0x00007fab7411c3fe: hlt    
  0x00007fab7411c3ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab7411c400: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7411c405: mov    %rsp,-0x28(%rsp)
  0x00007fab7411c40a: sub    $0x80,%rsp
  0x00007fab7411c411: mov    %rax,0x78(%rsp)
  0x00007fab7411c416: mov    %rcx,0x70(%rsp)
  0x00007fab7411c41b: mov    %rdx,0x68(%rsp)
  0x00007fab7411c420: mov    %rbx,0x60(%rsp)
  0x00007fab7411c425: mov    %rbp,0x50(%rsp)
  0x00007fab7411c42a: mov    %rsi,0x48(%rsp)
  0x00007fab7411c42f: mov    %rdi,0x40(%rsp)
  0x00007fab7411c434: mov    %r8,0x38(%rsp)
  0x00007fab7411c439: mov    %r9,0x30(%rsp)
  0x00007fab7411c43e: mov    %r10,0x28(%rsp)
  0x00007fab7411c443: mov    %r11,0x20(%rsp)
  0x00007fab7411c448: mov    %r12,0x18(%rsp)
  0x00007fab7411c44d: mov    %r13,0x10(%rsp)
  0x00007fab7411c452: mov    %r14,0x8(%rsp)
  0x00007fab7411c457: mov    %r15,(%rsp)
  0x00007fab7411c45b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7411c465: movabs $0x7fab7411c405,%rsi  ;   {internal_word}
  0x00007fab7411c46f: mov    %rsp,%rdx
  0x00007fab7411c472: and    $0xfffffffffffffff0,%rsp
  0x00007fab7411c476: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7411c47b: hlt    
[Deopt Handler Code]
  0x00007fab7411c47c: movabs $0x7fab7411c47c,%r10  ;   {section_word}
  0x00007fab7411c486: push   %r10
  0x00007fab7411c488: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7411c48d: hlt    
  0x00007fab7411c48e: hlt    
  0x00007fab7411c48f: hlt    
<nmethod compile_id='31' compiler='C1' level='3' entry='0x00007fab7411c1c0' size='1408' address='0x00007fab7411c050' relocation_offset='312' insts_offset='368' stub_offset='944' scopes_data_offset='1096' scopes_pcs_offset='1176' dependencies_offset='1400' metadata_offset='1088' method='sun/nio/fs/UnixUriUtils match (CJJ)Z' bytes='50' count='566' iicount='566' stamp='0.155'/>
<writer thread='140373948942080'/>
[Loaded java.net.FactoryURLClassLoader from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/net/URI.access$300  [0x00007fab7411c780, 0x00007fab7411c8e8]  360 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab61b25a10} &apos;access$300&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;
  # parm0:    rsi       = char
  # parm1:    rdx:rdx   = long
  # parm2:    rcx:rcx   = long
  #           [sp+0x50]  (sp of caller)
  0x00007fab7411c780: mov    %eax,-0x14000(%rsp)
  0x00007fab7411c787: push   %rbp
  0x00007fab7411c788: sub    $0x40,%rsp
  0x00007fab7411c78c: movabs $0x7fab61b62b38,%rdi  ;   {metadata(method data for {method} {0x00007fab61b25a10} &apos;access$300&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007fab7411c796: mov    0xfc(%rdi),%ebx
  0x00007fab7411c79c: add    $0x8,%ebx
  0x00007fab7411c79f: mov    %ebx,0xfc(%rdi)
  0x00007fab7411c7a5: movabs $0x7fab61b25a10,%rdi  ;   {metadata({method} {0x00007fab61b25a10} &apos;access$300&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007fab7411c7af: and    $0x1ff8,%ebx
  0x00007fab7411c7b5: cmp    $0x0,%ebx
  0x00007fab7411c7b8: je     0x00007fab7411c7eb  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::access$300@0 (line 464)

  0x00007fab7411c7be: movabs $0x7fab61b62b38,%rdi  ;   {metadata(method data for {method} {0x00007fab61b25a10} &apos;access$300&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007fab7411c7c8: addq   $0x1,0x130(%rdi)
  0x00007fab7411c7d0: nop
  0x00007fab7411c7d1: nop
  0x00007fab7411c7d2: nop
  0x00007fab7411c7d3: nop
  0x00007fab7411c7d4: nop
  0x00007fab7411c7d5: nop
  0x00007fab7411c7d6: nop
  0x00007fab7411c7d7: callq  0x00007fab74048160  ; OopMap{off=92}
                                                ;*invokestatic match {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::access$300@3 (line 464)
                                                ;   {static_call}
  0x00007fab7411c7dc: and    $0x1,%eax
  0x00007fab7411c7df: add    $0x40,%rsp
  0x00007fab7411c7e3: pop    %rbp
  0x00007fab7411c7e4: test   %eax,0x1b6c5916(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411c7ea: retq   
  0x00007fab7411c7eb: mov    %rdi,0x8(%rsp)
  0x00007fab7411c7f0: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411c7f8: callq  0x00007fab741005e0  ; OopMap{off=125}
                                                ;*synchronization entry
                                                ; - java.net.URI::access$300@-1 (line 464)
                                                ;   {runtime_call}
  0x00007fab7411c7fd: jmp    0x00007fab7411c7be
  0x00007fab7411c7ff: nop
  0x00007fab7411c800: nop
  0x00007fab7411c801: mov    0x2c0(%r15),%rax
  0x00007fab7411c808: movabs $0x0,%r10
  0x00007fab7411c812: mov    %r10,0x2c0(%r15)
  0x00007fab7411c819: movabs $0x0,%r10
  0x00007fab7411c823: mov    %r10,0x2c8(%r15)
  0x00007fab7411c82a: add    $0x40,%rsp
  0x00007fab7411c82e: pop    %rbp
  0x00007fab7411c82f: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7411c834: hlt    
  0x00007fab7411c835: hlt    
  0x00007fab7411c836: hlt    
  0x00007fab7411c837: hlt    
  0x00007fab7411c838: hlt    
  0x00007fab7411c839: hlt    
  0x00007fab7411c83a: hlt    
  0x00007fab7411c83b: hlt    
  0x00007fab7411c83c: hlt    
  0x00007fab7411c83d: hlt    
  0x00007fab7411c83e: hlt    
  0x00007fab7411c83f: hlt    
[Stub Code]
  0x00007fab7411c840: nop                       ;   {no_reloc}
  0x00007fab7411c841: nop
  0x00007fab7411c842: nop
  0x00007fab7411c843: nop
  0x00007fab7411c844: nop
  0x00007fab7411c845: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411c84f: jmpq   0x00007fab7411c84f  ;   {runtime_call}
[Exception Handler]
  0x00007fab7411c854: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab7411c859: mov    %rsp,-0x28(%rsp)
  0x00007fab7411c85e: sub    $0x80,%rsp
  0x00007fab7411c865: mov    %rax,0x78(%rsp)
  0x00007fab7411c86a: mov    %rcx,0x70(%rsp)
  0x00007fab7411c86f: mov    %rdx,0x68(%rsp)
  0x00007fab7411c874: mov    %rbx,0x60(%rsp)
  0x00007fab7411c879: mov    %rbp,0x50(%rsp)
  0x00007fab7411c87e: mov    %rsi,0x48(%rsp)
  0x00007fab7411c883: mov    %rdi,0x40(%rsp)
  0x00007fab7411c888: mov    %r8,0x38(%rsp)
  0x00007fab7411c88d: mov    %r9,0x30(%rsp)
  0x00007fab7411c892: mov    %r10,0x28(%rsp)
  0x00007fab7411c897: mov    %r11,0x20(%rsp)
  0x00007fab7411c89c: mov    %r12,0x18(%rsp)
  0x00007fab7411c8a1: mov    %r13,0x10(%rsp)
  0x00007fab7411c8a6: mov    %r14,0x8(%rsp)
  0x00007fab7411c8ab: mov    %r15,(%rsp)
  0x00007fab7411c8af: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7411c8b9: movabs $0x7fab7411c859,%rsi  ;   {internal_word}
  0x00007fab7411c8c3: mov    %rsp,%rdx
  0x00007fab7411c8c6: and    $0xfffffffffffffff0,%rsp
  0x00007fab7411c8ca: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7411c8cf: hlt    
[Deopt Handler Code]
  0x00007fab7411c8d0: movabs $0x7fab7411c8d0,%r10  ;   {section_word}
  0x00007fab7411c8da: push   %r10
  0x00007fab7411c8dc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7411c8e1: hlt    
  0x00007fab7411c8e2: hlt    
  0x00007fab7411c8e3: hlt    
  0x00007fab7411c8e4: hlt    
  0x00007fab7411c8e5: hlt    
  0x00007fab7411c8e6: hlt    
  0x00007fab7411c8e7: hlt    
<nmethod compile_id='32' compiler='C1' level='3' entry='0x00007fab7411c780' size='872' address='0x00007fab7411c610' relocation_offset='312' insts_offset='368' stub_offset='560' scopes_data_offset='736' scopes_pcs_offset='784' dependencies_offset='864' metadata_offset='728' method='java/net/URI access$300 (CJJ)Z' bytes='7' count='611' iicount='611' stamp='0.156'/>
<writer thread='140373948942080'/>
<task_queued compile_id='34' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='256' iicount='256' level='3' stamp='0.156' comment='tiered' hot_count='256'/>
<task_queued compile_id='35' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='256' iicount='256' level='3' stamp='0.156' comment='tiered' hot_count='256'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/net/URI.match  [0x00007fab7411cb20, 0x00007fab7411ce30]  784 bytes
<writer thread='140373948942080'/>
[Loaded sun.misc.URLClassPath$JarLoader$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab61b24cc8} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;
  # parm0:    rsi       = char
  # parm1:    rdx:rdx   = long
  # parm2:    rcx:rcx   = long
  #           [sp+0x40]  (sp of caller)
  0x00007fab7411cb20: mov    %eax,-0x14000(%rsp)
  0x00007fab7411cb27: push   %rbp
  0x00007fab7411cb28: sub    $0x30,%rsp
  0x00007fab7411cb2c: mov    %rcx,%rax
  0x00007fab7411cb2f: movabs $0x7fab61b62cd8,%rcx  ;   {metadata(method data for {method} {0x00007fab61b24cc8} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007fab7411cb39: mov    0xfc(%rcx),%edi
  0x00007fab7411cb3f: add    $0x8,%edi
  0x00007fab7411cb42: mov    %edi,0xfc(%rcx)
  0x00007fab7411cb48: movabs $0x7fab61b24cc8,%rcx  ;   {metadata({method} {0x00007fab61b24cc8} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007fab7411cb52: and    $0x1ff8,%edi
  0x00007fab7411cb58: cmp    $0x0,%edi
  0x00007fab7411cb5b: je     0x00007fab7411cd41  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@0 (line 2515)

  0x00007fab7411cb61: cmp    $0x0,%esi
  0x00007fab7411cb64: movabs $0x7fab61b62cd8,%rcx  ;   {metadata(method data for {method} {0x00007fab61b24cc8} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007fab7411cb6e: movabs $0x130,%rdi
  0x00007fab7411cb78: jne    0x00007fab7411cb88
  0x00007fab7411cb7e: movabs $0x140,%rdi
  0x00007fab7411cb88: mov    (%rcx,%rdi,1),%rbx
  0x00007fab7411cb8c: lea    0x1(%rbx),%rbx
  0x00007fab7411cb90: mov    %rbx,(%rcx,%rdi,1)
  0x00007fab7411cb94: je     0x00007fab7411cd30  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@1 (line 2515)

  0x00007fab7411cb9a: cmp    $0x40,%esi
  0x00007fab7411cb9d: movabs $0x7fab61b62cd8,%rcx  ;   {metadata(method data for {method} {0x00007fab61b24cc8} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007fab7411cba7: movabs $0x150,%rdi
  0x00007fab7411cbb1: jge    0x00007fab7411cbc1
  0x00007fab7411cbb7: movabs $0x160,%rdi
  0x00007fab7411cbc1: mov    (%rcx,%rdi,1),%rbx
  0x00007fab7411cbc5: lea    0x1(%rbx),%rbx
  0x00007fab7411cbc9: mov    %rbx,(%rcx,%rdi,1)
  0x00007fab7411cbcd: jge    0x00007fab7411cc2e  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@9 (line 2517)

  0x00007fab7411cbd3: mov    %rsi,%rcx
  0x00007fab7411cbd6: movabs $0x1,%rax
  0x00007fab7411cbe0: shl    %cl,%rax
  0x00007fab7411cbe3: and    %rdx,%rax
  0x00007fab7411cbe6: movabs $0x0,%rcx
  0x00007fab7411cbf0: cmp    %rcx,%rax
  0x00007fab7411cbf3: movabs $0x7fab61b62cd8,%rcx  ;   {metadata(method data for {method} {0x00007fab61b24cc8} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007fab7411cbfd: movabs $0x180,%rax
  0x00007fab7411cc07: jne    0x00007fab7411cc17
  0x00007fab7411cc0d: movabs $0x170,%rax
  0x00007fab7411cc17: mov    (%rcx,%rax,1),%rsi
  0x00007fab7411cc1b: lea    0x1(%rsi),%rsi
  0x00007fab7411cc1f: mov    %rsi,(%rcx,%rax,1)
  0x00007fab7411cc23: jne    0x00007fab7411cd0c
  0x00007fab7411cc29: jmpq   0x00007fab7411cd02  ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@18 (line 2518)

  0x00007fab7411cc2e: cmp    $0x80,%esi
  0x00007fab7411cc34: movabs $0x7fab61b62cd8,%rcx  ;   {metadata(method data for {method} {0x00007fab61b24cc8} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007fab7411cc3e: movabs $0x1a8,%rdi
  0x00007fab7411cc48: jge    0x00007fab7411cc58
  0x00007fab7411cc4e: movabs $0x1b8,%rdi
  0x00007fab7411cc58: mov    (%rcx,%rdi,1),%rbx
  0x00007fab7411cc5c: lea    0x1(%rbx),%rbx
  0x00007fab7411cc60: mov    %rbx,(%rcx,%rdi,1)
  0x00007fab7411cc64: jge    0x00007fab7411ccf1  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@32 (line 2519)

  0x00007fab7411cc6a: sub    $0x40,%esi
  0x00007fab7411cc6d: mov    %rsi,%rcx
  0x00007fab7411cc70: movabs $0x1,%rsi
  0x00007fab7411cc7a: shl    %cl,%rsi
  0x00007fab7411cc7d: and    %rax,%rsi
  0x00007fab7411cc80: movabs $0x0,%rax
  0x00007fab7411cc8a: cmp    %rax,%rsi
  0x00007fab7411cc8d: movabs $0x7fab61b62cd8,%rax  ;   {metadata(method data for {method} {0x00007fab61b24cc8} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007fab7411cc97: movabs $0x1d8,%rsi
  0x00007fab7411cca1: jne    0x00007fab7411ccb1
  0x00007fab7411cca7: movabs $0x1c8,%rsi
  0x00007fab7411ccb1: mov    (%rax,%rsi,1),%rdi
  0x00007fab7411ccb5: lea    0x1(%rdi),%rdi
  0x00007fab7411ccb9: mov    %rdi,(%rax,%rsi,1)
  0x00007fab7411ccbd: jne    0x00007fab7411cccd  ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@44 (line 2520)

  0x00007fab7411ccc3: mov    $0x0,%eax
  0x00007fab7411ccc8: jmpq   0x00007fab7411cce2  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@53 (line 2520)

  0x00007fab7411cccd: movabs $0x7fab61b62cd8,%rax  ;   {metadata(method data for {method} {0x00007fab61b24cc8} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007fab7411ccd7: incl   0x1e8(%rax)
  0x00007fab7411ccdd: mov    $0x1,%eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@49 (line 2520)

  0x00007fab7411cce2: and    $0x1,%eax
  0x00007fab7411cce5: add    $0x30,%rsp
  0x00007fab7411cce9: pop    %rbp
  0x00007fab7411ccea: test   %eax,0x1b6c5410(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411ccf0: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@53 (line 2520)

  0x00007fab7411ccf1: mov    $0x0,%eax
  0x00007fab7411ccf6: add    $0x30,%rsp
  0x00007fab7411ccfa: pop    %rbp
  0x00007fab7411ccfb: test   %eax,0x1b6c53ff(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411cd01: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@55 (line 2521)

  0x00007fab7411cd02: mov    $0x0,%eax
  0x00007fab7411cd07: jmpq   0x00007fab7411cd21  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@27 (line 2518)

  0x00007fab7411cd0c: movabs $0x7fab61b62cd8,%rax  ;   {metadata(method data for {method} {0x00007fab61b24cc8} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007fab7411cd16: incl   0x190(%rax)
  0x00007fab7411cd1c: mov    $0x1,%eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@23 (line 2518)

  0x00007fab7411cd21: and    $0x1,%eax
  0x00007fab7411cd24: add    $0x30,%rsp
  0x00007fab7411cd28: pop    %rbp
  0x00007fab7411cd29: test   %eax,0x1b6c53d1(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411cd2f: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@27 (line 2518)

  0x00007fab7411cd30: mov    $0x0,%eax
  0x00007fab7411cd35: add    $0x30,%rsp
  0x00007fab7411cd39: pop    %rbp
  0x00007fab7411cd3a: test   %eax,0x1b6c53c0(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411cd40: retq   
  0x00007fab7411cd41: mov    %rcx,0x8(%rsp)
  0x00007fab7411cd46: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411cd4e: callq  0x00007fab741005e0  ; OopMap{off=563}
                                                ;*synchronization entry
                                                ; - java.net.URI::match@-1 (line 2515)
                                                ;   {runtime_call}
  0x00007fab7411cd53: jmpq   0x00007fab7411cb61
  0x00007fab7411cd58: nop
  0x00007fab7411cd59: nop
  0x00007fab7411cd5a: mov    0x2c0(%r15),%rax
  0x00007fab7411cd61: movabs $0x0,%r10
  0x00007fab7411cd6b: mov    %r10,0x2c0(%r15)
  0x00007fab7411cd72: movabs $0x0,%r10
  0x00007fab7411cd7c: mov    %r10,0x2c8(%r15)
  0x00007fab7411cd83: add    $0x30,%rsp
  0x00007fab7411cd87: pop    %rbp
  0x00007fab7411cd88: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7411cd8d: hlt    
  0x00007fab7411cd8e: hlt    
  0x00007fab7411cd8f: hlt    
  0x00007fab7411cd90: hlt    
  0x00007fab7411cd91: hlt    
  0x00007fab7411cd92: hlt    
  0x00007fab7411cd93: hlt    
  0x00007fab7411cd94: hlt    
  0x00007fab7411cd95: hlt    
  0x00007fab7411cd96: hlt    
  0x00007fab7411cd97: hlt    
  0x00007fab7411cd98: hlt    
  0x00007fab7411cd99: hlt    
  0x00007fab7411cd9a: hlt    
  0x00007fab7411cd9b: hlt    
  0x00007fab7411cd9c: hlt    
  0x00007fab7411cd9d: hlt    
  0x00007fab7411cd9e: hlt    
  0x00007fab7411cd9f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab7411cda0: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7411cda5: mov    %rsp,-0x28(%rsp)
  0x00007fab7411cdaa: sub    $0x80,%rsp
  0x00007fab7411cdb1: mov    %rax,0x78(%rsp)
  0x00007fab7411cdb6: mov    %rcx,0x70(%rsp)
  0x00007fab7411cdbb: mov    %rdx,0x68(%rsp)
  0x00007fab7411cdc0: mov    %rbx,0x60(%rsp)
  0x00007fab7411cdc5: mov    %rbp,0x50(%rsp)
  0x00007fab7411cdca: mov    %rsi,0x48(%rsp)
  0x00007fab7411cdcf: mov    %rdi,0x40(%rsp)
  0x00007fab7411cdd4: mov    %r8,0x38(%rsp)
  0x00007fab7411cdd9: mov    %r9,0x30(%rsp)
  0x00007fab7411cdde: mov    %r10,0x28(%rsp)
  0x00007fab7411cde3: mov    %r11,0x20(%rsp)
  0x00007fab7411cde8: mov    %r12,0x18(%rsp)
  0x00007fab7411cded: mov    %r13,0x10(%rsp)
  0x00007fab7411cdf2: mov    %r14,0x8(%rsp)
  0x00007fab7411cdf7: mov    %r15,(%rsp)
  0x00007fab7411cdfb: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7411ce05: movabs $0x7fab7411cda5,%rsi  ;   {internal_word}
  0x00007fab7411ce0f: mov    %rsp,%rdx
  0x00007fab7411ce12: and    $0xfffffffffffffff0,%rsp
  0x00007fab7411ce16: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7411ce1b: hlt    
[Deopt Handler Code]
  0x00007fab7411ce1c: movabs $0x7fab7411ce1c,%r10  ;   {section_word}
  0x00007fab7411ce26: push   %r10
  0x00007fab7411ce28: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7411ce2d: hlt    
  0x00007fab7411ce2e: hlt    
  0x00007fab7411ce2f: hlt    
<nmethod compile_id='33' compiler='C1' level='3' entry='0x00007fab7411cb20' size='1544' address='0x00007fab7411c990' relocation_offset='312' insts_offset='400' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1280' dependencies_offset='1536' metadata_offset='1184' method='java/net/URI match (CJJ)Z' bytes='56' count='611' iicount='611' stamp='0.156'/>
<writer thread='140373948942080'/>
[Loaded sun.misc.FileURLMapper from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/CharacterData.of  [0x00007fab7411d1a0, 0x00007fab7411d710]  1392 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab61a8b658} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fab7411d1a0: mov    %eax,-0x14000(%rsp)
  0x00007fab7411d1a7: push   %rbp
  0x00007fab7411d1a8: sub    $0x30,%rsp
  0x00007fab7411d1ac: movabs $0x7fab61b646c0,%rax  ;   {metadata(method data for {method} {0x00007fab61a8b658} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x00007fab7411d1b6: mov    0xfc(%rax),%edi
  0x00007fab7411d1bc: add    $0x8,%edi
  0x00007fab7411d1bf: mov    %edi,0xfc(%rax)
  0x00007fab7411d1c5: movabs $0x7fab61a8b658,%rax  ;   {metadata({method} {0x00007fab61a8b658} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x00007fab7411d1cf: and    $0x1ff8,%edi
  0x00007fab7411d1d5: cmp    $0x0,%edi
  0x00007fab7411d1d8: je     0x00007fab7411d35c  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; -
<writer thread='140373948942080'/>
[Loaded java.util.jar.JarFile from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
 java.lang.CharacterData::of@0 (line 77)

  0x00007fab7411d1de: mov    %rsi,%rax
  0x00007fab7411d1e1: shr    $0x8,%eax
  0x00007fab7411d1e4: cmp    $0x0,%eax
  0x00007fab7411d1e7: movabs $0x7fab61b646c0,%rax  ;   {metadata(method data for {method} {0x00007fab61a8b658} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x00007fab7411d1f1: movabs $0x130,%rdi
  0x00007fab7411d1fb: jne    0x00007fab7411d20b
  0x00007fab7411d201: movabs $0x140,%rdi
  0x00007fab7411d20b: mov    (%rax,%rdi,1),%rbx
  0x00007fab7411d20f: lea    0x1(%rbx),%rbx
  0x00007fab7411d213: mov    %rbx,(%rax,%rdi,1)
  0x00007fab7411d217: je     0x00007fab7411d346  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x00007fab7411d21d: shr    $0x10,%esi
  0x00007fab7411d220: cmp    $0x0,%esi
  0x00007fab7411d223: je     0x00007fab7411d31e
  0x00007fab7411d229: cmp    $0x1,%esi
  0x00007fab7411d22c: je     0x00007fab7411d2f6
  0x00007fab7411d232: cmp    $0x2,%esi
  0x00007fab7411d235: je     0x00007fab7411d2ce
  0x00007fab7411d23b: cmp    $0xe,%esi
  0x00007fab7411d23e: je     0x00007fab7411d2a6
  0x00007fab7411d244: cmp    $0xf,%esi
  0x00007fab7411d247: je     0x00007fab7411d256
  0x00007fab7411d24d: cmp    $0x10,%esi
  0x00007fab7411d250: jne    0x00007fab7411d27e  ;*tableswitch {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@15 (line 80)

  0x00007fab7411d256: xchg   %ax,%ax
  0x00007fab7411d258: jmpq   0x00007fab7411d3c8  ;   {no_reloc}
  0x00007fab7411d25d: add    %al,(%rax)
  0x00007fab7411d25f: add    %al,(%rax)
  0x00007fab7411d261: add    %ah,0xf(%rsi)
  0x00007fab7411d264: (bad)  
  0x00007fab7411d265: add    %r8b,(%rax)
  0x00007fab7411d268: jmpq   0x00007fab7411d3e2  ; implicit exception: dispatches to 0x00007fab7411d3d2
  0x00007fab7411d26d: nop
  0x00007fab7411d26e: shl    $0x3,%rax          ;*getstatic instance {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x00007fab7411d272: add    $0x30,%rsp
  0x00007fab7411d276: pop    %rbp
  0x00007fab7411d277: test   %eax,0x1b6c4e83(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411d27d: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@115 (line 91)

  0x00007fab7411d27e: xchg   %ax,%ax
  0x00007fab7411d280: jmpq   0x00007fab7411d441  ;   {no_reloc}
  0x00007fab7411d285: add    %al,(%rax)
  0x00007fab7411d287: add    %al,(%rax)
  0x00007fab7411d289: add    %ah,0xf(%rsi)
  0x00007fab7411d28c: (bad)  
  0x00007fab7411d28d: add    %r8b,(%rax)
  0x00007fab7411d290: jmpq   0x00007fab7411d45b  ; implicit exception: dispatches to 0x00007fab7411d44b
  0x00007fab7411d295: nop
  0x00007fab7411d296: shl    $0x3,%rax          ;*getstatic instance {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@116 (line 93)

  0x00007fab7411d29a: add    $0x30,%rsp
  0x00007fab7411d29e: pop    %rbp
  0x00007fab7411d29f: test   %eax,0x1b6c4e5b(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411d2a5: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@119 (line 93)

  0x00007fab7411d2a6: xchg   %ax,%ax
  0x00007fab7411d2a8: jmpq   0x00007fab7411d4ba  ;   {no_reloc}
  0x00007fab7411d2ad: add    %al,(%rax)
  0x00007fab7411d2af: add    %al,(%rax)
  0x00007fab7411d2b1: add    %ah,0xf(%rsi)
  0x00007fab7411d2b4: (bad)  
  0x00007fab7411d2b5: add    %r8b,(%rax)
  0x00007fab7411d2b8: jmpq   0x00007fab7411d4d4  ; implicit exception: dispatches to 0x00007fab7411d4c4
  0x00007fab7411d2bd: nop
  0x00007fab7411d2be: shl    $0x3,%rax          ;*getstatic instance {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@108 (line 88)

  0x00007fab7411d2c2: add    $0x30,%rsp
  0x00007fab7411d2c6: pop    %rbp
  0x00007fab7411d2c7: test   %eax,0x1b6c4e33(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411d2cd: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@111 (line 88)

  0x00007fab7411d2ce: xchg   %ax,%ax
  0x00007fab7411d2d0: jmpq   0x00007fab7411d533  ;   {no_reloc}
  0x00007fab7411d2d5: add    %al,(%rax)
  0x00007fab7411d2d7: add    %al,(%rax)
  0x00007fab7411d2d9: add    %ah,0xf(%rsi)
  0x00007fab7411d2dc: (bad)  
  0x00007fab7411d2dd: add    %r8b,(%rax)
  0x00007fab7411d2e0: jmpq   0x00007fab7411d54d  ; implicit exception: dispatches to 0x00007fab7411d53d
  0x00007fab7411d2e5: nop
  0x00007fab7411d2e6: shl    $0x3,%rax          ;*getstatic instance {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@104 (line 86)

  0x00007fab7411d2ea: add    $0x30,%rsp
  0x00007fab7411d2ee: pop    %rbp
  0x00007fab7411d2ef: test   %eax,0x1b6c4e0b(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411d2f5: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@107 (line 86)

  0x00007fab7411d2f6: xchg   %ax,%ax
  0x00007fab7411d2f8: jmpq   0x00007fab7411d5ac  ;   {no_reloc}
  0x00007fab7411d2fd: add    %al,(%rax)
  0x00007fab7411d2ff: add    %al,(%rax)
  0x00007fab7411d301: add    %ah,0xf(%rsi)
  0x00007fab7411d304: (bad)  
  0x00007fab7411d305: add    %r8b,(%rax)
  0x00007fab7411d308: jmpq   0x00007fab7411d5c6  ; implicit exception: dispatches to 0x00007fab7411d5b6
  0x00007fab7411d30d: nop
  0x00007fab7411d30e: shl    $0x3,%rax          ;*getstatic instance {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@100 (line 84)

  0x00007fab7411d312: add    $0x30,%rsp
  0x00007fab7411d316: pop    %rbp
  0x00007fab7411d317: test   %eax,0x1b6c4de3(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411d31d: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@103 (line 84)

  0x00007fab7411d31e: xchg   %ax,%ax
  0x00007fab7411d320: jmpq   0x00007fab7411d625  ;   {no_reloc}
  0x00007fab7411d325: add    %al,(%rax)
  0x00007fab7411d327: add    %al,(%rax)
  0x00007fab7411d329: add    %ah,0xf(%rsi)
  0x00007fab7411d32c: (bad)  
  0x00007fab7411d32d: add    %r8b,(%rax)
  0x00007fab7411d330: jmpq   0x00007fab7411d63f  ; implicit exception: dispatches to 0x00007fab7411d62f
  0x00007fab7411d335: nop
  0x00007fab7411d336: shl    $0x3,%rax          ;*getstatic instance {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@96 (line 82)

  0x00007fab7411d33a: add    $0x30,%rsp
  0x00007fab7411d33e: pop    %rbp
  0x00007fab7411d33f: test   %eax,0x1b6c4dbb(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411d345: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@99 (line 82)

  0x00007fab7411d346: movabs $0x670bc4918,%rax  ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab7411d350: add    $0x30,%rsp
  0x00007fab7411d354: pop    %rbp
  0x00007fab7411d355: test   %eax,0x1b6c4da5(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411d35b: retq   
  0x00007fab7411d35c: mov    %rax,0x8(%rsp)
  0x00007fab7411d361: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411d369: callq  0x00007fab741005e0  ; OopMap{off=462}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)
                                                ;   {runtime_call}
  0x00007fab7411d36e: jmpq   0x00007fab7411d1de
  0x00007fab7411d373: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fab7411d37d: push   %rax
  0x00007fab7411d37e: push   %rbx
  0x00007fab7411d37f: mov    0x48(%rax),%rbx
  0x00007fab7411d383: push   %rdi
  0x00007fab7411d384: push   %rsi
  0x00007fab7411d385: push   %rdx
  0x00007fab7411d386: push   %rcx
  0x00007fab7411d387: push   %r8
  0x00007fab7411d389: push   %r9
  0x00007fab7411d38b: push   %r10
  0x00007fab7411d38d: mov    %rsp,%r10
  0x00007fab7411d390: and    $0xfffffffffffffff0,%rsp
  0x00007fab7411d394: push   %r10
  0x00007fab7411d396: push   %r11
  0x00007fab7411d398: mov    $0x1,%edi
  0x00007fab7411d39d: callq  0x00007fab8f3b1470  ;   {runtime_call}
  0x00007fab7411d3a2: pop    %r11
  0x00007fab7411d3a4: pop    %rsp
  0x00007fab7411d3a5: pop    %r10
  0x00007fab7411d3a7: pop    %r9
  0x00007fab7411d3a9: pop    %r8
  0x00007fab7411d3ab: pop    %rcx
  0x00007fab7411d3ac: pop    %rdx
  0x00007fab7411d3ad: pop    %rsi
  0x00007fab7411d3ae: pop    %rdi
  0x00007fab7411d3af: cmp    0x108(%rbx),%rax
  0x00007fab7411d3b6: pop    %rbx
  0x00007fab7411d3b7: pop    %rax
  0x00007fab7411d3b8: jne    0x00007fab7411d3c8
  0x00007fab7411d3be: jmpq   0x00007fab7411d262
  0x00007fab7411d3c3: mov    $0xa4b5500,%eax
  0x00007fab7411d3c8: callq  0x00007fab740ff9e0  ; OopMap{off=557}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x00007fab7411d3cd: jmpq   0x00007fab7411d258
  0x00007fab7411d3d2: callq  0x00007fab740fc000  ; OopMap{rax=Oop off=567}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x00007fab7411d3d7: mov    0x0(%rax),%eax
  0x00007fab7411d3dd: mov    $0x6050b00,%eax
  0x00007fab7411d3e2: callq  0x00007fab740ff1e0  ; OopMap{rax=Oop off=583}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x00007fab7411d3e7: jmpq   0x00007fab7411d268
  0x00007fab7411d3ec: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fab7411d3f6: push   %rax
  0x00007fab7411d3f7: push   %rbx
  0x00007fab7411d3f8: mov    0x48(%rax),%rbx
  0x00007fab7411d3fc: push   %rdi
  0x00007fab7411d3fd: push   %rsi
  0x00007fab7411d3fe: push   %rdx
  0x00007fab7411d3ff: push   %rcx
  0x00007fab7411d400: push   %r8
  0x00007fab7411d402: push   %r9
  0x00007fab7411d404: push   %r10
  0x00007fab7411d406: mov    %rsp,%r10
  0x00007fab7411d409: and    $0xfffffffffffffff0,%rsp
  0x00007fab7411d40d: push   %r10
  0x00007fab7411d40f: push   %r11
  0x00007fab7411d411: mov    $0x1,%edi
  0x00007fab7411d416: callq  0x00007fab8f3b1470  ;   {runtime_call}
  0x00007fab7411d41b: pop    %r11
  0x00007fab7411d41d: pop    %rsp
  0x00007fab7411d41e: pop    %r10
  0x00007fab7411d420: pop    %r9
  0x00007fab7411d422: pop    %r8
  0x00007fab7411d424: pop    %rcx
  0x00007fab7411d425: pop    %rdx
  0x00007fab7411d426: pop    %rsi
  0x00007fab7411d427: pop    %rdi
  0x00007fab7411d428: cmp    0x108(%rbx),%rax
  0x00007fab7411d42f: pop    %rbx
  0x00007fab7411d430: pop    %rax
  0x00007fab7411d431: jne    0x00007fab7411d441
  0x00007fab7411d437: jmpq   0x00007fab7411d28a
  0x00007fab7411d43c: mov    $0xa4b5500,%eax
  0x00007fab7411d441: callq  0x00007fab740ff9e0  ; OopMap{off=678}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x00007fab7411d446: jmpq   0x00007fab7411d280
  0x00007fab7411d44b: callq  0x00007fab740fc000  ; OopMap{rax=Oop off=688}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x00007fab7411d450: mov    0x0(%rax),%eax
  0x00007fab7411d456: mov    $0x6050b00,%eax
  0x00007fab7411d45b: callq  0x00007fab740ff1e0  ; OopMap{rax=Oop off=704}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x00007fab7411d460: jmpq   0x00007fab7411d290
  0x00007fab7411d465: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fab7411d46f: push   %rax
  0x00007fab7411d470: push   %rbx
  0x00007fab7411d471: mov    0x48(%rax),%rbx
  0x00007fab7411d475: push   %rdi
  0x00007fab7411d476: push   %rsi
  0x00007fab7411d477: push   %rdx
  0x00007fab7411d478: push   %rcx
  0x00007fab7411d479: push   %r8
  0x00007fab7411d47b: push   %r9
  0x00007fab7411d47d: push   %r10
  0x00007fab7411d47f: mov    %rsp,%r10
  0x00007fab7411d482: and    $0xfffffffffffffff0,%rsp
  0x00007fab7411d486: push   %r10
  0x00007fab7411d488: push   %r11
  0x00007fab7411d48a: mov    $0x1,%edi
  0x00007fab7411d48f: callq  0x00007fab8f3b1470  ;   {runtime_call}
  0x00007fab7411d494: pop    %r11
  0x00007fab7411d496: pop    %rsp
  0x00007fab7411d497: pop    %r10
  0x00007fab7411d499: pop    %r9
  0x00007fab7411d49b: pop    %r8
  0x00007fab7411d49d: pop    %rcx
  0x00007fab7411d49e: pop    %rdx
  0x00007fab7411d49f: pop    %rsi
  0x00007fab7411d4a0: pop    %rdi
  0x00007fab7411d4a1: cmp    0x108(%rbx),%rax
  0x00007fab7411d4a8: pop    %rbx
  0x00007fab7411d4a9: pop    %rax
  0x00007fab7411d4aa: jne    0x00007fab7411d4ba
  0x00007fab7411d4b0: jmpq   0x00007fab7411d2b2
  0x00007fab7411d4b5: mov    $0xa4b5500,%eax
  0x00007fab7411d4ba: callq  0x00007fab740ff9e0  ; OopMap{off=799}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x00007fab7411d4bf: jmpq   0x00007fab7411d2a8
  0x00007fab7411d4c4: callq  0x00007fab740fc000  ; OopMap{rax=Oop off=809}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x00007fab7411d4c9: mov    0x0(%rax),%eax
  0x00007fab7411d4cf: mov    $0x6050b00,%eax
  0x00007fab7411d4d4: callq  0x00007fab740ff1e0  ; OopMap{rax=Oop off=825}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x00007fab7411d4d9: jmpq   0x00007fab7411d2b8
  0x00007fab7411d4de: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fab7411d4e8: push   %rax
  0x00007fab7411d4e9: push   %rbx
  0x00007fab7411d4ea: mov    0x48(%rax),%rbx
  0x00007fab7411d4ee: push   %rdi
  0x00007fab7411d4ef: push   %rsi
  0x00007fab7411d4f0: push   %rdx
  0x00007fab7411d4f1: push   %rcx
  0x00007fab7411d4f2: push   %r8
  0x00007fab7411d4f4: push   %r9
  0x00007fab7411d4f6: push   %r10
  0x00007fab7411d4f8: mov    %rsp,%r10
  0x00007fab7411d4fb: and    $0xfffffffffffffff0,%rsp
  0x00007fab7411d4ff: push   %r10
  0x00007fab7411d501: push   %r11
  0x00007fab7411d503: mov    $0x1,%edi
  0x00007fab7411d508: callq  0x00007fab8f3b1470  ;   {runtime_call}
  0x00007fab7411d50d: pop    %r11
  0x00007fab7411d50f: pop    %rsp
  0x00007fab7411d510: pop    %r10
  0x00007fab7411d512: pop    %r9
  0x00007fab7411d514: pop    %r8
  0x00007fab7411d516: pop    %rcx
  0x00007fab7411d517: pop    %rdx
  0x00007fab7411d518: pop    %rsi
  0x00007fab7411d519: pop    %rdi
  0x00007fab7411d51a: cmp    0x108(%rbx),%rax
  0x00007fab7411d521: pop    %rbx
  0x00007fab7411d522: pop    %rax
  0x00007fab7411d523: jne    0x00007fab7411d533
  0x00007fab7411d529: jmpq   0x00007fab7411d2da
  0x00007fab7411d52e: mov    $0xa4b5500,%eax
  0x00007fab7411d533: callq  0x00007fab740ff9e0  ; OopMap{off=920}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x00007fab7411d538: jmpq   0x00007fab7411d2d0
  0x00007fab7411d53d: callq  0x00007fab740fc000  ; OopMap{rax=Oop off=930}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x00007fab7411d542: mov    0x0(%rax),%eax
  0x00007fab7411d548: mov    $0x6050b00,%eax
  0x00007fab7411d54d: callq  0x00007fab740ff1e0  ; OopMap{rax=Oop off=946}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x00007fab7411d552: jmpq   0x00007fab7411d2e0
  0x00007fab7411d557: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fab7411d561: push   %rax
  0x00007fab7411d562: push   %rbx
  0x00007fab7411d563: mov    0x48(%rax),%rbx
  0x00007fab7411d567: push   %rdi
  0x00007fab7411d568: push   %rsi
  0x00007fab7411d569: push   %rdx
  0x00007fab7411d56a: push   %rcx
  0x00007fab7411d56b: push   %r8
  0x00007fab7411d56d: push   %r9
  0x00007fab7411d56f: push   %r10
  0x00007fab7411d571: mov    %rsp,%r10
  0x00007fab7411d574: and    $0xfffffffffffffff0,%rsp
  0x00007fab7411d578: push   %r10
  0x00007fab7411d57a: push   %r11
  0x00007fab7411d57c: mov    $0x1,%edi
  0x00007fab7411d581: callq  0x00007fab8f3b1470  ;   {runtime_call}
  0x00007fab7411d586: pop    %r11
  0x00007fab7411d588: pop    %rsp
  0x00007fab7411d589: pop    %r10
  0x00007fab7411d58b: pop    %r9
  0x00007fab7411d58d: pop    %r8
  0x00007fab7411d58f: pop    %rcx
  0x00007fab7411d590: pop    %rdx
  0x00007fab7411d591: pop    %rsi
  0x00007fab7411d592: pop    %rdi
  0x00007fab7411d593: cmp    0x108(%rbx),%rax
  0x00007fab7411d59a: pop    %rbx
  0x00007fab7411d59b: pop    %rax
  0x00007fab7411d59c: jne    0x00007fab7411d5ac
  0x00007fab7411d5a2: jmpq   0x00007fab7411d302
  0x00007fab7411d5a7: mov    $0xa4b5500,%eax
  0x00007fab7411d5ac: callq  0x00007fab740ff9e0  ; OopMap{off=1041}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x00007fab7411d5b1: jmpq   0x00007fab7411d2f8
  0x00007fab7411d5b6: callq  0x00007fab740fc000  ; OopMap{rax=Oop off=1051}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x00007fab7411d5bb: mov    0x0(%rax),%eax
  0x00007fab7411d5c1: mov    $0x6050b00,%eax
  0x00007fab7411d5c6: callq  0x00007fab740ff1e0  ; OopMap{rax=Oop off=1067}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x00007fab7411d5cb: jmpq   0x00007fab7411d308
  0x00007fab7411d5d0: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fab7411d5da: push   %rax
  0x00007fab7411d5db: push   %rbx
  0x00007fab7411d5dc: mov    0x48(%rax),%rbx
  0x00007fab7411d5e0: push   %rdi
  0x00007fab7411d5e1: push   %rsi
  0x00007fab7411d5e2: push   %rdx
  0x00007fab7411d5e3: push   %rcx
  0x00007fab7411d5e4: push   %r8
  0x00007fab7411d5e6: push   %r9
  0x00007fab7411d5e8: push   %r10
  0x00007fab7411d5ea: mov    %rsp,%r10
  0x00007fab7411d5ed: and    $0xfffffffffffffff0,%rsp
  0x00007fab7411d5f1: push   %r10
  0x00007fab7411d5f3: push   %r11
  0x00007fab7411d5f5: mov    $0x1,%edi
  0x00007fab7411d5fa: callq  0x00007fab8f3b1470  ;   {runtime_call}
  0x00007fab7411d5ff: pop    %r11
  0x00007fab7411d601: pop    %rsp
  0x00007fab7411d602: pop    %r10
  0x00007fab7411d604: pop    %r9
  0x00007fab7411d606: pop    %r8
  0x00007fab7411d608: pop    %rcx
  0x00007fab7411d609: pop    %rdx
  0x00007fab7411d60a: pop    %rsi
  0x00007fab7411d60b: pop    %rdi
  0x00007fab7411d60c: cmp    0x108(%rbx),%rax
  0x00007fab7411d613: pop    %rbx
  0x00007fab7411d614: pop    %rax
  0x00007fab7411d615: jne    0x00007fab7411d625
  0x00007fab7411d61b: jmpq   0x00007fab7411d32a
  0x00007fab7411d620: mov    $0xa4b5500,%eax
  0x00007fab7411d625: callq  0x00007fab740ff9e0  ; OopMap{off=1162}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x00007fab7411d62a: jmpq   0x00007fab7411d320
  0x00007fab7411d62f: callq  0x00007fab740fc000  ; OopMap{rax=Oop off=1172}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x00007fab7411d634: mov    0x0(%rax),%eax
  0x00007fab7411d63a: mov    $0x6050b00,%eax
  0x00007fab7411d63f: callq  0x00007fab740ff1e0  ; OopMap{rax=Oop off=1188}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x00007fab7411d644: jmpq   0x00007fab7411d330
  0x00007fab7411d649: nop
  0x00007fab7411d64a: nop
  0x00007fab7411d64b: mov    0x2c0(%r15),%rax
  0x00007fab7411d652: movabs $0x0,%r10
  0x00007fab7411d65c: mov    %r10,0x2c0(%r15)
  0x00007fab7411d663: movabs $0x0,%r10
  0x00007fab7411d66d: mov    %r10,0x2c8(%r15)
  0x00007fab7411d674: add    $0x30,%rsp
  0x00007fab7411d678: pop    %rbp
  0x00007fab7411d679: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7411d67e: hlt    
  0x00007fab7411d67f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab7411d680: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7411d685: mov    %rsp,-0x28(%rsp)
  0x00007fab7411d68a: sub    $0x80,%rsp
  0x00007fab7411d691: mov    %rax,0x78(%rsp)
  0x00007fab7411d696: mov    %rcx,0x70(%rsp)
  0x00007fab7411d69b: mov    %rdx,0x68(%rsp)
  0x00007fab7411d6a0: mov    %rbx,0x60(%rsp)
  0x00007fab7411d6a5: mov    %rbp,0x50(%rsp)
  0x00007fab7411d6aa: mov    %rsi,0x48(%rsp)
  0x00007fab7411d6af: mov    %rdi,0x40(%rsp)
  0x00007fab7411d6b4: mov    %r8,0x38(%rsp)
  0x00007fab7411d6b9: mov    %r9,0x30(%rsp)
  0x00007fab7411d6be: mov    %r10,0x28(%rsp)
  0x00007fab7411d6c3: mov    %r11,0x20(%rsp)
  0x00007fab7411d6c8: mov    %r12,0x18(%rsp)
  0x00007fab7411d6cd: mov    %r13,0x10(%rsp)
  0x00007fab7411d6d2: mov    %r14,0x8(%rsp)
  0x00007fab7411d6d7: mov    %r15,(%rsp)
  0x00007fab7411d6db: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7411d6e5: movabs $0x7fab7411d685,%rsi  ;   {internal_word}
  0x00007fab7411d6ef: mov    %rsp,%rdx
  0x00007fab7411d6f2: and    $0xfffffffffffffff0,%rsp
  0x00007fab7411d6f6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7411d6fb: hlt    
[Deopt Handler Code]
  0x00007fab7411d6fc: movabs $0x7fab7411d6fc,%r10  ;   {section_word}
  0x00007fab7411d706: push   %r10
  0x00007fab7411d708: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7411d70d: hlt    
  0x00007fab7411d70e: hlt    
  0x00007fab7411d70f: hlt    
<nmethod compile_id='34' compiler='C1' level='3' entry='0x00007fab7411d1a0' size='2648' address='0x00007fab7411cfd0' relocation_offset='312' insts_offset='464' stub_offset='1712' scopes_data_offset='1864' scopes_pcs_offset='2008' dependencies_offset='2584' nul_chk_table_offset='2592' metadata_offset='1856' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='262' iicount='262' stamp='0.178'/>
<writer thread='140374823413504'/>
<task_queued compile_id='36' compile_kind='osr' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='134205' iicount='1' osr_bci='9' level='4' stamp='0.178' comment='tiered' hot_count='134205'/>
<writer thread='140373948942080'/>
[Loaded sun.misc.JavaUtilJarAccess from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.jar.JavaUtilJarAccessImpl from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/CharacterDataLatin1.getProperties  [0x00007fab7411dbc0, 0x00007fab7411dd50]  400 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61a8be08} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
<writer thread='140373948942080'/>
[Loaded java.nio.charset.StandardCharsets from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
  # this:     rsi:rsi   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fab7411dbc0: mov    0x8(%rsi),%r10d
  0x00007fab7411dbc4: shl    $0x3,%r10
  0x00007fab7411dbc8: cmp    %rax,%r10
  0x00007fab7411dbcb: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7411dbd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7411dbdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7411dbe0: mov    %eax,-0x14000(%rsp)
  0x00007fab7411dbe7: push   %rbp
  0x00007fab7411dbe8: sub    $0x30,%rsp
  0x00007fab7411dbec: movabs $0x7fab61b69628,%rax  ;   {metadata(method data for {method} {0x00007fab61a8be08} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab7411dbf6: mov    0xfc(%rax),%edi
  0x00007fab7411dbfc: add    $0x8,%edi
  0x00007fab7411dbff: mov    %edi,0xfc(%rax)
  0x00007fab7411dc05: movabs $0x7fab61a8be08,%rax  ;   {metadata({method} {0x00007fab61a8be08} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab7411dc0f: and    $0x1ff8,%edi
  0x00007fab7411dc15: cmp    $0x0,%edi
  0x00007fab7411dc18: je     0x00007fab7411dc4a  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x00007fab7411dc1e: and    $0xffff,%edx
  0x00007fab7411dc24: movabs $0x670bc4928,%rax  ;   {oop([I)}
  0x00007fab7411dc2e: movslq %edx,%rsi
  0x00007fab7411dc31: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x00007fab7411dc5e
  0x00007fab7411dc34: jae    0x00007fab7411dc68
  0x00007fab7411dc3a: mov    0x10(%rax,%rsi,4),%eax  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x00007fab7411dc3e: add    $0x30,%rsp
  0x00007fab7411dc42: pop    %rbp
  0x00007fab7411dc43: test   %eax,0x1b6c44b7(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411dc49: retq   
  0x00007fab7411dc4a: mov    %rax,0x8(%rsp)
  0x00007fab7411dc4f: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411dc57: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=156}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ;   {runtime_call}
  0x00007fab7411dc5c: jmp    0x00007fab7411dc1e
  0x00007fab7411dc5e: callq  0x00007fab740fc000  ; OopMap{rax=Oop off=163}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00007fab7411dc63: callq  0x00007fab740fc000  ; OopMap{rax=Oop off=168}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00007fab7411dc68: mov    %rdx,(%rsp)
  0x00007fab7411dc6c: callq  0x00007fab740fb940  ; OopMap{rax=Oop off=177}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00007fab7411dc71: nop
  0x00007fab7411dc72: nop
  0x00007fab7411dc73: mov    0x2c0(%r15),%rax
  0x00007fab7411dc7a: movabs $0x0,%r10
  0x00007fab7411dc84: mov    %r10,0x2c0(%r15)
  0x00007fab7411dc8b: movabs $0x0,%r10
  0x00007fab7411dc95: mov    %r10,0x2c8(%r15)
  0x00007fab7411dc9c: add    $0x30,%rsp
  0x00007fab7411dca0: pop    %rbp
  0x00007fab7411dca1: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7411dca6: hlt    
  0x00007fab7411dca7: hlt    
  0x00007fab7411dca8: hlt    
  0x00007fab7411dca9: hlt    
  0x00007fab7411dcaa: hlt    
  0x00007fab7411dcab: hlt    
  0x00007fab7411dcac: hlt    
  0x00007fab7411dcad: hlt    
  0x00007fab7411dcae: hlt    
  0x00007fab7411dcaf: hlt    
  0x00007fab7411dcb0: hlt    
  0x00007fab7411dcb1: hlt    
  0x00007fab7411dcb2: hlt    
  0x00007fab7411dcb3: hlt    
  0x00007fab7411dcb4: hlt    
  0x00007fab7411dcb5: hlt    
  0x00007fab7411dcb6: hlt    
  0x00007fab7411dcb7: hlt    
  0x00007fab7411dcb8: hlt    
  0x00007fab7411dcb9: hlt    
  0x00007fab7411dcba: hlt    
  0x00007fab7411dcbb: hlt    
  0x00007fab7411dcbc: hlt    
  0x00007fab7411dcbd: hlt    
  0x00007fab7411dcbe: hlt    
  0x00007fab7411dcbf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab7411dcc0: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7411dcc5: mov    %rsp,-0x28(%rsp)
  0x00007fab7411dcca: sub    $0x80,%rsp
  0x00007fab7411dcd1: mov    %rax,0x78(%rsp)
  0x00007fab7411dcd6: mov    %rcx,0x70(%rsp)
  0x00007fab7411dcdb: mov    %rdx,0x68(%rsp)
  0x00007fab7411dce0: mov    %rbx,0x60(%rsp)
  0x00007fab7411dce5: mov    %rbp,0x50(%rsp)
  0x00007fab7411dcea: mov    %rsi,0x48(%rsp)
  0x00007fab7411dcef: mov    %rdi,0x40(%rsp)
  0x00007fab7411dcf4: mov    %r8,0x38(%rsp)
  0x00007fab7411dcf9: mov    %r9,0x30(%rsp)
  0x00007fab7411dcfe: mov    %r10,0x28(%rsp)
  0x00007fab7411dd03: mov    %r11,0x20(%rsp)
  0x00007fab7411dd08: mov    %r12,0x18(%rsp)
  0x00007fab7411dd0d: mov    %r13,0x10(%rsp)
  0x00007fab7411dd12: mov    %r14,0x8(%rsp)
  0x00007fab7411dd17: mov    %r15,(%rsp)
  0x00007fab7411dd1b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7411dd25: movabs $0x7fab7411dcc5,%rsi  ;   {internal_word}
  0x00007fab7411dd2f: mov    %rsp,%rdx
  0x00007fab7411dd32: and    $0xfffffffffffffff0,%rsp
  0x00007fab7411dd36: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7411dd3b: hlt    
[Deopt Handler Code]
  0x00007fab7411dd3c: movabs $0x7fab7411dd3c,%r10  ;   {section_word}
  0x00007fab7411dd46: push   %r10
  0x00007fab7411dd48: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7411dd4d: hlt    
  0x00007fab7411dd4e: hlt    
  0x00007fab7411dd4f: hlt    
<nmethod compile_id='35' compiler='C1' level='3' entry='0x00007fab7411dbc0' size='984' address='0x00007fab7411da50' relocation_offset='312' insts_offset='368' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='824' dependencies_offset='952' nul_chk_table_offset='960' metadata_offset='768' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='262' iicount='262' stamp='0.179'/>
<writer thread='140373948942080'/>
[Loaded sun.nio.cs.US_ASCII from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.cs.ISO_8859_1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16BE from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16LE from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<task_queued compile_id='37' method='java/lang/String lastIndexOf (II)I' bytes='52' count='111' backedge_count='3072' iicount='111' level='3' stamp='0.180' comment='tiered' hot_count='111'/>
[Loaded sun.nio.cs.UTF_16 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Queue from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.Deque from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/String.lastIndexOf  [0x00007fab7411e000, 0x00007fab7411e388]  904 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61897328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x50]
<writer thread='140373948942080'/>
[Loaded java.util.ArrayDeque from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
  (sp of caller)
  0x00007fab7411e000: mov    0x8(%rsi),%r10d
  0x00007fab7411e004: shl    $0x3,%r10
  0x00007fab7411e008: cmp    %rax,%r10
  0x00007fab7411e00b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7411e011: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7411e01c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7411e020: mov    %eax,-0x14000(%rsp)
  0x00007fab7411e027: push   %rbp
  0x00007fab7411e028: sub    $0x40,%rsp
  0x00007fab7411e02c: movabs $0x7fab61b6c708,%rax  ;   {metadata(method data for {method} {0x00007fab61897328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7411e036: mov    0xfc(%rax),%edi
  0x00007fab7411e03c: add    $0x8,%edi
  0x00007fab7411e03f: mov    %edi,0xfc(%rax)
  0x00007fab7411e045: movabs $0x7fab61897328,%rax  ;   {metadata({method} {0x00007fab61897328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7411e04f: and    $0x1ff8,%edi
  0x00007fab7411e055: cmp    $0x0,%edi
  0x00007fab7411e058: je     0x00007fab7411e258  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@0 (line 1649)

  0x00007fab7411e05e: cmp    $0x10000,%edx
  0x00007fab7411e064: movabs $0x7fab61b6c708,%rax  ;   {metadata(method data for {method} {0x00007fab61897328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7411e06e: movabs $0x130,%rdi
  0x00007fab7411e078: jge    0x00007fab7411e088
  0x00007fab7411e07e: movabs $0x140,%rdi
  0x00007fab7411e088: mov    (%rax,%rdi,1),%rbx
  0x00007fab7411e08c: lea    0x1(%rbx),%rbx
  0x00007fab7411e090: mov    %rbx,(%rax,%rdi,1)
  0x00007fab7411e094: jge    0x00007fab7411e231  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)

  0x00007fab7411e09a: mov    0xc(%rsi),%eax
  0x00007fab7411e09d: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@7 (line 1652)

  0x00007fab7411e0a1: mov    0xc(%rax),%esi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ; implicit exception: dispatches to 0x00007fab7411e26f
  0x00007fab7411e0a4: dec    %esi
  0x00007fab7411e0a6: movabs $0x7fab61b6c708,%rdi  ;   {metadata(method data for {method} {0x00007fab61897328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7411e0b0: addq   $0x1,0x150(%rdi)
  0x00007fab7411e0b8: movabs $0x7fab61a9c058,%rdi  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7411e0c2: mov    0xfc(%rdi),%ebx
  0x00007fab7411e0c8: add    $0x8,%ebx
  0x00007fab7411e0cb: mov    %ebx,0xfc(%rdi)
  0x00007fab7411e0d1: movabs $0x7fab619a58b8,%rdi  ;   {metadata({method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7411e0db: and    $0x7ffff8,%ebx
  0x00007fab7411e0e1: cmp    $0x0,%ebx
  0x00007fab7411e0e4: je     0x00007fab7411e274
  0x00007fab7411e0ea: cmp    %esi,%ecx
  0x00007fab7411e0ec: movabs $0x7fab61a9c058,%rdi  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7411e0f6: movabs $0x130,%rbx
  0x00007fab7411e100: jg     0x00007fab7411e110
  0x00007fab7411e106: movabs $0x140,%rbx
  0x00007fab7411e110: mov    (%rdi,%rbx,1),%r8
  0x00007fab7411e114: lea    0x1(%r8),%r8
  0x00007fab7411e118: mov    %r8,(%rdi,%rbx,1)
  0x00007fab7411e11c: jg     0x00007fab7411e137  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x00007fab7411e122: movabs $0x7fab61a9c058,%rsi  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7411e12c: incl   0x150(%rsi)
  0x00007fab7411e132: jmpq   0x00007fab7411e1d3  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x00007fab7411e137: mov    %rsi,%rcx
  0x00007fab7411e13a: jmpq   0x00007fab7411e1d3  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x00007fab7411e13f: nop
  0x00007fab7411e140: movslq %ecx,%rsi
  0x00007fab7411e143: cmp    0xc(%rax),%ecx
  0x00007fab7411e146: jae    0x00007fab7411e28b
  0x00007fab7411e14c: movzwl 0x10(%rax,%rsi,2),%esi  ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x00007fab7411e151: cmp    %edx,%esi
  0x00007fab7411e153: movabs $0x7fab61b6c708,%rsi  ;   {metadata(method data for {method} {0x00007fab61897328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7411e15d: movabs $0x180,%rdi
  0x00007fab7411e167: jne    0x00007fab7411e177
  0x00007fab7411e16d: movabs $0x190,%rdi
  0x00007fab7411e177: mov    (%rsi,%rdi,1),%rbx
  0x00007fab7411e17b: lea    0x1(%rbx),%rbx
  0x00007fab7411e17f: mov    %rbx,(%rsi,%rdi,1)
  0x00007fab7411e183: je     0x00007fab7411e211  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x00007fab7411e189: dec    %ecx
  0x00007fab7411e18b: movabs $0x7fab61b6c708,%rsi  ;   {metadata(method data for {method} {0x00007fab61897328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7411e195: mov    0x100(%rsi),%edi
  0x00007fab7411e19b: add    $0x8,%edi
  0x00007fab7411e19e: mov    %edi,0x100(%rsi)
  0x00007fab7411e1a4: movabs $0x7fab61897328,%rsi  ;   {metadata({method} {0x00007fab61897328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7411e1ae: and    $0xfff8,%edi
  0x00007fab7411e1b4: cmp    $0x0,%edi
  0x00007fab7411e1b7: je     0x00007fab7411e294  ; OopMap{rax=Oop off=445}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x00007fab7411e1bd: test   %eax,0x1b6c3f3d(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab7411e1c3: movabs $0x7fab61b6c708,%rsi  ;   {metadata(method data for {method} {0x00007fab61897328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7411e1cd: incl   0x1a0(%rsi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x00007fab7411e1d3: cmp    $0x0,%ecx
  0x00007fab7411e1d6: movabs $0x7fab61b6c708,%rsi  ;   {metadata(method data for {method} {0x00007fab61897328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7411e1e0: movabs $0x160,%rdi
  0x00007fab7411e1ea: jl     0x00007fab7411e1fa
  0x00007fab7411e1f0: movabs $0x170,%rdi
  0x00007fab7411e1fa: mov    (%rsi,%rdi,1),%rbx
  0x00007fab7411e1fe: lea    0x1(%rbx),%rbx
  0x00007fab7411e202: mov    %rbx,(%rsi,%rdi,1)
  0x00007fab7411e206: jl     0x00007fab7411e220
  0x00007fab7411e20c: jmpq   0x00007fab7411e140  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x00007fab7411e211: mov    %rcx,%rax
  0x00007fab7411e214: add    $0x40,%rsp
  0x00007fab7411e218: pop    %rbp
  0x00007fab7411e219: test   %eax,0x1b6c3ee1(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411e21f: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@36 (line 1656)

  0x00007fab7411e220: mov    $0xffffffff,%eax
  0x00007fab7411e225: add    $0x40,%rsp
  0x00007fab7411e229: pop    %rbp
  0x00007fab7411e22a: test   %eax,0x1b6c3ed0(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411e230: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@44 (line 1659)

  0x00007fab7411e231: mov    %rsi,%rdi
  0x00007fab7411e234: movabs $0x7fab61b6c708,%rbx  ;   {metadata(method data for {method} {0x00007fab61897328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7411e23e: addq   $0x1,0x1b8(%rbx)
  0x00007fab7411e246: nop
  0x00007fab7411e247: callq  0x00007fab74047d60  ; OopMap{off=588}
                                                ;*invokespecial lastIndexOfSupplementary {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@48 (line 1661)
                                                ;   {optimized virtual_call}
  0x00007fab7411e24c: add    $0x40,%rsp
  0x00007fab7411e250: pop    %rbp
  0x00007fab7411e251: test   %eax,0x1b6c3ea9(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411e257: retq   
  0x00007fab7411e258: mov    %rax,0x8(%rsp)
  0x00007fab7411e25d: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411e265: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=618}
                                                ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1649)
                                                ;   {runtime_call}
  0x00007fab7411e26a: jmpq   0x00007fab7411e05e
  0x00007fab7411e26f: callq  0x00007fab740fc000  ; OopMap{rax=Oop off=628}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ;   {runtime_call}
  0x00007fab7411e274: mov    %rdi,0x8(%rsp)
  0x00007fab7411e279: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411e281: callq  0x00007fab741005e0  ; OopMap{rax=Oop off=646}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)
                                                ;   {runtime_call}
  0x00007fab7411e286: jmpq   0x00007fab7411e0ea
  0x00007fab7411e28b: mov    %rcx,(%rsp)
  0x00007fab7411e28f: callq  0x00007fab740fb940  ; OopMap{rax=Oop off=660}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)
                                                ;   {runtime_call}
  0x00007fab7411e294: mov    %rsi,0x8(%rsp)
  0x00007fab7411e299: movq   $0x28,(%rsp)
  0x00007fab7411e2a1: callq  0x00007fab741005e0  ; OopMap{rax=Oop off=678}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)
                                                ;   {runtime_call}
  0x00007fab7411e2a6: jmpq   0x00007fab7411e1bd
  0x00007fab7411e2ab: nop
  0x00007fab7411e2ac: nop
  0x00007fab7411e2ad: mov    0x2c0(%r15),%rax
  0x00007fab7411e2b4: movabs $0x0,%r10
  0x00007fab7411e2be: mov    %r10,0x2c0(%r15)
  0x00007fab7411e2c5: movabs $0x0,%r10
  0x00007fab7411e2cf: mov    %r10,0x2c8(%r15)
  0x00007fab7411e2d6: add    $0x40,%rsp
  0x00007fab7411e2da: pop    %rbp
  0x00007fab7411e2db: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
[Stub Code]
  0x00007fab7411e2e0: nop                       ;   {no_reloc}
  0x00007fab7411e2e1: nop
  0x00007fab7411e2e2: nop
  0x00007fab7411e2e3: nop
  0x00007fab7411e2e4: nop
  0x00007fab7411e2e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411e2ef: jmpq   0x00007fab7411e2ef  ;   {runtime_call}
[Exception Handler]
  0x00007fab7411e2f4: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab7411e2f9: mov    %rsp,-0x28(%rsp)
  0x00007fab7411e2fe: sub    $0x80,%rsp
  0x00007fab7411e305: mov    %rax,0x78(%rsp)
  0x00007fab7411e30a: mov    %rcx,0x70(%rsp)
  0x00007fab7411e30f: mov    %rdx,0x68(%rsp)
  0x00007fab7411e314: mov    %rbx,0x60(%rsp)
  0x00007fab7411e319: mov    %rbp,0x50(%rsp)
  0x00007fab7411e31e: mov    %rsi,0x48(%rsp)
  0x00007fab7411e323: mov    %rdi,0x40(%rsp)
  0x00007fab7411e328: mov    %r8,0x38(%rsp)
  0x00007fab7411e32d: mov    %r9,0x30(%rsp)
  0x00007fab7411e332: mov    %r10,0x28(%rsp)
  0x00007fab7411e337: mov    %r11,0x20(%rsp)
  0x00007fab7411e33c: mov    %r12,0x18(%rsp)
  0x00007fab7411e341: mov    %r13,0x10(%rsp)
  0x00007fab7411e346: mov    %r14,0x8(%rsp)
  0x00007fab7411e34b: mov    %r15,(%rsp)
  0x00007fab7411e34f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7411e359: movabs $0x7fab7411e2f9,%rsi  ;   {internal_word}
  0x00007fab7411e363: mov    %rsp,%rdx
  0x00007fab7411e366: and    $0xfffffffffffffff0,%rsp
  0x00007fab7411e36a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7411e36f: hlt    
[Deopt Handler Code]
  0x00007fab7411e370: movabs $0x7fab7411e370,%r10  ;   {section_word}
  0x00007fab7411e37a: push   %r10
  0x00007fab7411e37c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7411e381: hlt    
  0x00007fab7411e382: hlt    
  0x00007fab7411e383: hlt    
  0x00007fab7411e384: hlt    
  0x00007fab7411e385: hlt    
  0x00007fab7411e386: hlt    
  0x00007fab7411e387: hlt    
<nmethod compile_id='37' compiler='C1' level='3' entry='0x00007fab7411e000' size='1912' address='0x00007fab7411de50' relocation_offset='312' insts_offset='432' stub_offset='1168' scopes_data_offset='1352' scopes_pcs_offset='1536' dependencies_offset='1888' nul_chk_table_offset='1896' metadata_offset='1336' method='java/lang/String lastIndexOf (II)I' bytes='52' count='113' backedge_count='3097' iicount='113' stamp='0.182'/>
<writer thread='140373948942080'/>
[Loaded java.util.zip.ZipCoder from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.JarIndex from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.ExtensionDependency from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<task_queued compile_id='38' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='395' iicount='395' level='3' stamp='0.183' comment='tiered' hot_count='395'/>
<task_queued compile_id='39' method='java/lang/Character toUpperCaseEx (I)I' bytes='30' count='256' iicount='256' level='3' stamp='0.183' comment='tiered' hot_count='256'/>
<task_queued compile_id='40' method='java/lang/CharacterDataLatin1 toUpperCaseEx (I)I' bytes='71' count='256' iicount='256' level='3' stamp='0.183' comment='tiered' hot_count='256'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/Arrays.copyOfRange  [0x00007fab7411e840, 0x00007fab7411f178]  2360 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab619cf140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0xb0]  (sp of caller)
  0x00007fab7411e840: mov    %eax,-0x14000(%rsp)
  0x00007fab7411e847: push   %rbp
  0x00007fab7411e848: sub    $0xa0,%rsp
  0x00007fab7411e84f: mov    %rsi,%r8
  0x00007fab7411e852: mov    %rdx,%r9
  0x00007fab7411e855: movabs $0x7fab61ae3ea8,%rbx  ;   {metadata(method data for {method} {0x00007fab619cf140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7411e85f: mov    0xfc(%rbx),%edx
  0x00007fab7411e865: add    $0x8,%edx
  0x00007fab7411e868: mov    %edx,0xfc(%rbx)
  0x00007fab7411e86e: movabs $0x7fab619cf140,%rbx  ;   {metadata({method} {0x00007fab619cf140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7411e878: and    $0x1ff8,%edx
  0x00007fab7411e87e: cmp    $0x0,%edx
  0x00007fab7411e881: je     0x00007fab7411eef9  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x00007fab7411e887: mov    %rcx,%r11
  0x00007fab7411e88a: sub    %r9d,%r11d
  0x00007fab7411e88d: cmp    $0x0,%r11d
  0x00007fab7411e891: movabs $0x7fab61ae3ea8,%rbx  ;   {metadata(method data for {method} {0x00007fab619cf140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7411e89b: movabs $0x130,%rdx
  0x00007fab7411e8a5: jge    0x00007fab7411e8b5
  0x00007fab7411e8ab: movabs $0x140,%rdx
  0x00007fab7411e8b5: mov    (%rbx,%rdx,1),%rsi
  0x00007fab7411e8b9: lea    0x1(%rsi),%rsi
  0x00007fab7411e8bd: mov    %rsi,(%rbx,%rdx,1)
  0x00007fab7411e8c1: jl     0x00007fab7411ea84  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x00007fab7411e8c7: mov    %r11,%rbx
  0x00007fab7411e8ca: movabs $0x7c00001f8,%rdx  ;   {metadata({type array char})}
  0x00007fab7411e8d4: movslq %ebx,%rbx
  0x00007fab7411e8d7: mov    %rbx,%rdi
  0x00007fab7411e8da: cmp    $0xffffff,%rbx
  0x00007fab7411e8e1: ja     0x00007fab7411ef10
  0x00007fab7411e8e7: movabs $0x17,%rsi
  0x00007fab7411e8f1: lea    (%rsi,%rbx,2),%rsi
  0x00007fab7411e8f5: and    $0xfffffffffffffff8,%rsi
  0x00007fab7411e8f9: mov    0x60(%r15),%rax
  0x00007fab7411e8fd: lea    (%rax,%rsi,1),%rsi
  0x00007fab7411e901: cmp    0x70(%r15),%rsi
  0x00007fab7411e905: ja     0x00007fab7411ef10
  0x00007fab7411e90b: mov    %rsi,0x60(%r15)
  0x00007fab7411e90f: sub    %rax,%rsi
  0x00007fab7411e912: movq   $0x1,(%rax)
  0x00007fab7411e919: mov    %rdx,%rcx
  0x00007fab7411e91c: shr    $0x3,%rcx
  0x00007fab7411e920: mov    %ecx,0x8(%rax)
  0x00007fab7411e923: mov    %ebx,0xc(%rax)
  0x00007fab7411e926: sub    $0x10,%rsi
  0x00007fab7411e92a: je     0x00007fab7411e941
  0x00007fab7411e930: xor    %rbx,%rbx
  0x00007fab7411e933: shr    $0x3,%rsi
  0x00007fab7411e937: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fab7411e93c: dec    %rsi
  0x00007fab7411e93f: jne    0x00007fab7411e937  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x00007fab7411e941: mov    0xc(%r8),%esi      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x00007fab7411ef1a
  0x00007fab7411e945: sub    %r9d,%esi
  0x00007fab7411e948: movabs $0x7fab61ae3ea8,%rdx  ;   {metadata(method data for {method} {0x00007fab619cf140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7411e952: addq   $0x1,0x3d0(%rdx)
  0x00007fab7411e95a: movabs $0x7fab61a9c058,%rdx  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7411e964: mov    0xfc(%rdx),%ecx
  0x00007fab7411e96a: add    $0x8,%ecx
  0x00007fab7411e96d: mov    %ecx,0xfc(%rdx)
  0x00007fab7411e973: movabs $0x7fab619a58b8,%rdx  ;   {metadata({method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7411e97d: and    $0x7ffff8,%ecx
  0x00007fab7411e983: cmp    $0x0,%ecx
  0x00007fab7411e986: je     0x00007fab7411ef1f
  0x00007fab7411e98c: cmp    %r11d,%esi
  0x00007fab7411e98f: movabs $0x7fab61a9c058,%rdx  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7411e999: movabs $0x130,%rcx
  0x00007fab7411e9a3: jg     0x00007fab7411e9b3
  0x00007fab7411e9a9: movabs $0x140,%rcx
  0x00007fab7411e9b3: mov    (%rdx,%rcx,1),%rdi
  0x00007fab7411e9b7: lea    0x1(%rdi),%rdi
  0x00007fab7411e9bb: mov    %rdi,(%rdx,%rcx,1)
  0x00007fab7411e9bf: jg     0x00007fab7411e9dd  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00007fab7411e9c5: movabs $0x7fab61a9c058,%rdx  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7411e9cf: incl   0x150(%rdx)
<writer thread='140373948942080'/>
[Loaded java.util.zip.ZipEntry from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
  0x00007fab7411e9d5: mov    %rsi,%rdi
  0x00007fab7411e9d8: jmpq   0x00007fab7411e9e0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00007fab7411e9dd: mov    %r11,%rdi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00007fab7411e9e0: movabs $0x7fab61ae3ea8,%rsi  ;   {metadata(method data for {method} {0x00007fab619cf140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7411e9ea: addq   $0x1,0x3e0(%rsi)
  0x00007fab7411e9f2: mov    %r8,%rsi
  0x00007fab7411e9f5: mov    %r9,%rdx
  0x00007fab7411e9f8: mov    %rax,%rcx
  0x00007fab7411e9fb: mov    $0x0,%r8d
  0x00007fab7411ea01: mov    %rdi,%r9
  0x00007fab7411ea04: mov    %rax,0x70(%rsp)
  0x00007fab7411ea09: test   %edx,%edx
  0x00007fab7411ea0b: jl     0x00007fab7411ef36
  0x00007fab7411ea11: lea    (%rdx,%r9,1),%rdi
  0x00007fab7411ea15: cmp    0xc(%rsi),%edi
  0x00007fab7411ea18: ja     0x00007fab7411ef36
  0x00007fab7411ea1e: lea    (%r8,%r9,1),%rdi
  0x00007fab7411ea22: cmp    0xc(%rcx),%edi
  0x00007fab7411ea25: ja     0x00007fab7411ef36
  0x00007fab7411ea2b: test   %r9d,%r9d
  0x00007fab7411ea2e: jl     0x00007fab7411ef36
  0x00007fab7411ea34: je     0x00007fab7411ea70
  0x00007fab7411ea3a: movslq %edx,%rdx
  0x00007fab7411ea3d: movslq %r8d,%r8
  0x00007fab7411ea40: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007fab7411ea45: lea    0x10(%rcx,%r8,2),%rsi
  0x00007fab7411ea4a: mov    %r9,%rdx
  0x00007fab7411ea4d: test   $0xf,%esp
  0x00007fab7411ea53: je     0x00007fab7411ea6b
  0x00007fab7411ea59: sub    $0x8,%rsp
  0x00007fab7411ea5d: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007fab7411ea62: add    $0x8,%rsp
  0x00007fab7411ea66: jmpq   0x00007fab7411ea70
  0x00007fab7411ea6b: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x00007fab7411ea70: mov    0x70(%rsp),%rax
  0x00007fab7411ea75: add    $0xa0,%rsp
  0x00007fab7411ea7c: pop    %rbp
  0x00007fab7411ea7d: test   %eax,0x1b6c367d(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411ea83: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x00007fab7411ea84: mov    %ecx,0x80(%rsp)
  0x00007fab7411ea8b: nopl   0x0(%rax,%rax,1)
  0x00007fab7411ea90: jmpq   0x00007fab7411ef50  ;   {no_reloc}
  0x00007fab7411ea95: add    %al,(%rax)
  0x00007fab7411ea97: add    %al,(%rax)
  0x00007fab7411ea99: add    %cl,-0x75(%rcx)
  0x00007fab7411ea9c: rex.RXB (bad) 
  0x00007fab7411ea9e: lea    0x20(%rax),%rdi
  0x00007fab7411eaa2: cmp    0x70(%r15),%rdi
  0x00007fab7411eaa6: ja     0x00007fab7411ef5a
  0x00007fab7411eaac: mov    %rdi,0x60(%r15)
  0x00007fab7411eab0: mov    0xa8(%rdx),%rcx
  0x00007fab7411eab7: mov    %rcx,(%rax)
  0x00007fab7411eaba: mov    %rdx,%rcx
  0x00007fab7411eabd: shr    $0x3,%rcx
  0x00007fab7411eac1: mov    %ecx,0x8(%rax)
  0x00007fab7411eac4: xor    %rcx,%rcx
  0x00007fab7411eac7: mov    %ecx,0xc(%rax)
  0x00007fab7411eaca: xor    %rcx,%rcx
  0x00007fab7411eacd: mov    %rcx,0x10(%rax)
  0x00007fab7411ead1: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x00007fab7411ead5: data16 xchg %ax,%ax
  0x00007fab7411ead8: jmpq   0x00007fab7411ef76  ;   {no_reloc}
  0x00007fab7411eadd: add    %al,(%rax)
  0x00007fab7411eadf: add    %al,(%rax)
  0x00007fab7411eae1: add    %cl,-0x77(%rax)
  0x00007fab7411eae4: test   %ah,(%rax,%rcx,4)
  0x00007fab7411eae7: add    %al,(%rax)
  0x00007fab7411eae9: add    %cl,-0x75(%rcx)
  0x00007fab7411eaec: rex.RXB (bad) 
  0x00007fab7411eaee: lea    0x18(%rax),%rdi
  0x00007fab7411eaf2: cmp    0x70(%r15),%rdi
  0x00007fab7411eaf6: ja     0x00007fab7411ef80
  0x00007fab7411eafc: mov    %rdi,0x60(%r15)
  0x00007fab7411eb00: mov    0xa8(%rdx),%rcx
  0x00007fab7411eb07: mov    %rcx,(%rax)
  0x00007fab7411eb0a: mov    %rdx,%rcx
  0x00007fab7411eb0d: shr    $0x3,%rcx
  0x00007fab7411eb11: mov    %ecx,0x8(%rax)
  0x00007fab7411eb14: xor    %rcx,%rcx
  0x00007fab7411eb17: mov    %ecx,0xc(%rax)
  0x00007fab7411eb1a: xor    %rcx,%rcx
  0x00007fab7411eb1d: mov    %rcx,0x10(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x00007fab7411eb21: mov    %rax,%rbx
  0x00007fab7411eb24: movabs $0x7fab61ae3ea8,%rdx  ;   {metadata(method data for {method} {0x00007fab619cf140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7411eb2e: addq   $0x1,0x150(%rdx)
  0x00007fab7411eb36: movabs $0x7fab61b7aa30,%rbx  ;   {metadata(method data for {method} {0x00007fab61919fd0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab7411eb40: mov    0xfc(%rbx),%edx
  0x00007fab7411eb46: add    $0x8,%edx
  0x00007fab7411eb49: mov    %edx,0xfc(%rbx)
  0x00007fab7411eb4f: movabs $0x7fab61919fd0,%rbx  ;   {metadata({method} {0x00007fab61919fd0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab7411eb59: and    $0x7ffff8,%edx
  0x00007fab7411eb5f: cmp    $0x0,%edx
  0x00007fab7411eb62: je     0x00007fab7411ef8d
  0x00007fab7411eb68: mov    %rax,%rbx
  0x00007fab7411eb6b: movabs $0x7fab61b7aa30,%rdx  ;   {metadata(method data for {method} {0x00007fab61919fd0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab7411eb75: addq   $0x1,0x130(%rdx)
  0x00007fab7411eb7d: movabs $0x7fab61b7ab90,%rbx  ;   {metadata(method data for {method} {0x00007fab61915920} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7411eb87: mov    0xfc(%rbx),%edx
  0x00007fab7411eb8d: add    $0x8,%edx
  0x00007fab7411eb90: mov    %edx,0xfc(%rbx)
  0x00007fab7411eb96: movabs $0x7fab61915920,%rbx  ;   {metadata({method} {0x00007fab61915920} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7411eba0: and    $0x7ffff8,%edx
  0x00007fab7411eba6: cmp    $0x0,%edx
  0x00007fab7411eba9: je     0x00007fab7411efa4
  0x00007fab7411ebaf: mov    %rax,%rbx
  0x00007fab7411ebb2: movabs $0x7fab61b7ab90,%rdx  ;   {metadata(method data for {method} {0x00007fab61915920} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7411ebbc: addq   $0x1,0x130(%rdx)
  0x00007fab7411ebc4: movabs $0x7fab61a342a0,%rbx  ;   {metadata(method data for {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7411ebce: mov    0xfc(%rbx),%edx
  0x00007fab7411ebd4: add    $0x8,%edx
  0x00007fab7411ebd7: mov    %edx,0xfc(%rbx)
  0x00007fab7411ebdd: movabs $0x7fab618914d8,%rbx  ;   {metadata({method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7411ebe7: and    $0x7ffff8,%edx
  0x00007fab7411ebed: cmp    $0x0,%edx
  0x00007fab7411ebf0: je     0x00007fab7411efbb
  0x00007fab7411ebf6: mov    $0x10,%ebx
  0x00007fab7411ebfb: movabs $0x7c00001f8,%rdx  ;   {metadata({type array char})}
  0x00007fab7411ec05: mov    %rax,%r13
  0x00007fab7411ec08: movslq %ebx,%rbx
  0x00007fab7411ec0b: mov    %rbx,%rdi
  0x00007fab7411ec0e: cmp    $0xffffff,%rbx
  0x00007fab7411ec15: ja     0x00007fab7411efd2
  0x00007fab7411ec1b: movabs $0x17,%rsi
  0x00007fab7411ec25: lea    (%rsi,%rbx,2),%rsi
  0x00007fab7411ec29: and    $0xfffffffffffffff8,%rsi
  0x00007fab7411ec2d: mov    0x60(%r15),%rax
  0x00007fab7411ec31: lea    (%rax,%rsi,1),%rsi
  0x00007fab7411ec35: cmp    0x70(%r15),%rsi
  0x00007fab7411ec39: ja     0x00007fab7411efd2
  0x00007fab7411ec3f: mov    %rsi,0x60(%r15)
  0x00007fab7411ec43: sub    %rax,%rsi
  0x00007fab7411ec46: movq   $0x1,(%rax)
  0x00007fab7411ec4d: mov    %rdx,%rcx
  0x00007fab7411ec50: shr    $0x3,%rcx
  0x00007fab7411ec54: mov    %ecx,0x8(%rax)
  0x00007fab7411ec57: mov    %ebx,0xc(%rax)
  0x00007fab7411ec5a: sub    $0x10,%rsi
  0x00007fab7411ec5e: je     0x00007fab7411ec75
  0x00007fab7411ec64: xor    %rbx,%rbx
  0x00007fab7411ec67: shr    $0x3,%rsi
  0x00007fab7411ec6b: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fab7411ec70: dec    %rsi
  0x00007fab7411ec73: jne    0x00007fab7411ec6b  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x00007fab7411ec75: mov    %rax,%r10
  0x00007fab7411ec78: shr    $0x3,%r10
  0x00007fab7411ec7c: mov    %r10d,0x10(%r13)
  0x00007fab7411ec80: mov    %r13,%rax
  0x00007fab7411ec83: shr    $0x9,%rax
  0x00007fab7411ec87: movabs $0x7fab701ff000,%rdx
  0x00007fab7411ec91: movb   $0x0,(%rax,%rdx,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x00007fab7411ec95: mov    %r13,%rax
  0x00007fab7411ec98: movabs $0x7fab61ae3ea8,%rdx  ;   {metadata(method data for {method} {0x00007fab619cf140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7411eca2: addq   $0x1,0x160(%rdx)
  0x00007fab7411ecaa: movabs $0x7fab61b7ad08,%rdx  ;   {metadata(method data for {method} {0x00007fab6191a920} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab7411ecb4: mov    0xfc(%rdx),%esi
  0x00007fab7411ecba: add    $0x8,%esi
  0x00007fab7411ecbd: mov    %esi,0xfc(%rdx)
  0x00007fab7411ecc3: movabs $0x7fab6191a920,%rdx  ;   {metadata({method} {0x00007fab6191a920} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab7411eccd: and    $0x7ffff8,%esi
  0x00007fab7411ecd3: cmp    $0x0,%esi
  0x00007fab7411ecd6: je     0x00007fab7411efdc
  0x00007fab7411ecdc: mov    %r13,%rax
  0x00007fab7411ecdf: movabs $0x7fab61b7ad08,%rdx  ;   {metadata(method data for {method} {0x00007fab6191a920} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab7411ece9: addq   $0x1,0x130(%rdx)
  0x00007fab7411ecf1: mov    %r9,%rdx
  0x00007fab7411ecf4: mov    %r13,%rsi          ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x00007fab7411ecf7: mov    %r13,0x78(%rsp)
  0x00007fab7411ecfc: nop
  0x00007fab7411ecfd: nop
  0x00007fab7411ecfe: nop
  0x00007fab7411ecff: callq  0x00007fab74047d60  ; OopMap{[120]=Oop [136]=Oop off=1220}
                                                ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007fab7411ed04: mov    0x78(%rsp),%rax
  0x00007fab7411ed09: movabs $0x7fab61ae3ea8,%rdx  ;   {metadata(method data for {method} {0x00007fab619cf140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7411ed13: addq   $0x1,0x1f8(%rdx)
  0x00007fab7411ed1b: movabs $0x7fab61b7b120,%rdx  ;   {metadata(method data for {method} {0x00007fab6191a360} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab7411ed25: mov    0xfc(%rdx),%esi
  0x00007fab7411ed2b: add    $0x8,%esi
  0x00007fab7411ed2e: mov    %esi,0xfc(%rdx)
  0x00007fab7411ed34: movabs $0x7fab6191a360,%rdx  ;   {metadata({method} {0x00007fab6191a360} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab7411ed3e: and    $0x7ffff8,%esi
  0x00007fab7411ed44: cmp    $0x0,%esi
  0x00007fab7411ed47: je     0x00007fab7411eff3
  0x00007fab7411ed4d: mov    0x78(%rsp),%rax
  0x00007fab7411ed52: movabs $0x7fab61b7b120,%rdx  ;   {metadata(method data for {method} {0x00007fab6191a360} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab7411ed5c: addq   $0x1,0x130(%rdx)
  0x00007fab7411ed64: movabs $0x6715948a8,%rdx  ;   {oop(&quot; &gt; &quot;)}
  0x00007fab7411ed6e: mov    0x78(%rsp),%rsi    ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x00007fab7411ed73: nop
  0x00007fab7411ed74: nop
  0x00007fab7411ed75: nop
  0x00007fab7411ed76: nop
  0x00007fab7411ed77: callq  0x00007fab74047d60  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007fab7411ed7c: mov    0x78(%rsp),%rax
  0x00007fab7411ed81: movabs $0x7fab61ae3ea8,%rdx  ;   {metadata(method data for {method} {0x00007fab619cf140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7411ed8b: addq   $0x1,0x290(%rdx)
  0x00007fab7411ed93: movabs $0x7fab61b7ad08,%rdx  ;   {metadata(method data for {method} {0x00007fab6191a920} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab7411ed9d: mov    0xfc(%rdx),%esi
  0x00007fab7411eda3: add    $0x8,%esi
  0x00007fab7411eda6: mov    %esi,0xfc(%rdx)
  0x00007fab7411edac: movabs $0x7fab6191a920,%rdx  ;   {metadata({method} {0x00007fab6191a920} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab7411edb6: and    $0x7ffff8,%esi
  0x00007fab7411edbc: cmp    $0x0,%esi
  0x00007fab7411edbf: je     0x00007fab7411f00a
  0x00007fab7411edc5: mov    0x78(%rsp),%rax
  0x00007fab7411edca: movabs $0x7fab61b7ad08,%rdx  ;   {metadata(method data for {method} {0x00007fab6191a920} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab7411edd4: addq   $0x1,0x130(%rdx)
  0x00007fab7411eddc: mov    0x80(%rsp),%edx
  0x00007fab7411ede3: mov    0x78(%rsp),%rsi    ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x00007fab7411ede8: nop
  0x00007fab7411ede9: nop
  0x00007fab7411edea: nop
  0x00007fab7411edeb: nop
  0x00007fab7411edec: nop
  0x00007fab7411eded: nop
  0x00007fab7411edee: nop
  0x00007fab7411edef: callq  0x00007fab74047d60  ; OopMap{[120]=Oop [136]=Oop off=1460}
                                                ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007fab7411edf4: mov    0x78(%rsp),%rax
  0x00007fab7411edf9: movabs $0x7fab61ae3ea8,%rdx  ;   {metadata(method data for {method} {0x00007fab619cf140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7411ee03: addq   $0x1,0x328(%rdx)
  0x00007fab7411ee0b: movabs $0x7fab61b7b290,%rdx  ;   {metadata(method data for {method} {0x00007fab6191bb88} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab7411ee15: mov    0xfc(%rdx),%esi
  0x00007fab7411ee1b: add    $0x8,%esi
  0x00007fab7411ee1e: mov    %esi,0xfc(%rdx)
  0x00007fab7411ee24: movabs $0x7fab6191bb88,%rdx  ;   {metadata({method} {0x00007fab6191bb88} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab7411ee2e: and    $0x7ffff8,%esi
  0x00007fab7411ee34: cmp    $0x0,%esi
  0x00007fab7411ee37: je     0x00007fab7411f021
  0x00007fab7411ee3d: movabs $0x7c0001610,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007fab7411ee47: mov    0x60(%r15),%rax
  0x00007fab7411ee4b: lea    0x18(%rax),%rdi
  0x00007fab7411ee4f: cmp    0x70(%r15),%rdi
  0x00007fab7411ee53: ja     0x00007fab7411f038
  0x00007fab7411ee59: mov    %rdi,0x60(%r15)
  0x00007fab7411ee5d: mov    0xa8(%rdx),%rcx
  0x00007fab7411ee64: mov    %rcx,(%rax)
  0x00007fab7411ee67: mov    %rdx,%rcx
  0x00007fab7411ee6a: shr    $0x3,%rcx
  0x00007fab7411ee6e: mov    %ecx,0x8(%rax)
  0x00007fab7411ee71: xor    %rcx,%rcx
  0x00007fab7411ee74: mov    %ecx,0xc(%rax)
  0x00007fab7411ee77: xor    %rcx,%rcx
  0x00007fab7411ee7a: mov    %rcx,0x10(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007fab7411ee7e: mov    0x78(%rsp),%rdx
  0x00007fab7411ee83: mov    0x10(%rdx),%ecx
  0x00007fab7411ee86: shl    $0x3,%rcx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007fab7411ee8a: mov    0xc(%rdx),%r8d     ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007fab7411ee8e: mov    %rax,%rdx
  0x00007fab7411ee91: movabs $0x7fab61b7b290,%rsi  ;   {metadata(method data for {method} {0x00007fab6191bb88} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab7411ee9b: addq   $0x1,0x130(%rsi)
  0x00007fab7411eea3: mov    %rcx,%rdx
  0x00007fab7411eea6: mov    $0x0,%ecx
  0x00007fab7411eeab: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007fab7411eeae: mov    %rax,0x90(%rsp)
  0x00007fab7411eeb6: nop
  0x00007fab7411eeb7: callq  0x00007fab74047d60  ; OopMap{[136]=Oop [144]=Oop off=1660}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007fab7411eebc: mov    0x88(%rsp),%rax
  0x00007fab7411eec4: movabs $0x7fab61ae3ea8,%rdx  ;   {metadata(method data for {method} {0x00007fab619cf140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7411eece: addq   $0x1,0x3c0(%rdx)
  0x00007fab7411eed6: mov    0x90(%rsp),%rdx
  0x00007fab7411eede: mov    0x88(%rsp),%rsi    ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x00007fab7411eee6: nop
  0x00007fab7411eee7: callq  0x00007fab74047d60  ; OopMap{[136]=Oop off=1708}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007fab7411eeec: mov    0x88(%rsp),%rax
  0x00007fab7411eef4: jmpq   0x00007fab7411f070
  0x00007fab7411eef9: mov    %rbx,0x8(%rsp)
  0x00007fab7411eefe: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411ef06: callq  0x00007fab741005e0  ; OopMap{r8=Oop off=1739}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x00007fab7411ef0b: jmpq   0x00007fab7411e887
  0x00007fab7411ef10: callq  0x00007fab740fd020  ; OopMap{r8=Oop off=1749}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x00007fab7411ef15: jmpq   0x00007fab7411e941
  0x00007fab7411ef1a: callq  0x00007fab740fc000  ; OopMap{r8=Oop rax=Oop off=1759}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x00007fab7411ef1f: mov    %rdx,0x8(%rsp)
  0x00007fab7411ef24: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411ef2c: callq  0x00007fab741005e0  ; OopMap{r8=Oop rax=Oop off=1777}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x00007fab7411ef31: jmpq   0x00007fab7411e98c
  0x00007fab7411ef36: nop
  0x00007fab7411ef37: callq  0x00007fab74048160  ; OopMap{[112]=Oop off=1788}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x00007fab7411ef3c: jmpq   0x00007fab7411ea70
  0x00007fab7411ef41: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab7411ef4b: mov    $0xa050f00,%eax
  0x00007fab7411ef50: callq  0x00007fab740ff5e0  ; OopMap{off=1813}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x00007fab7411ef55: jmpq   0x00007fab7411ea90
  0x00007fab7411ef5a: mov    %rdx,%rdx
  0x00007fab7411ef5d: callq  0x00007fab740fc760  ; OopMap{off=1826}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x00007fab7411ef62: jmpq   0x00007fab7411ead5
  0x00007fab7411ef67: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab7411ef71: mov    $0xa050f00,%eax
  0x00007fab7411ef76: callq  0x00007fab740ff5e0  ; OopMap{rax=Oop off=1851}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x00007fab7411ef7b: jmpq   0x00007fab7411ead8
  0x00007fab7411ef80: mov    %rdx,%rdx
  0x00007fab7411ef83: callq  0x00007fab740fc760  ; OopMap{[136]=Oop off=1864}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x00007fab7411ef88: jmpq   0x00007fab7411eb21
  0x00007fab7411ef8d: mov    %rbx,0x8(%rsp)
  0x00007fab7411ef92: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411ef9a: callq  0x00007fab741005e0  ; OopMap{[136]=Oop rax=Oop off=1887}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007fab7411ef9f: jmpq   0x00007fab7411eb68
  0x00007fab7411efa4: mov    %rbx,0x8(%rsp)
  0x00007fab7411efa9: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411efb1: callq  0x00007fab741005e0  ; OopMap{[136]=Oop rax=Oop off=1910}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007fab7411efb6: jmpq   0x00007fab7411ebaf
  0x00007fab7411efbb: mov    %rbx,0x8(%rsp)
  0x00007fab7411efc0: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411efc8: callq  0x00007fab741005e0  ; OopMap{[136]=Oop rax=Oop off=1933}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007fab7411efcd: jmpq   0x00007fab7411ebf6
  0x00007fab7411efd2: callq  0x00007fab740fd020  ; OopMap{[136]=Oop r13=Oop off=1943}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007fab7411efd7: jmpq   0x00007fab7411ec75
  0x00007fab7411efdc: mov    %rdx,0x8(%rsp)
  0x00007fab7411efe1: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411efe9: callq  0x00007fab741005e0  ; OopMap{[136]=Oop r13=Oop off=1966}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x00007fab7411efee: jmpq   0x00007fab7411ecdc
  0x00007fab7411eff3: mov    %rdx,0x8(%rsp)
  0x00007fab7411eff8: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411f000: callq  0x00007fab741005e0  ; OopMap{[120]=Oop [136]=Oop off=1989}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x00007fab7411f005: jmpq   0x00007fab7411ed4d
  0x00007fab7411f00a: mov    %rdx,0x8(%rsp)
  0x00007fab7411f00f: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411f017: callq  0x00007fab741005e0  ; OopMap{[120]=Oop [136]=Oop off=2012}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x00007fab7411f01c: jmpq   0x00007fab7411edc5
  0x00007fab7411f021: mov    %rdx,0x8(%rsp)
  0x00007fab7411f026: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411f02e: callq  0x00007fab741005e0  ; OopMap{[120]=Oop [136]=Oop off=2035}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x00007fab7411f033: jmpq   0x00007fab7411ee3d
  0x00007fab7411f038: mov    %rdx,%rdx
  0x00007fab7411f03b: callq  0x00007fab740fc760  ; OopMap{[120]=Oop [136]=Oop off=2048}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x00007fab7411f040: jmpq   0x00007fab7411ee7e
  0x00007fab7411f045: nop
  0x00007fab7411f046: nop
  0x00007fab7411f047: mov    0x2c0(%r15),%rax
  0x00007fab7411f04e: movabs $0x0,%r10
  0x00007fab7411f058: mov    %r10,0x2c0(%r15)
  0x00007fab7411f05f: movabs $0x0,%r10
  0x00007fab7411f069: mov    %r10,0x2c8(%r15)
  0x00007fab7411f070: add    $0xa0,%rsp
  0x00007fab7411f077: pop    %rbp
  0x00007fab7411f078: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7411f07d: hlt    
  0x00007fab7411f07e: hlt    
  0x00007fab7411f07f: hlt    
[Stub Code]
  0x00007fab7411f080: nop                       ;   {no_reloc}
  0x00007fab7411f081: nop
  0x00007fab7411f082: nop
  0x00007fab7411f083: nop
  0x00007fab7411f084: nop
  0x00007fab7411f085: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411f08f: jmpq   0x00007fab7411f08f  ;   {runtime_call}
  0x00007fab7411f094: nop
  0x00007fab7411f095: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411f09f: jmpq   0x00007fab7411f09f  ;   {runtime_call}
  0x00007fab7411f0a4: nop
  0x00007fab7411f0a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411f0af: jmpq   0x00007fab7411f0af  ;   {runtime_call}
  0x00007fab7411f0b4: nop
  0x00007fab7411f0b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411f0bf: jmpq   0x00007fab7411f0bf  ;   {runtime_call}
  0x00007fab7411f0c4: nop
  0x00007fab7411f0c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411f0cf: jmpq   0x00007fab7411f0cf  ;   {runtime_call}
  0x00007fab7411f0d4: nop
  0x00007fab7411f0d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411f0df: jmpq   0x00007fab7411f0df  ;   {runtime_call}
[Exception Handler]
  0x00007fab7411f0e4: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab7411f0e9: mov    %rsp,-0x28(%rsp)
  0x00007fab7411f0ee: sub    $0x80,%rsp
  0x00007fab7411f0f5: mov    %rax,0x78(%rsp)
  0x00007fab7411f0fa: mov    %rcx,0x70(%rsp)
  0x00007fab7411f0ff: mov    %rdx,0x68(%rsp)
  0x00007fab7411f104: mov    %rbx,0x60(%rsp)
  0x00007fab7411f109: mov    %rbp,0x50(%rsp)
  0x00007fab7411f10e: mov    %rsi,0x48(%rsp)
  0x00007fab7411f113: mov    %rdi,0x40(%rsp)
  0x00007fab7411f118: mov    %r8,0x38(%rsp)
  0x00007fab7411f11d: mov    %r9,0x30(%rsp)
  0x00007fab7411f122: mov    %r10,0x28(%rsp)
  0x00007fab7411f127: mov    %r11,0x20(%rsp)
  0x00007fab7411f12c: mov    %r12,0x18(%rsp)
  0x00007fab7411f131: mov    %r13,0x10(%rsp)
  0x00007fab7411f136: mov    %r14,0x8(%rsp)
  0x00007fab7411f13b: mov    %r15,(%rsp)
  0x00007fab7411f13f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7411f149: movabs $0x7fab7411f0e9,%rsi  ;   {internal_word}
  0x00007fab7411f153: mov    %rsp,%rdx
  0x00007fab7411f156: and    $0xfffffffffffffff0,%rsp
  0x00007fab7411f15a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7411f15f: hlt    
[Deopt Handler Code]
  0x00007fab7411f160: movabs $0x7fab7411f160,%r10  ;   {section_word}
  0x00007fab7411f16a: push   %r10
  0x00007fab7411f16c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7411f171: hlt    
  0x00007fab7411f172: hlt    
  0x00007fab7411f173: hlt    
  0x00007fab7411f174: hlt    
  0x00007fab7411f175: hlt    
  0x00007fab7411f176: hlt    
  0x00007fab7411f177: hlt    
<nmethod compile_id='38' compiler='C1' level='3' entry='0x00007fab7411e840' size='4360' address='0x00007fab7411e610' relocation_offset='312' insts_offset='560' stub_offset='2672' scopes_data_offset='2992' scopes_pcs_offset='3600' dependencies_offset='4336' nul_chk_table_offset='4344' oops_offset='2920' metadata_offset='2928' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='430' iicount='430' stamp='0.186'/>
----------------------------------------------------------------------
java/lang/Character.toUpperCaseEx  [0x00007fab7411f8e0, 0x00007fab7411fc78]  920 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab61942be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fab7411f8e0: mov    %eax,-0x14000(%rsp)
<writer thread='140373948942080'/>
[Loaded java.util.jar.JarEntry from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>

  0x00007fab7411f8e7: push   %rbp
  0x00007fab7411f8e8: sub    $0x30,%rsp
  0x00007fab7411f8ec: movabs $0x7fab61b7b400,%rdi  ;   {metadata(method data for {method} {0x00007fab61942be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab7411f8f6: mov    0xfc(%rdi),%ebx
  0x00007fab7411f8fc: add    $0x8,%ebx
  0x00007fab7411f8ff: mov    %ebx,0xfc(%rdi)
  0x00007fab7411f905: movabs $0x7fab61942be0,%rdi  ;   {metadata({method} {0x00007fab61942be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab7411f90f: and    $0x1ff8,%ebx
  0x00007fab7411f915: cmp    $0x0,%ebx
  0x00007fab7411f918: je     0x00007fab7411fb68  ;*getstatic $assertionsDisabled {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@0 (line 7137)

  0x00007fab7411f91e: movabs $0x7fab61b7b400,%rdi  ;   {metadata(method data for {method} {0x00007fab61942be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab7411f928: incl   0x130(%rdi)        ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@3 (line 7137)

  0x00007fab7411f92e: movabs $0x7fab61b7b400,%rdi  ;   {metadata(method data for {method} {0x00007fab61942be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab7411f938: addq   $0x1,0x190(%rdi)
  0x00007fab7411f940: mov    %rsi,%rdi
  0x00007fab7411f943: mov    %rdi,%rsi          ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@22 (line 7138)

  0x00007fab7411f946: mov    %edi,0x20(%rsp)
  0x00007fab7411f94a: nop
  0x00007fab7411f94b: nop
  0x00007fab7411f94c: nop
  0x00007fab7411f94d: nop
  0x00007fab7411f94e: nop
  0x00007fab7411f94f: callq  0x00007fab74048160  ; OopMap{off=116}
                                                ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@22 (line 7138)
                                                ;   {static_call}
  0x00007fab7411f954: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00007fab7411fb7f
  0x00007fab7411f957: mov    %rax,%rdx
  0x00007fab7411f95a: movabs $0x7fab61b7b400,%rsi  ;   {metadata(method data for {method} {0x00007fab61942be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab7411f964: mov    0x8(%rdx),%edx
  0x00007fab7411f967: shl    $0x3,%rdx
  0x00007fab7411f96b: cmp    0x1b0(%rsi),%rdx
  0x00007fab7411f972: jne    0x00007fab7411f981
  0x00007fab7411f974: addq   $0x1,0x1b8(%rsi)
  0x00007fab7411f97c: jmpq   0x00007fab7411fb43
  0x00007fab7411f981: cmp    0x1c0(%rsi),%rdx
  0x00007fab7411f988: jne    0x00007fab7411f997
  0x00007fab7411f98a: addq   $0x1,0x1c8(%rsi)
  0x00007fab7411f992: jmpq   0x00007fab7411fb43
  0x00007fab7411f997: cmp    0x1d0(%rsi),%rdx
  0x00007fab7411f99e: jne    0x00007fab7411f9ad
  0x00007fab7411f9a0: addq   $0x1,0x1d8(%rsi)
  0x00007fab7411f9a8: jmpq   0x00007fab7411fb43
  0x00007fab7411f9ad: cmp    0x1e0(%rsi),%rdx
  0x00007fab7411f9b4: jne    0x00007fab7411f9c3
  0x00007fab7411f9b6: addq   $0x1,0x1e8(%rsi)
  0x00007fab7411f9be: jmpq   0x00007fab7411fb43
  0x00007fab7411f9c3: cmp    0x1f0(%rsi),%rdx
  0x00007fab7411f9ca: jne    0x00007fab7411f9d9
  0x00007fab7411f9cc: addq   $0x1,0x1f8(%rsi)
  0x00007fab7411f9d4: jmpq   0x00007fab7411fb43
  0x00007fab7411f9d9: cmp    0x200(%rsi),%rdx
  0x00007fab7411f9e0: jne    0x00007fab7411f9ef
  0x00007fab7411f9e2: addq   $0x1,0x208(%rsi)
  0x00007fab7411f9ea: jmpq   0x00007fab7411fb43
  0x00007fab7411f9ef: cmp    0x210(%rsi),%rdx
  0x00007fab7411f9f6: jne    0x00007fab7411fa05
  0x00007fab7411f9f8: addq   $0x1,0x218(%rsi)
  0x00007fab7411fa00: jmpq   0x00007fab7411fb43
  0x00007fab7411fa05: cmp    0x220(%rsi),%rdx
  0x00007fab7411fa0c: jne    0x00007fab7411fa1b
  0x00007fab7411fa0e: addq   $0x1,0x228(%rsi)
  0x00007fab7411fa16: jmpq   0x00007fab7411fb43
  0x00007fab7411fa1b: cmpq   $0x0,0x1b0(%rsi)
  0x00007fab7411fa26: jne    0x00007fab7411fa3f
  0x00007fab7411fa28: mov    %rdx,0x1b0(%rsi)
  0x00007fab7411fa2f: movq   $0x1,0x1b8(%rsi)
  0x00007fab7411fa3a: jmpq   0x00007fab7411fb43
  0x00007fab7411fa3f: cmpq   $0x0,0x1c0(%rsi)
  0x00007fab7411fa4a: jne    0x00007fab7411fa63
  0x00007fab7411fa4c: mov    %rdx,0x1c0(%rsi)
  0x00007fab7411fa53: movq   $0x1,0x1c8(%rsi)
  0x00007fab7411fa5e: jmpq   0x00007fab7411fb43
  0x00007fab7411fa63: cmpq   $0x0,0x1d0(%rsi)
  0x00007fab7411fa6e: jne    0x00007fab7411fa87
  0x00007fab7411fa70: mov    %rdx,0x1d0(%rsi)
  0x00007fab7411fa77: movq   $0x1,0x1d8(%rsi)
  0x00007fab7411fa82: jmpq   0x00007fab7411fb43
  0x00007fab7411fa87: cmpq   $0x0,0x1e0(%rsi)
  0x00007fab7411fa92: jne    0x00007fab7411faab
  0x00007fab7411fa94: mov    %rdx,0x1e0(%rsi)
  0x00007fab7411fa9b: movq   $0x1,0x1e8(%rsi)
  0x00007fab7411faa6: jmpq   0x00007fab7411fb43
  0x00007fab7411faab: cmpq   $0x0,0x1f0(%rsi)
  0x00007fab7411fab6: jne    0x00007fab7411facf
  0x00007fab7411fab8: mov    %rdx,0x1f0(%rsi)
  0x00007fab7411fabf: movq   $0x1,0x1f8(%rsi)
  0x00007fab7411faca: jmpq   0x00007fab7411fb43
  0x00007fab7411facf: cmpq   $0x0,0x200(%rsi)
  0x00007fab7411fada: jne    0x00007fab7411faf3
  0x00007fab7411fadc: mov    %rdx,0x200(%rsi)
  0x00007fab7411fae3: movq   $0x1,0x208(%rsi)
  0x00007fab7411faee: jmpq   0x00007fab7411fb43
  0x00007fab7411faf3: cmpq   $0x0,0x210(%rsi)
  0x00007fab7411fafe: jne    0x00007fab7411fb17
  0x00007fab7411fb00: mov    %rdx,0x210(%rsi)
  0x00007fab7411fb07: movq   $0x1,0x218(%rsi)
  0x00007fab7411fb12: jmpq   0x00007fab7411fb43
  0x00007fab7411fb17: cmpq   $0x0,0x220(%rsi)
  0x00007fab7411fb22: jne    0x00007fab7411fb3b
  0x00007fab7411fb24: mov    %rdx,0x220(%rsi)
  0x00007fab7411fb2b: movq   $0x1,0x228(%rsi)
  0x00007fab7411fb36: jmpq   0x00007fab7411fb43
  0x00007fab7411fb3b: addq   $0x1,0x1a0(%rsi)
  0x00007fab7411fb43: mov    0x20(%rsp),%edx
  0x00007fab7411fb47: mov    %rax,%rsi          ;*invokevirtual toUpperCaseEx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@26 (line 7138)

  0x00007fab7411fb4a: nop
  0x00007fab7411fb4b: nop
  0x00007fab7411fb4c: nop
  0x00007fab7411fb4d: movabs $0xffffffffffffffff,%rax
  0x00007fab7411fb57: callq  0x00007fab74047f60  ; OopMap{off=636}
                                                ;*invokevirtual toUpperCaseEx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@26 (line 7138)
                                                ;   {virtual_call}
  0x00007fab7411fb5c: add    $0x30,%rsp
  0x00007fab7411fb60: pop    %rbp
  0x00007fab7411fb61: test   %eax,0x1b6c2599(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7411fb67: retq   
  0x00007fab7411fb68: mov    %rdi,0x8(%rsp)
  0x00007fab7411fb6d: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7411fb75: callq  0x00007fab741005e0  ; OopMap{off=666}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCaseEx@-1 (line 7137)
                                                ;   {runtime_call}
  0x00007fab7411fb7a: jmpq   0x00007fab7411f91e
  0x00007fab7411fb7f: callq  0x00007fab740fc000  ; OopMap{rax=Oop off=676}
                                                ;*invokevirtual toUpperCaseEx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@26 (line 7138)
                                                ;   {runtime_call}
  0x00007fab7411fb84: nop
  0x00007fab7411fb85: nop
  0x00007fab7411fb86: mov    0x2c0(%r15),%rax
  0x00007fab7411fb8d: movabs $0x0,%r10
  0x00007fab7411fb97: mov    %r10,0x2c0(%r15)
  0x00007fab7411fb9e: movabs $0x0,%r10
  0x00007fab7411fba8: mov    %r10,0x2c8(%r15)
  0x00007fab7411fbaf: add    $0x30,%rsp
  0x00007fab7411fbb3: pop    %rbp
  0x00007fab7411fbb4: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7411fbb9: hlt    
  0x00007fab7411fbba: hlt    
  0x00007fab7411fbbb: hlt    
  0x00007fab7411fbbc: hlt    
  0x00007fab7411fbbd: hlt    
  0x00007fab7411fbbe: hlt    
  0x00007fab7411fbbf: hlt    
[Stub Code]
  0x00007fab7411fbc0: nop                       ;   {no_reloc}
  0x00007fab7411fbc1: nop
  0x00007fab7411fbc2: nop
  0x00007fab7411fbc3: nop
  0x00007fab7411fbc4: nop
  0x00007fab7411fbc5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411fbcf: jmpq   0x00007fab7411fbcf  ;   {runtime_call}
  0x00007fab7411fbd4: nop
  0x00007fab7411fbd5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7411fbdf: jmpq   0x00007fab7411fbdf  ;   {runtime_call}
[Exception Handler]
  0x00007fab7411fbe4: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab7411fbe9: mov    %rsp,-0x28(%rsp)
  0x00007fab7411fbee: sub    $0x80,%rsp
  0x00007fab7411fbf5: mov    %rax,0x78(%rsp)
  0x00007fab7411fbfa: mov    %rcx,0x70(%rsp)
  0x00007fab7411fbff: mov    %rdx,0x68(%rsp)
  0x00007fab7411fc04: mov    %rbx,0x60(%rsp)
  0x00007fab7411fc09: mov    %rbp,0x50(%rsp)
  0x00007fab7411fc0e: mov    %rsi,0x48(%rsp)
  0x00007fab7411fc13: mov    %rdi,0x40(%rsp)
  0x00007fab7411fc18: mov    %r8,0x38(%rsp)
  0x00007fab7411fc1d: mov    %r9,0x30(%rsp)
  0x00007fab7411fc22: mov    %r10,0x28(%rsp)
  0x00007fab7411fc27: mov    %r11,0x20(%rsp)
  0x00007fab7411fc2c: mov    %r12,0x18(%rsp)
  0x00007fab7411fc31: mov    %r13,0x10(%rsp)
  0x00007fab7411fc36: mov    %r14,0x8(%rsp)
  0x00007fab7411fc3b: mov    %r15,(%rsp)
  0x00007fab7411fc3f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7411fc49: movabs $0x7fab7411fbe9,%rsi  ;   {internal_word}
  0x00007fab7411fc53: mov    %rsp,%rdx
  0x00007fab7411fc56: and    $0xfffffffffffffff0,%rsp
  0x00007fab7411fc5a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7411fc5f: hlt    
[Deopt Handler Code]
  0x00007fab7411fc60: movabs $0x7fab7411fc60,%r10  ;   {section_word}
  0x00007fab7411fc6a: push   %r10
  0x00007fab7411fc6c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7411fc71: hlt    
  0x00007fab7411fc72: hlt    
  0x00007fab7411fc73: hlt    
  0x00007fab7411fc74: hlt    
  0x00007fab7411fc75: hlt    
  0x00007fab7411fc76: hlt    
  0x00007fab7411fc77: hlt    
<nmethod compile_id='39' compiler='C1' level='3' entry='0x00007fab7411f8e0' size='1568' address='0x00007fab7411f750' relocation_offset='312' insts_offset='400' stub_offset='1136' scopes_data_offset='1328' scopes_pcs_offset='1384' dependencies_offset='1544' nul_chk_table_offset='1552' metadata_offset='1320' method='java/lang/Character toUpperCaseEx (I)I' bytes='30' count='761' iicount='761' stamp='0.187'/>
<writer thread='140373948942080'/>
[Loaded java.util.jar.JarFile$JarFileEntry from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/CharacterDataLatin1.toUpperCaseEx  [0x00007fab7411ff20, 0x00007fab741201d0]  688 bytes
<writer thread='140373948942080'/>
[Loaded sun.misc.URLClassPath$JarLoader$2 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
[Entry Point]
[Constants]
  # {method} {0x00007fab61a8cf70} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rsi:rsi   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x00007fab7411ff20: mov    0x8(%rsi),%r10d
  0x00007fab7411ff24: shl    $0x3,%r10
  0x00007fab7411ff28: cmp    %rax,%r10
  0x00007fab7411ff2b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7411ff31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7411ff3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7411ff40: mov    %eax,-0x14000(%rsp)
  0x00007fab7411ff47: push   %rbp
  0x00007fab7411ff48: sub    $0x40,%rsp
  0x00007fab7411ff4c: movabs $0x7fab61b7b678,%rax  ;   {metadata(method data for {method} {0x00007fab61a8cf70} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab7411ff56: mov    0xfc(%rax),%edi
  0x00007fab7411ff5c: add    $0x8,%edi
  0x00007fab7411ff5f: mov    %edi,0xfc(%rax)
  0x00007fab7411ff65: movabs $0x7fab61a8cf70,%rax  ;   {metadata({method} {0x00007fab61a8cf70} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab7411ff6f: and    $0x1ff8,%edi
  0x00007fab7411ff75: cmp    $0x0,%edi
  0x00007fab7411ff78: je     0x00007fab741200c3  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@0 (line 222)

  0x00007fab7411ff7e: movabs $0x7fab61b7b678,%rax  ;   {metadata(method data for {method} {0x00007fab61a8cf70} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab7411ff88: addq   $0x1,0x148(%rax)
  0x00007fab7411ff90: movabs $0x7fab61b69628,%rax  ;   {metadata(method data for {method} {0x00007fab61a8be08} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab7411ff9a: mov    0xfc(%rax),%esi
  0x00007fab7411ffa0: add    $0x8,%esi
  0x00007fab7411ffa3: mov    %esi,0xfc(%rax)
  0x00007fab7411ffa9: movabs $0x7fab61a8be08,%rax  ;   {metadata({method} {0x00007fab61a8be08} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab7411ffb3: and    $0x7ffff8,%esi
  0x00007fab7411ffb9: cmp    $0x0,%esi
  0x00007fab7411ffbc: je     0x00007fab741200da
  0x00007fab7411ffc2: mov    %rdx,%rax
  0x00007fab7411ffc5: and    $0xffff,%eax
  0x00007fab7411ffcb: movabs $0x670bc4928,%rsi  ;   {oop([I)}
  0x00007fab7411ffd5: movslq %eax,%rdi
  0x00007fab7411ffd8: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x00007fab741200f1
  0x00007fab7411ffdb: jae    0x00007fab741200fb
  0x00007fab7411ffe1: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@4 (line 223)

  0x00007fab7411ffe5: mov    %rax,%rsi
  0x00007fab7411ffe8: and    $0x10000,%esi
  0x00007fab7411ffee: cmp    $0x0,%esi
  0x00007fab7411fff1: movabs $0x7fab61b7b678,%rsi  ;   {metadata(method data for {method} {0x00007fab61a8cf70} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab7411fffb: movabs $0x1c8,%rdi
  0x00007fab74120005: je     0x00007fab74120015
  0x00007fab7412000b: movabs $0x1d8,%rdi
  0x00007fab74120015: mov    (%rsi,%rdi,1),%rbx
  0x00007fab74120019: lea    0x1(%rbx),%rbx
  0x00007fab7412001d: mov    %rbx,(%rsi,%rdi,1)
  0x00007fab74120021: je     0x00007fab741200b4  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@12 (line 225)

  0x00007fab74120027: mov    %rax,%rsi
  0x00007fab7412002a: and    $0x7fc0000,%esi
  0x00007fab74120030: cmp    $0x7fc0000,%esi
  0x00007fab74120036: movabs $0x7fab61b7b678,%rsi  ;   {metadata(method data for {method} {0x00007fab61a8cf70} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab74120040: movabs $0x1e8,%rdi
  0x00007fab7412004a: je     0x00007fab7412005a
  0x00007fab74120050: movabs $0x1f8,%rdi
  0x00007fab7412005a: mov    (%rsi,%rdi,1),%rbx
  0x00007fab7412005e: lea    0x1(%rbx),%rbx
  0x00007fab74120062: mov    %rbx,(%rsi,%rdi,1)
  0x00007fab74120066: jne    0x00007fab7412009c  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@21 (line 226)

  0x00007fab7412006c: cmp    $0xb5,%edx
  0x00007fab74120072: je     0x00007fab74120082  ;*lookupswitch {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@41 (line 231)

  0x00007fab74120078: mov    $0xffffffff,%edx
  0x00007fab7412007d: jmpq   0x00007fab741200b4  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@69 (line 238)

  0x00007fab74120082: movabs $0x7fab61b7b678,%rax  ;   {metadata(method data for {method} {0x00007fab61a8cf70} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab7412008c: incl   0x250(%rax)
  0x00007fab74120092: mov    $0x39c,%edx
  0x00007fab74120097: jmpq   0x00007fab741200b4  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@64 (line 233)

  0x00007fab7412009c: shl    $0x5,%eax
  0x00007fab7412009f: sar    $0x17,%eax
  0x00007fab741200a2: sub    %eax,%edx
  0x00007fab741200a4: movabs $0x7fab61b7b678,%rax  ;   {metadata(method data for {method} {0x00007fab61a8cf70} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab741200ae: incl   0x208(%rax)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@37 (line 229)

  0x00007fab741200b4: mov    %rdx,%rax
  0x00007fab741200b7: add    $0x40,%rsp
  0x00007fab741200bb: pop    %rbp
  0x00007fab741200bc: test   %eax,0x1b6c203e(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741200c2: retq   
  0x00007fab741200c3: mov    %rax,0x8(%rsp)
  0x00007fab741200c8: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741200d0: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=437}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@-1 (line 222)
                                                ;   {runtime_call}
  0x00007fab741200d5: jmpq   0x00007fab7411ff7e
  0x00007fab741200da: mov    %rax,0x8(%rsp)
  0x00007fab741200df: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741200e7: callq  0x00007fab741005e0  ; OopMap{off=460}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@4 (line 223)
                                                ;   {runtime_call}
  0x00007fab741200ec: jmpq   0x00007fab7411ffc2
  0x00007fab741200f1: callq  0x00007fab740fc000  ; OopMap{rsi=Oop off=470}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@4 (line 223)
                                                ;   {runtime_call}
  0x00007fab741200f6: callq  0x00007fab740fc000  ; OopMap{rsi=Oop off=475}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@4 (line 223)
                                                ;   {runtime_call}
  0x00007fab741200fb: mov    %rax,(%rsp)
  0x00007fab741200ff: callq  0x00007fab740fb940  ; OopMap{rsi=Oop off=484}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@4 (line 223)
                                                ;   {runtime_call}
  0x00007fab74120104: nop
  0x00007fab74120105: nop
  0x00007fab74120106: mov    0x2c0(%r15),%rax
  0x00007fab7412010d: movabs $0x0,%r10
  0x00007fab74120117: mov    %r10,0x2c0(%r15)
  0x00007fab7412011e: movabs $0x0,%r10
  0x00007fab74120128: mov    %r10,0x2c8(%r15)
  0x00007fab7412012f: add    $0x40,%rsp
  0x00007fab74120133: pop    %rbp
  0x00007fab74120134: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74120139: hlt    
  0x00007fab7412013a: hlt    
  0x00007fab7412013b: hlt    
  0x00007fab7412013c: hlt    
  0x00007fab7412013d: hlt    
  0x00007fab7412013e: hlt    
  0x00007fab7412013f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74120140: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74120145: mov    %rsp,-0x28(%rsp)
  0x00007fab7412014a: sub    $0x80,%rsp
  0x00007fab74120151: mov    %rax,0x78(%rsp)
  0x00007fab74120156: mov    %rcx,0x70(%rsp)
  0x00007fab7412015b: mov    %rdx,0x68(%rsp)
  0x00007fab74120160: mov    %rbx,0x60(%rsp)
  0x00007fab74120165: mov    %rbp,0x50(%rsp)
  0x00007fab7412016a: mov    %rsi,0x48(%rsp)
  0x00007fab7412016f: mov    %rdi,0x40(%rsp)
  0x00007fab74120174: mov    %r8,0x38(%rsp)
  0x00007fab74120179: mov    %r9,0x30(%rsp)
  0x00007fab7412017e: mov    %r10,0x28(%rsp)
  0x00007fab74120183: mov    %r11,0x20(%rsp)
  0x00007fab74120188: mov    %r12,0x18(%rsp)
  0x00007fab7412018d: mov    %r13,0x10(%rsp)
  0x00007fab74120192: mov    %r14,0x8(%rsp)
  0x00007fab74120197: mov    %r15,(%rsp)
  0x00007fab7412019b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741201a5: movabs $0x7fab74120145,%rsi  ;   {internal_word}
  0x00007fab741201af: mov    %rsp,%rdx
  0x00007fab741201b2: and    $0xfffffffffffffff0,%rsp
  0x00007fab741201b6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741201bb: hlt    
[Deopt Handler Code]
  0x00007fab741201bc: movabs $0x7fab741201bc,%r10  ;   {section_word}
  0x00007fab741201c6: push   %r10
  0x00007fab741201c8: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab741201cd: hlt    
  0x00007fab741201ce: hlt    
  0x00007fab741201cf: hlt    
<nmethod compile_id='40' compiler='C1' level='3' entry='0x00007fab7411ff20' size='1504' address='0x00007fab7411fd90' relocation_offset='312' insts_offset='400' stub_offset='944' scopes_data_offset='1112' scopes_pcs_offset='1232' dependencies_offset='1472' nul_chk_table_offset='1480' metadata_offset='1088' method='java/lang/CharacterDataLatin1 toUpperCaseEx (I)I' bytes='71' count='761' iicount='761' stamp='0.188'/>
<writer thread='140373948942080'/>
[Loaded java.util.zip.ZipFile$ZipFileInputStream from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded jdk.vm.ci.runtime.JVMCI from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<task_queued compile_id='41' method='java/lang/ThreadLocal getMap (Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap;' bytes='5' count='256' iicount='256' level='3' stamp='0.189' comment='tiered' hot_count='256'/>
<task_queued compile_id='42' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='256' iicount='256' level='1' stamp='0.189' comment='tiered' hot_count='256'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/ThreadLocal.getMap  [0x00007fab74120500, 0x00007fab74120650]  336 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab619b5478} &apos;getMap&apos; &apos;(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap;&apos; in &apos;java/lang/ThreadLocal&apos;
  # this:     rsi:rsi   = &apos;java/lang/ThreadLocal&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Thread&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab74120500: mov    0x8(%rsi),%r10d
  0x00007fab74120504: shl    $0x3,%r10
  0x00007fab74120508: cmp    %rax,%r10
  0x00007fab7412050b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74120511: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7412051c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74120520: mov    %eax,-0x14000(%rsp)
  0x00007fab74120527: push   %rbp
  0x00007fab74120528: sub    $0x30,%rsp
  0x00007fab7412052c: movabs $0x7fab61b811c8,%rax  ;   {metadata(method data for {method} {0x00007fab619b5478} &apos;getMap&apos; &apos;(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap;&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00007fab74120536: mov    0xfc(%rax),%edi
  0x00007fab7412053c: add    $0x8,%edi
  0x00007fab7412053f: mov    %edi,0xfc(%rax)
  0x00007fab74120545: movabs $0x7fab619b5478,%rax  ;   {metadata({method} {0x00007fab619b5478} &apos;getMap&apos; &apos;(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap;&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00007fab7412054f: and    $0x1ff8,%edi
  0x00007fab74120555: cmp    $0x0,%edi
  0x00007fab74120558: je     0x00007fab74120571  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal::getMap@0 (line 233)

  0x00007fab7412055e: mov    0x50(%rdx),%eax    ; implicit exception: dispatches to 0x00007fab74120585
  0x00007fab74120561: shl    $0x3,%rax          ;*getfield threadLocals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal::getMap@1 (line 233)

  0x00007fab74120565: add    $0x30,%rsp
  0x00007fab74120569: pop    %rbp
  0x00007fab7412056a: test   %eax,0x1b6c1b90(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74120570: retq   
  0x00007fab74120571: mov    %rax,0x8(%rsp)
  0x00007fab74120576: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412057e: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop off=131}
                                                ;*synchronization entry
                                                ; - java.lang.ThreadLocal::getMap@-1 (line 233)
                                                ;   {runtime_call}
  0x00007fab74120583: jmp    0x00007fab7412055e
  0x00007fab74120585: callq  0x00007fab740fc000  ; OopMap{off=138}
                                                ;*getfield threadLocals {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal::getMap@1 (line 233)
                                                ;   {runtime_call}
  0x00007fab7412058a: nop
  0x00007fab7412058b: nop
  0x00007fab7412058c: mov    0x2c0(%r15),%rax
  0x00007fab74120593: movabs $0x0,%r10
  0x00007fab7412059d: mov    %r10,0x2c0(%r15)
  0x00007fab741205a4: movabs $0x0,%r10
  0x00007fab741205ae: mov    %r10,0x2c8(%r15)
  0x00007fab741205b5: add    $0x30,%rsp
  0x00007fab741205b9: pop    %rbp
  0x00007fab741205ba: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab741205bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab741205c0: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab741205c5: mov    %rsp,-0x28(%rsp)
  0x00007fab741205ca: sub    $0x80,%rsp
  0x00007fab741205d1: mov    %rax,0x78(%rsp)
  0x00007fab741205d6: mov    %rcx,0x70(%rsp)
  0x00007fab741205db: mov    %rdx,0x68(%rsp)
  0x00007fab741205e0: mov    %rbx,0x60(%rsp)
  0x00007fab741205e5: mov    %rbp,0x50(%rsp)
  0x00007fab741205ea: mov    %rsi,0x48(%rsp)
  0x00007fab741205ef: mov    %rdi,0x40(%rsp)
  0x00007fab741205f4: mov    %r8,0x38(%rsp)
  0x00007fab741205f9: mov    %r9,0x30(%rsp)
  0x00007fab741205fe: mov    %r10,0x28(%rsp)
  0x00007fab74120603: mov    %r11,0x20(%rsp)
  0x00007fab74120608: mov    %r12,0x18(%rsp)
  0x00007fab7412060d: mov    %r13,0x10(%rsp)
  0x00007fab74120612: mov    %r14,0x8(%rsp)
  0x00007fab74120617: mov    %r15,(%rsp)
  0x00007fab7412061b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74120625: movabs $0x7fab741205c5,%rsi  ;   {internal_word}
  0x00007fab7412062f: mov    %rsp,%rdx
  0x00007fab74120632: and    $0xfffffffffffffff0,%rsp
  0x00007fab74120636: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7412063b: hlt    
[Deopt Handler Code]
  0x00007fab7412063c: movabs $0x7fab7412063c,%r10  ;   {section_word}
  0x00007fab74120646: push   %r10
  0x00007fab74120648: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7412064d: hlt    
  0x00007fab7412064e: hlt    
  0x00007fab7412064f: hlt    
<nmethod compile_id='41' compiler='C1' level='3' entry='0x00007fab74120500' size='872' address='0x00007fab74120390' relocation_offset='312' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='752' dependencies_offset='848' nul_chk_table_offset='856' metadata_offset='704' method='java/lang/ThreadLocal getMap (Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap;' bytes='5' count='258' iicount='258' stamp='0.190'/>
<writer thread='140373948942080'/>
<task_queued compile_id='43' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='256' iicount='256' level='3' stamp='0.190' comment='tiered' hot_count='256'/>
<task_queued compile_id='44' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='124' backedge_count='7168' iicount='124' level='3' stamp='0.190' comment='tiered' hot_count='124'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/HashMap.hash  [0x00007fab741208a0, 0x00007fab74120c48]  936 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab741208a0: mov    %eax,-0x14000(%rsp)
  0x00007fab741208a7: push   %rbp
  0x00007fab741208a8: sub    $0x30,%rsp
  0x00007fab741208ac: movabs $0x7fab61b81320,%rdi  ;   {metadata(method data for {method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab741208b6: mov    0xfc(%rdi),%ebx
  0x00007fab741208bc: add    $0x8,%ebx
  0x00007fab741208bf: mov    %ebx,0xfc(%rdi)
  0x00007fab741208c5: movabs $0x7fab61997920,%rdi  ;   {metadata({method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab741208cf: and    $0x1ff8,%ebx
  0x00007fab741208d5: cmp    $0x0,%ebx
  0x00007fab741208d8: je     0x00007fab74120b4c  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; -
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.code.CompiledCode from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
 java.util.HashMap::hash@0 (line 338)

  0x00007fab741208de: cmp    $0x0,%rsi
  0x00007fab741208e2: movabs $0x7fab61b81320,%rdi  ;   {metadata(method data for {method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab741208ec: movabs $0x130,%rbx
  0x00007fab741208f6: jne    0x00007fab74120906
  0x00007fab741208fc: movabs $0x140,%rbx
  0x00007fab74120906: mov    (%rdi,%rbx,1),%rax
  0x00007fab7412090a: lea    0x1(%rax),%rax
  0x00007fab7412090e: mov    %rax,(%rdi,%rbx,1)
  0x00007fab74120912: jne    0x00007fab74120932  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 338)

  0x00007fab74120918: movabs $0x7fab61b81320,%rsi  ;   {metadata(method data for {method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab74120922: incl   0x150(%rsi)
  0x00007fab74120928: mov    $0x0,%esi
  0x00007fab7412092d: jmpq   0x00007fab74120b3d  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 338)

  0x00007fab74120932: cmp    (%rsi),%rax        ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; implicit exception: dispatches to 0x00007fab74120b63
  0x00007fab74120935: mov    %rsi,%rdi
  0x00007fab74120938: movabs $0x7fab61b81320,%rbx  ;   {metadata(method data for {method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab74120942: mov    0x8(%rdi),%edi
  0x00007fab74120945: shl    $0x3,%rdi
  0x00007fab74120949: cmp    0x178(%rbx),%rdi
  0x00007fab74120950: jne    0x00007fab7412095f
  0x00007fab74120952: addq   $0x1,0x180(%rbx)
  0x00007fab7412095a: jmpq   0x00007fab74120b21
  0x00007fab7412095f: cmp    0x188(%rbx),%rdi
  0x00007fab74120966: jne    0x00007fab74120975
  0x00007fab74120968: addq   $0x1,0x190(%rbx)
  0x00007fab74120970: jmpq   0x00007fab74120b21
  0x00007fab74120975: cmp    0x198(%rbx),%rdi
  0x00007fab7412097c: jne    0x00007fab7412098b
  0x00007fab7412097e: addq   $0x1,0x1a0(%rbx)
  0x00007fab74120986: jmpq   0x00007fab74120b21
  0x00007fab7412098b: cmp    0x1a8(%rbx),%rdi
  0x00007fab74120992: jne    0x00007fab741209a1
  0x00007fab74120994: addq   $0x1,0x1b0(%rbx)
  0x00007fab7412099c: jmpq   0x00007fab74120b21
  0x00007fab741209a1: cmp    0x1b8(%rbx),%rdi
  0x00007fab741209a8: jne    0x00007fab741209b7
  0x00007fab741209aa: addq   $0x1,0x1c0(%rbx)
  0x00007fab741209b2: jmpq   0x00007fab74120b21
  0x00007fab741209b7: cmp    0x1c8(%rbx),%rdi
  0x00007fab741209be: jne    0x00007fab741209cd
  0x00007fab741209c0: addq   $0x1,0x1d0(%rbx)
  0x00007fab741209c8: jmpq   0x00007fab74120b21
  0x00007fab741209cd: cmp    0x1d8(%rbx),%rdi
  0x00007fab741209d4: jne    0x00007fab741209e3
  0x00007fab741209d6: addq   $0x1,0x1e0(%rbx)
  0x00007fab741209de: jmpq   0x00007fab74120b21
  0x00007fab741209e3: cmp    0x1e8(%rbx),%rdi
  0x00007fab741209ea: jne    0x00007fab741209f9
  0x00007fab741209ec: addq   $0x1,0x1f0(%rbx)
  0x00007fab741209f4: jmpq   0x00007fab74120b21
  0x00007fab741209f9: cmpq   $0x0,0x178(%rbx)
  0x00007fab74120a04: jne    0x00007fab74120a1d
  0x00007fab74120a06: mov    %rdi,0x178(%rbx)
  0x00007fab74120a0d: movq   $0x1,0x180(%rbx)
  0x00007fab74120a18: jmpq   0x00007fab74120b21
  0x00007fab74120a1d: cmpq   $0x0,0x188(%rbx)
  0x00007fab74120a28: jne    0x00007fab74120a41
  0x00007fab74120a2a: mov    %rdi,0x188(%rbx)
  0x00007fab74120a31: movq   $0x1,0x190(%rbx)
  0x00007fab74120a3c: jmpq   0x00007fab74120b21
  0x00007fab74120a41: cmpq   $0x0,0x198(%rbx)
  0x00007fab74120a4c: jne    0x00007fab74120a65
  0x00007fab74120a4e: mov    %rdi,0x198(%rbx)
  0x00007fab74120a55: movq   $0x1,0x1a0(%rbx)
  0x00007fab74120a60: jmpq   0x00007fab74120b21
  0x00007fab74120a65: cmpq   $0x0,0x1a8(%rbx)
  0x00007fab74120a70: jne    0x00007fab74120a89
  0x00007fab74120a72: mov    %rdi,0x1a8(%rbx)
  0x00007fab74120a79: movq   $0x1,0x1b0(%rbx)
  0x00007fab74120a84: jmpq   0x00007fab74120b21
  0x00007fab74120a89: cmpq   $0x0,0x1b8(%rbx)
  0x00007fab74120a94: jne    0x00007fab74120aad
  0x00007fab74120a96: mov    %rdi,0x1b8(%rbx)
  0x00007fab74120a9d: movq   $0x1,0x1c0(%rbx)
  0x00007fab74120aa8: jmpq   0x00007fab74120b21
  0x00007fab74120aad: cmpq   $0x0,0x1c8(%rbx)
  0x00007fab74120ab8: jne    0x00007fab74120ad1
  0x00007fab74120aba: mov    %rdi,0x1c8(%rbx)
  0x00007fab74120ac1: movq   $0x1,0x1d0(%rbx)
  0x00007fab74120acc: jmpq   0x00007fab74120b21
  0x00007fab74120ad1: cmpq   $0x0,0x1d8(%rbx)
  0x00007fab74120adc: jne    0x00007fab74120af5
  0x00007fab74120ade: mov    %rdi,0x1d8(%rbx)
  0x00007fab74120ae5: movq   $0x1,0x1e0(%rbx)
  0x00007fab74120af0: jmpq   0x00007fab74120b21
  0x00007fab74120af5: cmpq   $0x0,0x1e8(%rbx)
  0x00007fab74120b00: jne    0x00007fab74120b19
  0x00007fab74120b02: mov    %rdi,0x1e8(%rbx)
  0x00007fab74120b09: movq   $0x1,0x1f0(%rbx)
  0x00007fab74120b14: jmpq   0x00007fab74120b21
  0x00007fab74120b19: addq   $0x1,0x168(%rbx)
  0x00007fab74120b21: nop
  0x00007fab74120b22: nop
  0x00007fab74120b23: nop
  0x00007fab74120b24: nop
  0x00007fab74120b25: movabs $0xffffffffffffffff,%rax
  0x00007fab74120b2f: callq  0x00007fab74047f60  ; OopMap{off=660}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ;   {virtual_call}
  0x00007fab74120b34: mov    %rax,%rsi
  0x00007fab74120b37: shr    $0x10,%esi
  0x00007fab74120b3a: xor    %rax,%rsi
  0x00007fab74120b3d: mov    %rsi,%rax
  0x00007fab74120b40: add    $0x30,%rsp
  0x00007fab74120b44: pop    %rbp
  0x00007fab74120b45: test   %eax,0x1b6c15b5(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74120b4b: retq   
  0x00007fab74120b4c: mov    %rdi,0x8(%rsp)
  0x00007fab74120b51: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74120b59: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=702}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ;   {runtime_call}
  0x00007fab74120b5e: jmpq   0x00007fab741208de
  0x00007fab74120b63: callq  0x00007fab740fc000  ; OopMap{rsi=Oop off=712}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ;   {runtime_call}
  0x00007fab74120b68: nop
  0x00007fab74120b69: nop
  0x00007fab74120b6a: mov    0x2c0(%r15),%rax
  0x00007fab74120b71: movabs $0x0,%r10
  0x00007fab74120b7b: mov    %r10,0x2c0(%r15)
  0x00007fab74120b82: movabs $0x0,%r10
  0x00007fab74120b8c: mov    %r10,0x2c8(%r15)
  0x00007fab74120b93: add    $0x30,%rsp
  0x00007fab74120b97: pop    %rbp
  0x00007fab74120b98: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74120b9d: hlt    
  0x00007fab74120b9e: hlt    
  0x00007fab74120b9f: hlt    
[Stub Code]
  0x00007fab74120ba0: nop                       ;   {no_reloc}
  0x00007fab74120ba1: nop
  0x00007fab74120ba2: nop
  0x00007fab74120ba3: nop
  0x00007fab74120ba4: nop
  0x00007fab74120ba5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74120baf: jmpq   0x00007fab74120baf  ;   {runtime_call}
[Exception Handler]
  0x00007fab74120bb4: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74120bb9: mov    %rsp,-0x28(%rsp)
  0x00007fab74120bbe: sub    $0x80,%rsp
  0x00007fab74120bc5: mov    %rax,0x78(%rsp)
  0x00007fab74120bca: mov    %rcx,0x70(%rsp)
  0x00007fab74120bcf: mov    %rdx,0x68(%rsp)
  0x00007fab74120bd4: mov    %rbx,0x60(%rsp)
  0x00007fab74120bd9: mov    %rbp,0x50(%rsp)
  0x00007fab74120bde: mov    %rsi,0x48(%rsp)
  0x00007fab74120be3: mov    %rdi,0x40(%rsp)
  0x00007fab74120be8: mov    %r8,0x38(%rsp)
  0x00007fab74120bed: mov    %r9,0x30(%rsp)
  0x00007fab74120bf2: mov    %r10,0x28(%rsp)
  0x00007fab74120bf7: mov    %r11,0x20(%rsp)
  0x00007fab74120bfc: mov    %r12,0x18(%rsp)
  0x00007fab74120c01: mov    %r13,0x10(%rsp)
  0x00007fab74120c06: mov    %r14,0x8(%rsp)
  0x00007fab74120c0b: mov    %r15,(%rsp)
  0x00007fab74120c0f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74120c19: movabs $0x7fab74120bb9,%rsi  ;   {internal_word}
  0x00007fab74120c23: mov    %rsp,%rdx
  0x00007fab74120c26: and    $0xfffffffffffffff0,%rsp
  0x00007fab74120c2a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74120c2f: hlt    
[Deopt Handler Code]
  0x00007fab74120c30: movabs $0x7fab74120c30,%r10  ;   {section_word}
  0x00007fab74120c3a: push   %r10
  0x00007fab74120c3c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74120c41: hlt    
  0x00007fab74120c42: hlt    
  0x00007fab74120c43: hlt    
  0x00007fab74120c44: hlt    
  0x00007fab74120c45: hlt    
  0x00007fab74120c46: hlt    
  0x00007fab74120c47: hlt    
<nmethod compile_id='43' compiler='C1' level='3' entry='0x00007fab741208a0' size='1560' address='0x00007fab74120710' relocation_offset='312' insts_offset='400' stub_offset='1168' scopes_data_offset='1344' scopes_pcs_offset='1392' dependencies_offset='1536' nul_chk_table_offset='1544' metadata_offset='1336' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='265' iicount='265' stamp='0.191'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.HotSpotCompiledCode from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='45' method='java/lang/Character toLowerCase (C)C' bytes='6' count='256' iicount='256' level='3' stamp='0.191' comment='tiered' hot_count='256'/>
[Loaded jdk.vm.ci.hotspot.HotSpotCompiledCode$Comment from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='46' method='java/net/URL getProtocol ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.191' comment='tiered' hot_count='128'/>
[Loaded jdk.vm.ci.hotspot.HotSpotCompiledNmethod from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
sun/nio/cs/UTF_8$Encoder.encode  [0x00007fab741216e0, 0x00007fab741224d8]  3576 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # this:     rsi:rsi   = &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  # parm3:    r9:r9     = &apos;[B&apos;
  #           [sp+0x90]  (sp of caller)
  0x00007fab741216e0: mov    0x8(%rsi),%r10d
  0x00007fab741216e4: shl    $0x3,%r10
  0x00007fab741216e8: cmp    %rax,%r10
  0x00007fab741216eb: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab741216f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab741216fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74121700: mov    %eax,-0x14000(%rsp)
  0x00007fab74121707: push   %rbp
  0x00007fab74121708: sub    $0x80,%rsp
  0x00007fab7412170f: mov    %rsi,0x48(%rsp)
  0x00007fab74121714: mov    %rdx,0x60(%rsp)
  0x00007fab74121719: mov    %r9,0x70(%rsp)
  0x00007fab7412171e: movabs $0x7fab61b81640,%rax  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab74121728: mov    0xfc(%rax),%edi
  0x00007fab7412172e: add    $0x8,%edi
  0x00007fab74121731: mov    %edi,0xfc(%rax)
  0x00007fab74121737: movabs $0x7fab61a091c0,%rax  ;   {metadata({method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab74121741: and    $0x1ff8,%edi
  0x00007fab74121747: cmp    $0x0,%edi
  0x00007fab7412174a: je     0x00007fab74122299  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@0 (line 704)

  0x00007fab74121750: mov    %rcx,%rdi
  0x00007fab74121753: add    %r8d,%edi
  0x00007fab74121756: mov    %edi,0x68(%rsp)
  0x00007fab7412175a: mov    0xc(%r9),%eax      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ; implicit exception: dispatches to 0x00007fab741222b0
  0x00007fab7412175e: movabs $0x7fab61b81640,%rbx  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab74121768: addq   $0x1,0x130(%rbx)
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.meta.InvokeTarget from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>

  0x00007fab74121770: movabs $0x7fab61a9c058,%rbx  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7412177a: mov    0xfc(%rbx),%r11d
  0x00007fab74121781: add    $0x8,%r11d
  0x00007fab74121785: mov    %r11d,0xfc(%rbx)
  0x00007fab7412178c: movabs $0x7fab619a58b8,%rbx  ;   {metadata({method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab74121796: and    $0x7ffff8,%r11d
  0x00007fab7412179d: cmp    $0x0,%r11d
  0x00007fab741217a1: je     0x00007fab741222b5
  0x00007fab741217a7: cmp    %eax,%r8d
  0x00007fab741217aa: movabs $0x7fab61a9c058,%rbx  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab741217b4: movabs $0x130,%r11
  0x00007fab741217be: jg     0x00007fab741217ce
  0x00007fab741217c4: movabs $0x140,%r11
  0x00007fab741217ce: mov    (%rbx,%r11,1),%r13
  0x00007fab741217d2: lea    0x1(%r13),%r13
  0x00007fab741217d6: mov    %r13,(%rbx,%r11,1)
  0x00007fab741217da: jg     0x00007fab741217f5  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x00007fab741217e0: movabs $0x7fab61a9c058,%rax  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab741217ea: incl   0x150(%rax)
  0x00007fab741217f0: jmpq   0x00007fab741217f8  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x00007fab741217f5: mov    %rax,%r8           ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x00007fab741217f8: mov    $0x0,%eax
  0x00007fab741217fd: jmpq   0x00007fab741218ba  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)

  0x00007fab74121802: nopw   0x0(%rax,%rax,1)
  0x00007fab74121808: movslq %ecx,%rbx
  0x00007fab7412180b: cmp    0xc(%rdx),%ecx     ; implicit exception: dispatches to 0x00007fab741222cc
  0x00007fab7412180e: jae    0x00007fab741222d6
  0x00007fab74121814: movzwl 0x10(%rdx,%rbx,2),%ebx  ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x00007fab74121819: cmp    $0x80,%ebx
  0x00007fab7412181f: movabs $0x7fab61b81640,%r11  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab74121829: movabs $0x160,%r13
  0x00007fab74121833: jge    0x00007fab74121843
  0x00007fab74121839: movabs $0x170,%r13
  0x00007fab74121843: mov    (%r11,%r13,1),%r14
  0x00007fab74121847: lea    0x1(%r14),%r14
  0x00007fab7412184b: mov    %r14,(%r11,%r13,1)
  0x00007fab7412184f: jge    0x00007fab741218f8  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x00007fab74121855: mov    %rax,%r11
  0x00007fab74121858: inc    %r11d
  0x00007fab7412185b: inc    %ecx
  0x00007fab7412185d: movslq %eax,%r13
  0x00007fab74121860: cmp    0xc(%r9),%eax
  0x00007fab74121864: jae    0x00007fab741222df
  0x00007fab7412186a: mov    %bl,0x10(%r9,%r13,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x00007fab7412186f: movabs $0x7fab61b81640,%rax  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab74121879: mov    0x100(%rax),%ebx
  0x00007fab7412187f: add    $0x8,%ebx
  0x00007fab74121882: mov    %ebx,0x100(%rax)
  0x00007fab74121888: movabs $0x7fab61a091c0,%rax  ;   {metadata({method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab74121892: and    $0xfff8,%ebx
  0x00007fab74121898: cmp    $0x0,%ebx
  0x00007fab7412189b: je     0x00007fab741222e8  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=449}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)

  0x00007fab741218a1: test   %eax,0x1b6c0859(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab741218a7: movabs $0x7fab61b81640,%rax  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab741218b1: incl   0x180(%rax)
  0x00007fab741218b7: mov    %r11,%rax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)

  0x00007fab741218ba: cmp    %r8d,%eax
  0x00007fab741218bd: movabs $0x7fab61b81640,%rbx  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab741218c7: movabs $0x140,%r11
  0x00007fab741218d1: jge    0x00007fab741218e1
  0x00007fab741218d7: movabs $0x150,%r11
  0x00007fab741218e1: mov    (%rbx,%r11,1),%r13
  0x00007fab741218e5: lea    0x1(%r13),%r13
  0x00007fab741218e9: mov    %r13,(%rbx,%r11,1)
  0x00007fab741218ed: jl     0x00007fab74121808  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x00007fab741218f3: nopl   0x0(%rax,%rax,1)
  0x00007fab741218f8: cmp    %edi,%ecx
  0x00007fab741218fa: movabs $0x7fab61b81640,%rbx  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab74121904: movabs $0x198,%r8
  0x00007fab7412190e: jge    0x00007fab7412191e
  0x00007fab74121914: movabs $0x1a8,%r8
  0x00007fab7412191e: mov    (%rbx,%r8,1),%r11
  0x00007fab74121922: lea    0x1(%r11),%r11
  0x00007fab74121926: mov    %r11,(%rbx,%r8,1)
  0x00007fab7412192a: jge    0x00007fab74122284  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)

  0x00007fab74121930: mov    %rcx,%rbx
  0x00007fab74121933: inc    %ebx
  0x00007fab74121935: movslq %ecx,%r8
  0x00007fab74121938: cmp    0xc(%rdx),%ecx     ; implicit exception: dispatches to 0x00007fab741222ff
  0x00007fab7412193b: jae    0x00007fab74122309
  0x00007fab74121941: movzwl 0x10(%rdx,%r8,2),%ecx  ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)

  0x00007fab74121947: cmp    $0x80,%ecx
  0x00007fab7412194d: movabs $0x7fab61b81640,%r8  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab74121957: movabs $0x1b8,%r11
  0x00007fab74121961: jge    0x00007fab74121971
  0x00007fab74121967: movabs $0x1c8,%r11
  0x00007fab74121971: mov    (%r8,%r11,1),%r13
  0x00007fab74121975: lea    0x1(%r13),%r13
  0x00007fab74121979: mov    %r13,(%r8,%r11,1)
  0x00007fab7412197d: jge    0x00007fab741219b0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@73 (line 714)

  0x00007fab74121983: mov    %rax,%r8
  0x00007fab74121986: inc    %r8d
  0x00007fab74121989: movslq %eax,%r11
  0x00007fab7412198c: cmp    0xc(%r9),%eax
  0x00007fab74121990: jae    0x00007fab74122312
  0x00007fab74121996: mov    %cl,0x10(%r9,%r11,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@86 (line 716)

  0x00007fab7412199b: movabs $0x7fab61b81640,%rax  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab741219a5: incl   0x1d8(%rax)
  0x00007fab741219ab: jmpq   0x00007fab74122211  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@87 (line 716)

  0x00007fab741219b0: cmp    $0x800,%ecx
  0x00007fab741219b6: movabs $0x7fab61b81640,%r8  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab741219c0: movabs $0x1f0,%r11
  0x00007fab741219ca: jge    0x00007fab741219da
  0x00007fab741219d0: movabs $0x200,%r11
  0x00007fab741219da: mov    (%r8,%r11,1),%r13
  0x00007fab741219de: lea    0x1(%r13),%r13
  0x00007fab741219e2: mov    %r13,(%r8,%r11,1)
  0x00007fab741219e6: jge    0x00007fab74121a44  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@95 (line 717)

  0x00007fab741219ec: mov    %rcx,%r8
  0x00007fab741219ef: sar    $0x6,%r8d
  0x00007fab741219f3: or     $0xc0,%r8d
  0x00007fab741219fa: movslq %eax,%r11
  0x00007fab741219fd: cmp    0xc(%r9),%eax
  0x00007fab74121a01: jae    0x00007fab7412231b
  0x00007fab74121a07: mov    %r8b,0x10(%r9,%r11,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@115 (line 719)

  0x00007fab74121a0c: inc    %eax
  0x00007fab74121a0e: mov    %rax,%r8
  0x00007fab74121a11: inc    %r8d
  0x00007fab74121a14: and    $0x3f,%ecx
  0x00007fab74121a17: or     $0x80,%ecx
  0x00007fab74121a1d: movslq %eax,%r11
  0x00007fab74121a20: cmp    0xc(%r9),%eax
  0x00007fab74121a24: jae    0x00007fab74122324
  0x00007fab74121a2a: mov    %cl,0x10(%r9,%r11,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@133 (line 720)

  0x00007fab74121a2f: movabs $0x7fab61b81640,%rax  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab74121a39: incl   0x210(%rax)
  0x00007fab74121a3f: jmpq   0x00007fab74122211  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@134 (line 720)

  0x00007fab74121a44: movabs $0x7fab61b81640,%r8  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab74121a4e: addq   $0x1,0x228(%r8)
  0x00007fab74121a56: movabs $0x7fab61b81af0,%r8  ;   {metadata(method data for {method} {0x00007fab6193f238} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab74121a60: mov    0xfc(%r8),%r11d
  0x00007fab74121a67: add    $0x8,%r11d
  0x00007fab74121a6b: mov    %r11d,0xfc(%r8)
  0x00007fab74121a72: movabs $0x7fab6193f238,%r8  ;   {metadata({method} {0x00007fab6193f238} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab74121a7c: and    $0x7ffff8,%r11d
  0x00007fab74121a83: cmp    $0x0,%r11d
  0x00007fab74121a87: je     0x00007fab7412232d
  0x00007fab74121a8d: cmp    $0xd800,%ecx
  0x00007fab74121a93: movabs $0x7fab61b81af0,%r8  ;   {metadata(method data for {method} {0x00007fab6193f238} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab74121a9d: movabs $0x130,%r11
  0x00007fab74121aa7: jl     0x00007fab74121ab7
  0x00007fab74121aad: movabs $0x140,%r11
  0x00007fab74121ab7: mov    (%r8,%r11,1),%r13
  0x00007fab74121abb: lea    0x1(%r13),%r13
  0x00007fab74121abf: mov    %r13,(%r8,%r11,1)
  0x00007fab74121ac3: jl     0x00007fab74121b05  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::isSurrogate@3 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x00007fab74121ac9: cmp    $0xe000,%ecx
  0x00007fab74121acf: movabs $0x7fab61b81af0,%r8  ;   {metadata(method data for {method} {0x00007fab6193f238} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab74121ad9: movabs $0x150,%r11
  0x00007fab74121ae3: jge    0x00007fab74121af3
  0x00007fab74121ae9: movabs $0x160,%r11
  0x00007fab74121af3: mov    (%r8,%r11,1),%r13
  0x00007fab74121af7: lea    0x1(%r13),%r13
  0x00007fab74121afb: mov    %r13,(%r8,%r11,1)
  0x00007fab74121aff: jl     0x00007fab74121b10  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::isSurrogate@9 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x00007fab74121b05: mov    $0x0,%r8d
  0x00007fab74121b0b: jmpq   0x00007fab74121b27  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::isSurrogate@17 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x00007fab74121b10: movabs $0x7fab61b81af0,%r8  ;   {metadata(method data for {method} {0x00007fab6193f238} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab74121b1a: incl   0x170(%r8)
  0x00007fab74121b21: mov    $0x1,%r8d          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::isSurrogate@13 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x00007fab74121b27: and    $0x1,%r8d
  0x00007fab74121b2b: cmp    $0x0,%r8d
  0x00007fab74121b2f: movabs $0x7fab61b81640,%r8  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab74121b39: movabs $0x238,%r11
  0x00007fab74121b43: je     0x00007fab74121b53
  0x00007fab74121b49: movabs $0x248,%r11
  0x00007fab74121b53: mov    (%r8,%r11,1),%r13
  0x00007fab74121b57: lea    0x1(%r13),%r13
  0x00007fab74121b5b: mov    %r13,(%r8,%r11,1)
  0x00007fab74121b5f: je     0x00007fab741221a5  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@142 (line 721)

  0x00007fab74121b65: mov    0x30(%rsi),%r8d
  0x00007fab74121b69: shl    $0x3,%r8           ;*getfield sgp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@146 (line 722)

  0x00007fab74121b6d: cmp    $0x0,%r8
  0x00007fab74121b71: movabs $0x7fab61b81640,%r8  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab74121b7b: movabs $0x258,%r11
  0x00007fab74121b85: jne    0x00007fab74121b95
  0x00007fab74121b8b: movabs $0x268,%r11
  0x00007fab74121b95: mov    (%r8,%r11,1),%r13
  0x00007fab74121b99: lea    0x1(%r13),%r13
  0x00007fab74121b9d: mov    %r13,(%r8,%r11,1)
  0x00007fab74121ba1: mov    %ecx,0x5c(%rsp)
  0x00007fab74121ba5: mov    %ebx,0x58(%rsp)
  0x00007fab74121ba9: mov    %eax,0x6c(%rsp)
  0x00007fab74121bad: jne    0x00007fab74121c16  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@149 (line 722)

  0x00007fab74121bb3: nopl   0x0(%rax,%rax,1)
  0x00007fab74121bb8: jmpq   0x00007fab74122353  ;   {no_reloc}
  0x00007fab74121bbd: add    %al,(%rax)
  0x00007fab74121bbf: add    %al,(%rax)
  0x00007fab74121bc1: add    %ch,%cl
  0x00007fab74121bc3: xchg   %eax,%esi
  0x00007fab74121bc4: (bad)  
  0x00007fab74121bc5: add    %al,(%rax)         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)

  0x00007fab74121bc7: mov    %rax,%rdx
  0x00007fab74121bca: movabs $0x7fab61b81640,%r13  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab74121bd4: addq   $0x1,0x278(%r13)
  0x00007fab74121bdc: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@157 (line 723)

  0x00007fab74121bdf: mov    %rax,0x50(%rsp)
  0x00007fab74121be4: nop
  0x00007fab74121be5: nop
  0x00007fab74121be6: nop
  0x00007fab74121be7: callq  0x00007fab74047d60  ; OopMap{[72]=Oop [80]=Oop [96]=Oop [112]=Oop off=1292}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@157 (line 723)
                                                ;   {optimized virtual_call}
  0x00007fab74121bec: mov    0x48(%rsp),%rsi
  0x00007fab74121bf1: mov    0x50(%rsp),%rax
  0x00007fab74121bf6: mov    %rax,%r10
  0x00007fab74121bf9: shr    $0x3,%r10
  0x00007fab74121bfd: mov    %r10d,0x30(%rsi)
  0x00007fab74121c01: mov    %rsi,%rdx
  0x00007fab74121c04: shr    $0x9,%rdx
  0x00007fab74121c08: movabs $0x7fab701ff000,%rcx
  0x00007fab74121c12: movb   $0x0,(%rdx,%rcx,1)  ;*putfield sgp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@160 (line 723)

  0x00007fab74121c16: mov    0x30(%rsi),%edi
  0x00007fab74121c19: shl    $0x3,%rdi          ;*getfield sgp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@164 (line 724)

  0x00007fab74121c1d: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x00007fab7412236a
  0x00007fab74121c20: mov    %rdi,%rdx
  0x00007fab74121c23: movabs $0x7fab61b81640,%rcx  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab74121c2d: mov    0x8(%rdx),%edx
  0x00007fab74121c30: shl    $0x3,%rdx
  0x00007fab74121c34: cmp    0x298(%rcx),%rdx
  0x00007fab74121c3b: jne    0x00007fab74121c4a
  0x00007fab74121c3d: addq   $0x1,0x2a0(%rcx)
  0x00007fab74121c45: jmpq   0x00007fab74121e0c
  0x00007fab74121c4a: cmp    0x2a8(%rcx),%rdx
  0x00007fab74121c51: jne    0x00007fab74121c60
  0x00007fab74121c53: addq   $0x1,0x2b0(%rcx)
  0x00007fab74121c5b: jmpq   0x00007fab74121e0c
  0x00007fab74121c60: cmp    0x2b8(%rcx),%rdx
  0x00007fab74121c67: jne    0x00007fab74121c76
  0x00007fab74121c69: addq   $0x1,0x2c0(%rcx)
  0x00007fab74121c71: jmpq   0x00007fab74121e0c
  0x00007fab74121c76: cmp    0x2c8(%rcx),%rdx
  0x00007fab74121c7d: jne    0x00007fab74121c8c
  0x00007fab74121c7f: addq   $0x1,0x2d0(%rcx)
  0x00007fab74121c87: jmpq   0x00007fab74121e0c
  0x00007fab74121c8c: cmp    0x2d8(%rcx),%rdx
  0x00007fab74121c93: jne    0x00007fab74121ca2
  0x00007fab74121c95: addq   $0x1,0x2e0(%rcx)
  0x00007fab74121c9d: jmpq   0x00007fab74121e0c
  0x00007fab74121ca2: cmp    0x2e8(%rcx),%rdx
  0x00007fab74121ca9: jne    0x00007fab74121cb8
  0x00007fab74121cab: addq   $0x1,0x2f0(%rcx)
  0x00007fab74121cb3: jmpq   0x00007fab74121e0c
  0x00007fab74121cb8: cmp    0x2f8(%rcx),%rdx
  0x00007fab74121cbf: jne    0x00007fab74121cce
  0x00007fab74121cc1: addq   $0x1,0x300(%rcx)
  0x00007fab74121cc9: jmpq   0x00007fab74121e0c
  0x00007fab74121cce: cmp    0x308(%rcx),%rdx
  0x00007fab74121cd5: jne    0x00007fab74121ce4
  0x00007fab74121cd7: addq   $0x1,0x310(%rcx)
  0x00007fab74121cdf: jmpq   0x00007fab74121e0c
  0x00007fab74121ce4: cmpq   $0x0,0x298(%rcx)
  0x00007fab74121cef: jne    0x00007fab74121d08
  0x00007fab74121cf1: mov    %rdx,0x298(%rcx)
  0x00007fab74121cf8: movq   $0x1,0x2a0(%rcx)
  0x00007fab74121d03: jmpq   0x00007fab74121e0c
  0x00007fab74121d08: cmpq   $0x0,0x2a8(%rcx)
  0x00007fab74121d13: jne    0x00007fab74121d2c
  0x00007fab74121d15: mov    %rdx,0x2a8(%rcx)
  0x00007fab74121d1c: movq   $0x1,0x2b0(%rcx)
  0x00007fab74121d27: jmpq   0x00007fab74121e0c
  0x00007fab74121d2c: cmpq   $0x0,0x2b8(%rcx)
  0x00007fab74121d37: jne    0x00007fab74121d50
  0x00007fab74121d39: mov    %rdx,0x2b8(%rcx)
  0x00007fab74121d40: movq   $0x1,0x2c0(%rcx)
  0x00007fab74121d4b: jmpq   0x00007fab74121e0c
  0x00007fab74121d50: cmpq   $0x0,0x2c8(%rcx)
  0x00007fab74121d5b: jne    0x00007fab74121d74
  0x00007fab74121d5d: mov    %rdx,0x2c8(%rcx)
  0x00007fab74121d64: movq   $0x1,0x2d0(%rcx)
  0x00007fab74121d6f: jmpq   0x00007fab74121e0c
  0x00007fab74121d74: cmpq   $0x0,0x2d8(%rcx)
  0x00007fab74121d7f: jne    0x00007fab74121d98
  0x00007fab74121d81: mov    %rdx,0x2d8(%rcx)
  0x00007fab74121d88: movq   $0x1,0x2e0(%rcx)
  0x00007fab74121d93: jmpq   0x00007fab74121e0c
  0x00007fab74121d98: cmpq   $0x0,0x2e8(%rcx)
  0x00007fab74121da3: jne    0x00007fab74121dbc
  0x00007fab74121da5: mov    %rdx,0x2e8(%rcx)
  0x00007fab74121dac: movq   $0x1,0x2f0(%rcx)
  0x00007fab74121db7: jmpq   0x00007fab74121e0c
  0x00007fab74121dbc: cmpq   $0x0,0x2f8(%rcx)
  0x00007fab74121dc7: jne    0x00007fab74121de0
  0x00007fab74121dc9: mov    %rdx,0x2f8(%rcx)
  0x00007fab74121dd0: movq   $0x1,0x300(%rcx)
  0x00007fab74121ddb: jmpq   0x00007fab74121e0c
  0x00007fab74121de0: cmpq   $0x0,0x308(%rcx)
  0x00007fab74121deb: jne    0x00007fab74121e04
  0x00007fab74121ded: mov    %rdx,0x308(%rcx)
  0x00007fab74121df4: movq   $0x1,0x310(%rcx)
  0x00007fab74121dff: jmpq   0x00007fab74121e0c
  0x00007fab74121e04: addq   $0x1,0x288(%rcx)
  0x00007fab74121e0c: mov    0x58(%rsp),%ebx
  0x00007fab74121e10: dec    %ebx
  0x00007fab74121e12: mov    0x5c(%rsp),%edx
  0x00007fab74121e16: mov    0x60(%rsp),%rcx
  0x00007fab74121e1b: mov    %rbx,%r8
  0x00007fab74121e1e: mov    0x68(%rsp),%r9d
  0x00007fab74121e23: mov    %rdi,%rsi          ;*invokevirtual parse {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)

  0x00007fab74121e26: nop
  0x00007fab74121e27: nop
  0x00007fab74121e28: nop
  0x00007fab74121e29: nop
  0x00007fab74121e2a: nop
  0x00007fab74121e2b: nop
  0x00007fab74121e2c: nop
  0x00007fab74121e2d: movabs $0xffffffffffffffff,%rax
  0x00007fab74121e37: callq  0x00007fab74047f60  ; OopMap{[96]=Oop [112]=Oop [72]=Oop off=1884}
                                                ;*invokevirtual parse {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)
                                                ;   {virtual_call}
  0x00007fab74121e3c: cmp    $0x0,%eax
  0x00007fab74121e3f: movabs $0x7fab61b81640,%rsi  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab74121e49: movabs $0x320,%rdi
  0x00007fab74121e53: jge    0x00007fab74121e63
  0x00007fab74121e59: movabs $0x330,%rdi
  0x00007fab74121e63: mov    (%rsi,%rdi,1),%rbx
  0x00007fab74121e67: lea    0x1(%rbx),%rbx
  0x00007fab74121e6b: mov    %rbx,(%rsi,%rdi,1)
  0x00007fab74121e6f: jge    0x00007fab741220ed  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@182 (line 725)

  0x00007fab74121e75: mov    0x48(%rsp),%rsi
  0x00007fab74121e7a: mov    %rsi,%rax
  0x00007fab74121e7d: movabs $0x7fab61b81640,%rdi  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab74121e87: mov    0x8(%rax),%eax
  0x00007fab74121e8a: shl    $0x3,%rax
  0x00007fab74121e8e: cmp    0x350(%rdi),%rax
  0x00007fab74121e95: jne    0x00007fab74121ea4
  0x00007fab74121e97: addq   $0x1,0x358(%rdi)
  0x00007fab74121e9f: jmpq   0x00007fab74122066
  0x00007fab74121ea4: cmp    0x360(%rdi),%rax
  0x00007fab74121eab: jne    0x00007fab74121eba
  0x00007fab74121ead: addq   $0x1,0x368(%rdi)
  0x00007fab74121eb5: jmpq   0x00007fab74122066
  0x00007fab74121eba: cmp    0x370(%rdi),%rax
  0x00007fab74121ec1: jne    0x00007fab74121ed0
  0x00007fab74121ec3: addq   $0x1,0x378(%rdi)
  0x00007fab74121ecb: jmpq   0x00007fab74122066
  0x00007fab74121ed0: cmp    0x380(%rdi),%rax
  0x00007fab74121ed7: jne    0x00007fab74121ee6
  0x00007fab74121ed9: addq   $0x1,0x388(%rdi)
  0x00007fab74121ee1: jmpq   0x00007fab74122066
  0x00007fab74121ee6: cmp    0x390(%rdi),%rax
  0x00007fab74121eed: jne    0x00007fab74121efc
  0x00007fab74121eef: addq   $0x1,0x398(%rdi)
  0x00007fab74121ef7: jmpq   0x00007fab74122066
  0x00007fab74121efc: cmp    0x3a0(%rdi),%rax
  0x00007fab74121f03: jne    0x00007fab74121f12
  0x00007fab74121f05: addq   $0x1,0x3a8(%rdi)
  0x00007fab74121f0d: jmpq   0x00007fab74122066
  0x00007fab74121f12: cmp    0x3b0(%rdi),%rax
  0x00007fab74121f19: jne    0x00007fab74121f28
  0x00007fab74121f1b: addq   $0x1,0x3b8(%rdi)
  0x00007fab74121f23: jmpq   0x00007fab74122066
  0x00007fab74121f28: cmp    0x3c0(%rdi),%rax
  0x00007fab74121f2f: jne    0x00007fab74121f3e
  0x00007fab74121f31: addq   $0x1,0x3c8(%rdi)
  0x00007fab74121f39: jmpq   0x00007fab74122066
  0x00007fab74121f3e: cmpq   $0x0,0x350(%rdi)
  0x00007fab74121f49: jne    0x00007fab74121f62
  0x00007fab74121f4b: mov    %rax,0x350(%rdi)
  0x00007fab74121f52: movq   $0x1,0x358(%rdi)
  0x00007fab74121f5d: jmpq   0x00007fab74122066
  0x00007fab74121f62: cmpq   $0x0,0x360(%rdi)
  0x00007fab74121f6d: jne    0x00007fab74121f86
  0x00007fab74121f6f: mov    %rax,0x360(%rdi)
  0x00007fab74121f76: movq   $0x1,0x368(%rdi)
  0x00007fab74121f81: jmpq   0x00007fab74122066
  0x00007fab74121f86: cmpq   $0x0,0x370(%rdi)
  0x00007fab74121f91: jne    0x00007fab74121faa
  0x00007fab74121f93: mov    %rax,0x370(%rdi)
  0x00007fab74121f9a: movq   $0x1,0x378(%rdi)
  0x00007fab74121fa5: jmpq   0x00007fab74122066
  0x00007fab74121faa: cmpq   $0x0,0x380(%rdi)
  0x00007fab74121fb5: jne    0x00007fab74121fce
  0x00007fab74121fb7: mov    %rax,0x380(%rdi)
  0x00007fab74121fbe: movq   $0x1,0x388(%rdi)
  0x00007fab74121fc9: jmpq   0x00007fab74122066
  0x00007fab74121fce: cmpq   $0x0,0x390(%rdi)
  0x00007fab74121fd9: jne    0x00007fab74121ff2
  0x00007fab74121fdb: mov    %rax,0x390(%rdi)
  0x00007fab74121fe2: movq   $0x1,0x398(%rdi)
  0x00007fab74121fed: jmpq   0x00007fab74122066
  0x00007fab74121ff2: cmpq   $0x0,0x3a0(%rdi)
  0x00007fab74121ffd: jne    0x00007fab74122016
  0x00007fab74121fff: mov    %rax,0x3a0(%rdi)
  0x00007fab74122006: movq   $0x1,0x3a8(%rdi)
  0x00007fab74122011: jmpq   0x00007fab74122066
  0x00007fab74122016: cmpq   $0x0,0x3b0(%rdi)
  0x00007fab74122021: jne    0x00007fab7412203a
  0x00007fab74122023: mov    %rax,0x3b0(%rdi)
  0x00007fab7412202a: movq   $0x1,0x3b8(%rdi)
  0x00007fab74122035: jmpq   0x00007fab74122066
  0x00007fab7412203a: cmpq   $0x0,0x3c0(%rdi)
  0x00007fab74122045: jne    0x00007fab7412205e
  0x00007fab74122047: mov    %rax,0x3c0(%rdi)
  0x00007fab7412204e: movq   $0x1,0x3c8(%rdi)
  0x00007fab74122059: jmpq   0x00007fab74122066
  0x00007fab7412205e: addq   $0x1,0x340(%rdi)
  0x00007fab74122066: mov    0x20(%rsi),%eax
  0x00007fab74122069: shl    $0x3,%rax          ;*getfield malformedInputAction {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::malformedInputAction@1 (line 365)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@186 (line 726)

  0x00007fab7412206d: movabs $0x670b968c0,%r10  ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00007fab74122077: cmp    %r10,%rax
  0x00007fab7412207a: movabs $0x7fab61b81640,%rax  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab74122084: movabs $0x3d8,%rdi
  0x00007fab7412208e: je     0x00007fab7412209e
  0x00007fab74122094: movabs $0x3e8,%rdi
  0x00007fab7412209e: mov    (%rax,%rdi,1),%rbx
  0x00007fab741220a2: lea    0x1(%rbx),%rbx
  0x00007fab741220a6: mov    %rbx,(%rax,%rdi,1)
  0x00007fab741220aa: jne    0x00007fab74122270  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@192 (line 726)

  0x00007fab741220b0: mov    0x6c(%rsp),%edi
  0x00007fab741220b4: mov    0x70(%rsp),%r9
  0x00007fab741220b9: mov    %rdi,%rax
  0x00007fab741220bc: inc    %eax
  0x00007fab741220be: movsbl 0x2c(%rsi),%ebx    ;*getfield repl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@205 (line 728)

  0x00007fab741220c2: movslq %edi,%rdx
  0x00007fab741220c5: cmp    0xc(%r9),%edi
  0x00007fab741220c9: jae    0x00007fab7412236f
  0x00007fab741220cf: mov    %bl,0x10(%r9,%rdx,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@208 (line 728)

  0x00007fab741220d4: movabs $0x7fab61b81640,%rdi  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab741220de: incl   0x3f8(%rdi)
  0x00007fab741220e4: mov    0x58(%rsp),%ebx
  0x00007fab741220e8: jmpq   0x00007fab7412218d  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@209 (line 728)

  0x00007fab741220ed: mov    0x6c(%rsp),%edi
  0x00007fab741220f1: mov    0x70(%rsp),%r9
  0x00007fab741220f6: mov    0x48(%rsp),%rsi
  0x00007fab741220fb: mov    %rax,%rbx
  0x00007fab741220fe: sar    $0x12,%ebx
  0x00007fab74122101: or     $0xf0,%ebx
  0x00007fab74122107: movslq %edi,%rdx
  0x00007fab7412210a: cmp    0xc(%r9),%edi
  0x00007fab7412210e: jae    0x00007fab74122378
  0x00007fab74122114: mov    %bl,0x10(%r9,%rdx,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@229 (line 730)

  0x00007fab74122119: inc    %edi
  0x00007fab7412211b: mov    %rax,%rbx
  0x00007fab7412211e: sar    $0xc,%ebx
  0x00007fab74122121: and    $0x3f,%ebx
  0x00007fab74122124: or     $0x80,%ebx
  0x00007fab7412212a: movslq %edi,%rdx
  0x00007fab7412212d: cmp    0xc(%r9),%edi
  0x00007fab74122131: jae    0x00007fab74122381
  0x00007fab74122137: mov    %bl,0x10(%r9,%rdx,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@250 (line 731)

  0x00007fab7412213c: inc    %edi
  0x00007fab7412213e: mov    %rax,%rbx
  0x00007fab74122141: sar    $0x6,%ebx
  0x00007fab74122144: and    $0x3f,%ebx
  0x00007fab74122147: or     $0x80,%ebx
  0x00007fab7412214d: movslq %edi,%rdx
  0x00007fab74122150: cmp    0xc(%r9),%edi
  0x00007fab74122154: jae    0x00007fab7412238a
  0x00007fab7412215a: mov    %bl,0x10(%r9,%rdx,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@271 (line 732)

  0x00007fab7412215f: inc    %edi
  0x00007fab74122161: mov    %rdi,%rbx
  0x00007fab74122164: inc    %ebx
  0x00007fab74122166: and    $0x3f,%eax
  0x00007fab74122169: or     $0x80,%eax
  0x00007fab7412216f: movslq %edi,%rdx
  0x00007fab74122172: cmp    0xc(%r9),%edi
  0x00007fab74122176: jae    0x00007fab74122393
  0x00007fab7412217c: mov    %al,0x10(%r9,%rdx,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@289 (line 733)

  0x00007fab74122181: mov    0x58(%rsp),%edi
  0x00007fab74122185: inc    %edi
  0x00007fab74122187: mov    %rbx,%rax
  0x00007fab7412218a: mov    %rdi,%rbx
  0x00007fab7412218d: movabs $0x7fab61b81640,%rdi  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab74122197: incl   0x410(%rdi)
  0x00007fab7412219d: mov    %rax,%r8
  0x00007fab741221a0: jmpq   0x00007fab74122211  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@293 (line 736)

  0x00007fab741221a5: mov    %rax,%rdi
  0x00007fab741221a8: mov    %rcx,%rax
  0x00007fab741221ab: sar    $0xc,%eax
  0x00007fab741221ae: or     $0xe0,%eax
  0x00007fab741221b4: movslq %edi,%rdx
  0x00007fab741221b7: cmp    0xc(%r9),%edi
  0x00007fab741221bb: jae    0x00007fab7412239c
  0x00007fab741221c1: mov    %al,0x10(%r9,%rdx,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@313 (line 738)

  0x00007fab741221c6: mov    %rdi,%rax
  0x00007fab741221c9: inc    %eax
  0x00007fab741221cb: mov    %rcx,%rdi
  0x00007fab741221ce: sar    $0x6,%edi
  0x00007fab741221d1: and    $0x3f,%edi
  0x00007fab741221d4: or     $0x80,%edi
  0x00007fab741221da: movslq %eax,%rdx
  0x00007fab741221dd: cmp    0xc(%r9),%eax
  0x00007fab741221e1: jae    0x00007fab741223a5
  0x00007fab741221e7: mov    %dil,0x10(%r9,%rdx,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@334 (line 739)

  0x00007fab741221ec: inc    %eax
  0x00007fab741221ee: mov    %rax,%rdi
  0x00007fab741221f1: inc    %edi
  0x00007fab741221f3: and    $0x3f,%ecx
  0x00007fab741221f6: or     $0x80,%ecx
  0x00007fab741221fc: movslq %eax,%rdx
  0x00007fab741221ff: cmp    0xc(%r9),%eax
  0x00007fab74122203: jae    0x00007fab741223ae
  0x00007fab74122209: mov    %cl,0x10(%r9,%rdx,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@352 (line 740)

  0x00007fab7412220e: mov    %rdi,%r8           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x00007fab74122211: movabs $0x7fab61b81640,%rax  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab7412221b: mov    0x100(%rax),%edi
  0x00007fab74122221: add    $0x8,%edi
  0x00007fab74122224: mov    %edi,0x100(%rax)
  0x00007fab7412222a: movabs $0x7fab61a091c0,%rax  ;   {metadata({method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab74122234: and    $0xfff8,%edi
  0x00007fab7412223a: cmp    $0x0,%edi
  0x00007fab7412223d: je     0x00007fab741223b7  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2915}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x00007fab74122243: test   %eax,0x1b6bfeb7(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab74122249: movabs $0x7fab61b81640,%rax  ;   {metadata(method data for {method} {0x00007fab61a091c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab74122253: incl   0x428(%rax)
  0x00007fab74122259: mov    %r8,%rdi
  0x00007fab7412225c: mov    %rbx,%rcx
  0x00007fab7412225f: mov    %rdi,%rax
  0x00007fab74122262: mov    0x68(%rsp),%edi
  0x00007fab74122266: mov    0x60(%rsp),%rdx
  0x00007fab7412226b: jmpq   0x00007fab741218f8  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x00007fab74122270: mov    $0xffffffff,%eax
  0x00007fab74122275: add    $0x80,%rsp
  0x00007fab7412227c: pop    %rbp
  0x00007fab7412227d: test   %eax,0x1b6bfe7d(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74122283: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@196 (line 727)

  0x00007fab74122284: mov    %rax,%rdi
  0x00007fab74122287: mov    %rdi,%rax
  0x00007fab7412228a: add    $0x80,%rsp
  0x00007fab74122291: pop    %rbp
  0x00007fab74122292: test   %eax,0x1b6bfe68(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74122298: retq   
  0x00007fab74122299: mov    %rax,0x8(%rsp)
  0x00007fab7412229e: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741222a6: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3019}
                                                ;*synchronization entry
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@-1 (line 704)
                                                ;   {runtime_call}
  0x00007fab741222ab: jmpq   0x00007fab74121750
  0x00007fab741222b0: callq  0x00007fab740fc000  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3029}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ;   {runtime_call}
  0x00007fab741222b5: mov    %rbx,0x8(%rsp)
  0x00007fab741222ba: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741222c2: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3047}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)
                                                ;   {runtime_call}
  0x00007fab741222c7: jmpq   0x00007fab741217a7
  0x00007fab741222cc: callq  0x00007fab740fc000  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3057}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x00007fab741222d1: callq  0x00007fab740fc000  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3062}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x00007fab741222d6: mov    %rcx,(%rsp)
  0x00007fab741222da: callq  0x00007fab740fb940  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3071}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x00007fab741222df: mov    %rax,(%rsp)
  0x00007fab741222e3: callq  0x00007fab740fb940  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3080}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x00007fab741222e8: mov    %rax,0x8(%rsp)
  0x00007fab741222ed: movq   $0x33,(%rsp)
  0x00007fab741222f5: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3098}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)
                                                ;   {runtime_call}
  0x00007fab741222fa: jmpq   0x00007fab741218a1
  0x00007fab741222ff: callq  0x00007fab740fc000  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3108}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x00007fab74122304: callq  0x00007fab740fc000  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3113}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x00007fab74122309: mov    %rcx,(%rsp)
  0x00007fab7412230d: callq  0x00007fab740fb940  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3122}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x00007fab74122312: mov    %rax,(%rsp)
  0x00007fab74122316: callq  0x00007fab740fb940  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3131}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@86 (line 716)
                                                ;   {runtime_call}
  0x00007fab7412231b: mov    %rax,(%rsp)
  0x00007fab7412231f: callq  0x00007fab740fb940  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3140}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@115 (line 719)
                                                ;   {runtime_call}
  0x00007fab74122324: mov    %rax,(%rsp)
  0x00007fab74122328: callq  0x00007fab740fb940  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3149}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@133 (line 720)
                                                ;   {runtime_call}
  0x00007fab7412232d: mov    %r8,0x8(%rsp)
  0x00007fab74122332: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412233a: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3167}
                                                ;*synchronization entry
                                                ; - java.lang.Character::isSurrogate@-1 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)
                                                ;   {runtime_call}
  0x00007fab7412233f: jmpq   0x00007fab74121a8d
  0x00007fab74122344: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab7412234e: mov    $0xa050f00,%eax
  0x00007fab74122353: callq  0x00007fab740ff5e0  ; OopMap{[112]=Oop [72]=Oop [96]=Oop off=3192}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)
                                                ;   {runtime_call}
  0x00007fab74122358: jmpq   0x00007fab74121bb8
  0x00007fab7412235d: mov    %rdx,%rdx
  0x00007fab74122360: callq  0x00007fab740fc4a0  ; OopMap{[112]=Oop [72]=Oop [96]=Oop off=3205}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)
                                                ;   {runtime_call}
  0x00007fab74122365: jmpq   0x00007fab74121bc7
  0x00007fab7412236a: callq  0x00007fab740fc000  ; OopMap{[96]=Oop [112]=Oop rsi=Oop [72]=Oop rdi=Oop off=3215}
                                                ;*invokevirtual parse {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)
                                                ;   {runtime_call}
  0x00007fab7412236f: mov    %rdi,(%rsp)
  0x00007fab74122373: callq  0x00007fab740fb940  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=3224}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@208 (line 728)
                                                ;   {runtime_call}
  0x00007fab74122378: mov    %rdi,(%rsp)
  0x00007fab7412237c: callq  0x00007fab740fb940  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=3233}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@229 (line 730)
                                                ;   {runtime_call}
  0x00007fab74122381: mov    %rdi,(%rsp)
  0x00007fab74122385: callq  0x00007fab740fb940  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=3242}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@250 (line 731)
                                                ;   {runtime_call}
  0x00007fab7412238a: mov    %rdi,(%rsp)
  0x00007fab7412238e: callq  0x00007fab740fb940  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=3251}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@271 (line 732)
                                                ;   {runtime_call}
  0x00007fab74122393: mov    %rdi,(%rsp)
  0x00007fab74122397: callq  0x00007fab740fb940  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=3260}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@289 (line 733)
                                                ;   {runtime_call}
  0x00007fab7412239c: mov    %rdi,(%rsp)
  0x00007fab741223a0: callq  0x00007fab740fb940  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=3269}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@313 (line 738)
                                                ;   {runtime_call}
  0x00007fab741223a5: mov    %rax,(%rsp)
  0x00007fab741223a9: callq  0x00007fab740fb940  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=3278}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@334 (line 739)
                                                ;   {runtime_call}
  0x00007fab741223ae: mov    %rax,(%rsp)
  0x00007fab741223b2: callq  0x00007fab740fb940  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=3287}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@352 (line 740)
                                                ;   {runtime_call}
  0x00007fab741223b7: mov    %rax,0x8(%rsp)
  0x00007fab741223bc: movq   $0x161,(%rsp)
  0x00007fab741223c4: callq  0x00007fab741005e0  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=3305}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)
                                                ;   {runtime_call}
  0x00007fab741223c9: jmpq   0x00007fab74122243
  0x00007fab741223ce: nop
  0x00007fab741223cf: nop
  0x00007fab741223d0: mov    0x2c0(%r15),%rax
  0x00007fab741223d7: movabs $0x0,%r10
  0x00007fab741223e1: mov    %r10,0x2c0(%r15)
  0x00007fab741223e8: movabs $0x0,%r10
  0x00007fab741223f2: mov    %r10,0x2c8(%r15)
  0x00007fab741223f9: add    $0x80,%rsp
  0x00007fab74122400: pop    %rbp
  0x00007fab74122401: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74122406: hlt    
  0x00007fab74122407: hlt    
  0x00007fab74122408: hlt    
  0x00007fab74122409: hlt    
  0x00007fab7412240a: hlt    
  0x00007fab7412240b: hlt    
  0x00007fab7412240c: hlt    
  0x00007fab7412240d: hlt    
  0x00007fab7412240e: hlt    
  0x00007fab7412240f: hlt    
  0x00007fab74122410: hlt    
  0x00007fab74122411: hlt    
  0x00007fab74122412: hlt    
  0x00007fab74122413: hlt    
  0x00007fab74122414: hlt    
  0x00007fab74122415: hlt    
  0x00007fab74122416: hlt    
  0x00007fab74122417: hlt    
  0x00007fab74122418: hlt    
  0x00007fab74122419: hlt    
  0x00007fab7412241a: hlt    
  0x00007fab7412241b: hlt    
  0x00007fab7412241c: hlt    
  0x00007fab7412241d: hlt    
  0x00007fab7412241e: hlt    
  0x00007fab7412241f: hlt    
[Stub Code]
  0x00007fab74122420: nop                       ;   {no_reloc}
  0x00007fab74122421: nop
  0x00007fab74122422: nop
  0x00007fab74122423: nop
  0x00007fab74122424: nop
  0x00007fab74122425: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7412242f: jmpq   0x00007fab7412242f  ;   {runtime_call}
  0x00007fab74122434: nop
  0x00007fab74122435: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7412243f: jmpq   0x00007fab7412243f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74122444: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74122449: mov    %rsp,-0x28(%rsp)
  0x00007fab7412244e: sub    $0x80,%rsp
  0x00007fab74122455: mov    %rax,0x78(%rsp)
  0x00007fab7412245a: mov    %rcx,0x70(%rsp)
  0x00007fab7412245f: mov    %rdx,0x68(%rsp)
  0x00007fab74122464: mov    %rbx,0x60(%rsp)
  0x00007fab74122469: mov    %rbp,0x50(%rsp)
  0x00007fab7412246e: mov    %rsi,0x48(%rsp)
  0x00007fab74122473: mov    %rdi,0x40(%rsp)
  0x00007fab74122478: mov    %r8,0x38(%rsp)
  0x00007fab7412247d: mov    %r9,0x30(%rsp)
  0x00007fab74122482: mov    %r10,0x28(%rsp)
  0x00007fab74122487: mov    %r11,0x20(%rsp)
  0x00007fab7412248c: mov    %r12,0x18(%rsp)
  0x00007fab74122491: mov    %r13,0x10(%rsp)
  0x00007fab74122496: mov    %r14,0x8(%rsp)
  0x00007fab7412249b: mov    %r15,(%rsp)
  0x00007fab7412249f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741224a9: movabs $0x7fab74122449,%rsi  ;   {internal_word}
  0x00007fab741224b3: mov    %rsp,%rdx
  0x00007fab741224b6: and    $0xfffffffffffffff0,%rsp
  0x00007fab741224ba: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741224bf: hlt    
[Deopt Handler Code]
  0x00007fab741224c0: movabs $0x7fab741224c0,%r10  ;   {section_word}
  0x00007fab741224ca: push   %r10
  0x00007fab741224cc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab741224d1: hlt    
  0x00007fab741224d2: hlt    
  0x00007fab741224d3: hlt    
  0x00007fab741224d4: hlt    
  0x00007fab741224d5: hlt    
  0x00007fab741224d6: hlt    
  0x00007fab741224d7: hlt    
<nmethod compile_id='44' compiler='C1' level='3' entry='0x00007fab741216e0' size='6256' address='0x00007fab741214d0' relocation_offset='312' insts_offset='528' stub_offset='3920' scopes_data_offset='4136' scopes_pcs_offset='4880' dependencies_offset='6192' nul_chk_table_offset='6200' metadata_offset='4104' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='160' backedge_count='8627' iicount='160' stamp='0.195'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.HotSpotForeignCallTarget from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/Character.toLowerCase  [0x00007fab74122ee0, 0x00007fab741232d8]  1016 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab61941a08} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;
  # parm0:    rsi       = char
  #           [sp+0x50]  (sp of caller)
  0x00007fab74122ee0: mov    %eax,-0x14000(%rsp)
  0x00007fab74122ee7: push   %rbp
  0x00007fab74122ee8: sub    $0x40,%rsp
  0x00007fab74122eec: movabs $0x7fab61b81ca0,%rdi  ;   {metadata(method data for {method} {0x00007fab61941a08} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab74122ef6: mov    0xfc(%rdi),%ebx
  0x00007fab74122efc: add    $0x8,%ebx
  0x00007fab74122eff: mov    %ebx,0xfc(%rdi)
  0x00007fab74122f05: movabs $0x7fab61941a08,%rdi  ;   {metadata({method} {0x00007fab61941a08} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab74122f0f: and    $0x1ff8,%ebx
  0x00007fab74122f15: cmp    $0x0,%ebx
  0x00007fab74122f18: je     0x00007fab741231a4  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@0 (line 6309)

  0x00007fab74122f1e: movabs $0x7fab61b81ca0,%rdi  ;   {metadata(method data for {method} {0x00007fab61941a08} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab74122f28: addq   $0x1,0x130(%rdi)
  0x00007fab74122f30: movabs $0x7fab61b81e20,%rdi  ;   {metadata(method data for {method} {0x00007fab61941ab0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab74122f3a: mov    0xfc(%rdi),%ebx
  0x00007fab74122f40: add    $0x8,%ebx
  0x00007fab74122f43: mov    %ebx,0xfc(%rdi)
  0x00007fab74122f49: movabs $0x7fab61941ab0,%rdi  ;   {metadata({method} {0x00007fab61941ab0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab74122f53: and    $0x7ffff8,%ebx
  0x00007fab74122f59: cmp    $0x0,%ebx
  0x00007fab74122f5c: je     0x00007fab741231bb
  0x00007fab74122f62: movabs $0x7fab61b81e20,%rdi  ;   {metadata(method data for {method} {0x00007fab61941ab0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab74122f6c: addq   $0x1,0x130(%rdi)
  0x00007fab74122f74: mov    %rsi,%rdi
  0x00007fab74122f77: mov    %rdi,%rsi          ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)

  0x00007fab74122f7a: mov    %edi,0x28(%rsp)
  0x00007fab74122f7e: nop
  0x00007fab74122f7f: callq  0x00007fab74048160  ; OopMap{off=164}
                                                ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.code.ReferenceMap from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
;   {static_call}
  0x00007fab74122f84: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00007fab741231d2
  0x00007fab74122f87: mov    %rax,%rdx
  0x00007fab74122f8a: movabs $0x7fab61b81e20,%rsi  ;   {metadata(method data for {method} {0x00007fab61941ab0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab74122f94: mov    0x8(%rdx),%edx
  0x00007fab74122f97: shl    $0x3,%rdx
  0x00007fab74122f9b: cmp    0x150(%rsi),%rdx
  0x00007fab74122fa2: jne    0x00007fab74122fb1
  0x00007fab74122fa4: addq   $0x1,0x158(%rsi)
  0x00007fab74122fac: jmpq   0x00007fab74123173
  0x00007fab74122fb1: cmp    0x160(%rsi),%rdx
  0x00007fab74122fb8: jne    0x00007fab74122fc7
  0x00007fab74122fba: addq   $0x1,0x168(%rsi)
  0x00007fab74122fc2: jmpq   0x00007fab74123173
  0x00007fab74122fc7: cmp    0x170(%rsi),%rdx
  0x00007fab74122fce: jne    0x00007fab74122fdd
  0x00007fab74122fd0: addq   $0x1,0x178(%rsi)
  0x00007fab74122fd8: jmpq   0x00007fab74123173
  0x00007fab74122fdd: cmp    0x180(%rsi),%rdx
  0x00007fab74122fe4: jne    0x00007fab74122ff3
  0x00007fab74122fe6: addq   $0x1,0x188(%rsi)
  0x00007fab74122fee: jmpq   0x00007fab74123173
  0x00007fab74122ff3: cmp    0x190(%rsi),%rdx
  0x00007fab74122ffa: jne    0x00007fab74123009
  0x00007fab74122ffc: addq   $0x1,0x198(%rsi)
  0x00007fab74123004: jmpq   0x00007fab74123173
  0x00007fab74123009: cmp    0x1a0(%rsi),%rdx
  0x00007fab74123010: jne    0x00007fab7412301f
  0x00007fab74123012: addq   $0x1,0x1a8(%rsi)
  0x00007fab7412301a: jmpq   0x00007fab74123173
  0x00007fab7412301f: cmp    0x1b0(%rsi),%rdx
  0x00007fab74123026: jne    0x00007fab74123035
  0x00007fab74123028: addq   $0x1,0x1b8(%rsi)
  0x00007fab74123030: jmpq   0x00007fab74123173
  0x00007fab74123035: cmp    0x1c0(%rsi),%rdx
  0x00007fab7412303c: jne    0x00007fab7412304b
  0x00007fab7412303e: addq   $0x1,0x1c8(%rsi)
  0x00007fab74123046: jmpq   0x00007fab74123173
  0x00007fab7412304b: cmpq   $0x0,0x150(%rsi)
  0x00007fab74123056: jne    0x00007fab7412306f
  0x00007fab74123058: mov    %rdx,0x150(%rsi)
  0x00007fab7412305f: movq   $0x1,0x158(%rsi)
  0x00007fab7412306a: jmpq   0x00007fab74123173
  0x00007fab7412306f: cmpq   $0x0,0x160(%rsi)
  0x00007fab7412307a: jne    0x00007fab74123093
  0x00007fab7412307c: mov    %rdx,0x160(%rsi)
  0x00007fab74123083: movq   $0x1,0x168(%rsi)
  0x00007fab7412308e: jmpq   0x00007fab74123173
  0x00007fab74123093: cmpq   $0x0,0x170(%rsi)
  0x00007fab7412309e: jne    0x00007fab741230b7
  0x00007fab741230a0: mov    %rdx,0x170(%rsi)
  0x00007fab741230a7: movq   $0x1,0x178(%rsi)
  0x00007fab741230b2: jmpq   0x00007fab74123173
  0x00007fab741230b7: cmpq   $0x0,0x180(%rsi)
  0x00007fab741230c2: jne    0x00007fab741230db
  0x00007fab741230c4: mov    %rdx,0x180(%rsi)
  0x00007fab741230cb: movq   $0x1,0x188(%rsi)
  0x00007fab741230d6: jmpq   0x00007fab74123173
  0x00007fab741230db: cmpq   $0x0,0x190(%rsi)
  0x00007fab741230e6: jne    0x00007fab741230ff
  0x00007fab741230e8: mov    %rdx,0x190(%rsi)
  0x00007fab741230ef: movq   $0x1,0x198(%rsi)
  0x00007fab741230fa: jmpq   0x00007fab74123173
  0x00007fab741230ff: cmpq   $0x0,0x1a0(%rsi)
  0x00007fab7412310a: jne    0x00007fab74123123
  0x00007fab7412310c: mov    %rdx,0x1a0(%rsi)
  0x00007fab74123113: movq   $0x1,0x1a8(%rsi)
  0x00007fab7412311e: jmpq   0x00007fab74123173
  0x00007fab74123123: cmpq   $0x0,0x1b0(%rsi)
  0x00007fab7412312e: jne    0x00007fab74123147
  0x00007fab74123130: mov    %rdx,0x1b0(%rsi)
  0x00007fab74123137: movq   $0x1,0x1b8(%rsi)
  0x00007fab74123142: jmpq   0x00007fab74123173
  0x00007fab74123147: cmpq   $0x0,0x1c0(%rsi)
  0x00007fab74123152: jne    0x00007fab7412316b
  0x00007fab74123154: mov    %rdx,0x1c0(%rsi)
  0x00007fab7412315b: movq   $0x1,0x1c8(%rsi)
  0x00007fab74123166: jmpq   0x00007fab74123173
  0x00007fab7412316b: addq   $0x1,0x140(%rsi)
  0x00007fab74123173: mov    0x28(%rsp),%edx
  0x00007fab74123177: mov    %rax,%rsi          ;*invokevirtual toLowerCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)

  0x00007fab7412317a: nop
  0x00007fab7412317b: nop
  0x00007fab7412317c: nop
  0x00007fab7412317d: movabs $0xffffffffffffffff,%rax
  0x00007fab74123187: callq  0x00007fab74047f60  ; OopMap{off=684}
                                                ;*invokevirtual toLowerCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {virtual_call}
  0x00007fab7412318c: and    $0xffff,%eax
  0x00007fab74123192: and    $0xffff,%eax
  0x00007fab74123198: add    $0x40,%rsp
  0x00007fab7412319c: pop    %rbp
  0x00007fab7412319d: test   %eax,0x1b6bef5d(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741231a3: retq   
  0x00007fab741231a4: mov    %rdi,0x8(%rsp)
  0x00007fab741231a9: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741231b1: callq  0x00007fab741005e0  ; OopMap{off=726}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6309)
                                                ;   {runtime_call}
  0x00007fab741231b6: jmpq   0x00007fab74122f1e
  0x00007fab741231bb: mov    %rdi,0x8(%rsp)
  0x00007fab741231c0: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741231c8: callq  0x00007fab741005e0  ; OopMap{off=749}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {runtime_call}
  0x00007fab741231cd: jmpq   0x00007fab74122f62
  0x00007fab741231d2: callq  0x00007fab740fc000  ; OopMap{rax=Oop off=759}
                                                ;*invokevirtual toLowerCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {runtime_call}
  0x00007fab741231d7: nop
  0x00007fab741231d8: nop
  0x00007fab741231d9: mov    0x2c0(%r15),%rax
  0x00007fab741231e0: movabs $0x0,%r10
  0x00007fab741231ea: mov    %r10,0x2c0(%r15)
  0x00007fab741231f1: movabs $0x0,%r10
  0x00007fab741231fb: mov    %r10,0x2c8(%r15)
  0x00007fab74123202: add    $0x40,%rsp
  0x00007fab74123206: pop    %rbp
  0x00007fab74123207: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7412320c: hlt    
  0x00007fab7412320d: hlt    
  0x00007fab7412320e: hlt    
  0x00007fab7412320f: hlt    
  0x00007fab74123210: hlt    
  0x00007fab74123211: hlt    
  0x00007fab74123212: hlt    
  0x00007fab74123213: hlt    
  0x00007fab74123214: hlt    
  0x00007fab74123215: hlt    
  0x00007fab74123216: hlt    
  0x00007fab74123217: hlt    
  0x00007fab74123218: hlt    
  0x00007fab74123219: hlt    
  0x00007fab7412321a: hlt    
  0x00007fab7412321b: hlt    
  0x00007fab7412321c: hlt    
  0x00007fab7412321d: hlt    
  0x00007fab7412321e: hlt    
  0x00007fab7412321f: hlt    
[Stub Code]
  0x00007fab74123220: nop                       ;   {no_reloc}
  0x00007fab74123221: nop
  0x00007fab74123222: nop
  0x00007fab74123223: nop
  0x00007fab74123224: nop
  0x00007fab74123225: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7412322f: jmpq   0x00007fab7412322f  ;   {runtime_call}
  0x00007fab74123234: nop
  0x00007fab74123235: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7412323f: jmpq   0x00007fab7412323f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74123244: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74123249: mov    %rsp,-0x28(%rsp)
  0x00007fab7412324e: sub    $0x80,%rsp
  0x00007fab74123255: mov    %rax,0x78(%rsp)
  0x00007fab7412325a: mov    %rcx,0x70(%rsp)
  0x00007fab7412325f: mov    %rdx,0x68(%rsp)
  0x00007fab74123264: mov    %rbx,0x60(%rsp)
  0x00007fab74123269: mov    %rbp,0x50(%rsp)
  0x00007fab7412326e: mov    %rsi,0x48(%rsp)
  0x00007fab74123273: mov    %rdi,0x40(%rsp)
  0x00007fab74123278: mov    %r8,0x38(%rsp)
  0x00007fab7412327d: mov    %r9,0x30(%rsp)
  0x00007fab74123282: mov    %r10,0x28(%rsp)
  0x00007fab74123287: mov    %r11,0x20(%rsp)
  0x00007fab7412328c: mov    %r12,0x18(%rsp)
  0x00007fab74123291: mov    %r13,0x10(%rsp)
  0x00007fab74123296: mov    %r14,0x8(%rsp)
  0x00007fab7412329b: mov    %r15,(%rsp)
  0x00007fab7412329f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741232a9: movabs $0x7fab74123249,%rsi  ;   {internal_word}
  0x00007fab741232b3: mov    %rsp,%rdx
  0x00007fab741232b6: and    $0xfffffffffffffff0,%rsp
  0x00007fab741232ba: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741232bf: hlt    
[Deopt Handler Code]
  0x00007fab741232c0: movabs $0x7fab741232c0,%r10  ;   {section_word}
  0x00007fab741232ca: push   %r10
  0x00007fab741232cc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab741232d1: hlt    
  0x00007fab741232d2: hlt    
  0x00007fab741232d3: hlt    
  0x00007fab741232d4: hlt    
  0x00007fab741232d5: hlt    
  0x00007fab741232d6: hlt    
  0x00007fab741232d7: hlt    
<nmethod compile_id='45' compiler='C1' level='3' entry='0x00007fab74122ee0' size='1688' address='0x00007fab74122d50' relocation_offset='312' insts_offset='400' stub_offset='1232' scopes_data_offset='1432' scopes_pcs_offset='1504' dependencies_offset='1664' nul_chk_table_offset='1672' metadata_offset='1416' method='java/lang/Character toLowerCase (C)C' bytes='6' count='279' iicount='279' stamp='0.218'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.HotSpotReferenceMap from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='47' method='java/util/ArrayList size ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.218' comment='tiered' hot_count='128'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/ThreadLocal.access$400  [0x00007fab74123580, 0x00007fab74123670]  240 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab619b5740} &apos;access$400&apos; &apos;(Ljava/lang/ThreadLocal;)I&apos; in &apos;java/lang/ThreadLocal&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/ThreadLocal&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab74123580: mov    %eax,-0x14000(%rsp)
  0x00007fab74123587: push   %rbp
  0x00007fab74123588: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal::access$400@0 (line 74)

  0x00007fab7412358c: mov    0xc(%rsi),%eax     ;*getfield threadLocalHashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal::access$400@1 (line 74)
                                                ; implicit exception: dispatches to 0x00007fab7412359b
  0x00007fab7412358f: add    $0x30,%rsp
  0x00007fab74123593: pop    %rbp
  0x00007fab74123594: test   %eax,0x1b6beb66(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7412359a: retq   
  0x00007fab7412359b: callq  0x00007fab740fc000  ; OopMap{off=32}
                                                ;*getfield threadLocalHashCode {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal::access$400@1 (line 74)
                                                ;   {runtime_call}
  0x00007fab741235a0: nop
  0x00007fab741235a1: nop
  0x00007fab741235a2: mov    0x2c0(%r15),%rax
  0x00007fab741235a9: movabs $0x0,%r10
  0x00007fab741235b3: mov    %r10,0x2c0(%r15)
  0x00007fab741235ba: movabs $0x0,%r10
  0x00007fab741235c4: mov    %r10,0x2c8(%r15)
  0x00007fab741235cb: add    $0x30,%rsp
  0x00007fab741235cf: pop    %rbp
  0x00007fab741235d0: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab741235d5: hlt    
  0x00007fab741235d6: hlt    
  0x00007fab741235d7: hlt    
  0x00007fab741235d8: hlt    
  0x00007fab741235d9: hlt    
  0x00007fab741235da: hlt    
  0x00007fab741235db: hlt    
  0x00007fab741235dc: hlt    
  0x00007fab741235dd: hlt    
  0x00007fab741235de: hlt    
  0x00007fab741235df: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab741235e0: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab741235e5: mov    %rsp,-0x28(%rsp)
  0x00007fab741235ea: sub    $0x80,%rsp
  0x00007fab741235f1: mov    %rax,0x78(%rsp)
  0x00007fab741235f6: mov    %rcx,0x70(%rsp)
  0x00007fab741235fb: mov    %rdx,0x68(%rsp)
  0x00007fab74123600: mov    %rbx,0x60(%rsp)
  0x00007fab74123605: mov    %rbp,0x50(%rsp)
  0x00007fab7412360a: mov    %rsi,0x48(%rsp)
  0x00007fab7412360f: mov    %rdi,0x40(%rsp)
  0x00007fab74123614: mov    %r8,0x38(%rsp)
  0x00007fab74123619: mov    %r9,0x30(%rsp)
  0x00007fab7412361e: mov    %r10,0x28(%rsp)
  0x00007fab74123623: mov    %r11,0x20(%rsp)
  0x00007fab74123628: mov    %r12,0x18(%rsp)
  0x00007fab7412362d: mov    %r13,0x10(%rsp)
  0x00007fab74123632: mov    %r14,0x8(%rsp)
  0x00007fab74123637: mov    %r15,(%rsp)
  0x00007fab7412363b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74123645: movabs $0x7fab741235e5,%rsi  ;   {internal_word}
  0x00007fab7412364f: mov    %rsp,%rdx
  0x00007fab74123652: and    $0xfffffffffffffff0,%rsp
  0x00007fab74123656: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7412365b: hlt    
[Deopt Handler Code]
  0x00007fab7412365c: movabs $0x7fab7412365c,%r10  ;   {section_word}
  0x00007fab74123666: push   %r10
  0x00007fab74123668: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7412366d: hlt    
  0x00007fab7412366e: hlt    
  0x00007fab7412366f: hlt    
<nmethod compile_id='42' compiler='C1' level='1' entry='0x00007fab74123580' size='744' address='0x00007fab74123410' relocation_offset='312' insts_offset='368' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='640' dependencies_offset='720' nul_chk_table_offset='728' metadata_offset='608' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='256' iicount='256' stamp='0.218'/>
<writer thread='140373948942080'/>
<task_queued compile_id='48' method='java/net/URL getPath ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.218' comment='tiered' hot_count='128'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/ArrayList.size  [0x00007fab74123880, 0x00007fab74123990]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab6197b190} &apos;size&apos; &apos;()I&apos; in &apos;java/util/ArrayList&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab74123880: mov    0x8(%rsi),%r10d
  0x00007fab74123884: shl    $0x3,%r10
  0x00007fab74123888: cmp    %rax,%r10
  0x00007fab7412388b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74123891: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7412389c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab741238a0: mov    %eax,-0x14000(%rsp)
  0x00007fab741238a7: push   %rbp
  0x00007fab741238a8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::size@0 (line 278)

  0x00007fab741238ac: mov    0x10(%rsi),%eax    ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::size@1 (line 278)

  0x00007fab741238af: add    $0x30,%rsp
  0x00007fab741238b3: pop    %rbp
  0x00007fab741238b4: test   %eax,0x1b6be846(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741238ba: retq   
  0x00007fab741238bb: nop
  0x00007fab741238bc: nop
  0x00007fab741238bd: mov    0x2c0(%r15),%rax
  0x00007fab741238c4: movabs $0x0,%r10
  0x00007fab741238ce: mov    %r10,0x2c0(%r15)
  0x00007fab741238d5: movabs $0x0,%r10
  0x00007fab741238df: mov    %r10,0x2c8(%r15)
  0x00007fab741238e6: add    $0x30,%rsp
  0x00007fab741238ea: pop    %rbp
  0x00007fab741238eb: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab741238f0: hlt    
  0x00007fab741238f1: hlt    
  0x00007fab741238f2: hlt    
  0x00007fab741238f3: hlt    
  0x00007fab741238f4: hlt    
  0x00007fab741238f5: hlt    
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.code.InstalledCode from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
  0x00007fab741238f6: hlt    
  0x00007fab741238f7: hlt    
  0x00007fab741238f8: hlt    
  0x00007fab741238f9: hlt    
  0x00007fab741238fa: hlt    
  0x00007fab741238fb: hlt    
  0x00007fab741238fc: hlt    
  0x00007fab741238fd: hlt    
  0x00007fab741238fe: hlt    
  0x00007fab741238ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74123900: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74123905: mov    %rsp,-0x28(%rsp)
  0x00007fab7412390a: sub    $0x80,%rsp
  0x00007fab74123911: mov    %rax,0x78(%rsp)
  0x00007fab74123916: mov    %rcx,0x70(%rsp)
  0x00007fab7412391b: mov    %rdx,0x68(%rsp)
  0x00007fab74123920: mov    %rbx,0x60(%rsp)
  0x00007fab74123925: mov    %rbp,0x50(%rsp)
  0x00007fab7412392a: mov    %rsi,0x48(%rsp)
  0x00007fab7412392f: mov    %rdi,0x40(%rsp)
  0x00007fab74123934: mov    %r8,0x38(%rsp)
  0x00007fab74123939: mov    %r9,0x30(%rsp)
  0x00007fab7412393e: mov    %r10,0x28(%rsp)
  0x00007fab74123943: mov    %r11,0x20(%rsp)
  0x00007fab74123948: mov    %r12,0x18(%rsp)
  0x00007fab7412394d: mov    %r13,0x10(%rsp)
  0x00007fab74123952: mov    %r14,0x8(%rsp)
  0x00007fab74123957: mov    %r15,(%rsp)
  0x00007fab7412395b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74123965: movabs $0x7fab74123905,%rsi  ;   {internal_word}
  0x00007fab7412396f: mov    %rsp,%rdx
  0x00007fab74123972: and    $0xfffffffffffffff0,%rsp
  0x00007fab74123976: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7412397b: hlt    
[Deopt Handler Code]
  0x00007fab7412397c: movabs $0x7fab7412397c,%r10  ;   {section_word}
  0x00007fab74123986: push   %r10
  0x00007fab74123988: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7412398d: hlt    
  0x00007fab7412398e: hlt    
  0x00007fab7412398f: hlt    
<nmethod compile_id='47' compiler='C1' level='1' entry='0x00007fab74123880' size='736' address='0x00007fab74123710' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/util/ArrayList size ()I' bytes='5' count='140' iicount='140' stamp='0.219'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.HotSpotInstalledCode from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/net/URL.getProtocol  [0x00007fab74123b80, 0x00007fab74123c90]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61930c18} &apos;getProtocol&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab74123b80: mov    0x8(%rsi),%r10d
  0x00007fab74123b84: shl    $0x3,%r10
  0x00007fab74123b88: cmp    %rax,%r10
  0x00007fab74123b8b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74123b91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74123b9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74123ba0: mov    %eax,-0x14000(%rsp)
  0x00007fab74123ba7: push   %rbp
  0x00007fab74123ba8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getProtocol@0 (line 799)

  0x00007fab74123bac: mov    0x14(%rsi),%eax
  0x00007fab74123baf: shl    $0x3,%rax          ;*getfield protocol {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getProtocol@1 (line 799)

  0x00007fab74123bb3: add    $0x30,%rsp
  0x00007fab74123bb7: pop    %rbp
  0x00007fab74123bb8: test   %eax,0x1b6be542(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74123bbe: retq   
  0x00007fab74123bbf: nop
  0x00007fab74123bc0: nop
  0x00007fab74123bc1: mov    0x2c0(%r15),%rax
  0x00007fab74123bc8: movabs $0x0,%r10
  0x00007fab74123bd2: mov    %r10,0x2c0(%r15)
  0x00007fab74123bd9: movabs $0x0,%r10
  0x00007fab74123be3: mov    %r10,0x2c8(%r15)
  0x00007fab74123bea: add    $0x30,%rsp
  0x00007fab74123bee: pop    %rbp
  0x00007fab74123bef: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74123bf4: hlt    
  0x00007fab74123bf5: hlt    
  0x00007fab74123bf6: hlt    
  0x00007fab74123bf7: hlt    
  0x00007fab74123bf8: hlt    
  0x00007fab74123bf9: hlt    
  0x00007fab74123bfa: hlt    
  0x00007fab74123bfb: hlt    
  0x00007fab74123bfc: hlt    
  0x00007fab74123bfd: hlt    
  0x00007fab74123bfe: hlt    
  0x00007fab74123bff: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74123c00: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74123c05: mov    %rsp,-0x28(%rsp)
  0x00007fab74123c0a: sub    $0x80,%rsp
  0x00007fab74123c11: mov    %rax,0x78(%rsp)
  0x00007fab74123c16: mov    %rcx,0x70(%rsp)
  0x00007fab74123c1b: mov    %rdx,0x68(%rsp)
  0x00007fab74123c20: mov    %rbx,0x60(%rsp)
  0x00007fab74123c25: mov    %rbp,0x50(%rsp)
  0x00007fab74123c2a: mov    %rsi,0x48(%rsp)
  0x00007fab74123c2f: mov    %rdi,0x40(%rsp)
  0x00007fab74123c34: mov    %r8,0x38(%rsp)
  0x00007fab74123c39: mov    %r9,0x30(%rsp)
  0x00007fab74123c3e: mov    %r10,0x28(%rsp)
  0x00007fab74123c43: mov    %r11,0x20(%rsp)
  0x00007fab74123c48: mov    %r12,0x18(%rsp)
  0x00007fab74123c4d: mov    %r13,0x10(%rsp)
  0x00007fab74123c52: mov    %r14,0x8(%rsp)
  0x00007fab74123c57: mov    %r15,(%rsp)
  0x00007fab74123c5b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74123c65: movabs $0x7fab74123c05,%rsi  ;   {internal_word}
  0x00007fab74123c6f: mov    %rsp,%rdx
  0x00007fab74123c72: and    $0xfffffffffffffff0,%rsp
  0x00007fab74123c76: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74123c7b: hlt    
[Deopt Handler Code]
  0x00007fab74123c7c: movabs $0x7fab74123c7c,%r10  ;   {section_word}
  0x00007fab74123c86: push   %r10
  0x00007fab74123c88: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74123c8d: hlt    
  0x00007fab74123c8e: hlt    
  0x00007fab74123c8f: hlt    
<nmethod compile_id='46' compiler='C1' level='1' entry='0x00007fab74123b80' size='736' address='0x00007fab74123a10' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/net/URL getProtocol ()Ljava/lang/String;' bytes='5' count='162' iicount='162' stamp='0.219'/>
<writer thread='140373948942080'/>
<task_queued compile_id='49' method='java/net/URL getHost ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.219' comment='tiered' hot_count='128'/>
<task_queued compile_id='50' method='java/net/URL getAuthority ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.219' comment='tiered' hot_count='128'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/net/URL.getPath  [0x00007fab74123e80, 0x00007fab74123f90]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab619308f0} &apos;getPath&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.HotSpotNmethod from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>
  0x00007fab74123e80: mov    0x8(%rsi),%r10d
  0x00007fab74123e84: shl    $0x3,%r10
  0x00007fab74123e88: cmp    %rax,%r10
  0x00007fab74123e8b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74123e91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74123e9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74123ea0: mov    %eax,-0x14000(%rsp)
  0x00007fab74123ea7: push   %rbp
  0x00007fab74123ea8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getPath@0 (line 747)

  0x00007fab74123eac: mov    0x28(%rsi),%eax
  0x00007fab74123eaf: shl    $0x3,%rax          ;*getfield path {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getPath@1 (line 747)

  0x00007fab74123eb3: add    $0x30,%rsp
  0x00007fab74123eb7: pop    %rbp
  0x00007fab74123eb8: test   %eax,0x1b6be242(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74123ebe: retq   
  0x00007fab74123ebf: nop
  0x00007fab74123ec0: nop
  0x00007fab74123ec1: mov    0x2c0(%r15),%rax
  0x00007fab74123ec8: movabs $0x0,%r10
  0x00007fab74123ed2: mov    %r10,0x2c0(%r15)
  0x00007fab74123ed9: movabs $0x0,%r10
  0x00007fab74123ee3: mov    %r10,0x2c8(%r15)
  0x00007fab74123eea: add    $0x30,%rsp
  0x00007fab74123eee: pop    %rbp
  0x00007fab74123eef: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74123ef4: hlt    
  0x00007fab74123ef5: hlt    
  0x00007fab74123ef6: hlt    
  0x00007fab74123ef7: hlt    
  0x00007fab74123ef8: hlt    
  0x00007fab74123ef9: hlt    
  0x00007fab74123efa: hlt    
  0x00007fab74123efb: hlt    
  0x00007fab74123efc: hlt    
  0x00007fab74123efd: hlt    
  0x00007fab74123efe: hlt    
  0x00007fab74123eff: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74123f00: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74123f05: mov    %rsp,-0x28(%rsp)
  0x00007fab74123f0a: sub    $0x80,%rsp
  0x00007fab74123f11: mov    %rax,0x78(%rsp)
  0x00007fab74123f16: mov    %rcx,0x70(%rsp)
  0x00007fab74123f1b: mov    %rdx,0x68(%rsp)
  0x00007fab74123f20: mov    %rbx,0x60(%rsp)
  0x00007fab74123f25: mov    %rbp,0x50(%rsp)
  0x00007fab74123f2a: mov    %rsi,0x48(%rsp)
  0x00007fab74123f2f: mov    %rdi,0x40(%rsp)
  0x00007fab74123f34: mov    %r8,0x38(%rsp)
  0x00007fab74123f39: mov    %r9,0x30(%rsp)
  0x00007fab74123f3e: mov    %r10,0x28(%rsp)
  0x00007fab74123f43: mov    %r11,0x20(%rsp)
  0x00007fab74123f48: mov    %r12,0x18(%rsp)
  0x00007fab74123f4d: mov    %r13,0x10(%rsp)
  0x00007fab74123f52: mov    %r14,0x8(%rsp)
  0x00007fab74123f57: mov    %r15,(%rsp)
  0x00007fab74123f5b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74123f65: movabs $0x7fab74123f05,%rsi  ;   {internal_word}
  0x00007fab74123f6f: mov    %rsp,%rdx
  0x00007fab74123f72: and    $0xfffffffffffffff0,%rsp
  0x00007fab74123f76: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74123f7b: hlt    
[Deopt Handler Code]
  0x00007fab74123f7c: movabs $0x7fab74123f7c,%r10  ;   {section_word}
  0x00007fab74123f86: push   %r10
  0x00007fab74123f88: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74123f8d: hlt    
  0x00007fab74123f8e: hlt    
  0x00007fab74123f8f: hlt    
<nmethod compile_id='48' compiler='C1' level='1' entry='0x00007fab74123e80' size='736' address='0x00007fab74123d10' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/net/URL getPath ()Ljava/lang/String;' bytes='5' count='138' iicount='138' stamp='0.220'/>
----------------------------------------------------------------------
java/net/URL.getHost  [0x00007fab74124180, 0x00007fab74124290]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61930cb8} &apos;getHost&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab74124180: mov    0x8(%rsi),%r10d
  0x00007fab74124184: shl    $0x3,%r10
  0x00007fab74124188: cmp    %rax,%r10
  0x00007fab7412418b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74124191: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7412419c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab741241a0: mov    %eax,-0x14000(%rsp)
  0x00007fab741241a7: push   %rbp
  0x00007fab741241a8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getHost@0 (line 811)

  0x00007fab741241ac: mov    0x18(%rsi),%eax
  0x00007fab741241af: shl    $0x3,%rax          ;*getfield host {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getHost@1 (line 811)

  0x00007fab741241b3: add    $0x30,%rsp
  0x00007fab741241b7: pop    %rbp
  0x00007fab741241b8: test   %eax,0x1b6bdf42(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741241be: retq   
  0x00007fab741241bf: nop
  0x00007fab741241c0: nop
  0x00007fab741241c1: mov    0x2c0(%r15),%rax
  0x00007fab741241c8: movabs $0x0,%r10
  0x00007fab741241d2: mov    %r10,0x2c0(%r15)
  0x00007fab741241d9: movabs $0x0,%r10
  0x00007fab741241e3: mov    %r10,0x2c8(%r15)
  0x00007fab741241ea: add    $0x30,%rsp
  0x00007fab741241ee: pop    %rbp
  0x00007fab741241ef: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab741241f4: hlt    
  0x00007fab741241f5: hlt    
  0x00007fab741241f6: hlt    
  0x00007fab741241f7: hlt    
  0x00007fab741241f8: hlt    
  0x00007fab741241f9: hlt    
  0x00007fab741241fa: hlt    
  0x00007fab741241fb: hlt    
  0x00007fab741241fc: hlt    
  0x00007fab741241fd: hlt    
  0x00007fab741241fe: hlt    
  0x00007fab741241ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74124200: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74124205: mov    %rsp,-0x28(%rsp)
  0x00007fab7412420a: sub    $0x80,%rsp
  0x00007fab74124211: mov    %rax,0x78(%rsp)
  0x00007fab74124216: mov    %rcx,0x70(%rsp)
  0x00007fab7412421b: mov    %rdx,0x68(%rsp)
  0x00007fab74124220: mov    %rbx,0x60(%rsp)
  0x00007fab74124225: mov    %rbp,0x50(%rsp)
  0x00007fab7412422a: mov    %rsi,0x48(%rsp)
  0x00007fab7412422f: mov    %rdi,0x40(%rsp)
  0x00007fab74124234: mov    %r8,0x38(%rsp)
  0x00007fab74124239: mov    %r9,0x30(%rsp)
  0x00007fab7412423e: mov    %r10,0x28(%rsp)
  0x00007fab74124243: mov    %r11,0x20(%rsp)
  0x00007fab74124248: mov    %r12,0x18(%rsp)
  0x00007fab7412424d: mov    %r13,0x10(%rsp)
  0x00007fab74124252: mov    %r14,0x8(%rsp)
  0x00007fab74124257: mov    %r15,(%rsp)
  0x00007fab7412425b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74124265: movabs $0x7fab74124205,%rsi  ;   {internal_word}
  0x00007fab7412426f: mov    %rsp,%rdx
  0x00007fab74124272: and    $0xfffffffffffffff0,%rsp
  0x00007fab74124276: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7412427b: hlt    
[Deopt Handler Code]
  0x00007fab7412427c: movabs $0x7fab7412427c,%r10  ;   {section_word}
  0x00007fab74124286: push   %r10
  0x00007fab74124288: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7412428d: hlt    
  0x00007fab7412428e: hlt    
  0x00007fab7412428f: hlt    
<nmethod compile_id='49' compiler='C1' level='1' entry='0x00007fab74124180' size='736' address='0x00007fab74124010' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/net/URL getHost ()Ljava/lang/String;' bytes='5' count='129' iicount='129' stamp='0.220'/>
<writer thread='140373948942080'/>
<task_queued compile_id='51' method='java/util/Arrays copyOf ([BI)[B' bytes='19' count='256' iicount='256' level='3' stamp='0.220' comment='tiered' hot_count='256'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/Arrays.copyOf  [0x00007fab741244a0, 0x00007fab741247c8]  808 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab619ce410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  # parm1:    rdx       = int
  #           [sp+0x70]  (sp of caller)
  0x00007fab741244a0: mov    %eax,-0x14000(%rsp)
  0x00007fab741244a7: push   %rbp
  0x00007fab741244a8: sub    $0x60,%rsp
  0x00007fab741244ac: mov    %rsi,%r8
  0x00007fab741244af: mov    %rdx,%r9
  0x00007fab741244b2: movabs $0x7fab61b82058,%rbx  ;   {metadata(method data for {method} {0x00007fab619ce410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab741244bc: mov    0xfc(%rbx),%edx
  0x00007fab741244c2: add    $0x8,%edx
  0x00007fab741244c5: mov    %edx,0xfc(%rbx)
  0x00007fab741244cb: movabs $0x7fab619ce410,%rbx  ;   {metadata({method} {0x00007fab619ce410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab741244d5: and    $0x1ff8,%edx
  0x00007fab741244db: cmp    $0x0,%edx
  0x00007fab741244de: je     0x00007fab7412468a  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@0 (line 3236)

  0x00007fab741244e4: mov    %r9,%rbx
  0x00007fab741244e7: movabs $0x7c0000768,%rdx  ;   {metadata({type array byte})}
  0x00007fab741244f1: movslq %ebx,%rbx
  0x00007fab741244f4: mov    %rbx,%rdi
  0x00007fab741244f7: cmp    $0xffffff,%rbx
  0x00007fab741244fe: ja     0x00007fab741246a1
  0x00007fab74124504: movabs $0x17,%rsi
  0x00007fab7412450e: lea    (%rsi,%rbx,1),%rsi
  0x00007fab74124512: and    $0xfffffffffffffff8,%rsi
  0x00007fab74124516: mov    0x60(%r15),%rax
  0x00007fab7412451a: lea    (%rax,%rsi,1),%rsi
  0x00007fab7412451e: cmp    0x70(%r15),%rsi
  0x00007fab74124522: ja     0x00007fab741246a1
  0x00007fab74124528: mov    %rsi,0x60(%r15)
  0x00007fab7412452c: sub    %rax,%rsi
  0x00007fab7412452f: movq   $0x1,(%rax)
  0x00007fab74124536: mov    %rdx,%rcx
  0x00007fab74124539: shr    $0x3,%rcx
  0x00007fab7412453d: mov    %ecx,0x8(%rax)
  0x00007fab74124540: mov    %ebx,0xc(%rax)
  0x00007fab74124543: sub    $0x10,%rsi
  0x00007fab74124547: je     0x00007fab7412455e
  0x00007fab7412454d: xor    %rbx,%rbx
  0x00007fab74124550: shr    $0x3,%rsi
  0x00007fab74124554: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fab74124559: dec    %rsi
  0x00007fab7412455c: jne    0x00007fab74124554  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3236)

  0x00007fab7412455e: mov    0xc(%r8),%esi      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@9 (line 3237)
                                                ; implicit exception: dispatches to 0x00007fab741246ab
  0x00007fab74124562: movabs $0x7fab61b82058,%rdx  ;   {metadata(method data for {method} {0x00007fab619ce410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7412456c: addq   $0x1,0x130(%rdx)
  0x00007fab74124574: movabs $0x7fab61a9c058,%rdx  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7412457e: mov    0xfc(%rdx),%ecx
  0x00007fab74124584: add    $0x8,%ecx
  0x00007fab74124587: mov    %ecx,0xfc(%rdx)
  0x00007fab7412458d: movabs $0x7fab619a58b8,%rdx  ;   {metadata({method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab74124597: and    $0x7ffff8,%ecx
  0x00007fab7412459d: cmp    $0x0,%ecx
  0x00007fab741245a0: je     0x00007fab741246b0
  0x00007fab741245a6: cmp    %r9d,%esi
  0x00007fab741245a9: movabs $0x7fab61a9c058,%rdx  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab741245b3: movabs $0x130,%rcx
  0x00007fab741245bd: jg     0x00007fab741245cd
  0x00007fab741245c3: movabs $0x140,%rcx
  0x00007fab741245cd: mov    (%rdx,%rcx,1),%rdi
  0x00007fab741245d1: lea    0x1(%rdi),%rdi
  0x00007fab741245d5: mov    %rdi,(%rdx,%rcx,1)
  0x00007fab741245d9: jg     0x00007fab741245f2  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)

  0x00007fab741245df: movabs $0x7fab61a9c058,%rdx  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab741245e9: incl   0x150(%rdx)
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.meta.JavaMethod from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
  0x00007fab741245ef: mov    %rsi,%r9           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)

  0x00007fab741245f2: movabs $0x7fab61b82058,%rsi  ;   {metadata(method data for {method} {0x00007fab619ce410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab741245fc: addq   $0x1,0x140(%rsi)
  0x00007fab74124604: mov    %r8,%rsi
  0x00007fab74124607: mov    $0x0,%edx
  0x00007fab7412460c: mov    %rax,%rcx
  0x00007fab7412460f: mov    $0x0,%r8d
  0x00007fab74124615: mov    %rax,0x50(%rsp)
  0x00007fab7412461a: lea    (%rdx,%r9,1),%rdi
  0x00007fab7412461e: cmp    0xc(%rsi),%edi
  0x00007fab74124621: ja     0x00007fab741246c7
  0x00007fab74124627: lea    (%r8,%r9,1),%rdi
  0x00007fab7412462b: cmp    0xc(%rcx),%edi
  0x00007fab7412462e: ja     0x00007fab741246c7
  0x00007fab74124634: test   %r9d,%r9d
  0x00007fab74124637: jl     0x00007fab741246c7
  0x00007fab7412463d: je     0x00007fab74124679
  0x00007fab74124643: movslq %edx,%rdx
  0x00007fab74124646: movslq %r8d,%r8
  0x00007fab74124649: lea    0x10(%rsi,%rdx,1),%rdi
  0x00007fab7412464e: lea    0x10(%rcx,%r8,1),%rsi
  0x00007fab74124653: mov    %r9,%rdx
  0x00007fab74124656: test   $0xf,%esp
  0x00007fab7412465c: je     0x00007fab74124674
  0x00007fab74124662: sub    $0x8,%rsp
  0x00007fab74124666: callq  Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007fab7412466b: add    $0x8,%rsp
  0x00007fab7412466f: jmpq   0x00007fab74124679
  0x00007fab74124674: callq  Stub::jbyte_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ;   {runtime_call}
  0x00007fab74124679: mov    0x50(%rsp),%rax
  0x00007fab7412467e: add    $0x60,%rsp
  0x00007fab74124682: pop    %rbp
  0x00007fab74124683: test   %eax,0x1b6bda77(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74124689: retq   
  0x00007fab7412468a: mov    %rbx,0x8(%rsp)
  0x00007fab7412468f: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74124697: callq  0x00007fab741005e0  ; OopMap{r8=Oop off=508}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3236)
                                                ;   {runtime_call}
  0x00007fab7412469c: jmpq   0x00007fab741244e4
  0x00007fab741246a1: callq  0x00007fab740fd020  ; OopMap{r8=Oop off=518}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3236)
                                                ;   {runtime_call}
  0x00007fab741246a6: jmpq   0x00007fab7412455e
  0x00007fab741246ab: callq  0x00007fab740fc000  ; OopMap{r8=Oop rax=Oop off=528}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@9 (line 3237)
                                                ;   {runtime_call}
  0x00007fab741246b0: mov    %rdx,0x8(%rsp)
  0x00007fab741246b5: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741246bd: callq  0x00007fab741005e0  ; OopMap{r8=Oop rax=Oop off=546}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ;   {runtime_call}
  0x00007fab741246c2: jmpq   0x00007fab741245a6
  0x00007fab741246c7: callq  0x00007fab74048160  ; OopMap{[80]=Oop off=556}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ;   {static_call}
  0x00007fab741246cc: jmp    0x00007fab74124679
  0x00007fab741246ce: nop
  0x00007fab741246cf: nop
  0x00007fab741246d0: mov    0x2c0(%r15),%rax
  0x00007fab741246d7: movabs $0x0,%r10
  0x00007fab741246e1: mov    %r10,0x2c0(%r15)
  0x00007fab741246e8: movabs $0x0,%r10
  0x00007fab741246f2: mov    %r10,0x2c8(%r15)
  0x00007fab741246f9: add    $0x60,%rsp
  0x00007fab741246fd: pop    %rbp
  0x00007fab741246fe: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74124703: hlt    
  0x00007fab74124704: hlt    
  0x00007fab74124705: hlt    
  0x00007fab74124706: hlt    
  0x00007fab74124707: hlt    
  0x00007fab74124708: hlt    
  0x00007fab74124709: hlt    
  0x00007fab7412470a: hlt    
  0x00007fab7412470b: hlt    
  0x00007fab7412470c: hlt    
  0x00007fab7412470d: hlt    
  0x00007fab7412470e: hlt    
  0x00007fab7412470f: hlt    
  0x00007fab74124710: hlt    
  0x00007fab74124711: hlt    
  0x00007fab74124712: hlt    
  0x00007fab74124713: hlt    
  0x00007fab74124714: hlt    
  0x00007fab74124715: hlt    
  0x00007fab74124716: hlt    
  0x00007fab74124717: hlt    
  0x00007fab74124718: hlt    
  0x00007fab74124719: hlt    
  0x00007fab7412471a: hlt    
  0x00007fab7412471b: hlt    
  0x00007fab7412471c: hlt    
  0x00007fab7412471d: hlt    
  0x00007fab7412471e: hlt    
  0x00007fab7412471f: hlt    
[Stub Code]
  0x00007fab74124720: nop                       ;   {no_reloc}
  0x00007fab74124721: nop
  0x00007fab74124722: nop
  0x00007fab74124723: nop
  0x00007fab74124724: nop
  0x00007fab74124725: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7412472f: jmpq   0x00007fab7412472f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74124734: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74124739: mov    %rsp,-0x28(%rsp)
  0x00007fab7412473e: sub    $0x80,%rsp
  0x00007fab74124745: mov    %rax,0x78(%rsp)
  0x00007fab7412474a: mov    %rcx,0x70(%rsp)
  0x00007fab7412474f: mov    %rdx,0x68(%rsp)
  0x00007fab74124754: mov    %rbx,0x60(%rsp)
  0x00007fab74124759: mov    %rbp,0x50(%rsp)
  0x00007fab7412475e: mov    %rsi,0x48(%rsp)
  0x00007fab74124763: mov    %rdi,0x40(%rsp)
  0x00007fab74124768: mov    %r8,0x38(%rsp)
  0x00007fab7412476d: mov    %r9,0x30(%rsp)
  0x00007fab74124772: mov    %r10,0x28(%rsp)
  0x00007fab74124777: mov    %r11,0x20(%rsp)
  0x00007fab7412477c: mov    %r12,0x18(%rsp)
  0x00007fab74124781: mov    %r13,0x10(%rsp)
  0x00007fab74124786: mov    %r14,0x8(%rsp)
  0x00007fab7412478b: mov    %r15,(%rsp)
  0x00007fab7412478f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74124799: movabs $0x7fab74124739,%rsi  ;   {internal_word}
  0x00007fab741247a3: mov    %rsp,%rdx
  0x00007fab741247a6: and    $0xfffffffffffffff0,%rsp
  0x00007fab741247aa: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741247af: hlt    
[Deopt Handler Code]
  0x00007fab741247b0: movabs $0x7fab741247b0,%r10  ;   {section_word}
  0x00007fab741247ba: push   %r10
  0x00007fab741247bc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab741247c1: hlt    
  0x00007fab741247c2: hlt    
  0x00007fab741247c3: hlt    
  0x00007fab741247c4: hlt    
  0x00007fab741247c5: hlt    
  0x00007fab741247c6: hlt    
  0x00007fab741247c7: hlt    
<nmethod compile_id='51' compiler='C1' level='3' entry='0x00007fab741244a0' size='1584' address='0x00007fab74124310' relocation_offset='312' insts_offset='400' stub_offset='1040' scopes_data_offset='1224' scopes_pcs_offset='1352' dependencies_offset='1560' nul_chk_table_offset='1568' metadata_offset='1208' method='java/util/Arrays copyOf ([BI)[B' bytes='19' count='289' iicount='289' stamp='0.222'/>
----------------------------------------------------------------------
java/net/URL.getAuthority  [0x00007fab74124ac0, 0x00007fab74124bd0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61930a30} &apos;getAuthority&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab74124ac0: mov    0x8(%rsi),%r10d
  0x00007fab74124ac4: shl    $0x3,%r10
  0x00007fab74124ac8: cmp    %rax,%r10
  0x00007fab74124acb: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74124ad1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74124adc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74124ae0: mov    %eax,-0x14000(%rsp)
  0x00007fab74124ae7: push   %rbp
  0x00007fab74124ae8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getAuthority@0 (line 768)

  0x00007fab74124aec: mov    0x24(%rsi),%eax
  0x00007fab74124aef: shl    $0x3,%rax          ;*getfield authority {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getAuthority@1 (line 768)

  0x00007fab74124af3: add    $0x30,%rsp
  0x00007fab74124af7: pop    %rbp
  0x00007fab74124af8: test   %eax,0x1b6bd602(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74124afe: retq   
  0x00007fab74124aff: nop
  0x00007fab74124b00: nop
  0x00007fab74124b01: mov    0x2c0(%r15),%rax
  0x00007fab74124b08: movabs $0x0,%r10
  0x00007fab74124b12: mov    %r10,0x2c0(%r15)
  0x00007fab74124b19: movabs $0x0,%r10
  0x00007fab74124b23: mov    %r10,0x2c8(%r15)
  0x00007fab74124b2a: add    $0x30,%rsp
  0x00007fab74124b2e: pop    %rbp
  0x00007fab74124b2f: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74124b34: hlt    
  0x00007fab74124b35: hlt    
  0x00007fab74124b36: hlt    
  0x00007fab74124b37: hlt    
  0x00007fab74124b38: hlt    
  0x00007fab74124b39: hlt    
  0x00007fab74124b3a: hlt    
  0x00007fab74124b3b: hlt    
  0x00007fab74124b3c: hlt    
  0x00007fab74124b3d: hlt    
  0x00007fab74124b3e: hlt    
  0x00007fab74124b3f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74124b40: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74124b45: mov    %rsp,-0x28(%rsp)
  0x00007fab74124b4a: sub    $0x80,%rsp
  0x00007fab74124b51: mov    %rax,0x78(%rsp)
  0x00007fab74124b56: mov    %rcx,0x70(%rsp)
  0x00007fab74124b5b: mov    %rdx,0x68(%rsp)
  0x00007fab74124b60: mov    %rbx,0x60(%rsp)
  0x00007fab74124b65: mov    %rbp,0x50(%rsp)
  0x00007fab74124b6a: mov    %rsi,0x48(%rsp)
  0x00007fab74124b6f: mov    %rdi,0x40(%rsp)
  0x00007fab74124b74: mov    %r8,0x38(%rsp)
  0x00007fab74124b79: mov    %r9,0x30(%rsp)
  0x00007fab74124b7e: mov    %r10,0x28(%rsp)
  0x00007fab74124b83: mov    %r11,0x20(%rsp)
  0x00007fab74124b88: mov    %r12,0x18(%rsp)
  0x00007fab74124b8d: mov    %r13,0x10(%rsp)
  0x00007fab74124b92: mov    %r14,0x8(%rsp)
  0x00007fab74124b97: mov    %r15,(%rsp)
  0x00007fab74124b9b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74124ba5: movabs $0x7fab74124b45,%rsi  ;   {internal_word}
  0x00007fab74124baf: mov    %rsp,%rdx
  0x00007fab74124bb2: and    $0xfffffffffffffff0,%rsp
  0x00007fab74124bb6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74124bbb: hlt    
[Deopt Handler Code]
  0x00007fab74124bbc: movabs $0x7fab74124bbc,%r10  ;   {section_word}
  0x00007fab74124bc6: push   %r10
  0x00007fab74124bc8: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74124bcd: hlt    
  0x00007fab74124bce: hlt    
  0x00007fab74124bcf: hlt    
<nmethod compile_id='50' compiler='C1' level='1' entry='0x00007fab74124ac0' size='736' address='0x00007fab74124950' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/net/URL getAuthority ()Ljava/lang/String;' bytes='5' count='146' iicount='146' stamp='0.223'/>
<writer thread='140373948942080'/>
<task_queued compile_id='52' method='java/lang/AbstractStringBuilder newCapacity (I)I' bytes='39' count='300' iicount='300' level='3' stamp='0.223' comment='tiered' hot_count='300'/>
[Loaded jdk.vm.ci.meta.ModifiersProvider from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.newCapacity  [0x00007fab74124de0, 0x00007fab741251c8]  1000 bytes
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.meta.ResolvedJavaMethod from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
[Entry Point]
[Constants]
  # {method} {0x00007fab61915cc8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x00007fab74124de0: mov    0x8(%rsi),%r10d
  0x00007fab74124de4: shl    $0x3,%r10
  0x00007fab74124de8: cmp    %rax,%r10
  0x00007fab74124deb: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74124df1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74124dfc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74124e00: mov    %eax,-0x14000(%rsp)
  0x00007fab74124e07: push   %rbp
  0x00007fab74124e08: sub    $0x40,%rsp
  0x00007fab74124e0c: movabs $0x7fab61af6f98,%rax  ;   {metadata(method data for {method} {0x00007fab61915cc8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab74124e16: mov    0xfc(%rax),%edi
  0x00007fab74124e1c: add    $0x8,%edi
  0x00007fab74124e1f: mov    %edi,0xfc(%rax)
  0x00007fab74124e25: movabs $0x7fab61915cc8,%rax  ;   {metadata({method} {0x00007fab61915cc8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab74124e2f: and    $0x1ff8,%edi
  0x00007fab74124e35: cmp    $0x0,%edi
  0x00007fab74124e38: je     0x00007fab7412507e  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@0 (line 150)

  0x00007fab74124e3e: mov    0x10(%rsi),%eax
  0x00007fab74124e41: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)

  0x00007fab74124e45: mov    0xc(%rax),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; implicit exception: dispatches to 0x00007fab74125095
  0x00007fab74124e48: shl    %eax
  0x00007fab74124e4a: add    $0x2,%eax
  0x00007fab74124e4d: mov    %rax,%rdi
  0x00007fab74124e50: sub    %edx,%edi
  0x00007fab74124e52: cmp    $0x0,%edi
  0x00007fab74124e55: movabs $0x7fab61af6f98,%rdi  ;   {metadata(method data for {method} {0x00007fab61915cc8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab74124e5f: movabs $0x130,%rcx
  0x00007fab74124e69: jge    0x00007fab74124e79
  0x00007fab74124e6f: movabs $0x140,%rcx
  0x00007fab74124e79: mov    (%rdi,%rcx,1),%rbx
  0x00007fab74124e7d: lea    0x1(%rbx),%rbx
  0x00007fab74124e81: mov    %rbx,(%rdi,%rcx,1)
  0x00007fab74124e85: jge    0x00007fab74124e8e  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)

  0x00007fab74124e8b: mov    %rdx,%rax          ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)

  0x00007fab74124e8e: cmp    $0x0,%eax
  0x00007fab74124e91: movabs $0x7fab61af6f98,%rdi  ;   {metadata(method data for {method} {0x00007fab61915cc8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab74124e9b: movabs $0x150,%rcx
  0x00007fab74124ea5: jle    0x00007fab74124eb5
  0x00007fab74124eab: movabs $0x160,%rcx
  0x00007fab74124eb5: mov    (%rdi,%rcx,1),%rbx
  0x00007fab74124eb9: lea    0x1(%rbx),%rbx
  0x00007fab74124ebd: mov    %rbx,(%rdi,%rcx,1)
  0x00007fab74124ec1: jle    0x00007fab74124f07  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)

  0x00007fab74124ec7: mov    $0x7ffffff7,%edi
  0x00007fab74124ecc: sub    %eax,%edi
  0x00007fab74124ece: cmp    $0x0,%edi
  0x00007fab74124ed1: movabs $0x7fab61af6f98,%rdi  ;   {metadata(method data for {method} {0x00007fab61915cc8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab74124edb: movabs $0x170,%rcx
  0x00007fab74124ee5: jge    0x00007fab74124ef5
  0x00007fab74124eeb: movabs $0x180,%rcx
  0x00007fab74124ef5: mov    (%rdi,%rcx,1),%rbx
  0x00007fab74124ef9: lea    0x1(%rbx),%rbx
  0x00007fab74124efd: mov    %rbx,(%rdi,%rcx,1)
  0x00007fab74124f01: jge    0x00007fab74124ff6  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)

  0x00007fab74124f07: movabs $0x7fab61af6f98,%rax  ;   {metadata(method data for {method} {0x00007fab61915cc8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab74124f11: addq   $0x1,0x190(%rax)
  0x00007fab74124f19: movabs $0x7fab61b821f0,%rax  ;   {metadata(method data for {method} {0x00007fab61915d90} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab74124f23: mov    0xfc(%rax),%esi
  0x00007fab74124f29: add    $0x8,%esi
  0x00007fab74124f2c: mov    %esi,0xfc(%rax)
  0x00007fab74124f32: movabs $0x7fab61915d90,%rax  ;   {metadata({method} {0x00007fab61915d90} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab74124f3c: and    $0x7ffff8,%esi
  0x00007fab74124f42: cmp    $0x0,%esi
  0x00007fab74124f45: je     0x00007fab7412509a
  0x00007fab74124f4b: mov    $0x7fffffff,%eax
  0x00007fab74124f50: sub    %edx,%eax
  0x00007fab74124f52: cmp    $0x0,%eax
  0x00007fab74124f55: movabs $0x7fab61b821f0,%rax  ;   {metadata(method data for {method} {0x00007fab61915d90} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab74124f5f: movabs $0x130,%rsi
  0x00007fab74124f69: jge    0x00007fab74124f79
  0x00007fab74124f6f: movabs $0x140,%rsi
  0x00007fab74124f79: mov    (%rax,%rsi,1),%rdi
  0x00007fab74124f7d: lea    0x1(%rdi),%rdi
  0x00007fab74124f81: mov    %rdi,(%rax,%rsi,1)
  0x00007fab74124f85: jl     0x00007fab74125008  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@4 (line 160)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x00007fab74124f8b: cmp    $0x7ffffff7,%edx
  0x00007fab74124f91: movabs $0x7fab61b821f0,%rax  ;   {metadata(method data for {method} {0x00007fab61915d90} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab74124f9b: movabs $0x160,%rsi
  0x00007fab74124fa5: jle    0x00007fab74124fb5
  0x00007fab74124fab: movabs $0x170,%rsi
  0x00007fab74124fb5: mov    (%rax,%rsi,1),%rdi
  0x00007fab74124fb9: lea    0x1(%rdi),%rdi
  0x00007fab74124fbd: mov    %rdi,(%rax,%rsi,1)
  0x00007fab74124fc1: jle    0x00007fab74124fdc  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@18 (line 163)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x00007fab74124fc7: movabs $0x7fab61b821f0,%rax  ;   {metadata(method data for {method} {0x00007fab61915d90} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab74124fd1: incl   0x180(%rax)
  0x00007fab74124fd7: jmpq   0x00007fab74124fe1  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@22 (line 163)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x00007fab74124fdc: mov    $0x7ffffff7,%edx   ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@27 (line 163)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x00007fab74124fe1: movabs $0x7fab61af6f98,%rax  ;   {metadata(method data for {method} {0x00007fab61915cc8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab74124feb: incl   0x1a0(%rax)
  0x00007fab74124ff1: jmpq   0x00007fab74124ff9  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)

  0x00007fab74124ff6: mov    %rax,%rdx
  0x00007fab74124ff9: mov    %rdx,%rax
  0x00007fab74124ffc: add    $0x40,%rsp
  0x00007fab74125000: pop    %rbp
  0x00007fab74125001: test   %eax,0x1b6bd0f9(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74125007: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)

  0x00007fab74125008: jmpq   0x00007fab741250c0  ;   {no_reloc}
  0x00007fab7412500d: add    %al,(%rax)
  0x00007fab7412500f: add    %al,(%rax)
  0x00007fab74125011: add    %cl,-0x75(%rcx)
  0x00007fab74125014: rex.RXB (bad) 
  0x00007fab74125016: lea    0x20(%rax),%rdi
  0x00007fab7412501a: cmp    0x70(%r15),%rdi
  0x00007fab7412501e: ja     0x00007fab741250ca
  0x00007fab74125024: mov    %rdi,0x60(%r15)
  0x00007fab74125028: mov    0xa8(%rdx),%rcx
  0x00007fab7412502f: mov    %rcx,(%rax)
  0x00007fab74125032: mov    %rdx,%rcx
  0x00007fab74125035: shr    $0x3,%rcx
  0x00007fab74125039: mov    %ecx,0x8(%rax)
  0x00007fab7412503c: xor    %rcx,%rcx
  0x00007fab7412503f: mov    %ecx,0xc(%rax)
  0x00007fab74125042: xor    %rcx,%rcx
  0x00007fab74125045: mov    %rcx,0x10(%rax)
  0x00007fab74125049: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@7 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x00007fab7412504d: mov    %rax,%rsi
  0x00007fab74125050: movabs $0x7fab61b821f0,%rdi  ;   {metadata(method data for {method} {0x00007fab61915d90} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab7412505a: addq   $0x1,0x150(%rdi)
  0x00007fab74125062: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@11 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x00007fab74125065: mov    %rax,0x30(%rsp)
  0x00007fab7412506a: nop
  0x00007fab7412506b: nop
  0x00007fab7412506c: nop
  0x00007fab7412506d: nop
  0x00007fab7412506e: nop
  0x00007fab7412506f: callq  0x00007fab74047d60  ; OopMap{[48]=Oop off=660}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@11 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {optimized virtual_call}
  0x00007fab74125074: mov    0x30(%rsp),%rax
  0x00007fab74125079: jmpq   0x00007fab74125102
  0x00007fab7412507e: mov    %rax,0x8(%rsp)
  0x00007fab74125083: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412508b: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=688}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::newCapacity@-1 (line 150)
                                                ;   {runtime_call}
  0x00007fab74125090: jmpq   0x00007fab74124e3e
  0x00007fab74125095: callq  0x00007fab740fc000  ; OopMap{rsi=Oop off=698}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ;   {runtime_call}
  0x00007fab7412509a: mov    %rax,0x8(%rsp)
  0x00007fab7412509f: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741250a7: callq  0x00007fab741005e0  ; OopMap{off=716}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@-1 (line 160)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {runtime_call}
  0x00007fab741250ac: jmpq   0x00007fab74124f4b
  0x00007fab741250b1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab741250bb: mov    $0xa050f00,%eax
  0x00007fab741250c0: callq  0x00007fab740ff5e0  ; OopMap{off=741}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@7 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {runtime_call}
  0x00007fab741250c5: jmpq   0x00007fab74125008
  0x00007fab741250ca: mov    %rdx,%rdx
  0x00007fab741250cd: callq  0x00007fab740fc760  ; OopMap{off=754}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@7 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {runtime_call}
  0x00007fab741250d2: jmpq   0x00007fab7412504d
  0x00007fab741250d7: nop
  0x00007fab741250d8: nop
  0x00007fab741250d9: mov    0x2c0(%r15),%rax
  0x00007fab741250e0: movabs $0x0,%r10
  0x00007fab741250ea: mov    %r10,0x2c0(%r15)
  0x00007fab741250f1: movabs $0x0,%r10
  0x00007fab741250fb: mov    %r10,0x2c8(%r15)
  0x00007fab74125102: add    $0x40,%rsp
  0x00007fab74125106: pop    %rbp
  0x00007fab74125107: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7412510c: hlt    
  0x00007fab7412510d: hlt    
  0x00007fab7412510e: hlt    
  0x00007fab7412510f: hlt    
  0x00007fab74125110: hlt    
  0x00007fab74125111: hlt    
  0x00007fab74125112: hlt    
  0x00007fab74125113: hlt    
  0x00007fab74125114: hlt    
  0x00007fab74125115: hlt    
  0x00007fab74125116: hlt    
  0x00007fab74125117: hlt    
  0x00007fab74125118: hlt    
  0x00007fab74125119: hlt    
  0x00007fab7412511a: hlt    
  0x00007fab7412511b: hlt    
  0x00007fab7412511c: hlt    
  0x00007fab7412511d: hlt    
  0x00007fab7412511e: hlt    
  0x00007fab7412511f: hlt    
[Stub Code]
  0x00007fab74125120: nop                       ;   {no_reloc}
  0x00007fab74125121: nop
  0x00007fab74125122: nop
  0x00007fab74125123: nop
  0x00007fab74125124: nop
  0x00007fab74125125: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7412512f: jmpq   0x00007fab7412512f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74125134: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74125139: mov    %rsp,-0x28(%rsp)
  0x00007fab7412513e: sub    $0x80,%rsp
  0x00007fab74125145: mov    %rax,0x78(%rsp)
  0x00007fab7412514a: mov    %rcx,0x70(%rsp)
  0x00007fab7412514f: mov    %rdx,0x68(%rsp)
  0x00007fab74125154: mov    %rbx,0x60(%rsp)
  0x00007fab74125159: mov    %rbp,0x50(%rsp)
  0x00007fab7412515e: mov    %rsi,0x48(%rsp)
  0x00007fab74125163: mov    %rdi,0x40(%rsp)
  0x00007fab74125168: mov    %r8,0x38(%rsp)
  0x00007fab7412516d: mov    %r9,0x30(%rsp)
  0x00007fab74125172: mov    %r10,0x28(%rsp)
  0x00007fab74125177: mov    %r11,0x20(%rsp)
  0x00007fab7412517c: mov    %r12,0x18(%rsp)
  0x00007fab74125181: mov    %r13,0x10(%rsp)
  0x00007fab74125186: mov    %r14,0x8(%rsp)
  0x00007fab7412518b: mov    %r15,(%rsp)
  0x00007fab7412518f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74125199: movabs $0x7fab74125139,%rsi  ;   {internal_word}
  0x00007fab741251a3: mov    %rsp,%rdx
  0x00007fab741251a6: and    $0xfffffffffffffff0,%rsp
  0x00007fab741251aa: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741251af: hlt    
[Deopt Handler Code]
  0x00007fab741251b0: movabs $0x7fab741251b0,%r10  ;   {section_word}
  0x00007fab741251ba: push   %r10
  0x00007fab741251bc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab741251c1: hlt    
  0x00007fab741251c2: hlt    
  0x00007fab741251c3: hlt    
  0x00007fab741251c4: hlt    
  0x00007fab741251c5: hlt    
  0x00007fab741251c6: hlt    
  0x00007fab741251c7: hlt    
<nmethod compile_id='52' compiler='C1' level='3' entry='0x00007fab74124de0' size='1976' address='0x00007fab74124c50' relocation_offset='312' insts_offset='400' stub_offset='1232' scopes_data_offset='1416' scopes_pcs_offset='1584' dependencies_offset='1952' nul_chk_table_offset='1960' metadata_offset='1400' method='java/lang/AbstractStringBuilder newCapacity (I)I' bytes='39' count='303' iicount='303' stamp='0.225'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.HotSpotResolvedJavaMethod from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.hotspot.MetaspaceWrapperObject from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='53' method='java/nio/charset/CharsetEncoder maxBytesPerChar ()F' bytes='5' count='256' iicount='256' level='3' stamp='0.225' comment='tiered' hot_count='256'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/nio/charset/CharsetEncoder.maxBytesPerChar  [0x00007fab741255c0, 0x00007fab74125710]  336 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61a0aeb8} &apos;maxBytesPerChar&apos; &apos;()F&apos; in &apos;java/nio/charset/CharsetEncoder&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab741255c0: mov    0x8(%rsi),%r10d
  0x00007fab741255c4: shl    $0x3,%r10
  0x00007fab741255c8: cmp    %rax,%r10
  0x00007fab741255cb: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab741255d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab741255dc: data16 data16 xchg %ax,
<writer thread='140373948942080'/>
[Loaded java.util.Formattable from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
%ax
[Verified Entry Point]
  0x00007fab741255e0: mov    %eax,-0x14000(%rsp)
  0x00007fab741255e7: push   %rbp
  0x00007fab741255e8: sub    $0x30,%rsp
  0x00007fab741255ec: movabs $0x7fab61b82520,%rdi  ;   {metadata(method data for {method} {0x00007fab61a0aeb8} &apos;maxBytesPerChar&apos; &apos;()F&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab741255f6: mov    0xfc(%rdi),%ebx
  0x00007fab741255fc: add    $0x8,%ebx
  0x00007fab741255ff: mov    %ebx,0xfc(%rdi)
  0x00007fab74125605: movabs $0x7fab61a0aeb8,%rdi  ;   {metadata({method} {0x00007fab61a0aeb8} &apos;maxBytesPerChar&apos; &apos;()F&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab7412560f: and    $0x1ff8,%ebx
  0x00007fab74125615: cmp    $0x0,%ebx
  0x00007fab74125618: je     0x00007fab7412562f  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::maxBytesPerChar@0 (line 465)

  0x00007fab7412561e: vmovss 0x10(%rsi),%xmm0   ;*getfield maxBytesPerChar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::maxBytesPerChar@1 (line 465)

  0x00007fab74125623: add    $0x30,%rsp
  0x00007fab74125627: pop    %rbp
  0x00007fab74125628: test   %eax,0x1b6bcad2(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7412562e: retq   
  0x00007fab7412562f: mov    %rdi,0x8(%rsp)
  0x00007fab74125634: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412563c: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=129}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::maxBytesPerChar@-1 (line 465)
                                                ;   {runtime_call}
  0x00007fab74125641: jmp    0x00007fab7412561e
  0x00007fab74125643: nop
  0x00007fab74125644: nop
  0x00007fab74125645: mov    0x2c0(%r15),%rax
  0x00007fab7412564c: movabs $0x0,%r10
  0x00007fab74125656: mov    %r10,0x2c0(%r15)
  0x00007fab7412565d: movabs $0x0,%r10
  0x00007fab74125667: mov    %r10,0x2c8(%r15)
  0x00007fab7412566e: add    $0x30,%rsp
  0x00007fab74125672: pop    %rbp
  0x00007fab74125673: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74125678: hlt    
  0x00007fab74125679: hlt    
  0x00007fab7412567a: hlt    
  0x00007fab7412567b: hlt    
  0x00007fab7412567c: hlt    
  0x00007fab7412567d: hlt    
  0x00007fab7412567e: hlt    
  0x00007fab7412567f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74125680: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74125685: mov    %rsp,-0x28(%rsp)
  0x00007fab7412568a: sub    $0x80,%rsp
  0x00007fab74125691: mov    %rax,0x78(%rsp)
  0x00007fab74125696: mov    %rcx,0x70(%rsp)
  0x00007fab7412569b: mov    %rdx,0x68(%rsp)
  0x00007fab741256a0: mov    %rbx,0x60(%rsp)
  0x00007fab741256a5: mov    %rbp,0x50(%rsp)
  0x00007fab741256aa: mov    %rsi,0x48(%rsp)
  0x00007fab741256af: mov    %rdi,0x40(%rsp)
  0x00007fab741256b4: mov    %r8,0x38(%rsp)
  0x00007fab741256b9: mov    %r9,0x30(%rsp)
  0x00007fab741256be: mov    %r10,0x28(%rsp)
  0x00007fab741256c3: mov    %r11,0x20(%rsp)
  0x00007fab741256c8: mov    %r12,0x18(%rsp)
  0x00007fab741256cd: mov    %r13,0x10(%rsp)
  0x00007fab741256d2: mov    %r14,0x8(%rsp)
  0x00007fab741256d7: mov    %r15,(%rsp)
  0x00007fab741256db: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741256e5: movabs $0x7fab74125685,%rsi  ;   {internal_word}
  0x00007fab741256ef: mov    %rsp,%rdx
  0x00007fab741256f2: and    $0xfffffffffffffff0,%rsp
  0x00007fab741256f6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741256fb: hlt    
[Deopt Handler Code]
  0x00007fab741256fc: movabs $0x7fab741256fc,%r10  ;   {section_word}
  0x00007fab74125706: push   %r10
  0x00007fab74125708: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7412570d: hlt    
  0x00007fab7412570e: hlt    
  0x00007fab7412570f: hlt    
<nmethod compile_id='53' compiler='C1' level='3' entry='0x00007fab741255c0' size='824' address='0x00007fab74125450' relocation_offset='312' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='736' dependencies_offset='816' metadata_offset='704' method='java/nio/charset/CharsetEncoder maxBytesPerChar ()F' bytes='5' count='262' iicount='262' stamp='0.226'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.HotSpotMethod from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='54' method='java/net/URL getRef ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.226' comment='tiered' hot_count='128'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/net/URL.getRef  [0x00007fab74125940, 0x00007fab74125a50]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61930df8} &apos;getRef&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab74125940: mov    0x8(%rsi),%r10d
  0x00007fab74125944: shl    $0x3,%r10
  0x00007fab74125948: cmp    %rax,%r10
  0x00007fab7412594b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74125951: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7412595c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74125960: mov    %eax,-0x14000(%rsp)
  0x00007fab74125967: push   %rbp
  0x00007fab74125968: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getRef@0 (line 837)

  0x00007fab7412596c: mov    0x30(%rsi),%eax
  0x00007fab7412596f: shl    $0x3,%rax          ;*getfield ref {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getRef@1 (line 837)

  0x00007fab74125973: add    $0x30,%rsp
  0x00007fab74125977: pop    %rbp
  0x00007fab74125978: test   %eax,0x1b6bc782(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7412597e: retq   
  0x00007fab7412597f: nop
  0x00007fab74125980: nop
  0x00007fab74125981: mov    0x2c0(%r15),%rax
  0x00007fab74125988: movabs $0x0,%r10
  0x00007fab74125992: mov    %r10,0x2c0(%r15)
  0x00007fab74125999: movabs $0x0,%r10
  0x00007fab741259a3: mov    %r10,0x2c8(%r15)
  0x00007fab741259aa: add    $0x30,%rsp
  0x00007fab741259ae: pop    %rbp
  0x00007fab741259af: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab741259b4: hlt    
  0x00007fab741259b5: hlt    
  0x00007fab741259b6: hlt    
  0x00007fab741259b7: hlt    
  0x00007fab741259b8: hlt    
  0x00007fab741259b9: hlt    
  0x00007fab741259ba: hlt    
  0x00007fab741259bb: hlt    
  0x00007fab741259bc: hlt    
  0x00007fab741259bd: hlt    
  0x00007fab741259be: hlt    
  0x00007fab741259bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab741259c0: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab741259c5: mov    %rsp,-0x28(%rsp)
  0x00007fab741259ca: sub    $0x80,%rsp
  0x00007fab741259d1: mov    %rax,0x78(%rsp)
  0x00007fab741259d6: mov    %rcx,0x70(%rsp)
  0x00007fab741259db: mov    %rdx,0x68(%rsp)
  0x00007fab741259e0: mov    %rbx,0x60(%rsp)
  0x00007fab741259e5: mov    %rbp,0x50(%rsp)
  0x00007fab741259ea: mov    %rsi,0x48(%rsp)
  0x00007fab741259ef: mov    %rdi,0x40(%rsp)
  0x00007fab741259f4: mov    %r8,0x38(%rsp)
  0x00007fab741259f9: mov    %r9,0x30(%rsp)
  0x00007fab741259fe: mov    %r10,0x28(%rsp)
  0x00007fab74125a03: mov    %r11,0x20(%rsp)
  0x00007fab74125a08: mov    %r12,0x18(%rsp)
  0x00007fab74125a0d: mov    %r13,0x10(%rsp)
  0x00007fab74125a12: mov    %r14,0x8(%rsp)
  0x00007fab74125a17: mov    %r15,(%rsp)
  0x00007fab74125a1b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74125a25: movabs $0x7fab741259c5,%rsi  ;   {internal_word}
  0x00007fab74125a2f: mov    %rsp,%rdx
  0x00007fab74125a32: and    $0xfffffffffffffff0,%rsp
  0x00007fab74125a36: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74125a3b: hlt    
[Deopt Handler Code]
  0x00007fab74125a3c: movabs $0x7fab74125a3c,%r10  ;   {section_word}
  0x00007fab74125a46: push   %r10
  0x00007fab74125a48: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74125a4d: hlt    
  0x00007fab74125a4e: hlt    
  0x00007fab74125a4f: hlt    
<nmethod compile_id='54' compiler='C1' level='1' entry='0x00007fab74125940' size='736' address='0x00007fab741257d0' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/net/URL getRef ()Ljava/lang/String;' bytes='5' count='128' iicount='128' stamp='0.227'/>
<writer thread='140373948942080'/>
<task_queued compile_id='55' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='384' iicount='384' level='3' stamp='0.227' comment='tiered' hot_count='384'/>
----------------------------------------------------------------------
sun/misc/Unsafe.getObjectVolatile  [0x00007fab74125c60, 0x00007fab74125e60]  512 bytes
[Entry Point]
  # {method} {0x00007fab61922990} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rsi:rsi   = &apos;sun/misc/Unsafe&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = long
  #           [sp+0x50]  (sp of caller)
  0x00007fab74125c60: mov    0x8(%rsi),%r10d
  0x00007fab74125c64: shl    $0x3,%r10
  0x00007fab74125c68: cmp    %r10,%rax
  0x00007fab74125c6b: je     0x00007fab74125c78
  0x00007fab74125c71: jmpq   0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74125c76: xchg   %ax,%ax
[Verified Entry Point]
  0x00007fab74125c78: mov    %eax,-0x14000(%rsp)
  0x00007fab74125c7f: push   %rbp
  0x00007fab74125c80: mov    %rsp,%rbp
  0x00007fab74125c83: sub    $0x40,%rsp
  0x00007fab74125c87: mov    %rdx,0x8(%rsp)
  0x00007fab74125c8c: cmp    $0x0,%rdx
  0x00007fab74125c90: lea    0x8(%rsp),%rdx
  0x00007fab74125c95: cmove  0x8(%rsp),%rdx
  0x00007fab74125c9b: mov    %rsi,(%rsp)
  0x00007fab74125c9f: cmp    $0x0,%rsi
  0x00007fab74125ca3: lea    (%rsp),%rsi
  0x00007fab74125ca7: cmove  (%rsp),%rsi        ; OopMap{[8]=Oop [0]=Oop off=76}
  0x00007fab74125cac: movabs $0x7fab74125cac,%r10  ;   {section_word}
  0x00007fab74125cb6: mov    %r10,0x1c8(%r15)
  0x00007fab74125cbd: mov    %rsp,0x1c0(%r15)
  0x00007fab74125cc4: cmpb   $0x0,0x1a84ed09(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab74125ccb: je     0x00007fab74125d07
  0x00007fab74125cd1: push   %rsi
  0x00007fab74125cd2: push   %rdx
  0x00007fab74125cd3: push   %rcx
  0x00007fab74125cd4: movabs $0x7fab61922990,%rsi  ;   {metadata({method} {0x00007fab61922990} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00007fab74125cde: mov    %r15,%rdi
  0x00007fab74125ce1: test   $0xf,%esp
  0x00007fab74125ce7: je     0x00007fab74125cff
  0x00007fab74125ced: sub    $0x8,%rsp
  0x00007fab74125cf1: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab74125cf6: add    $0x8,%rsp
  0x00007fab74125cfa: jmpq   0x00007fab74125d04
  0x00007fab74125cff: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab74125d04: pop    %rcx
  0x00007fab74125d05: pop    %rdx
  0x00007fab74125d06: pop    %rsi
  0x00007fab74125d07: lea    0x1e0(%r15),%rdi
  0x00007fab74125d0e: movl   $0x4,0x258(%r15)
  0x00007fab74125d19: callq  0x00007fab8e439450  ;   {runtime_call}
  0x00007fab74125d1e: vzeroupper 
  0x00007fab74125d21: movl   $0x5,0x258(%r15)
  0x00007fab74125d2c: mov    %r15d,%ecx
  0x00007fab74125d2f: shr    $0x4,%ecx
  0x00007fab74125d32: and    $0xffc,%ecx
  0x00007fab74125d38: movabs $0x7fab8f7e1000,%r10  ;   {external_word}
  0x00007fab74125d42: mov    %ecx,(%r10,%rcx,1)
  0x00007fab74125d46: cmpl   $0x0,0x1a859c6c(%rip)        # 0x00007fab8e97f9bc
                                                ;   {external_word}
  0x00007fab74125d50: jne    0x00007fab74125d64
  0x00007fab74125d56: cmpl   $0x0,0x30(%r15)
  0x00007fab74125d5e: je     0x00007fab74125d85
  0x00007fab74125d64: mov    %rax,-0x8(%rbp)
  0x00007fab74125d68: mov    %r15,%rdi
  0x00007fab74125d6b: mov    %rsp,%r12
  0x00007fab74125d6e: sub    $0x0,%rsp
  0x00007fab74125d72: and    $0xfffffffffffffff0,%rsp
  0x00007fab74125d76: callq  0x00007fab8e40fc20  ;   {runtime_call}
  0x00007fab74125d7b: mov    %r12,%rsp
  0x00007fab74125d7e: xor    %r12,%r12
  0x00007fab74125d81: mov    -0x8(%rbp),%rax
  0x00007fab74125d85: movl   $0x8,0x258(%r15)
  0x00007fab74125d90: cmpl   $0x1,0x2b0(%r15)
  0x00007fab74125d9b: je     0x00007fab74125e37
  0x00007fab74125da1: cmpb   $0x0,0x1a84ec2c(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab74125da8: je     0x00007fab74125de6
  0x00007fab74125dae: mov    %rax,-0x8(%rbp)
  0x00007fab74125db2: movabs $0x7fab61922990,%rsi  ;   {metadata({method} {0x00007fab61922990} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00007fab74125dbc: mov    %r15,%rdi
  0x00007fab74125dbf: test   $0xf,%esp
  0x00007fab74125dc5: je     0x00007fab74125ddd
  0x00007fab74125dcb: sub    $0x8,%rsp
  0x00007fab74125dcf: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab74125dd4: add    $0x8,%rsp
  0x00007fab74125dd8: jmpq   0x00007fab74125de2
  0x00007fab74125ddd: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab74125de2: mov    -0x8(%rbp),%rax
  0x00007fab74125de6: movabs $0x0,%r10
  0x00007fab74125df0: mov    %r10,0x1c0(%r15)
  0x00007fab74125df7: movabs $0x0,%r10
  0x00007fab74125e01: mov    %r10,0x1c8(%r15)
  0x00007fab74125e08: test   %rax,%rax
  0x00007fab74125e0b: je     0x00007fab74125e14
  0x00007fab74125e11: mov    (%rax),%rax
  0x00007fab74125e14: mov    0x38(%r15),%rcx
  0x00007fab74125e18: movl   $0x0,0x100(%rcx)
  0x00007fab74125e22: leaveq 
  0x00007fab74125e23: cmpq   $0x0,0x8(%r15)
  0x00007fab74125e2b: jne    0x00007fab74125e32
  0x00007fab74125e31: retq   
  0x00007fab74125e32: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00007fab74125e37: mov    %rax,-0x8(%rbp)
  0x00007fab74125e3b: mov    %rsp,%r12
  0x00007fab74125e3e: sub    $0x0,%rsp
  0x00007fab74125e42: and    $0xfffffffffffffff0,%rsp
  0x00007fab74125e46: callq  0x00007fab8e372120  ;   {runtime_call}
  0x00007fab74125e4b: mov    %r12,%rsp
  0x00007fab74125e4e: xor    %r12,%r12
  0x00007fab74125e51: mov    -0x8(%rbp),%rax
  0x00007fab74125e55: jmpq   0x00007fab74125da1
  0x00007fab74125e5a: hlt    
  0x00007fab74125e5b: hlt    
  0x00007fab74125e5c: hlt    
  0x00007fab74125e5d: hlt    
  0x00007fab74125e5e: hlt    
  0x00007fab74125e5f: hlt    
<nmethod compile_id='56' compile_kind='c2n' level='0' entry='0x00007fab74125c60' size='912' address='0x00007fab74125ad0' relocation_offset='312' consts_offset='912' insts_offset='400' method='sun/misc/Unsafe getObjectVolatile (Ljava/lang/Object;J)Ljava/lang/Object;' bytes='0' count='384' iicount='384' stamp='0.228'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.tabAt  [0x00007fab74126000, 0x00007fab74126390]  912 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab61a72f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rsi:rsi   = &apos;[Ljava/util/concurrent/ConcurrentHashMap$Node;&apos;
  # parm1:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x00007fab74126000: mov    %eax,-0x14000(%rsp)
  0x00007fab74126007: push   %rbp
  0x00007fab74126008: sub    $0x40,%rsp
  0x00007fab7412600c: movabs $0x7fab61b827e0,%rcx  ;   {metadata(method data for {method} {0x00007fab61a72f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74126016: mov    0xfc(%rcx),%eax
  0x00007fab7412601c: add    $0x8,%eax
  0x00007fab7412601f: mov    %eax,0xfc(%rcx)
  0x00007fab74126025: movabs $0x7fab61a72f90,%rcx  ;   {metadata({method} {0x00007fab61a72f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7412602f: and    $0x1ff8,%eax
  0x00007fab74126035: cmp    $0x0,%eax
  0x00007fab74126038: je     0x00007fab741262a5  ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0 (line 755)

  0x00007fab7412603e: movslq %edx,%rdx
  0x00007fab74126041: mov    $0x2,%ecx
  0x00007fab74126046: shl    %cl,%rdx
  0x00007fab74126049: movabs $0x10,%r10
  0x00007fab74126053: add    %r10,%rdx
  0x00007fab74126056: mov    (%rsi,%rdx,1),%eax
  0x00007fab74126059: shl    $0x3,%rax
  0x00007fab7412605d: cmp    $0x0,%rax
  0x00007fab74126061: jne    0x00007fab7412607c
  0x00007fab74126063: movabs $0x7fab61b827e0,%rdi  ;   {metadata(method data for {method} {0x00007fab61a72f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7412606d: orl    $0x100,0x1c0(%rdi)
  0x00007fab74126077: jmpq   0x00007fab74126299
  0x00007fab7412607c: movabs $0x7c0033a30,%rbx  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fab74126086: mov    0x8(%rax),%edi
  0x00007fab74126089: shl    $0x3,%rdi
  0x00007fab7412608d: cmp    0x30(%rdi),%rbx
  0x00007fab74126091: jne    0x00007fab7412627d
  0x00007fab74126097: movabs $0x7fab61b827e0,%rdi  ;   {metadata(method data for {method} {0x00007fab61a72f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741260a1: mov    0x8(%rax),%ebx
  0x00007fab741260a4: shl    $0x3,%rbx
  0x00007fab741260a8: cmp    0x1d8(%rdi),%rbx
  0x00007fab741260af: jne    0x00007fab741260be
  0x00007fab741260b1: addq   $0x1,0x1e0(%rdi)
  0x00007fab741260b9: jmpq   0x00007fab74126299
  0x00007fab741260be: cmp    0x1e8(%rdi),%rbx
  0x00007fab741260c5: jne    0x00007fab741260d4
  0x00007fab741260c7: addq   $0x1,0x1f0(%rdi)
  0x00007fab741260cf: jmpq   0x00007fab74126299
  0x00007fab741260d4: cmp    0x1f8(%rdi),%rbx
  0x00007fab741260db: jne    0x00007fab741260ea
  0x00007fab741260dd: addq   $0x1,0x200(%rdi)
  0x00007fab741260e5: jmpq   0x00007fab74126299
  0x00007fab741260ea: cmp    0x208(%rdi),%rbx
  0x00007fab741260f1: jne    0x00007fab74126100
  0x00007fab741260f3: addq   $0x1,0x210(%rdi)
  0x00007fab741260fb: jmpq   0x00007fab74126299
  0x00007fab74126100: cmp    0x218(%rdi),%rbx
  0x00007fab74126107: jne    0x00007fab74126116
  0x00007fab74126109: addq   $0x1,0x220(%rdi)
  0x00007fab74126111: jmpq   0x00007fab74126299
  0x00007fab74126116: cmp    0x228(%rdi),%rbx
  0x00007fab7412611d: jne    0x00007fab7412612c
  0x00007fab7412611f: addq   $0x1,0x230(%rdi)
  0x00007fab74126127: jmpq   0x00007fab74126299
  0x00007fab7412612c: cmp    0x238(%rdi),%rbx
  0x00007fab74126133: jne    0x00007fab74126142
  0x00007fab74126135: addq   $0x1,0x240(%rdi)
  0x00007fab7412613d: jmpq   0x00007fab74126299
  0x00007fab74126142: cmp    0x248(%rdi),%rbx
  0x00007fab74126149: jne    0x00007fab74126158
  0x00007fab7412614b: addq   $0x1,0x250(%rdi)
  0x00007fab74126153: jmpq   0x00007fab74126299
  0x00007fab74126158: cmpq   $0x0,0x1d8(%rdi)
  0x00007fab74126163: jne    0x00007fab7412617c
  0x00007fab74126165: mov    %rbx,0x1d8(%rdi)
  0x00007fab7412616c: movq   $0x1,0x1e0(%rdi)
  0x00007fab74126177: jmpq   0x00007fab74126299
  0x00007fab7412617c: cmpq   $0x0,0x1e8(%rdi)
  0x00007fab74126187: jne    0x00007fab741261a0
  0x00007fab74126189: mov    %rbx,0x1e8(%rdi)
  0x00007fab74126190: movq   $0x1,0x1f0(%rdi)
  0x00007fab7412619b: jmpq   0x00007fab74126299
  0x00007fab741261a0: cmpq   $0x0,0x1f8(%rdi)
  0x00007fab741261ab: jne    0x00007fab741261c4
  0x00007fab741261ad: mov    %rbx,0x1f8(%rdi)
  0x00007fab741261b4: movq   $0x1,0x200(%rdi)
  0x00007fab741261bf: jmpq   0x00007fab74126299
  0x00007fab741261c4: cmpq   $0x0,0x208(%rdi)
  0x00007fab741261cf: jne    0x00007fab741261e8
  0x00007fab741261d1: mov    %rbx,0x208(%rdi)
  0x00007fab741261d8: movq   $0x1,0x210(%rdi)
  0x00007fab741261e3: jmpq   0x00007fab74126299
  0x00007fab741261e8: cmpq   $0x0,0x218(%rdi)
  0x00007fab741261f3: jne    0x00007fab7412620c
  0x00007fab741261f5: mov    %rbx,0x218(%rdi)
  0x00007fab741261fc: movq   $0x1,0x220(%rdi)
  0x00007fab74126207: jmpq   0x00007fab74126299
  0x00007fab7412620c: cmpq   $0x0,0x228(%rdi)
  0x00007fab74126217: jne    0x00007fab74126230
  0x00007fab74126219: mov    %rbx,0x228(%rdi)
  0x00007fab74126220: movq   $0x1,0x230(%rdi)
  0x00007fab7412622b: jmpq   0x00007fab74126299
  0x00007fab74126230: cmpq   $0x0,0x238(%rdi)
  0x00007fab7412623b: jne    0x00007fab74126254
  0x00007fab7412623d: mov    %rbx,0x238(%rdi)
  0x00007fab74126244: movq   $0x1,0x240(%rdi)
  0x00007fab7412624f: jmpq   0x00007fab74126299
  0x00007fab74126254: cmpq   $0x0,0x248(%rdi)
  0x00007fab7412625f: jne    0x00007fab74126278
  0x00007fab74126261: mov    %rbx,0x248(%rdi)
  0x00007fab74126268: movq   $0x1,0x250(%rdi)
  0x00007fab74126273: jmpq   0x00007fab74126299
  0x00007fab74126278: jmpq   0x00007fab74126299
  0x00007fab7412627d: movabs $0x7fab61b827e0,%rdi  ;   {metadata(method data for {method} {0x00007fab61a72f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74126287: subq   $0x1,0x1c8(%rdi)
  0x00007fab7412628f: jmpq   0x00007fab741262bc
  0x00007fab74126294: jmpq   0x00007fab74126299  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)

  0x00007fab74126299: add    $0x40,%rsp
  0x00007fab7412629d: pop    %rbp
  0x00007fab7412629e: test   %eax,0x1b6bbe5c(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741262a4: retq   
  0x00007fab741262a5: mov    %rcx,0x8(%rsp)
  0x00007fab741262aa: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741262b2: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=695}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 755)
                                                ;   {runtime_call}
  0x00007fab741262b7: jmpq   0x00007fab7412603e
  0x00007fab741262bc: mov    %rax,(%rsp)
  0x00007fab741262c0: callq  0x00007fab740fe2c0  ; OopMap{off=709}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ;   {runtime_call}
  0x00007fab741262c5: nop
  0x00007fab741262c6: nop
  0x00007fab741262c7: mov    0x2c0(%r15),%rax
  0x00007fab741262ce: movabs $0x0,%r10
  0x00007fab741262d8: mov    %r10,0x2c0(%r15)
  0x00007fab741262df: movabs $0x0,%r10
  0x00007fab741262e9: mov    %r10,0x2c8(%r15)
  0x00007fab741262f0: add    $0x40,%rsp
  0x00007fab741262f4: pop    %rbp
  0x00007fab741262f5: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab741262fa: hlt    
  0x00007fab741262fb: hlt    
  0x00007fab741262fc: hlt    
  0x00007fab741262fd: hlt    
  0x00007fab741262fe: hlt    
  0x00007fab741262ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74126300: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74126305: mov    %rsp,-0x28(%rsp)
  0x00007fab7412630a: sub    $0x80,%rsp
  0x00007fab74126311: mov    %rax,0x78(%rsp)
  0x00007fab74126316: mov    %rcx,0x70(%rsp)
  0x00007fab7412631b: mov    %rdx,0x68(%rsp)
  0x00007fab74126320: mov    %rbx,0x60(%rsp)
  0x00007fab74126325: mov    %rbp,0x50(%rsp)
  0x00007fab7412632a: mov    %rsi,0x48(%rsp)
  0x00007fab7412632f: mov    %rdi,0x40(%rsp)
  0x00007fab74126334: mov    %r8,0x38(%rsp)
  0x00007fab74126339: mov    %r9,0x30(%rsp)
  0x00007fab7412633e: mov    %r10,0x28(%rsp)
  0x00007fab74126343: mov    %r11,0x20(%rsp)
  0x00007fab74126348: mov    %r12,0x18(%rsp)
  0x00007fab7412634d: mov    %r13,0x10(%rsp)
  0x00007fab74126352: mov    %r14,0x8(%rsp)
  0x00007fab74126357: mov    %r15,(%rsp)
  0x00007fab7412635b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74126365: movabs $0x7fab74126305,%rsi  ;   {internal_word}
  0x00007fab7412636f: mov    %rsp,%rdx
  0x00007fab74126372: and    $0xfffffffffffffff0,%rsp
  0x00007fab74126376: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7412637b: hlt    
[Deopt Handler Code]
  0x00007fab7412637c: movabs $0x7fab7412637c,%r10  ;   {section_word}
  0x00007fab74126386: push   %r10
  0x00007fab74126388: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7412638d: hlt    
  0x00007fab7412638e: hlt    
  0x00007fab7412638f: hlt    
<nmethod compile_id='55' compiler='C1' level='3' entry='0x00007fab74126000' size='1432' address='0x00007fab74125e90' relocation_offset='312' insts_offset='368' stub_offset='1136' scopes_data_offset='1288' scopes_pcs_offset='1328' dependencies_offset='1424' metadata_offset='1280' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='539' iicount='539' stamp='0.229'/>
<writer thread='140373948942080'/>
<task_queued compile_id='57' method='java/net/URL getFile ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.229' comment='tiered' hot_count='128'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/net/URL.getFile  [0x00007fab741265c0, 0x00007fab741266d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61930d58} &apos;getFile&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab741265c0: mov    0x8(%rsi),%r10d
  0x00007fab741265c4: shl    $0x3,%r10
  0x00007fab741265c8: cmp    %rax,%r10
  0x00007fab741265cb: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab741265d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab741265dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab741265e0: mov    %eax,-0x14000(%rsp)
  0x00007fab741265e7: push   %rbp
  0x00007fab741265e8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getFile@0 (line 826)

  0x00007fab741265ec: mov    0x1c(%rsi),%eax
  0x00007fab741265ef: shl    $0x3,%rax        
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.meta.JavaType from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
  ;*getfield file {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getFile@1 (line 826)

  0x00007fab741265f3: add    $0x30,%rsp
  0x00007fab741265f7: pop    %rbp
  0x00007fab741265f8: test   %eax,0x1b6bbb02(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741265fe: retq   
  0x00007fab741265ff: nop
  0x00007fab74126600: nop
  0x00007fab74126601: mov    0x2c0(%r15),%rax
  0x00007fab74126608: movabs $0x0,%r10
  0x00007fab74126612: mov    %r10,0x2c0(%r15)
  0x00007fab74126619: movabs $0x0,%r10
  0x00007fab74126623: mov    %r10,0x2c8(%r15)
  0x00007fab7412662a: add    $0x30,%rsp
  0x00007fab7412662e: pop    %rbp
  0x00007fab7412662f: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74126634: hlt    
  0x00007fab74126635: hlt    
  0x00007fab74126636: hlt    
  0x00007fab74126637: hlt    
  0x00007fab74126638: hlt    
  0x00007fab74126639: hlt    
  0x00007fab7412663a: hlt    
  0x00007fab7412663b: hlt    
  0x00007fab7412663c: hlt    
  0x00007fab7412663d: hlt    
  0x00007fab7412663e: hlt    
  0x00007fab7412663f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74126640: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74126645: mov    %rsp,-0x28(%rsp)
  0x00007fab7412664a: sub    $0x80,%rsp
  0x00007fab74126651: mov    %rax,0x78(%rsp)
  0x00007fab74126656: mov    %rcx,0x70(%rsp)
  0x00007fab7412665b: mov    %rdx,0x68(%rsp)
  0x00007fab74126660: mov    %rbx,0x60(%rsp)
  0x00007fab74126665: mov    %rbp,0x50(%rsp)
  0x00007fab7412666a: mov    %rsi,0x48(%rsp)
  0x00007fab7412666f: mov    %rdi,0x40(%rsp)
  0x00007fab74126674: mov    %r8,0x38(%rsp)
  0x00007fab74126679: mov    %r9,0x30(%rsp)
  0x00007fab7412667e: mov    %r10,0x28(%rsp)
  0x00007fab74126683: mov    %r11,0x20(%rsp)
  0x00007fab74126688: mov    %r12,0x18(%rsp)
  0x00007fab7412668d: mov    %r13,0x10(%rsp)
  0x00007fab74126692: mov    %r14,0x8(%rsp)
  0x00007fab74126697: mov    %r15,(%rsp)
  0x00007fab7412669b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741266a5: movabs $0x7fab74126645,%rsi  ;   {internal_word}
  0x00007fab741266af: mov    %rsp,%rdx
  0x00007fab741266b2: and    $0xfffffffffffffff0,%rsp
  0x00007fab741266b6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741266bb: hlt    
[Deopt Handler Code]
  0x00007fab741266bc: movabs $0x7fab741266bc,%r10  ;   {section_word}
  0x00007fab741266c6: push   %r10
  0x00007fab741266c8: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab741266cd: hlt    
  0x00007fab741266ce: hlt    
  0x00007fab741266cf: hlt    
<nmethod compile_id='57' compiler='C1' level='1' entry='0x00007fab741265c0' size='736' address='0x00007fab74126450' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/net/URL getFile ()Ljava/lang/String;' bytes='5' count='132' iicount='132' stamp='0.230'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.meta.ResolvedJavaType from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotResolvedObjectType from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='58' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='420' iicount='420' level='3' stamp='0.230' comment='tiered' hot_count='420'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/StringBuilder.append  [0x00007fab741268c0, 0x00007fab74126a48]  392 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab6191a360} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/StringBuilder&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab741268c0: mov    0x8(%rsi),%r10d
  0x00007fab741268c4: shl    $0x3,%r10
  0x00007fab741268c8: cmp    %rax,%r10
  0x00007fab741268cb: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab741268d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab741268dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab741268e0: mov    %eax,-0x14000(%rsp)
  0x00007fab741268e7: push   %rbp
  0x00007fab741268e8: sub    $0x30,%rsp
  0x00007fab741268ec: movabs $0x7fab61b7b120,%rdi  ;   {metadata(method data for {method} {0x00007fab6191a360} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab741268f6: mov    0xfc(%rdi),%ebx
  0x00007fab741268fc: add    $0x8,%ebx
  0x00007fab741268ff: mov    %ebx,0xfc(%rdi)
  0x00007fab74126905: movabs $0x7fab6191a360,%rdi  ;   {metadata({method} {0x00007fab6191a360} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab7412690f: and    $0x1ff8,%ebx
  0x00007fab74126915: cmp    $0x0,%ebx
  0x00007fab74126918: je     0x00007fab74126955  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@0 (line 136)

  0x00007fab7412691e: mov    %rsi,%rdi
  0x00007fab74126921: movabs $0x7fab61b7b120,%rbx  ;   {metadata(method data for {method} {0x00007fab6191a360} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab7412692b: addq   $0x1,0x130(%rbx)
  0x00007fab74126933: mov    %rsi,%rdi
  0x00007fab74126936: mov    %rdi,%rsi          ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x00007fab74126939: mov    %rdi,0x20(%rsp)
  0x00007fab7412693e: nop
  0x00007fab7412693f: callq  0x00007fab74047d60  ; OopMap{[32]=Oop off=132}
                                                ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {optimized virtual_call}
  0x00007fab74126944: mov    0x20(%rsp),%rax
  0x00007fab74126949: add    $0x30,%rsp
  0x00007fab7412694d: pop    %rbp
  0x00007fab7412694e: test   %eax,0x1b6bb7ac(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74126954: retq   
  0x00007fab74126955: mov    %rdi,0x8(%rsp)
  0x00007fab7412695a: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74126962: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop off=167}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ;   {runtime_call}
  0x00007fab74126967: jmp    0x00007fab7412691e
  0x00007fab74126969: nop
  0x00007fab7412696a: nop
  0x00007fab7412696b: mov    0x2c0(%r15),%rax
  0x00007fab74126972: movabs $0x0,%r10
  0x00007fab7412697c: mov    %r10,0x2c0(%r15)
  0x00007fab74126983: movabs $0x0,%r10
  0x00007fab7412698d: mov    %r10,0x2c8(%r15)
  0x00007fab74126994: add    $0x30,%rsp
  0x00007fab74126998: pop    %rbp
  0x00007fab74126999: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7412699e: hlt    
  0x00007fab7412699f: hlt    
[Stub Code]
  0x00007fab741269a0: nop                       ;   {no_reloc}
  0x00007fab741269a1: nop
  0x00007fab741269a2: nop
  0x00007fab741269a3: nop
  0x00007fab741269a4: nop
  0x00007fab741269a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741269af: jmpq   0x00007fab741269af  ;   {runtime_call}
[Exception Handler]
  0x00007fab741269b4: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab741269b9: mov    %rsp,-0x28(%rsp)
  0x00007fab741269be: sub    $0x80,%rsp
  0x00007fab741269c5: mov    %rax,0x78(%rsp)
  0x00007fab741269ca: mov    %rcx,0x70(%rsp)
  0x00007fab741269cf: mov    %rdx,0x68(%rsp)
  0x00007fab741269d4: mov    %rbx,0x60(%rsp)
  0x00007fab741269d9: mov    %rbp,0x50(%rsp)
  0x00007fab741269de: mov    %rsi,0x48(%rsp)
  0x00007fab741269e3: mov    %rdi,0x40(%rsp)
  0x00007fab741269e8: mov    %r8,0x38(%rsp)
  0x00007fab741269ed: mov    %r9,0x30(%rsp)
  0x00007fab741269f2: mov    %r10,0x28(%rsp)
  0x00007fab741269f7: mov    %r11,0x20(%rsp)
  0x00007fab741269fc: mov    %r12,0x18(%rsp)
  0x00007fab74126a01: mov    %r13,0x10(%rsp)
  0x00007fab74126a06: mov    %r14,0x8(%rsp)
  0x00007fab74126a0b: mov    %r15,(%rsp)
  0x00007fab74126a0f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74126a19: movabs $0x7fab741269b9,%rsi  ;   {internal_word}
  0x00007fab74126a23: mov    %rsp,%rdx
  0x00007fab74126a26: and    $0xfffffffffffffff0,%rsp
  0x00007fab74126a2a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74126a2f: hlt    
[Deopt Handler Code]
  0x00007fab74126a30: movabs $0x7fab74126a30,%r10  ;   {section_word}
  0x00007fab74126a3a: push   %r10
  0x00007fab74126a3c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74126a41: hlt    
  0x00007fab74126a42: hlt    
  0x00007fab74126a43: hlt    
  0x00007fab74126a44: hlt    
  0x00007fab74126a45: hlt    
  0x00007fab74126a46: hlt    
  0x00007fab74126a47: hlt    
<nmethod compile_id='58' compiler='C1' level='3' entry='0x00007fab741268c0' size='912' address='0x00007fab74126750' relocation_offset='312' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='808' dependencies_offset='904' metadata_offset='760' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='422' iicount='422' stamp='0.231'/>
<writer thread='140373948942080'/>
<task_queued compile_id='59' method='java/lang/String toCharArray ()[C' bytes='25' count='256' iicount='256' level='3' stamp='0.231' comment='tiered' hot_count='256'/>
<task_queued compile_id='60' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='256' iicount='256' level='3' stamp='0.231' comment='tiered' hot_count='256'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/String.toCharArray  [0x00007fab74126ca0, 0x00007fab74126f28]  648 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61899640} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fab74126ca0: mov    0x8(%rsi),%r10d
  0x00007fab74126ca4: shl    $0x3,%r10
  0x00007fab74126ca8: cmp    %rax,%r10
  0x00007fab74126cab: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74126cb1: data16 data16 nopw 0x0(%rax,%rax,1)
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.HotSpotJavaType from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>
  0x00007fab74126cbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74126cc0: mov    %eax,-0x14000(%rsp)
  0x00007fab74126cc7: push   %rbp
  0x00007fab74126cc8: sub    $0x40,%rsp
  0x00007fab74126ccc: mov    %rsi,%r8
  0x00007fab74126ccf: movabs $0x7fab61b82a88,%rbx  ;   {metadata(method data for {method} {0x00007fab61899640} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74126cd9: mov    0xfc(%rbx),%edx
  0x00007fab74126cdf: add    $0x8,%edx
  0x00007fab74126ce2: mov    %edx,0xfc(%rbx)
  0x00007fab74126ce8: movabs $0x7fab61899640,%rbx  ;   {metadata({method} {0x00007fab61899640} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74126cf2: and    $0x1ff8,%edx
  0x00007fab74126cf8: cmp    $0x0,%edx
  0x00007fab74126cfb: je     0x00007fab74126e06  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@0 (line 2899)

  0x00007fab74126d01: mov    0xc(%r8),%r9d
  0x00007fab74126d05: shl    $0x3,%r9           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@1 (line 2899)

  0x00007fab74126d09: mov    0xc(%r9),%r11d     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@4 (line 2899)
                                                ; implicit exception: dispatches to 0x00007fab74126e1d
  0x00007fab74126d0d: mov    %r11,%rbx
  0x00007fab74126d10: movabs $0x7c00001f8,%rdx  ;   {metadata({type array char})}
  0x00007fab74126d1a: movslq %ebx,%rbx
  0x00007fab74126d1d: mov    %rbx,%rdi
  0x00007fab74126d20: cmp    $0xffffff,%rbx
  0x00007fab74126d27: ja     0x00007fab74126e22
  0x00007fab74126d2d: movabs $0x17,%rsi
  0x00007fab74126d37: lea    (%rsi,%rbx,2),%rsi
  0x00007fab74126d3b: and    $0xfffffffffffffff8,%rsi
  0x00007fab74126d3f: mov    0x60(%r15),%rax
  0x00007fab74126d43: lea    (%rax,%rsi,1),%rsi
  0x00007fab74126d47: cmp    0x70(%r15),%rsi
  0x00007fab74126d4b: ja     0x00007fab74126e22
  0x00007fab74126d51: mov    %rsi,0x60(%r15)
  0x00007fab74126d55: sub    %rax,%rsi
  0x00007fab74126d58: movq   $0x1,(%rax)
  0x00007fab74126d5f: mov    %rdx,%rcx
  0x00007fab74126d62: shr    $0x3,%rcx
  0x00007fab74126d66: mov    %ecx,0x8(%rax)
  0x00007fab74126d69: mov    %ebx,0xc(%rax)
  0x00007fab74126d6c: sub    $0x10,%rsi
  0x00007fab74126d70: je     0x00007fab74126d87
  0x00007fab74126d76: xor    %rbx,%rbx
  0x00007fab74126d79: shr    $0x3,%rsi
  0x00007fab74126d7d: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fab74126d82: dec    %rsi
  0x00007fab74126d85: jne    0x00007fab74126d7d  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@5 (line 2899)

  0x00007fab74126d87: movabs $0x7fab61b82a88,%rsi  ;   {metadata(method data for {method} {0x00007fab61899640} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74126d91: addq   $0x1,0x130(%rsi)
  0x00007fab74126d99: mov    %r9,%rsi
  0x00007fab74126d9c: mov    $0x0,%edx
  0x00007fab74126da1: mov    %rax,%rcx
  0x00007fab74126da4: mov    $0x0,%r8d
  0x00007fab74126daa: mov    %r11,%r9
  0x00007fab74126dad: mov    %rax,0x30(%rsp)
  0x00007fab74126db2: lea    (%r8,%r9,1),%rdi
  0x00007fab74126db6: cmp    0xc(%rcx),%edi
  0x00007fab74126db9: ja     0x00007fab74126e2c
  0x00007fab74126dbf: movslq %edx,%rdx
  0x00007fab74126dc2: movslq %r8d,%r8
  0x00007fab74126dc5: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007fab74126dca: lea    0x10(%rcx,%r8,2),%rsi
  0x00007fab74126dcf: mov    %r9,%rdx
  0x00007fab74126dd2: test   $0xf,%esp
  0x00007fab74126dd8: je     0x00007fab74126df0
  0x00007fab74126dde: sub    $0x8,%rsp
  0x00007fab74126de2: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007fab74126de7: add    $0x8,%rsp
  0x00007fab74126deb: jmpq   0x00007fab74126df5
  0x00007fab74126df0: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@20 (line 2900)
                                                ;   {runtime_call}
  0x00007fab74126df5: mov    0x30(%rsp),%rax
  0x00007fab74126dfa: add    $0x40,%rsp
  0x00007fab74126dfe: pop    %rbp
  0x00007fab74126dff: test   %eax,0x1b6bb2fb(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74126e05: retq   
  0x00007fab74126e06: mov    %rbx,0x8(%rsp)
  0x00007fab74126e0b: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74126e13: callq  0x00007fab741005e0  ; OopMap{r8=Oop off=376}
                                                ;*synchronization entry
                                                ; - java.lang.String::toCharArray@-1 (line 2899)
                                                ;   {runtime_call}
  0x00007fab74126e18: jmpq   0x00007fab74126d01
  0x00007fab74126e1d: callq  0x00007fab740fc000  ; OopMap{r8=Oop r9=Oop off=386}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@4 (line 2899)
                                                ;   {runtime_call}
  0x00007fab74126e22: callq  0x00007fab740fd020  ; OopMap{r8=Oop r9=Oop off=391}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@5 (line 2899)
                                                ;   {runtime_call}
  0x00007fab74126e27: jmpq   0x00007fab74126d87
  0x00007fab74126e2c: nop
  0x00007fab74126e2d: nop
  0x00007fab74126e2e: nop
  0x00007fab74126e2f: callq  0x00007fab74048160  ; OopMap{[48]=Oop off=404}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@20 (line 2900)
                                                ;   {static_call}
  0x00007fab74126e34: jmp    0x00007fab74126df5
  0x00007fab74126e36: nop
  0x00007fab74126e37: nop
  0x00007fab74126e38: mov    0x2c0(%r15),%rax
  0x00007fab74126e3f: movabs $0x0,%r10
  0x00007fab74126e49: mov    %r10,0x2c0(%r15)
  0x00007fab74126e50: movabs $0x0,%r10
  0x00007fab74126e5a: mov    %r10,0x2c8(%r15)
  0x00007fab74126e61: add    $0x40,%rsp
  0x00007fab74126e65: pop    %rbp
  0x00007fab74126e66: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74126e6b: hlt    
  0x00007fab74126e6c: hlt    
  0x00007fab74126e6d: hlt    
  0x00007fab74126e6e: hlt    
  0x00007fab74126e6f: hlt    
  0x00007fab74126e70: hlt    
  0x00007fab74126e71: hlt    
  0x00007fab74126e72: hlt    
  0x00007fab74126e73: hlt    
  0x00007fab74126e74: hlt    
  0x00007fab74126e75: hlt    
  0x00007fab74126e76: hlt    
  0x00007fab74126e77: hlt    
  0x00007fab74126e78: hlt    
  0x00007fab74126e79: hlt    
  0x00007fab74126e7a: hlt    
  0x00007fab74126e7b: hlt    
  0x00007fab74126e7c: hlt    
  0x00007fab74126e7d: hlt    
  0x00007fab74126e7e: hlt    
  0x00007fab74126e7f: hlt    
[Stub Code]
  0x00007fab74126e80: nop                       ;   {no_reloc}
  0x00007fab74126e81: nop
  0x00007fab74126e82: nop
  0x00007fab74126e83: nop
  0x00007fab74126e84: nop
  0x00007fab74126e85: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74126e8f: jmpq   0x00007fab74126e8f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74126e94: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74126e99: mov    %rsp,-0x28(%rsp)
  0x00007fab74126e9e: sub    $0x80,%rsp
  0x00007fab74126ea5: mov    %rax,0x78(%rsp)
  0x00007fab74126eaa: mov    %rcx,0x70(%rsp)
  0x00007fab74126eaf: mov    %rdx,0x68(%rsp)
  0x00007fab74126eb4: mov    %rbx,0x60(%rsp)
  0x00007fab74126eb9: mov    %rbp,0x50(%rsp)
  0x00007fab74126ebe: mov    %rsi,0x48(%rsp)
  0x00007fab74126ec3: mov    %rdi,0x40(%rsp)
  0x00007fab74126ec8: mov    %r8,0x38(%rsp)
  0x00007fab74126ecd: mov    %r9,0x30(%rsp)
  0x00007fab74126ed2: mov    %r10,0x28(%rsp)
  0x00007fab74126ed7: mov    %r11,0x20(%rsp)
  0x00007fab74126edc: mov    %r12,0x18(%rsp)
  0x00007fab74126ee1: mov    %r13,0x10(%rsp)
  0x00007fab74126ee6: mov    %r14,0x8(%rsp)
  0x00007fab74126eeb: mov    %r15,(%rsp)
  0x00007fab74126eef: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74126ef9: movabs $0x7fab74126e99,%rsi  ;   {internal_word}
  0x00007fab74126f03: mov    %rsp,%rdx
  0x00007fab74126f06: and    $0xfffffffffffffff0,%rsp
  0x00007fab74126f0a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74126f0f: hlt    
[Deopt Handler Code]
  0x00007fab74126f10: movabs $0x7fab74126f10,%r10  ;   {section_word}
  0x00007fab74126f1a: push   %r10
  0x00007fab74126f1c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74126f21: hlt    
  0x00007fab74126f22: hlt    
  0x00007fab74126f23: hlt    
  0x00007fab74126f24: hlt    
  0x00007fab74126f25: hlt    
  0x00007fab74126f26: hlt    
  0x00007fab74126f27: hlt    
<nmethod compile_id='59' compiler='C1' level='3' entry='0x00007fab74126ca0' size='1328' address='0x00007fab74126b10' relocation_offset='312' insts_offset='400' stub_offset='880' scopes_data_offset='1056' scopes_pcs_offset='1128' dependencies_offset='1304' nul_chk_table_offset='1312' metadata_offset='1048' method='java/lang/String toCharArray ()[C' bytes='25' count='263' iicount='263' stamp='0.232'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.HotSpotResolvedJavaType from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/String.substring  [0x00007fab74127220, 0x00007fab741276d8]  1208 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61897f08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x70]  (sp of caller)
  0x00007fab74127220: mov    0x8(%rsi),%r10d
  0x00007fab74127224: shl    $0x3,%r10
  0x00007fab74127228: cmp    %rax,%r10
  0x00007fab7412722b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74127231: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7412723c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74127240: mov    %eax,-0x14000(%rsp)
  0x00007fab74127247: push   %rbp
  0x00007fab74127248: sub    $0x60,%rsp
  0x00007fab7412724c: mov    %rsi,%rbx
  0x00007fab7412724f: mov    %rdx,%r8
  0x00007fab74127252: movabs $0x7fab61b82c08,%rdx
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>
                                                ;   {metadata(method data for {method} {0x00007fab61897f08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412725c: mov    0xfc(%rdx),%esi
  0x00007fab74127262: add    $0x8,%esi
  0x00007fab74127265: mov    %esi,0xfc(%rdx)
  0x00007fab7412726b: movabs $0x7fab61897f08,%rdx  ;   {metadata({method} {0x00007fab61897f08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74127275: and    $0x1ff8,%esi
  0x00007fab7412727b: cmp    $0x0,%esi
  0x00007fab7412727e: je     0x00007fab74127516  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@0 (line 1959)

  0x00007fab74127284: cmp    $0x0,%r8d
  0x00007fab74127288: movabs $0x7fab61b82c08,%rdx  ;   {metadata(method data for {method} {0x00007fab61897f08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74127292: movabs $0x130,%rsi
  0x00007fab7412729c: jge    0x00007fab741272ac
  0x00007fab741272a2: movabs $0x140,%rsi
  0x00007fab741272ac: mov    (%rdx,%rsi,1),%rdi
  0x00007fab741272b0: lea    0x1(%rdi),%rdi
  0x00007fab741272b4: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab741272b8: jl     0x00007fab741274d6  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@1 (line 1959)

  0x00007fab741272be: mov    0xc(%rbx),%r9d
  0x00007fab741272c2: shl    $0x3,%r9           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@15 (line 1962)

  0x00007fab741272c6: mov    0xc(%r9),%edx      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@18 (line 1962)
                                                ; implicit exception: dispatches to 0x00007fab7412752d
  0x00007fab741272ca: cmp    %edx,%ecx
  0x00007fab741272cc: movabs $0x7fab61b82c08,%rsi  ;   {metadata(method data for {method} {0x00007fab61897f08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741272d6: movabs $0x160,%rdi
  0x00007fab741272e0: jle    0x00007fab741272f0
  0x00007fab741272e6: movabs $0x170,%rdi
  0x00007fab741272f0: mov    (%rsi,%rdi,1),%rax
  0x00007fab741272f4: lea    0x1(%rax),%rax
  0x00007fab741272f8: mov    %rax,(%rsi,%rdi,1)
  0x00007fab741272fc: jg     0x00007fab74127496  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@19 (line 1962)

  0x00007fab74127302: mov    %rcx,%r11
  0x00007fab74127305: sub    %r8d,%r11d
  0x00007fab74127308: cmp    $0x0,%r11d
  0x00007fab7412730c: movabs $0x7fab61b82c08,%rsi  ;   {metadata(method data for {method} {0x00007fab61897f08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74127316: movabs $0x190,%rdi
  0x00007fab74127320: jge    0x00007fab74127330
  0x00007fab74127326: movabs $0x1a0,%rdi
  0x00007fab74127330: mov    (%rsi,%rdi,1),%rax
  0x00007fab74127334: lea    0x1(%rax),%rax
  0x00007fab74127338: mov    %rax,(%rsi,%rdi,1)
  0x00007fab7412733c: jl     0x00007fab74127454  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@36 (line 1966)

  0x00007fab74127342: cmp    $0x0,%r8d
  0x00007fab74127346: movabs $0x7fab61b82c08,%rsi  ;   {metadata(method data for {method} {0x00007fab61897f08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74127350: movabs $0x1c0,%rdi
  0x00007fab7412735a: jne    0x00007fab7412736a
  0x00007fab74127360: movabs $0x1d0,%rdi
  0x00007fab7412736a: mov    (%rsi,%rdi,1),%rax
  0x00007fab7412736e: lea    0x1(%rax),%rax
  0x00007fab74127372: mov    %rax,(%rsi,%rdi,1)
  0x00007fab74127376: jne    0x00007fab741273b4  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@49 (line 1969)

  0x00007fab7412737c: cmp    %edx,%ecx
  0x00007fab7412737e: movabs $0x7fab61b82c08,%rdx  ;   {metadata(method data for {method} {0x00007fab61897f08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74127388: movabs $0x1e0,%rsi
  0x00007fab74127392: jne    0x00007fab741273a2
  0x00007fab74127398: movabs $0x1f0,%rsi
  0x00007fab741273a2: mov    (%rdx,%rsi,1),%rdi
  0x00007fab741273a6: lea    0x1(%rdi),%rdi
  0x00007fab741273aa: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab741273ae: je     0x00007fab74127435  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@58 (line 1969)

  0x00007fab741273b4: movabs $0x7c0001610,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007fab741273be: mov    0x60(%r15),%rax
  0x00007fab741273c2: lea    0x18(%rax),%rdi
  0x00007fab741273c6: cmp    0x70(%r15),%rdi
  0x00007fab741273ca: ja     0x00007fab74127532
  0x00007fab741273d0: mov    %rdi,0x60(%r15)
  0x00007fab741273d4: mov    0xa8(%rdx),%rcx
  0x00007fab741273db: mov    %rcx,(%rax)
  0x00007fab741273de: mov    %rdx,%rcx
  0x00007fab741273e1: shr    $0x3,%rcx
  0x00007fab741273e5: mov    %ecx,0x8(%rax)
  0x00007fab741273e8: xor    %rcx,%rcx
  0x00007fab741273eb: mov    %ecx,0xc(%rax)
  0x00007fab741273ee: xor    %rcx,%rcx
  0x00007fab741273f1: mov    %rcx,0x10(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@65 (line 1969)

  0x00007fab741273f5: mov    %rax,%rdx
  0x00007fab741273f8: movabs $0x7fab61b82c08,%rcx  ;   {metadata(method data for {method} {0x00007fab61897f08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74127402: addq   $0x1,0x218(%rcx)
  0x00007fab7412740a: mov    %r9,%rdx
  0x00007fab7412740d: mov    %r8,%rcx
  0x00007fab74127410: mov    %r11,%r8
  0x00007fab74127413: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@75 (line 1969)

  0x00007fab74127416: mov    %rax,0x30(%rsp)
  0x00007fab7412741b: nop
  0x00007fab7412741c: nop
  0x00007fab7412741d: nop
  0x00007fab7412741e: nop
  0x00007fab7412741f: callq  0x00007fab74047d60  ; OopMap{[48]=Oop off=516}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@75 (line 1969)
                                                ;   {optimized virtual_call}
  0x00007fab74127424: mov    0x30(%rsp),%rax    ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@78 (line 1969)

  0x00007fab74127429: add    $0x60,%rsp
  0x00007fab7412742d: pop    %rbp
  0x00007fab7412742e: test   %eax,0x1b6baccc(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74127434: retq   
  0x00007fab74127435: movabs $0x7fab61b82c08,%rax  ;   {metadata(method data for {method} {0x00007fab61897f08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412743f: incl   0x200(%rax)
  0x00007fab74127445: mov    %rbx,%rax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@62 (line 1969)

  0x00007fab74127448: add    $0x60,%rsp
  0x00007fab7412744c: pop    %rbp
  0x00007fab7412744d: test   %eax,0x1b6bacad(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74127453: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@78 (line 1969)

  0x00007fab74127454: nopl   0x0(%rax)
  0x00007fab74127458: jmpq   0x00007fab7412754e  ;   {no_reloc}
  0x00007fab7412745d: add    %al,(%rax)
  0x00007fab7412745f: add    %al,(%rax)
  0x00007fab74127461: add    %ch,%cl
  0x00007fab74127463: icebp  
  0x00007fab74127464: add    %al,(%rax)
  0x00007fab74127466: add    %cl,-0x75(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@39 (line 1967)

  0x00007fab74127469: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00007fab61897f08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412746c: or     %ch,(%rax,%rdi,4)
  0x00007fab7412746f: (bad)  
  0x00007fab74127470: stos   %eax,%es:(%rdi)
  0x00007fab74127471: jg     0x00007fab74127473
  0x00007fab74127473: add    %cl,-0x7d(%rax)
  0x00007fab74127476: xchg   %dh,0x1000001(%rax)
  0x00007fab7412747c: mov    %r11,%rdx
  0x00007fab7412747f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@44 (line 1967)

  0x00007fab74127482: mov    %rax,0x38(%rsp)
  0x00007fab74127487: callq  0x00007fab74047d60  ; OopMap{[56]=Oop off=620}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@44 (line 1967)
                                                ;   {optimized virtual_call}
  0x00007fab7412748c: mov    0x38(%rsp),%rax
  0x00007fab74127491: jmpq   0x00007fab741275dc  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@47 (line 1967)

  0x00007fab74127496: xchg   %ax,%ax
  0x00007fab74127498: jmpq   0x00007fab74127574  ;   {no_reloc}
  0x00007fab7412749d: add    %al,(%rax)
  0x00007fab7412749f: add    %al,(%rax)
  0x00007fab741274a1: add    %ch,%cl
  0x00007fab741274a3: xlat   %ds:(%rbx)
  0x00007fab741274a4: add    %al,(%rax)
  0x00007fab741274a6: add    %cl,-0x75(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@22 (line 1963)

  0x00007fab741274a9: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00007fab61897f08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741274ac: or     %ch,(%rax,%rdi,4)
  0x00007fab741274af: (bad)  
  0x00007fab741274b0: stos   %eax,%es:(%rdi)
  0x00007fab741274b1: jg     0x00007fab741274b3
  0x00007fab741274b3: add    %cl,-0x7d(%rax)
  0x00007fab741274b6: xchg   %al,0x1000001(%rax)
  0x00007fab741274bc: mov    %rcx,%rdx
  0x00007fab741274bf: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@27 (line 1963)

  0x00007fab741274c2: mov    %rax,0x40(%rsp)
  0x00007fab741274c7: callq  0x00007fab74047d60  ; OopMap{[64]=Oop off=684}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@27 (line 1963)
                                                ;   {optimized virtual_call}
  0x00007fab741274cc: mov    0x40(%rsp),%rax
  0x00007fab741274d1: jmpq   0x00007fab741275dc  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@30 (line 1963)

  0x00007fab741274d6: xchg   %ax,%ax
  0x00007fab741274d8: jmpq   0x00007fab7412759a  ;   {no_reloc}
  0x00007fab741274dd: add    %al,(%rax)
  0x00007fab741274df: add    %al,(%rax)
  0x00007fab741274e1: add    %ch,%cl
  0x00007fab741274e3: mov    $0x48000000,%ebp   ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@4 (line 1960)

  0x00007fab741274e8: mov    %eax,%edx
  0x00007fab741274ea: movabs $0x7fab61b82c08,%rsi  ;   {metadata(method data for {method} {0x00007fab61897f08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741274f4: addq   $0x1,0x150(%rsi)
  0x00007fab741274fc: mov    %r8,%rdx
  0x00007fab741274ff: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@9 (line 1960)

  0x00007fab74127502: mov    %rax,0x48(%rsp)
  0x00007fab74127507: callq  0x00007fab74047d60  ; OopMap{[72]=Oop off=748}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@9 (line 1960)
                                                ;   {optimized virtual_call}
  0x00007fab7412750c: mov    0x48(%rsp),%rax
  0x00007fab74127511: jmpq   0x00007fab741275dc
  0x00007fab74127516: mov    %rdx,0x8(%rsp)
  0x00007fab7412751b: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74127523: callq  0x00007fab741005e0  ; OopMap{rbx=Oop off=776}
                                                ;*synchronization entry
                                                ; - java.lang.String::substring@-1 (line 1959)
                                                ;   {runtime_call}
  0x00007fab74127528: jmpq   0x00007fab74127284
  0x00007fab7412752d: callq  0x00007fab740fc000  ; OopMap{rbx=Oop r9=Oop off=786}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@18 (line 1962)
                                                ;   {runtime_call}
  0x00007fab74127532: mov    %rdx,%rdx
  0x00007fab74127535: callq  0x00007fab740fc760  ; OopMap{rbx=Oop r9=Oop off=794}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@65 (line 1969)
                                                ;   {runtime_call}
  0x00007fab7412753a: jmpq   0x00007fab741273f5
  0x00007fab7412753f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab74127549: mov    $0xa050f00,%eax
  0x00007fab7412754e: callq  0x00007fab740ff5e0  ; OopMap{off=819}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@39 (line 1967)
                                                ;   {runtime_call}
  0x00007fab74127553: jmpq   0x00007fab74127458
  0x00007fab74127558: mov    %rdx,%rdx
  0x00007fab7412755b: callq  0x00007fab740fc4a0  ; OopMap{off=832}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@39 (line 1967)
                                                ;   {runtime_call}
  0x00007fab74127560: jmpq   0x00007fab74127467
  0x00007fab74127565: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab7412756f: mov    $0xa050f00,%eax
  0x00007fab74127574: callq  0x00007fab740ff5e0  ; OopMap{off=857}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@22 (line 1963)
                                                ;   {runtime_call}
  0x00007fab74127579: jmpq   0x00007fab74127498
  0x00007fab7412757e: mov    %rdx,%rdx
  0x00007fab74127581: callq  0x00007fab740fc4a0  ; OopMap{off=870}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@22 (line 1963)
                                                ;   {runtime_call}
  0x00007fab74127586: jmpq   0x00007fab741274a7
  0x00007fab7412758b: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab74127595: mov    $0xa050f00,%eax
  0x00007fab7412759a: callq  0x00007fab740ff5e0  ; OopMap{off=895}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@4 (line 1960)
                                                ;   {runtime_call}
  0x00007fab7412759f: jmpq   0x00007fab741274d8
  0x00007fab741275a4: mov    %rdx,%rdx
  0x00007fab741275a7: callq  0x00007fab740fc4a0  ; OopMap{off=908}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@4 (line 1960)
                                                ;   {runtime_call}
  0x00007fab741275ac: jmpq   0x00007fab741274e7
  0x00007fab741275b1: nop
  0x00007fab741275b2: nop
  0x00007fab741275b3: mov    0x2c0(%r15),%rax
  0x00007fab741275ba: movabs $0x0,%r10
  0x00007fab741275c4: mov    %r10,0x2c0(%r15)
  0x00007fab741275cb: movabs $0x0,%r10
  0x00007fab741275d5: mov    %r10,0x2c8(%r15)
  0x00007fab741275dc: add    $0x60,%rsp
  0x00007fab741275e0: pop    %rbp
  0x00007fab741275e1: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab741275e6: hlt    
  0x00007fab741275e7: hlt    
  0x00007fab741275e8: hlt    
  0x00007fab741275e9: hlt    
  0x00007fab741275ea: hlt    
  0x00007fab741275eb: hlt    
  0x00007fab741275ec: hlt    
  0x00007fab741275ed: hlt    
  0x00007fab741275ee: hlt    
  0x00007fab741275ef: hlt    
  0x00007fab741275f0: hlt    
  0x00007fab741275f1: hlt    
  0x00007fab741275f2: hlt    
  0x00007fab741275f3: hlt    
  0x00007fab741275f4: hlt    
  0x00007fab741275f5: hlt    
  0x00007fab741275f6: hlt    
  0x00007fab741275f7: hlt    
  0x00007fab741275f8: hlt    
  0x00007fab741275f9: hlt    
  0x00007fab741275fa: hlt    
  0x00007fab741275fb: hlt    
  0x00007fab741275fc: hlt    
  0x00007fab741275fd: hlt    
  0x00007fab741275fe: hlt    
  0x00007fab741275ff: hlt    
[Stub Code]
  0x00007fab74127600: nop                       ;   {no_reloc}
  0x00007fab74127601: nop
  0x00007fab74127602: nop
  0x00007fab74127603: nop
  0x00007fab74127604: nop
  0x00007fab74127605: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7412760f: jmpq   0x00007fab7412760f  ;   {runtime_call}
  0x00007fab74127614: nop
  0x00007fab74127615: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7412761f: jmpq   0x00007fab7412761f  ;   {runtime_call}
  0x00007fab74127624: nop
  0x00007fab74127625: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7412762f: jmpq   0x00007fab7412762f  ;   {runtime_call}
  0x00007fab74127634: nop
  0x00007fab74127635: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7412763f: jmpq   0x00007fab7412763f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74127644: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74127649: mov    %rsp,-0x28(%rsp)
  0x00007fab7412764e: sub    $0x80,%rsp
  0x00007fab74127655: mov    %rax,0x78(%rsp)
  0x00007fab7412765a: mov    %rcx,0x70(%rsp)
  0x00007fab7412765f: mov    %rdx,0x68(%rsp)
  0x00007fab74127664: mov    %rbx,0x60(%rsp)
  0x00007fab74127669: mov    %rbp,0x50(%rsp)
  0x00007fab7412766e: mov    %rsi,0x48(%rsp)
  0x00007fab74127673: mov    %rdi,0x40(%rsp)
  0x00007fab74127678: mov    %r8,0x38(%rsp)
  0x00007fab7412767d: mov    %r9,0x30(%rsp)
  0x00007fab74127682: mov    %r10,0x28(%rsp)
  0x00007fab74127687: mov    %r11,0x20(%rsp)
  0x00007fab7412768c: mov    %r12,0x18(%rsp)
  0x00007fab74127691: mov    %r13,0x10(%rsp)
  0x00007fab74127696: mov    %r14,0x8(%rsp)
  0x00007fab7412769b: mov    %r15,(%rsp)
  0x00007fab7412769f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741276a9: movabs $0x7fab74127649,%rsi  ;   {internal_word}
  0x00007fab741276b3: mov    %rsp,%rdx
  0x00007fab741276b6: and    $0xfffffffffffffff0,%rsp
  0x00007fab741276ba: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741276bf: hlt    
[Deopt Handler Code]
  0x00007fab741276c0: movabs $0x7fab741276c0,%r10  ;   {section_word}
  0x00007fab741276ca: push   %r10
  0x00007fab741276cc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab741276d1: hlt    
  0x00007fab741276d2: hlt    
  0x00007fab741276d3: hlt    
  0x00007fab741276d4: hlt    
  0x00007fab741276d5: hlt    
  0x00007fab741276d6: hlt    
  0x00007fab741276d7: hlt    
<nmethod compile_id='60' compiler='C1' level='3' entry='0x00007fab74127220' size='2544' address='0x00007fab74127050' relocation_offset='312' insts_offset='464' stub_offset='1456' scopes_data_offset='1680' scopes_pcs_offset='1944' dependencies_offset='2520' nul_chk_table_offset='2528' metadata_offset='1672' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='257' iicount='257' stamp='0.234'/>
<writer thread='140373948942080'/>
<task_queued compile_id='61' method='java/util/Vector size ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.234' comment='tiered' hot_count='128'/>
<task_queued compile_id='62' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='384' backedge_count='885' iicount='384' level='3' stamp='0.234' comment='tiered' hot_count='384'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/Vector.size  [0x00007fab74127bc0, 0x00007fab74127e30]  624 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab6196d000} &apos;size&apos; &apos;()I&apos; in &apos;java/util/Vector&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fab74127bc0: mov    0x8(%rsi),%r10d
  0x00007fab74127bc4: shl    $0x3,%r10
  0x00007fab74127bc8: cmp    %rax,%r10
  0x00007fab74127bcb: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74127bd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74127bdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74127be0: mov    %eax,-0x14000(%rsp)
  0x00007fab74127be7: push   %rbp
  0x00007fab74127be8: sub    $0x40,%rsp
  0x00007fab74127bec: lea    0x20(%rsp),%rdi
  0x00007fab74127bf1: mov    %rsi,0x8(%rdi)
  0x00007fab74127bf5: mov    (%rsi),%rax
  0x00007fab74127bf8: mov    %rax,%rbx
  0x00007fab74127bfb: and    $0x7,%rbx
  0x00007fab74127bff: cmp    $0x5,%rbx
  0x00007fab74127c03: jne    0x00007fab74127c8a
  0x00007fab74127c09: mov    0x8(%rsi),%ebx
  0x00007fab74127c0c: shl    $0x3,%rbx
  0x00007fab74127c10: mov    0xa8(%rbx),%rbx
  0x00007fab74127c17: or     %r15,%rbx
  0x00007fab74127c1a: xor    %rax,%rbx
  0x00007fab74127c1d: and    $0xffffffffffffff87,%rbx
  0x00007fab74127c21: je     0x00007fab74127cb2
  0x00007fab74127c27: test   $0x7,%rbx
  0x00007fab74127c2e: jne    0x00007fab74127c77
  0x00007fab74127c30: test   $0x300,%rbx
  0x00007fab74127c37: jne    0x00007fab74127c56
  0x00007fab74127c39: and    $0x37f,%rax
  0x00007fab74127c40: mov    %rax,%rbx
  0x00007fab74127c43: or     %r15,%rbx
  0x00007fab74127c46: lock cmpxchg %rbx,(%rsi)
  0x00007fab74127c4b: jne    0x00007fab74127cf5
  0x00007fab74127c51: jmpq   0x00007fab74127cb2
  0x00007fab74127c56: mov    0x8(%rsi),%ebx
  0x00007fab74127c59: shl    $0x3,%rbx
  0x00007fab74127c5d: mov    0xa8(%rbx),%rbx
  0x00007fab74127c64: or     %r15,%rbx
  0x00007fab74127c67: lock cmpxchg %rbx,(%rsi)
  0x00007fab74127c6c: jne    0x00007fab74127cf5
  0x00007fab74127c72: jmpq   0x00007fab74127cb2
  0x00007fab74127c77: mov    0x8(%rsi),%ebx
  0x00007fab74127c7a: shl    $0x3,%rbx
  0x00007fab74127c7e: mov    0xa8(%rbx),%rbx
  0x00007fab74127c85: lock cmpxchg %rbx,(%rsi)
  0x00007fab74127c8a: mov    (%rsi),%rax
  0x00007fab74127c8d: or     $0x1,%rax
  0x00007fab74127c91: mov    %rax,(%rdi)
  0x00007fab74127c94: lock cmpxchg %rdi,(%rsi)
  0x00007fab74127c99: je     0x00007fab74127cb2
  0x00007fab74127c9f: sub    %rsp,%rax
  0x00007fab74127ca2: and    $0xfffffffffffff007,%rax
  0x00007fab74127ca9: mov    %rax,(%rdi)
  0x00007fab74127cac: jne    0x00007fab74127cf5  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Vector::size@0 (line 315)

  0x00007fab74127cb2: mov    0x10(%rsi),%esi    ;*getfield elementCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Vector::size@1 (line 315)

  0x00007fab74127cb5: lea    0x20(%rsp),%rax
  0x00007fab74127cba: mov    0x8(%rax),%rbx
  0x00007fab74127cbe: mov    (%rbx),%rdi
  0x00007fab74127cc1: and    $0x7,%rdi
  0x00007fab74127cc5: cmp    $0x5,%rdi
  0x00007fab74127cc9: je     0x00007fab74127ce6
  0x00007fab74127ccf: mov    (%rax),%rdi
  0x00007fab74127cd2: test   %rdi,%rdi
  0x00007fab74127cd5: je     0x00007fab74127ce6
  0x00007fab74127cdb: lock cmpxchg %rdi,(%rbx)
  0x00007fab74127ce0: jne    0x00007fab74127d05  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Vector::size@4 (line 315)

  0x00007fab74127ce6: mov    %rsi,%rax
  0x00007fab74127ce9: add    $0x40,%rsp
  0x00007fab74127ced: pop    %rbp
  0x00007fab74127cee: test   %eax,0x1b6ba40c(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74127cf4: retq   
  0x00007fab74127cf5: mov    %rsi,0x8(%rsp)
  0x00007fab74127cfa: mov    %rdi,(%rsp)
  0x00007fab74127cfe: callq  0x00007fab740fea60  ; OopMap{rsi=Oop [40]=Oop off=323}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ;   {runtime_call}
  0x00007fab74127d03: jmp    0x00007fab74127cb2
  0x00007fab74127d05: lea    0x20(%rsp),%rax
  0x00007fab74127d0a: mov    %rax,(%rsp)
  0x00007fab74127d0e: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab74127d13: jmp    0x00007fab74127ce6
  0x00007fab74127d15: nop
  0x00007fab74127d16: nop
  0x00007fab74127d17: mov    0x2c0(%r15),%rax
  0x00007fab74127d1e: movabs $0x0,%r10
  0x00007fab74127d28: mov    %r10,0x2c0(%r15)
  0x00007fab74127d2f: movabs $0x0,%r10
  0x00007fab74127d39: mov    %r10,0x2c8(%r15)
  0x00007fab74127d40: mov    %rax,%rbx
  0x00007fab74127d43: lea    0x20(%rsp),%rax
  0x00007fab74127d48: mov    0x8(%rax),%rsi
  0x00007fab74127d4c: mov    (%rsi),%rdi
  0x00007fab74127d4f: and    $0x7,%rdi
  0x00007fab74127d53: cmp    $0x5,%rdi
  0x00007fab74127d57: je     0x00007fab74127d74
  0x00007fab74127d5d: mov    (%rax),%rdi
  0x00007fab74127d60: 
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.meta.Constant from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
test   %rdi,%rdi
  0x00007fab74127d63: je     0x00007fab74127d74
  0x00007fab74127d69: lock cmpxchg %rdi,(%rsi)
  0x00007fab74127d6e: jne    0x00007fab74127d81
  0x00007fab74127d74: mov    %rbx,%rax
  0x00007fab74127d77: add    $0x40,%rsp
  0x00007fab74127d7b: pop    %rbp
  0x00007fab74127d7c: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74127d81: lea    0x20(%rsp),%rax
  0x00007fab74127d86: mov    %rax,(%rsp)
  0x00007fab74127d8a: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab74127d8f: jmp    0x00007fab74127d74
  0x00007fab74127d91: hlt    
  0x00007fab74127d92: hlt    
  0x00007fab74127d93: hlt    
  0x00007fab74127d94: hlt    
  0x00007fab74127d95: hlt    
  0x00007fab74127d96: hlt    
  0x00007fab74127d97: hlt    
  0x00007fab74127d98: hlt    
  0x00007fab74127d99: hlt    
  0x00007fab74127d9a: hlt    
  0x00007fab74127d9b: hlt    
  0x00007fab74127d9c: hlt    
  0x00007fab74127d9d: hlt    
  0x00007fab74127d9e: hlt    
  0x00007fab74127d9f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74127da0: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74127da5: mov    %rsp,-0x28(%rsp)
  0x00007fab74127daa: sub    $0x80,%rsp
  0x00007fab74127db1: mov    %rax,0x78(%rsp)
  0x00007fab74127db6: mov    %rcx,0x70(%rsp)
  0x00007fab74127dbb: mov    %rdx,0x68(%rsp)
  0x00007fab74127dc0: mov    %rbx,0x60(%rsp)
  0x00007fab74127dc5: mov    %rbp,0x50(%rsp)
  0x00007fab74127dca: mov    %rsi,0x48(%rsp)
  0x00007fab74127dcf: mov    %rdi,0x40(%rsp)
  0x00007fab74127dd4: mov    %r8,0x38(%rsp)
  0x00007fab74127dd9: mov    %r9,0x30(%rsp)
  0x00007fab74127dde: mov    %r10,0x28(%rsp)
  0x00007fab74127de3: mov    %r11,0x20(%rsp)
  0x00007fab74127de8: mov    %r12,0x18(%rsp)
  0x00007fab74127ded: mov    %r13,0x10(%rsp)
  0x00007fab74127df2: mov    %r14,0x8(%rsp)
  0x00007fab74127df7: mov    %r15,(%rsp)
  0x00007fab74127dfb: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74127e05: movabs $0x7fab74127da5,%rsi  ;   {internal_word}
  0x00007fab74127e0f: mov    %rsp,%rdx
  0x00007fab74127e12: and    $0xfffffffffffffff0,%rsp
  0x00007fab74127e16: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74127e1b: hlt    
[Deopt Handler Code]
  0x00007fab74127e1c: movabs $0x7fab74127e1c,%r10  ;   {section_word}
  0x00007fab74127e26: push   %r10
  0x00007fab74127e28: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74127e2d: hlt    
  0x00007fab74127e2e: hlt    
  0x00007fab74127e2f: hlt    
<nmethod compile_id='61' compiler='C1' level='1' entry='0x00007fab74127bc0' size='1144' address='0x00007fab74127a50' relocation_offset='312' insts_offset='368' stub_offset='848' scopes_data_offset='1000' scopes_pcs_offset='1040' dependencies_offset='1136' metadata_offset='992' method='java/util/Vector size ()I' bytes='5' count='130' iicount='130' stamp='0.234'/>
----------------------------------------------------------------------
java/lang/String.startsWith  [0x00007fab741280a0, 0x00007fab741283d0]  816 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61896bd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fab741280a0: mov    0x8(%rsi),%r10d
  0x00007fab741280a4: shl    $0x3,%r10
  0x00007fab741280a8: cmp    %rax,%r10
  0x00007fab741280ab: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab741280b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab741280bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab741280c0: mov    %eax,-0x14000(%rsp)
  0x00007fab741280c7: push   %rbp
  0x00007fab741280c8: sub    $0x30,%rsp
  0x00007fab741280cc: movabs $0x7fab61b82e78,%rax  ;   {metadata(method data for {method} {0x00007fab61896bd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741280d6: mov    0xfc(%rax),%edi
  0x00007fab741280dc: add    $0x8,%edi
  0x00007fab741280df: mov    %edi,0xfc(%rax)
  0x00007fab741280e5: movabs $0x7fab61896bd0,%rax  ;   {metadata({method} {0x00007fab61896bd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741280ef: and    $0x1ff8,%edi
  0x00007fab741280f5: cmp    $0x0,%edi
  0x00007fab741280f8: je     0x00007fab741282ad  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x00007fab741280fe: mov    0xc(%rsi),%eax
  0x00007fab74128101: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x00007fab74128105: mov    0xc(%rdx),%esi     ; implicit exception: dispatches to 0x00007fab741282c4
  0x00007fab74128108: shl    $0x3,%rsi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x00007fab7412810c: mov    0xc(%rsi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x00007fab741282c9
  0x00007fab7412810f: cmp    $0x0,%ecx
  0x00007fab74128112: movabs $0x7fab61b82e78,%rbx  ;   {metadata(method data for {method} {0x00007fab61896bd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412811c: movabs $0x130,%rdx
  0x00007fab74128126: jl     0x00007fab74128136
  0x00007fab7412812c: movabs $0x140,%rdx
  0x00007fab74128136: mov    (%rbx,%rdx,1),%r8
  0x00007fab7412813a: lea    0x1(%r8),%r8
  0x00007fab7412813e: mov    %r8,(%rbx,%rdx,1)
  0x00007fab74128142: jl     0x00007fab7412827a  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x00007fab74128148: mov    0xc(%rax),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x00007fab741282ce
  0x00007fab7412814b: sub    %edi,%ebx
  0x00007fab7412814d: cmp    %ebx,%ecx
  0x00007fab7412814f: movabs $0x7fab61b82e78,%rbx  ;   {metadata(method data for {method} {0x00007fab61896bd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74128159: movabs $0x150,%rdx
  0x00007fab74128163: jle    0x00007fab74128173
  0x00007fab74128169: movabs $0x160,%rdx
  0x00007fab74128173: mov    (%rbx,%rdx,1),%r8
  0x00007fab74128177: lea    0x1(%r8),%r8
  0x00007fab7412817b: mov    %r8,(%rbx,%rdx,1)
  0x00007fab7412817f: jg     0x00007fab7412827a  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x00007fab74128185: mov    $0x0,%ebx
  0x00007fab7412818a: jmpq   0x00007fab7412823a  ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x00007fab7412818f: nop
  0x00007fab74128190: mov    %rcx,%rdx
  0x00007fab74128193: inc    %edx
  0x00007fab74128195: movslq %ecx,%r8
  0x00007fab74128198: cmp    0xc(%rax),%ecx
  0x00007fab7412819b: jae    0x00007fab741282d3
  0x00007fab741281a1: movzwl 0x10(%rax,%r8,2),%ecx  ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x00007fab741281a7: mov    %rbx,%r8
  0x00007fab741281aa: inc    %r8d
  0x00007fab741281ad: movslq %ebx,%r9
  0x00007fab741281b0: cmp    0xc(%rsi),%ebx
  0x00007fab741281b3: jae    0x00007fab741282dc
  0x00007fab741281b9: movzwl 0x10(%rsi,%r9,2),%ebx  ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x00007fab741281bf: movabs $0x7fab61b82e78,%r9  ;   {metadata(method data for {method} {0x00007fab61896bd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741281c9: mov    0x100(%r9),%r11d
  0x00007fab741281d0: add    $0x8,%r11d
  0x00007fab741281d4: mov    %r11d,0x100(%r9)
  0x00007fab741281db: movabs $0x7fab61896bd0,%r9  ;   {metadata({method} {0x00007fab61896bd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741281e5: and    $0xfff8,%r11d
  0x00007fab741281ec: cmp    $0x0,%r11d
  0x00007fab741281f0: je     0x00007fab741282e5  ; OopMap{rsi=Oop rax=Oop off=342}
                                                ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x00007fab741281f6: test   %eax,0x1b6b9f04(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab741281fc: cmp    %ebx,%ecx
  0x00007fab741281fe: movabs $0x7fab61b82e78,%rbx  ;   {metadata(method data for {method} {0x00007fab61896bd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74128208: movabs $0x190,%rcx
  0x00007fab74128212: je     0x00007fab74128222
  0x00007fab74128218: movabs $0x1a0,%rcx
  0x00007fab74128222: mov    (%rbx,%rcx,1),%r9
  0x00007fab74128226: lea    0x1(%r9),%r9
  0x00007fab7412822a: mov    %r9,(%rbx,%rcx,1)
  0x00007fab7412822e: jne    0x00007fab7412828b  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x00007fab74128234: mov    %r8,%rbx
  0x00007fab74128237: mov    %rdx,%rcx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x00007fab7412823a: dec    %edi
  0x00007fab7412823c: cmp    $0x0,%edi
  0x00007fab7412823f: movabs $0x7fab61b82e78,%rdx  ;   {metadata(method data for {method} {0x00007fab61896bd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74128249: movabs $0x170,%r8
  0x00007fab74128253: jl     0x00007fab74128263
  0x00007fab74128259: movabs $0x180,%r8
  0x00007fab74128263: mov    (%rdx,%r8,1),%r9
  0x00007fab74128267: lea    0x1(%r9),%r9
  0x00007fab7412826b: mov    %r9,(%rdx,%r8,1)
  0x00007fab7412826f: jl     0x00007fab7412829c
  0x00007fab74128275: jmpq   0x00007fab74128190  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x00007fab7412827a: mov    $0x0,%eax
  0x00007fab7412827f: add    $0x30,%rsp
  0x00007fab74128283: pop    %rbp
  0x00007fab74128284: test   %eax,0x1b6b9e76(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7412828a: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x00007fab7412828b: mov    $0x0,%eax
  0x00007fab74128290: add    $0x30,%rsp
  0x00007fab74128294: pop    %rbp
  0x00007fab74128295: test   %eax,0x1b6b9e65(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7412829b: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x00007fab7412829c: mov    $0x1,%eax
  0x00007fab741282a1: add    $0x30,%rsp
  0x00007fab741282a5: pop    %rbp
  0x00007fab741282a6: test   %eax,0x1b6b9e54(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741282ac: retq   
  0x00007fab741282ad: mov    %rax,0x8(%rsp)
  0x00007fab741282b2: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741282ba: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop off=543}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x00007fab741282bf: jmpq   0x00007fab741280fe
  0x00007fab741282c4: callq  0x00007fab740fc000  ; OopMap{rax=Oop off=553}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x00007fab741282c9: callq  0x00007fab740fc000  ; OopMap{rax=Oop rsi=Oop off=558}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x00007fab741282ce: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rax=Oop off=563}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x00007fab741282d3: mov    %rcx,(%rsp)
  0x00007fab741282d7: callq  0x00007fab740fb940  ; OopMap{rsi=Oop rax=Oop off=572}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x00007fab741282dc: mov    %rbx,(%rsp)
  0x00007fab741282e0: callq  0x00007fab740fb940  ; OopMap{rsi=Oop rax=Oop off=581}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x00007fab741282e5: mov    %r9,0x8(%rsp)
  0x00007fab741282ea: movq   $0x41,(%rsp)
  0x00007fab741282f2: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rax=Oop off=599}
                                                ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x00007fab741282f7: jmpq   0x00007fab741281f6
  0x00007fab741282fc: nop
  0x00007fab741282fd: nop
  0x00007fab741282fe: mov    0x2c0(%r15),%rax
  0x00007fab74128305: movabs $0x0,%r10
  0x00007fab7412830f: mov    %r10,0x2c0(%r15)
  0x00007fab74128316: movabs $0x0,%r10
  0x00007fab74128320: mov    %r10,0x2c8(%r15)
  0x00007fab74128327: add    $0x30,%rsp
  0x00007fab7412832b: pop    %rbp
  0x00007fab7412832c: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74128331: hlt    
  0x00007fab74128332: hlt    
  0x00007fab74128333: hlt    
  0x00007fab74128334: hlt    
  0x00007fab74128335: hlt    
  0x00007fab74128336: hlt    
  0x00007fab74128337: hlt    
  0x00007fab74128338: hlt    
  0x00007fab74128339: hlt    
  0x00007fab7412833a: hlt    
  0x00007fab7412833b: hlt    
  0x00007fab7412833c: hlt    
  0x00007fab7412833d: hlt    
  0x00007fab7412833e: hlt    
  0x00007fab7412833f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74128340: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74128345: mov    %rsp,-0x28(%rsp)
  0x00007fab7412834a: sub    $0x80,%rsp
  0x00007fab74128351: mov    %rax,0x78(%rsp)
  0x00007fab74128356: mov    %rcx,0x70(%rsp)
  0x00007fab7412835b: mov    %rdx,0x68(%rsp)
  0x00007fab74128360: mov    %rbx,0x60(%rsp)
  0x00007fab74128365: mov    %rbp,0x50(%rsp)
  0x00007fab7412836a: mov    %rsi,0x48(%rsp)
  0x00007fab7412836f: mov    %rdi,0x40(%rsp)
  0x00007fab74128374: mov    %r8,0x38(%rsp)
  0x00007fab74128379: mov    %r9,0x30(%rsp)
  0x00007fab7412837e: mov    %r10,0x28(%rsp)
  0x00007fab74128383: mov    %r11,0x20(%rsp)
  0x00007fab74128388: mov    %r12,0x18(%rsp)
  0x00007fab7412838d: mov    %r13,0x10(%rsp)
  0x00007fab74128392: mov    %r14,0x8(%rsp)
  0x00007fab74128397: mov    %r15,(%rsp)
  0x00007fab7412839b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741283a5: movabs $0x7fab74128345,%rsi  ;   {internal_word}
  0x00007fab741283af: mov    %rsp,%rdx
  0x00007fab741283b2: and    $0xfffffffffffffff0,%rsp
  0x00007fab741283b6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741283bb: hlt    
[Deopt Handler Code]
  0x00007fab741283bc: movabs $0x7fab741283bc,%r10  ;   {section_word}
  0x00007fab741283c6: push   %r10
  0x00007fab741283c8: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab741283cd: hlt    
  0x00007fab741283ce: hlt    
  0x00007fab741283cf: hlt    
<nmethod compile_id='62' compiler='C1' level='3' entry='0x00007fab741280a0' size='1856' address='0x00007fab74127f10' relocation_offset='312' insts_offset='400' stub_offset='1072' scopes_data_offset='1224' scopes_pcs_offset='1416' dependencies_offset='1816' nul_chk_table_offset='1824' metadata_offset='1216' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='406' backedge_count='892' iicount='406' stamp='0.236'/>
<writer thread='140373948942080'/>
----------------------------------------------------------------------
java/lang/System.nanoTime  [0x00007fab74128820, 0x00007fab74128a00]  480 bytes
[Entry Point]
  # {method} {0x00007fab618ae6b8} &apos;nanoTime&apos; &apos;()J&apos; in &apos;java/lang/System&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fab74128820: mov    0x8(%rsi),%r10d
  0x00007fab74128824: shl    $0x3,%r10
  0x00007fab74128828: cmp    %r10,%rax
  0x00007fab7412882b: je     0x00007fab74128838
  0x00007fab74128831: jmpq   0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74128836: xchg   %ax,%ax
[Verified Entry Point]
  0x00007fab74128838: mov    %eax,-0x14000(%rsp)
  0x00007fab7412883f: push   %rbp
  0x00007fab74128840: mov    %rsp,%rbp
  0x00007fab74128843: sub    $0x40,%rsp
  0x00007fab74128847: movabs $0x670b80c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007fab74128851: mov    %r14,0x30(%rsp)
  0x00007fab74128856: lea    0x30(%rsp),%r14
  0x00007fab7412885b: mov    %r14,%rsi          ; OopMap{[48]=Oop off=62}
  0x00007fab7412885e: movabs $0x7fab7412885e,%r10  ;   {section_word}
  0x00007fab74128868: mov    %r10,0x1c8(%r15)
  0x00007fab7412886f: mov    %rsp,0x1c0(%r15)
  0x00007fab74128876: cmpb   $0x0,0x1a84c157(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab7412887d: je     0x00007fab741288b5
  0x00007fab74128883: push   %rsi
  0x00007fab74128884: movabs $0x7fab618ae6b8,%rsi  ;   {metadata({method} {0x00007fab618ae6b8} &apos;nanoTime&apos; &apos;()J&apos; in &apos;java/lang/System&apos;)}
  0x00007fab7412888e: mov    %r15,%rdi
  0x00007fab74128891: test   $0xf,%esp
  0x00007fab74128897: je     0x00007fab741288af
  0x00007fab7412889d: sub    $0x8,%rsp
  0x00007fab741288a1: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab741288a6: add    $0x8,%rsp
  0x00007fab741288aa: jmpq   0x00007fab741288b4
  0x00007fab741288af: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab741288b4: pop    %rsi
  0x00007fab741288b5: lea    0x1e0(%r15),%rdi
  0x00007fab741288bc: movl   $0x4,0x258(%r15)
  0x00007fab741288c7: callq  0x00007fab8e0779d0  ;   {runtime_call}
  0x00007fab741288cc: vzeroupper 
  0x00007fab741288cf: movl   $0x5,0x258(%r15)
  0x00007fab741288da: mov    %r15d,%ecx
  0x00007fab741288dd: shr    $0x4,%ecx
  0x00007fab741288e0: and    $0xffc,%ecx
  0x00007fab741288e6: movabs $0x7fab8f7e1000,%r10  ;   {external_word}
  0x00007fab741288f0: mov    %ecx,(%r10,%rcx,1)
  0x00007fab741288f4: cmpl   $0x0,0x1a8570be(%rip)        # 0x00007fab8e97f9bc
                                                ;   {external_word}
  0x00007fab741288fe: jne    0x00007fab74128912
  0x00007fab74128904: cmpl   $0x0,0x30(%r15)
  0x00007fab7412890c: je     0x00007fab74128933
  0x00007fab74128912: mov    %rax,-0x8(%rbp)
  0x00007fab74128916: mov    %r15,%rdi
  0x00007fab74128919: mov    %rsp,%r12
  0x00007fab7412891c: sub    $0x0,%rsp
  0x00007fab74128920: and    $0xfffffffffffffff0,%rsp
  0x00007fab74128924: callq  0x00007fab8e40fc20  ;   {runtime_call}
  0x00007fab74128929: mov    %r12,%rsp
  0x00007fab7412892c: xor    %r12,%r12
  0x00007fab7412892f: mov    -0x8(%rbp),%rax
  0x00007fab74128933: movl   $0x8,0x258(%r15)
  0x00007fab7412893e: cmpl   $0x1,0x2b0(%r15)
  0x00007fab74128949: je     0x00007fab741289d9
  0x00007fab7412894f: cmpb   $0x0,0x1a84c07e(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab74128956: je     0x00007fab74128994
  0x00007fab7412895c: mov    %rax,-0x8(%rbp)
  0x00007fab74128960: movabs $0x7fab618ae6b8,%rsi  ;   {metadata({method} {0x00007fab618ae6b8} &apos;nanoTime&apos; &apos;()J&apos; in &apos;java/lang/System&apos;)}
  0x00007fab7412896a: mov    %r15,%rdi
  0x00007fab7412896d: test   $0xf,%esp
  0x00007fab74128973: je     0x00007fab7412898b
  0x00007fab74128979: sub    $0x8,%rsp
  0x00007fab7412897d: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab74128982: add    $0x8,%rsp
  0x00007fab74128986: jmpq   0x00007fab74128990
  0x00007fab7412898b: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab74128990: mov    -0x8(%rbp),%rax
  0x00007fab74128994: movabs $0x0,%r10
  0x00007fab7412899e: mov    %r10,0x1c0(%r15)
  0x00007fab741289a5: movabs $0x0,%r10
  0x00007fab741289af: mov    %r10,0x1c8(%r15)
  0x00007fab741289b6: mov    0x38(%r15),%rcx
  0x00007fab741289ba: movl   $0x0,0x100(%rcx)
  0x00007fab741289c4: leaveq 
  0x00007fab741289c5: cmpq   $0x0,0x8(%r15)
  0x00007fab741289cd: jne    0x00007fab741289d4
  0x00007fab741289d3: retq   
  0x00007fab741289d4: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00007fab741289d9: mov    %rax,-0x8(%rbp)
  0x00007fab741289dd: mov    %rsp,%r12
  0x00007fab741289e0: sub    $0x0,%rsp
  0x00007fab741289e4: and    $0xfffffffffffffff0,%rsp
  0x00007fab741289e8: callq  0x00007fab8e372120  ;   {runtime_call}
  0x00007fab741289ed: mov    %r12,%rsp
  0x00007fab741289f0: xor    %r12,%r12
  0x00007fab741289f3: mov    -0x8(%rbp),%rax
  0x00007fab741289f7: jmpq   0x00007fab7412894f
  0x00007fab741289fc: hlt    
  0x00007fab741289fd: hlt    
  0x00007fab741289fe: hlt    
  0x00007fab741289ff: hlt    
<nmethod compile_id='63' compile_kind='c2n' level='0' entry='0x00007fab74128820' size='880' address='0x00007fab74128690' relocation_offset='312' consts_offset='880' insts_offset='400' method='java/lang/System nanoTime ()J' bytes='0' count='256' iicount='256' stamp='0.238'/>
[Loaded jdk.vm.ci.meta.JavaValue from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<task_queued compile_id='64' method='java/nio/Buffer checkIndex (I)I' bytes='22' count='256' iicount='256' level='3' stamp='0.238' comment='tiered' hot_count='256'/>
<task_queued compile_id='65' method='java/nio/DirectLongBufferU ix (I)J' bytes='10' count='256' iicount='256' level='3' stamp='0.238' comment='tiered' hot_count='256'/>
[Loaded jdk.vm.ci.meta.JavaConstant from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/nio/Buffer.checkIndex  [0x00007fab74128ba0, 0x00007fab74128e28]  648 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab6193b978} &apos;checkIndex&apos; &apos;(I)I&apos; in &apos;java/nio/Buffer&apos;
  # this:     rsi:rsi   = &apos;java/nio/Buffer&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fab74128ba0: mov    0x8(%rsi),%r10d
  0x00007fab74128ba4: shl    $0x3,%r10
  0x00007fab74128ba8: cmp    %rax,%r10
  0x00007fab74128bab: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74128bb1: data16 data16 nopw 0x0(%rax,%rax,1)
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.HotSpotConstant from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>

  0x00007fab74128bbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74128bc0: mov    %eax,-0x14000(%rsp)
  0x00007fab74128bc7: push   %rbp
  0x00007fab74128bc8: sub    $0x30,%rsp
  0x00007fab74128bcc: movabs $0x7fab61b83068,%rax  ;   {metadata(method data for {method} {0x00007fab6193b978} &apos;checkIndex&apos; &apos;(I)I&apos; in &apos;java/nio/Buffer&apos;)}
  0x00007fab74128bd6: mov    0xfc(%rax),%edi
  0x00007fab74128bdc: add    $0x8,%edi
  0x00007fab74128bdf: mov    %edi,0xfc(%rax)
  0x00007fab74128be5: movabs $0x7fab6193b978,%rax  ;   {metadata({method} {0x00007fab6193b978} &apos;checkIndex&apos; &apos;(I)I&apos; in &apos;java/nio/Buffer&apos;)}
  0x00007fab74128bef: and    $0x1ff8,%edi
  0x00007fab74128bf5: cmp    $0x0,%edi
  0x00007fab74128bf8: je     0x00007fab74128d06  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@0 (line 539)

  0x00007fab74128bfe: cmp    $0x0,%edx
  0x00007fab74128c01: movabs $0x7fab61b83068,%rax  ;   {metadata(method data for {method} {0x00007fab6193b978} &apos;checkIndex&apos; &apos;(I)I&apos; in &apos;java/nio/Buffer&apos;)}
  0x00007fab74128c0b: movabs $0x130,%rdi
  0x00007fab74128c15: jl     0x00007fab74128c25
  0x00007fab74128c1b: movabs $0x140,%rdi
  0x00007fab74128c25: mov    (%rax,%rdi,1),%rcx
  0x00007fab74128c29: lea    0x1(%rcx),%rcx
  0x00007fab74128c2d: mov    %rcx,(%rax,%rdi,1)
  0x00007fab74128c31: jl     0x00007fab74128c81  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@1 (line 539)

  0x00007fab74128c37: mov    0x1c(%rsi),%eax    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@6 (line 539)

  0x00007fab74128c3a: cmp    %eax,%edx
  0x00007fab74128c3c: movabs $0x7fab61b83068,%rax  ;   {metadata(method data for {method} {0x00007fab6193b978} &apos;checkIndex&apos; &apos;(I)I&apos; in &apos;java/nio/Buffer&apos;)}
  0x00007fab74128c46: movabs $0x150,%rsi
  0x00007fab74128c50: jl     0x00007fab74128c60
  0x00007fab74128c56: movabs $0x160,%rsi
  0x00007fab74128c60: mov    (%rax,%rsi,1),%rdi
  0x00007fab74128c64: lea    0x1(%rdi),%rdi
  0x00007fab74128c68: mov    %rdi,(%rax,%rsi,1)
  0x00007fab74128c6c: jge    0x00007fab74128c81  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@9 (line 539)

  0x00007fab74128c72: mov    %rdx,%rax
  0x00007fab74128c75: add    $0x30,%rsp
  0x00007fab74128c79: pop    %rbp
  0x00007fab74128c7a: test   %eax,0x1b6b9480(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74128c80: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@21 (line 541)

  0x00007fab74128c81: nopl   0x0(%rax)
  0x00007fab74128c88: jmpq   0x00007fab74128d2c  ;   {no_reloc}
  0x00007fab74128c8d: add    %al,(%rax)
  0x00007fab74128c8f: add    %al,(%rax)
  0x00007fab74128c91: add    %al,0x162ba(%rax)
  0x00007fab74128c97: add    %al,(%rdi,%rcx,1)
  0x00007fab74128c9a: test   %ebx,-0x74b70000(%rax,%rax,1)
  0x00007fab74128ca1: rex.RXB (bad) 
  0x00007fab74128ca3: lea    0x20(%rax),%rdi
  0x00007fab74128ca7: cmp    0x70(%r15),%rdi
  0x00007fab74128cab: ja     0x00007fab74128d3b
  0x00007fab74128cb1: mov    %rdi,0x60(%r15)
  0x00007fab74128cb5: mov    0xa8(%rdx),%rcx
  0x00007fab74128cbc: mov    %rcx,(%rax)
  0x00007fab74128cbf: mov    %rdx,%rcx
  0x00007fab74128cc2: shr    $0x3,%rcx
  0x00007fab74128cc6: mov    %ecx,0x8(%rax)
  0x00007fab74128cc9: xor    %rcx,%rcx
  0x00007fab74128ccc: mov    %ecx,0xc(%rax)
  0x00007fab74128ccf: xor    %rcx,%rcx
  0x00007fab74128cd2: mov    %rcx,0x10(%rax)
  0x00007fab74128cd6: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@12 (line 540)

  0x00007fab74128cda: mov    %rax,%rsi
  0x00007fab74128cdd: movabs $0x7fab61b83068,%rdi  ;   {metadata(method data for {method} {0x00007fab6193b978} &apos;checkIndex&apos; &apos;(I)I&apos; in &apos;java/nio/Buffer&apos;)}
  0x00007fab74128ce7: addq   $0x1,0x170(%rdi)
  0x00007fab74128cef: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@16 (line 540)

  0x00007fab74128cf2: mov    %rax,0x20(%rsp)
  0x00007fab74128cf7: callq  0x00007fab74047d60  ; OopMap{[32]=Oop off=348}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@16 (line 540)
                                                ;   {optimized virtual_call}
  0x00007fab74128cfc: mov    0x20(%rsp),%rax
  0x00007fab74128d01: jmpq   0x00007fab74128d70
  0x00007fab74128d06: mov    %rax,0x8(%rsp)
  0x00007fab74128d0b: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74128d13: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=376}
                                                ;*synchronization entry
                                                ; - java.nio.Buffer::checkIndex@-1 (line 539)
                                                ;   {runtime_call}
  0x00007fab74128d18: jmpq   0x00007fab74128bfe
  0x00007fab74128d1d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab74128d27: mov    $0xa050f00,%eax
  0x00007fab74128d2c: callq  0x00007fab740ff5e0  ; OopMap{off=401}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@12 (line 540)
                                                ;   {runtime_call}
  0x00007fab74128d31: jmpq   0x00007fab74128c88
  0x00007fab74128d36: callq  0x00007fab740fc000  ; OopMap{off=411}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@12 (line 540)
                                                ;   {runtime_call}
  0x00007fab74128d3b: mov    %rdx,%rdx
  0x00007fab74128d3e: callq  0x00007fab740fcba0  ; OopMap{off=419}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@12 (line 540)
                                                ;   {runtime_call}
  0x00007fab74128d43: jmp    0x00007fab74128cda
  0x00007fab74128d45: nop
  0x00007fab74128d46: nop
  0x00007fab74128d47: mov    0x2c0(%r15),%rax
  0x00007fab74128d4e: movabs $0x0,%r10
  0x00007fab74128d58: mov    %r10,0x2c0(%r15)
  0x00007fab74128d5f: movabs $0x0,%r10
  0x00007fab74128d69: mov    %r10,0x2c8(%r15)
  0x00007fab74128d70: add    $0x30,%rsp
  0x00007fab74128d74: pop    %rbp
  0x00007fab74128d75: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74128d7a: hlt    
  0x00007fab74128d7b: hlt    
  0x00007fab74128d7c: hlt    
  0x00007fab74128d7d: hlt    
  0x00007fab74128d7e: hlt    
  0x00007fab74128d7f: hlt    
[Stub Code]
  0x00007fab74128d80: nop                       ;   {no_reloc}
  0x00007fab74128d81: nop
  0x00007fab74128d82: nop
  0x00007fab74128d83: nop
  0x00007fab74128d84: nop
  0x00007fab74128d85: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74128d8f: jmpq   0x00007fab74128d8f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74128d94: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74128d99: mov    %rsp,-0x28(%rsp)
  0x00007fab74128d9e: sub    $0x80,%rsp
  0x00007fab74128da5: mov    %rax,0x78(%rsp)
  0x00007fab74128daa: mov    %rcx,0x70(%rsp)
  0x00007fab74128daf: mov    %rdx,0x68(%rsp)
  0x00007fab74128db4: mov    %rbx,0x60(%rsp)
  0x00007fab74128db9: mov    %rbp,0x50(%rsp)
  0x00007fab74128dbe: mov    %rsi,0x48(%rsp)
  0x00007fab74128dc3: mov    %rdi,0x40(%rsp)
  0x00007fab74128dc8: mov    %r8,0x38(%rsp)
  0x00007fab74128dcd: mov    %r9,0x30(%rsp)
  0x00007fab74128dd2: mov    %r10,0x28(%rsp)
  0x00007fab74128dd7: mov    %r11,0x20(%rsp)
  0x00007fab74128ddc: mov    %r12,0x18(%rsp)
  0x00007fab74128de1: mov    %r13,0x10(%rsp)
  0x00007fab74128de6: mov    %r14,0x8(%rsp)
  0x00007fab74128deb: mov    %r15,(%rsp)
  0x00007fab74128def: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74128df9: movabs $0x7fab74128d99,%rsi  ;   {internal_word}
  0x00007fab74128e03: mov    %rsp,%rdx
  0x00007fab74128e06: and    $0xfffffffffffffff0,%rsp
  0x00007fab74128e0a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74128e0f: hlt    
[Deopt Handler Code]
  0x00007fab74128e10: movabs $0x7fab74128e10,%r10  ;   {section_word}
  0x00007fab74128e1a: push   %r10
  0x00007fab74128e1c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74128e21: hlt    
  0x00007fab74128e22: hlt    
  0x00007fab74128e23: hlt    
  0x00007fab74128e24: hlt    
  0x00007fab74128e25: hlt    
  0x00007fab74128e26: hlt    
  0x00007fab74128e27: hlt    
<nmethod compile_id='64' compiler='C1' level='3' entry='0x00007fab74128ba0' size='1384' address='0x00007fab74128a10' relocation_offset='312' insts_offset='400' stub_offset='880' scopes_data_offset='1056' scopes_pcs_offset='1136' dependencies_offset='1360' nul_chk_table_offset='1368' metadata_offset='1048' method='java/nio/Buffer checkIndex (I)I' bytes='22' count='268' iicount='268' stamp='0.258'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.HotSpotCompressedNullConstant from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='66' method='java/security/ProtectionDomain getCodeSource ()Ljava/security/CodeSource;' bytes='5' count='128' iicount='128' level='1' stamp='0.258' comment='tiered' hot_count='128'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/nio/DirectLongBufferU.ix  [0x00007fab74129100, 0x00007fab74129270]  368 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61ad8530} &apos;ix&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;
  # this:     rsi:rsi   = &apos;java/nio/DirectLongBufferU&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x00007fab74129100: mov    0x8(%rsi),%r10d
  0x00007fab74129104: shl    $0x3,%r10
  0x00007fab74129108: cmp    %rax,%r10
  0x00007fab7412910b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74129111: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7412911c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74129120: mov    %eax,-0x14000(%rsp)
  0x00007fab74129127: push   %rbp
  0x00007fab74129128: sub    $0x40,%rsp
  0x00007fab7412912c: movabs $0x7fab61b83220,%rcx  ;   {metadata(method data for {method} {0x00007fab61ad8530} &apos;ix&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007fab74129136: mov    0xfc(%rcx),%eax
  0x00007fab7412913c: add    $0x8,%eax
  0x00007fab7412913f: mov    %eax,0xfc(%rcx)
  0x00007fab74129145: movabs $0x7fab61ad8530,%rcx  ;   {metadata({method} {0x00007fab61ad8530} &apos;ix&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007fab7412914f: and    $0x1ff8,%eax
  0x00007fab74129155: cmp    $0x0,%eax
  0x00007fab74129158: je     0x00007fab7412917c  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::ix@0 (line 245)

  0x00007fab7412915e: mov    0x10(%rsi),%rax    ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::ix@1 (line 245)

  0x00007fab74129162: movslq %edx,%rdx
  0x00007fab74129165: mov    $0x3,%ecx
  0x00007fab7412916a: shl    %cl,%rdx
  0x00007fab7412916d: add    %rdx,%rax
  0x00007fab74129170: add    $0x40,%rsp
  0x00007fab74129174: pop    %rbp
  0x00007fab74129175: test   %eax,0x1b6b8f85(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7412917b: retq   
  0x00007fab7412917c: mov    %rcx,0x8(%rsp)
  0x00007fab74129181: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74129189: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=142}
                                                ;*synchronization entry
                                                ; - java.nio.DirectLongBufferU::ix@-1 (line 245)
                                                ;   {runtime_call}
  0x00007fab7412918e: jmp    0x00007fab7412915e
  0x00007fab74129190: nop
  0x00007fab74129191: nop
  0x00007fab74129192: mov    0x2c0(%r15),%rax
  0x00007fab74129199: movabs $0x0,%r10
  0x00007fab741291a3: mov    %r10,0x2c0(%r15)
  0x00007fab741291aa: movabs $0x0,%r10
  0x00007fab741291b4: mov    %r10,0x2c8(%r15)
  0x00007fab741291bb: add    $0x40,%rsp
  0x00007fab741291bf: pop    %rbp
  0x00007fab741291c0: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab741291c5: hlt    
  0x00007fab741291c6: hlt    
  0x00007fab741291c7: hlt    
  0x00007fab741291c8: hlt    
  0x00007fab741291c9: hlt    
  0x00007fab741291ca: hlt    
  0x00007fab741291cb: hlt    
  0x00007fab741291cc: hlt    
  0x00007fab741291cd: hlt    
  0x00007fab741291ce: hlt    
  0x00007fab741291cf: hlt    
  0x00007fab741291d0: hlt    
  0x00007fab741291d1: hlt    
  0x00007fab741291d2: hlt    
  0x00007fab741291d3: hlt    
  0x00007fab741291d4: hlt    
  0x00007fab741291d5: hlt    
  0x00007fab741291d6: hlt    
  0x00007fab741291d7: hlt    
  0x00007fab741291d8: hlt    
  0x00007fab741291d9: hlt    
  0x00007fab741291da: hlt    
  0x00007fab741291db: hlt    
  0x00007fab741291dc: hlt    
  0x00007fab741291dd: hlt    
  0x00007fab741291de: hlt    
  0x00007fab741291df: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab741291e0: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab741291e5: mov    %rsp,-0x28(%rsp)
  0x00007fab741291ea: sub    $0x80,%rsp
  0x00007fab741291f1: mov    %rax,0x78(%rsp)
  0x00007fab741291f6: mov    %rcx,0x70(%rsp)
  0x00007fab741291fb: mov    %rdx,0x68(%rsp)
  0x00007fab74129200: mov    %rbx,0x60(%rsp)
  0x00007fab74129205: mov    %rbp,0x50(%rsp)
  0x00007fab7412920a: mov    %rsi,0x48(%rsp)
  0x00007fab7412920f: mov    %rdi,0x40(%rsp)
  0x00007fab74129214: mov    %r8,0x38(%rsp)
  0x00007fab74129219: mov    %r9,0x30(%rsp)
  0x00007fab7412921e: mov    %r10,0x28(%rsp)
  0x00007fab74129223: mov    %r11,0x20(%rsp)
  0x00007fab74129228: mov    %r12,0x18(%rsp)
  0x00007fab7412922d: mov    %r13,0x10(%rsp)
  0x00007fab74129232: mov    %r14,0x8(%rsp)
  0x00007fab74129237: mov    %r15,(%rsp)
  0x00007fab7412923b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74129245: movabs $0x7fab741291e5,%rsi  ;   {internal_word}
  0x00007fab7412924f: mov    %rsp,%rdx
  0x00007fab74129252: and    $0xfffffffffffffff0,%rsp
  0x00007fab74129256: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7412925b: hlt    
[Deopt Handler Code]
  0x00007fab7412925c: movabs $0x7fab7412925c,%r10  ;   {section_word}
  0x00007fab74129266: push   %r10
  0x00007fab74129268: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7412926d: hlt    
  0x00007fab7412926e: hlt    
  0x00007fab7412926f: hlt    
<nmethod compile_id='65' compiler='C1' level='3' entry='0x00007fab74129100' size='864' address='0x00007fab74128f90' relocation_offset='312' insts_offset='368' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='776' dependencies_offset='856' metadata_offset='736' method='java/nio/DirectLongBufferU ix (I)J' bytes='10' count='280' iicount='280' stamp='0.259'/>
<writer thread='140373948942080'/>
<task_queued compile_id='67' method='java/nio/charset/CharsetEncoder reset ()Ljava/nio/charset/CharsetEncoder;' bytes='11' count='256' iicount='256' level='3' stamp='0.259' comment='tiered' hot_count='256'/>
<task_queued compile_id='68' method='java/nio/charset/CharsetEncoder implReset ()V' bytes='1' count='256' iicount='256' level='3' stamp='0.259' comment='tiered' hot_count='256'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/nio/charset/CharsetEncoder.reset  [0x00007fab74129480, 0x00007fab74129810]  912 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61a0b358} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab74129480: mov    0x8(%rsi),%r10d
  0x00007fab74129484: shl    $0x3,%r10
  0x00007fab74129488: cmp    %rax,%r10
  0x00007fab7412948b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74129491: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7412949c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab741294a0: mov    %eax,-0x14000(%rsp)
  0x00007fab741294a7: push   %rbp
  0x00007fab741294a8: sub    $0x30,%rsp
  0x00007fab741294ac: movabs $0x7fab61b83380,%rax  ;   {metadata(method data for {method} {0x00007fab61a0b358} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab741294b6: mov    0xfc(%rax),%edi
  0x00007fab741294bc: add    $0x8,%edi
  0x00007fab741294bf: mov    %edi,0xfc(%rax)
  0x00007fab741294c5: movabs $0x7fab61a0b358,%rax  ;   {metadata({method} {0x00007fab61a0b358} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab741294cf: and    $0x1ff8,%edi
  0x00007fab741294d5: cmp    $0x0,%edi
  0x00007fab741294d8: je     0x00007fab74129712  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::reset@0 (line 709)

  0x00007fab741294de: mov    %rsi,%rax
  0x00007fab741294e1: movabs $0x7fab61b83380,%rdi  ;   {metadata(method data for {method} {0x00007fab61a0b358} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab741294eb: mov    0x8(%rax),%eax
  0x00007fab741294ee: shl    $0x3,%rax
  0x00007fab741294f2: cmp    0x140(%rdi),%rax
  0x00007fab741294f9: jne    0x00007fab74129508
  0x00007fab741294fb: addq   $0x1,0x148(%rdi)
  0x00007fab74129503: jmpq   0x00007fab741296ca
  0x00007fab74129508: cmp    0x150(%rdi),%rax
  0x00007fab7412950f: jne    0x00007fab7412951e
  0x00007fab74129511: addq   $0x1,0x158(%rdi)
  0x00007fab74129519: jmpq   0x00007fab741296ca
  0x00007fab7412951e: cmp    0x160(%rdi),%rax
  0x00007fab74129525: jne    0x00007fab74129534
  0x00007fab74129527: addq   $0x1,
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.meta.VMConstant from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
0x168(%rdi)
  0x00007fab7412952f: jmpq   0x00007fab741296ca
  0x00007fab74129534: cmp    0x170(%rdi),%rax
  0x00007fab7412953b: jne    0x00007fab7412954a
  0x00007fab7412953d: addq   $0x1,0x178(%rdi)
  0x00007fab74129545: jmpq   0x00007fab741296ca
  0x00007fab7412954a: cmp    0x180(%rdi),%rax
  0x00007fab74129551: jne    0x00007fab74129560
  0x00007fab74129553: addq   $0x1,0x188(%rdi)
  0x00007fab7412955b: jmpq   0x00007fab741296ca
  0x00007fab74129560: cmp    0x190(%rdi),%rax
  0x00007fab74129567: jne    0x00007fab74129576
  0x00007fab74129569: addq   $0x1,0x198(%rdi)
  0x00007fab74129571: jmpq   0x00007fab741296ca
  0x00007fab74129576: cmp    0x1a0(%rdi),%rax
  0x00007fab7412957d: jne    0x00007fab7412958c
  0x00007fab7412957f: addq   $0x1,0x1a8(%rdi)
  0x00007fab74129587: jmpq   0x00007fab741296ca
  0x00007fab7412958c: cmp    0x1b0(%rdi),%rax
  0x00007fab74129593: jne    0x00007fab741295a2
  0x00007fab74129595: addq   $0x1,0x1b8(%rdi)
  0x00007fab7412959d: jmpq   0x00007fab741296ca
  0x00007fab741295a2: cmpq   $0x0,0x140(%rdi)
  0x00007fab741295ad: jne    0x00007fab741295c6
  0x00007fab741295af: mov    %rax,0x140(%rdi)
  0x00007fab741295b6: movq   $0x1,0x148(%rdi)
  0x00007fab741295c1: jmpq   0x00007fab741296ca
  0x00007fab741295c6: cmpq   $0x0,0x150(%rdi)
  0x00007fab741295d1: jne    0x00007fab741295ea
  0x00007fab741295d3: mov    %rax,0x150(%rdi)
  0x00007fab741295da: movq   $0x1,0x158(%rdi)
  0x00007fab741295e5: jmpq   0x00007fab741296ca
  0x00007fab741295ea: cmpq   $0x0,0x160(%rdi)
  0x00007fab741295f5: jne    0x00007fab7412960e
  0x00007fab741295f7: mov    %rax,0x160(%rdi)
  0x00007fab741295fe: movq   $0x1,0x168(%rdi)
  0x00007fab74129609: jmpq   0x00007fab741296ca
  0x00007fab7412960e: cmpq   $0x0,0x170(%rdi)
  0x00007fab74129619: jne    0x00007fab74129632
  0x00007fab7412961b: mov    %rax,0x170(%rdi)
  0x00007fab74129622: movq   $0x1,0x178(%rdi)
  0x00007fab7412962d: jmpq   0x00007fab741296ca
  0x00007fab74129632: cmpq   $0x0,0x180(%rdi)
  0x00007fab7412963d: jne    0x00007fab74129656
  0x00007fab7412963f: mov    %rax,0x180(%rdi)
  0x00007fab74129646: movq   $0x1,0x188(%rdi)
  0x00007fab74129651: jmpq   0x00007fab741296ca
  0x00007fab74129656: cmpq   $0x0,0x190(%rdi)
  0x00007fab74129661: jne    0x00007fab7412967a
  0x00007fab74129663: mov    %rax,0x190(%rdi)
  0x00007fab7412966a: movq   $0x1,0x198(%rdi)
  0x00007fab74129675: jmpq   0x00007fab741296ca
  0x00007fab7412967a: cmpq   $0x0,0x1a0(%rdi)
  0x00007fab74129685: jne    0x00007fab7412969e
  0x00007fab74129687: mov    %rax,0x1a0(%rdi)
  0x00007fab7412968e: movq   $0x1,0x1a8(%rdi)
  0x00007fab74129699: jmpq   0x00007fab741296ca
  0x00007fab7412969e: cmpq   $0x0,0x1b0(%rdi)
  0x00007fab741296a9: jne    0x00007fab741296c2
  0x00007fab741296ab: mov    %rax,0x1b0(%rdi)
  0x00007fab741296b2: movq   $0x1,0x1b8(%rdi)
  0x00007fab741296bd: jmpq   0x00007fab741296ca
  0x00007fab741296c2: addq   $0x1,0x130(%rdi)
  0x00007fab741296ca: movabs $0x7fab61b83588,%rax  ;   {metadata(method data for {method} {0x00007fab61a0b3f8} &apos;implReset&apos; &apos;()V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab741296d4: mov    0xfc(%rax),%edi
  0x00007fab741296da: add    $0x8,%edi
  0x00007fab741296dd: mov    %edi,0xfc(%rax)
  0x00007fab741296e3: movabs $0x7fab61a0b3f8,%rax  ;   {metadata({method} {0x00007fab61a0b3f8} &apos;implReset&apos; &apos;()V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab741296ed: and    $0x7ffff8,%edi
  0x00007fab741296f3: cmp    $0x0,%edi
  0x00007fab741296f6: je     0x00007fab74129729
  0x00007fab741296fc: movl   $0x0,0x14(%rsi)    ;*putfield state {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::reset@6 (line 710)

  0x00007fab74129703: mov    %rsi,%rax
  0x00007fab74129706: add    $0x30,%rsp
  0x00007fab7412970a: pop    %rbp
  0x00007fab7412970b: test   %eax,0x1b6b89ef(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74129711: retq   
  0x00007fab74129712: mov    %rax,0x8(%rsp)
  0x00007fab74129717: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412971f: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=676}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::reset@-1 (line 709)
                                                ;   {runtime_call}
  0x00007fab74129724: jmpq   0x00007fab741294de
  0x00007fab74129729: mov    %rax,0x8(%rsp)
  0x00007fab7412972e: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74129736: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=699}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::implReset@-1 (line 720)
                                                ; - java.nio.charset.CharsetEncoder::reset@1 (line 709)
                                                ;   {runtime_call}
  0x00007fab7412973b: jmp    0x00007fab741296fc
  0x00007fab7412973d: nop
  0x00007fab7412973e: nop
  0x00007fab7412973f: mov    0x2c0(%r15),%rax
  0x00007fab74129746: movabs $0x0,%r10
  0x00007fab74129750: mov    %r10,0x2c0(%r15)
  0x00007fab74129757: movabs $0x0,%r10
  0x00007fab74129761: mov    %r10,0x2c8(%r15)
  0x00007fab74129768: add    $0x30,%rsp
  0x00007fab7412976c: pop    %rbp
  0x00007fab7412976d: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74129772: hlt    
  0x00007fab74129773: hlt    
  0x00007fab74129774: hlt    
  0x00007fab74129775: hlt    
  0x00007fab74129776: hlt    
  0x00007fab74129777: hlt    
  0x00007fab74129778: hlt    
  0x00007fab74129779: hlt    
  0x00007fab7412977a: hlt    
  0x00007fab7412977b: hlt    
  0x00007fab7412977c: hlt    
  0x00007fab7412977d: hlt    
  0x00007fab7412977e: hlt    
  0x00007fab7412977f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74129780: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74129785: mov    %rsp,-0x28(%rsp)
  0x00007fab7412978a: sub    $0x80,%rsp
  0x00007fab74129791: mov    %rax,0x78(%rsp)
  0x00007fab74129796: mov    %rcx,0x70(%rsp)
  0x00007fab7412979b: mov    %rdx,0x68(%rsp)
  0x00007fab741297a0: mov    %rbx,0x60(%rsp)
  0x00007fab741297a5: mov    %rbp,0x50(%rsp)
  0x00007fab741297aa: mov    %rsi,0x48(%rsp)
  0x00007fab741297af: mov    %rdi,0x40(%rsp)
  0x00007fab741297b4: mov    %r8,0x38(%rsp)
  0x00007fab741297b9: mov    %r9,0x30(%rsp)
  0x00007fab741297be: mov    %r10,0x28(%rsp)
  0x00007fab741297c3: mov    %r11,0x20(%rsp)
  0x00007fab741297c8: mov    %r12,0x18(%rsp)
  0x00007fab741297cd: mov    %r13,0x10(%rsp)
  0x00007fab741297d2: mov    %r14,0x8(%rsp)
  0x00007fab741297d7: mov    %r15,(%rsp)
  0x00007fab741297db: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741297e5: movabs $0x7fab74129785,%rsi  ;   {internal_word}
  0x00007fab741297ef: mov    %rsp,%rdx
  0x00007fab741297f2: and    $0xfffffffffffffff0,%rsp
  0x00007fab741297f6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741297fb: hlt    
[Deopt Handler Code]
  0x00007fab741297fc: movabs $0x7fab741297fc,%r10  ;   {section_word}
  0x00007fab74129806: push   %r10
  0x00007fab74129808: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7412980d: hlt    
  0x00007fab7412980e: hlt    
  0x00007fab7412980f: hlt    
<nmethod compile_id='67' compiler='C1' level='3' entry='0x00007fab74129480' size='1440' address='0x00007fab74129310' relocation_offset='312' insts_offset='368' stub_offset='1136' scopes_data_offset='1296' scopes_pcs_offset='1336' dependencies_offset='1432' metadata_offset='1280' method='java/nio/charset/CharsetEncoder reset ()Ljava/nio/charset/CharsetEncoder;' bytes='11' count='274' iicount='274' stamp='0.260'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.HotSpotObjectConstant from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/nio/charset/CharsetEncoder.implReset  [0x00007fab74129a40, 0x00007fab74129b90]  336 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61a0b3f8} &apos;implReset&apos; &apos;()V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab74129a40: mov    0x8(%rsi),%r10d
  0x00007fab74129a44: shl    $0x3,%r10
  0x00007fab74129a48: cmp    %rax,%r10
  0x00007fab74129a4b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74129a51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74129a5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74129a60: mov    %eax,-0x14000(%rsp)
  0x00007fab74129a67: push   %rbp
  0x00007fab74129a68: sub    $0x30,%rsp
  0x00007fab74129a6c: movabs $0x7fab61b83588,%rdi  ;   {metadata(method data for {method} {0x00007fab61a0b3f8} &apos;implReset&apos; &apos;()V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74129a76: mov    0xfc(%rdi),%ebx
  0x00007fab74129a7c: add    $0x8,%ebx
  0x00007fab74129a7f: mov    %ebx,0xfc(%rdi)
  0x00007fab74129a85: movabs $0x7fab61a0b3f8,%rdi  ;   {metadata({method} {0x00007fab61a0b3f8} &apos;implReset&apos; &apos;()V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74129a8f: and    $0x1ff8,%ebx
  0x00007fab74129a95: cmp    $0x0,%ebx
  0x00007fab74129a98: je     0x00007fab74129aaa  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::implReset@0 (line 720)

  0x00007fab74129a9e: add    $0x30,%rsp
  0x00007fab74129aa2: pop    %rbp
  0x00007fab74129aa3: test   %eax,0x1b6b8657(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74129aa9: retq   
  0x00007fab74129aaa: mov    %rdi,0x8(%rsp)
  0x00007fab74129aaf: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74129ab7: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=124}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::implReset@-1 (line 720)
                                                ;   {runtime_call}
  0x00007fab74129abc: jmp    0x00007fab74129a9e
  0x00007fab74129abe: nop
  0x00007fab74129abf: nop
  0x00007fab74129ac0: mov    0x2c0(%r15),%rax
  0x00007fab74129ac7: movabs $0x0,%r10
  0x00007fab74129ad1: mov    %r10,0x2c0(%r15)
  0x00007fab74129ad8: movabs $0x0,%r10
  0x00007fab74129ae2: mov    %r10,0x2c8(%r15)
  0x00007fab74129ae9: add    $0x30,%rsp
  0x00007fab74129aed: pop    %rbp
  0x00007fab74129aee: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74129af3: hlt    
  0x00007fab74129af4: hlt    
  0x00007fab74129af5: hlt    
  0x00007fab74129af6: hlt    
  0x00007fab74129af7: hlt    
  0x00007fab74129af8: hlt    
  0x00007fab74129af9: hlt    
  0x00007fab74129afa: hlt    
  0x00007fab74129afb: hlt    
  0x00007fab74129afc: hlt    
  0x00007fab74129afd: hlt    
  0x00007fab74129afe: hlt    
  0x00007fab74129aff: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74129b00: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74129b05: mov    %rsp,-0x28(%rsp)
  0x00007fab74129b0a: sub    $0x80,%rsp
  0x00007fab74129b11: mov    %rax,0x78(%rsp)
  0x00007fab74129b16: mov    %rcx,0x70(%rsp)
  0x00007fab74129b1b: mov    %rdx,0x68(%rsp)
  0x00007fab74129b20: mov    %rbx,0x60(%rsp)
  0x00007fab74129b25: mov    %rbp,0x50(%rsp)
  0x00007fab74129b2a: mov    %rsi,0x48(%rsp)
  0x00007fab74129b2f: mov    %rdi,0x40(%rsp)
  0x00007fab74129b34: mov    %r8,0x38(%rsp)
  0x00007fab74129b39: mov    %r9,0x30(%rsp)
  0x00007fab74129b3e: mov    %r10,0x28(%rsp)
  0x00007fab74129b43: mov    %r11,0x20(%rsp)
  0x00007fab74129b48: mov    %r12,0x18(%rsp)
  0x00007fab74129b4d: mov    %r13,0x10(%rsp)
  0x00007fab74129b52: mov    %r14,0x8(%rsp)
  0x00007fab74129b57: mov    %r15,(%rsp)
  0x00007fab74129b5b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74129b65: movabs $0x7fab74129b05,%rsi  ;   {internal_word}
  0x00007fab74129b6f: mov    %rsp,%rdx
  0x00007fab74129b72: and    $0xfffffffffffffff0,%rsp
  0x00007fab74129b76: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74129b7b: hlt    
[Deopt Handler Code]
  0x00007fab74129b7c: movabs $0x7fab74129b7c,%r10  ;   {section_word}
  0x00007fab74129b86: push   %r10
  0x00007fab74129b88: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74129b8d: hlt    
  0x00007fab74129b8e: hlt    
  0x00007fab74129b8f: hlt    
<nmethod compile_id='68' compiler='C1' level='3' entry='0x00007fab74129a40' size='808' address='0x00007fab741298d0' relocation_offset='312' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='736' dependencies_offset='800' metadata_offset='704' method='java/nio/charset/CharsetEncoder implReset ()V' bytes='1' count='274' iicount='274' stamp='0.261'/>
----------------------------------------------------------------------
java/security/ProtectionDomain.getCodeSource  [0x00007fab74129d80, 0x00007fab74129e90]  272 bytes
[Entry Point]
[Constants]
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.HotSpotObjectConstantImpl from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>
  # {method} {0x00007fab618b80d0} &apos;getCodeSource&apos; &apos;()Ljava/security/CodeSource;&apos; in &apos;java/security/ProtectionDomain&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab74129d80: mov    0x8(%rsi),%r10d
  0x00007fab74129d84: shl    $0x3,%r10
  0x00007fab74129d88: cmp    %rax,%r10
  0x00007fab74129d8b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74129d91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74129d9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74129da0: mov    %eax,-0x14000(%rsp)
  0x00007fab74129da7: push   %rbp
  0x00007fab74129da8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.security.ProtectionDomain::getCodeSource@0 (line 212)

  0x00007fab74129dac: mov    0x10(%rsi),%eax
  0x00007fab74129daf: shl    $0x3,%rax          ;*getfield codesource {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.security.ProtectionDomain::getCodeSource@1 (line 212)

  0x00007fab74129db3: add    $0x30,%rsp
  0x00007fab74129db7: pop    %rbp
  0x00007fab74129db8: test   %eax,0x1b6b8342(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74129dbe: retq   
  0x00007fab74129dbf: nop
  0x00007fab74129dc0: nop
  0x00007fab74129dc1: mov    0x2c0(%r15),%rax
  0x00007fab74129dc8: movabs $0x0,%r10
  0x00007fab74129dd2: mov    %r10,0x2c0(%r15)
  0x00007fab74129dd9: movabs $0x0,%r10
  0x00007fab74129de3: mov    %r10,0x2c8(%r15)
  0x00007fab74129dea: add    $0x30,%rsp
  0x00007fab74129dee: pop    %rbp
  0x00007fab74129def: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74129df4: hlt    
  0x00007fab74129df5: hlt    
  0x00007fab74129df6: hlt    
  0x00007fab74129df7: hlt    
  0x00007fab74129df8: hlt    
  0x00007fab74129df9: hlt    
  0x00007fab74129dfa: hlt    
  0x00007fab74129dfb: hlt    
  0x00007fab74129dfc: hlt    
  0x00007fab74129dfd: hlt    
  0x00007fab74129dfe: hlt    
  0x00007fab74129dff: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74129e00: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74129e05: mov    %rsp,-0x28(%rsp)
  0x00007fab74129e0a: sub    $0x80,%rsp
  0x00007fab74129e11: mov    %rax,0x78(%rsp)
  0x00007fab74129e16: mov    %rcx,0x70(%rsp)
  0x00007fab74129e1b: mov    %rdx,0x68(%rsp)
  0x00007fab74129e20: mov    %rbx,0x60(%rsp)
  0x00007fab74129e25: mov    %rbp,0x50(%rsp)
  0x00007fab74129e2a: mov    %rsi,0x48(%rsp)
  0x00007fab74129e2f: mov    %rdi,0x40(%rsp)
  0x00007fab74129e34: mov    %r8,0x38(%rsp)
  0x00007fab74129e39: mov    %r9,0x30(%rsp)
  0x00007fab74129e3e: mov    %r10,0x28(%rsp)
  0x00007fab74129e43: mov    %r11,0x20(%rsp)
  0x00007fab74129e48: mov    %r12,0x18(%rsp)
  0x00007fab74129e4d: mov    %r13,0x10(%rsp)
  0x00007fab74129e52: mov    %r14,0x8(%rsp)
  0x00007fab74129e57: mov    %r15,(%rsp)
  0x00007fab74129e5b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74129e65: movabs $0x7fab74129e05,%rsi  ;   {internal_word}
  0x00007fab74129e6f: mov    %rsp,%rdx
  0x00007fab74129e72: and    $0xfffffffffffffff0,%rsp
  0x00007fab74129e76: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74129e7b: hlt    
[Deopt Handler Code]
  0x00007fab74129e7c: movabs $0x7fab74129e7c,%r10  ;   {section_word}
  0x00007fab74129e86: push   %r10
  0x00007fab74129e88: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74129e8d: hlt    
  0x00007fab74129e8e: hlt    
  0x00007fab74129e8f: hlt    
<nmethod compile_id='66' compiler='C1' level='1' entry='0x00007fab74129d80' size='736' address='0x00007fab74129c10' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/security/ProtectionDomain getCodeSource ()Ljava/security/CodeSource;' bytes='5' count='138' iicount='138' stamp='0.261'/>
<writer thread='140373948942080'/>
<task_queued compile_id='69' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='115' backedge_count='5120' iicount='115' level='3' stamp='0.261' comment='tiered' hot_count='115'/>
[Loaded jdk.vm.ci.hotspot.HotSpotMetaspaceConstant from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotMetaspaceConstantImpl from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/String.indexOf  [0x00007fab7412a0c0, 0x00007fab7412a710]  1616 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8:r8     = &apos;[C&apos;
  # parm4:    r9        = int
  # parm5:    rdi       = int
  # parm6:    [sp+0x50]   = int  (sp of caller)
  0x00007fab7412a0c0: mov    %eax,-0x14000(%rsp)
  0x00007fab7412a0c7: push   %rbp
  0x00007fab7412a0c8: sub    $0x40,%rsp
  0x00007fab7412a0cc: mov    %edx,0x20(%rsp)
  0x00007fab7412a0d0: mov    %edi,0x24(%rsp)
  0x00007fab7412a0d4: movabs $0x7fab61b836d0,%rax  ;   {metadata(method data for {method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a0de: mov    0xfc(%rax),%ebx
  0x00007fab7412a0e4: add    $0x8,%ebx
  0x00007fab7412a0e7: mov    %ebx,0xfc(%rax)
  0x00007fab7412a0ed: movabs $0x7fab618978a8,%rax  ;   {metadata({method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a0f7: and    $0x1ff8,%ebx
  0x00007fab7412a0fd: cmp    $0x0,%ebx
  0x00007fab7412a100: je     0x00007fab7412a594  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@0 (line 1756)

  0x00007fab7412a106: mov    0x50(%rsp),%eax
  0x00007fab7412a10a: cmp    %ecx,%eax
  0x00007fab7412a10c: movabs $0x7fab61b836d0,%rbx  ;   {metadata(method data for {method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a116: movabs $0x130,%r11
  0x00007fab7412a120: jl     0x00007fab7412a130
  0x00007fab7412a126: movabs $0x140,%r11
  0x00007fab7412a130: mov    (%rbx,%r11,1),%r13
  0x00007fab7412a134: lea    0x1(%r13),%r13
  0x00007fab7412a138: mov    %r13,(%rbx,%r11,1)
  0x00007fab7412a13c: jl     0x00007fab7412a180  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@3 (line 1756)

  0x00007fab7412a142: cmp    $0x0,%edi
  0x00007fab7412a145: movabs $0x7fab61b836d0,%rax  ;   {metadata(method data for {method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a14f: movabs $0x150,%rsi
  0x00007fab7412a159: jne    0x00007fab7412a169
  0x00007fab7412a15f: movabs $0x160,%rsi
  0x00007fab7412a169: mov    (%rax,%rsi,1),%rdi
  0x00007fab7412a16d: lea    0x1(%rdi),%rdi
  0x00007fab7412a171: mov    %rdi,(%rax,%rsi,1)
  0x00007fab7412a175: jne    0x00007fab7412a580
  0x00007fab7412a17b: jmpq   0x00007fab7412a56b  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@8 (line 1757)

  0x00007fab7412a180: cmp    $0x0,%eax
  0x00007fab7412a183: movabs $0x7fab61b836d0,%rbx  ;   {metadata(method data for {method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a18d: movabs $0x188,%r11
  0x00007fab7412a197: jge    0x00007fab7412a1a7
  0x00007fab7412a19d: movabs $0x198,%r11
  0x00007fab7412a1a7: mov    (%rbx,%r11,1),%r13
  0x00007fab7412a1ab: lea    0x1(%r13),%r13
  0x00007fab7412a1af: mov    %r13,(%rbx,%r11,1)
  0x00007fab7412a1b3: jge    0x00007fab7412a1be  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@19 (line 1759)

  0x00007fab7412a1b9: mov    $0x0,%eax          ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@25 (line 1762)

  0x00007fab7412a1be: cmp    $0x0,%edi
  0x00007fab7412a1c1: movabs $0x7fab61b836d0,%rbx  ;   {metadata(method data for {method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a1cb: movabs $0x1a8,%r11
  0x00007fab7412a1d5: jne    0x00007fab7412a1e5
  0x00007fab7412a1db: movabs $0x1b8,%r11
  0x00007fab7412a1e5: mov    (%rbx,%r11,1),%r13
  0x00007fab7412a1e9: lea    0x1(%r13),%r13
  0x00007fab7412a1ed: mov    %r13,(%rbx,%r11,1)
  0x00007fab7412a1f1: je     0x00007fab7412a55f  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@27 (line 1762)

  0x00007fab7412a1f7: movslq %r9d,%rbx
  0x00007fab7412a1fa: cmp    0xc(%r8),%r9d      ; implicit exception: dispatches to 0x00007fab7412a5ab
  0x00007fab7412a1fe: jae    0x00007fab7412a5b5
  0x00007fab7412a204: movzwl 0x10(%r8,%rbx,2),%ebx  ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@36 (line 1766)

  0x00007fab7412a20a: mov    %ebx,0x28(%rsp)
  0x00007fab7412a20e: sub    %edi,%ecx
  0x00007fab7412a210: add    %edx,%ecx
  0x00007fab7412a212: add    %edx,%eax
  0x00007fab7412a214: nopl   0x0(%rax)
  0x00007fab7412a218: cmp    %ecx,%eax
  0x00007fab7412a21a: movabs $0x7fab61b836d0,%r11  ;   {metadata(method data for {method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a224: movabs $0x1c8,%r13
  0x00007fab7412a22e: jg     0x00007fab7412a23e
  0x00007fab7412a234: movabs $0x1d8,%r13
  0x00007fab7412a23e: mov    (%r11,%r13,1),%r14
  0x00007fab7412a242: lea    0x1(%r14),%r14
  0x00007fab7412a246: mov    %r14,(%r11,%r13,1)
  0x00007fab7412a24a: jg     0x00007fab7412a54e  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x00007fab7412a250: movslq %eax,%r11
  0x00007fab7412a253: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x00007fab7412a5be
  0x00007fab7412a256: jae    0x00007fab7412a5c8
  0x00007fab7412a25c: movzwl 0x10(%rsi,%r11,2),%r11d  ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x00007fab7412a262: cmp    %ebx,%r11d
  0x00007fab7412a265: movabs $0x7fab61b836d0,%r11  ;   {metadata(method data for {method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a26f: movabs $0x1e8,%r13
  0x00007fab7412a279: je     0x00007fab7412a289
  0x00007fab7412a27f: movabs $0x1f8,%r13
  0x00007fab7412a289: mov    (%r11,%r13,1),%r14
  0x00007fab7412a28d: lea    0x1(%r14),%r14
  0x00007fab7412a291: mov    %r14,(%r11,%r13,1)
  0x00007fab7412a295: je     0x00007fab7412a373
  0x00007fab7412a29b: jmpq   0x00007fab7412a339  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@66 (line 1771)

  0x00007fab7412a2a0: movslq %eax,%r11
  0x00007fab7412a2a3: cmp    0xc(%rsi),%eax
  0x00007fab7412a2a6: jae    0x00007fab7412a5d1
  0x00007fab7412a2ac: movzwl 0x10(%rsi,%r11,2),%r11d  ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x00007fab7412a2b2: cmp    %ebx,%r11d
  0x00007fab7412a2b5: movabs $0x7fab61b836d0,%r11  ;   {metadata(method data for {method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a2bf: movabs $0x228,%r13
  0x00007fab7412a2c9: je     0x00007fab7412a2d9
  0x00007fab7412a2cf: movabs $0x238,%r13
  0x00007fab7412a2d9: mov    (%r11,%r13,1),%r14
  0x00007fab7412a2dd: lea    0x1(%r14),%r14
  0x00007fab7412a2e1: mov    %r14,(%r11,%r13,1)
  0x00007fab7412a2e5: je     0x00007fab7412a373  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x00007fab7412a2eb: movabs $0x7fab61b836d0,%r11  ;   {metadata(method data for {method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a2f5: mov    0x100(%r11),%r13d
  0x00007fab7412a2fc: add    $0x8,%r13d
  0x00007fab7412a300: mov    %r13d,0x100(%r11)
  0x00007fab7412a307: movabs $0x7fab618978a8,%r11  ;   {metadata({method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a311: and    $0xfff8,%r13d
  0x00007fab7412a318: cmp    $0x0,%r13d
  0x00007fab7412a31c: je     0x00007fab7412a5da  ; OopMap{r8=Oop rsi=Oop off=610}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x00007fab7412a322: test   %eax,0x1b6b7dd8(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab7412a328: movabs $0x7fab61b836d0,%r11  ;   {metadata(method data for {method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a332: incl   0x248(%r11)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x00007fab7412a339: inc    %eax
  0x00007fab7412a33b: cmp    %ecx,%eax
  0x00007fab7412a33d: movabs $0x7fab61b836d0,%r11  ;   {metadata(method data for {method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a347: movabs $0x208,%r13
  0x00007fab7412a351: jg     0x00007fab7412a361
  0x00007fab7412a357: movabs $0x218,%r13
  0x00007fab7412a361: mov    (%r11,%r13,1),%r14
  0x00007fab7412a365: lea    0x1(%r14),%r14
  0x00007fab7412a369: mov    %r14,(%r11,%r13,1)
  0x00007fab7412a36d: jle    0x00007fab7412a2a0  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x00007fab7412a373: cmp    %ecx,%eax
  0x00007fab7412a375: movabs $0x7fab61b836d0,%r11  ;   {metadata(method data for {method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a37f: movabs $0x260,%r13
  0x00007fab7412a389: jg     0x00007fab7412a399
  0x00007fab7412a38f: movabs $0x270,%r13
  0x00007fab7412a399: mov    (%r11,%r13,1),%r14
  0x00007fab7412a39d: lea    0x1(%r14),%r14
  0x00007fab7412a3a1: mov    %r14,(%r11,%r13,1)
  0x00007fab7412a3a5: jg     0x00007fab7412a4e5  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x00007fab7412a3ab: mov    %rax,%r11
  0x00007fab7412a3ae: inc    %r11d
  0x00007fab7412a3b1: mov    %r11,%r13
  0x00007fab7412a3b4: add    %edi,%r13d
  0x00007fab7412a3b7: dec    %r13d
  0x00007fab7412a3ba: mov    %r9,%r14
  0x00007fab7412a3bd: inc    %r14d
  0x00007fab7412a3c0: jmpq   0x00007fab7412a473  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@119 (line 1779)

  0x00007fab7412a3c5: data16 xchg %ax,%ax
  0x00007fab7412a3c8: movslq %r11d,%rdi
  0x00007fab7412a3cb: cmp    0xc(%rsi),%r11d
  0x00007fab7412a3cf: jae    0x00007fab7412a5f1
  0x00007fab7412a3d5: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x00007fab7412a3da: movslq %r14d,%rbx
  0x00007fab7412a3dd: cmp    0xc(%r8),%r14d
  0x00007fab7412a3e1: jae    0x00007fab7412a5fa
  0x00007fab7412a3e7: movzwl 0x10(%r8,%rbx,2),%ebx  ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x00007fab7412a3ed: cmp    %ebx,%edi
  0x00007fab7412a3ef: movabs $0x7fab61b836d0,%rdi  ;   {metadata(method data for {method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a3f9: movabs $0x2a0,%rbx
  0x00007fab7412a403: jne    0x00007fab7412a413
  0x00007fab7412a409: movabs $0x2b0,%rbx
  0x00007fab7412a413: mov    (%rdi,%rbx,1),%rdx
  0x00007fab7412a417: lea    0x1(%rdx),%rdx
  0x00007fab7412a41b: mov    %rdx,(%rdi,%rbx,1)
  0x00007fab7412a41f: jne    0x00007fab7412a4ac  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@134 (line 1779)

  0x00007fab7412a425: inc    %r11d
  0x00007fab7412a428: inc    %r14d
  0x00007fab7412a42b: movabs $0x7fab61b836d0,%rdi  ;   {metadata(method data for {method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a435: mov    0x100(%rdi),%ebx
  0x00007fab7412a43b: add    $0x8,%ebx
  0x00007fab7412a43e: mov    %ebx,0x100(%rdi)
  0x00007fab7412a444: movabs $0x7fab618978a8,%rdi  ;   {metadata({method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a44e: and    $0xfff8,%ebx
  0x00007fab7412a454: cmp    $0x0,%ebx
  0x00007fab7412a457: je     0x00007fab7412a603  ; OopMap{r8=Oop rsi=Oop off=925}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@143 (line 1780)

  0x00007fab7412a45d: test   %eax,0x1b6b7c9d(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab7412a463: movabs $0x7fab61b836d0,%rdi  ;   {metadata(method data for {method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a46d: incl   0x2c0(%rdi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@143 (line 1780)

  0x00007fab7412a473: cmp    %r13d,%r11d
  0x00007fab7412a476: movabs $0x7fab61b836d0,%rdx  ;   {metadata(method data for {method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a480: movabs $0x280,%rdi
  0x00007fab7412a48a: jge    0x00007fab7412a49a
  0x00007fab7412a490: movabs $0x290,%rdi
  0x00007fab7412a49a: mov    (%rdx,%rdi,1),%rbx
  0x00007fab7412a49e: lea    0x1(%rbx),%rbx
  0x00007fab7412a4a2: mov    %rbx,(%rdx,%rdi,1)
  0x00007fab7412a4a6: jl     0x00007fab7412a3c8  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x00007fab7412a4ac: cmp    %r13d,%r11d
  0x00007fab7412a4af: movabs $0x7fab61b836d0,%rdi  ;   {metadata(method data for {method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a4b9: movabs $0x2d8,%rbx
  0x00007fab7412a4c3: jne    0x00007fab7412a4d3
  0x00007fab7412a4c9: movabs $0x2e8,%rbx
  0x00007fab7412a4d3: mov    (%rdi,%rbx,1),%rdx
  0x00007fab7412a4d7: lea    0x1(%rdx),%rdx
  0x00007fab7412a4db: mov    %rdx,(%rdi,%rbx,1)
  0x00007fab7412a4df: je     0x00007fab7412a53c  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@150 (line 1782)

  0x00007fab7412a4e5: inc    %eax
  0x00007fab7412a4e7: movabs $0x7fab61b836d0,%rdi  ;   {metadata(method data for {method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a4f1: mov    0x100(%rdi),%ebx
  0x00007fab7412a4f7: add    $0x8,%ebx
  0x00007fab7412a4fa: mov    %ebx,0x100(%rdi)
  0x00007fab7412a500: movabs $0x7fab618978a8,%rdi  ;   {metadata({method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a50a: and    $0xfff8,%ebx
  0x00007fab7412a510: cmp    $0x0,%ebx
  0x00007fab7412a513: je     0x00007fab7412a61a  ; OopMap{r8=Oop rsi=Oop off=1113}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x00007fab7412a519: test   %eax,0x1b6b7be1(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab7412a51f: movabs $0x7fab61b836d0,%rdi  ;   {metadata(method data for {method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a529: incl   0x2f8(%rdi)
  0x00007fab7412a52f: mov    0x28(%rsp),%ebx
  0x00007fab7412a533: mov    0x24(%rsp),%edi
  0x00007fab7412a537: jmpq   0x00007fab7412a218  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x00007fab7412a53c: mov    0x20(%rsp),%edx
  0x00007fab7412a540: sub    %edx,%eax
  0x00007fab7412a542: add    $0x40,%rsp
  0x00007fab7412a546: pop    %rbp
  0x00007fab7412a547: test   %eax,0x1b6b7bb3(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7412a54d: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@157 (line 1784)

  0x00007fab7412a54e: mov    $0xffffffff,%eax
  0x00007fab7412a553: add    $0x40,%rsp
  0x00007fab7412a557: pop    %rbp
  0x00007fab7412a558: test   %eax,0x1b6b7ba2(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7412a55e: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@165 (line 1788)

  0x00007fab7412a55f: add    $0x40,%rsp
  0x00007fab7412a563: pop    %rbp
  0x00007fab7412a564: test   %eax,0x1b6b7b96(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7412a56a: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@32 (line 1763)

  0x00007fab7412a56b: movabs $0x7fab61b836d0,%rax  ;   {metadata(method data for {method} {0x00007fab618978a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7412a575: incl   0x170(%rax)
  0x00007fab7412a57b: jmpq   0x00007fab7412a585  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@12 (line 1757)

  0x00007fab7412a580: mov    $0xffffffff,%ecx   ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@16 (line 1757)

  0x00007fab7412a585: mov    %rcx,%rax
  0x00007fab7412a588: add    $0x40,%rsp
  0x00007fab7412a58c: pop    %rbp
  0x00007fab7412a58d: test   %eax,0x1b6b7b6d(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7412a593: retq   
  0x00007fab7412a594: mov    %rax,0x8(%rsp)
  0x00007fab7412a599: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412a5a1: callq  0x00007fab741005e0  ; OopMap{rsi=Oop r8=Oop off=1254}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1756)
                                                ;   {runtime_call}
  0x00007fab7412a5a6: jmpq   0x00007fab7412a106
  0x00007fab7412a5ab: callq  0x00007fab740fc000  ; OopMap{r8=Oop rsi=Oop off=1264}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x00007fab7412a5b0: callq  0x00007fab740fc000  ; OopMap{r8=Oop rsi=Oop off=1269}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x00007fab7412a5b5: mov    %r9,(%rsp)
  0x00007fab7412a5b9: callq  0x00007fab740fb940  ; OopMap{r8=Oop rsi=Oop off=1278}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x00007fab7412a5be: callq  0x00007fab740fc000  ; OopMap{r8=Oop rsi=Oop off=1283}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x00007fab7412a5c3: callq  0x00007fab740fc000  ; OopMap{r8=Oop rsi=Oop off=1288}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x00007fab7412a5c8: mov    %rax,(%rsp)
  0x00007fab7412a5cc: callq  0x00007fab740fb940  ; OopMap{r8=Oop rsi=Oop off=1297}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x00007fab7412a5d1: mov    %rax,(%rsp)
  0x00007fab7412a5d5: callq  0x00007fab740fb940  ; OopMap{r8=Oop rsi=Oop off=1306}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@82 (line 1772)
                                                ;   {runtime_call}
  0x00007fab7412a5da: mov    %r11,0x8(%rsp)
  0x00007fab7412a5df: movq   $0x58,(%rsp)
  0x00007fab7412a5e7: callq  0x00007fab741005e0  ; OopMap{r8=Oop rsi=Oop off=1324}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@88 (line 1772)
                                                ;   {runtime_call}
  0x00007fab7412a5ec: jmpq   0x00007fab7412a322
  0x00007fab7412a5f1: mov    %r11,(%rsp)
  0x00007fab7412a5f5: callq  0x00007fab740fb940  ; OopMap{r8=Oop rsi=Oop off=1338}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x00007fab7412a5fa: mov    %r14,(%rsp)
  0x00007fab7412a5fe: callq  0x00007fab740fb940  ; OopMap{r8=Oop rsi=Oop off=1347}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x00007fab7412a603: mov    %rdi,0x8(%rsp)
  0x00007fab7412a608: movq   $0x8f,(%rsp)
  0x00007fab7412a610: callq  0x00007fab741005e0  ; OopMap{r8=Oop rsi=Oop off=1365}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@143 (line 1780)
                                                ;   {runtime_call}
  0x00007fab7412a615: jmpq   0x00007fab7412a45d
  0x00007fab7412a61a: mov    %rdi,0x8(%rsp)
  0x00007fab7412a61f: movq   $0xa1,(%rsp)
  0x00007fab7412a627: callq  0x00007fab741005e0  ; OopMap{r8=Oop rsi=Oop off=1388}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {runtime_call}
  0x00007fab7412a62c: jmpq   0x00007fab7412a519
  0x00007fab7412a631: nop
  0x00007fab7412a632: nop
  0x00007fab7412a633: mov    0x2c0(%r15),%rax
  0x00007fab7412a63a: movabs $0x0,%r10
  0x00007fab7412a644: mov    %r10,0x2c0(%r15)
  0x00007fab7412a64b: movabs $0x0,%r10
  0x00007fab7412a655: mov    %r10,0x2c8(%r15)
  0x00007fab7412a65c: add    $0x40,%rsp
  0x00007fab7412a660: pop    %rbp
  0x00007fab7412a661: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7412a666: hlt    
  0x00007fab7412a667: hlt    
  0x00007fab7412a668: hlt    
  0x00007fab7412a669: hlt    
  0x00007fab7412a66a: hlt    
  0x00007fab7412a66b: hlt    
  0x00007fab7412a66c: hlt    
  0x00007fab7412a66d: hlt    
  0x00007fab7412a66e: hlt    
  0x00007fab7412a66f: hlt    
  0x00007fab7412a670: hlt    
  0x00007fab7412a671: hlt    
  0x00007fab7412a672: hlt    
  0x00007fab7412a673: hlt    
  0x00007fab7412a674: hlt    
  0x00007fab7412a675: hlt    
  0x00007fab7412a676: hlt    
  0x00007fab7412a677: hlt    
  0x00007fab7412a678: hlt    
  0x00007fab7412a679: hlt    
  0x00007fab7412a67a: hlt    
  0x00007fab7412a67b: hlt    
  0x00007fab7412a67c: hlt    
  0x00007fab7412a67d: hlt    
  0x00007fab7412a67e: hlt    
  0x00007fab7412a67f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab7412a680: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7412a685: mov    %rsp,-0x28(%rsp)
  0x00007fab7412a68a: sub    $0x80,%rsp
  0x00007fab7412a691: mov    %rax,0x78(%rsp)
  0x00007fab7412a696: mov    %rcx,0x70(%rsp)
  0x00007fab7412a69b: mov    %rdx,0x68(%rsp)
  0x00007fab7412a6a0: mov    %rbx,0x60(%rsp)
  0x00007fab7412a6a5: mov    %rbp,0x50(%rsp)
  0x00007fab7412a6aa: mov    %rsi,0x48(%rsp)
  0x00007fab7412a6af: mov    %rdi,0x40(%rsp)
  0x00007fab7412a6b4: mov    %r8,0x38(%rsp)
  0x00007fab7412a6b9: mov    %r9,0x30(%rsp)
  0x00007fab7412a6be: mov    %r10,0x28(%rsp)
  0x00007fab7412a6c3: mov    %r11,0x20(%rsp)
  0x00007fab7412a6c8: mov    %r12,0x18(%rsp)
  0x00007fab7412a6cd: mov    %r13,0x10(%rsp)
  0x00007fab7412a6d2: mov    %r14,0x8(%rsp)
  0x00007fab7412a6d7: mov    %r15,(%rsp)
  0x00007fab7412a6db: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7412a6e5: movabs $0x7fab7412a685,%rsi  ;   {internal_word}
  0x00007fab7412a6ef: mov    %rsp,%rdx
  0x00007fab7412a6f2: and    $0xfffffffffffffff0,%rsp
  0x00007fab7412a6f6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7412a6fb: hlt    
[Deopt Handler Code]
  0x00007fab7412a6fc: movabs $0x7fab7412a6fc,%r10  ;   {section_word}
  0x00007fab7412a706: push   %r10
  0x00007fab7412a708: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7412a70d: hlt    
  0x00007fab7412a70e: hlt    
  0x00007fab7412a70f: hlt    
<nmethod compile_id='69' compiler='C1' level='3' entry='0x00007fab7412a0c0' size='3232' address='0x00007fab74129f10' relocation_offset='312' insts_offset='432' stub_offset='1904' scopes_data_offset='2056' scopes_pcs_offset='2448' dependencies_offset='3184' nul_chk_table_offset='3192' metadata_offset='2048' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='117' backedge_count='5250' iicount='117' stamp='0.264'/>
<writer thread='140373948942080'/>
<task_queued compile_id='70' method='sun/misc/URLClassPath getNextLoader ([II)Lsun/misc/URLClassPath$Loader;' bytes='88' count='256' iicount='256' level='3' stamp='0.264' comment='tiered' hot_count='256'/>
<task_queued compile_id='71' method='sun/misc/URLClassPath getLoader (I)Lsun/misc/URLClassPath$Loader;' bytes='243' count='256' backedge_count='17' iicount='256' level='3' stamp='0.264' comment='tiered' hot_count='256'/>
<task_queued compile_id='72' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='384' iicount='384' level='3' stamp='0.264' comment='tiered' hot_count='384'/>
<task_queued compile_id='73' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='302' iicount='302' level='3' stamp='0.264' comment='tiered' hot_count='302'/>
[Loaded jdk.vm.ci.code.stack.InspectedFrame from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotStackFrameReference from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
sun/misc/URLClassPath.getNextLoader  [0x00007fab7412adc0, 0x00007fab7412b7e8]  2600 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61a982a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;
  # this:     rsi:rsi   = &apos;sun/misc/URLClassPath&apos;
  # parm0:    rdx:rdx   = &apos;[I&apos;
  # parm1:    rcx       = int
  #           [sp+0xb0]  (sp of caller)
  0x00007fab7412adc0: mov    0x8(%rsi),%r10d
  0x00007fab7412adc4: shl    $0x3,%r10
  0x00007fab7412adc8: cmp    %rax,%r10
  0x00007fab7412adcb: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7412add1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7412addc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7412ade0: mov    %eax,-0x14000(%rsp)
  0x00007fab7412ade7: push   %rbp
  0x00007fab7412ade8: sub    $0xa0,%rsp
  0x00007fab7412adef: lea    0x88(%rsp),%rdi
  0x00007fab7412adf7: mov    %rsi,0x8(%rdi)
  0x00007fab7412adfb: mov    (%rsi),%rax
  0x00007fab7412adfe: mov    %rax,%rbx
  0x00007fab7412ae01: and    $0x7,%rbx
  0x00007fab7412ae05: cmp    $0x5,%rbx
  0x00007fab7412ae09: jne    0x00007fab7412ae90
  0x00007fab7412ae0f: mov    0x8(%rsi),%ebx
  0x00007fab7412ae12: shl    $0x3,%rbx
  0x00007fab7412ae16: mov    0xa8(%rbx),%rbx
  0x00007fab7412ae1d: or     %r15,%rbx
  0x00007fab7412ae20: xor    %rax,%rbx
  0x00007fab7412ae23: and    $0xffffffffffffff87,%rbx
  0x00007fab7412ae27: je     0x00007fab7412aeb8
  0x00007fab7412ae2d: test   $0x7,%rbx
  0x00007fab7412ae34: jne    0x00007fab7412ae7d
  0x00007fab7412ae36: test   $0x300,%rbx
  0x00007fab7412ae3d: jne    0x00007fab7412ae5c
  0x00007fab7412ae3f: and    $0x37f,%rax
  0x00007fab7412ae46: mov    %rax,%rbx
  0x00007fab7412ae49: or     %r15,%rbx
  0x00007fab7412ae4c: lock cmpxchg %rbx,(%rsi)
  0x00007fab7412ae51: jne    0x00007fab7412b566
  0x00007fab7412ae57: jmpq   0x00007fab7412aeb8
  0x00007fab7412ae5c: mov    0x8(%rsi),%ebx
  0x00007fab7412ae5f: shl    $0x3,%rbx
  0x00007fab7412ae63: mov    0xa8(%rbx),%rbx
  0x00007fab7412ae6a: or     %r15,%rbx
  0x00007fab7412ae6d: lock cmpxchg %rbx,(%rsi)
  0x00007fab7412ae72: jne    0x00007fab7412b566
  0x00007fab7412ae78: jmpq   0x00007fab7412aeb8
  0x00007fab7412ae7d: mov    0x8(%rsi),%ebx
  0x00007fab7412ae80: shl    $0x3,%rbx
  0x00007fab7412ae84: mov    0xa8(%rbx),%rbx
  0x00007fab7412ae8b: lock cmpxchg %rbx,(%rsi)
  0x00007fab7412ae90: mov    (%rsi),%rax
  0x00007fab7412ae93: or     $0x1,%rax
  0x00007fab7412ae97: mov    %rax,(%rdi)
  0x00007fab7412ae9a: lock cmpxchg %rdi,(%rsi)
  0x00007fab7412ae9f: je     0x00007fab7412aeb8
  0x00007fab7412aea5: sub    %rsp,%rax
  0x00007fab7412aea8: and    $0xfffffffffffff007,%rax
  0x00007fab7412aeaf: mov    %rax,(%rdi)
  0x00007fab7412aeb2: jne    0x00007fab7412b566
  0x00007fab7412aeb8: movabs $0x7fab61b83a40,%rax  ;   {metadata(method data for {method} {0x00007fab61a982a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412aec2: mov    0xfc(%rax),%edi
  0x00007fab7412aec8: add    $0x8,%edi
  0x00007fab7412aecb: mov    %edi,0xfc(%rax)
  0x00007fab7412aed1: movabs $0x7fab61a982a0,%rax  ;   {metadata({method} {0x00007fab61a982a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412aedb: and    $0x1ff8,%edi
  0x00007fab7412aee1: cmp    $0x0,%edi
  0x00007fab7412aee4: je     0x00007fab7412b579  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.meta.ConstantPool from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
; - sun.misc.URLClassPath::getNextLoader@0 (line 469)

  0x00007fab7412aeea: movsbl 0xc(%rsi),%eax     ;*getfield closed {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@1 (line 469)

  0x00007fab7412aeee: cmp    $0x0,%eax
  0x00007fab7412aef1: movabs $0x7fab61b83a40,%rax  ;   {metadata(method data for {method} {0x00007fab61a982a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412aefb: movabs $0x130,%rdi
  0x00007fab7412af05: je     0x00007fab7412af15
  0x00007fab7412af0b: movabs $0x140,%rdi
  0x00007fab7412af15: mov    (%rax,%rdi,1),%rbx
  0x00007fab7412af19: lea    0x1(%rbx),%rbx
  0x00007fab7412af1d: mov    %rbx,(%rax,%rdi,1)
  0x00007fab7412af21: jne    0x00007fab7412b455  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@4 (line 469)

  0x00007fab7412af27: cmp    $0x0,%rdx
  0x00007fab7412af2b: movabs $0x7fab61b83a40,%rax  ;   {metadata(method data for {method} {0x00007fab61a982a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412af35: movabs $0x150,%rdi
  0x00007fab7412af3f: je     0x00007fab7412af4f
  0x00007fab7412af45: movabs $0x160,%rdi
  0x00007fab7412af4f: mov    (%rax,%rdi,1),%rbx
  0x00007fab7412af53: lea    0x1(%rbx),%rbx
  0x00007fab7412af57: mov    %rbx,(%rax,%rdi,1)
  0x00007fab7412af5b: je     0x00007fab7412b3e8  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@10 (line 472)

  0x00007fab7412af61: mov    0xc(%rdx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@15 (line 473)
                                                ; implicit exception: dispatches to 0x00007fab7412b590
  0x00007fab7412af64: cmp    %eax,%ecx
  0x00007fab7412af66: movabs $0x7fab61b83a40,%rax  ;   {metadata(method data for {method} {0x00007fab61a982a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412af70: movabs $0x170,%rdi
  0x00007fab7412af7a: jge    0x00007fab7412af8a
  0x00007fab7412af80: movabs $0x180,%rdi
  0x00007fab7412af8a: mov    (%rax,%rdi,1),%rbx
  0x00007fab7412af8e: lea    0x1(%rbx),%rbx
  0x00007fab7412af92: mov    %rbx,(%rax,%rdi,1)
  0x00007fab7412af96: jge    0x00007fab7412b39b  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@16 (line 473)

  0x00007fab7412af9c: mov    0x18(%rsi),%ebx
  0x00007fab7412af9f: shl    $0x3,%rbx          ;*getfield loaders {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@20 (line 474)

  0x00007fab7412afa3: movslq %ecx,%rax
  0x00007fab7412afa6: cmp    0xc(%rdx),%ecx
  0x00007fab7412afa9: jae    0x00007fab7412b595
  0x00007fab7412afaf: mov    0x10(%rdx,%rax,4),%r8d  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@25 (line 474)

  0x00007fab7412afb4: cmp    (%rbx),%rax        ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ; implicit exception: dispatches to 0x00007fab7412b59e
  0x00007fab7412afb7: mov    %rbx,%rax
  0x00007fab7412afba: movabs $0x7fab61b83a40,%rsi  ;   {metadata(method data for {method} {0x00007fab61a982a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412afc4: movabs $0x7c0016f60,%r10  ;   {metadata(&apos;java/util/ArrayList&apos;)}
  0x00007fab7412afce: mov    %r10,0x1a0(%rsi)
  0x00007fab7412afd5: addq   $0x1,0x1a8(%rsi)
  0x00007fab7412afdd: movabs $0x7fab61b841b8,%rax  ;   {metadata(method data for {method} {0x00007fab6197b908} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412afe7: mov    0xfc(%rax),%esi
  0x00007fab7412afed: add    $0x8,%esi
  0x00007fab7412aff0: mov    %esi,0xfc(%rax)
  0x00007fab7412aff6: movabs $0x7fab6197b908,%rax  ;   {metadata({method} {0x00007fab6197b908} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412b000: and    $0x7ffff8,%esi
  0x00007fab7412b006: cmp    $0x0,%esi
  0x00007fab7412b009: je     0x00007fab7412b5a3
  0x00007fab7412b00f: mov    %rbx,%rax
  0x00007fab7412b012: movabs $0x7fab61b841b8,%rsi  ;   {metadata(method data for {method} {0x00007fab6197b908} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412b01c: addq   $0x1,0x130(%rsi)
  0x00007fab7412b024: movabs $0x7fab61b843d8,%rax  ;   {metadata(method data for {method} {0x00007fab6197c3c8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412b02e: mov    0xfc(%rax),%esi
  0x00007fab7412b034: add    $0x8,%esi
  0x00007fab7412b037: mov    %esi,0xfc(%rax)
  0x00007fab7412b03d: movabs $0x7fab6197c3c8,%rax  ;   {metadata({method} {0x00007fab6197c3c8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412b047: and    $0x7ffff8,%esi
  0x00007fab7412b04d: cmp    $0x0,%esi
  0x00007fab7412b050: je     0x00007fab7412b5ba
  0x00007fab7412b056: mov    0x10(%rbx),%eax    ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@2 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)

  0x00007fab7412b059: cmp    %eax,%r8d
  0x00007fab7412b05c: movabs $0x7fab61b843d8,%rax  ;   {metadata(method data for {method} {0x00007fab6197c3c8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412b066: movabs $0x130,%rsi
  0x00007fab7412b070: jl     0x00007fab7412b080
  0x00007fab7412b076: movabs $0x140,%rsi
  0x00007fab7412b080: mov    (%rax,%rsi,1),%rdi
  0x00007fab7412b084: lea    0x1(%rdi),%rdi
  0x00007fab7412b088: mov    %rdi,(%rax,%rsi,1)
  0x00007fab7412b08c: jge    0x00007fab7412b4a2  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@5 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)

  0x00007fab7412b092: mov    %rbx,%rax
  0x00007fab7412b095: movabs $0x7fab61b841b8,%rsi  ;   {metadata(method data for {method} {0x00007fab6197b908} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412b09f: movabs $0x7c0016f60,%r10  ;   {metadata(&apos;java/util/ArrayList&apos;)}
  0x00007fab7412b0a9: mov    %r10,0x150(%rsi)
  0x00007fab7412b0b0: addq   $0x1,0x158(%rsi)
  0x00007fab7412b0b8: movabs $0x7fab61b84a00,%rax  ;   {metadata(method data for {method} {0x00007fab6197b850} &apos;elementData&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412b0c2: mov    0xfc(%rax),%esi
  0x00007fab7412b0c8: add    $0x8,%esi
  0x00007fab7412b0cb: mov    %esi,0xfc(%rax)
  0x00007fab7412b0d1: movabs $0x7fab6197b850,%rax  ;   {metadata({method} {0x00007fab6197b850} &apos;elementData&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412b0db: and    $0x7ffff8,%esi
  0x00007fab7412b0e1: cmp    $0x0,%esi
  0x00007fab7412b0e4: je     0x00007fab7412b5d1
  0x00007fab7412b0ea: mov    0x14(%rbx),%eax
  0x00007fab7412b0ed: shl    $0x3,%rax          ;*getfield elementData {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::elementData@1 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)

  0x00007fab7412b0f1: movslq %r8d,%rsi
  0x00007fab7412b0f4: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x00007fab7412b5e8
  0x00007fab7412b0f8: jae    0x00007fab7412b5f2
  0x00007fab7412b0fe: mov    0x10(%rax,%rsi,4),%eax
  0x00007fab7412b102: shl    $0x3,%rax          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)

  0x00007fab7412b106: cmp    $0x0,%rax
  0x00007fab7412b10a: jne    0x00007fab7412b125
  0x00007fab7412b10c: movabs $0x7fab61b83a40,%rsi  ;   {metadata(method data for {method} {0x00007fab61a982a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412b116: orl    $0x100,0x220(%rsi)
  0x00007fab7412b120: jmpq   0x00007fab7412b342
  0x00007fab7412b125: movabs $0x7c003ab78,%rdi  ;   {metadata(&apos;sun/misc/URLClassPath$Loader&apos;)}
  0x00007fab7412b12f: mov    0x8(%rax),%esi
  0x00007fab7412b132: shl    $0x3,%rsi
  0x00007fab7412b136: cmp    0x30(%rsi),%rdi
  0x00007fab7412b13a: jne    0x00007fab7412b326
  0x00007fab7412b140: movabs $0x7fab61b83a40,%rsi  ;   {metadata(method data for {method} {0x00007fab61a982a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412b14a: mov    0x8(%rax),%edi
  0x00007fab7412b14d: shl    $0x3,%rdi
  0x00007fab7412b151: cmp    0x238(%rsi),%rdi
  0x00007fab7412b158: jne    0x00007fab7412b167
  0x00007fab7412b15a: addq   $0x1,0x240(%rsi)
  0x00007fab7412b162: jmpq   0x00007fab7412b342
  0x00007fab7412b167: cmp    0x248(%rsi),%rdi
  0x00007fab7412b16e: jne    0x00007fab7412b17d
  0x00007fab7412b170: addq   $0x1,0x250(%rsi)
  0x00007fab7412b178: jmpq   0x00007fab7412b342
  0x00007fab7412b17d: cmp    0x258(%rsi),%rdi
  0x00007fab7412b184: jne    0x00007fab7412b193
  0x00007fab7412b186: addq   $0x1,0x260(%rsi)
  0x00007fab7412b18e: jmpq   0x00007fab7412b342
  0x00007fab7412b193: cmp    0x268(%rsi),%rdi
  0x00007fab7412b19a: jne    0x00007fab7412b1a9
  0x00007fab7412b19c: addq   $0x1,0x270(%rsi)
  0x00007fab7412b1a4: jmpq   0x00007fab7412b342
  0x00007fab7412b1a9: cmp    0x278(%rsi),%rdi
  0x00007fab7412b1b0: jne    0x00007fab7412b1bf
  0x00007fab7412b1b2: addq   $0x1,0x280(%rsi)
  0x00007fab7412b1ba: jmpq   0x00007fab7412b342
  0x00007fab7412b1bf: cmp    0x288(%rsi),%rdi
  0x00007fab7412b1c6: jne    0x00007fab7412b1d5
  0x00007fab7412b1c8: addq   $0x1,0x290(%rsi)
  0x00007fab7412b1d0: jmpq   0x00007fab7412b342
  0x00007fab7412b1d5: cmp    0x298(%rsi),%rdi
  0x00007fab7412b1dc: jne    0x00007fab7412b1eb
  0x00007fab7412b1de: addq   $0x1,0x2a0(%rsi)
  0x00007fab7412b1e6: jmpq   0x00007fab7412b342
  0x00007fab7412b1eb: cmp    0x2a8(%rsi),%rdi
  0x00007fab7412b1f2: jne    0x00007fab7412b201
  0x00007fab7412b1f4: addq   $0x1,0x2b0(%rsi)
  0x00007fab7412b1fc: jmpq   0x00007fab7412b342
  0x00007fab7412b201: cmpq   $0x0,0x238(%rsi)
  0x00007fab7412b20c: jne    0x00007fab7412b225
  0x00007fab7412b20e: mov    %rdi,0x238(%rsi)
  0x00007fab7412b215: movq   $0x1,0x240(%rsi)
  0x00007fab7412b220: jmpq   0x00007fab7412b342
  0x00007fab7412b225: cmpq   $0x0,0x248(%rsi)
  0x00007fab7412b230: jne    0x00007fab7412b249
  0x00007fab7412b232: mov    %rdi,0x248(%rsi)
  0x00007fab7412b239: movq   $0x1,0x250(%rsi)
  0x00007fab7412b244: jmpq   0x00007fab7412b342
  0x00007fab7412b249: cmpq   $0x0,0x258(%rsi)
  0x00007fab7412b254: jne    0x00007fab7412b26d
  0x00007fab7412b256: mov    %rdi,0x258(%rsi)
  0x00007fab7412b25d: movq   $0x1,0x260(%rsi)
  0x00007fab7412b268: jmpq   0x00007fab7412b342
  0x00007fab7412b26d: cmpq   $0x0,0x268(%rsi)
  0x00007fab7412b278: jne    0x00007fab7412b291
  0x00007fab7412b27a: mov    %rdi,0x268(%rsi)
  0x00007fab7412b281: movq   $0x1,0x270(%rsi)
  0x00007fab7412b28c: jmpq   0x00007fab7412b342
  0x00007fab7412b291: cmpq   $0x0,0x278(%rsi)
  0x00007fab7412b29c: jne    0x00007fab7412b2b5
  0x00007fab7412b29e: mov    %rdi,0x278(%rsi)
  0x00007fab7412b2a5: movq   $0x1,0x280(%rsi)
  0x00007fab7412b2b0: jmpq   0x00007fab7412b342
  0x00007fab7412b2b5: cmpq   $0x0,0x288(%rsi)
  0x00007fab7412b2c0: jne    0x00007fab7412b2d9
  0x00007fab7412b2c2: mov    %rdi,0x288(%rsi)
  0x00007fab7412b2c9: movq   $0x1,0x290(%rsi)
  0x00007fab7412b2d4: jmpq   0x00007fab7412b342
  0x00007fab7412b2d9: cmpq   $0x0,0x298(%rsi)
  0x00007fab7412b2e4: jne    0x00007fab7412b2fd
  0x00007fab7412b2e6: mov    %rdi,0x298(%rsi)
  0x00007fab7412b2ed: movq   $0x1,0x2a0(%rsi)
  0x00007fab7412b2f8: jmpq   0x00007fab7412b342
  0x00007fab7412b2fd: cmpq   $0x0,0x2a8(%rsi)
  0x00007fab7412b308: jne    0x00007fab7412b321
  0x00007fab7412b30a: mov    %rdi,0x2a8(%rsi)
  0x00007fab7412b311: movq   $0x1,0x2b0(%rsi)
  0x00007fab7412b31c: jmpq   0x00007fab7412b342
  0x00007fab7412b321: jmpq   0x00007fab7412b342
  0x00007fab7412b326: movabs $0x7fab61b83a40,%rsi  ;   {metadata(method data for {method} {0x00007fab61a982a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412b330: subq   $0x1,0x228(%rsi)
  0x00007fab7412b338: jmpq   0x00007fab7412b5fb
  0x00007fab7412b33d: jmpq   0x00007fab7412b342
  0x00007fab7412b342: mov    %rax,%rdx          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@29 (line 474)

  0x00007fab7412b345: movabs $0x7fab61b83a40,%rax  ;   {metadata(method data for {method} {0x00007fab61a982a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412b34f: incl   0x2c0(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@36 (line 475)

  0x00007fab7412b355: lea    0x88(%rsp),%rax
  0x00007fab7412b35d: mov    0x8(%rax),%rdi
  0x00007fab7412b361: mov    (%rdi),%rsi
  0x00007fab7412b364: and    $0x7,%rsi
  0x00007fab7412b368: cmp    $0x5,%rsi
  0x00007fab7412b36c: je     0x00007fab7412b389
  0x00007fab7412b372: mov    (%rax),%rsi
  0x00007fab7412b375: test   %rsi,%rsi
  0x00007fab7412b378: je     0x00007fab7412b389
  0x00007fab7412b37e: lock cmpxchg %rsi,(%rdi)
  0x00007fab7412b383: jne    0x00007fab7412b604
  0x00007fab7412b389: mov    %rdx,%rax
  0x00007fab7412b38c: add    $0xa0,%rsp
  0x00007fab7412b393: pop    %rbp
  0x00007fab7412b394: test   %eax,0x1b6b6d66(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7412b39a: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@79 (line 479)

  0x00007fab7412b39b: lea    0x88(%rsp),%rax
  0x00007fab7412b3a3: mov    0x8(%rax),%rsi
  0x00007fab7412b3a7: mov    (%rsi),%rdx
  0x00007fab7412b3aa: and    $0x7,%rdx
  0x00007fab7412b3ae: cmp    $0x5,%rdx
  0x00007fab7412b3b2: je     0x00007fab7412b3cf
  0x00007fab7412b3b8: mov    (%rax),%rdx
  0x00007fab7412b3bb: test   %rdx,%rdx
  0x00007fab7412b3be: je     0x00007fab7412b3cf
  0x00007fab7412b3c4: lock cmpxchg %rdx,(%rsi)
  0x00007fab7412b3c9: jne    0x00007fab7412b61a
  0x00007fab7412b3cf: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fab7412b3d9: add    $0xa0,%rsp
  0x00007fab7412b3e0: pop    %rbp
  0x00007fab7412b3e1: test   %eax,0x1b6b6d19(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7412b3e7: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@81 (line 481)

  0x00007fab7412b3e8: mov    %rsi,%rdx
  0x00007fab7412b3eb: movabs $0x7fab61b83a40,%rdi  ;   {metadata(method data for {method} {0x00007fab61a982a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412b3f5: addq   $0x1,0x718(%rdi)
  0x00007fab7412b3fd: mov    %rcx,%rdx          ;*invokespecial getLoader {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@84 (line 484)

  0x00007fab7412b400: nop
  0x00007fab7412b401: nop
  0x00007fab7412b402: nop
  0x00007fab7412b403: nop
  0x00007fab7412b404: nop
  0x00007fab7412b405: nop
  0x00007fab7412b406: nop
  0x00007fab7412b407: callq  0x00007fab74047d60  ; OopMap{[144]=Oop off=1612}
                                                ;*invokespecial getLoader {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@84 (line 484)
                                                ;   {optimized virtual_call}
  0x00007fab7412b40c: mov    %rax,%rdx          ;*invokespecial getLoader {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@84 (line 484)

  0x00007fab7412b40f: lea    0x88(%rsp),%rax
  0x00007fab7412b417: mov    0x8(%rax),%rdi
  0x00007fab7412b41b: mov    (%rdi),%rsi
  0x00007fab7412b41e: and    $0x7,%rsi
  0x00007fab7412b422: cmp    $0x5,%rsi
  0x00007fab7412b426: je     0x00007fab7412b443
  0x00007fab7412b42c: mov    (%rax),%rsi
  0x00007fab7412b42f: test   %rsi,%rsi
  0x00007fab7412b432: je     0x00007fab7412b443
  0x00007fab7412b438: lock cmpxchg %rsi,(%rdi)
  0x00007fab7412b43d: jne    0x00007fab7412b630
  0x00007fab7412b443: mov    %rdx,%rax
  0x00007fab7412b446: add    $0xa0,%rsp
  0x00007fab7412b44d: pop    %rbp
  0x00007fab7412b44e: test   %eax,0x1b6b6cac(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7412b454: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@87 (line 484)

  0x00007fab7412b455: lea    0x88(%rsp),%rax
  0x00007fab7412b45d: mov    0x8(%rax),%rsi
  0x00007fab7412b461: mov    (%rsi),%rdx
  0x00007fab7412b464: and    $0x7,%rdx
  0x00007fab7412b468: cmp    $0x5,%rdx
  0x00007fab7412b46c: je     0x00007fab7412b489
  0x00007fab7412b472: mov    (%rax),%rdx
  0x00007fab7412b475: test   %rdx,%rdx
  0x00007fab7412b478: je     0x00007fab7412b489
  0x00007fab7412b47e: lock cmpxchg %rdx,(%rsi)
  0x00007fab7412b483: jne    0x00007fab7412b646
  0x00007fab7412b489: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fab7412b493: add    $0xa0,%rsp
  0x00007fab7412b49a: pop    %rbp
  0x00007fab7412b49b: test   %eax,0x1b6b6c5f(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7412b4a1: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@8 (line 470)

  0x00007fab7412b4a2: mov    %ecx,0x70(%rsp)
  0x00007fab7412b4a6: mov    %rdx,0x78(%rsp)
  0x00007fab7412b4ab: nopl   0x0(%rax,%rax,1)
  0x00007fab7412b4b0: jmpq   0x00007fab7412b66b  ;   {no_reloc}
  0x00007fab7412b4b5: add    %al,(%rax)
  0x00007fab7412b4b7: add    %al,(%rax)
  0x00007fab7412b4b9: add    %al,0x162ba(%rax)
  0x00007fab7412b4bf: add    %al,(%rdi,%rcx,1)
  0x00007fab7412b4c2: test   %esi,0x49000001(%rbx)
  0x00007fab7412b4c8: mov    0x60(%rdi),%eax
  0x00007fab7412b4cb: lea    0x20(%rax),%rdi
  0x00007fab7412b4cf: cmp    0x70(%r15),%rdi
  0x00007fab7412b4d3: ja     0x00007fab7412b67a
  0x00007fab7412b4d9: mov    %rdi,0x60(%r15)
  0x00007fab7412b4dd: mov    0xa8(%rdx),%rcx
  0x00007fab7412b4e4: mov    %rcx,(%rax)
  0x00007fab7412b4e7: mov    %rdx,%rcx
  0x00007fab7412b4ea: shr    $0x3,%rcx
  0x00007fab7412b4ee: mov    %ecx,0x8(%rax)
  0x00007fab7412b4f1: xor    %rcx,%rcx
  0x00007fab7412b4f4: mov    %ecx,0xc(%rax)
  0x00007fab7412b4f7: xor    %rcx,%rcx
  0x00007fab7412b4fa: mov    %rcx,0x10(%rax)
  0x00007fab7412b4fe: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)

  0x00007fab7412b502: mov    %rbx,%rdx
  0x00007fab7412b505: movabs $0x7fab61b843d8,%rsi  ;   {metadata(method data for {method} {0x00007fab6197c3c8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412b50f: addq   $0x1,0x150(%rsi)
  0x00007fab7412b517: mov    %r8,%rdx
  0x00007fab7412b51a: mov    %rbx,%rsi          ;*invokespecial outOfBoundsMsg {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)

  0x00007fab7412b51d: mov    %rbx,0x80(%rsp)
  0x00007fab7412b525: mov    %r8d,0x74(%rsp)
  0x00007fab7412b52a: mov    %rax,0x68(%rsp)
  0x00007fab7412b52f: callq  0x00007fab74047d60  ; OopMap{[104]=Oop [120]=Oop [128]=Oop [144]=Oop off=1908}
                                                ;*invokespecial outOfBoundsMsg {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {optimized virtual_call}
  0x00007fab7412b534: mov    0x68(%rsp),%rdx
  0x00007fab7412b539: movabs $0x7fab61b843d8,%rsi  ;   {metadata(method data for {method} {0x00007fab6197c3c8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412b543: addq   $0x1,0x160(%rsi)
  0x00007fab7412b54b: mov    %rax,%rdx
  0x00007fab7412b54e: mov    0x68(%rsp),%rsi    ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@17 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)

  0x00007fab7412b553: nop
  0x00007fab7412b554: nop
  0x00007fab7412b555: nop
  0x00007fab7412b556: nop
  0x00007fab7412b557: callq  0x00007fab74047d60  ; OopMap{[104]=Oop [120]=Oop [128]=Oop [144]=Oop off=1948}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@17 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {optimized virtual_call}
  0x00007fab7412b55c: mov    0x68(%rsp),%rax
  0x00007fab7412b561: jmpq   0x00007fab7412b6b2
  0x00007fab7412b566: mov    %rsi,0x8(%rsp)
  0x00007fab7412b56b: mov    %rdi,(%rsp)
  0x00007fab7412b56f: callq  0x00007fab740fea60  ; OopMap{rsi=Oop rdx=Oop [144]=Oop off=1972}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getNextLoader@-1 (line 469)
                                                ;   {runtime_call}
  0x00007fab7412b574: jmpq   0x00007fab7412aeb8
  0x00007fab7412b579: mov    %rax,0x8(%rsp)
  0x00007fab7412b57e: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412b586: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop [144]=Oop off=1995}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getNextLoader@-1 (line 469)
                                                ;   {runtime_call}
  0x00007fab7412b58b: jmpq   0x00007fab7412aeea
  0x00007fab7412b590: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rdx=Oop [144]=Oop off=2005}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@15 (line 473)
                                                ;   {runtime_call}
  0x00007fab7412b595: mov    %rcx,(%rsp)
  0x00007fab7412b599: callq  0x00007fab740fb940  ; OopMap{rdx=Oop rbx=Oop [144]=Oop off=2014}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@25 (line 474)
                                                ;   {runtime_call}
  0x00007fab7412b59e: callq  0x00007fab740fc000  ; OopMap{rdx=Oop rbx=Oop [144]=Oop off=2019}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {runtime_call}
  0x00007fab7412b5a3: mov    %rax,0x8(%rsp)
  0x00007fab7412b5a8: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412b5b0: callq  0x00007fab741005e0  ; OopMap{rdx=Oop rbx=Oop [144]=Oop off=2037}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::get@-1 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {runtime_call}
  0x00007fab7412b5b5: jmpq   0x00007fab7412b00f
  0x00007fab7412b5ba: mov    %rax,0x8(%rsp)
  0x00007fab7412b5bf: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412b5c7: callq  0x00007fab741005e0  ; OopMap{rdx=Oop rbx=Oop [144]=Oop off=2060}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::rangeCheck@-1 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {runtime_call}
  0x00007fab7412b5cc: jmpq   0x00007fab7412b056
  0x00007fab7412b5d1: mov    %rax,0x8(%rsp)
  0x00007fab7412b5d6: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412b5de: callq  0x00007fab741005e0  ; OopMap{rdx=Oop rbx=Oop [144]=Oop off=2083}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::elementData@-1 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {runtime_call}
  0x00007fab7412b5e3: jmpq   0x00007fab7412b0ea
  0x00007fab7412b5e8: callq  0x00007fab740fc000  ; OopMap{rdx=Oop rax=Oop [144]=Oop off=2093}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {runtime_call}
  0x00007fab7412b5ed: callq  0x00007fab740fc000  ; OopMap{rdx=Oop rax=Oop [144]=Oop off=2098}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {runtime_call}
  0x00007fab7412b5f2: mov    %r8,(%rsp)
  0x00007fab7412b5f6: callq  0x00007fab740fb940  ; OopMap{rdx=Oop rax=Oop [144]=Oop off=2107}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {runtime_call}
  0x00007fab7412b5fb: mov    %rax,(%rsp)
  0x00007fab7412b5ff: callq  0x00007fab740fe2c0  ; OopMap{[144]=Oop off=2116}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@29 (line 474)
                                                ;   {runtime_call}
  0x00007fab7412b604: lea    0x88(%rsp),%rax
  0x00007fab7412b60c: mov    %rax,(%rsp)
  0x00007fab7412b610: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab7412b615: jmpq   0x00007fab7412b389
  0x00007fab7412b61a: lea    0x88(%rsp),%rax
  0x00007fab7412b622: mov    %rax,(%rsp)
  0x00007fab7412b626: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab7412b62b: jmpq   0x00007fab7412b3cf
  0x00007fab7412b630: lea    0x88(%rsp),%rax
  0x00007fab7412b638: mov    %rax,(%rsp)
  0x00007fab7412b63c: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab7412b641: jmpq   0x00007fab7412b443
  0x00007fab7412b646: lea    0x88(%rsp),%rax
  0x00007fab7412b64e: mov    %rax,(%rsp)
  0x00007fab7412b652: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab7412b657: jmpq   0x00007fab7412b489
  0x00007fab7412b65c: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab7412b666: mov    $0xa050f00,%eax
  0x00007fab7412b66b: callq  0x00007fab740ff5e0  ; OopMap{rbx=Oop [120]=Oop [144]=Oop off=2224}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {runtime_call}
  0x00007fab7412b670: jmpq   0x00007fab7412b4b0
  0x00007fab7412b675: callq  0x00007fab740fc000  ; OopMap{rbx=Oop [120]=Oop [144]=Oop off=2234}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {runtime_call}
  0x00007fab7412b67a: mov    %rdx,%rdx
  0x00007fab7412b67d: callq  0x00007fab740fcba0  ; OopMap{rbx=Oop [120]=Oop [144]=Oop off=2242}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {runtime_call}
  0x00007fab7412b682: jmpq   0x00007fab7412b502
  0x00007fab7412b687: nop
  0x00007fab7412b688: nop
  0x00007fab7412b689: mov    0x2c0(%r15),%rax
  0x00007fab7412b690: movabs $0x0,%r10
  0x00007fab7412b69a: mov    %r10,0x2c0(%r15)
  0x00007fab7412b6a1: movabs $0x0,%r10
  0x00007fab7412b6ab: mov    %r10,0x2c8(%r15)
  0x00007fab7412b6b2: mov    %rax,%rbx
  0x00007fab7412b6b5: lea    0x88(%rsp),%rax
  0x00007fab7412b6bd: mov    0x8(%rax),%rsi
  0x00007fab7412b6c1: mov    (%rsi),%rdi
  0x00007fab7412b6c4: and    $0x7,%rdi
  0x00007fab7412b6c8: cmp    $0x5,%rdi
  0x00007fab7412b6cc: je     0x00007fab7412b6e9
  0x00007fab7412b6d2: mov    (%rax),%rdi
  0x00007fab7412b6d5: test   %rdi,%rdi
  0x00007fab7412b6d8: je     0x00007fab7412b6e9
  0x00007fab7412b6de: lock cmpxchg %rdi,(%rsi)
  0x00007fab7412b6e3: jne    0x00007fab7412b6f9
  0x00007fab7412b6e9: mov    %rbx,%rax
  0x00007fab7412b6ec: add    $0xa0,%rsp
  0x00007fab7412b6f3: pop    %rbp
  0x00007fab7412b6f4: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7412b6f9: lea    0x88(%rsp),%rax
  0x00007fab7412b701: mov    %rax,(%rsp)
  0x00007fab7412b705: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab7412b70a: jmp    0x00007fab7412b6e9
  0x00007fab7412b70c: hlt    
  0x00007fab7412b70d: hlt    
  0x00007fab7412b70e: hlt    
  0x00007fab7412b70f: hlt    
  0x00007fab7412b710: hlt    
  0x00007fab7412b711: hlt    
  0x00007fab7412b712: hlt    
  0x00007fab7412b713: hlt    
  0x00007fab7412b714: hlt    
  0x00007fab7412b715: hlt    
  0x00007fab7412b716: hlt    
  0x00007fab7412b717: hlt    
  0x00007fab7412b718: hlt    
  0x00007fab7412b719: hlt    
  0x00007fab7412b71a: hlt    
  0x00007fab7412b71b: hlt    
  0x00007fab7412b71c: hlt    
  0x00007fab7412b71d: hlt    
  0x00007fab7412b71e: hlt    
  0x00007fab7412b71f: hlt    
[Stub Code]
  0x00007fab7412b720: nop                       ;   {no_reloc}
  0x00007fab7412b721: nop
  0x00007fab7412b722: nop
  0x00007fab7412b723: nop
  0x00007fab7412b724: nop
  0x00007fab7412b725: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7412b72f: jmpq   0x00007fab7412b72f  ;   {runtime_call}
  0x00007fab7412b734: nop
  0x00007fab7412b735: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7412b73f: jmpq   0x00007fab7412b73f  ;   {runtime_call}
  0x00007fab7412b744: nop
  0x00007fab7412b745: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7412b74f: jmpq   0x00007fab7412b74f  ;   {runtime_call}
[Exception Handler]
  0x00007fab7412b754: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab7412b759: mov    %rsp,-0x28(%rsp)
  0x00007fab7412b75e: sub    $0x80,%rsp
  0x00007fab7412b765: mov    %rax,0x78(%rsp)
  0x00007fab7412b76a: mov    %rcx,0x70(%rsp)
  0x00007fab7412b76f: mov    %rdx,0x68(%rsp)
  0x00007fab7412b774: mov    %rbx,0x60(%rsp)
  0x00007fab7412b779: mov    %rbp,0x50(%rsp)
  0x00007fab7412b77e: mov    %rsi,0x48(%rsp)
  0x00007fab7412b783: mov    %rdi,0x40(%rsp)
  0x00007fab7412b788: mov    %r8,0x38(%rsp)
  0x00007fab7412b78d: mov    %r9,0x30(%rsp)
  0x00007fab7412b792: mov    %r10,0x28(%rsp)
  0x00007fab7412b797: mov    %r11,0x20(%rsp)
  0x00007fab7412b79c: mov    %r12,0x18(%rsp)
  0x00007fab7412b7a1: mov    %r13,0x10(%rsp)
  0x00007fab7412b7a6: mov    %r14,0x8(%rsp)
  0x00007fab7412b7ab: mov    %r15,(%rsp)
  0x00007fab7412b7af: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7412b7b9: movabs $0x7fab7412b759,%rsi  ;   {internal_word}
  0x00007fab7412b7c3: mov    %rsp,%rdx
  0x00007fab7412b7c6: and    $0xfffffffffffffff0,%rsp
  0x00007fab7412b7ca: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7412b7cf: hlt    
[Deopt Handler Code]
  0x00007fab7412b7d0: movabs $0x7fab7412b7d0,%r10  ;   {section_word}
  0x00007fab7412b7da: push   %r10
  0x00007fab7412b7dc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7412b7e1: hlt    
  0x00007fab7412b7e2: hlt    
  0x00007fab7412b7e3: hlt    
  0x00007fab7412b7e4: hlt    
  0x00007fab7412b7e5: hlt    
  0x00007fab7412b7e6: hlt    
  0x00007fab7412b7e7: hlt    
<nmethod compile_id='70' compiler='C1' level='3' entry='0x00007fab7412adc0' size='4272' address='0x00007fab7412abd0' relocation_offset='312' insts_offset='496' stub_offset='2896' scopes_data_offset='3144' scopes_pcs_offset='3512' dependencies_offset='4216' nul_chk_table_offset='4224' metadata_offset='3096' method='sun/misc/URLClassPath getNextLoader ([II)Lsun/misc/URLClassPath$Loader;' bytes='88' count='280' iicount='280' stamp='0.267'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.HotSpotConstantPool from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='74' method='java/net/URL getQuery ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.267' comment='tiered' hot_count='128'/>
[Loaded jdk.vm.ci.hotspot.HotSpotJVMCIMetaAccessContext from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.runtime.JVMCIRuntime from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotJVMCIRuntimeProvider from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotJVMCIRuntime from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='75' method='java/util/concurrent/ConcurrentHashMap setTabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V' bytes='19' count='384' iicount='384' level='3' stamp='0.268' comment='tiered' hot_count='384'/>
----------------------------------------------------------------------
sun/misc/Unsafe.putObjectVolatile  [0x00007fab7412be20, 0x00007fab7412c010]  496 bytes
[Entry Point]
  # {method} {0x00007fab61922a28} &apos;putObjectVolatile&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;)V&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rsi:rsi   = &apos;sun/misc/Unsafe&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = long
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fab7412be20: mov    0x8(%rsi),%r10d
  0x00007fab7412be24: shl    $0x3,%r10
  0x00007fab7412be28: cmp    %r10,%rax
  0x00007fab7412be2b: je     0x00007fab7412be38
  0x00007fab7412be31: jmpq   0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7412be36: xchg   %ax,%ax
[Verified Entry Point]
  0x00007fab7412be38: mov    %eax,-0x14000(%rsp)
  0x00007fab7412be3f: push   %rbp
  0x00007fab7412be40: mov    %rsp,%rbp
  0x00007fab7412be43: sub    $0x40,%rsp
  0x00007fab7412be47: mov    %r8,0x18(%rsp)
  0x00007fab7412be4c: cmp    $0x0,%r8
  0x00007fab7412be50: lea    0x18(%rsp),%r8
  0x00007fab7412be55: cmove  0x18(%rsp),%r8
  0x00007fab7412be5b: mov    %rdx,0x8(%rsp)
  0x00007fab7412be60: cmp    $0x0,%rdx
  0x00007fab7412be64: lea    0x8(%rsp),%rdx
  0x00007fab7412be69: cmove  0x8(%rsp),%rdx
  0x00007fab7412be6f: mov    %rsi,(%rsp)
  0x00007fab7412be73: cmp    $0x0,%rsi
  0x00007fab7412be77: lea    (%rsp),%rsi
  0x00007fab7412be7b: cmove  (%rsp),%rsi        ; OopMap{[24]=Oop [8]=Oop [0]=Oop off=96}
  0x00007fab7412be80: movabs $0x7fab7412be80,%r10  ;   {section_word}
  0x00007fab7412be8a: mov    %r10,0x1c8(%r15)
  0x00007fab7412be91: mov    %rsp,0x1c0(%r15)
  0x00007fab7412be98: cmpb   $0x0,0x1a848b35(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab7412be9f: je     0x00007fab7412bedf
  0x00007fab7412bea5: push   %rsi
  0x00007fab7412bea6: push   %rdx
  0x00007fab7412bea7: push   %rcx
  0x00007fab7412bea8: push   %r8
  0x00007fab7412beaa: movabs $0x7fab61922a28,%rsi  ;   {metadata({method} {0x00007fab61922a28} &apos;putObjectVolatile&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;)V&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00007fab7412beb4: mov    %r15,%rdi
  0x00007fab7412beb7: test   $0xf,%esp
  0x00007fab7412bebd: je     0x00007fab7412bed5
  0x00007fab7412bec3: sub    $0x8,%rsp
  0x00007fab7412bec7: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab7412becc: add    $0x8,%rsp
  0x00007fab7412bed0: jmpq   0x00007fab7412beda
  0x00007fab7412bed5: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab7412beda: pop    %r8
  0x00007fab7412bedc: pop    %rcx
  0x00007fab7412bedd: pop    %rdx
  0x00007fab7412bede: pop    %rsi
  0x00007fab7412bedf: lea    0x1e0(%r15),%rdi
  0x00007fab7412bee6: movl   $0x4,0x258(%r15)
  0x00007fab7412bef1: callq  0x00007fab8e43b370  ;   {runtime_call}
  0x00007fab7412bef6: vzeroupper 
  0x00007fab7412bef9: movl   $0x5,0x258(%r15)
  0x00007fab7412bf04: mov    %r15d,%ecx
  0x00007fab7412bf07: shr    $0x4,%ecx
  0x00007fab7412bf0a: and    $0xffc,%ecx
  0x00007fab7412bf10: movabs $0x7fab8f7e1000,%r10  ;   {external_word}
  0x00007fab7412bf1a: mov    %ecx,(%r10,%rcx,1)
  0x00007fab7412bf1e: cmpl   $0x0,0x1a853a94(%rip)        # 0x00007fab8e97f9bc
                                                ;   {external_word}
  0x00007fab7412bf28: jne    0x00007fab7412bf3c
  0x00007fab7412bf2e: cmpl   $0x0,0x30(%r15)
  0x00007fab7412bf36: je     0x00007fab7412bf55
  0x00007fab7412bf3c: mov    %r15,%rdi
  0x00007fab7412bf3f: mov    %rsp,%r12
  0x00007fab7412bf42: sub    $0x0,%rsp
  0x00007fab7412bf46: and    $0xfffffffffffffff0,%rsp
  0x00007fab7412bf4a: callq  0x00007fab8e40fc20  ;   {runtime_call}
  0x00007fab7412bf4f: mov    %r12,%rsp
  0x00007fab7412bf52: xor    %r12,%r12
  0x00007fab7412bf55: movl   $0x8,0x258(%r15)
  0x00007fab7412bf60: cmpl   $0x1,0x2b0(%r15)
  0x00007fab7412bf6b: je     0x00007fab7412bff3
  0x00007fab7412bf71: cmpb   $0x0,0x1a848a5c(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab7412bf78: je     0x00007fab7412bfae
  0x00007fab7412bf7e: movabs $0x7fab61922a28,%rsi  ;   {metadata({method} {0x00007fab61922a28} &apos;putObjectVolatile&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;)V&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00007fab7412bf88: mov    %r15,%rdi
  0x00007fab7412bf8b: test   $0xf,%esp
  0x00007fab7412bf91: je     0x00007fab7412bfa9
  0x00007fab7412bf97: sub    $0x8,%rsp
  0x00007fab7412bf9b: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab7412bfa0: add    $0x8,%rsp
  0x00007fab7412bfa4: jmpq   0x00007fab7412bfae
  0x00007fab7412bfa9: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab7412bfae: movabs $0x0,%r10
  0x00007fab7412bfb8: mov    %r10,0x1c0(%r15)
  0x00007fab7412bfbf: movabs $0x0,%r10
  0x00007fab7412bfc9: mov    %r10,0x1c8(%r15)
  0x00007fab7412bfd0: mov    0x38(%r15),%rcx
  0x00007fab7412bfd4: movl   $0x0,0x100(%rcx)
  0x00007fab7412bfde: leaveq 
  0x00007fab7412bfdf: cmpq   $0x0,0x8(%r15)
  0x00007fab7412bfe7: jne    0x00007fab7412bfee
  0x00007fab7412bfed: retq   
  0x00007fab7412bfee: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00007fab7412bff3: mov    %rsp,%r12
  0x00007fab7412bff6: sub    $0x0,%rsp
  0x00007fab7412bffa: and    $0xfffffffffffffff0,%rsp
  0x00007fab7412bffe: callq  0x00007fab8e372120  ;   {runtime_call}
  0x00007fab7412c003: mov    %r12,%rsp
  0x00007fab7412c006: xor    %r12,%r12
  0x00007fab7412c009: jmpq   0x00007fab7412bf71
  0x00007fab7412c00e: hlt    
  0x00007fab7412c00f: hlt    
<nmethod compile_id='76' compile_kind='c2n' level='0' entry='0x00007fab7412be20' size='896' address='0x00007fab7412bc90' relocation_offset='312' consts_offset='896' insts_offset='400' method='sun/misc/Unsafe putObjectVolatile (Ljava/lang/Object;JLjava/lang/Object;)V' bytes='0' count='384' iicount='384' stamp='0.269'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
sun/misc/URLClassPath.getLoader  [0x00007fab7412c480, 0x00007fab74130358]  16088 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;
  # this:     rsi:rsi   = &apos;sun/misc/URLClassPath&apos;
  # parm0:    rdx       = int
  #           [sp+0x160]  (sp of caller)
  0x00007fab7412c480: mov    0x8(%rsi),%r10d
  0x00007fab7412c484: shl    $0x3,%r10
  0x00007fab7412c488: cmp    %rax,%r10
  0x00007fab7412c48b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7412c491: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7412c49c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7412c4a0: mov    %eax,-0x14000(%rsp)
  0x00007fab7412c4a7: push   %rbp
  0x00007fab7412c4a8: sub    $0x150,%rsp
  0x00007fab7412c4af: mov    %rsi,0x98(%rsp)
  0x00007fab7412c4b7: mov    %edx,0x94(%rsp)
  0x00007fab7412c4be: lea    0xf8(%rsp),%rdi
  0x00007fab7412c4c6: mov    %rsi,0x8(%rdi)
  0x00007fab7412c4ca: mov    (%rsi),%rax
  0x00007fab7412c4cd: mov    %rax,%rbx
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.meta.SpeculationLog from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>

  0x00007fab7412c4d0: and    $0x7,%rbx
  0x00007fab7412c4d4: cmp    $0x5,%rbx
  0x00007fab7412c4d8: jne    0x00007fab7412c55f
  0x00007fab7412c4de: mov    0x8(%rsi),%ebx
  0x00007fab7412c4e1: shl    $0x3,%rbx
  0x00007fab7412c4e5: mov    0xa8(%rbx),%rbx
  0x00007fab7412c4ec: or     %r15,%rbx
  0x00007fab7412c4ef: xor    %rax,%rbx
  0x00007fab7412c4f2: and    $0xffffffffffffff87,%rbx
  0x00007fab7412c4f6: je     0x00007fab7412c587
  0x00007fab7412c4fc: test   $0x7,%rbx
  0x00007fab7412c503: jne    0x00007fab7412c54c
  0x00007fab7412c505: test   $0x300,%rbx
  0x00007fab7412c50c: jne    0x00007fab7412c52b
  0x00007fab7412c50e: and    $0x37f,%rax
  0x00007fab7412c515: mov    %rax,%rbx
  0x00007fab7412c518: or     %r15,%rbx
  0x00007fab7412c51b: lock cmpxchg %rbx,(%rsi)
  0x00007fab7412c520: jne    0x00007fab7412fbee
  0x00007fab7412c526: jmpq   0x00007fab7412c587
  0x00007fab7412c52b: mov    0x8(%rsi),%ebx
  0x00007fab7412c52e: shl    $0x3,%rbx
  0x00007fab7412c532: mov    0xa8(%rbx),%rbx
  0x00007fab7412c539: or     %r15,%rbx
  0x00007fab7412c53c: lock cmpxchg %rbx,(%rsi)
  0x00007fab7412c541: jne    0x00007fab7412fbee
  0x00007fab7412c547: jmpq   0x00007fab7412c587
  0x00007fab7412c54c: mov    0x8(%rsi),%ebx
  0x00007fab7412c54f: shl    $0x3,%rbx
  0x00007fab7412c553: mov    0xa8(%rbx),%rbx
  0x00007fab7412c55a: lock cmpxchg %rbx,(%rsi)
  0x00007fab7412c55f: mov    (%rsi),%rax
  0x00007fab7412c562: or     $0x1,%rax
  0x00007fab7412c566: mov    %rax,(%rdi)
  0x00007fab7412c569: lock cmpxchg %rdi,(%rsi)
  0x00007fab7412c56e: je     0x00007fab7412c587
  0x00007fab7412c574: sub    %rsp,%rax
  0x00007fab7412c577: and    $0xfffffffffffff007,%rax
  0x00007fab7412c57e: mov    %rax,(%rdi)
  0x00007fab7412c581: jne    0x00007fab7412fbee
  0x00007fab7412c587: movabs $0x7fab61b84b68,%rax  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412c591: mov    0xfc(%rax),%edi
  0x00007fab7412c597: add    $0x8,%edi
  0x00007fab7412c59a: mov    %edi,0xfc(%rax)
  0x00007fab7412c5a0: movabs $0x7fab61a984e8,%rax  ;   {metadata({method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412c5aa: and    $0x1ff8,%edi
  0x00007fab7412c5b0: cmp    $0x0,%edi
  0x00007fab7412c5b3: je     0x00007fab7412fc01  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@0 (line 494)

  0x00007fab7412c5b9: movsbl 0xc(%rsi),%eax     ;*getfield closed {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@1 (line 494)

  0x00007fab7412c5bd: cmp    $0x0,%eax
  0x00007fab7412c5c0: movabs $0x7fab61b84b68,%rax  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412c5ca: movabs $0x130,%rdi
  0x00007fab7412c5d4: je     0x00007fab7412c5e4
  0x00007fab7412c5da: movabs $0x140,%rdi
  0x00007fab7412c5e4: mov    (%rax,%rdi,1),%rbx
  0x00007fab7412c5e8: lea    0x1(%rbx),%rbx
  0x00007fab7412c5ec: mov    %rbx,(%rax,%rdi,1)
  0x00007fab7412c5f0: jne    0x00007fab7412f818  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@4 (line 494)

  0x00007fab7412c5f6: xchg   %ax,%ax
  0x00007fab7412c5f8: mov    0x18(%rsi),%ebx
  0x00007fab7412c5fb: shl    $0x3,%rbx          ;*getfield loaders {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@10 (line 499)

  0x00007fab7412c5ff: cmp    (%rbx),%rax        ;*invokevirtual size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 499)
                                                ; implicit exception: dispatches to 0x00007fab7412fc18
  0x00007fab7412c602: mov    %rbx,%rax
  0x00007fab7412c605: movabs $0x7fab61b84b68,%rdi  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412c60f: addq   $0x1,0x168(%rdi)
  0x00007fab7412c617: mov    0x10(%rbx),%edi    ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::size@1 (line 278)
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 499)

  0x00007fab7412c61a: mov    %rdx,%rax
  0x00007fab7412c61d: inc    %eax
  0x00007fab7412c61f: cmp    %eax,%edi
  0x00007fab7412c621: movabs $0x7fab61b84b68,%rax  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412c62b: movabs $0x1e8,%rcx
  0x00007fab7412c635: jge    0x00007fab7412c645
  0x00007fab7412c63b: movabs $0x1f8,%rcx
  0x00007fab7412c645: mov    (%rax,%rcx,1),%r8
  0x00007fab7412c649: lea    0x1(%r8),%r8
  0x00007fab7412c64d: mov    %r8,(%rax,%rcx,1)
  0x00007fab7412c651: jge    0x00007fab7412f3d3  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@19 (line 499)

  0x00007fab7412c657: mov    0x14(%rsi),%edi
  0x00007fab7412c65a: shl    $0x3,%rdi          ;*getfield urls {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@23 (line 502)

  0x00007fab7412c65e: lea    0x108(%rsp),%rbx
  0x00007fab7412c666: mov    %rdi,0x8(%rbx)
  0x00007fab7412c66a: mov    (%rdi),%rax        ; implicit exception: dispatches to 0x00007fab7412fc1d
  0x00007fab7412c66d: mov    %rax,%rcx
  0x00007fab7412c670: and    $0x7,%rcx
  0x00007fab7412c674: cmp    $0x5,%rcx
  0x00007fab7412c678: jne    0x00007fab7412c6ff
  0x00007fab7412c67e: mov    0x8(%rdi),%ecx
  0x00007fab7412c681: shl    $0x3,%rcx
  0x00007fab7412c685: mov    0xa8(%rcx),%rcx
  0x00007fab7412c68c: or     %r15,%rcx
  0x00007fab7412c68f: xor    %rax,%rcx
  0x00007fab7412c692: and    $0xffffffffffffff87,%rcx
  0x00007fab7412c696: je     0x00007fab7412c727
  0x00007fab7412c69c: test   $0x7,%rcx
  0x00007fab7412c6a3: jne    0x00007fab7412c6ec
  0x00007fab7412c6a5: test   $0x300,%rcx
  0x00007fab7412c6ac: jne    0x00007fab7412c6cb
  0x00007fab7412c6ae: and    $0x37f,%rax
  0x00007fab7412c6b5: mov    %rax,%rcx
  0x00007fab7412c6b8: or     %r15,%rcx
  0x00007fab7412c6bb: lock cmpxchg %rcx,(%rdi)
  0x00007fab7412c6c0: jne    0x00007fab7412fc22
  0x00007fab7412c6c6: jmpq   0x00007fab7412c727
  0x00007fab7412c6cb: mov    0x8(%rdi),%ecx
  0x00007fab7412c6ce: shl    $0x3,%rcx
  0x00007fab7412c6d2: mov    0xa8(%rcx),%rcx
  0x00007fab7412c6d9: or     %r15,%rcx
  0x00007fab7412c6dc: lock cmpxchg %rcx,(%rdi)
  0x00007fab7412c6e1: jne    0x00007fab7412fc22
  0x00007fab7412c6e7: jmpq   0x00007fab7412c727
  0x00007fab7412c6ec: mov    0x8(%rdi),%ecx
  0x00007fab7412c6ef: shl    $0x3,%rcx
  0x00007fab7412c6f3: mov    0xa8(%rcx),%rcx
  0x00007fab7412c6fa: lock cmpxchg %rcx,(%rdi)
  0x00007fab7412c6ff: mov    (%rdi),%rax
  0x00007fab7412c702: or     $0x1,%rax
  0x00007fab7412c706: mov    %rax,(%rbx)
  0x00007fab7412c709: lock cmpxchg %rbx,(%rdi)
  0x00007fab7412c70e: je     0x00007fab7412c727
  0x00007fab7412c714: sub    %rsp,%rax
  0x00007fab7412c717: and    $0xfffffffffffff007,%rax
  0x00007fab7412c71e: mov    %rax,(%rbx)
  0x00007fab7412c721: jne    0x00007fab7412fc22  ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 502)

  0x00007fab7412c727: mov    0x14(%rsi),%ebx
  0x00007fab7412c72a: shl    $0x3,%rbx          ;*getfield urls {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@30 (line 503)

  0x00007fab7412c72e: cmp    (%rbx),%rax        ;*invokevirtual empty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)
                                                ; implicit exception: dispatches to 0x00007fab7412fc35
  0x00007fab7412c731: mov    %rbx,%rax
  0x00007fab7412c734: movabs $0x7fab61b84b68,%rcx  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412c73e: addq   $0x1,0x220(%rcx)
  0x00007fab7412c746: movabs $0x7fab61b85b58,%rax  ;   {metadata(method data for {method} {0x00007fab61974358} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00007fab7412c750: mov    0xfc(%rax),%ecx
  0x00007fab7412c756: add    $0x8,%ecx
  0x00007fab7412c759: mov    %ecx,0xfc(%rax)
  0x00007fab7412c75f: movabs $0x7fab61974358,%rax  ;   {metadata({method} {0x00007fab61974358} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00007fab7412c769: and    $0x7ffff8,%ecx
  0x00007fab7412c76f: cmp    $0x0,%ecx
  0x00007fab7412c772: je     0x00007fab7412fc3a
  0x00007fab7412c778: mov    %rbx,%rax
  0x00007fab7412c77b: movabs $0x7fab61b85b58,%rcx  ;   {metadata(method data for {method} {0x00007fab61974358} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00007fab7412c785: mov    0x8(%rax),%eax
  0x00007fab7412c788: shl    $0x3,%rax
  0x00007fab7412c78c: cmp    0x140(%rcx),%rax
  0x00007fab7412c793: jne    0x00007fab7412c7a2
  0x00007fab7412c795: addq   $0x1,0x148(%rcx)
  0x00007fab7412c79d: jmpq   0x00007fab7412c964
  0x00007fab7412c7a2: cmp    0x150(%rcx),%rax
  0x00007fab7412c7a9: jne    0x00007fab7412c7b8
  0x00007fab7412c7ab: addq   $0x1,0x158(%rcx)
  0x00007fab7412c7b3: jmpq   0x00007fab7412c964
  0x00007fab7412c7b8: cmp    0x160(%rcx),%rax
  0x00007fab7412c7bf: jne    0x00007fab7412c7ce
  0x00007fab7412c7c1: addq   $0x1,0x168(%rcx)
  0x00007fab7412c7c9: jmpq   0x00007fab7412c964
  0x00007fab7412c7ce: cmp    0x170(%rcx),%rax
  0x00007fab7412c7d5: jne    0x00007fab7412c7e4
  0x00007fab7412c7d7: addq   $0x1,0x178(%rcx)
  0x00007fab7412c7df: jmpq   0x00007fab7412c964
  0x00007fab7412c7e4: cmp    0x180(%rcx),%rax
  0x00007fab7412c7eb: jne    0x00007fab7412c7fa
  0x00007fab7412c7ed: addq   $0x1,0x188(%rcx)
  0x00007fab7412c7f5: jmpq   0x00007fab7412c964
  0x00007fab7412c7fa: cmp    0x190(%rcx),%rax
  0x00007fab7412c801: jne    0x00007fab7412c810
  0x00007fab7412c803: addq   $0x1,0x198(%rcx)
  0x00007fab7412c80b: jmpq   0x00007fab7412c964
  0x00007fab7412c810: cmp    0x1a0(%rcx),%rax
  0x00007fab7412c817: jne    0x00007fab7412c826
  0x00007fab7412c819: addq   $0x1,0x1a8(%rcx)
  0x00007fab7412c821: jmpq   0x00007fab7412c964
  0x00007fab7412c826: cmp    0x1b0(%rcx),%rax
  0x00007fab7412c82d: jne    0x00007fab7412c83c
  0x00007fab7412c82f: addq   $0x1,0x1b8(%rcx)
  0x00007fab7412c837: jmpq   0x00007fab7412c964
  0x00007fab7412c83c: cmpq   $0x0,0x140(%rcx)
  0x00007fab7412c847: jne    0x00007fab7412c860
  0x00007fab7412c849: mov    %rax,0x140(%rcx)
  0x00007fab7412c850: movq   $0x1,0x148(%rcx)
  0x00007fab7412c85b: jmpq   0x00007fab7412c964
  0x00007fab7412c860: cmpq   $0x0,0x150(%rcx)
  0x00007fab7412c86b: jne    0x00007fab7412c884
  0x00007fab7412c86d: mov    %rax,0x150(%rcx)
  0x00007fab7412c874: movq   $0x1,0x158(%rcx)
  0x00007fab7412c87f: jmpq   0x00007fab7412c964
  0x00007fab7412c884: cmpq   $0x0,0x160(%rcx)
  0x00007fab7412c88f: jne    0x00007fab7412c8a8
  0x00007fab7412c891: mov    %rax,0x160(%rcx)
  0x00007fab7412c898: movq   $0x1,0x168(%rcx)
  0x00007fab7412c8a3: jmpq   0x00007fab7412c964
  0x00007fab7412c8a8: cmpq   $0x0,0x170(%rcx)
  0x00007fab7412c8b3: jne    0x00007fab7412c8cc
  0x00007fab7412c8b5: mov    %rax,0x170(%rcx)
  0x00007fab7412c8bc: movq   $0x1,0x178(%rcx)
  0x00007fab7412c8c7: jmpq   0x00007fab7412c964
  0x00007fab7412c8cc: cmpq   $0x0,0x180(%rcx)
  0x00007fab7412c8d7: jne    0x00007fab7412c8f0
  0x00007fab7412c8d9: mov    %rax,0x180(%rcx)
  0x00007fab7412c8e0: movq   $0x1,0x188(%rcx)
  0x00007fab7412c8eb: jmpq   0x00007fab7412c964
  0x00007fab7412c8f0: cmpq   $0x0,0x190(%rcx)
  0x00007fab7412c8fb: jne    0x00007fab7412c914
  0x00007fab7412c8fd: mov    %rax,0x190(%rcx)
  0x00007fab7412c904: movq   $0x1,0x198(%rcx)
  0x00007fab7412c90f: jmpq   0x00007fab7412c964
  0x00007fab7412c914: cmpq   $0x0,0x1a0(%rcx)
  0x00007fab7412c91f: jne    0x00007fab7412c938
  0x00007fab7412c921: mov    %rax,0x1a0(%rcx)
  0x00007fab7412c928: movq   $0x1,0x1a8(%rcx)
  0x00007fab7412c933: jmpq   0x00007fab7412c964
  0x00007fab7412c938: cmpq   $0x0,0x1b0(%rcx)
  0x00007fab7412c943: jne    0x00007fab7412c95c
  0x00007fab7412c945: mov    %rax,0x1b0(%rcx)
  0x00007fab7412c94c: movq   $0x1,0x1b8(%rcx)
  0x00007fab7412c957: jmpq   0x00007fab7412c964
  0x00007fab7412c95c: addq   $0x1,0x130(%rcx)
  0x00007fab7412c964: lea    0x118(%rsp),%rcx
  0x00007fab7412c96c: mov    %rbx,0x8(%rcx)
  0x00007fab7412c970: mov    (%rbx),%rax
  0x00007fab7412c973: mov    %rax,%r8
  0x00007fab7412c976: and    $0x7,%r8
  0x00007fab7412c97a: cmp    $0x5,%r8
  0x00007fab7412c97e: jne    0x00007fab7412ca08
  0x00007fab7412c984: mov    0x8(%rbx),%r8d
  0x00007fab7412c988: shl    $0x3,%r8
  0x00007fab7412c98c: mov    0xa8(%r8),%r8
  0x00007fab7412c993: or     %r15,%r8
  0x00007fab7412c996: xor    %rax,%r8
  0x00007fab7412c999: and    $0xffffffffffffff87,%r8
  0x00007fab7412c99d: je     0x00007fab7412ca30
  0x00007fab7412c9a3: test   $0x7,%r8
  0x00007fab7412c9aa: jne    0x00007fab7412c9f4
  0x00007fab7412c9ac: test   $0x300,%r8
  0x00007fab7412c9b3: jne    0x00007fab7412c9d2
  0x00007fab7412c9b5: and    $0x37f,%rax
  0x00007fab7412c9bc: mov    %rax,%r8
  0x00007fab7412c9bf: or     %r15,%r8
  0x00007fab7412c9c2: lock cmpxchg %r8,(%rbx)
  0x00007fab7412c9c7: jne    0x00007fab7412fc51
  0x00007fab7412c9cd: jmpq   0x00007fab7412ca30
  0x00007fab7412c9d2: mov    0x8(%rbx),%r8d
  0x00007fab7412c9d6: shl    $0x3,%r8
  0x00007fab7412c9da: mov    0xa8(%r8),%r8
  0x00007fab7412c9e1: or     %r15,%r8
  0x00007fab7412c9e4: lock cmpxchg %r8,(%rbx)
  0x00007fab7412c9e9: jne    0x00007fab7412fc51
  0x00007fab7412c9ef: jmpq   0x00007fab7412ca30
  0x00007fab7412c9f4: mov    0x8(%rbx),%r8d
  0x00007fab7412c9f8: shl    $0x3,%r8
  0x00007fab7412c9fc: mov    0xa8(%r8),%r8
  0x00007fab7412ca03: lock cmpxchg %r8,(%rbx)
  0x00007fab7412ca08: mov    (%rbx),%rax
  0x00007fab7412ca0b: or     $0x1,%rax
  0x00007fab7412ca0f: mov    %rax,(%rcx)
  0x00007fab7412ca12: lock cmpxchg %rcx,(%rbx)
  0x00007fab7412ca17: je     0x00007fab7412ca30
  0x00007fab7412ca1d: sub    %rsp,%rax
  0x00007fab7412ca20: and    $0xfffffffffffff007,%rax
  0x00007fab7412ca27: mov    %rax,(%rcx)
  0x00007fab7412ca2a: jne    0x00007fab7412fc51  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00007fab7412ca30: mov    0x10(%rbx),%ebx    ;*getfield elementCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Vector::size@1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00007fab7412ca33: lea    0x118(%rsp),%rax
  0x00007fab7412ca3b: mov    0x8(%rax),%r8
  0x00007fab7412ca3f: mov    (%r8),%rcx
  0x00007fab7412ca42: and    $0x7,%rcx
  0x00007fab7412ca46: cmp    $0x5,%rcx
  0x00007fab7412ca4a: je     0x00007fab7412ca67
  0x00007fab7412ca50: mov    (%rax),%rcx
  0x00007fab7412ca53: test   %rcx,%rcx
  0x00007fab7412ca56: je     0x00007fab7412ca67
  0x00007fab7412ca5c: lock cmpxchg %rcx,(%r8)
  0x00007fab7412ca61: jne    0x00007fab7412fc64  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00007fab7412ca67: cmp    $0x0,%ebx
  0x00007fab7412ca6a: movabs $0x7fab61b85b58,%rax  ;   {metadata(method data for {method} {0x00007fab61974358} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00007fab7412ca74: movabs $0x1c8,%rbx
  0x00007fab7412ca7e: jne    0x00007fab7412ca8e
  0x00007fab7412ca84: movabs $0x1d8,%rbx
  0x00007fab7412ca8e: mov    (%rax,%rbx,1),%rcx
  0x00007fab7412ca92: lea    0x1(%rcx),%rcx
  0x00007fab7412ca96: mov    %rcx,(%rax,%rbx,1)
  0x00007fab7412ca9a: jne    0x00007fab7412caba  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::empty@4 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00007fab7412caa0: movabs $0x7fab61b85b58,%rax  ;   {metadata(method data for {method} {0x00007fab61974358} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00007fab7412caaa: incl   0x1e8(%rax)
  0x00007fab7412cab0: mov    $0x1,%eax
  0x00007fab7412cab5: jmpq   0x00007fab7412cabf  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::empty@8 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00007fab7412caba: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::empty@12 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00007fab7412cabf: and    $0x1,%eax
  0x00007fab7412cac2: cmp    $0x0,%eax
  0x00007fab7412cac5: movabs $0x7fab61b84b68,%rax  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412cacf: movabs $0x2a0,%rbx
  0x00007fab7412cad9: je     0x00007fab7412cae9
  0x00007fab7412cadf: movabs $0x2b0,%rbx
  0x00007fab7412cae9: mov    (%rax,%rbx,1),%rcx
  0x00007fab7412caed: lea    0x1(%rcx),%rcx
  0x00007fab7412caf1: mov    %rcx,(%rax,%rbx,1)
  0x00007fab7412caf5: jne    0x00007fab7412f797  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@36 (line 503)

  0x00007fab7412cafb: mov    0x14(%rsi),%ebx
  0x00007fab7412cafe: shl    $0x3,%rbx          ;*getfield urls {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@44 (line 506)

  0x00007fab7412cb02: cmp    (%rbx),%rax        ;*invokevirtual pop {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ; implicit exception: dispatches to 0x00007fab7412fc7a
  0x00007fab7412cb05: mov    %rbx,%rax
  0x00007fab7412cb08: movabs $0x7fab61b84b68,%rcx  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412cb12: movabs $0x7c0016050,%r10  ;   {metadata(&apos;java/util/Stack&apos;)}
  0x00007fab7412cb1c: mov    %r10,0x2d0(%rcx)
  0x00007fab7412cb23: addq   $0x1,0x2d8(%rcx)
  0x00007fab7412cb2b: lea    0x118(%rsp),%rcx
  0x00007fab7412cb33: mov    %rbx,0x8(%rcx)
  0x00007fab7412cb37: mov    (%rbx),%rax
  0x00007fab7412cb3a: mov    %rax,%r8
  0x00007fab7412cb3d: and    $0x7,%r8
  0x00007fab7412cb41: cmp    $0x5,%r8
  0x00007fab7412cb45: jne    0x00007fab7412cbcf
  0x00007fab7412cb4b: mov    0x8(%rbx),%r8d
  0x00007fab7412cb4f: shl    $0x3,%r8
  0x00007fab7412cb53: mov    0xa8(%r8),%r8
  0x00007fab7412cb5a: or     %r15,%r8
  0x00007fab7412cb5d: xor    %rax,%r8
  0x00007fab7412cb60: and    $0xffffffffffffff87,%r8
  0x00007fab7412cb64: je     0x00007fab7412cbf7
  0x00007fab7412cb6a: test   $0x7,%r8
  0x00007fab7412cb71: jne    0x00007fab7412cbbb
  0x00007fab7412cb73: test   $0x300,%r8
  0x00007fab7412cb7a: jne    0x00007fab7412cb99
  0x00007fab7412cb7c: and    $0x37f,%rax
  0x00007fab7412cb83: mov    %rax,%r8
  0x00007fab7412cb86: or     %r15,%r8
  0x00007fab7412cb89: lock cmpxchg %r8,(%rbx)
  0x00007fab7412cb8e: jne    0x00007fab7412fc7f
  0x00007fab7412cb94: jmpq   0x00007fab7412cbf7
  0x00007fab7412cb99: mov    0x8(%rbx),%r8d
  0x00007fab7412cb9d: shl    $0x3,%r8
  0x00007fab7412cba1: mov    0xa8(%r8),%r8
  0x00007fab7412cba8: or     %r15,%r8
  0x00007fab7412cbab: lock cmpxchg %r8,(%rbx)
  0x00007fab7412cbb0: jne    0x00007fab7412fc7f
  0x00007fab7412cbb6: jmpq   0x00007fab7412cbf7
  0x00007fab7412cbbb: mov    0x8(%rbx),%r8d
  0x00007fab7412cbbf: shl    $0x3,%r8
  0x00007fab7412cbc3: mov    0xa8(%r8),%r8
  0x00007fab7412cbca: lock cmpxchg %r8,(%rbx)
  0x00007fab7412cbcf: mov    (%rbx),%rax
  0x00007fab7412cbd2: or     $0x1,%rax
  0x00007fab7412cbd6: mov    %rax,(%rcx)
  0x00007fab7412cbd9: lock cmpxchg %rcx,(%rbx)
  0x00007fab7412cbde: je     0x00007fab7412cbf7
  0x00007fab7412cbe4: sub    %rsp,%rax
  0x00007fab7412cbe7: and    $0xfffffffffffff007,%rax
  0x00007fab7412cbee: mov    %rax,(%rcx)
  0x00007fab7412cbf1: jne    0x00007fab7412fc7f  ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412cbf7: movabs $0x7fab61b85d98,%rax  ;   {metadata(method data for {method} {0x00007fab619741e8} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007fab7412cc01: mov    0xfc(%rax),%ecx
  0x00007fab7412cc07: add    $0x8,%ecx
  0x00007fab7412cc0a: mov    %ecx,0xfc(%rax)
  0x00007fab7412cc10: movabs $0x7fab619741e8,%rax  ;   {metadata({method} {0x00007fab619741e8} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007fab7412cc1a: and    $0x7ffff8,%ecx
  0x00007fab7412cc20: cmp    $0x0,%ecx
  0x00007fab7412cc23: je     0x00007fab7412fc92
  0x00007fab7412cc29: mov    %rbx,%rax
  0x00007fab7412cc2c: movabs $0x7fab61b85d98,%rcx  ;   {metadata(method data for {method} {0x00007fab619741e8} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007fab7412cc36: mov    0x8(%rax),%eax
  0x00007fab7412cc39: shl    $0x3,%rax
  0x00007fab7412cc3d: cmp    0x140(%rcx),%rax
  0x00007fab7412cc44: jne    0x00007fab7412cc53
  0x00007fab7412cc46: addq   $0x1,0x148(%rcx)
  0x00007fab7412cc4e: jmpq   0x00007fab7412ce15
  0x00007fab7412cc53: cmp    0x150(%rcx),%rax
  0x00007fab7412cc5a: jne    0x00007fab7412cc69
  0x00007fab7412cc5c: addq   $0x1,0x158(%rcx)
  0x00007fab7412cc64: jmpq   0x00007fab7412ce15
  0x00007fab7412cc69: cmp    0x160(%rcx),%rax
  0x00007fab7412cc70: jne    0x00007fab7412cc7f
  0x00007fab7412cc72: addq   $0x1,0x168(%rcx)
  0x00007fab7412cc7a: jmpq   0x00007fab7412ce15
  0x00007fab7412cc7f: cmp    0x170(%rcx),%rax
  0x00007fab7412cc86: jne    0x00007fab7412cc95
  0x00007fab7412cc88: addq   $0x1,0x178(%rcx)
  0x00007fab7412cc90: jmpq   0x00007fab7412ce15
  0x00007fab7412cc95: cmp    0x180(%rcx),%rax
  0x00007fab7412cc9c: jne    0x00007fab7412ccab
  0x00007fab7412cc9e: addq   $0x1,0x188(%rcx)
  0x00007fab7412cca6: jmpq   0x00007fab7412ce15
  0x00007fab7412ccab: cmp    0x190(%rcx),%rax
  0x00007fab7412ccb2: jne    0x00007fab7412ccc1
  0x00007fab7412ccb4: addq   $0x1,0x198(%rcx)
  0x00007fab7412ccbc: jmpq   0x00007fab7412ce15
  0x00007fab7412ccc1: cmp    0x1a0(%rcx),%rax
  0x00007fab7412ccc8: jne    0x00007fab7412ccd7
  0x00007fab7412ccca: addq   $0x1,0x1a8(%rcx)
  0x00007fab7412ccd2: jmpq   0x00007fab7412ce15
  0x00007fab7412ccd7: cmp    0x1b0(%rcx),%rax
  0x00007fab7412ccde: jne    0x00007fab7412cced
  0x00007fab7412cce0: addq   $0x1,0x1b8(%rcx)
  0x00007fab7412cce8: jmpq   0x00007fab7412ce15
  0x00007fab7412cced: cmpq   $0x0,0x140(%rcx)
  0x00007fab7412ccf8: jne    0x00007fab7412cd11
  0x00007fab7412ccfa: mov    %rax,0x140(%rcx)
  0x00007fab7412cd01: movq   $0x1,0x148(%rcx)
  0x00007fab7412cd0c: jmpq   0x00007fab7412ce15
  0x00007fab7412cd11: cmpq   $0x0,0x150(%rcx)
  0x00007fab7412cd1c: jne    0x00007fab7412cd35
  0x00007fab7412cd1e: mov    %rax,0x150(%rcx)
  0x00007fab7412cd25: movq   $0x1,0x158(%rcx)
  0x00007fab7412cd30: jmpq   0x00007fab7412ce15
  0x00007fab7412cd35: cmpq   $0x0,0x160(%rcx)
  0x00007fab7412cd40: jne    0x00007fab7412cd59
  0x00007fab7412cd42: mov    %rax,0x160(%rcx)
  0x00007fab7412cd49: movq   $0x1,0x168(%rcx)
  0x00007fab7412cd54: jmpq   0x00007fab7412ce15
  0x00007fab7412cd59: cmpq   $0x0,0x170(%rcx)
  0x00007fab7412cd64: jne    0x00007fab7412cd7d
  0x00007fab7412cd66: mov    %rax,0x170(%rcx)
  0x00007fab7412cd6d: movq   $0x1,0x178(%rcx)
  0x00007fab7412cd78: jmpq   0x00007fab7412ce15
  0x00007fab7412cd7d: cmpq   $0x0,0x180(%rcx)
  0x00007fab7412cd88: jne    0x00007fab7412cda1
  0x00007fab7412cd8a: mov    %rax,0x180(%rcx)
  0x00007fab7412cd91: movq   $0x1,0x188(%rcx)
  0x00007fab7412cd9c: jmpq   0x00007fab7412ce15
  0x00007fab7412cda1: cmpq   $0x0,0x190(%rcx)
  0x00007fab7412cdac: jne    0x00007fab7412cdc5
  0x00007fab7412cdae: mov    %rax,0x190(%rcx)
  0x00007fab7412cdb5: movq   $0x1,0x198(%rcx)
  0x00007fab7412cdc0: jmpq   0x00007fab7412ce15
  0x00007fab7412cdc5: cmpq   $0x0,0x1a0(%rcx)
  0x00007fab7412cdd0: jne    0x00007fab7412cde9
  0x00007fab7412cdd2: mov    %rax,0x1a0(%rcx)
  0x00007fab7412cdd9: movq   $0x1,0x1a8(%rcx)
  0x00007fab7412cde4: jmpq   0x00007fab7412ce15
  0x00007fab7412cde9: cmpq   $0x0,0x1b0(%rcx)
  0x00007fab7412cdf4: jne    0x00007fab7412ce0d
  0x00007fab7412cdf6: mov    %rax,0x1b0(%rcx)
  0x00007fab7412cdfd: movq   $0x1,0x1b8(%rcx)
  0x00007fab7412ce08: jmpq   0x00007fab7412ce15
  0x00007fab7412ce0d: addq   $0x1,0x130(%rcx)
  0x00007fab7412ce15: lea    0x128(%rsp),%rcx
  0x00007fab7412ce1d: mov    %rbx,0x8(%rcx)
  0x00007fab7412ce21: mov    (%rbx),%rax
  0x00007fab7412ce24: mov    %rax,%r8
  0x00007fab7412ce27: and    $0x7,%r8
  0x00007fab7412ce2b: cmp    $0x5,%r8
  0x00007fab7412ce2f: jne    0x00007fab7412ceb9
  0x00007fab7412ce35: mov    0x8(%rbx),%r8d
  0x00007fab7412ce39: shl    $0x3,%r8
  0x00007fab7412ce3d: mov    0xa8(%r8),%r8
  0x00007fab7412ce44: or     %r15,%r8
  0x00007fab7412ce47: xor    %rax,%r8
  0x00007fab7412ce4a: and    $0xffffffffffffff87,%r8
  0x00007fab7412ce4e: je     0x00007fab7412cee1
  0x00007fab7412ce54: test   $0x7,%r8
  0x00007fab7412ce5b: jne    0x00007fab7412cea5
  0x00007fab7412ce5d: test   $0x300,%r8
  0x00007fab7412ce64: jne    0x00007fab7412ce83
  0x00007fab7412ce66: and    $0x37f,%rax
  0x00007fab7412ce6d: mov    %rax,%r8
  0x00007fab7412ce70: or     %r15,%r8
  0x00007fab7412ce73: lock cmpxchg %r8,(%rbx)
  0x00007fab7412ce78: jne    0x00007fab7412fca9
  0x00007fab7412ce7e: jmpq   0x00007fab7412cee1
  0x00007fab7412ce83: mov    0x8(%rbx),%r8d
  0x00007fab7412ce87: shl    $0x3,%r8
  0x00007fab7412ce8b: mov    0xa8(%r8),%r8
  0x00007fab7412ce92: or     %r15,%r8
  0x00007fab7412ce95: lock cmpxchg %r8,(%rbx)
  0x00007fab7412ce9a: jne    0x00007fab7412fca9
  0x00007fab7412cea0: jmpq   0x00007fab7412cee1
  0x00007fab7412cea5: mov    0x8(%rbx),%r8d
  0x00007fab7412cea9: shl    $0x3,%r8
  0x00007fab7412cead: mov    0xa8(%r8),%r8
  0x00007fab7412ceb4: lock cmpxchg %r8,(%rbx)
  0x00007fab7412ceb9: mov    (%rbx),%rax
  0x00007fab7412cebc: or     $0x1,%rax
  0x00007fab7412cec0: mov    %rax,(%rcx)
  0x00007fab7412cec3: lock cmpxchg %rcx,(%rbx)
  0x00007fab7412cec8: je     0x00007fab7412cee1
  0x00007fab7412cece: sub    %rsp,%rax
  0x00007fab7412ced1: and    $0xfffffffffffff007,%rax
  0x00007fab7412ced8: mov    %rax,(%rcx)
  0x00007fab7412cedb: jne    0x00007fab7412fca9  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412cee1: mov    0x10(%rbx),%ecx    ;*getfield elementCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Vector::size@1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412cee4: lea    0x128(%rsp),%rax
  0x00007fab7412ceec: mov    0x8(%rax),%r9
  0x00007fab7412cef0: mov    (%r9),%r8
  0x00007fab7412cef3: and    $0x7,%r8
  0x00007fab7412cef7: cmp    $0x5,%r8
  0x00007fab7412cefb: je     0x00007fab7412cf18
  0x00007fab7412cf01: mov    (%rax),%r8
  0x00007fab7412cf04: test   %r8,%r8
  0x00007fab7412cf07: je     0x00007fab7412cf18
  0x00007fab7412cf0d: lock cmpxchg %r8,(%r9)
  0x00007fab7412cf12: jne    0x00007fab7412fcbc  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412cf18: mov    %rbx,%rax
  0x00007fab7412cf1b: movabs $0x7fab61b85d98,%r8  ;   {metadata(method data for {method} {0x00007fab619741e8} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007fab7412cf25: movabs $0x7c0016050,%r10  ;   {metadata(&apos;java/util/Stack&apos;)}
  0x00007fab7412cf2f: mov    %r10,0x1d8(%r8)
  0x00007fab7412cf36: addq   $0x1,0x1e0(%r8)
  0x00007fab7412cf3e: lea    0x128(%rsp),%r8
  0x00007fab7412cf46: mov    %rbx,0x8(%r8)
  0x00007fab7412cf4a: mov    (%rbx),%rax
  0x00007fab7412cf4d: mov    %rax,%r9
  0x00007fab7412cf50: and    $0x7,%r9
  0x00007fab7412cf54: cmp    $0x5,%r9
  0x00007fab7412cf58: jne    0x00007fab7412cfe2
  0x00007fab7412cf5e: mov    0x8(%rbx),%r9d
  0x00007fab7412cf62: shl    $0x3,%r9
  0x00007fab7412cf66: mov    0xa8(%r9),%r9
  0x00007fab7412cf6d: or     %r15,%r9
  0x00007fab7412cf70: xor    %rax,%r9
  0x00007fab7412cf73: and    $0xffffffffffffff87,%r9
  0x00007fab7412cf77: je     0x00007fab7412d00a
  0x00007fab7412cf7d: test   $0x7,%r9
  0x00007fab7412cf84: jne    0x00007fab7412cfce
  0x00007fab7412cf86: test   $0x300,%r9
  0x00007fab7412cf8d: jne    0x00007fab7412cfac
  0x00007fab7412cf8f: and    $0x37f,%rax
  0x00007fab7412cf96: mov    %rax,%r9
  0x00007fab7412cf99: or     %r15,%r9
  0x00007fab7412cf9c: lock cmpxchg %r9,(%rbx)
  0x00007fab7412cfa1: jne    0x00007fab7412fcd2
  0x00007fab7412cfa7: jmpq   0x00007fab7412d00a
  0x00007fab7412cfac: mov    0x8(%rbx),%r9d
  0x00007fab7412cfb0: shl    $0x3,%r9
  0x00007fab7412cfb4: mov    0xa8(%r9),%r9
  0x00007fab7412cfbb: or     %r15,%r9
  0x00007fab7412cfbe: lock cmpxchg %r9,(%rbx)
  0x00007fab7412cfc3: jne    0x00007fab7412fcd2
  0x00007fab7412cfc9: jmpq   0x00007fab7412d00a
  0x00007fab7412cfce: mov    0x8(%rbx),%r9d
  0x00007fab7412cfd2: shl    $0x3,%r9
  0x00007fab7412cfd6: mov    0xa8(%r9),%r9
  0x00007fab7412cfdd: lock cmpxchg %r9,(%rbx)
  0x00007fab7412cfe2: mov    (%rbx),%rax
  0x00007fab7412cfe5: or     $0x1,%rax
  0x00007fab7412cfe9: mov    %rax,(%r8)
  0x00007fab7412cfec: lock cmpxchg %r8,(%rbx)
  0x00007fab7412cff1: je     0x00007fab7412d00a
  0x00007fab7412cff7: sub    %rsp,%rax
  0x00007fab7412cffa: and    $0xfffffffffffff007,%rax
  0x00007fab7412d001: mov    %rax,(%r8)
  0x00007fab7412d004: jne    0x00007fab7412fcd2  ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412d00a: movabs $0x7fab61b860d0,%rax  ;   {metadata(method data for {method} {0x00007fab619742b0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007fab7412d014: mov    0xfc(%rax),%r8d
  0x00007fab7412d01b: add    $0x8,%r8d
  0x00007fab7412d01f: mov    %r8d,0xfc(%rax)
  0x00007fab7412d026: movabs $0x7fab619742b0,%rax  ;   {metadata({method} {0x00007fab619742b0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007fab7412d030: and    $0x7ffff8,%r8d
  0x00007fab7412d037: cmp    $0x0,%r8d
  0x00007fab7412d03b: je     0x00007fab7412fce5
  0x00007fab7412d041: mov    %rbx,%rax
  0x00007fab7412d044: movabs $0x7fab61b860d0,%r8  ;   {metadata(method data for {method} {0x00007fab619742b0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007fab7412d04e: mov    0x8(%rax),%eax
  0x00007fab7412d051: shl    $0x3,%rax
  0x00007fab7412d055: cmp    0x140(%r8),%rax
  0x00007fab7412d05c: jne    0x00007fab7412d06b
  0x00007fab7412d05e: addq   $0x1,0x148(%r8)
  0x00007fab7412d066: jmpq   0x00007fab7412d22d
  0x00007fab7412d06b: cmp    0x150(%r8),%rax
  0x00007fab7412d072: jne    0x00007fab7412d081
  0x00007fab7412d074: addq   $0x1,0x158(%r8)
  0x00007fab7412d07c: jmpq   0x00007fab7412d22d
  0x00007fab7412d081: cmp    0x160(%r8),%rax
  0x00007fab7412d088: jne    0x00007fab7412d097
  0x00007fab7412d08a: addq   $0x1,0x168(%r8)
  0x00007fab7412d092: jmpq   0x00007fab7412d22d
  0x00007fab7412d097: cmp    0x170(%r8),%rax
  0x00007fab7412d09e: jne    0x00007fab7412d0ad
  0x00007fab7412d0a0: addq   $0x1,0x178(%r8)
  0x00007fab7412d0a8: jmpq   0x00007fab7412d22d
  0x00007fab7412d0ad: cmp    0x180(%r8),%rax
  0x00007fab7412d0b4: jne    0x00007fab7412d0c3
  0x00007fab7412d0b6: addq   $0x1,0x188(%r8)
  0x00007fab7412d0be: jmpq   0x00007fab7412d22d
  0x00007fab7412d0c3: cmp    0x190(%r8),%rax
  0x00007fab7412d0ca: jne    0x00007fab7412d0d9
  0x00007fab7412d0cc: addq   $0x1,0x198(%r8)
  0x00007fab7412d0d4: jmpq   0x00007fab7412d22d
  0x00007fab7412d0d9: cmp    0x1a0(%r8),%rax
  0x00007fab7412d0e0: jne    0x00007fab7412d0ef
  0x00007fab7412d0e2: addq   $0x1,0x1a8(%r8)
  0x00007fab7412d0ea: jmpq   0x00007fab7412d22d
  0x00007fab7412d0ef: cmp    0x1b0(%r8),%rax
  0x00007fab7412d0f6: jne    0x00007fab7412d105
  0x00007fab7412d0f8: addq   $0x1,0x1b8(%r8)
  0x00007fab7412d100: jmpq   0x00007fab7412d22d
  0x00007fab7412d105: cmpq   $0x0,0x140(%r8)
  0x00007fab7412d110: jne    0x00007fab7412d129
  0x00007fab7412d112: mov    %rax,0x140(%r8)
  0x00007fab7412d119: movq   $0x1,0x148(%r8)
  0x00007fab7412d124: jmpq   0x00007fab7412d22d
  0x00007fab7412d129: cmpq   $0x0,0x150(%r8)
  0x00007fab7412d134: jne    0x00007fab7412d14d
  0x00007fab7412d136: mov    %rax,0x150(%r8)
  0x00007fab7412d13d: movq   $0x1,0x158(%r8)
  0x00007fab7412d148: jmpq   0x00007fab7412d22d
  0x00007fab7412d14d: cmpq   $0x0,0x160(%r8)
  0x00007fab7412d158: jne    0x00007fab7412d171
  0x00007fab7412d15a: mov    %rax,0x160(%r8)
  0x00007fab7412d161: movq   $0x1,0x168(%r8)
  0x00007fab7412d16c: jmpq   0x00007fab7412d22d
  0x00007fab7412d171: cmpq   $0x0,0x170(%r8)
  0x00007fab7412d17c: jne    0x00007fab7412d195
  0x00007fab7412d17e: mov    %rax,0x170(%r8)
  0x00007fab7412d185: movq   $0x1,0x178(%r8)
  0x00007fab7412d190: jmpq   0x00007fab7412d22d
  0x00007fab7412d195: cmpq   $0x0,0x180(%r8)
  0x00007fab7412d1a0: jne    0x00007fab7412d1b9
  0x00007fab7412d1a2: mov    %rax,0x180(%r8)
  0x00007fab7412d1a9: movq   $0x1,0x188(%r8)
  0x00007fab7412d1b4: jmpq   0x00007fab7412d22d
  0x00007fab7412d1b9: cmpq   $0x0,0x190(%r8)
  0x00007fab7412d1c4: jne    0x00007fab7412d1dd
  0x00007fab7412d1c6: mov    %rax,0x190(%r8)
  0x00007fab7412d1cd: movq   $0x1,0x198(%r8)
  0x00007fab7412d1d8: jmpq   0x00007fab7412d22d
  0x00007fab7412d1dd: cmpq   $0x0,0x1a0(%r8)
  0x00007fab7412d1e8: jne    0x00007fab7412d201
  0x00007fab7412d1ea: mov    %rax,0x1a0(%r8)
  0x00007fab7412d1f1: movq   $0x1,0x1a8(%r8)
  0x00007fab7412d1fc: jmpq   0x00007fab7412d22d
  0x00007fab7412d201: cmpq   $0x0,0x1b0(%r8)
  0x00007fab7412d20c: jne    0x00007fab7412d225
  0x00007fab7412d20e: mov    %rax,0x1b0(%r8)
  0x00007fab7412d215: movq   $0x1,0x1b8(%r8)
  0x00007fab7412d220: jmpq   0x00007fab7412d22d
  0x00007fab7412d225: addq   $0x1,0x130(%r8)
  0x00007fab7412d22d: lea    0x138(%rsp),%r8
  0x00007fab7412d235: mov    %rbx,0x8(%r8)
  0x00007fab7412d239: mov    (%rbx),%rax
  0x00007fab7412d23c: mov    %rax,%r9
  0x00007fab7412d23f: and    $0x7,%r9
  0x00007fab7412d243: cmp    $0x5,%r9
  0x00007fab7412d247: jne    0x00007fab7412d2d1
  0x00007fab7412d24d: mov    0x8(%rbx),%r9d
  0x00007fab7412d251: shl    $0x3,%r9
  0x00007fab7412d255: mov    0xa8(%r9),%r9
  0x00007fab7412d25c: or     %r15,%r9
  0x00007fab7412d25f: xor    %rax,%r9
  0x00007fab7412d262: and    $0xffffffffffffff87,%r9
  0x00007fab7412d266: je     0x00007fab7412d2f9
  0x00007fab7412d26c: test   $0x7,%r9
  0x00007fab7412d273: jne    0x00007fab7412d2bd
  0x00007fab7412d275: test   $0x300,%r9
  0x00007fab7412d27c: jne    0x00007fab7412d29b
  0x00007fab7412d27e: and    $0x37f,%rax
  0x00007fab7412d285: mov    %rax,%r9
  0x00007fab7412d288: or     %r15,%r9
  0x00007fab7412d28b: lock cmpxchg %r9,(%rbx)
  0x00007fab7412d290: jne    0x00007fab7412fcfc
  0x00007fab7412d296: jmpq   0x00007fab7412d2f9
  0x00007fab7412d29b: mov    0x8(%rbx),%r9d
  0x00007fab7412d29f: shl    $0x3,%r9
  0x00007fab7412d2a3: mov    0xa8(%r9),%r9
  0x00007fab7412d2aa: or     %r15,%r9
  0x00007fab7412d2ad: lock cmpxchg %r9,(%rbx)
  0x00007fab7412d2b2: jne    0x00007fab7412fcfc
  0x00007fab7412d2b8: jmpq   0x00007fab7412d2f9
  0x00007fab7412d2bd: mov    0x8(%rbx),%r9d
  0x00007fab7412d2c1: shl    $0x3,%r9
  0x00007fab7412d2c5: mov    0xa8(%r9),%r9
  0x00007fab7412d2cc: lock cmpxchg %r9,(%rbx)
  0x00007fab7412d2d1: mov    (%rbx),%rax
  0x00007fab7412d2d4: or     $0x1,%rax
  0x00007fab7412d2d8: mov    %rax,(%r8)
  0x00007fab7412d2db: lock cmpxchg %r8,(%rbx)
  0x00007fab7412d2e0: je     0x00007fab7412d2f9
  0x00007fab7412d2e6: sub    %rsp,%rax
  0x00007fab7412d2e9: and    $0xfffffffffffff007,%rax
  0x00007fab7412d2f0: mov    %rax,(%r8)
  0x00007fab7412d2f3: jne    0x00007fab7412fcfc  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412d2f9: mov    0x10(%rbx),%r8d    ;*getfield elementCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Vector::size@1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412d2fd: lea    0x138(%rsp),%rax
  0x00007fab7412d305: mov    0x8(%rax),%r11
  0x00007fab7412d309: mov    (%r11),%r9
  0x00007fab7412d30c: and    $0x7,%r9
  0x00007fab7412d310: cmp    $0x5,%r9
  0x00007fab7412d314: je     0x00007fab7412d331
  0x00007fab7412d31a: mov    (%rax),%r9
  0x00007fab7412d31d: test   %r9,%r9
  0x00007fab7412d320: je     0x00007fab7412d331
  0x00007fab7412d326: lock cmpxchg %r9,(%r11)
  0x00007fab7412d32b: jne    0x00007fab7412fd0f  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412d331: cmp    $0x0,%r8d
  0x00007fab7412d335: movabs $0x7fab61b860d0,%rax  ;   {metadata(method data for {method} {0x00007fab619742b0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007fab7412d33f: movabs $0x1c8,%r9
  0x00007fab7412d349: jne    0x00007fab7412d359
  0x00007fab7412d34f: movabs $0x1d8,%r9
  0x00007fab7412d359: mov    (%rax,%r9,1),%r11
  0x00007fab7412d35d: lea    0x1(%r11),%r11
  0x00007fab7412d361: mov    %r11,(%rax,%r9,1)
  0x00007fab7412d365: mov    %ecx,0x90(%rsp)
  0x00007fab7412d36c: je     0x00007fab7412f929  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@6 (line 101)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412d372: mov    %rdi,0xa0(%rsp)
  0x00007fab7412d37a: mov    %rbx,%rax
  0x00007fab7412d37d: movabs $0x7fab61b860d0,%r9  ;   {metadata(method data for {method} {0x00007fab619742b0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007fab7412d387: mov    0x8(%rax),%eax
  0x00007fab7412d38a: shl    $0x3,%rax
  0x00007fab7412d38e: cmp    0x208(%r9),%rax
  0x00007fab7412d395: jne    0x00007fab7412d3a4
  0x00007fab7412d397: addq   $0x1,0x210(%r9)
  0x00007fab7412d39f: jmpq   0x00007fab7412d566
  0x00007fab7412d3a4: cmp    0x218(%r9),%rax
  0x00007fab7412d3ab: jne    0x00007fab7412d3ba
  0x00007fab7412d3ad: addq   $0x1,0x220(%r9)
  0x00007fab7412d3b5: jmpq   0x00007fab7412d566
  0x00007fab7412d3ba: cmp    0x228(%r9),%rax
  0x00007fab7412d3c1: jne    0x00007fab7412d3d0
  0x00007fab7412d3c3: addq   $0x1,0x230(%r9)
  0x00007fab7412d3cb: jmpq   0x00007fab7412d566
  0x00007fab7412d3d0: cmp    0x238(%r9),%rax
  0x00007fab7412d3d7: jne    0x00007fab7412d3e6
  0x00007fab7412d3d9: addq   $0x1,0x240(%r9)
  0x00007fab7412d3e1: jmpq   0x00007fab7412d566
  0x00007fab7412d3e6: cmp    0x248(%r9),%rax
  0x00007fab7412d3ed: jne    0x00007fab7412d3fc
  0x00007fab7412d3ef: addq   $0x1,0x250(%r9)
  0x00007fab7412d3f7: jmpq   0x00007fab7412d566
  0x00007fab7412d3fc: cmp    0x258(%r9),%rax
  0x00007fab7412d403: jne    0x00007fab7412d412
  0x00007fab7412d405: addq   $0x1,0x260(%r9)
  0x00007fab7412d40d: jmpq   0x00007fab7412d566
  0x00007fab7412d412: cmp    0x268(%r9),%rax
  0x00007fab7412d419: jne    0x00007fab7412d428
  0x00007fab7412d41b: addq   $0x1,0x270(%r9)
  0x00007fab7412d423: jmpq   0x00007fab7412d566
  0x00007fab7412d428: cmp    0x278(%r9),%rax
  0x00007fab7412d42f: jne    0x00007fab7412d43e
  0x00007fab7412d431: addq   $0x1,0x280(%r9)
  0x00007fab7412d439: jmpq   0x00007fab7412d566
  0x00007fab7412d43e: cmpq   $0x0,0x208(%r9)
  0x00007fab7412d449: jne    0x00007fab7412d462
  0x00007fab7412d44b: mov    %rax,0x208(%r9)
  0x00007fab7412d452: movq   $0x1,0x210(%r9)
  0x00007fab7412d45d: jmpq   0x00007fab7412d566
  0x00007fab7412d462: cmpq   $0x0,0x218(%r9)
  0x00007fab7412d46d: jne    0x00007fab7412d486
  0x00007fab7412d46f: mov    %rax,0x218(%r9)
  0x00007fab7412d476: movq   $0x1,0x220(%r9)
  0x00007fab7412d481: jmpq   0x00007fab7412d566
  0x00007fab7412d486: cmpq   $0x0,0x228(%r9)
  0x00007fab7412d491: jne    0x00007fab7412d4aa
  0x00007fab7412d493: mov    %rax,0x228(%r9)
  0x00007fab7412d49a: movq   $0x1,0x230(%r9)
  0x00007fab7412d4a5: jmpq   0x00007fab7412d566
  0x00007fab7412d4aa: cmpq   $0x0,0x238(%r9)
  0x00007fab7412d4b5: jne    0x00007fab7412d4ce
  0x00007fab7412d4b7: mov    %rax,0x238(%r9)
  0x00007fab7412d4be: movq   $0x1,0x240(%r9)
  0x00007fab7412d4c9: jmpq   0x00007fab7412d566
  0x00007fab7412d4ce: cmpq   $0x0,0x248(%r9)
  0x00007fab7412d4d9: jne    0x00007fab7412d4f2
  0x00007fab7412d4db: mov    %rax,0x248(%r9)
  0x00007fab7412d4e2: movq   $0x1,0x250(%r9)
  0x00007fab7412d4ed: jmpq   0x00007fab7412d566
  0x00007fab7412d4f2: cmpq   $0x0,0x258(%r9)
  0x00007fab7412d4fd: jne    0x00007fab7412d516
  0x00007fab7412d4ff: mov    %rax,0x258(%r9)
  0x00007fab7412d506: movq   $0x1,0x260(%r9)
  0x00007fab7412d511: jmpq   0x00007fab7412d566
  0x00007fab7412d516: cmpq   $0x0,0x268(%r9)
  0x00007fab7412d521: jne    0x00007fab7412d53a
  0x00007fab7412d523: mov    %rax,0x268(%r9)
  0x00007fab7412d52a: movq   $0x1,0x270(%r9)
  0x00007fab7412d535: jmpq   0x00007fab7412d566
  0x00007fab7412d53a: cmpq   $0x0,0x278(%r9)
  0x00007fab7412d545: jne    0x00007fab7412d55e
  0x00007fab7412d547: mov    %rax,0x278(%r9)
  0x00007fab7412d54e: movq   $0x1,0x280(%r9)
  0x00007fab7412d559: jmpq   0x00007fab7412d566
  0x00007fab7412d55e: addq   $0x1,0x1f8(%r9)
  0x00007fab7412d566: dec    %r8d
  0x00007fab7412d569: mov    %r8,%rdx
  0x00007fab7412d56c: mov    %rbx,%rsi          ;*invokevirtual elementAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@21 (line 103)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412d56f: mov    %rbx,0x88(%rsp)
  0x00007fab7412d577: callq  0x00007fab74047d60  ; OopMap{[152]=Oop [160]=Oop [136]=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=4348}
                                                ;*invokevirtual elementAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@21 (line 103)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {optimized virtual_call}
  0x00007fab7412d57c: mov    %rax,0xa8(%rsp)
  0x00007fab7412d584: lea    0x128(%rsp),%rax
  0x00007fab7412d58c: mov    0x8(%rax),%rsi
  0x00007fab7412d590: mov    (%rsi),%rdx
  0x00007fab7412d593: and    $0x7,%rdx
  0x00007fab7412d597: cmp    $0x5,%rdx
  0x00007fab7412d59b: je     0x00007fab7412d5b8
  0x00007fab7412d5a1: mov    (%rax),%rdx
  0x00007fab7412d5a4: test   %rdx,%rdx
  0x00007fab7412d5a7: je     0x00007fab7412d5b8
  0x00007fab7412d5ad: lock cmpxchg %rdx,(%rsi)
  0x00007fab7412d5b2: jne    0x00007fab7412fd25  ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412d5b8: mov    0x88(%rsp),%rbx
  0x00007fab7412d5c0: movabs $0x7fab61b85d98,%rdx  ;   {metadata(method data for {method} {0x00007fab619741e8} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007fab7412d5ca: mov    0x8(%rbx),%ebx
  0x00007fab7412d5cd: shl    $0x3,%rbx
  0x00007fab7412d5d1: cmp    0x270(%rdx),%rbx
  0x00007fab7412d5d8: jne    0x00007fab7412d5e7
  0x00007fab7412d5da: addq   $0x1,0x278(%rdx)
  0x00007fab7412d5e2: jmpq   0x00007fab7412d7a9
  0x00007fab7412d5e7: cmp    0x280(%rdx),%rbx
  0x00007fab7412d5ee: jne    0x00007fab7412d5fd
  0x00007fab7412d5f0: addq   $0x1,0x288(%rdx)
  0x00007fab7412d5f8: jmpq   0x00007fab7412d7a9
  0x00007fab7412d5fd: cmp    0x290(%rdx),%rbx
  0x00007fab7412d604: jne    0x00007fab7412d613
  0x00007fab7412d606: addq   $0x1,0x298(%rdx)
  0x00007fab7412d60e: jmpq   0x00007fab7412d7a9
  0x00007fab7412d613: cmp    0x2a0(%rdx),%rbx
  0x00007fab7412d61a: jne    0x00007fab7412d629
  0x00007fab7412d61c: addq   $0x1,0x2a8(%rdx)
  0x00007fab7412d624: jmpq   0x00007fab7412d7a9
  0x00007fab7412d629: cmp    0x2b0(%rdx),%rbx
  0x00007fab7412d630: jne    0x00007fab7412d63f
  0x00007fab7412d632: addq   $0x1,0x2b8(%rdx)
  0x00007fab7412d63a: jmpq   0x00007fab7412d7a9
  0x00007fab7412d63f: cmp    0x2c0(%rdx),%rbx
  0x00007fab7412d646: jne    0x00007fab7412d655
  0x00007fab7412d648: addq   $0x1,0x2c8(%rdx)
  0x00007fab7412d650: jmpq   0x00007fab7412d7a9
  0x00007fab7412d655: cmp    0x2d0(%rdx),%rbx
  0x00007fab7412d65c: jne    0x00007fab7412d66b
  0x00007fab7412d65e: addq   $0x1,0x2d8(%rdx)
  0x00007fab7412d666: jmpq   0x00007fab7412d7a9
  0x00007fab7412d66b: cmp    0x2e0(%rdx),%rbx
  0x00007fab7412d672: jne    0x00007fab7412d681
  0x00007fab7412d674: addq   $0x1,0x2e8(%rdx)
  0x00007fab7412d67c: jmpq   0x00007fab7412d7a9
  0x00007fab7412d681: cmpq   $0x0,0x270(%rdx)
  0x00007fab7412d68c: jne    0x00007fab7412d6a5
  0x00007fab7412d68e: mov    %rbx,0x270(%rdx)
  0x00007fab7412d695: movq   $0x1,0x278(%rdx)
  0x00007fab7412d6a0: jmpq   0x00007fab7412d7a9
  0x00007fab7412d6a5: cmpq   $0x0,0x280(%rdx)
  0x00007fab7412d6b0: jne    0x00007fab7412d6c9
  0x00007fab7412d6b2: mov    %rbx,0x280(%rdx)
  0x00007fab7412d6b9: movq   $0x1,0x288(%rdx)
  0x00007fab7412d6c4: jmpq   0x00007fab7412d7a9
  0x00007fab7412d6c9: cmpq   $0x0,0x290(%rdx)
  0x00007fab7412d6d4: jne    0x00007fab7412d6ed
  0x00007fab7412d6d6: mov    %rbx,0x290(%rdx)
  0x00007fab7412d6dd: movq   $0x1,0x298(%rdx)
  0x00007fab7412d6e8: jmpq   0x00007fab7412d7a9
  0x00007fab7412d6ed: cmpq   $0x0,0x2a0(%rdx)
  0x00007fab7412d6f8: jne    0x00007fab7412d711
  0x00007fab7412d6fa: mov    %rbx,0x2a0(%rdx)
  0x00007fab7412d701: movq   $0x1,0x2a8(%rdx)
  0x00007fab7412d70c: jmpq   0x00007fab7412d7a9
  0x00007fab7412d711: cmpq   $0x0,0x2b0(%rdx)
  0x00007fab7412d71c: jne    0x00007fab7412d735
  0x00007fab7412d71e: mov    %rbx,0x2b0(%rdx)
  0x00007fab7412d725: movq   $0x1,0x2b8(%rdx)
  0x00007fab7412d730: jmpq   0x00007fab7412d7a9
  0x00007fab7412d735: cmpq   $0x0,0x2c0(%rdx)
  0x00007fab7412d740: jne    0x00007fab7412d759
  0x00007fab7412d742: mov    %rbx,0x2c0(%rdx)
  0x00007fab7412d749: movq   $0x1,0x2c8(%rdx)
  0x00007fab7412d754: jmpq   0x00007fab7412d7a9
  0x00007fab7412d759: cmpq   $0x0,0x2d0(%rdx)
  0x00007fab7412d764: jne    0x00007fab7412d77d
  0x00007fab7412d766: mov    %rbx,0x2d0(%rdx)
  0x00007fab7412d76d: movq   $0x1,0x2d8(%rdx)
  0x00007fab7412d778: jmpq   0x00007fab7412d7a9
  0x00007fab7412d77d: cmpq   $0x0,0x2e0(%rdx)
  0x00007fab7412d788: jne    0x00007fab7412d7a1
  0x00007fab7412d78a: mov    %rbx,0x2e0(%rdx)
  0x00007fab7412d791: movq   $0x1,0x2e8(%rdx)
  0x00007fab7412d79c: jmpq   0x00007fab7412d7a9
  0x00007fab7412d7a1: addq   $0x1,0x260(%rdx)
  0x00007fab7412d7a9: mov    0x90(%rsp),%ecx
  0x00007fab7412d7b0: dec    %ecx
  0x00007fab7412d7b2: mov    %rcx,%rdx
  0x00007fab7412d7b5: mov    0x88(%rsp),%rsi    ;*invokevirtual removeElementAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::pop@14 (line 85)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412d7bd: nop
  0x00007fab7412d7be: nop
  0x00007fab7412d7bf: callq  0x00007fab74047d60  ; OopMap{[152]=Oop [160]=Oop [168]=Oop [256]=Oop [272]=Oop [288]=Oop off=4932}
                                                ;*invokevirtual removeElementAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::pop@14 (line 85)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {optimized virtual_call}
  0x00007fab7412d7c4: lea    0x118(%rsp),%rax
  0x00007fab7412d7cc: mov    0x8(%rax),%rdi
  0x00007fab7412d7d0: mov    (%rdi),%rsi
  0x00007fab7412d7d3: and    $0x7,%rsi
  0x00007fab7412d7d7: cmp    $0x5,%rsi
  0x00007fab7412d7db: je     0x00007fab7412d7f8
  0x00007fab7412d7e1: mov    (%rax),%rsi
  0x00007fab7412d7e4: test   %rsi,%rsi
  0x00007fab7412d7e7: je     0x00007fab7412d7f8
  0x00007fab7412d7ed: lock cmpxchg %rsi,(%rdi)
  0x00007fab7412d7f2: jne    0x00007fab7412fd3b  ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412d7f8: mov    0xa8(%rsp),%rax
  0x00007fab7412d800: cmp    $0x0,%rax
  0x00007fab7412d804: jne    0x00007fab7412d81f
  0x00007fab7412d806: movabs $0x7fab61b84b68,%rsi  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412d810: orl    $0x100,0x350(%rsi)
  0x00007fab7412d81a: jmpq   0x00007fab7412da3b
  0x00007fab7412d81f: movabs $0x7c000ea70,%rbx  ;   {metadata(&apos;java/net/URL&apos;)}
  0x00007fab7412d829: mov    0x8(%rax),%edi
  0x00007fab7412d82c: shl    $0x3,%rdi
  0x00007fab7412d830: cmp    %rdi,%rbx
  0x00007fab7412d833: jne    0x00007fab7412da1f
  0x00007fab7412d839: movabs $0x7fab61b84b68,%rsi  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412d843: mov    0x8(%rax),%ebx
  0x00007fab7412d846: shl    $0x3,%rbx
  0x00007fab7412d84a: cmp    0x368(%rsi),%rbx
  0x00007fab7412d851: jne    0x00007fab7412d860
  0x00007fab7412d853: addq   $0x1,0x370(%rsi)
  0x00007fab7412d85b: jmpq   0x00007fab7412da3b
  0x00007fab7412d860: cmp    0x378(%rsi),%rbx
  0x00007fab7412d867: jne    0x00007fab7412d876
  0x00007fab7412d869: addq   $0x1,0x380(%rsi)
  0x00007fab7412d871: jmpq   0x00007fab7412da3b
  0x00007fab7412d876: cmp    0x388(%rsi),%rbx
  0x00007fab7412d87d: jne    0x00007fab7412d88c
  0x00007fab7412d87f: addq   $0x1,0x390(%rsi)
  0x00007fab7412d887: jmpq   0x00007fab7412da3b
  0x00007fab7412d88c: cmp    0x398(%rsi),%rbx
  0x00007fab7412d893: jne    0x00007fab7412d8a2
  0x00007fab7412d895: addq   $0x1,0x3a0(%rsi)
  0x00007fab7412d89d: jmpq   0x00007fab7412da3b
  0x00007fab7412d8a2: cmp    0x3a8(%rsi),%rbx
  0x00007fab7412d8a9: jne    0x00007fab7412d8b8
  0x00007fab7412d8ab: addq   $0x1,0x3b0(%rsi)
  0x00007fab7412d8b3: jmpq   0x00007fab7412da3b
  0x00007fab7412d8b8: cmp    0x3b8(%rsi),%rbx
  0x00007fab7412d8bf: jne    0x00007fab7412d8ce
  0x00007fab7412d8c1: addq   $0x1,0x3c0(%rsi)
  0x00007fab7412d8c9: jmpq   0x00007fab7412da3b
  0x00007fab7412d8ce: cmp    0x3c8(%rsi),%rbx
  0x00007fab7412d8d5: jne    0x00007fab7412d8e4
  0x00007fab7412d8d7: addq   $0x1,0x3d0(%rsi)
  0x00007fab7412d8df: jmpq   0x00007fab7412da3b
  0x00007fab7412d8e4: cmp    0x3d8(%rsi),%rbx
  0x00007fab7412d8eb: jne    0x00007fab7412d8fa
  0x00007fab7412d8ed: addq   $0x1,0x3e0(%rsi)
  0x00007fab7412d8f5: jmpq   0x00007fab7412da3b
  0x00007fab7412d8fa: cmpq   $0x0,0x368(%rsi)
  0x00007fab7412d905: jne    0x00007fab7412d91e
  0x00007fab7412d907: mov    %rbx,0x368(%rsi)
  0x00007fab7412d90e: movq   $0x1,0x370(%rsi)
  0x00007fab7412d919: jmpq   0x00007fab7412da3b
  0x00007fab7412d91e: cmpq   $0x0,0x378(%rsi)
  0x00007fab7412d929: jne    0x00007fab7412d942
  0x00007fab7412d92b: mov    %rbx,0x378(%rsi)
  0x00007fab7412d932: movq   $0x1,0x380(%rsi)
  0x00007fab7412d93d: jmpq   0x00007fab7412da3b
  0x00007fab7412d942: cmpq   $0x0,0x388(%rsi)
  0x00007fab7412d94d: jne    0x00007fab7412d966
  0x00007fab7412d94f: mov    %rbx,0x388(%rsi)
  0x00007fab7412d956: movq   $0x1,0x390(%rsi)
  0x00007fab7412d961: jmpq   0x00007fab7412da3b
  0x00007fab7412d966: cmpq   $0x0,0x398(%rsi)
  0x00007fab7412d971: jne    0x00007fab7412d98a
  0x00007fab7412d973: mov    %rbx,0x398(%rsi)
  0x00007fab7412d97a: movq   $0x1,0x3a0(%rsi)
  0x00007fab7412d985: jmpq   0x00007fab7412da3b
  0x00007fab7412d98a: cmpq   $0x0,0x3a8(%rsi)
  0x00007fab7412d995: jne    0x00007fab7412d9ae
  0x00007fab7412d997: mov    %rbx,0x3a8(%rsi)
  0x00007fab7412d99e: movq   $0x1,0x3b0(%rsi)
  0x00007fab7412d9a9: jmpq   0x00007fab7412da3b
  0x00007fab7412d9ae: cmpq   $0x0,0x3b8(%rsi)
  0x00007fab7412d9b9: jne    0x00007fab7412d9d2
  0x00007fab7412d9bb: mov    %rbx,0x3b8(%rsi)
  0x00007fab7412d9c2: movq   $0x1,0x3c0(%rsi)
  0x00007fab7412d9cd: jmpq   0x00007fab7412da3b
  0x00007fab7412d9d2: cmpq   $0x0,0x3c8(%rsi)
  0x00007fab7412d9dd: jne    0x00007fab7412d9f6
  0x00007fab7412d9df: mov    %rbx,0x3c8(%rsi)
  0x00007fab7412d9e6: movq   $0x1,0x3d0(%rsi)
  0x00007fab7412d9f1: jmpq   0x00007fab7412da3b
  0x00007fab7412d9f6: cmpq   $0x0,0x3d8(%rsi)
  0x00007fab7412da01: jne    0x00007fab7412da1a
  0x00007fab7412da03: mov    %rbx,0x3d8(%rsi)
  0x00007fab7412da0a: movq   $0x1,0x3e0(%rsi)
  0x00007fab7412da15: jmpq   0x00007fab7412da3b
  0x00007fab7412da1a: jmpq   0x00007fab7412da3b
  0x00007fab7412da1f: movabs $0x7fab61b84b68,%rsi  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412da29: subq   $0x1,0x358(%rsi)
  0x00007fab7412da31: jmpq   0x00007fab7412fd51
  0x00007fab7412da36: jmpq   0x00007fab7412da3b
  0x00007fab7412da3b: mov    %rax,%rdi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@50 (line 506)

  0x00007fab7412da3e: mov    %rdi,0xb0(%rsp)
  0x00007fab7412da46: lea    0x108(%rsp),%rax
  0x00007fab7412da4e: mov    0x8(%rax),%rbx
  0x00007fab7412da52: mov    (%rbx),%rsi
  0x00007fab7412da55: and    $0x7,%rsi
  0x00007fab7412da59: cmp    $0x5,%rsi
  0x00007fab7412da5d: je     0x00007fab7412da7a
  0x00007fab7412da63: mov    (%rax),%rsi
  0x00007fab7412da66: test   %rsi,%rsi
  0x00007fab7412da69: je     0x00007fab7412da7a
  0x00007fab7412da6f: lock cmpxchg %rsi,(%rbx)
  0x00007fab7412da74: jne    0x00007fab7412fd5a  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@55 (line 508)

  0x00007fab7412da7a: movabs $0x7fab61b84b68,%rsi  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412da84: incl   0x3f0(%rsi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@56 (line 508)

  0x00007fab7412da8a: movabs $0x7fab61b84b68,%rbx  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412da94: addq   $0x1,0x408(%rbx)
  0x00007fab7412da9c: mov    %rdi,%rsi          ;*invokestatic urlNoFragString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@67 (line 512)

  0x00007fab7412da9f: callq  0x00007fab74048160  ; OopMap{[152]=Oop [176]=Oop [256]=Oop off=5668}
                                                ;*invokestatic urlNoFragString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@67 (line 512)
                                                ;   {static_call}
  0x00007fab7412daa4: mov    %rax,0xc0(%rsp)
  0x00007fab7412daac: mov    0x98(%rsp),%rsi
  0x00007fab7412dab4: mov    0x1c(%rsi),%edi
  0x00007fab7412dab7: shl    $0x3,%rdi          ;*getfield lmap {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@72 (line 513)

  0x00007fab7412dabb: cmp    (%rdi),%rax        ;*invokevirtual containsKey {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)
                                                ; implicit exception: dispatches to 0x00007fab7412fd70
  0x00007fab7412dabe: mov    %rdi,%rbx
  0x00007fab7412dac1: movabs $0x7fab61b84b68,%rdx  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412dacb: mov    0x8(%rbx),%ebx
  0x00007fab7412dace: shl    $0x3,%rbx
  0x00007fab7412dad2: cmp    0x428(%rdx),%rbx
  0x00007fab7412dad9: jne    0x00007fab7412dae8
  0x00007fab7412dadb: addq   $0x1,0x430(%rdx)
  0x00007fab7412dae3: jmpq   0x00007fab7412dcaa
  0x00007fab7412dae8: cmp    0x438(%rdx),%rbx
  0x00007fab7412daef: jne    0x00007fab7412dafe
  0x00007fab7412daf1: addq   $0x1,0x440(%rdx)
  0x00007fab7412daf9: jmpq   0x00007fab7412dcaa
  0x00007fab7412dafe: cmp    0x448(%rdx),%rbx
  0x00007fab7412db05: jne    0x00007fab7412db14
  0x00007fab7412db07: addq   $0x1,0x450(%rdx)
  0x00007fab7412db0f: jmpq   0x00007fab7412dcaa
  0x00007fab7412db14: cmp    0x458(%rdx),%rbx
  0x00007fab7412db1b: jne    0x00007fab7412db2a
  0x00007fab7412db1d: addq   $0x1,0x460(%rdx)
  0x00007fab7412db25: jmpq   0x00007fab7412dcaa
  0x00007fab7412db2a: cmp    0x468(%rdx),%rbx
  0x00007fab7412db31: jne    0x00007fab7412db40
  0x00007fab7412db33: addq   $0x1,0x470(%rdx)
  0x00007fab7412db3b: jmpq   0x00007fab7412dcaa
  0x00007fab7412db40: cmp    0x478(%rdx),%rbx
  0x00007fab7412db47: jne    0x00007fab7412db56
  0x00007fab7412db49: addq   $0x1,0x480(%rdx)
  0x00007fab7412db51: jmpq   0x00007fab7412dcaa
  0x00007fab7412db56: cmp    0x488(%rdx),%rbx
  0x00007fab7412db5d: jne    0x00007fab7412db6c
  0x00007fab7412db5f: addq   $0x1,0x490(%rdx)
  0x00007fab7412db67: jmpq   0x00007fab7412dcaa
  0x00007fab7412db6c: cmp    0x498(%rdx),%rbx
  0x00007fab7412db73: jne    0x00007fab7412db82
  0x00007fab7412db75: addq   $0x1,0x4a0(%rdx)
  0x00007fab7412db7d: jmpq   0x00007fab7412dcaa
  0x00007fab7412db82: cmpq   $0x0,0x428(%rdx)
  0x00007fab7412db8d: jne    0x00007fab7412dba6
  0x00007fab7412db8f: mov    %rbx,0x428(%rdx)
  0x00007fab7412db96: movq   $0x1,0x430(%rdx)
  0x00007fab7412dba1: jmpq   0x00007fab7412dcaa
  0x00007fab7412dba6: cmpq   $0x0,0x438(%rdx)
  0x00007fab7412dbb1: jne    0x00007fab7412dbca
  0x00007fab7412dbb3: mov    %rbx,0x438(%rdx)
  0x00007fab7412dbba: movq   $0x1,0x440(%rdx)
  0x00007fab7412dbc5: jmpq   0x00007fab7412dcaa
  0x00007fab7412dbca: cmpq   $0x0,0x448(%rdx)
  0x00007fab7412dbd5: jne    0x00007fab7412dbee
  0x00007fab7412dbd7: mov    %rbx,0x448(%rdx)
  0x00007fab7412dbde: movq   $0x1,0x450(%rdx)
  0x00007fab7412dbe9: jmpq   0x00007fab7412dcaa
  0x00007fab7412dbee: cmpq   $0x0,0x458(%rdx)
  0x00007fab7412dbf9: jne    0x00007fab7412dc12
  0x00007fab7412dbfb: mov    %rbx,0x458(%rdx)
  0x00007fab7412dc02: movq   $0x1,0x460(%rdx)
  0x00007fab7412dc0d: jmpq   0x00007fab7412dcaa
  0x00007fab7412dc12: cmpq   $0x0,0x468(%rdx)
  0x00007fab7412dc1d: jne    0x00007fab7412dc36
  0x00007fab7412dc1f: mov    %rbx,0x468(%rdx)
  0x00007fab7412dc26: movq   $0x1,0x470(%rdx)
  0x00007fab7412dc31: jmpq   0x00007fab7412dcaa
  0x00007fab7412dc36: cmpq   $0x0,0x478(%rdx)
  0x00007fab7412dc41: jne    0x00007fab7412dc5a
  0x00007fab7412dc43: mov    %rbx,0x478(%rdx)
  0x00007fab7412dc4a: movq   $0x1,0x480(%rdx)
  0x00007fab7412dc55: jmpq   0x00007fab7412dcaa
  0x00007fab7412dc5a: cmpq   $0x0,0x488(%rdx)
  0x00007fab7412dc65: jne    0x00007fab7412dc7e
  0x00007fab7412dc67: mov    %rbx,0x488(%rdx)
  0x00007fab7412dc6e: movq   $0x1,0x490(%rdx)
  0x00007fab7412dc79: jmpq   0x00007fab7412dcaa
  0x00007fab7412dc7e: cmpq   $0x0,0x498(%rdx)
  0x00007fab7412dc89: jne    0x00007fab7412dca2
  0x00007fab7412dc8b: mov    %rbx,0x498(%rdx)
  0x00007fab7412dc92: movq   $0x1,0x4a0(%rdx)
  0x00007fab7412dc9d: jmpq   0x00007fab7412dcaa
  0x00007fab7412dca2: addq   $0x1,0x418(%rdx)
  0x00007fab7412dcaa: movabs $0x7fab61b877e0,%rbx  ;   {metadata(method data for {method} {0x00007fab61998598} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7412dcb4: mov    0xfc(%rbx),%edx
  0x00007fab7412dcba: add    $0x8,%edx
  0x00007fab7412dcbd: mov    %edx,0xfc(%rbx)
  0x00007fab7412dcc3: movabs $0x7fab61998598,%rbx  ;   {metadata({method} {0x00007fab61998598} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7412dccd: and    $0x7ffff8,%edx
  0x00007fab7412dcd3: cmp    $0x0,%edx
  0x00007fab7412dcd6: je     0x00007fab7412fd75
  0x00007fab7412dcdc: movabs $0x7fab61b877e0,%rbx  ;   {metadata(method data for {method} {0x00007fab61998598} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7412dce6: addq   $0x1,0x130(%rbx)
  0x00007fab7412dcee: movabs $0x7fab61b81320,%rbx  ;   {metadata(method data for {method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7412dcf8: mov    0xfc(%rbx),%edx
  0x00007fab7412dcfe: add    $0x8,%edx
  0x00007fab7412dd01: mov    %edx,0xfc(%rbx)
  0x00007fab7412dd07: movabs $0x7fab61997920,%rbx  ;   {metadata({method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7412dd11: and    $0x7ffff8,%edx
  0x00007fab7412dd17: cmp    $0x0,%edx
  0x00007fab7412dd1a: je     0x00007fab7412fd8c
  0x00007fab7412dd20: cmp    $0x0,%rax
  0x00007fab7412dd24: movabs $0x7fab61b81320,%rbx  ;   {metadata(method data for {method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7412dd2e: movabs $0x130,%rdx
  0x00007fab7412dd38: jne    0x00007fab7412dd48
  0x00007fab7412dd3e: movabs $0x140,%rdx
  0x00007fab7412dd48: mov    (%rbx,%rdx,1),%rcx
  0x00007fab7412dd4c: lea    0x1(%rcx),%rcx
  0x00007fab7412dd50: mov    %rcx,(%rbx,%rdx,1)
  0x00007fab7412dd54: jne    0x00007fab7412dd7c  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 338)
                                                ; - java.util.HashMap::containsKey@2 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00007fab7412dd5a: movabs $0x7fab61b81320,%rbx  ;   {metadata(method data for {method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7412dd64: incl   0x150(%rbx)
  0x00007fab7412dd6a: mov    $0x0,%ebx
  0x00007fab7412dd6f: mov    %rdi,0xb8(%rsp)
  0x00007fab7412dd77: jmpq   0x00007fab7412ddb0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 338)
                                                ; - java.util.HashMap::containsKey@2 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00007fab7412dd7c: mov    %rdi,0xb8(%rsp)
  0x00007fab7412dd84: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00007fab7412fda3
  0x00007fab7412dd87: mov    %rax,%rbx
  0x00007fab7412dd8a: movabs $0x7fab61b81320,%rdx  ;   {metadata(method data for {method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7412dd94: addq   $0x1,0x168(%rdx)
  0x00007fab7412dd9c: mov    %rax,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::containsKey@2 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00007fab7412dd9f: callq  0x00007fab74047d60  ; OopMap{[176]=Oop [152]=Oop [184]=Oop [192]=Oop [256]=Oop off=6436}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::containsKey@2 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)
                                                ;   {optimized virtual_call}
  0x00007fab7412dda4: mov    %rax,%rdx
  0x00007fab7412dda7: shr    $0x10,%edx
  0x00007fab7412ddaa: xor    %rax,%rdx
  0x00007fab7412ddad: mov    %rdx,%rbx          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@19 (line 338)
                                                ; - java.util.HashMap::containsKey@2 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00007fab7412ddb0: mov    0xb8(%rsp),%rdi
  0x00007fab7412ddb8: mov    %rdi,%rdx
  0x00007fab7412ddbb: movabs $0x7fab61b877e0,%rcx  ;   {metadata(method data for {method} {0x00007fab61998598} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7412ddc5: addq   $0x1,0x140(%rcx)
  0x00007fab7412ddcd: mov    %rbx,%rdx
  0x00007fab7412ddd0: mov    0xc0(%rsp),%rcx
  0x00007fab7412ddd8: mov    %rdi,%rsi          ;*invokevirtual getNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::containsKey@6 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00007fab7412dddb: nop
  0x00007fab7412dddc: nop
  0x00007fab7412dddd: nop
  0x00007fab7412ddde: nop
  0x00007fab7412dddf: callq  0x00007fab74047d60  ; OopMap{[176]=Oop [152]=Oop [192]=Oop [256]=Oop off=6500}
                                                ;*invokevirtual getNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::containsKey@6 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)
                                                ;   {optimized virtual_call}
  0x00007fab7412dde4: cmp    $0x0,%rax
  0x00007fab7412dde8: movabs $0x7fab61b877e0,%rdx  ;   {metadata(method data for {method} {0x00007fab61998598} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7412ddf2: movabs $0x1d8,%rsi
  0x00007fab7412ddfc: je     0x00007fab7412de0c
  0x00007fab7412de02: movabs $0x1e8,%rsi
  0x00007fab7412de0c: mov    (%rdx,%rsi,1),%rdi
  0x00007fab7412de10: lea    0x1(%rdi),%rdi
  0x00007fab7412de14: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab7412de18: je     0x00007fab7412de38  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::containsKey@9 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00007fab7412de1e: movabs $0x7fab61b877e0,%rdx  ;   {metadata(method data for {method} {0x00007fab61998598} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7412de28: incl   0x1f8(%rdx)
  0x00007fab7412de2e: mov    $0x1,%edx
  0x00007fab7412de33: jmpq   0x00007fab7412de3d  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::containsKey@13 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00007fab7412de38: mov    $0x0,%edx          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::containsKey@17 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00007fab7412de3d: and    $0x1,%edx
  0x00007fab7412de40: cmp    $0x0,%edx
  0x00007fab7412de43: movabs $0x7fab61b84b68,%rdx  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412de4d: movabs $0x4b0,%rsi
  0x00007fab7412de57: je     0x00007fab7412de67
  0x00007fab7412de5d: movabs $0x4c0,%rsi
  0x00007fab7412de67: mov    (%rdx,%rsi,1),%rdi
  0x00007fab7412de6b: lea    0x1(%rdi),%rdi
  0x00007fab7412de6f: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab7412de73: jne    0x00007fab7412f300  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@79 (line 513)

  0x00007fab7412de79: mov    0xb0(%rsp),%rdi
  0x00007fab7412de81: mov    0x98(%rsp),%rsi
  0x00007fab7412de89: mov    %rsi,%rdx
  0x00007fab7412de8c: movabs $0x7fab61b84b68,%rax  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412de96: addq   $0x1,0x4e8(%rax)
  0x00007fab7412de9e: movabs $0x7fab61b88070,%rdx  ;   {metadata(method data for {method} {0x00007fab61a985d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412dea8: mov    0xfc(%rdx),%eax
  0x00007fab7412deae: add    $0x8,%eax
  0x00007fab7412deb1: mov    %eax,0xfc(%rdx)
  0x00007fab7412deb7: movabs $0x7fab61a985d0,%rdx  ;   {metadata({method} {0x00007fab61a985d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412dec1: and    $0x7ffff8,%eax
  0x00007fab7412dec7: cmp    $0x0,%eax
  0x00007fab7412deca: je     0x00007fab7412fda8
  0x00007fab7412ded0: movabs $0x7c003a968,%rdx  ;   {metadata(&apos;sun/misc/URLClassPath$3&apos;)}
  0x00007fab7412deda: mov    %rdi,%r8
  0x00007fab7412dedd: mov    %rsi,%rbx
  0x00007fab7412dee0: mov    0x60(%r15),%rax
  0x00007fab7412dee4: lea    0x18(%rax),%rdi
  0x00007fab7412dee8: cmp    0x70(%r15),%rdi
  0x00007fab7412deec: ja     0x00007fab7412fdbf
  0x00007fab7412def2: mov    %rdi,0x60(%r15)
  0x00007fab7412def6: mov    0xa8(%rdx),%rcx
  0x00007fab7412defd: mov    %rcx,(%rax)
  0x00007fab7412df00: mov    %rdx,%rcx
  0x00007fab7412df03: shr    $0x3,%rcx
  0x00007fab7412df07: mov    %ecx,0x8(%rax)
  0x00007fab7412df0a: xor    %rcx,%rcx
  0x00007fab7412df0d: mov    %ecx,0xc(%rax)
  0x00007fab7412df10: xor    %rcx,%rcx
  0x00007fab7412df13: mov    %rcx,0x10(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@0 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00007fab7412df17: mov    %rax,%rsi
  0x00007fab7412df1a: movabs $0x7fab61b88070,%rdx  ;   {metadata(method data for {method} {0x00007fab61a985d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412df24: addq   $0x1,0x130(%rdx)
  0x00007fab7412df2c: movabs $0x7fab61b883d0,%rsi  ;   {metadata(method data for {method} {0x00007fab61ab9830} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath;Ljava/net/URL;)V&apos; in &apos;sun/misc/URLClassPath$3&apos;)}
  0x00007fab7412df36: mov    0xfc(%rsi),%edx
  0x00007fab7412df3c: add    $0x8,%edx
  0x00007fab7412df3f: mov    %edx,0xfc(%rsi)
  0x00007fab7412df45: movabs $0x7fab61ab9830,%rsi  ;   {metadata({method} {0x00007fab61ab9830} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath;Ljava/net/URL;)V&apos; in &apos;sun/misc/URLClassPath$3&apos;)}
  0x00007fab7412df4f: and    $0x7ffff8,%edx
  0x00007fab7412df55: cmp    $0x0,%edx
  0x00007fab7412df58: je     0x00007fab7412fdcc
  0x00007fab7412df5e: mov    %rbx,%r10
  0x00007fab7412df61: shr    $0x3,%r10
  0x00007fab7412df65: mov    %r10d,0x10(%rax)
  0x00007fab7412df69: mov    %rax,%rsi
  0x00007fab7412df6c: shr    $0x9,%rsi
  0x00007fab7412df70: movabs $0x7fab701ff000,%rdx
  0x00007fab7412df7a: movb   $0x0,(%rsi,%rdx,1)  ;*putfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@2 (line 555)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00007fab7412df7e: mov    %r8,%r10
  0x00007fab7412df81: shr    $0x3,%r10
  0x00007fab7412df85: mov    %r10d,0xc(%rax)
  0x00007fab7412df89: mov    %rax,%rsi
  0x00007fab7412df8c: shr    $0x9,%rsi
  0x00007fab7412df90: movb   $0x0,(%rsi,%rdx,1)  ;*putfield val$url {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@7 (line 555)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00007fab7412df94: mov    %rax,%rsi
  0x00007fab7412df97: movabs $0x7fab61b883d0,%rdx  ;   {metadata(method data for {method} {0x00007fab61ab9830} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath;Ljava/net/URL;)V&apos; in &apos;sun/misc/URLClassPath$3&apos;)}
  0x00007fab7412dfa1: addq   $0x1,0x130(%rdx)
  0x00007fab7412dfa9: movabs $0x7fab61a342a0,%rsi  ;   {metadata(method data for {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7412dfb3: mov    0xfc(%rsi),%edx
  0x00007fab7412dfb9: add    $0x8,%edx
  0x00007fab7412dfbc: mov    %edx,0xfc(%rsi)
  0x00007fab7412dfc2: movabs $0x7fab618914d8,%rsi  ;   {metadata({method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7412dfcc: and    $0x7ffff8,%edx
  0x00007fab7412dfd2: cmp    $0x0,%edx
  0x00007fab7412dfd5: je     0x00007fab7412fde3
  0x00007fab7412dfdb: mov    0x24(%rbx),%edx
  0x00007fab7412dfde: shl    $0x3,%rdx          ;*getfield acc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@10 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00007fab7412dfe2: movabs $0x7fab61b88070,%rsi  ;   {metadata(method data for {method} {0x00007fab61a985d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412dfec: addq   $0x1,0x140(%rsi)
  0x00007fab7412dff4: mov    %rax,%rsi          ;*invokestatic doPrivileged {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00007fab7412dff7: callq  0x00007fab74048160  ; OopMap{[192]=Oop [176]=Oop [152]=Oop [256]=Oop off=7036}
                                                ;*invokestatic doPrivileged {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {static_call}
  0x00007fab7412dffc: cmp    $0x0,%rax
  0x00007fab7412e000: jne    0x00007fab7412e01b
  0x00007fab7412e002: movabs $0x7fab61b88070,%rbx  ;   {metadata(method data for {method} {0x00007fab61a985d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412e00c: orl    $0x100,0x148(%rbx)
  0x00007fab7412e016: jmpq   0x00007fab7412e238
  0x00007fab7412e01b: movabs $0x7c003ab78,%rdi  ;   {metadata(&apos;sun/misc/URLClassPath$Loader&apos;)}
  0x00007fab7412e025: mov    0x8(%rax),%ebx
  0x00007fab7412e028: shl    $0x3,%rbx
  0x00007fab7412e02c: cmp    0x30(%rbx),%rdi
  0x00007fab7412e030: jne    0x00007fab7412e21c
  0x00007fab7412e036: movabs $0x7fab61b88070,%rbx  ;   {metadata(method data for {method} {0x00007fab61a985d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412e040: mov    0x8(%rax),%edi
  0x00007fab7412e043: shl    $0x3,%rdi
  0x00007fab7412e047: cmp    0x160(%rbx),%rdi
  0x00007fab7412e04e: jne    0x00007fab7412e05d
  0x00007fab7412e050: addq   $0x1,0x168(%rbx)
  0x00007fab7412e058: jmpq   0x00007fab7412e238
  0x00007fab7412e05d: cmp    0x170(%rbx),%rdi
  0x00007fab7412e064: jne    0x00007fab7412e073
  0x00007fab7412e066: addq   $0x1,0x178(%rbx)
  0x00007fab7412e06e: jmpq   0x00007fab7412e238
  0x00007fab7412e073: cmp    0x180(%rbx),%rdi
  0x00007fab7412e07a: jne    0x00007fab7412e089
  0x00007fab7412e07c: addq   $0x1,0x188(%rbx)
  0x00007fab7412e084: jmpq   0x00007fab7412e238
  0x00007fab7412e089: cmp    0x190(%rbx),%rdi
  0x00007fab7412e090: jne    0x00007fab7412e09f
  0x00007fab7412e092: addq   $0x1,0x198(%rbx)
  0x00007fab7412e09a: jmpq   0x00007fab7412e238
  0x00007fab7412e09f: cmp    0x1a0(%rbx),%rdi
  0x00007fab7412e0a6: jne    0x00007fab7412e0b5
  0x00007fab7412e0a8: addq   $0x1,0x1a8(%rbx)
  0x00007fab7412e0b0: jmpq   0x00007fab7412e238
  0x00007fab7412e0b5: cmp    0x1b0(%rbx),%rdi
  0x00007fab7412e0bc: jne    0x00007fab7412e0cb
  0x00007fab7412e0be: addq   $0x1,0x1b8(%rbx)
  0x00007fab7412e0c6: jmpq   0x00007fab7412e238
  0x00007fab7412e0cb: cmp    0x1c0(%rbx),%rdi
  0x00007fab7412e0d2: jne    0x00007fab7412e0e1
  0x00007fab7412e0d4: addq   $0x1,0x1c8(%rbx)
  0x00007fab7412e0dc: jmpq   0x00007fab7412e238
  0x00007fab7412e0e1: cmp    0x1d0(%rbx),%rdi
  0x00007fab7412e0e8: jne    0x00007fab7412e0f7
  0x00007fab7412e0ea: addq   $0x1,0x1d8(%rbx)
  0x00007fab7412e0f2: jmpq   0x00007fab7412e238
  0x00007fab7412e0f7: cmpq   $0x0,0x160(%rbx)
  0x00007fab7412e102: jne    0x00007fab7412e11b
  0x00007fab7412e104: mov    %rdi,0x160(%rbx)
  0x00007fab7412e10b: movq   $0x1,0x168(%rbx)
  0x00007fab7412e116: jmpq   0x00007fab7412e238
  0x00007fab7412e11b: cmpq   $0x0,0x170(%rbx)
  0x00007fab7412e126: jne    0x00007fab7412e13f
  0x00007fab7412e128: mov    %rdi,0x170(%rbx)
  0x00007fab7412e12f: movq   $0x1,0x178(%rbx)
  0x00007fab7412e13a: jmpq   0x00007fab7412e238
  0x00007fab7412e13f: cmpq   $0x0,0x180(%rbx)
  0x00007fab7412e14a: jne    0x00007fab7412e163
  0x00007fab7412e14c: mov    %rdi,0x180(%rbx)
  0x00007fab7412e153: movq   $0x1,0x188(%rbx)
  0x00007fab7412e15e: jmpq   0x00007fab7412e238
  0x00007fab7412e163: cmpq   $0x0,0x190(%rbx)
  0x00007fab7412e16e: jne    0x00007fab7412e187
  0x00007fab7412e170: mov    %rdi,0x190(%rbx)
  0x00007fab7412e177: movq   $0x1,0x198(%rbx)
  0x00007fab7412e182: jmpq   0x00007fab7412e238
  0x00007fab7412e187: cmpq   $0x0,0x1a0(%rbx)
  0x00007fab7412e192: jne    0x00007fab7412e1ab
  0x00007fab7412e194: mov    %rdi,0x1a0(%rbx)
  0x00007fab7412e19b: movq   $0x1,0x1a8(%rbx)
  0x00007fab7412e1a6: jmpq   0x00007fab7412e238
  0x00007fab7412e1ab: cmpq   $0x0,0x1b0(%rbx)
  0x00007fab7412e1b6: jne    0x00007fab7412e1cf
  0x00007fab7412e1b8: mov    %rdi,0x1b0(%rbx)
  0x00007fab7412e1bf: movq   $0x1,0x1b8(%rbx)
  0x00007fab7412e1ca: jmpq   0x00007fab7412e238
  0x00007fab7412e1cf: cmpq   $0x0,0x1c0(%rbx)
  0x00007fab7412e1da: jne    0x00007fab7412e1f3
  0x00007fab7412e1dc: mov    %rdi,0x1c0(%rbx)
  0x00007fab7412e1e3: movq   $0x1,0x1c8(%rbx)
  0x00007fab7412e1ee: jmpq   0x00007fab7412e238
  0x00007fab7412e1f3: cmpq   $0x0,0x1d0(%rbx)
  0x00007fab7412e1fe: jne    0x00007fab7412e217
  0x00007fab7412e200: mov    %rdi,0x1d0(%rbx)
  0x00007fab7412e207: movq   $0x1,0x1d8(%rbx)
  0x00007fab7412e212: jmpq   0x00007fab7412e238
  0x00007fab7412e217: jmpq   0x00007fab7412e238
  0x00007fab7412e21c: movabs $0x7fab61b88070,%rbx  ;   {metadata(method data for {method} {0x00007fab61a985d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412e226: subq   $0x1,0x150(%rbx)
  0x00007fab7412e22e: jmpq   0x00007fab7412fdfa
  0x00007fab7412e233: jmpq   0x00007fab7412e238
  0x00007fab7412e238: mov    %rax,%rdi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@16 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00007fab7412e23b: mov    %rdi,0xc8(%rsp)
  0x00007fab7412e243: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x00007fab7412fe03
  0x00007fab7412e246: mov    %rdi,%rsi
  0x00007fab7412e249: movabs $0x7fab61b84b68,%rbx  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412e253: mov    0x8(%rsi),%esi
  0x00007fab7412e256: shl    $0x3,%rsi
  0x00007fab7412e25a: cmp    0x508(%rbx),%rsi
  0x00007fab7412e261: jne    0x00007fab7412e270
  0x00007fab7412e263: addq   $0x1,0x510(%rbx)
  0x00007fab7412e26b: jmpq   0x00007fab7412e432
  0x00007fab7412e270: cmp    0x518(%rbx),%rsi
  0x00007fab7412e277: jne    0x00007fab7412e286
  0x00007fab7412e279: addq   $0x1,0x520(%rbx)
  0x00007fab7412e281: jmpq   0x00007fab7412e432
  0x00007fab7412e286: cmp    0x528(%rbx),%rsi
  0x00007fab7412e28d: jne    0x00007fab7412e29c
  0x00007fab7412e28f: addq   $0x1,0x530(%rbx)
  0x00007fab7412e297: jmpq   0x00007fab7412e432
  0x00007fab7412e29c: cmp    0x538(%rbx),%rsi
  0x00007fab7412e2a3: jne    0x00007fab7412e2b2
  0x00007fab7412e2a5: addq   $0x1,0x540(%rbx)
  0x00007fab7412e2ad: jmpq   0x00007fab7412e432
  0x00007fab7412e2b2: cmp    0x548(%rbx),%rsi
  0x00007fab7412e2b9: jne    0x00007fab7412e2c8
  0x00007fab7412e2bb: addq   $0x1,0x550(%rbx)
  0x00007fab7412e2c3: jmpq   0x00007fab7412e432
  0x00007fab7412e2c8: cmp    0x558(%rbx),%rsi
  0x00007fab7412e2cf: jne    0x00007fab7412e2de
  0x00007fab7412e2d1: addq   $0x1,0x560(%rbx)
  0x00007fab7412e2d9: jmpq   0x00007fab7412e432
  0x00007fab7412e2de: cmp    0x568(%rbx),%rsi
  0x00007fab7412e2e5: jne    0x00007fab7412e2f4
  0x00007fab7412e2e7: addq   $0x1,0x570(%rbx)
  0x00007fab7412e2ef: jmpq   0x00007fab7412e432
  0x00007fab7412e2f4: cmp    0x578(%rbx),%rsi
  0x00007fab7412e2fb: jne    0x00007fab7412e30a
  0x00007fab7412e2fd: addq   $0x1,0x580(%rbx)
  0x00007fab7412e305: jmpq   0x00007fab7412e432
  0x00007fab7412e30a: cmpq   $0x0,0x508(%rbx)
  0x00007fab7412e315: jne    0x00007fab7412e32e
  0x00007fab7412e317: mov    %rsi,0x508(%rbx)
  0x00007fab7412e31e: movq   $0x1,0x510(%rbx)
  0x00007fab7412e329: jmpq   0x00007fab7412e432
  0x00007fab7412e32e: cmpq   $0x0,0x518(%rbx)
  0x00007fab7412e339: jne    0x00007fab7412e352
  0x00007fab7412e33b: mov    %rsi,0x518(%rbx)
  0x00007fab7412e342: movq   $0x1,0x520(%rbx)
  0x00007fab7412e34d: jmpq   0x00007fab7412e432
  0x00007fab7412e352: cmpq   $0x0,0x528(%rbx)
  0x00007fab7412e35d: jne    0x00007fab7412e376
  0x00007fab7412e35f: mov    %rsi,0x528(%rbx)
  0x00007fab7412e366: movq   $0x1,0x530(%rbx)
  0x00007fab7412e371: jmpq   0x00007fab7412e432
  0x00007fab7412e376: cmpq   $0x0,0x538(%rbx)
  0x00007fab7412e381: jne    0x00007fab7412e39a
  0x00007fab7412e383: mov    %rsi,0x538(%rbx)
  0x00007fab7412e38a: movq   $0x1,0x540(%rbx)
  0x00007fab7412e395: jmpq   0x00007fab7412e432
  0x00007fab7412e39a: cmpq   $0x0,0x548(%rbx)
  0x00007fab7412e3a5: jne    0x00007fab7412e3be
  0x00007fab7412e3a7: mov    %rsi,0x548(%rbx)
  0x00007fab7412e3ae: movq   $0x1,0x550(%rbx)
  0x00007fab7412e3b9: jmpq   0x00007fab7412e432
  0x00007fab7412e3be: cmpq   $0x0,0x558(%rbx)
  0x00007fab7412e3c9: jne    0x00007fab7412e3e2
  0x00007fab7412e3cb: mov    %rsi,0x558(%rbx)
  0x00007fab7412e3d2: movq   $0x1,0x560(%rbx)
  0x00007fab7412e3dd: jmpq   0x00007fab7412e432
  0x00007fab7412e3e2: cmpq   $0x0,0x568(%rbx)
  0x00007fab7412e3ed: jne    0x00007fab7412e406
  0x00007fab7412e3ef: mov    %rsi,0x568(%rbx)
  0x00007fab7412e3f6: movq   $0x1,0x570(%rbx)
  0x00007fab7412e401: jmpq   0x00007fab7412e432
  0x00007fab7412e406: cmpq   $0x0,0x578(%rbx)
  0x00007fab7412e411: jne    0x00007fab7412e42a
  0x00007fab7412e413: mov    %rsi,0x578(%rbx)
  0x00007fab7412e41a: movq   $0x1,0x580(%rbx)
  0x00007fab7412e425: jmpq   0x00007fab7412e432
  0x00007fab7412e42a: addq   $0x1,0x4f8(%rbx)
  0x00007fab7412e432: mov    %rdi,%rsi          ;*invokevirtual getClassPath {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@94 (line 522)

  0x00007fab7412e435: movabs $0xffffffffffffffff,%rax
  0x00007fab7412e43f: callq  0x00007fab74047f60  ; OopMap{[192]=Oop [176]=Oop [152]=Oop [200]=Oop [256]=Oop off=8132}
                                                ;*invokevirtual getClassPath {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@94 (line 522)
                                                ;   {virtual_call}
  0x00007fab7412e444: cmp    $0x0,%rax
  0x00007fab7412e448: movabs $0x7fab61b84b68,%rdx  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412e452: movabs $0x590,%rsi
  0x00007fab7412e45c: je     0x00007fab7412e46c
  0x00007fab7412e462: movabs $0x5a0,%rsi
  0x00007fab7412e46c: mov    (%rdx,%rsi,1),%rdi
  0x00007fab7412e470: lea    0x1(%rdi),%rdi
  0x00007fab7412e474: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab7412e478: je     0x00007fab7412e4ac  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@101 (line 523)

  0x00007fab7412e47e: mov    0x98(%rsp),%rsi
  0x00007fab7412e486: movabs $0x7fab61b84b68,%rdx  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412e490: addq   $0x1,0x5b0(%rdx)
  0x00007fab7412e498: mov    %rax,%rdx
  0x00007fab7412e49b: mov    0x98(%rsp),%rsi    ;*invokespecial push {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@107 (line 524)

  0x00007fab7412e4a3: nop
  0x00007fab7412e4a4: nop
  0x00007fab7412e4a5: nop
  0x00007fab7412e4a6: nop
  0x00007fab7412e4a7: callq  0x00007fab74047d60  ; OopMap{[192]=Oop [152]=Oop [200]=Oop [176]=Oop [256]=Oop off=8236}
                                                ;*invokespecial push {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@107 (line 524)
                                                ;   {optimized virtual_call}
  0x00007fab7412e4ac: movabs $0x7fab61b84b68,%rdx  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412e4b6: incl   0x5c0(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@110 (line 537)

  0x00007fab7412e4bc: mov    0x98(%rsp),%rsi
  0x00007fab7412e4c4: mov    0x18(%rsi),%edx
  0x00007fab7412e4c7: shl    $0x3,%rdx          ;*getfield loaders {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@166 (line 539)

  0x00007fab7412e4cb: cmp    (%rdx),%rax        ;*invokevirtual size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@169 (line 539)
                                                ; implicit exception: dispatches to 0x00007fab7412fe08
  0x00007fab7412e4ce: mov    %rdx,%rcx
  0x00007fab7412e4d1: movabs $0x7fab61b84b68,%rdi  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412e4db: movabs $0x7c0016f60,%r10  ;   {metadata(&apos;java/util/ArrayList&apos;)}
  0x00007fab7412e4e5: mov    %r10,0x9d8(%rdi)
  0x00007fab7412e4ec: addq   $0x1,0x9e0(%rdi)
  0x00007fab7412e4f4: mov    0x10(%rdx),%edx    ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::size@1 (line 278)
                                                ; - sun.misc.URLClassPath::getLoader@169 (line 539)

  0x00007fab7412e4f7: mov    %rsi,%rcx
  0x00007fab7412e4fa: movabs $0x7fab61b84b68,%rdi  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412e504: addq   $0x1,0xa60(%rdi)
  0x00007fab7412e50c: mov    0xc0(%rsp),%rcx
  0x00007fab7412e514: mov    %rsi,%rdi
  0x00007fab7412e517: mov    %rdi,%rsi          ;*invokespecial validateLookupCache {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@173 (line 539)

  0x00007fab7412e51a: nop
  0x00007fab7412e51b: nop
  0x00007fab7412e51c: nop
  0x00007fab7412e51d: nop
  0x00007fab7412e51e: nop
  0x00007fab7412e51f: callq  0x00007fab74047d60  ; OopMap{[192]=Oop [200]=Oop [152]=Oop [256]=Oop off=8356}
                                                ;*invokespecial validateLookupCache {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@173 (line 539)
                                                ;   {optimized virtual_call}
  0x00007fab7412e524: mov    0x98(%rsp),%rsi
  0x00007fab7412e52c: mov    0x18(%rsi),%edi
  0x00007fab7412e52f: shl    $0x3,%rdi          ;*getfield loaders {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@177 (line 540)

  0x00007fab7412e533: cmp    (%rdi),%rax        ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ; implicit exception: dispatches to 0x00007fab7412fe0d
  0x00007fab7412e536: mov    %rdi,%rdx
  0x00007fab7412e539: movabs $0x7fab61b84b68,%rbx  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412e543: movabs $0x7c0016f60,%r10  ;   {metadata(&apos;java/util/ArrayList&apos;)}
  0x00007fab7412e54d: mov    %r10,0xa80(%rbx)
  0x00007fab7412e554: addq   $0x1,0xa88(%rbx)
  0x00007fab7412e55c: movabs $0x7fab61b88d18,%rdx  ;   {metadata(method data for {method} {0x00007fab6197baa8} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412e566: mov    0xfc(%rdx),%ebx
  0x00007fab7412e56c: add    $0x8,%ebx
  0x00007fab7412e56f: mov    %ebx,0xfc(%rdx)
  0x00007fab7412e575: movabs $0x7fab6197baa8,%rdx  ;   {metadata({method} {0x00007fab6197baa8} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412e57f: and    $0x7ffff8,%ebx
  0x00007fab7412e585: cmp    $0x0,%ebx
  0x00007fab7412e588: je     0x00007fab7412fe12
  0x00007fab7412e58e: mov    0x10(%rdi),%edx    ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@2 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007fab7412e591: inc    %edx
  0x00007fab7412e593: mov    %rdi,%rbx
  0x00007fab7412e596: movabs $0x7fab61b88d18,%rax  ;   {metadata(method data for {method} {0x00007fab6197baa8} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412e5a0: addq   $0x1,0x130(%rax)
  0x00007fab7412e5a8: movabs $0x7fab61b88f38,%rbx  ;   {metadata(method data for {method} {0x00007fab6197ae78} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412e5b2: mov    0xfc(%rbx),%eax
  0x00007fab7412e5b8: add    $0x8,%eax
  0x00007fab7412e5bb: mov    %eax,0xfc(%rbx)
  0x00007fab7412e5c1: movabs $0x7fab6197ae78,%rbx  ;   {metadata({method} {0x00007fab6197ae78} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412e5cb: and    $0x7ffff8,%eax
  0x00007fab7412e5d1: cmp    $0x0,%eax
  0x00007fab7412e5d4: je     0x00007fab7412fe29
  0x00007fab7412e5da: mov    0x14(%rdi),%ebx
  0x00007fab7412e5dd: shl    $0x3,%rbx          ;*getfield elementData {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::ensureCapacityInternal@1 (line 223)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007fab7412e5e1: movabs $0x670b86db8,%r10  ;   {oop(a &apos;java/lang/Object&apos;[0] )}
  0x00007fab7412e5eb: cmp    %r10,%rbx
  0x00007fab7412e5ee: movabs $0x7fab61b88f38,%rax  ;   {metadata(method data for {method} {0x00007fab6197ae78} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412e5f8: movabs $0x130,%rcx
  0x00007fab7412e602: jne    0x00007fab7412e612
  0x00007fab7412e608: movabs $0x140,%rcx
  0x00007fab7412e612: mov    (%rax,%rcx,1),%r8
  0x00007fab7412e616: lea    0x1(%r8),%r8
  0x00007fab7412e61a: mov    %r8,(%rax,%rcx,1)
  0x00007fab7412e61e: jne    0x00007fab7412e6b6  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::ensureCapacityInternal@7 (line 223)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007fab7412e624: movabs $0x7fab61b88f38,%rax  ;   {metadata(method data for {method} {0x00007fab6197ae78} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412e62e: addq   $0x1,0x150(%rax)
  0x00007fab7412e636: movabs $0x7fab61b890f0,%rax  ;   {metadata(method data for {method} {0x00007fab619a5588} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7412e640: mov    0xfc(%rax),%ecx
  0x00007fab7412e646: add    $0x8,%ecx
  0x00007fab7412e649: mov    %ecx,0xfc(%rax)
  0x00007fab7412e64f: movabs $0x7fab619a5588,%rax  ;   {metadata({method} {0x00007fab619a5588} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7412e659: and    $0x7ffff8,%ecx
  0x00007fab7412e65f: cmp    $0x0,%ecx
  0x00007fab7412e662: je     0x00007fab7412fe40
  0x00007fab7412e668: cmp    $0xa,%edx
  0x00007fab7412e66b: movabs $0x7fab61b890f0,%rax  ;   {metadata(method data for {method} {0x00007fab619a5588} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7412e675: movabs $0x130,%rcx
  0x00007fab7412e67f: jg     0x00007fab7412e68f
  0x00007fab7412e685: movabs $0x140,%rcx
  0x00007fab7412e68f: mov    (%rax,%rcx,1),%r8
  0x00007fab7412e693: lea    0x1(%r8),%r8
  0x00007fab7412e697: mov    %r8,(%rax,%rcx,1)
  0x00007fab7412e69b: jg     0x00007fab7412e6b6  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::max@2 (line 1252)
                                                ; - java.util.ArrayList::ensureCapacityInternal@13 (line 224)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007fab7412e6a1: movabs $0x7fab61b890f0,%rdx  ;   {metadata(method data for {method} {0x00007fab619a5588} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7412e6ab: incl   0x150(%rdx)
  0x00007fab7412e6b1: mov    $0xa,%edx          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::max@6 (line 1252)
                                                ; - java.util.ArrayList::ensureCapacityInternal@13 (line 224)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007fab7412e6b6: mov    %rdi,%rax
  0x00007fab7412e6b9: movabs $0x7fab61b88f38,%rcx  ;   {metadata(method data for {method} {0x00007fab6197ae78} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412e6c3: addq   $0x1,0x160(%rcx)
  0x00007fab7412e6cb: movabs $0x7fab61b89278,%rax  ;   {metadata(method data for {method} {0x00007fab6197af40} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412e6d5: mov    0xfc(%rax),%ecx
  0x00007fab7412e6db: add    $0x8,%ecx
  0x00007fab7412e6de: mov    %ecx,0xfc(%rax)
  0x00007fab7412e6e4: movabs $0x7fab6197af40,%rax  ;   {metadata({method} {0x00007fab6197af40} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412e6ee: and    $0x7ffff8,%ecx
  0x00007fab7412e6f4: cmp    $0x0,%ecx
  0x00007fab7412e6f7: je     0x00007fab7412fe57
  0x00007fab7412e6fd: mov    0xc(%rdi),%eax     ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::ensureExplicitCapacity@2 (line 231)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007fab7412e700: inc    %eax
  0x00007fab7412e702: mov    %eax,0xc(%rdi)     ;*putfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::ensureExplicitCapacity@7 (line 231)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007fab7412e705: mov    0xc(%rbx),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 234)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ; implicit exception: dispatches to 0x00007fab7412fe6e
  0x00007fab7412e708: mov    %rdx,%rax
  0x00007fab7412e70b: sub    %ebx,%eax
  0x00007fab7412e70d: cmp    $0x0,%eax
  0x00007fab7412e710: movabs $0x7fab61b89278,%rbx  ;   {metadata(method data for {method} {0x00007fab6197af40} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412e71a: movabs $0x130,%rax
  0x00007fab7412e724: jle    0x00007fab7412e734
  0x00007fab7412e72a: movabs $0x140,%rax
  0x00007fab7412e734: mov    (%rbx,%rax,1),%rcx
  0x00007fab7412e738: lea    0x1(%rcx),%rcx
  0x00007fab7412e73c: mov    %rcx,(%rbx,%rax,1)
  0x00007fab7412e740: jg     0x00007fab7412e753  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::ensureExplicitCapacity@17 (line 234)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007fab7412e746: mov    %rdi,0xd0(%rsp)
  0x00007fab7412e74e: jmpq   0x00007fab7412e77c  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::ensureExplicitCapacity@25 (line 236)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007fab7412e753: mov    %rdi,%rbx
  0x00007fab7412e756: movabs $0x7fab61b89278,%rax  ;   {metadata(method data for {method} {0x00007fab6197af40} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412e760: addq   $0x1,0x150(%rax)
  0x00007fab7412e768: mov    %rdi,%rsi          ;*invokespecial grow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::ensureExplicitCapacity@22 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007fab7412e76b: mov    %rdi,0xd0(%rsp)
  0x00007fab7412e773: nop
  0x00007fab7412e774: nop
  0x00007fab7412e775: nop
  0x00007fab7412e776: nop
  0x00007fab7412e777: callq  0x00007fab74047d60  ; OopMap{[192]=Oop [200]=Oop [152]=Oop [208]=Oop [256]=Oop off=8956}
                                                ;*invokespecial grow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::ensureExplicitCapacity@22 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {optimized virtual_call}
  0x00007fab7412e77c: mov    0xd0(%rsp),%rdi
  0x00007fab7412e784: mov    0xc8(%rsp),%rbx
  0x00007fab7412e78c: mov    0x14(%rdi),%esi
  0x00007fab7412e78f: shl    $0x3,%rsi          ;*getfield elementData {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@11 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007fab7412e793: mov    0x10(%rdi),%eax    ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@16 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007fab7412e796: mov    %rax,%rdx
  0x00007fab7412e799: inc    %edx
  0x00007fab7412e79b: mov    %edx,0x10(%rdi)    ;*putfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@22 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007fab7412e79e: movslq %eax,%rdi
  0x00007fab7412e7a1: lea    0x10(%rsi,%rdi,4),%rdi
  0x00007fab7412e7a6: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x00007fab7412fe73
  0x00007fab7412e7a9: jae    0x00007fab7412fe7d
  0x00007fab7412e7af: cmp    $0x0,%rbx
  0x00007fab7412e7b3: jne    0x00007fab7412e7ce
  0x00007fab7412e7b5: movabs $0x7fab61b88d18,%rax  ;   {metadata(method data for {method} {0x00007fab6197baa8} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412e7bf: orl    $0x100,0x138(%rax)
  0x00007fab7412e7c9: jmpq   0x00007fab7412ea0e
  0x00007fab7412e7ce: mov    0x8(%rsi),%esi     ; implicit exception: dispatches to 0x00007fab7412fe86
  0x00007fab7412e7d1: shl    $0x3,%rsi
  0x00007fab7412e7d5: mov    0x8(%rbx),%eax
  0x00007fab7412e7d8: shl    $0x3,%rax
  0x00007fab7412e7dc: mov    0xe0(%rsi),%rsi
  0x00007fab7412e7e3: cmp    %rsi,%rax
  0x00007fab7412e7e6: je     0x00007fab7412e814
  0x00007fab7412e7ec: mov    0xc(%rsi),%edx
  0x00007fab7412e7ef: cmp    (%rax,%rdx,1),%rsi
  0x00007fab7412e7f3: je     0x00007fab7412e814
  0x00007fab7412e7f9: cmp    $0x18,%edx
  0x00007fab7412e7fc: jne    0x00007fab7412e9f7
  0x00007fab7412e802: push   %rax
  0x00007fab7412e803: push   %rsi
  0x00007fab7412e804: callq  0x00007fab740fe720  ;   {runtime_call}
  0x00007fab7412e809: pop    %rax
  0x00007fab7412e80a: pop    %rsi
  0x00007fab7412e80b: cmp    $0x0,%esi
  0x00007fab7412e80e: je     0x00007fab7412e9f7
  0x00007fab7412e814: movabs $0x7fab61b88d18,%rax  ;   {metadata(method data for {method} {0x00007fab6197baa8} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412e81e: mov    0x8(%rbx),%esi
  0x00007fab7412e821: shl    $0x3,%rsi
  0x00007fab7412e825: cmp    0x150(%rax),%rsi
  0x00007fab7412e82c: jne    0x00007fab7412e83b
  0x00007fab7412e82e: addq   $0x1,0x158(%rax)
  0x00007fab7412e836: jmpq   0x00007fab7412ea0e
  0x00007fab7412e83b: cmp    0x160(%rax),%rsi
  0x00007fab7412e842: jne    0x00007fab7412e851
  0x00007fab7412e844: addq   $0x1,0x168(%rax)
  0x00007fab7412e84c: jmpq   0x00007fab7412ea0e
  0x00007fab7412e851: cmp    0x170(%rax),%rsi
  0x00007fab7412e858: jne    0x00007fab7412e867
  0x00007fab7412e85a: addq   $0x1,0x178(%rax)
  0x00007fab7412e862: jmpq   0x00007fab7412ea0e
  0x00007fab7412e867: cmp    0x180(%rax),%rsi
  0x00007fab7412e86e: jne    0x00007fab7412e87d
  0x00007fab7412e870: addq   $0x1,0x188(%rax)
  0x00007fab7412e878: jmpq   0x00007fab7412ea0e
  0x00007fab7412e87d: cmp    0x190(%rax),%rsi
  0x00007fab7412e884: jne    0x00007fab7412e893
  0x00007fab7412e886: addq   $0x1,0x198(%rax)
  0x00007fab7412e88e: jmpq   0x00007fab7412ea0e
  0x00007fab7412e893: cmp    0x1a0(%rax),%rsi
  0x00007fab7412e89a: jne    0x00007fab7412e8a9
  0x00007fab7412e89c: addq   $0x1,0x1a8(%rax)
  0x00007fab7412e8a4: jmpq   0x00007fab7412ea0e
  0x00007fab7412e8a9: cmp    0x1b0(%rax),%rsi
  0x00007fab7412e8b0: jne    0x00007fab7412e8bf
  0x00007fab7412e8b2: addq   $0x1,0x1b8(%rax)
  0x00007fab7412e8ba: jmpq   0x00007fab7412ea0e
  0x00007fab7412e8bf: cmp    0x1c0(%rax),%rsi
  0x00007fab7412e8c6: jne    0x00007fab7412e8d5
  0x00007fab7412e8c8: addq   $0x1,0x1c8(%rax)
  0x00007fab7412e8d0: jmpq   0x00007fab7412ea0e
  0x00007fab7412e8d5: cmpq   $0x0,0x150(%rax)
  0x00007fab7412e8e0: jne    0x00007fab7412e8f9
  0x00007fab7412e8e2: mov    %rsi,0x150(%rax)
  0x00007fab7412e8e9: movq   $0x1,0x158(%rax)
  0x00007fab7412e8f4: jmpq   0x00007fab7412ea0e
  0x00007fab7412e8f9: cmpq   $0x0,0x160(%rax)
  0x00007fab7412e904: jne    0x00007fab7412e91d
  0x00007fab7412e906: mov    %rsi,0x160(%rax)
  0x00007fab7412e90d: movq   $0x1,0x168(%rax)
  0x00007fab7412e918: jmpq   0x00007fab7412ea0e
  0x00007fab7412e91d: cmpq   $0x0,0x170(%rax)
  0x00007fab7412e928: jne    0x00007fab7412e941
  0x00007fab7412e92a: mov    %rsi,0x170(%rax)
  0x00007fab7412e931: movq   $0x1,0x178(%rax)
  0x00007fab7412e93c: jmpq   0x00007fab7412ea0e
  0x00007fab7412e941: cmpq   $0x0,0x180(%rax)
  0x00007fab7412e94c: jne    0x00007fab7412e965
  0x00007fab7412e94e: mov    %rsi,0x180(%rax)
  0x00007fab7412e955: movq   $0x1,0x188(%rax)
  0x00007fab7412e960: jmpq   0x00007fab7412ea0e
  0x00007fab7412e965: cmpq   $0x0,0x190(%rax)
  0x00007fab7412e970: jne    0x00007fab7412e989
  0x00007fab7412e972: mov    %rsi,0x190(%rax)
  0x00007fab7412e979: movq   $0x1,0x198(%rax)
  0x00007fab7412e984: jmpq   0x00007fab7412ea0e
  0x00007fab7412e989: cmpq   $0x0,0x1a0(%rax)
  0x00007fab7412e994: jne    0x00007fab7412e9ad
  0x00007fab7412e996: mov    %rsi,0x1a0(%rax)
  0x00007fab7412e99d: movq   $0x1,0x1a8(%rax)
  0x00007fab7412e9a8: jmpq   0x00007fab7412ea0e
  0x00007fab7412e9ad: cmpq   $0x0,0x1b0(%rax)
  0x00007fab7412e9b8: jne    0x00007fab7412e9d1
  0x00007fab7412e9ba: mov    %rsi,0x1b0(%rax)
  0x00007fab7412e9c1: movq   $0x1,0x1b8(%rax)
  0x00007fab7412e9cc: jmpq   0x00007fab7412ea0e
  0x00007fab7412e9d1: cmpq   $0x0,0x1c0(%rax)
  0x00007fab7412e9dc: jne    0x00007fab7412e9f5
  0x00007fab7412e9de: mov    %rsi,0x1c0(%rax)
  0x00007fab7412e9e5: movq   $0x1,0x1c8(%rax)
  0x00007fab7412e9f0: jmpq   0x00007fab7412ea0e
  0x00007fab7412e9f5: jmp    0x00007fab7412ea0e
  0x00007fab7412e9f7: movabs $0x7fab61b88d18,%rax  ;   {metadata(method data for {method} {0x00007fab6197baa8} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412ea01: subq   $0x1,0x140(%rax)
  0x00007fab7412ea09: jmpq   0x00007fab7412fe8b
  0x00007fab7412ea0e: mov    %rbx,%r10
  0x00007fab7412ea11: shr    $0x3,%r10
  0x00007fab7412ea15: mov    %r10d,(%rdi)
  0x00007fab7412ea18: shr    $0x9,%rdi
  0x00007fab7412ea1c: movabs $0x7fab701ff000,%rsi
  0x00007fab7412ea26: movb   $0x0,(%rdi,%rsi,1)  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007fab7412ea2a: mov    0xc0(%rsp),%rax
  0x00007fab7412ea32: mov    0x98(%rsp),%rsi
  0x00007fab7412ea3a: mov    0x1c(%rsi),%edi
  0x00007fab7412ea3d: shl    $0x3,%rdi          ;*getfield lmap {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@187 (line 541)

  0x00007fab7412ea41: cmp    (%rdi),%rax        ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)
                                                ; implicit exception: dispatches to 0x00007fab7412fe94
  0x00007fab7412ea44: mov    %rdi,%rdx
  0x00007fab7412ea47: movabs $0x7fab61b84b68,%rcx  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412ea51: mov    0x8(%rdx),%edx
  0x00007fab7412ea54: shl    $0x3,%rdx
  0x00007fab7412ea58: cmp    0xb18(%rcx),%rdx
  0x00007fab7412ea5f: jne    0x00007fab7412ea6e
  0x00007fab7412ea61: addq   $0x1,0xb20(%rcx)
  0x00007fab7412ea69: jmpq   0x00007fab7412ec30
  0x00007fab7412ea6e: cmp    0xb28(%rcx),%rdx
  0x00007fab7412ea75: jne    0x00007fab7412ea84
  0x00007fab7412ea77: addq   $0x1,0xb30(%rcx)
  0x00007fab7412ea7f: jmpq   0x00007fab7412ec30
  0x00007fab7412ea84: cmp    0xb38(%rcx),%rdx
  0x00007fab7412ea8b: jne    0x00007fab7412ea9a
  0x00007fab7412ea8d: addq   $0x1,0xb40(%rcx)
  0x00007fab7412ea95: jmpq   0x00007fab7412ec30
  0x00007fab7412ea9a: cmp    0xb48(%rcx),%rdx
  0x00007fab7412eaa1: jne    0x00007fab7412eab0
  0x00007fab7412eaa3: addq   $0x1,0xb50(%rcx)
  0x00007fab7412eaab: jmpq   0x00007fab7412ec30
  0x00007fab7412eab0: cmp    0xb58(%rcx),%rdx
  0x00007fab7412eab7: jne    0x00007fab7412eac6
  0x00007fab7412eab9: addq   $0x1,0xb60(%rcx)
  0x00007fab7412eac1: jmpq   0x00007fab7412ec30
  0x00007fab7412eac6: cmp    0xb68(%rcx),%rdx
  0x00007fab7412eacd: jne    0x00007fab7412eadc
  0x00007fab7412eacf: addq   $0x1,0xb70(%rcx)
  0x00007fab7412ead7: jmpq   0x00007fab7412ec30
  0x00007fab7412eadc: cmp    0xb78(%rcx),%rdx
  0x00007fab7412eae3: jne    0x00007fab7412eaf2
  0x00007fab7412eae5: addq   $0x1,0xb80(%rcx)
  0x00007fab7412eaed: jmpq   0x00007fab7412ec30
  0x00007fab7412eaf2: cmp    0xb88(%rcx),%rdx
  0x00007fab7412eaf9: jne    0x00007fab7412eb08
  0x00007fab7412eafb: addq   $0x1,0xb90(%rcx)
  0x00007fab7412eb03: jmpq   0x00007fab7412ec30
  0x00007fab7412eb08: cmpq   $0x0,0xb18(%rcx)
  0x00007fab7412eb13: jne    0x00007fab7412eb2c
  0x00007fab7412eb15: mov    %rdx,0xb18(%rcx)
  0x00007fab7412eb1c: movq   $0x1,0xb20(%rcx)
  0x00007fab7412eb27: jmpq   0x00007fab7412ec30
  0x00007fab7412eb2c: cmpq   $0x0,0xb28(%rcx)
  0x00007fab7412eb37: jne    0x00007fab7412eb50
  0x00007fab7412eb39: mov    %rdx,0xb28(%rcx)
  0x00007fab7412eb40: movq   $0x1,0xb30(%rcx)
  0x00007fab7412eb4b: jmpq   0x00007fab7412ec30
  0x00007fab7412eb50: cmpq   $0x0,0xb38(%rcx)
  0x00007fab7412eb5b: jne    0x00007fab7412eb74
  0x00007fab7412eb5d: mov    %rdx,0xb38(%rcx)
  0x00007fab7412eb64: movq   $0x1,0xb40(%rcx)
  0x00007fab7412eb6f: jmpq   0x00007fab7412ec30
  0x00007fab7412eb74: cmpq   $0x0,0xb48(%rcx)
  0x00007fab7412eb7f: jne    0x00007fab7412eb98
  0x00007fab7412eb81: mov    %rdx,0xb48(%rcx)
  0x00007fab7412eb88: movq   $0x1,0xb50(%rcx)
  0x00007fab7412eb93: jmpq   0x00007fab7412ec30
  0x00007fab7412eb98: cmpq   $0x0,0xb58(%rcx)
  0x00007fab7412eba3: jne    0x00007fab7412ebbc
  0x00007fab7412eba5: mov    %rdx,0xb58(%rcx)
  0x00007fab7412ebac: movq   $0x1,0xb60(%rcx)
  0x00007fab7412ebb7: jmpq   0x00007fab7412ec30
  0x00007fab7412ebbc: cmpq   $0x0,0xb68(%rcx)
  0x00007fab7412ebc7: jne    0x00007fab7412ebe0
  0x00007fab7412ebc9: mov    %rdx,0xb68(%rcx)
  0x00007fab7412ebd0: movq   $0x1,0xb70(%rcx)
  0x00007fab7412ebdb: jmpq   0x00007fab7412ec30
  0x00007fab7412ebe0: cmpq   $0x0,0xb78(%rcx)
  0x00007fab7412ebeb: jne    0x00007fab7412ec04
  0x00007fab7412ebed: mov    %rdx,0xb78(%rcx)
  0x00007fab7412ebf4: movq   $0x1,0xb80(%rcx)
  0x00007fab7412ebff: jmpq   0x00007fab7412ec30
  0x00007fab7412ec04: cmpq   $0x0,0xb88(%rcx)
  0x00007fab7412ec0f: jne    0x00007fab7412ec28
  0x00007fab7412ec11: mov    %rdx,0xb88(%rcx)
  0x00007fab7412ec18: movq   $0x1,0xb90(%rcx)
  0x00007fab7412ec23: jmpq   0x00007fab7412ec30
  0x00007fab7412ec28: addq   $0x1,0xb08(%rcx)
  0x00007fab7412ec30: movabs $0x7fab61b895e8,%rdx  ;   {metadata(method data for {method} {0x00007fab61998660} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7412ec3a: mov    0xfc(%rdx),%ecx
  0x00007fab7412ec40: add    $0x8,%ecx
  0x00007fab7412ec43: mov    %ecx,0xfc(%rdx)
  0x00007fab7412ec49: movabs $0x7fab61998660,%rdx  ;   {metadata({method} {0x00007fab61998660} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7412ec53: and    $0x7ffff8,%ecx
  0x00007fab7412ec59: cmp    $0x0,%ecx
  0x00007fab7412ec5c: je     0x00007fab7412fe99
  0x00007fab7412ec62: movabs $0x7fab61b895e8,%rdx  ;   {metadata(method data for {method} {0x00007fab61998660} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7412ec6c: addq   $0x1,0x130(%rdx)
  0x00007fab7412ec74: movabs $0x7fab61b81320,%rdx  ;   {metadata(method data for {method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7412ec7e: mov    0xfc(%rdx),%ecx
  0x00007fab7412ec84: add    $0x8,%ecx
  0x00007fab7412ec87: mov    %ecx,0xfc(%rdx)
  0x00007fab7412ec8d: movabs $0x7fab61997920,%rdx  ;   {metadata({method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7412ec97: and    $0x7ffff8,%ecx
  0x00007fab7412ec9d: cmp    $0x0,%ecx
  0x00007fab7412eca0: je     0x00007fab7412feb0
  0x00007fab7412eca6: cmp    $0x0,%rax
  0x00007fab7412ecaa: movabs $0x7fab61b81320,%rdx  ;   {metadata(method data for {method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7412ecb4: movabs $0x130,%rcx
  0x00007fab7412ecbe: jne    0x00007fab7412ecce
  0x00007fab7412ecc4: movabs $0x140,%rcx
  0x00007fab7412ecce: mov    (%rdx,%rcx,1),%r8
  0x00007fab7412ecd2: lea    0x1(%r8),%r8
  0x00007fab7412ecd6: mov    %r8,(%rdx,%rcx,1)
  0x00007fab7412ecda: jne    0x00007fab7412ed02  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)

  0x00007fab7412ece0: movabs $0x7fab61b81320,%rdx  ;   {metadata(method data for {method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7412ecea: incl   0x150(%rdx)
  0x00007fab7412ecf0: mov    $0x0,%edx
  0x00007fab7412ecf5: mov    %rdi,0xd8(%rsp)
  0x00007fab7412ecfd: jmpq   0x00007fab7412ed35  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)

  0x00007fab7412ed02: mov    %rdi,0xd8(%rsp)
  0x00007fab7412ed0a: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00007fab7412fec7
  0x00007fab7412ed0d: mov    %rax,%rdx
  0x00007fab7412ed10: movabs $0x7fab61b81320,%rcx  ;   {metadata(method data for {method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7412ed1a: addq   $0x1,0x168(%rcx)
  0x00007fab7412ed22: mov    %rax,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)

  0x00007fab7412ed25: nop
  0x00007fab7412ed26: nop
  0x00007fab7412ed27: callq  0x00007fab74047d60  ; OopMap{[152]=Oop [200]=Oop [216]=Oop [192]=Oop [256]=Oop off=10412}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)
                                                ;   {optimized virtual_call}
  0x00007fab7412ed2c: mov    %rax,%rdx
  0x00007fab7412ed2f: shr    $0x10,%edx
  0x00007fab7412ed32: xor    %rax,%rdx
  0x00007fab7412ed35: mov    0xd8(%rsp),%rsi
  0x00007fab7412ed3d: mov    0xc8(%rsp),%rdi
  0x00007fab7412ed45: mov    %rsi,%rcx
  0x00007fab7412ed48: movabs $0x7fab61b895e8,%r8  ;   {metadata(method data for {method} {0x00007fab61998660} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7412ed52: addq   $0x1,0x140(%r8)
  0x00007fab7412ed5a: mov    0xc0(%rsp),%rcx
  0x00007fab7412ed62: mov    %rdi,%r8
  0x00007fab7412ed65: mov    $0x0,%r9d
  0x00007fab7412ed6b: mov    $0x1,%edi          ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@9 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)

  0x00007fab7412ed70: nop
  0x00007fab7412ed71: nop
  0x00007fab7412ed72: nop
  0x00007fab7412ed73: nop
  0x00007fab7412ed74: nop
  0x00007fab7412ed75: nop
  0x00007fab7412ed76: nop
  0x00007fab7412ed77: callq  0x00007fab74047d60  ; OopMap{[152]=Oop [256]=Oop off=10492}
                                                ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@9 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)
                                                ;   {optimized virtual_call}
  0x00007fab7412ed7c: jmpq   0x00007fab7412f2a4  ;*pop {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@196 (line 541)

  0x00007fab7412ed81: mov    0x2c0(%r15),%rax
  0x00007fab7412ed88: xor    %r10,%r10
  0x00007fab7412ed8b: mov    %r10,0x2c0(%r15)
  0x00007fab7412ed92: xor    %r10,%r10
  0x00007fab7412ed95: mov    %r10,0x2c8(%r15)
  0x00007fab7412ed9c: mov    %rax,%rsi
  0x00007fab7412ed9f: movabs $0x7fab61b88070,%rdx  ;   {metadata(method data for {method} {0x00007fab61a985d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412eda9: mov    0x8(%rsi),%esi
  0x00007fab7412edac: shl    $0x3,%rsi
  0x00007fab7412edb0: cmp    0x1f8(%rdx),%rsi
  0x00007fab7412edb7: jne    0x00007fab7412edc6
  0x00007fab7412edb9: addq   $0x1,0x200(%rdx)
  0x00007fab7412edc1: jmpq   0x00007fab7412ef88
  0x00007fab7412edc6: cmp    0x208(%rdx),%rsi
  0x00007fab7412edcd: jne    0x00007fab7412eddc
  0x00007fab7412edcf: addq   $0x1,0x210(%rdx)
  0x00007fab7412edd7: jmpq   0x00007fab7412ef88
  0x00007fab7412eddc: cmp    0x218(%rdx),%rsi
  0x00007fab7412ede3: jne    0x00007fab7412edf2
  0x00007fab7412ede5: addq   $0x1,0x220(%rdx)
  0x00007fab7412eded: jmpq   0x00007fab7412ef88
  0x00007fab7412edf2: cmp    0x228(%rdx),%rsi
  0x00007fab7412edf9: jne    0x00007fab7412ee08
  0x00007fab7412edfb: addq   $0x1,0x230(%rdx)
  0x00007fab7412ee03: jmpq   0x00007fab7412ef88
  0x00007fab7412ee08: cmp    0x238(%rdx),%rsi
  0x00007fab7412ee0f: jne    0x00007fab7412ee1e
  0x00007fab7412ee11: addq   $0x1,0x240(%rdx)
  0x00007fab7412ee19: jmpq   0x00007fab7412ef88
  0x00007fab7412ee1e: cmp    0x248(%rdx),%rsi
  0x00007fab7412ee25: jne    0x00007fab7412ee34
  0x00007fab7412ee27: addq   $0x1,0x250(%rdx)
  0x00007fab7412ee2f: jmpq   0x00007fab7412ef88
  0x00007fab7412ee34: cmp    0x258(%rdx),%rsi
  0x00007fab7412ee3b: jne    0x00007fab7412ee4a
  0x00007fab7412ee3d: addq   $0x1,0x260(%rdx)
  0x00007fab7412ee45: jmpq   0x00007fab7412ef88
  0x00007fab7412ee4a: cmp    0x268(%rdx),%rsi
  0x00007fab7412ee51: jne    0x00007fab7412ee60
  0x00007fab7412ee53: addq   $0x1,0x270(%rdx)
  0x00007fab7412ee5b: jmpq   0x00007fab7412ef88
  0x00007fab7412ee60: cmpq   $0x0,0x1f8(%rdx)
  0x00007fab7412ee6b: jne    0x00007fab7412ee84
  0x00007fab7412ee6d: mov    %rsi,0x1f8(%rdx)
  0x00007fab7412ee74: movq   $0x1,0x200(%rdx)
  0x00007fab7412ee7f: jmpq   0x00007fab7412ef88
  0x00007fab7412ee84: cmpq   $0x0,0x208(%rdx)
  0x00007fab7412ee8f: jne    0x00007fab7412eea8
  0x00007fab7412ee91: mov    %rsi,0x208(%rdx)
  0x00007fab7412ee98: movq   $0x1,0x210(%rdx)
  0x00007fab7412eea3: jmpq   0x00007fab7412ef88
  0x00007fab7412eea8: cmpq   $0x0,0x218(%rdx)
  0x00007fab7412eeb3: jne    0x00007fab7412eecc
  0x00007fab7412eeb5: mov    %rsi,0x218(%rdx)
  0x00007fab7412eebc: movq   $0x1,0x220(%rdx)
  0x00007fab7412eec7: jmpq   0x00007fab7412ef88
  0x00007fab7412eecc: cmpq   $0x0,0x228(%rdx)
  0x00007fab7412eed7: jne    0x00007fab7412eef0
  0x00007fab7412eed9: mov    %rsi,0x228(%rdx)
  0x00007fab7412eee0: movq   $0x1,0x230(%rdx)
  0x00007fab7412eeeb: jmpq   0x00007fab7412ef88
  0x00007fab7412eef0: cmpq   $0x0,0x238(%rdx)
  0x00007fab7412eefb: jne    0x00007fab7412ef14
  0x00007fab7412eefd: mov    %rsi,0x238(%rdx)
  0x00007fab7412ef04: movq   $0x1,0x240(%rdx)
  0x00007fab7412ef0f: jmpq   0x00007fab7412ef88
  0x00007fab7412ef14: cmpq   $0x0,0x248(%rdx)
  0x00007fab7412ef1f: jne    0x00007fab7412ef38
  0x00007fab7412ef21: mov    %rsi,0x248(%rdx)
  0x00007fab7412ef28: movq   $0x1,0x250(%rdx)
  0x00007fab7412ef33: jmpq   0x00007fab7412ef88
  0x00007fab7412ef38: cmpq   $0x0,0x258(%rdx)
  0x00007fab7412ef43: jne    0x00007fab7412ef5c
  0x00007fab7412ef45: mov    %rsi,0x258(%rdx)
  0x00007fab7412ef4c: movq   $0x1,0x260(%rdx)
  0x00007fab7412ef57: jmpq   0x00007fab7412ef88
  0x00007fab7412ef5c: cmpq   $0x0,0x268(%rdx)
  0x00007fab7412ef67: jne    0x00007fab7412ef80
  0x00007fab7412ef69: mov    %rsi,0x268(%rdx)
  0x00007fab7412ef70: movq   $0x1,0x270(%rdx)
  0x00007fab7412ef7b: jmpq   0x00007fab7412ef88
  0x00007fab7412ef80: addq   $0x1,0x1e8(%rdx)
  0x00007fab7412ef88: mov    %rax,%rsi          ;*invokevirtual getException {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@22 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00007fab7412ef8b: nop
  0x00007fab7412ef8c: nop
  0x00007fab7412ef8d: movabs $0xffffffffffffffff,%rax
  0x00007fab7412ef97: callq  0x00007fab74047f60  ; OopMap{[152]=Oop [192]=Oop [176]=Oop [256]=Oop off=11036}
                                                ;*invokevirtual getException {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@22 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {virtual_call}
  0x00007fab7412ef9c: cmp    $0x0,%rax
  0x00007fab7412efa0: jne    0x00007fab7412efbb
  0x00007fab7412efa2: movabs $0x7fab61b88070,%rdi  ;   {metadata(method data for {method} {0x00007fab61a985d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412efac: orl    $0x100,0x278(%rdi)
  0x00007fab7412efb6: jmpq   0x00007fab7412f204
  0x00007fab7412efbb: nopl   0x0(%rax,%rax,1)
  0x00007fab7412efc0: jmpq   0x00007fab7412fedb  ;   {no_reloc}
  0x00007fab7412efc5: add    %al,(%rax)
  0x00007fab7412efc7: add    %al,(%rax)
  0x00007fab7412efc9: add    %cl,-0x3eb7f788(%rbx)
  0x00007fab7412efcf: out    %eax,$0x3
  0x00007fab7412efd1: cmp    %rcx,%rdi
  0x00007fab7412efd4: je     0x00007fab7412f002
  0x00007fab7412efda: mov    0xc(%rcx),%esi
  0x00007fab7412efdd: cmp    (%rdi,%rsi,1),%rcx
  0x00007fab7412efe1: je     0x00007fab7412f002
  0x00007fab7412efe7: cmp    $0x18,%esi
  0x00007fab7412efea: jne    0x00007fab7412f1e8
  0x00007fab7412eff0: push   %rdi
  0x00007fab7412eff1: push   %rcx
  0x00007fab7412eff2: callq  0x00007fab740fe720  ;   {runtime_call}
  0x00007fab7412eff7: pop    %rdi
  0x00007fab7412eff8: pop    %rcx
  0x00007fab7412eff9: cmp    $0x0,%ecx
  0x00007fab7412effc: je     0x00007fab7412f1e8
  0x00007fab7412f002: movabs $0x7fab61b88070,%rdi  ;   {metadata(method data for {method} {0x00007fab61a985d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412f00c: mov    0x8(%rax),%ecx
  0x00007fab7412f00f: shl    $0x3,%rcx
  0x00007fab7412f013: cmp    0x290(%rdi),%rcx
  0x00007fab7412f01a: jne    0x00007fab7412f029
  0x00007fab7412f01c: addq   $0x1,0x298(%rdi)
  0x00007fab7412f024: jmpq   0x00007fab7412f204
  0x00007fab7412f029: cmp    0x2a0(%rdi),%rcx
  0x00007fab7412f030: jne    0x00007fab7412f03f
  0x00007fab7412f032: addq   $0x1,0x2a8(%rdi)
  0x00007fab7412f03a: jmpq   0x00007fab7412f204
  0x00007fab7412f03f: cmp    0x2b0(%rdi),%rcx
  0x00007fab7412f046: jne    0x00007fab7412f055
  0x00007fab7412f048: addq   $0x1,0x2b8(%rdi)
  0x00007fab7412f050: jmpq   0x00007fab7412f204
  0x00007fab7412f055: cmp    0x2c0(%rdi),%rcx
  0x00007fab7412f05c: jne    0x00007fab7412f06b
  0x00007fab7412f05e: addq   $0x1,0x2c8(%rdi)
  0x00007fab7412f066: jmpq   0x00007fab7412f204
  0x00007fab7412f06b: cmp    0x2d0(%rdi),%rcx
  0x00007fab7412f072: jne    0x00007fab7412f081
  0x00007fab7412f074: addq   $0x1,0x2d8(%rdi)
  0x00007fab7412f07c: jmpq   0x00007fab7412f204
  0x00007fab7412f081: cmp    0x2e0(%rdi),%rcx
  0x00007fab7412f088: jne    0x00007fab7412f097
  0x00007fab7412f08a: addq   $0x1,0x2e8(%rdi)
  0x00007fab7412f092: jmpq   0x00007fab7412f204
  0x00007fab7412f097: cmp    0x2f0(%rdi),%rcx
  0x00007fab7412f09e: jne    0x00007fab7412f0ad
  0x00007fab7412f0a0: addq   $0x1,0x2f8(%rdi)
  0x00007fab7412f0a8: jmpq   0x00007fab7412f204
  0x00007fab7412f0ad: cmp    0x300(%rdi),%rcx
  0x00007fab7412f0b4: jne    0x00007fab7412f0c3
  0x00007fab7412f0b6: addq   $0x1,0x308(%rdi)
  0x00007fab7412f0be: jmpq   0x00007fab7412f204
  0x00007fab7412f0c3: cmpq   $0x0,0x290(%rdi)
  0x00007fab7412f0ce: jne    0x00007fab7412f0e7
  0x00007fab7412f0d0: mov    %rcx,0x290(%rdi)
  0x00007fab7412f0d7: movq   $0x1,0x298(%rdi)
  0x00007fab7412f0e2: jmpq   0x00007fab7412f204
  0x00007fab7412f0e7: cmpq   $0x0,0x2a0(%rdi)
  0x00007fab7412f0f2: jne    0x00007fab7412f10b
  0x00007fab7412f0f4: mov    %rcx,0x2a0(%rdi)
  0x00007fab7412f0fb: movq   $0x1,0x2a8(%rdi)
  0x00007fab7412f106: jmpq   0x00007fab7412f204
  0x00007fab7412f10b: cmpq   $0x0,0x2b0(%rdi)
  0x00007fab7412f116: jne    0x00007fab7412f12f
  0x00007fab7412f118: mov    %rcx,0x2b0(%rdi)
  0x00007fab7412f11f: movq   $0x1,0x2b8(%rdi)
  0x00007fab7412f12a: jmpq   0x00007fab7412f204
  0x00007fab7412f12f: cmpq   $0x0,0x2c0(%rdi)
  0x00007fab7412f13a: jne    0x00007fab7412f153
  0x00007fab7412f13c: mov    %rcx,0x2c0(%rdi)
  0x00007fab7412f143: movq   $0x1,0x2c8(%rdi)
  0x00007fab7412f14e: jmpq   0x00007fab7412f204
  0x00007fab7412f153: cmpq   $0x0,0x2d0(%rdi)
  0x00007fab7412f15e: jne    0x00007fab7412f177
  0x00007fab7412f160: mov    %rcx,0x2d0(%rdi)
  0x00007fab7412f167: movq   $0x1,0x2d8(%rdi)
  0x00007fab7412f172: jmpq   0x00007fab7412f204
  0x00007fab7412f177: cmpq   $0x0,0x2e0(%rdi)
  0x00007fab7412f182: jne    0x00007fab7412f19b
  0x00007fab7412f184: mov    %rcx,0x2e0(%rdi)
  0x00007fab7412f18b: movq   $0x1,0x2e8(%rdi)
  0x00007fab7412f196: jmpq   0x00007fab7412f204
  0x00007fab7412f19b: cmpq   $0x0,0x2f0(%rdi)
  0x00007fab7412f1a6: jne    0x00007fab7412f1bf
  0x00007fab7412f1a8: mov    %rcx,0x2f0(%rdi)
  0x00007fab7412f1af: movq   $0x1,0x2f8(%rdi)
  0x00007fab7412f1ba: jmpq   0x00007fab7412f204
  0x00007fab7412f1bf: cmpq   $0x0,0x300(%rdi)
  0x00007fab7412f1ca: jne    0x00007fab7412f1e3
  0x00007fab7412f1cc: mov    %rcx,0x300(%rdi)
  0x00007fab7412f1d3: movq   $0x1,0x308(%rdi)
  0x00007fab7412f1de: jmpq   0x00007fab7412f204
  0x00007fab7412f1e3: jmpq   0x00007fab7412f204
  0x00007fab7412f1e8: movabs $0x7fab61b88070,%rdi  ;   {metadata(method data for {method} {0x00007fab61a985d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412f1f2: subq   $0x1,0x280(%rdi)
  0x00007fab7412f1fa: jmpq   0x00007fab7412fee5
  0x00007fab7412f1ff: jmpq   0x00007fab7412f204
  0x00007fab7412f204: mov    %rax,%rdx          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@25 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00007fab7412f207: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00007fab7412feee
  0x00007fab7412f20a: mov    %rdx,%rax          ; OopMap{[152]=Oop [192]=Oop [176]=Oop [256]=Oop rax=Oop off=11661}
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00007fab7412f20d: movabs $0x7fab7412f20d,%rdx  ;   {section_word}
  0x00007fab7412f217: callq  0x00007fab740fdb60  ;   {runtime_call}
  0x00007fab7412f21c: nop                       ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00007fab7412f21d: mov    0x2c0(%r15),%rax
  0x00007fab7412f224: xor    %r10,%r10
  0x00007fab7412f227: mov    %r10,0x2c0(%r15)
  0x00007fab7412f22e: xor    %r10,%r10
  0x00007fab7412f231: mov    %r10,0x2c8(%r15)
  0x00007fab7412f238: movabs $0x7fab61b84b68,%rax  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412f242: incl   0x5f0(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@123 (line 533)

  0x00007fab7412f248: movabs $0x7fab61b84b68,%rax  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412f252: mov    0x100(%rax),%edx
  0x00007fab7412f258: add    $0x8,%edx
  0x00007fab7412f25b: mov    %edx,0x100(%rax)
  0x00007fab7412f261: movabs $0x7fab61a984e8,%rax  ;   {metadata({method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412f26b: and    $0xfff8,%edx
  0x00007fab7412f271: cmp    $0x0,%edx
  0x00007fab7412f274: je     0x00007fab7412fef3  ; OopMap{[152]=Oop [256]=Oop off=11770}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@161 (line 536)

  0x00007fab7412f27a: test   %eax,0x1b6b2e80(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab7412f280: movabs $0x7fab61b84b68,%rax  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412f28a: incl   0x9b0(%rax)
  0x00007fab7412f290: mov    0x94(%rsp),%edx
  0x00007fab7412f297: mov    0x98(%rsp),%rsi
  0x00007fab7412f29f: jmpq   0x00007fab7412c5f8  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@161 (line 536)

  0x00007fab7412f2a4: movabs $0x7fab61b84b68,%rax  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412f2ae: mov    0x100(%rax),%edx
  0x00007fab7412f2b4: add    $0x8,%edx
  0x00007fab7412f2b7: mov    %edx,0x100(%rax)
  0x00007fab7412f2bd: movabs $0x7fab61a984e8,%rax  ;   {metadata({method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412f2c7: and    $0xfff8,%edx
  0x00007fab7412f2cd: cmp    $0x0,%edx
  0x00007fab7412f2d0: je     0x00007fab7412ff0a  ; OopMap{[152]=Oop [256]=Oop off=11862}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@197 (line 542)

  0x00007fab7412f2d6: test   %eax,0x1b6b2e24(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab7412f2dc: movabs $0x7fab61b84b68,%rax  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412f2e6: incl   0xba0(%rax)
  0x00007fab7412f2ec: mov    0x94(%rsp),%edx
  0x00007fab7412f2f3: mov    0x98(%rsp),%rsi
  0x00007fab7412f2fb: jmpq   0x00007fab7412c5f8  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@197 (line 542)

  0x00007fab7412f300: movabs $0x7fab61b84b68,%rax  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412f30a: mov    0x100(%rax),%edx
  0x00007fab7412f310: add    $0x8,%edx
  0x00007fab7412f313: mov    %edx,0x100(%rax)
  0x00007fab7412f319: movabs $0x7fab61a984e8,%rax  ;   {metadata({method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412f323: and    $0xfff8,%edx
  0x00007fab7412f329: cmp    $0x0,%edx
  0x00007fab7412f32c: je     0x00007fab7412ff21  ; OopMap{[152]=Oop [256]=Oop off=11954}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@82 (line 514)

  0x00007fab7412f332: test   %eax,0x1b6b2dc8(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab7412f338: movabs $0x7fab61b84b68,%rax  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412f342: incl   0x4d0(%rax)
  0x00007fab7412f348: mov    0x94(%rsp),%edx
  0x00007fab7412f34f: mov    0x98(%rsp),%rsi
  0x00007fab7412f357: jmpq   0x00007fab7412c5f8  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@82 (line 514)

  0x00007fab7412f35c: mov    0x2c0(%r15),%rax
  0x00007fab7412f363: xor    %r10,%r10
  0x00007fab7412f366: mov    %r10,0x2c0(%r15)
  0x00007fab7412f36d: xor    %r10,%r10
  0x00007fab7412f370: mov    %r10,0x2c8(%r15)
  0x00007fab7412f377: movabs $0x7fab61b84b68,%rax  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412f381: mov    0x100(%rax),%edx
  0x00007fab7412f387: add    $0x8,%edx
  0x00007fab7412f38a: mov    %edx,0x100(%rax)
  0x00007fab7412f390: movabs $0x7fab61a984e8,%rax  ;   {metadata({method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412f39a: and    $0xfff8,%edx
  0x00007fab7412f3a0: cmp    $0x0,%edx
  0x00007fab7412f3a3: je     0x00007fab7412ff38  ; OopMap{[152]=Oop [256]=Oop off=12073}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@115 (line 528)

  0x00007fab7412f3a9: test   %eax,0x1b6b2d51(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab7412f3af: movabs $0x7fab61b84b68,%rax  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412f3b9: incl   0x5d8(%rax)
  0x00007fab7412f3bf: mov    0x94(%rsp),%edx
  0x00007fab7412f3c6: mov    0x98(%rsp),%rsi
  0x00007fab7412f3ce: jmpq   0x00007fab7412c5f8  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@115 (line 528)

  0x00007fab7412f3d3: movabs $0x7fab61b84b68,%rax  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412f3dd: incl   0xbb8(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@203 (line 543)

  0x00007fab7412f3e3: mov    0x94(%rsp),%edx
  0x00007fab7412f3ea: mov    %rbx,%rax
  0x00007fab7412f3ed: movabs $0x7fab61b84b68,%rsi  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412f3f7: addq   $0x1,0xe60(%rsi)
  0x00007fab7412f3ff: movabs $0x7fab61b841b8,%rax  ;   {metadata(method data for {method} {0x00007fab6197b908} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412f409: mov    0xfc(%rax),%esi
  0x00007fab7412f40f: add    $0x8,%esi
  0x00007fab7412f412: mov    %esi,0xfc(%rax)
  0x00007fab7412f418: movabs $0x7fab6197b908,%rax  ;   {metadata({method} {0x00007fab6197b908} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412f422: and    $0x7ffff8,%esi
  0x00007fab7412f428: cmp    $0x0,%esi
  0x00007fab7412f42b: je     0x00007fab7412ff4f
  0x00007fab7412f431: mov    %rbx,%rax
  0x00007fab7412f434: movabs $0x7fab61b841b8,%rsi  ;   {metadata(method data for {method} {0x00007fab6197b908} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412f43e: addq   $0x1,0x130(%rsi)
  0x00007fab7412f446: movabs $0x7fab61b843d8,%rax  ;   {metadata(method data for {method} {0x00007fab6197c3c8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412f450: mov    0xfc(%rax),%esi
  0x00007fab7412f456: add    $0x8,%esi
  0x00007fab7412f459: mov    %esi,0xfc(%rax)
  0x00007fab7412f45f: movabs $0x7fab6197c3c8,%rax  ;   {metadata({method} {0x00007fab6197c3c8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412f469: and    $0x7ffff8,%esi
  0x00007fab7412f46f: cmp    $0x0,%esi
  0x00007fab7412f472: je     0x00007fab7412ff66
  0x00007fab7412f478: cmp    %edi,%edx
  0x00007fab7412f47a: movabs $0x7fab61b843d8,%rax  ;   {metadata(method data for {method} {0x00007fab6197c3c8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412f484: movabs $0x130,%rsi
  0x00007fab7412f48e: jl     0x00007fab7412f49e
  0x00007fab7412f494: movabs $0x140,%rsi
  0x00007fab7412f49e: mov    (%rax,%rsi,1),%rdi
  0x00007fab7412f4a2: lea    0x1(%rdi),%rdi
  0x00007fab7412f4a6: mov    %rdi,(%rax,%rsi,1)
  0x00007fab7412f4aa: jge    0x00007fab7412f865  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@5 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)

  0x00007fab7412f4b0: mov    %rbx,%rax
  0x00007fab7412f4b3: movabs $0x7fab61b841b8,%rsi  ;   {metadata(method data for {method} {0x00007fab6197b908} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412f4bd: addq   $0x1,0x158(%rsi)
  0x00007fab7412f4c5: movabs $0x7fab61b84a00,%rax  ;   {metadata(method data for {method} {0x00007fab6197b850} &apos;elementData&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412f4cf: mov    0xfc(%rax),%esi
  0x00007fab7412f4d5: add    $0x8,%esi
  0x00007fab7412f4d8: mov    %esi,0xfc(%rax)
  0x00007fab7412f4de: movabs $0x7fab6197b850,%rax  ;   {metadata({method} {0x00007fab6197b850} &apos;elementData&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412f4e8: and    $0x7ffff8,%esi
  0x00007fab7412f4ee: cmp    $0x0,%esi
  0x00007fab7412f4f1: je     0x00007fab7412ff7d
  0x00007fab7412f4f7: mov    0x14(%rbx),%eax
  0x00007fab7412f4fa: shl    $0x3,%rax          ;*getfield elementData {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::elementData@1 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)

  0x00007fab7412f4fe: movslq %edx,%rsi
  0x00007fab7412f501: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x00007fab7412ff94
  0x00007fab7412f504: jae    0x00007fab7412ff9e
  0x00007fab7412f50a: mov    0x10(%rax,%rsi,4),%eax
  0x00007fab7412f50e: shl    $0x3,%rax          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)

  0x00007fab7412f512: cmp    $0x0,%rax
  0x00007fab7412f516: jne    0x00007fab7412f531
  0x00007fab7412f518: movabs $0x7fab61b84b68,%rsi  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412f522: orl    $0x100,0xed8(%rsi)
  0x00007fab7412f52c: jmpq   0x00007fab7412f74e
  0x00007fab7412f531: movabs $0x7c003ab78,%rdi  ;   {metadata(&apos;sun/misc/URLClassPath$Loader&apos;)}
  0x00007fab7412f53b: mov    0x8(%rax),%esi
  0x00007fab7412f53e: shl    $0x3,%rsi
  0x00007fab7412f542: cmp    0x30(%rsi),%rdi
  0x00007fab7412f546: jne    0x00007fab7412f732
  0x00007fab7412f54c: movabs $0x7fab61b84b68,%rsi  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412f556: mov    0x8(%rax),%edi
  0x00007fab7412f559: shl    $0x3,%rdi
  0x00007fab7412f55d: cmp    0xef0(%rsi),%rdi
  0x00007fab7412f564: jne    0x00007fab7412f573
  0x00007fab7412f566: addq   $0x1,0xef8(%rsi)
  0x00007fab7412f56e: jmpq   0x00007fab7412f74e
  0x00007fab7412f573: cmp    0xf00(%rsi),%rdi
  0x00007fab7412f57a: jne    0x00007fab7412f589
  0x00007fab7412f57c: addq   $0x1,0xf08(%rsi)
  0x00007fab7412f584: jmpq   0x00007fab7412f74e
  0x00007fab7412f589: cmp    0xf10(%rsi),%rdi
  0x00007fab7412f590: jne    0x00007fab7412f59f
  0x00007fab7412f592: addq   $0x1,0xf18(%rsi)
  0x00007fab7412f59a: jmpq   0x00007fab7412f74e
  0x00007fab7412f59f: cmp    0xf20(%rsi),%rdi
  0x00007fab7412f5a6: jne    0x00007fab7412f5b5
  0x00007fab7412f5a8: addq   $0x1,0xf28(%rsi)
  0x00007fab7412f5b0: jmpq   0x00007fab7412f74e
  0x00007fab7412f5b5: cmp    0xf30(%rsi),%rdi
  0x00007fab7412f5bc: jne    0x00007fab7412f5cb
  0x00007fab7412f5be: addq   $0x1,0xf38(%rsi)
  0x00007fab7412f5c6: jmpq   0x00007fab7412f74e
  0x00007fab7412f5cb: cmp    0xf40(%rsi),%rdi
  0x00007fab7412f5d2: jne    0x00007fab7412f5e1
  0x00007fab7412f5d4: addq   $0x1,0xf48(%rsi)
  0x00007fab7412f5dc: jmpq   0x00007fab7412f74e
  0x00007fab7412f5e1: cmp    0xf50(%rsi),%rdi
  0x00007fab7412f5e8: jne    0x00007fab7412f5f7
  0x00007fab7412f5ea: addq   $0x1,0xf58(%rsi)
  0x00007fab7412f5f2: jmpq   0x00007fab7412f74e
  0x00007fab7412f5f7: cmp    0xf60(%rsi),%rdi
  0x00007fab7412f5fe: jne    0x00007fab7412f60d
  0x00007fab7412f600: addq   $0x1,0xf68(%rsi)
  0x00007fab7412f608: jmpq   0x00007fab7412f74e
  0x00007fab7412f60d: cmpq   $0x0,0xef0(%rsi)
  0x00007fab7412f618: jne    0x00007fab7412f631
  0x00007fab7412f61a: mov    %rdi,0xef0(%rsi)
  0x00007fab7412f621: movq   $0x1,0xef8(%rsi)
  0x00007fab7412f62c: jmpq   0x00007fab7412f74e
  0x00007fab7412f631: cmpq   $0x0,0xf00(%rsi)
  0x00007fab7412f63c: jne    0x00007fab7412f655
  0x00007fab7412f63e: mov    %rdi,0xf00(%rsi)
  0x00007fab7412f645: movq   $0x1,0xf08(%rsi)
  0x00007fab7412f650: jmpq   0x00007fab7412f74e
  0x00007fab7412f655: cmpq   $0x0,0xf10(%rsi)
  0x00007fab7412f660: jne    0x00007fab7412f679
  0x00007fab7412f662: mov    %rdi,0xf10(%rsi)
  0x00007fab7412f669: movq   $0x1,0xf18(%rsi)
  0x00007fab7412f674: jmpq   0x00007fab7412f74e
  0x00007fab7412f679: cmpq   $0x0,0xf20(%rsi)
  0x00007fab7412f684: jne    0x00007fab7412f69d
  0x00007fab7412f686: mov    %rdi,0xf20(%rsi)
  0x00007fab7412f68d: movq   $0x1,0xf28(%rsi)
  0x00007fab7412f698: jmpq   0x00007fab7412f74e
  0x00007fab7412f69d: cmpq   $0x0,0xf30(%rsi)
  0x00007fab7412f6a8: jne    0x00007fab7412f6c1
  0x00007fab7412f6aa: mov    %rdi,0xf30(%rsi)
  0x00007fab7412f6b1: movq   $0x1,0xf38(%rsi)
  0x00007fab7412f6bc: jmpq   0x00007fab7412f74e
  0x00007fab7412f6c1: cmpq   $0x0,0xf40(%rsi)
  0x00007fab7412f6cc: jne    0x00007fab7412f6e5
  0x00007fab7412f6ce: mov    %rdi,0xf40(%rsi)
  0x00007fab7412f6d5: movq   $0x1,0xf48(%rsi)
  0x00007fab7412f6e0: jmpq   0x00007fab7412f74e
  0x00007fab7412f6e5: cmpq   $0x0,0xf50(%rsi)
  0x00007fab7412f6f0: jne    0x00007fab7412f709
  0x00007fab7412f6f2: mov    %rdi,0xf50(%rsi)
  0x00007fab7412f6f9: movq   $0x1,0xf58(%rsi)
  0x00007fab7412f704: jmpq   0x00007fab7412f74e
  0x00007fab7412f709: cmpq   $0x0,0xf60(%rsi)
  0x00007fab7412f714: jne    0x00007fab7412f72d
  0x00007fab7412f716: mov    %rdi,0xf60(%rsi)
  0x00007fab7412f71d: movq   $0x1,0xf68(%rsi)
  0x00007fab7412f728: jmpq   0x00007fab7412f74e
  0x00007fab7412f72d: jmpq   0x00007fab7412f74e
  0x00007fab7412f732: movabs $0x7fab61b84b68,%rsi  ;   {metadata(method data for {method} {0x00007fab61a984e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007fab7412f73c: subq   $0x1,0xee0(%rsi)
  0x00007fab7412f744: jmpq   0x00007fab7412ffa7
  0x00007fab7412f749: jmpq   0x00007fab7412f74e
  0x00007fab7412f74e: mov    %rax,%rdx          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@239 (line 546)

  0x00007fab7412f751: lea    0xf8(%rsp),%rax
  0x00007fab7412f759: mov    0x8(%rax),%rdi
  0x00007fab7412f75d: mov    (%rdi),%rsi
  0x00007fab7412f760: and    $0x7,%rsi
  0x00007fab7412f764: cmp    $0x5,%rsi
  0x00007fab7412f768: je     0x00007fab7412f785
  0x00007fab7412f76e: mov    (%rax),%rsi
  0x00007fab7412f771: test   %rsi,%rsi
  0x00007fab7412f774: je     0x00007fab7412f785
  0x00007fab7412f77a: lock cmpxchg %rsi,(%rdi)
  0x00007fab7412f77f: jne    0x00007fab7412ffb0
  0x00007fab7412f785: mov    %rdx,%rax
  0x00007fab7412f788: add    $0x150,%rsp
  0x00007fab7412f78f: pop    %rbp
  0x00007fab7412f790: test   %eax,0x1b6b296a(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7412f796: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@242 (line 546)

  0x00007fab7412f797: lea    0x108(%rsp),%rax
  0x00007fab7412f79f: mov    0x8(%rax),%rsi
  0x00007fab7412f7a3: mov    (%rsi),%rdx
  0x00007fab7412f7a6: and    $0x7,%rdx
  0x00007fab7412f7aa: cmp    $0x5,%rdx
  0x00007fab7412f7ae: je     0x00007fab7412f7cb
  0x00007fab7412f7b4: mov    (%rax),%rdx
  0x00007fab7412f7b7: test   %rdx,%rdx
  0x00007fab7412f7ba: je     0x00007fab7412f7cb
  0x00007fab7412f7c0: lock cmpxchg %rdx,(%rsi)
  0x00007fab7412f7c5: jne    0x00007fab7412ffc6  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@41 (line 504)

  0x00007fab7412f7cb: lea    0xf8(%rsp),%rax
  0x00007fab7412f7d3: mov    0x8(%rax),%rsi
  0x00007fab7412f7d7: mov    (%rsi),%rdx
  0x00007fab7412f7da: and    $0x7,%rdx
  0x00007fab7412f7de: cmp    $0x5,%rdx
  0x00007fab7412f7e2: je     0x00007fab7412f7ff
  0x00007fab7412f7e8: mov    (%rax),%rdx
  0x00007fab7412f7eb: test   %rdx,%rdx
  0x00007fab7412f7ee: je     0x00007fab7412f7ff
  0x00007fab7412f7f4: lock cmpxchg %rdx,(%rsi)
  0x00007fab7412f7f9: jne    0x00007fab7412ffdc
  0x00007fab7412f7ff: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fab7412f809: add    $0x150,%rsp
  0x00007fab7412f810: pop    %rbp
  0x00007fab7412f811: test   %eax,0x1b6b28e9(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7412f817: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@42 (line 504)

  0x00007fab7412f818: lea    0xf8(%rsp),%rax
  0x00007fab7412f820: mov    0x8(%rax),%rsi
  0x00007fab7412f824: mov    (%rsi),%rdx
  0x00007fab7412f827: and    $0x7,%rdx
  0x00007fab7412f82b: cmp    $0x5,%rdx
  0x00007fab7412f82f: je     0x00007fab7412f84c
  0x00007fab7412f835: mov    (%rax),%rdx
  0x00007fab7412f838: test   %rdx,%rdx
  0x00007fab7412f83b: je     0x00007fab7412f84c
  0x00007fab7412f841: lock cmpxchg %rdx,(%rsi)
  0x00007fab7412f846: jne    0x00007fab7412fff2
  0x00007fab7412f84c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fab7412f856: add    $0x150,%rsp
  0x00007fab7412f85d: pop    %rbp
  0x00007fab7412f85e: test   %eax,0x1b6b289c(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7412f864: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@8 (line 495)

  0x00007fab7412f865: mov    %rdx,%r8
  0x00007fab7412f868: jmpq   0x00007fab74130017  ;   {no_reloc}
  0x00007fab7412f86d: add    %al,(%rax)
  0x00007fab7412f86f: add    %al,(%rax)
  0x00007fab7412f871: add    %al,0x162ba(%rax)
  0x00007fab7412f877: add    %al,(%rdi,%rcx,1)
  0x00007fab7412f87a: test   %esp,0x49000007(%rdi)
  0x00007fab7412f880: mov    0x60(%rdi),%eax
  0x00007fab7412f883: lea    0x20(%rax),%rdi
  0x00007fab7412f887: cmp    0x70(%r15),%rdi
  0x00007fab7412f88b: ja     0x00007fab74130026
  0x00007fab7412f891: mov    %rdi,0x60(%r15)
  0x00007fab7412f895: mov    0xa8(%rdx),%rcx
  0x00007fab7412f89c: mov    %rcx,(%rax)
  0x00007fab7412f89f: mov    %rdx,%rcx
  0x00007fab7412f8a2: shr    $0x3,%rcx
  0x00007fab7412f8a6: mov    %ecx,0x8(%rax)
  0x00007fab7412f8a9: xor    %rcx,%rcx
  0x00007fab7412f8ac: mov    %ecx,0xc(%rax)
  0x00007fab7412f8af: xor    %rcx,%rcx
  0x00007fab7412f8b2: mov    %rcx,0x10(%rax)
  0x00007fab7412f8b6: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)

  0x00007fab7412f8ba: mov    %rbx,%rdx
  0x00007fab7412f8bd: movabs $0x7fab61b843d8,%rsi  ;   {metadata(method data for {method} {0x00007fab6197c3c8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412f8c7: addq   $0x1,0x150(%rsi)
  0x00007fab7412f8cf: mov    %r8,%rdx
  0x00007fab7412f8d2: mov    %rbx,%rsi          ;*invokespecial outOfBoundsMsg {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)

  0x00007fab7412f8d5: mov    %rbx,0xe8(%rsp)
  0x00007fab7412f8dd: mov    %rax,0xe0(%rsp)
  0x00007fab7412f8e5: nop
  0x00007fab7412f8e6: nop
  0x00007fab7412f8e7: callq  0x00007fab74047d60  ; OopMap{[224]=Oop [232]=Oop [256]=Oop off=13420}
                                                ;*invokespecial outOfBoundsMsg {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {optimized virtual_call}
  0x00007fab7412f8ec: mov    0xe0(%rsp),%rdx
  0x00007fab7412f8f4: movabs $0x7fab61b843d8,%rsi  ;   {metadata(method data for {method} {0x00007fab6197c3c8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007fab7412f8fe: addq   $0x1,0x160(%rsi)
  0x00007fab7412f906: mov    %rax,%rdx
  0x00007fab7412f909: mov    0xe0(%rsp),%rsi    ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@17 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)

  0x00007fab7412f911: nop
  0x00007fab7412f912: nop
  0x00007fab7412f913: nop
  0x00007fab7412f914: nop
  0x00007fab7412f915: nop
  0x00007fab7412f916: nop
  0x00007fab7412f917: callq  0x00007fab74047d60  ; OopMap{[224]=Oop [232]=Oop [256]=Oop off=13468}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@17 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {optimized virtual_call}
  0x00007fab7412f91c: mov    0xe0(%rsp),%rax
  0x00007fab7412f924: jmpq   0x00007fab74130150  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@20 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)

  0x00007fab7412f929: mov    %rbx,0x88(%rsp)
  0x00007fab7412f931: mov    %rdi,0xa0(%rsp)
  0x00007fab7412f939: nopl   0x0(%rax)
  0x00007fab7412f940: jmpq   0x00007fab74130042  ;   {no_reloc}
  0x00007fab7412f945: add    %al,(%rax)
  0x00007fab7412f947: add    %al,(%rax)
  0x00007fab7412f949: add    %ch,%cl
  0x00007fab7412f94b: std    
  0x00007fab7412f94c: (bad)  
  0x00007fab7412f94d: add    %al,(%rax)         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@9 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412f94f: mov    %rax,%rsi
  0x00007fab7412f952: movabs $0x7fab61b860d0,%rdi  ;   {metadata(method data for {method} {0x00007fab619742b0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007fab7412f95c: addq   $0x1,0x1e8(%rdi)
  0x00007fab7412f964: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@13 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412f967: mov    %rax,0xf0(%rsp)
  0x00007fab7412f96f: callq  0x00007fab74047d60  ; OopMap{[136]=Oop [160]=Oop [152]=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=13556}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@13 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {optimized virtual_call}
  0x00007fab7412f974: mov    0xf0(%rsp),%rax    ; OopMap{[136]=Oop [160]=Oop [152]=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop rax=Oop off=13564}
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@16 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412f97c: movabs $0x7fab7412f97c,%rdx  ;   {section_word}
  0x00007fab7412f986: callq  0x00007fab740fdb60  ;   {runtime_call}
  0x00007fab7412f98b: nop                       ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@16 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412f98c: mov    0x2c0(%r15),%rax
  0x00007fab7412f993: xor    %r10,%r10
  0x00007fab7412f996: mov    %r10,0x2c0(%r15)
  0x00007fab7412f99d: xor    %r10,%r10
  0x00007fab7412f9a0: mov    %r10,0x2c8(%r15)
  0x00007fab7412f9a7: mov    %rax,%rdx
  0x00007fab7412f9aa: lea    0x138(%rsp),%rax
  0x00007fab7412f9b2: mov    0x8(%rax),%rdi
  0x00007fab7412f9b6: mov    (%rdi),%rsi
  0x00007fab7412f9b9: and    $0x7,%rsi
  0x00007fab7412f9bd: cmp    $0x5,%rsi
  0x00007fab7412f9c1: je     0x00007fab7412f9de
  0x00007fab7412f9c7: mov    (%rax),%rsi
  0x00007fab7412f9ca: test   %rsi,%rsi
  0x00007fab7412f9cd: je     0x00007fab7412f9de
  0x00007fab7412f9d3: lock cmpxchg %rsi,(%rdi)
  0x00007fab7412f9d8: jne    0x00007fab74130059  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412f9de: mov    %rdx,%rax          ; OopMap{[136]=Oop [160]=Oop [152]=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop rax=Oop off=13665}
                                                ;*invokevirtual size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412f9e1: movabs $0x7fab7412f9e1,%rdx  ;   {section_word}
  0x00007fab7412f9eb: callq  0x00007fab740fdb60  ;   {runtime_call}
  0x00007fab7412f9f0: nop                       ;*invokevirtual size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412f9f1: mov    0x2c0(%r15),%rax
  0x00007fab7412f9f8: xor    %r10,%r10
  0x00007fab7412f9fb: mov    %r10,0x2c0(%r15)
  0x00007fab7412fa02: xor    %r10,%r10
  0x00007fab7412fa05: mov    %r10,0x2c8(%r15)
  0x00007fab7412fa0c: mov    %rax,%rdx
  0x00007fab7412fa0f: lea    0x128(%rsp),%rax
  0x00007fab7412fa17: mov    0x8(%rax),%rdi
  0x00007fab7412fa1b: mov    (%rdi),%rsi
  0x00007fab7412fa1e: and    $0x7,%rsi
  0x00007fab7412fa22: cmp    $0x5,%rsi
  0x00007fab7412fa26: je     0x00007fab7412fa43
  0x00007fab7412fa2c: mov    (%rax),%rsi
  0x00007fab7412fa2f: test   %rsi,%rsi
  0x00007fab7412fa32: je     0x00007fab7412fa43
  0x00007fab7412fa38: lock cmpxchg %rsi,(%rdi)
  0x00007fab7412fa3d: jne    0x00007fab7413006f  ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412fa43: mov    %rdx,%rax          ; OopMap{[136]=Oop [160]=Oop [152]=Oop [256]=Oop [272]=Oop [288]=Oop rax=Oop off=13766}
                                                ;*invokevirtual peek {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412fa46: movabs $0x7fab7412fa46,%rdx  ;   {section_word}
  0x00007fab7412fa50: callq  0x00007fab740fdb60  ;   {runtime_call}
  0x00007fab7412fa55: nop                       ;*invokevirtual peek {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412fa56: mov    0x2c0(%r15),%rax
  0x00007fab7412fa5d: xor    %r10,%r10
  0x00007fab7412fa60: mov    %r10,0x2c0(%r15)
  0x00007fab7412fa67: xor    %r10,%r10
  0x00007fab7412fa6a: mov    %r10,0x2c8(%r15)
  0x00007fab7412fa71: mov    %rax,%rdx
  0x00007fab7412fa74: lea    0x128(%rsp),%rax
  0x00007fab7412fa7c: mov    0x8(%rax),%rdi
  0x00007fab7412fa80: mov    (%rdi),%rsi
  0x00007fab7412fa83: and    $0x7,%rsi
  0x00007fab7412fa87: cmp    $0x5,%rsi
  0x00007fab7412fa8b: je     0x00007fab7412faa8
  0x00007fab7412fa91: mov    (%rax),%rsi
  0x00007fab7412fa94: test   %rsi,%rsi
  0x00007fab7412fa97: je     0x00007fab7412faa8
  0x00007fab7412fa9d: lock cmpxchg %rsi,(%rdi)
  0x00007fab7412faa2: jne    0x00007fab74130085  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412faa8: mov    %rdx,%rax          ; OopMap{[160]=Oop [152]=Oop rbx=Oop [256]=Oop [272]=Oop [288]=Oop rax=Oop off=13867}
                                                ;*invokevirtual size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412faab: movabs $0x7fab7412faab,%rdx  ;   {section_word}
  0x00007fab7412fab5: callq  0x00007fab740fdb60  ;   {runtime_call}
  0x00007fab7412faba: nop                       ;*invokevirtual size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412fabb: mov    0x2c0(%r15),%rax
  0x00007fab7412fac2: xor    %r10,%r10
  0x00007fab7412fac5: mov    %r10,0x2c0(%r15)
  0x00007fab7412facc: xor    %r10,%r10
  0x00007fab7412facf: mov    %r10,0x2c8(%r15)
  0x00007fab7412fad6: mov    %rax,%rdx
  0x00007fab7412fad9: lea    0x118(%rsp),%rax
  0x00007fab7412fae1: mov    0x8(%rax),%rdi
  0x00007fab7412fae5: mov    (%rdi),%rsi
  0x00007fab7412fae8: and    $0x7,%rsi
  0x00007fab7412faec: cmp    $0x5,%rsi
  0x00007fab7412faf0: je     0x00007fab7412fb0d
  0x00007fab7412faf6: mov    (%rax),%rsi
  0x00007fab7412faf9: test   %rsi,%rsi
  0x00007fab7412fafc: je     0x00007fab7412fb0d
  0x00007fab7412fb02: lock cmpxchg %rsi,(%rdi)
  0x00007fab7412fb07: jne    0x00007fab7413009b  ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412fb0d: mov    %rdx,%rax          ; OopMap{[160]=Oop [152]=Oop [256]=Oop [272]=Oop rax=Oop off=13968}
                                                ;*invokevirtual pop {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412fb10: movabs $0x7fab7412fb10,%rdx  ;   {section_word}
  0x00007fab7412fb1a: callq  0x00007fab740fdb60  ;   {runtime_call}
  0x00007fab7412fb1f: nop                       ;*invokevirtual pop {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007fab7412fb20: mov    0x94(%rsp),%esi
  0x00007fab7412fb27: mov    0x98(%rsp),%rdi
  0x00007fab7412fb2f: mov    0x2c0(%r15),%rax
  0x00007fab7412fb36: xor    %r10,%r10
  0x00007fab7412fb39: mov    %r10,0x2c0(%r15)
  0x00007fab7412fb40: xor    %r10,%r10
  0x00007fab7412fb43: mov    %r10,0x2c8(%r15)
  0x00007fab7412fb4a: mov    %rax,%rdx
  0x00007fab7412fb4d: lea    0x118(%rsp),%rax
  0x00007fab7412fb55: mov    0x8(%rax),%r8
  0x00007fab7412fb59: mov    (%r8),%rcx
  0x00007fab7412fb5c: and    $0x7,%rcx
  0x00007fab7412fb60: cmp    $0x5,%rcx
  0x00007fab7412fb64: je     0x00007fab7412fb81
  0x00007fab7412fb6a: mov    (%rax),%rcx
  0x00007fab7412fb6d: test   %rcx,%rcx
  0x00007fab7412fb70: je     0x00007fab7412fb81
  0x00007fab7412fb76: lock cmpxchg %rcx,(%r8)
  0x00007fab7412fb7b: jne    0x00007fab741300b1  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00007fab7412fb81: mov    %rdx,%rax          ; OopMap{rbx=Oop rdi=Oop [152]=Oop [256]=Oop [272]=Oop rax=Oop off=14084}
                                                ;*invokevirtual size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00007fab7412fb84: movabs $0x7fab7412fb84,%rdx  ;   {section_word}
  0x00007fab7412fb8e: callq  0x00007fab740fdb60  ;   {runtime_call}
  0x00007fab7412fb93: nop                       ;*invokevirtual size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00007fab7412fb94: mov    0x2c0(%r15),%rax
  0x00007fab7412fb9b: xor    %r10,%r10
  0x00007fab7412fb9e: mov    %r10,0x2c0(%r15)
  0x00007fab7412fba5: xor    %r10,%r10
  0x00007fab7412fba8: mov    %r10,0x2c8(%r15)
  0x00007fab7412fbaf: mov    %rax,%rsi
  0x00007fab7412fbb2: lea    0x108(%rsp),%rax
  0x00007fab7412fbba: mov    0x8(%rax),%rbx
  0x00007fab7412fbbe: mov    (%rbx),%rdi
  0x00007fab7412fbc1: and    $0x7,%rdi
  0x00007fab7412fbc5: cmp    $0x5,%rdi
  0x00007fab7412fbc9: je     0x00007fab7412fbe6
  0x00007fab7412fbcf: mov    (%rax),%rdi
  0x00007fab7412fbd2: test   %rdi,%rdi
  0x00007fab7412fbd5: je     0x00007fab7412fbe6
  0x00007fab7412fbdb: lock cmpxchg %rdi,(%rbx)
  0x00007fab7412fbe0: jne    0x00007fab741300c7  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@62 (line 508)

  0x00007fab7412fbe6: mov    %rsi,%rax
  0x00007fab7412fbe9: jmpq   0x00007fab74130150
  0x00007fab7412fbee: mov    %rsi,0x8(%rsp)
  0x00007fab7412fbf3: mov    %rdi,(%rsp)
  0x00007fab7412fbf7: callq  0x00007fab740fea60  ; OopMap{rsi=Oop [152]=Oop [256]=Oop off=14204}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getLoader@-1 (line 494)
                                                ;   {runtime_call}
  0x00007fab7412fbfc: jmpq   0x00007fab7412c587
  0x00007fab7412fc01: mov    %rax,0x8(%rsp)
  0x00007fab7412fc06: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412fc0e: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [152]=Oop [256]=Oop off=14227}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getLoader@-1 (line 494)
                                                ;   {runtime_call}
  0x00007fab7412fc13: jmpq   0x00007fab7412c5b9
  0x00007fab7412fc18: callq  0x00007fab740fc000  ; OopMap{rsi=Oop [152]=Oop rbx=Oop [256]=Oop off=14237}
                                                ;*invokevirtual size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 499)
                                                ;   {runtime_call}
  0x00007fab7412fc1d: callq  0x00007fab740fc000  ; OopMap{rsi=Oop [152]=Oop rdi=Oop [256]=Oop off=14242}
                                                ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 502)
                                                ;   {runtime_call}
  0x00007fab7412fc22: mov    %rdi,0x8(%rsp)
  0x00007fab7412fc27: mov    %rbx,(%rsp)
  0x00007fab7412fc2b: callq  0x00007fab740fea60  ; OopMap{rsi=Oop [152]=Oop rdi=Oop [256]=Oop [272]=Oop off=14256}
                                                ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 502)
                                                ;   {runtime_call}
  0x00007fab7412fc30: jmpq   0x00007fab7412c727
  0x00007fab7412fc35: callq  0x00007fab740fc000  ; OopMap{rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop [272]=Oop off=14266}
                                                ;*invokevirtual empty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)
                                                ;   {runtime_call}
  0x00007fab7412fc3a: mov    %rax,0x8(%rsp)
  0x00007fab7412fc3f: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412fc47: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop [272]=Oop off=14284}
                                                ;*synchronization entry
                                                ; - java.util.Stack::empty@-1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)
                                                ;   {runtime_call}
  0x00007fab7412fc4c: jmpq   0x00007fab7412c778
  0x00007fab7412fc51: mov    %rbx,0x8(%rsp)
  0x00007fab7412fc56: mov    %rcx,(%rsp)
  0x00007fab7412fc5a: callq  0x00007fab740fea60  ; OopMap{rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop [272]=Oop [288]=Oop off=14303}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)
                                                ;   {runtime_call}
  0x00007fab7412fc5f: jmpq   0x00007fab7412ca30
  0x00007fab7412fc64: lea    0x118(%rsp),%rax
  0x00007fab7412fc6c: mov    %rax,(%rsp)
  0x00007fab7412fc70: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab7412fc75: jmpq   0x00007fab7412ca67
  0x00007fab7412fc7a: callq  0x00007fab740fc000  ; OopMap{rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop [272]=Oop off=14335}
                                                ;*invokevirtual pop {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00007fab7412fc7f: mov    %rbx,0x8(%rsp)
  0x00007fab7412fc84: mov    %rcx,(%rsp)
  0x00007fab7412fc88: callq  0x00007fab740fea60  ; OopMap{rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop [272]=Oop [288]=Oop off=14349}
                                                ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00007fab7412fc8d: jmpq   0x00007fab7412cbf7
  0x00007fab7412fc92: mov    %rax,0x8(%rsp)
  0x00007fab7412fc97: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412fc9f: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop [272]=Oop [288]=Oop off=14372}
                                                ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00007fab7412fca4: jmpq   0x00007fab7412cc29
  0x00007fab7412fca9: mov    %rbx,0x8(%rsp)
  0x00007fab7412fcae: mov    %rcx,(%rsp)
  0x00007fab7412fcb2: callq  0x00007fab740fea60  ; OopMap{rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=14391}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00007fab7412fcb7: jmpq   0x00007fab7412cee1
  0x00007fab7412fcbc: lea    0x128(%rsp),%rax
  0x00007fab7412fcc4: mov    %rax,(%rsp)
  0x00007fab7412fcc8: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab7412fccd: jmpq   0x00007fab7412cf18
  0x00007fab7412fcd2: mov    %rbx,0x8(%rsp)
  0x00007fab7412fcd7: mov    %r8,(%rsp)
  0x00007fab7412fcdb: callq  0x00007fab740fea60  ; OopMap{rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=14432}
                                                ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00007fab7412fce0: jmpq   0x00007fab7412d00a
  0x00007fab7412fce5: mov    %rax,0x8(%rsp)
  0x00007fab7412fcea: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412fcf2: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=14455}
                                                ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00007fab7412fcf7: jmpq   0x00007fab7412d041
  0x00007fab7412fcfc: mov    %rbx,0x8(%rsp)
  0x00007fab7412fd01: mov    %r8,(%rsp)
  0x00007fab7412fd05: callq  0x00007fab740fea60  ; OopMap{rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop [320]=Oop off=14474}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00007fab7412fd0a: jmpq   0x00007fab7412d2f9
  0x00007fab7412fd0f: lea    0x138(%rsp),%rax
  0x00007fab7412fd17: mov    %rax,(%rsp)
  0x00007fab7412fd1b: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab7412fd20: jmpq   0x00007fab7412d331
  0x00007fab7412fd25: lea    0x128(%rsp),%rax
  0x00007fab7412fd2d: mov    %rax,(%rsp)
  0x00007fab7412fd31: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab7412fd36: jmpq   0x00007fab7412d5b8
  0x00007fab7412fd3b: lea    0x118(%rsp),%rax
  0x00007fab7412fd43: mov    %rax,(%rsp)
  0x00007fab7412fd47: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab7412fd4c: jmpq   0x00007fab7412d7f8
  0x00007fab7412fd51: mov    %rax,(%rsp)
  0x00007fab7412fd55: callq  0x00007fab740fe2c0  ; OopMap{[152]=Oop [160]=Oop [256]=Oop [272]=Oop off=14554}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@50 (line 506)
                                                ;   {runtime_call}
  0x00007fab7412fd5a: lea    0x108(%rsp),%rax
  0x00007fab7412fd62: mov    %rax,(%rsp)
  0x00007fab7412fd66: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab7412fd6b: jmpq   0x00007fab7412da7a
  0x00007fab7412fd70: callq  0x00007fab740fc000  ; OopMap{[176]=Oop rax=Oop [192]=Oop rsi=Oop [152]=Oop rdi=Oop [256]=Oop off=14581}
                                                ;*invokevirtual containsKey {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)
                                                ;   {runtime_call}
  0x00007fab7412fd75: mov    %rbx,0x8(%rsp)
  0x00007fab7412fd7a: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412fd82: callq  0x00007fab741005e0  ; OopMap{[176]=Oop rax=Oop [192]=Oop rsi=Oop [152]=Oop rdi=Oop [256]=Oop off=14599}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::containsKey@-1 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)
                                                ;   {runtime_call}
  0x00007fab7412fd87: jmpq   0x00007fab7412dcdc
  0x00007fab7412fd8c: mov    %rbx,0x8(%rsp)
  0x00007fab7412fd91: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412fd99: callq  0x00007fab741005e0  ; OopMap{[176]=Oop rax=Oop [192]=Oop rsi=Oop [152]=Oop rdi=Oop [256]=Oop off=14622}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ; - java.util.HashMap::containsKey@2 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)
                                                ;   {runtime_call}
  0x00007fab7412fd9e: jmpq   0x00007fab7412dd20
  0x00007fab7412fda3: callq  0x00007fab740fc000  ; OopMap{[176]=Oop rax=Oop [192]=Oop [184]=Oop [152]=Oop [256]=Oop off=14632}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::containsKey@2 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)
                                                ;   {runtime_call}
  0x00007fab7412fda8: mov    %rdx,0x8(%rsp)
  0x00007fab7412fdad: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412fdb5: callq  0x00007fab741005e0  ; OopMap{[192]=Oop rsi=Oop [152]=Oop rdi=Oop [176]=Oop [256]=Oop off=14650}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getLoader@-1 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00007fab7412fdba: jmpq   0x00007fab7412ded0
  0x00007fab7412fdbf: mov    %rdx,%rdx
  0x00007fab7412fdc2: callq  0x00007fab740fc760  ; OopMap{[192]=Oop r8=Oop [176]=Oop rbx=Oop [152]=Oop [256]=Oop off=14663}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@0 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00007fab7412fdc7: jmpq   0x00007fab7412df17
  0x00007fab7412fdcc: mov    %rsi,0x8(%rsp)
  0x00007fab7412fdd1: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412fdd9: callq  0x00007fab741005e0  ; OopMap{[192]=Oop r8=Oop [176]=Oop rbx=Oop [152]=Oop rax=Oop [256]=Oop off=14686}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@-1 (line 555)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00007fab7412fdde: jmpq   0x00007fab7412df5e
  0x00007fab7412fde3: mov    %rsi,0x8(%rsp)
  0x00007fab7412fde8: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412fdf0: callq  0x00007fab741005e0  ; OopMap{[192]=Oop r8=Oop [176]=Oop rbx=Oop [152]=Oop rax=Oop [256]=Oop off=14709}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@11 (line 555)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00007fab7412fdf5: jmpq   0x00007fab7412dfdb
  0x00007fab7412fdfa: mov    %rax,(%rsp)
  0x00007fab7412fdfe: callq  0x00007fab740fe2c0  ; OopMap{[192]=Oop [176]=Oop [152]=Oop [256]=Oop off=14723}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@16 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00007fab7412fe03: callq  0x00007fab740fc000  ; OopMap{[192]=Oop [176]=Oop [152]=Oop rdi=Oop [200]=Oop [256]=Oop off=14728}
                                                ;*invokevirtual getClassPath {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@94 (line 522)
                                                ;   {runtime_call}
  0x00007fab7412fe08: callq  0x00007fab740fc000  ; OopMap{[192]=Oop [200]=Oop rsi=Oop [152]=Oop rdx=Oop [256]=Oop off=14733}
                                                ;*invokevirtual size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@169 (line 539)
                                                ;   {runtime_call}
  0x00007fab7412fe0d: callq  0x00007fab740fc000  ; OopMap{[192]=Oop [200]=Oop rsi=Oop [152]=Oop rdi=Oop [256]=Oop off=14738}
                                                ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007fab7412fe12: mov    %rdx,0x8(%rsp)
  0x00007fab7412fe17: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412fe1f: callq  0x00007fab741005e0  ; OopMap{[192]=Oop [200]=Oop rsi=Oop [152]=Oop rdi=Oop [256]=Oop off=14756}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::add@-1 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007fab7412fe24: jmpq   0x00007fab7412e58e
  0x00007fab7412fe29: mov    %rbx,0x8(%rsp)
  0x00007fab7412fe2e: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412fe36: callq  0x00007fab741005e0  ; OopMap{[192]=Oop [200]=Oop rsi=Oop [152]=Oop rdi=Oop [256]=Oop off=14779}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureCapacityInternal@-1 (line 223)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007fab7412fe3b: jmpq   0x00007fab7412e5da
  0x00007fab7412fe40: mov    %rax,0x8(%rsp)
  0x00007fab7412fe45: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412fe4d: callq  0x00007fab741005e0  ; OopMap{[192]=Oop [200]=Oop rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop off=14802}
                                                ;*synchronization entry
                                                ; - java.lang.Math::max@-1 (line 1252)
                                                ; - java.util.ArrayList::ensureCapacityInternal@13 (line 224)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007fab7412fe52: jmpq   0x00007fab7412e668
  0x00007fab7412fe57: mov    %rax,0x8(%rsp)
  0x00007fab7412fe5c: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412fe64: callq  0x00007fab741005e0  ; OopMap{[192]=Oop [200]=Oop rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop off=14825}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureExplicitCapacity@-1 (line 231)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007fab7412fe69: jmpq   0x00007fab7412e6fd
  0x00007fab7412fe6e: callq  0x00007fab740fc000  ; OopMap{[192]=Oop [200]=Oop rsi=Oop [152]=Oop rdi=Oop [256]=Oop off=14835}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 234)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007fab7412fe73: callq  0x00007fab740fc000  ; OopMap{[192]=Oop [152]=Oop rbx=Oop [200]=Oop rsi=Oop [256]=Oop off=14840}
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007fab7412fe78: callq  0x00007fab740fc000  ; OopMap{[192]=Oop [152]=Oop rbx=Oop [200]=Oop rsi=Oop [256]=Oop off=14845}
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007fab7412fe7d: mov    %rax,(%rsp)
  0x00007fab7412fe81: callq  0x00007fab740fb940  ; OopMap{[192]=Oop [152]=Oop rbx=Oop [200]=Oop rsi=Oop [256]=Oop off=14854}
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007fab7412fe86: callq  0x00007fab740fc000  ; OopMap{[192]=Oop [152]=Oop rbx=Oop [200]=Oop [256]=Oop off=14859}
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007fab7412fe8b: mov    %rbx,(%rsp)
  0x00007fab7412fe8f: callq  0x00007fab740fe080  ; OopMap{[192]=Oop [152]=Oop rbx=Oop [200]=Oop [256]=Oop off=14868}
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007fab7412fe94: callq  0x00007fab740fc000  ; OopMap{rbx=Oop [200]=Oop rsi=Oop [152]=Oop rax=Oop [192]=Oop rdi=Oop [256]=Oop off=14873}
                                                ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)
                                                ;   {runtime_call}
  0x00007fab7412fe99: mov    %rdx,0x8(%rsp)
  0x00007fab7412fe9e: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412fea6: callq  0x00007fab741005e0  ; OopMap{rbx=Oop [200]=Oop rsi=Oop [152]=Oop rax=Oop [192]=Oop rdi=Oop [256]=Oop off=14891}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::put@-1 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)
                                                ;   {runtime_call}
  0x00007fab7412feab: jmpq   0x00007fab7412ec62
  0x00007fab7412feb0: mov    %rdx,0x8(%rsp)
  0x00007fab7412feb5: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412febd: callq  0x00007fab741005e0  ; OopMap{rbx=Oop [200]=Oop rsi=Oop [152]=Oop rax=Oop [192]=Oop rdi=Oop [256]=Oop off=14914}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)
                                                ;   {runtime_call}
  0x00007fab7412fec2: jmpq   0x00007fab7412eca6
  0x00007fab7412fec7: callq  0x00007fab740fc000  ; OopMap{rax=Oop [192]=Oop [216]=Oop [152]=Oop [200]=Oop [256]=Oop off=14924}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)
                                                ;   {runtime_call}
  0x00007fab7412fecc: movabs $0x0,%rcx          ;   {metadata(NULL)}
  0x00007fab7412fed6: mov    $0xa050f00,%eax
  0x00007fab7412fedb: callq  0x00007fab740ff5e0  ; OopMap{[152]=Oop [192]=Oop [176]=Oop rax=Oop [256]=Oop off=14944}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@25 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00007fab7412fee0: jmpq   0x00007fab7412efc0
  0x00007fab7412fee5: mov    %rax,(%rsp)
  0x00007fab7412fee9: callq  0x00007fab740fe2c0  ; OopMap{[152]=Oop [192]=Oop [176]=Oop rax=Oop [256]=Oop off=14958}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@25 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00007fab7412feee: callq  0x00007fab740fc000  ; OopMap{[152]=Oop [192]=Oop [176]=Oop rdx=Oop [256]=Oop off=14963}
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00007fab7412fef3: mov    %rax,0x8(%rsp)
  0x00007fab7412fef8: movq   $0xa1,(%rsp)
  0x00007fab7412ff00: callq  0x00007fab741005e0  ; OopMap{[152]=Oop [256]=Oop off=14981}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@161 (line 536)
                                                ;   {runtime_call}
  0x00007fab7412ff05: jmpq   0x00007fab7412f27a
  0x00007fab7412ff0a: mov    %rax,0x8(%rsp)
  0x00007fab7412ff0f: movq   $0xc5,(%rsp)
  0x00007fab7412ff17: callq  0x00007fab741005e0  ; OopMap{[152]=Oop [256]=Oop off=15004}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@197 (line 542)
                                                ;   {runtime_call}
  0x00007fab7412ff1c: jmpq   0x00007fab7412f2d6
  0x00007fab7412ff21: mov    %rax,0x8(%rsp)
  0x00007fab7412ff26: movq   $0x52,(%rsp)
  0x00007fab7412ff2e: callq  0x00007fab741005e0  ; OopMap{[152]=Oop [256]=Oop off=15027}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@82 (line 514)
                                                ;   {runtime_call}
  0x00007fab7412ff33: jmpq   0x00007fab7412f332
  0x00007fab7412ff38: mov    %rax,0x8(%rsp)
  0x00007fab7412ff3d: movq   $0x73,(%rsp)
  0x00007fab7412ff45: callq  0x00007fab741005e0  ; OopMap{[152]=Oop [256]=Oop off=15050}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@115 (line 528)
                                                ;   {runtime_call}
  0x00007fab7412ff4a: jmpq   0x00007fab7412f3a9
  0x00007fab7412ff4f: mov    %rax,0x8(%rsp)
  0x00007fab7412ff54: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412ff5c: callq  0x00007fab741005e0  ; OopMap{rbx=Oop [256]=Oop off=15073}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::get@-1 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00007fab7412ff61: jmpq   0x00007fab7412f431
  0x00007fab7412ff66: mov    %rax,0x8(%rsp)
  0x00007fab7412ff6b: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412ff73: callq  0x00007fab741005e0  ; OopMap{rbx=Oop [256]=Oop off=15096}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::rangeCheck@-1 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00007fab7412ff78: jmpq   0x00007fab7412f478
  0x00007fab7412ff7d: mov    %rax,0x8(%rsp)
  0x00007fab7412ff82: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7412ff8a: callq  0x00007fab741005e0  ; OopMap{rbx=Oop [256]=Oop off=15119}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::elementData@-1 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00007fab7412ff8f: jmpq   0x00007fab7412f4f7
  0x00007fab7412ff94: callq  0x00007fab740fc000  ; OopMap{rax=Oop [256]=Oop off=15129}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00007fab7412ff99: callq  0x00007fab740fc000  ; OopMap{rax=Oop [256]=Oop off=15134}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00007fab7412ff9e: mov    %rdx,(%rsp)
  0x00007fab7412ffa2: callq  0x00007fab740fb940  ; OopMap{rax=Oop [256]=Oop off=15143}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00007fab7412ffa7: mov    %rax,(%rsp)
  0x00007fab7412ffab: callq  0x00007fab740fe2c0  ; OopMap{[256]=Oop off=15152}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@239 (line 546)
                                                ;   {runtime_call}
  0x00007fab7412ffb0: lea    0xf8(%rsp),%rax
  0x00007fab7412ffb8: mov    %rax,(%rsp)
  0x00007fab7412ffbc: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab7412ffc1: jmpq   0x00007fab7412f785
  0x00007fab7412ffc6: lea    0x108(%rsp),%rax
  0x00007fab7412ffce: mov    %rax,(%rsp)
  0x00007fab7412ffd2: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab7412ffd7: jmpq   0x00007fab7412f7cb
  0x00007fab7412ffdc: lea    0xf8(%rsp),%rax
  0x00007fab7412ffe4: mov    %rax,(%rsp)
  0x00007fab7412ffe8: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab7412ffed: jmpq   0x00007fab7412f7ff
  0x00007fab7412fff2: lea    0xf8(%rsp),%rax
  0x00007fab7412fffa: mov    %rax,(%rsp)
  0x00007fab7412fffe: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab74130003: jmpq   0x00007fab7412f84c
  0x00007fab74130008: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab74130012: mov    $0xa050f00,%eax
  0x00007fab74130017: callq  0x00007fab740ff5e0  ; OopMap{rbx=Oop [256]=Oop off=15260}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00007fab7413001c: jmpq   0x00007fab7412f868
  0x00007fab74130021: callq  0x00007fab740fc000  ; OopMap{rbx=Oop [256]=Oop off=15270}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00007fab74130026: mov    %rdx,%rdx
  0x00007fab74130029: callq  0x00007fab740fcba0  ; OopMap{rbx=Oop [256]=Oop off=15278}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00007fab7413002e: jmpq   0x00007fab7412f8ba
  0x00007fab74130033: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab7413003d: mov    $0xa050f00,%eax
  0x00007fab74130042: callq  0x00007fab740ff5e0  ; OopMap{[136]=Oop [160]=Oop [152]=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=15303}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@9 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00007fab74130047: jmpq   0x00007fab7412f940
  0x00007fab7413004c: mov    %rdx,%rdx
  0x00007fab7413004f: callq  0x00007fab740fc4a0  ; OopMap{[136]=Oop [160]=Oop [152]=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=15316}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@9 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00007fab74130054: jmpq   0x00007fab7412f94f
  0x00007fab74130059: lea    0x138(%rsp),%rax
  0x00007fab74130061: mov    %rax,(%rsp)
  0x00007fab74130065: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab7413006a: jmpq   0x00007fab7412f9de
  0x00007fab7413006f: lea    0x128(%rsp),%rax
  0x00007fab74130077: mov    %rax,(%rsp)
  0x00007fab7413007b: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab74130080: jmpq   0x00007fab7412fa43
  0x00007fab74130085: lea    0x128(%rsp),%rax
  0x00007fab7413008d: mov    %rax,(%rsp)
  0x00007fab74130091: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab74130096: jmpq   0x00007fab7412faa8
  0x00007fab7413009b: lea    0x118(%rsp),%rax
  0x00007fab741300a3: mov    %rax,(%rsp)
  0x00007fab741300a7: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab741300ac: jmpq   0x00007fab7412fb0d
  0x00007fab741300b1: lea    0x118(%rsp),%rax
  0x00007fab741300b9: mov    %rax,(%rsp)
  0x00007fab741300bd: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab741300c2: jmpq   0x00007fab7412fb81
  0x00007fab741300c7: lea    0x108(%rsp),%rax
  0x00007fab741300cf: mov    %rax,(%rsp)
  0x00007fab741300d3: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab741300d8: jmpq   0x00007fab7412fbe6
  0x00007fab741300dd: mov    0x90(%rsp),%ecx
  0x00007fab741300e4: jmpq   0x00007fab7412f9f1
  0x00007fab741300e9: mov    0x90(%rsp),%ecx
  0x00007fab741300f0: jmpq   0x00007fab7412f9f1
  0x00007fab741300f5: mov    0x90(%rsp),%ecx
  0x00007fab741300fc: jmpq   0x00007fab7412f9f1
  0x00007fab74130101: mov    0x90(%rsp),%ecx
  0x00007fab74130108: jmpq   0x00007fab7412f9f1
  0x00007fab7413010d: mov    0x90(%rsp),%ecx
  0x00007fab74130114: jmpq   0x00007fab7412f9f1
  0x00007fab74130119: mov    0x90(%rsp),%ecx
  0x00007fab74130120: jmpq   0x00007fab7412f9f1
  0x00007fab74130125: nop
  0x00007fab74130126: nop
  0x00007fab74130127: mov    0x2c0(%r15),%rax
  0x00007fab7413012e: movabs $0x0,%r10
  0x00007fab74130138: mov    %r10,0x2c0(%r15)
  0x00007fab7413013f: movabs $0x0,%r10
  0x00007fab74130149: mov    %r10,0x2c8(%r15)
  0x00007fab74130150: mov    %rax,%rbx
  0x00007fab74130153: lea    0xf8(%rsp),%rax
  0x00007fab7413015b: mov    0x8(%rax),%rsi
  0x00007fab7413015f: mov    (%rsi),%rdi
  0x00007fab74130162: and    $0x7,%rdi
  0x00007fab74130166: cmp    $0x5,%rdi
  0x00007fab7413016a: je     0x00007fab74130187
  0x00007fab74130170: mov    (%rax),%rdi
  0x00007fab74130173: test   %rdi,%rdi
  0x00007fab74130176: je     0x00007fab74130187
  0x00007fab7413017c: lock cmpxchg %rdi,(%rsi)
  0x00007fab74130181: jne    0x00007fab74130197
  0x00007fab74130187: mov    %rbx,%rax
  0x00007fab7413018a: add    $0x150,%rsp
  0x00007fab74130191: pop    %rbp
  0x00007fab74130192: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74130197: lea    0xf8(%rsp),%rax
  0x00007fab7413019f: mov    %rax,(%rsp)
  0x00007fab741301a3: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab741301a8: jmp    0x00007fab74130187
  0x00007fab741301aa: hlt    
  0x00007fab741301ab: hlt    
  0x00007fab741301ac: hlt    
  0x00007fab741301ad: hlt    
  0x00007fab741301ae: hlt    
  0x00007fab741301af: hlt    
  0x00007fab741301b0: hlt    
  0x00007fab741301b1: hlt    
  0x00007fab741301b2: hlt    
  0x00007fab741301b3: hlt    
  0x00007fab741301b4: hlt    
  0x00007fab741301b5: hlt    
  0x00007fab741301b6: hlt    
  0x00007fab741301b7: hlt    
  0x00007fab741301b8: hlt    
  0x00007fab741301b9: hlt    
  0x00007fab741301ba: hlt    
  0x00007fab741301bb: hlt    
  0x00007fab741301bc: hlt    
  0x00007fab741301bd: hlt    
  0x00007fab741301be: hlt    
  0x00007fab741301bf: hlt    
[Stub Code]
  0x00007fab741301c0: nop                       ;   {no_reloc}
  0x00007fab741301c1: nop
  0x00007fab741301c2: nop
  0x00007fab741301c3: nop
  0x00007fab741301c4: nop
  0x00007fab741301c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741301cf: jmpq   0x00007fab741301cf  ;   {runtime_call}
  0x00007fab741301d4: nop
  0x00007fab741301d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741301df: jmpq   0x00007fab741301df  ;   {runtime_call}
  0x00007fab741301e4: nop
  0x00007fab741301e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741301ef: jmpq   0x00007fab741301ef  ;   {runtime_call}
  0x00007fab741301f4: nop
  0x00007fab741301f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741301ff: jmpq   0x00007fab741301ff  ;   {runtime_call}
  0x00007fab74130204: nop
  0x00007fab74130205: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413020f: jmpq   0x00007fab7413020f  ;   {runtime_call}
  0x00007fab74130214: nop
  0x00007fab74130215: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413021f: jmpq   0x00007fab7413021f  ;   {runtime_call}
  0x00007fab74130224: nop
  0x00007fab74130225: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413022f: jmpq   0x00007fab7413022f  ;   {runtime_call}
  0x00007fab74130234: nop
  0x00007fab74130235: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413023f: jmpq   0x00007fab7413023f  ;   {runtime_call}
  0x00007fab74130244: nop
  0x00007fab74130245: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413024f: jmpq   0x00007fab7413024f  ;   {runtime_call}
  0x00007fab74130254: nop
  0x00007fab74130255: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413025f: jmpq   0x00007fab7413025f  ;   {runtime_call}
  0x00007fab74130264: nop
  0x00007fab74130265: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413026f: jmpq   0x00007fab7413026f  ;   {runtime_call}
  0x00007fab74130274: nop
  0x00007fab74130275: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413027f: jmpq   0x00007fab7413027f  ;   {runtime_call}
  0x00007fab74130284: nop
  0x00007fab74130285: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413028f: jmpq   0x00007fab7413028f  ;   {runtime_call}
  0x00007fab74130294: nop
  0x00007fab74130295: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413029f: jmpq   0x00007fab7413029f  ;   {runtime_call}
  0x00007fab741302a4: nop
  0x00007fab741302a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741302af: jmpq   0x00007fab741302af  ;   {runtime_call}
  0x00007fab741302b4: nop
  0x00007fab741302b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741302bf: jmpq   0x00007fab741302bf  ;   {runtime_call}
[Exception Handler]
  0x00007fab741302c4: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab741302c9: mov    %rsp,-0x28(%rsp)
  0x00007fab741302ce: sub    $0x80,%rsp
  0x00007fab741302d5: mov    %rax,0x78(%rsp)
  0x00007fab741302da: mov    %rcx,0x70(%rsp)
  0x00007fab741302df: mov    %rdx,0x68(%rsp)
  0x00007fab741302e4: mov    %rbx,0x60(%rsp)
  0x00007fab741302e9: mov    %rbp,0x50(%rsp)
  0x00007fab741302ee: mov    %rsi,0x48(%rsp)
  0x00007fab741302f3: mov    %rdi,0x40(%rsp)
  0x00007fab741302f8: mov    %r8,0x38(%rsp)
  0x00007fab741302fd: mov    %r9,0x30(%rsp)
  0x00007fab74130302: mov    %r10,0x28(%rsp)
  0x00007fab74130307: mov    %r11,0x20(%rsp)
  0x00007fab7413030c: mov    %r12,0x18(%rsp)
  0x00007fab74130311: mov    %r13,0x10(%rsp)
  0x00007fab74130316: mov    %r14,0x8(%rsp)
  0x00007fab7413031b: mov    %r15,(%rsp)
  0x00007fab7413031f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74130329: movabs $0x7fab741302c9,%rsi  ;   {internal_word}
  0x00007fab74130333: mov    %rsp,%rdx
  0x00007fab74130336: and    $0xfffffffffffffff0,%rsp
  0x00007fab7413033a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7413033f: hlt    
[Deopt Handler Code]
  0x00007fab74130340: movabs $0x7fab74130340,%r10  ;   {section_word}
  0x00007fab7413034a: push   %r10
  0x00007fab7413034c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74130351: hlt    
  0x00007fab74130352: hlt    
  0x00007fab74130353: hlt    
  0x00007fab74130354: hlt    
  0x00007fab74130355: hlt    
  0x00007fab74130356: hlt    
  0x00007fab74130357: hlt    
<nmethod compile_id='71' compiler='C1' level='3' entry='0x00007fab7412c480' size='23840' address='0x00007fab7412c050' relocation_offset='312' insts_offset='1072' stub_offset='16752' scopes_data_offset='17336' scopes_pcs_offset='19520' dependencies_offset='22896' handler_table_offset='22912' nul_chk_table_offset='23680' metadata_offset='17160' method='sun/misc/URLClassPath getLoader (I)Lsun/misc/URLClassPath$Loader;' bytes='243' count='320' backedge_count='17' iicount='320' stamp='0.308'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.HotSpotSpeculationLog from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.setTabAt  [0x00007fab74131f00, 0x00007fab74132070]  368 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab61a73138} &apos;setTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rsi:rsi   = &apos;[Ljava/util/concurrent/ConcurrentHashMap$Node;&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fab74131f00: mov    %eax,-0x14000(%rsp)
  0x00007fab74131f07: push   %rbp
  0x00007fab74131f08: sub    $0x40,%rsp
  0x00007fab74131f0c: mov    %rcx,%rdi
  0x00007fab74131f0f: movabs $0x7fab61b8a448,%rcx  ;   {metadata(method data for {method} {0x00007fab61a73138} &apos;setTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74131f19: mov    0xfc(%rcx),%ebx
  0x00007fab74131f1f: add    $0x8,%ebx
  0x00007fab74131f22: mov    %ebx,0xfc(%rcx)
  0x00007fab74131f28: movabs $0x7fab61a73138,%rcx  ;   {metadata({method} {0x00007fab61a73138} &apos;setTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74131f32: and    $0x1ff8,%ebx
  0x00007fab74131f38: cmp    $0x0,%ebx
  0x00007fab74131f3b: je     0x00007fab74131f8b  ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::setTabAt@0 (line 764)

  0x00007fab74131f41: movslq %edx,%rdx
  0x00007fab74131f44: mov    $0x2,%ecx
  0x00007fab74131f49: shl    %cl,%rdx
  0x00007fab74131f4c: movabs $0x10,%r10
  0x00007fab74131f56: add    %r10,%rdx
  0x00007fab74131f59: mov    %rdi,%r10
  0x00007fab74131f5c: shr    $0x3,%r10
  0x00007fab74131f60: mov    %r10d,(%rsi,%rdx,1)
  0x00007fab74131f64: lea    (%rsi,%rdx,1),%rsi
  0x00007fab74131f68: shr    $0x9,%rsi
  0x00007fab74131f6c: movabs $0x7fab701ff000,%rdi
  0x00007fab74131f76: movb   $0x0,(%rsi,%rdi,1)
  0x00007fab74131f7a: lock addl $0x0,(%rsp)
  0x00007fab74131f7f: add    $0x40,%rsp
  0x00007fab74131f83: pop    %rbp
  0x00007fab74131f84: test   %eax,0x1b6b0176(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74131f8a: retq   
  0x00007fab74131f8b: mov    %rcx,0x8(%rsp)
  0x00007fab74131f90: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74131f98: callq  0x00007fab741005e0
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.code.CompilationRequestResult from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
  ; OopMap{rsi=Oop rdi=Oop off=157}             ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::setTabAt@-1 (line 764)
                                                ;   {runtime_call}
  0x00007fab74131f9d: jmp    0x00007fab74131f41
  0x00007fab74131f9f: nop
  0x00007fab74131fa0: nop
  0x00007fab74131fa1: mov    0x2c0(%r15),%rax
  0x00007fab74131fa8: movabs $0x0,%r10
  0x00007fab74131fb2: mov    %r10,0x2c0(%r15)
  0x00007fab74131fb9: movabs $0x0,%r10
  0x00007fab74131fc3: mov    %r10,0x2c8(%r15)
  0x00007fab74131fca: add    $0x40,%rsp
  0x00007fab74131fce: pop    %rbp
  0x00007fab74131fcf: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74131fd4: hlt    
  0x00007fab74131fd5: hlt    
  0x00007fab74131fd6: hlt    
  0x00007fab74131fd7: hlt    
  0x00007fab74131fd8: hlt    
  0x00007fab74131fd9: hlt    
  0x00007fab74131fda: hlt    
  0x00007fab74131fdb: hlt    
  0x00007fab74131fdc: hlt    
  0x00007fab74131fdd: hlt    
  0x00007fab74131fde: hlt    
  0x00007fab74131fdf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74131fe0: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74131fe5: mov    %rsp,-0x28(%rsp)
  0x00007fab74131fea: sub    $0x80,%rsp
  0x00007fab74131ff1: mov    %rax,0x78(%rsp)
  0x00007fab74131ff6: mov    %rcx,0x70(%rsp)
  0x00007fab74131ffb: mov    %rdx,0x68(%rsp)
  0x00007fab74132000: mov    %rbx,0x60(%rsp)
  0x00007fab74132005: mov    %rbp,0x50(%rsp)
  0x00007fab7413200a: mov    %rsi,0x48(%rsp)
  0x00007fab7413200f: mov    %rdi,0x40(%rsp)
  0x00007fab74132014: mov    %r8,0x38(%rsp)
  0x00007fab74132019: mov    %r9,0x30(%rsp)
  0x00007fab7413201e: mov    %r10,0x28(%rsp)
  0x00007fab74132023: mov    %r11,0x20(%rsp)
  0x00007fab74132028: mov    %r12,0x18(%rsp)
  0x00007fab7413202d: mov    %r13,0x10(%rsp)
  0x00007fab74132032: mov    %r14,0x8(%rsp)
  0x00007fab74132037: mov    %r15,(%rsp)
  0x00007fab7413203b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74132045: movabs $0x7fab74131fe5,%rsi  ;   {internal_word}
  0x00007fab7413204f: mov    %rsp,%rdx
  0x00007fab74132052: and    $0xfffffffffffffff0,%rsp
  0x00007fab74132056: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7413205b: hlt    
[Deopt Handler Code]
  0x00007fab7413205c: movabs $0x7fab7413205c,%r10  ;   {section_word}
  0x00007fab74132066: push   %r10
  0x00007fab74132068: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7413206d: hlt    
  0x00007fab7413206e: hlt    
  0x00007fab7413206f: hlt    
<nmethod compile_id='75' compiler='C1' level='3' entry='0x00007fab74131f00' size='840' address='0x00007fab74131d90' relocation_offset='312' insts_offset='368' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='768' dependencies_offset='832' metadata_offset='736' method='java/util/concurrent/ConcurrentHashMap setTabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V' bytes='19' count='426' iicount='426' stamp='0.329'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.HotSpotCompilationRequestResult from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/CharacterDataLatin1.toLowerCase  [0x00007fab741322a0, 0x00007fab74132530]  656 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61a8c7b0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rsi:rsi   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x00007fab741322a0: 
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.VMField from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>
mov    0x8(%rsi),%r10d
  0x00007fab741322a4: shl    $0x3,%r10
  0x00007fab741322a8: cmp    %rax,%r10
  0x00007fab741322ab: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab741322b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab741322bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab741322c0: mov    %eax,-0x14000(%rsp)
  0x00007fab741322c7: push   %rbp
  0x00007fab741322c8: sub    $0x40,%rsp
  0x00007fab741322cc: movabs $0x7fab61b8a660,%rax  ;   {metadata(method data for {method} {0x00007fab61a8c7b0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab741322d6: mov    0xfc(%rax),%edi
  0x00007fab741322dc: add    $0x8,%edi
  0x00007fab741322df: mov    %edi,0xfc(%rax)
  0x00007fab741322e5: movabs $0x7fab61a8c7b0,%rax  ;   {metadata({method} {0x00007fab61a8c7b0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab741322ef: and    $0x1ff8,%edi
  0x00007fab741322f5: cmp    $0x0,%edi
  0x00007fab741322f8: je     0x00007fab74132417  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@0 (line 133)

  0x00007fab741322fe: movabs $0x7fab61b8a660,%rax  ;   {metadata(method data for {method} {0x00007fab61a8c7b0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab74132308: movabs $0x7c0035d98,%r10  ;   {metadata(&apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab74132312: mov    %r10,0x140(%rax)
  0x00007fab74132319: addq   $0x1,0x148(%rax)
  0x00007fab74132321: movabs $0x7fab61b69628,%rax  ;   {metadata(method data for {method} {0x00007fab61a8be08} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab7413232b: mov    0xfc(%rax),%esi
  0x00007fab74132331: add    $0x8,%esi
  0x00007fab74132334: mov    %esi,0xfc(%rax)
  0x00007fab7413233a: movabs $0x7fab61a8be08,%rax  ;   {metadata({method} {0x00007fab61a8be08} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab74132344: and    $0x7ffff8,%esi
  0x00007fab7413234a: cmp    $0x0,%esi
  0x00007fab7413234d: je     0x00007fab7413242e
  0x00007fab74132353: mov    %rdx,%rax
  0x00007fab74132356: and    $0xffff,%eax
  0x00007fab7413235c: movabs $0x670bc4928,%rsi  ;   {oop([I)}
  0x00007fab74132366: movslq %eax,%rdi
  0x00007fab74132369: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x00007fab74132445
  0x00007fab7413236c: jae    0x00007fab7413244f
  0x00007fab74132372: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x00007fab74132376: mov    %rax,%rsi
  0x00007fab74132379: and    $0x20000,%esi
  0x00007fab7413237f: cmp    $0x0,%esi
  0x00007fab74132382: movabs $0x7fab61b8a660,%rsi  ;   {metadata(method data for {method} {0x00007fab61a8c7b0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab7413238c: movabs $0x1c8,%rdi
  0x00007fab74132396: je     0x00007fab741323a6
  0x00007fab7413239c: movabs $0x1d8,%rdi
  0x00007fab741323a6: mov    (%rsi,%rdi,1),%rbx
  0x00007fab741323aa: lea    0x1(%rbx),%rbx
  0x00007fab741323ae: mov    %rbx,(%rsi,%rdi,1)
  0x00007fab741323b2: je     0x00007fab74132408  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)

  0x00007fab741323b8: mov    %rax,%rsi
  0x00007fab741323bb: and    $0x7fc0000,%esi
  0x00007fab741323c1: cmp    $0x7fc0000,%esi
  0x00007fab741323c7: movabs $0x7fab61b8a660,%rsi  ;   {metadata(method data for {method} {0x00007fab61a8c7b0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab741323d1: movabs $0x1e8,%rdi
  0x00007fab741323db: je     0x00007fab741323eb
  0x00007fab741323e1: movabs $0x1f8,%rdi
  0x00007fab741323eb: mov    (%rsi,%rdi,1),%rbx
  0x00007fab741323ef: lea    0x1(%rbx),%rbx
  0x00007fab741323f3: mov    %rbx,(%rsi,%rdi,1)
  0x00007fab741323f7: je     0x00007fab74132408  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x00007fab741323fd: shl    $0x5,%eax
  0x00007fab74132400: sar    $0x17,%eax
  0x00007fab74132403: add    %edx,%eax
  0x00007fab74132405: mov    %rax,%rdx          ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)

  0x00007fab74132408: mov    %rdx,%rax
  0x00007fab7413240b: add    $0x40,%rsp
  0x00007fab7413240f: pop    %rbp
  0x00007fab74132410: test   %eax,0x1b6afcea(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74132416: retq   
  0x00007fab74132417: mov    %rax,0x8(%rsp)
  0x00007fab7413241c: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74132424: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=393}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 133)
                                                ;   {runtime_call}
  0x00007fab74132429: jmpq   0x00007fab741322fe
  0x00007fab7413242e: mov    %rax,0x8(%rsp)
  0x00007fab74132433: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413243b: callq  0x00007fab741005e0  ; OopMap{off=416}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00007fab74132440: jmpq   0x00007fab74132353
  0x00007fab74132445: callq  0x00007fab740fc000  ; OopMap{rsi=Oop off=426}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00007fab7413244a: callq  0x00007fab740fc000  ; OopMap{rsi=Oop off=431}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00007fab7413244f: mov    %rax,(%rsp)
  0x00007fab74132453: callq  0x00007fab740fb940  ; OopMap{rsi=Oop off=440}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00007fab74132458: nop
  0x00007fab74132459: nop
  0x00007fab7413245a: mov    0x2c0(%r15),%rax
  0x00007fab74132461: movabs $0x0,%r10
  0x00007fab7413246b: mov    %r10,0x2c0(%r15)
  0x00007fab74132472: movabs $0x0,%r10
  0x00007fab7413247c: mov    %r10,0x2c8(%r15)
  0x00007fab74132483: add    $0x40,%rsp
  0x00007fab74132487: pop    %rbp
  0x00007fab74132488: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7413248d: hlt    
  0x00007fab7413248e: hlt    
  0x00007fab7413248f: hlt    
  0x00007fab74132490: hlt    
  0x00007fab74132491: hlt    
  0x00007fab74132492: hlt    
  0x00007fab74132493: hlt    
  0x00007fab74132494: hlt    
  0x00007fab74132495: hlt    
  0x00007fab74132496: hlt    
  0x00007fab74132497: hlt    
  0x00007fab74132498: hlt    
  0x00007fab74132499: hlt    
  0x00007fab7413249a: hlt    
  0x00007fab7413249b: hlt    
  0x00007fab7413249c: hlt    
  0x00007fab7413249d: hlt    
  0x00007fab7413249e: hlt    
  0x00007fab7413249f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab741324a0: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab741324a5: mov    %rsp,-0x28(%rsp)
  0x00007fab741324aa: sub    $0x80,%rsp
  0x00007fab741324b1: mov    %rax,0x78(%rsp)
  0x00007fab741324b6: mov    %rcx,0x70(%rsp)
  0x00007fab741324bb: mov    %rdx,0x68(%rsp)
  0x00007fab741324c0: mov    %rbx,0x60(%rsp)
  0x00007fab741324c5: mov    %rbp,0x50(%rsp)
  0x00007fab741324ca: mov    %rsi,0x48(%rsp)
  0x00007fab741324cf: mov    %rdi,0x40(%rsp)
  0x00007fab741324d4: mov    %r8,0x38(%rsp)
  0x00007fab741324d9: mov    %r9,0x30(%rsp)
  0x00007fab741324de: mov    %r10,0x28(%rsp)
  0x00007fab741324e3: mov    %r11,0x20(%rsp)
  0x00007fab741324e8: mov    %r12,0x18(%rsp)
  0x00007fab741324ed: mov    %r13,0x10(%rsp)
  0x00007fab741324f2: mov    %r14,0x8(%rsp)
  0x00007fab741324f7: mov    %r15,(%rsp)
  0x00007fab741324fb: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74132505: movabs $0x7fab741324a5,%rsi  ;   {internal_word}
  0x00007fab7413250f: mov    %rsp,%rdx
  0x00007fab74132512: and    $0xfffffffffffffff0,%rsp
  0x00007fab74132516: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7413251b: hlt    
[Deopt Handler Code]
  0x00007fab7413251c: movabs $0x7fab7413251c,%r10  ;   {section_word}
  0x00007fab74132526: push   %r10
  0x00007fab74132528: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7413252d: hlt    
  0x00007fab7413252e: hlt    
  0x00007fab7413252f: hlt    
<nmethod compile_id='72' compiler='C1' level='3' entry='0x00007fab741322a0' size='1408' address='0x00007fab74132110' relocation_offset='312' insts_offset='400' stub_offset='912' scopes_data_offset='1080' scopes_pcs_offset='1184' dependencies_offset='1376' nul_chk_table_offset='1384' metadata_offset='1056' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='435' iicount='435' stamp='0.330'/>
<writer thread='140373948942080'/>
<task_queued compile_id='77' method='java/util/zip/ZipFile ensureOpen ()V' bytes='37' count='384' iicount='384' level='3' stamp='0.330' comment='tiered' hot_count='384'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.&lt;init&gt;  [0x00007fab74132840, 0x00007fab74132a90]  592 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61915920} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fab74132840: mov    0x8(%rsi),%r10d
  0x00007fab74132844: shl    $0x3,%r10
  0x00007fab74132848: cmp    %rax,%r10
  0x00007fab7413284b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74132851: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7413285c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74132860: mov    %eax,-0x14000(%rsp)
  0x00007fab74132867: push   %rbp
  0x00007fab74132868: sub    $0x30,%rsp
  0x00007fab7413286c: mov    %rsi,%r8
  0x00007fab7413286f: movabs $0x7fab61b7ab90,%rbx  ;   {metadata(method data for {method} {0x00007fab61915920} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab74132879: mov    0xfc(%rbx),%esi
  0x00007fab7413287f: add    $0x8,%esi
  0x00007fab74132882: mov    %esi,0xfc(%rbx)
  0x00007fab74132888: movabs $0x7fab61915920,%rbx  ;   {metadata({method} {0x00007fab61915920} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab74132892: and    $0x1ff8,%esi
  0x00007fab74132898: cmp    $0x0,%esi
  0x00007fab7413289b: je     0x00007fab7413298c  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@0 (line 67)

  0x00007fab741328a1: mov    %r8,%rbx
  0x00007fab741328a4: movabs $0x7fab61b7ab90,%rsi  ;   {metadata(method data for {method} {0x00007fab61915920} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab741328ae: addq   $0x1,0x130(%rsi)
  0x00007fab741328b6: movabs $0x7fab61a342a0,%rbx  ;   {metadata(method data for {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab741328c0: mov    0xfc(%rbx),%esi
  0x00007fab741328c6: add    $0x8,%esi
  0x00007fab741328c9: mov    %esi,0xfc(%rbx)
  0x00007fab741328cf: movabs $0x7fab618914d8,%rbx  ;   {metadata({method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab741328d9: and    $0x7ffff8,%esi
  0x00007fab741328df: cmp    $0x0,%esi
  0x00007fab741328e2: je     0x00007fab741329a3
  0x00007fab741328e8: mov    %rdx,%rbx
  0x00007fab741328eb: movabs $0x7c00001f8,%rdx  ;   {metadata({type array char})}
  0x00007fab741328f5: movslq %ebx,%rbx
  0x00007fab741328f8: mov    %rbx,%rdi
  0x00007fab741328fb: cmp    $0xffffff,%rbx
  0x00007fab74132902: ja     0x00007fab741329ba
  0x00007fab74132908: movabs $0x17,%rsi
  0x00007fab74132912: lea    (%rsi,%rbx,2),%rsi
  0x00007fab74132916: and    $0xfffffffffffffff8,%rsi
  0x00007fab7413291a: mov    0x60(%r15),%rax
  0x00007fab7413291e: lea    (%rax,%rsi,1),%rsi
  0x00007fab74132922: cmp    0x70(%r15),%rsi
  0x00007fab74132926: ja     0x00007fab741329ba
  0x00007fab7413292c: mov    %rsi,0x60(%r15)
  0x00007fab74132930: sub    %rax,%rsi
  0x00007fab74132933: movq   $0x1,(%rax)
  0x00007fab7413293a: mov    %rdx,%rcx
  0x00007fab7413293d: shr    $0x3,%rcx
  0x00007fab74132941: mov    %ecx,0x8(%rax)
  0x00007fab74132944: mov    %ebx,0xc(%rax)
  0x00007fab74132947: sub    $0x10,%rsi
  0x00007fab7413294b: je     0x00007fab74132962
  0x00007fab74132951: xor    %rbx,%rbx
  0x00007fab74132954: shr    $0x3,%rsi
  0x00007fab74132958: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fab7413295d: dec    %rsi
  0x00007fab74132960: jne    0x00007fab74132958  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)

  0x00007fab74132962: mov    %rax,%r10
  0x00007fab74132965: shr    $0x3,%r10
  0x00007fab74132969: mov    %r10d,0x10(%r8)
  0x00007fab7413296d: shr    $0x9,%r8
  0x00007fab74132971: movabs $0x7fab701ff000,%rsi
  0x00007fab7413297b: movb   $0x0,(%r8,%rsi,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)

  0x00007fab74132980: add    $0x30,%rsp
  0x00007fab74132984: pop    %rbp
  0x00007fab74132985: test   %eax,0x1b6af775(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7413298b: retq   
  0x00007fab7413298c: mov    %rbx,0x8(%rsp)
  0x00007fab74132991: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74132999: callq  0x00007fab741005e0  ; OopMap{r8=Oop off=350}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ;   {runtime_call}
  0x00007fab7413299e: jmpq   0x00007fab741328a1
  0x00007fab741329a3: mov    %rbx,0x8(%rsp)
  0x00007fab741329a8: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741329b0: callq  0x00007fab741005e0  ; OopMap{r8=Oop off=373}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ;   {runtime_call}
  0x00007fab741329b5: jmpq   0x00007fab741328e8
  0x00007fab741329ba: callq  0x00007fab740fd020  ; OopMap{r8=Oop off=383}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ;   {runtime_call}
  0x00007fab741329bf: jmp    0x00007fab74132962
  0x00007fab741329c1: nop
  0x00007fab741329c2: nop
  0x00007fab741329c3: mov    0x2c0(%r15),%rax
  0x00007fab741329ca: movabs $0x0,%r10
  0x00007fab741329d4: mov    %r10,0x2c0(%r15)
  0x00007fab741329db: movabs $0x0,%r10
  0x00007fab741329e5: mov    %r10,0x2c8(%r15)
  0x00007fab741329ec: add    $0x30,%rsp
  0x00007fab741329f0: pop    %rbp
  0x00007fab741329f1: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab741329f6: hlt    
  0x00007fab741329f7: hlt    
  0x00007fab741329f8: hlt    
  0x00007fab741329f9: hlt    
  0x00007fab741329fa: hlt    
  0x00007fab741329fb: hlt    
  0x00007fab741329fc: hlt    
  0x00007fab741329fd: hlt    
  0x00007fab741329fe: hlt    
  0x00007fab741329ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74132a00: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74132a05: mov    %rsp,-0x28(%rsp)
  0x00007fab74132a0a: sub    $0x80,%rsp
  0x00007fab74132a11: mov    %rax,0x78(%rsp)
  0x00007fab74132a16: mov    %rcx,0x70(%rsp)
  0x00007fab74132a1b: mov    %rdx,0x68(%rsp)
  0x00007fab74132a20: mov    %rbx,0x60(%rsp)
  0x00007fab74132a25: mov    %rbp,0x50(%rsp)
  0x00007fab74132a2a: mov    %rsi,0x48(%rsp)
  0x00007fab74132a2f: mov    %rdi,0x40(%rsp)
  0x00007fab74132a34: mov    %r8,0x38(%rsp)
  0x00007fab74132a39: mov    %r9,0x30(%rsp)
  0x00007fab74132a3e: mov    %r10,0x28(%rsp)
  0x00007fab74132a43: mov    %r11,0x20(%rsp)
  0x00007fab74132a48: mov    %r12,0x18(%rsp)
  0x00007fab74132a4d: mov    %r13,0x10(%rsp)
  0x00007fab74132a52: mov    %r14,0x8(%rsp)
  0x00007fab74132a57: mov    %r15,(%rsp)
  0x00007fab74132a5b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74132a65: movabs $0x7fab74132a05,%rsi  ;   {internal_word}
  0x00007fab74132a6f: mov    %rsp,%rdx
  0x00007fab74132a72: and    $0xfffffffffffffff0,%rsp
  0x00007fab74132a76: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74132a7b: hlt    
[Deopt Handler Code]
  0x00007fab74132a7c: movabs $0x7fab74132a7c,%r10  ;   {section_word}
  0x00007fab74132a86: push   %r10
  0x00007fab74132a88: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74132a8d: hlt    
  0x00007fab74132a8e: hlt    
  0x00007fab74132a8f: hlt    
<nmethod compile_id='73' compiler='C1' level='3' entry='0x00007fab74132840' size='1184' address='0x00007fab741326d0' relocation_offset='312' insts_offset='368' stub_offset='816' scopes_data_offset='984' scopes_pcs_offset='1048' dependencies_offset='1176' metadata_offset='960' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='337' iicount='337' stamp='0.331'/>
<writer thread='140373948942080'/>
<task_queued compile_id='78' method='java/util/zip/ZipCoder getBytes (Ljava/lang/String;)[B' bytes='192' count='384' iicount='384' level='3' stamp='0.331' comment='tiered' hot_count='384'/>
<task_queued compile_id='79' method='java/util/zip/ZipCoder encoder ()Ljava/nio/charset/CharsetEncoder;' bytes='35' count='384' iicount='384' level='3' stamp='0.331' comment='tiered' hot_count='384'/>
----------------------------------------------------------------------
java/util/zip/ZipFile.getEntry  [0x00007fab74132d20, 0x00007fab74132f20]  512 bytes
[Entry Point]
  # {method} {0x00007fab61ac0ab8} &apos;getEntry&apos; &apos;(J[BZ)J&apos; in &apos;java/util/zip/ZipFile&apos;
  # parm0:    rsi:rsi   = long
  # parm1:    rdx:rdx   = &apos;[B&apos;
  # parm2:    rcx       = boolean
  #           [sp+0x50]  (sp of caller)
  0x00007fab74132d20: mov    0x8(%rsi),%r10d
  0x00007fab74132d24: shl    $0x3,%r10
  0x00007fab74132d28: cmp    %r10,%rax
  0x00007fab74132d2b: je     0x00007fab74132d38
  0x00007fab74132d31: jmpq   0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74132d36: xchg   %ax,%ax
[Verified Entry Point]
  0x00007fab74132d38: mov    %eax,-0x14000(%rsp)
  0x00007fab74132d3f: push   %rbp
  0x00007fab74132d40: mov    %rsp,%rbp
  0x00007fab74132d43: sub    $0x40,%rsp
  0x00007fab74132d47: mov    %rcx,%r8
  0x00007fab74132d4a: mov    %rdx,0x8(%rsp)
  0x00007fab74132d4f: cmp    $0x0,%rdx
  0x00007fab74132d53: lea    0x8(%rsp),%rcx
  0x00007fab74132d58: cmove  0x8(%rsp),%rcx
  0x00007fab74132d5e: mov    %rsi,%rdx
  0x00007fab74132d61: movabs $0x670bd76d8,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab74132d6b: mov    %r14,0x30(%rsp)
  0x00007fab74132d70: lea    0x30(%rsp),%r14
  0x00007fab74132d75: mov    %r14,%rsi          ; OopMap{[8]=Oop [48]=Oop off=88}
  0x00007fab74132d78: movabs $0x7fab74132d78,%r10  ;   {section_word}
  0x00007fab74132d82: mov    %r10,0x1c8(%r15)
  0x00007fab74132d89: mov    %rsp,0x1c0(%r15)
  0x00007fab74132d90: cmpb   $0x0,0x1a841c3d(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab74132d97: je     0x00007fab74132dd7
  0x00007fab74132d9d: push   %rsi
  0x00007fab74132d9e: push   %rdx
  0x00007fab74132d9f: push   %rcx
  0x00007fab74132da0: push   %r8
  0x00007fab74132da2: movabs $0x7fab61ac0ab8,%rsi  ;   {metadata({method} {0x00007fab61ac0ab8} &apos;getEntry&apos; &apos;(J[BZ)J&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab74132dac: mov    %r15,%rdi
  0x00007fab74132daf: test   $0xf,%esp
  0x00007fab74132db5: je     0x00007fab74132dcd
  0x00007fab74132dbb: sub    $0x8,%rsp
  0x00007fab74132dbf: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab74132dc4: add    $0x8,%rsp
  0x00007fab74132dc8: jmpq   0x00007fab74132dd2
  0x00007fab74132dcd: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab74132dd2: pop    %r8
  0x00007fab74132dd4: pop    %rcx
  0x00007fab74132dd5: pop    %rdx
  0x00007fab74132dd6: pop    %rsi
  0x00007fab74132dd7: lea    0x1e0(%r15),%rdi
  0x00007fab74132dde: movl   $0x4,0x258(%r15)
  0x00007fab74132de9: callq  0x00007fab8c627e50  ;   {runtime_call}
  0x00007fab74132dee: vzeroupper 
  0x00007fab74132df1: movl   $0x5,0x258(%r15)
  0x00007fab74132dfc: mov    %r15d,%ecx
  0x00007fab74132dff: shr    $0x4,%ecx
  0x00007fab74132e02: and    $0xffc,%ecx
  0x00007fab74132e08: movabs $0x7fab8f7e1000,%r10  ;   {external_word}
  0x00007fab74132e12: mov    %ecx,(%r10,%rcx,1)
  0x00007fab74132e16: cmpl   $0x0,0x1a84cb9c(%rip)        # 0x00007fab8e97f9bc
                                                ;   {external_word}
  0x00007fab74132e20: jne    0x00007fab74132e34
  0x00007fab74132e26: cmpl   $0x0,0x30(%r15)
  0x00007fab74132e2e: je     0x00007fab74132e55
  0x00007fab74132e34: mov    %rax,-0x8(%rbp)
  0x00007fab74132e38: mov    %r15,%rdi
  0x00007fab74132e3b: mov    %rsp,%r12
  0x00007fab74132e3e: sub    $0x0,%rsp
  0x00007fab74132e42: and    $0xfffffffffffffff0,%rsp
  0x00007fab74132e46: callq  0x00007fab8e40fc20  ;   {runtime_call}
  0x00007fab74132e4b: mov    %r12,%rsp
  0x00007fab74132e4e: xor    %r12,%r12
  0x00007fab74132e51: mov    -0x8(%rbp),%rax
  0x00007fab74132e55: movl   $0x8,0x258(%r15)
  0x00007fab74132e60: cmpl   $0x1,0x2b0(%r15)
  0x00007fab74132e6b: je     0x00007fab74132efb
  0x00007fab74132e71: cmpb   $0x0,0x1a841b5c(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab74132e78: je     0x00007fab74132eb6
  0x00007fab74132e7e: mov    %rax,-0x8(%rbp)
  0x00007fab74132e82: movabs $0x7fab61ac0ab8,%rsi  ;   {metadata({method} {0x00007fab61ac0ab8} &apos;getEntry&apos; &apos;(J[BZ)J&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab74132e8c: mov    %r15,%rdi
  0x00007fab74132e8f: test   $0xf,%esp
  0x00007fab74132e95: je     0x00007fab74132ead
  0x00007fab74132e9b: sub    $0x8,%rsp
  0x00007fab74132e9f: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab74132ea4: add    $0x8,%rsp
  0x00007fab74132ea8: jmpq   0x00007fab74132eb2
  0x00007fab74132ead: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab74132eb2: mov    -0x8(%rbp),%rax
  0x00007fab74132eb6: movabs $0x0,%r10
  0x00007fab74132ec0: mov    %r10,0x1c0(%r15)
  0x00007fab74132ec7: movabs $0x0,%r10
  0x00007fab74132ed1: mov    %r10,0x1c8(%r15)
  0x00007fab74132ed8: mov    0x38(%r15),%rcx
  0x00007fab74132edc: movl   $0x0,0x100(%rcx)
  0x00007fab74132ee6: leaveq 
  0x00007fab74132ee7: cmpq   $0x0,0x8(%r15)
  0x00007fab74132eef: jne    0x00007fab74132ef6
  0x00007fab74132ef5: retq   
  0x00007fab74132ef6: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00007fab74132efb: mov    %rax,-0x8(%rbp)
  0x00007fab74132eff: mov    %rsp,%r12
  0x00007fab74132f02: sub    $0x0,%rsp
  0x00007fab74132f06: and    $0xfffffffffffffff0,%rsp
  0x00007fab74132f0a: callq  0x00007fab8e372120  ;   {runtime_call}
  0x00007fab74132f0f: mov    %r12,%rsp
  0x00007fab74132f12: xor    %r12,%r12
  0x00007fab74132f15: mov    -0x8(%rbp),%rax
  0x00007fab74132f19: jmpq   0x00007fab74132e71
  0x00007fab74132f1e: hlt    
  0x00007fab74132f1f: hlt    
<nmethod compile_id='80' compile_kind='c2n' level='0' entry='0x00007fab74132d20' size='912' address='0x00007fab74132b90' relocation_offset='312' consts_offset='912' insts_offset='400' method='java/util/zip/ZipFile getEntry (J[BZ)J' bytes='0' count='384' iicount='384' stamp='0.332'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/zip/ZipFile.ensureOpen  [0x00007fab74133100, 0x00007fab741333d8]  728 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61ac1910} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fab74133100: mov    0x8(%rsi),%r10d
  0x00007fab74133104: shl    $0x3,%r10
  0x00007fab74133108: cmp    %rax,%r10
  0x00007fab7413310b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74133111: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7413311c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74133120: mov    %eax,-0x14000(%rsp)
  0x00007fab74133127: push   %rbp
  0x00007fab74133128: sub    $0x40,%rsp
  0x00007fab7413312c: movabs $0x7fab61b8a8b0,%rdx  ;   {metadata(method data for {method} {0x00007fab61ac1910} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab74133136: mov    0xfc(%rdx),%eax
  0x00007fab7413313c: add    $0x8,%eax
  0x00007fab7413313f: mov    %eax,0xfc(%rdx)
  0x00007fab74133145: movabs $0x7fab61ac1910,%rdx  ;   {metadata({method} {0x00007fab61ac1910} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab7413314f: and    $0x1ff8,%eax
  0x00007fab74133155: cmp    $0x0,%eax
  0x00007fab74133158: je     0x00007fab7413327e  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@0 (line 668)

  0x00007fab7413315e: movsbl 0x19(%rsi),%edx    ;*getfield closeRequested {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@1 (line 668)

  0x00007fab74133162: cmp    $0x0,%edx
  0x00007fab74133165: movabs $0x7fab61b8a8b0,%rdx  ;   {metadata(method data for {method} {0x00007fab61ac1910} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab7413316f: movabs $0x130,%rax
  0x00007fab74133179: je     0x00007fab74133189
  0x00007fab7413317f: movabs $0x140,%rax
  0x00007fab74133189: mov    (%rdx,%rax,1),%rdi
  0x00007fab7413318d: lea    0x1(%rdi),%rdi
  0x00007fab74133191: mov    %rdi,(%rdx,%rax,1)
  0x00007fab74133195: jne    0x00007fab74133236  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@4 (line 668)

  0x00007fab7413319b: mov    0x10(%rsi),%rdx    ;*getfield jzfile {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@18 (line 672)

  0x00007fab7413319f: movabs $0x0,%rax
  0x00007fab741331a9: cmp    %rax,%rdx
  0x00007fab741331ac: movabs $0x7fab61b8a8b0,%rdx  ;   {metadata(method data for {method} {0x00007fab61ac1910} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab741331b6: movabs $0x160,%rax
  0x00007fab741331c0: jne    0x00007fab741331d0
  0x00007fab741331c6: movabs $0x170,%rax
  0x00007fab741331d0: mov    (%rdx,%rax,1),%rsi
  0x00007fab741331d4: lea    0x1(%rsi),%rsi
  0x00007fab741331d8: mov    %rsi,(%rdx,%rax,1)
  0x00007fab741331dc: je     0x00007fab741331ee  ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@22 (line 672)

  0x00007fab741331e2: add    $0x40,%rsp
  0x00007fab741331e6: pop    %rbp
  0x00007fab741331e7: test   %eax,0x1b6aef13(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741331ed: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@36 (line 675)

  0x00007fab741331ee: xchg   %ax,%ax
  0x00007fab741331f0: jmpq   0x00007fab741332a4  ;   {no_reloc}
  0x00007fab741331f5: add    %al,(%rax)
  0x00007fab741331f7: add    %al,(%rax)
  0x00007fab741331f9: add    %ch,%cl
  0x00007fab741331fb: scas   %es:(%rdi),%eax
  0x00007fab741331fc: add    %al,(%rax)
  0x00007fab741331fe: add    %cl,-0x75(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@26 (line 673)

  0x00007fab74133201: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00007fab61ac1910} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab74133204: mov    $0xa8,%al
  0x00007fab74133206: mov    $0x7fab61,%eax
  0x00007fab7413320b: add    %cl,-0x7d(%rax)
  0x00007fab7413320e: xchg   %al,0x1000001(%rax)
  0x00007fab74133214: movabs $0x671594920,%rdx  ;   {oop(&quot;The object is not initialized.&quot;)}
  0x00007fab7413321e: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@32 (line 673)

  0x00007fab74133221: mov    %rax,0x28(%rsp)
  0x00007fab74133226: nop
  0x00007fab74133227: callq  0x00007fab74047d60  ; OopMap{[40]=Oop off=300}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@32 (line 673)
                                                ;   {optimized virtual_call}
  0x00007fab7413322c: mov    0x28(%rsp),%rax
  0x00007fab74133231: jmpq   0x00007fab7413330c  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@35 (line 673)

  0x00007fab74133236: xchg   %ax,%ax
  0x00007fab74133238: jmpq   0x00007fab741332ca  ;   {no_reloc}
  0x00007fab7413323d: add    %al,(%rax)
  0x00007fab7413323f: add    %al,(%rax)
  0x00007fab74133241: add    %ch,%cl
  0x00007fab74133243: lea    (%rax),%eax
  0x00007fab74133245: add    %al,(%rax)         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@7 (line 669)

  0x00007fab74133247: mov    %rax,%rdx
  0x00007fab7413324a: movabs $0x7fab61b8a8b0,%rsi  ;   {metadata(method data for {method} {0x00007fab61ac1910} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab74133254: addq   $0x1,0x150(%rsi)
  0x00007fab7413325c: movabs $0x6715948d8,%rdx  ;   {oop(&quot;zip file closed&quot;)}
  0x00007fab74133266: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@13 (line 669)

  0x00007fab74133269: mov    %rax,0x30(%rsp)
  0x00007fab7413326e: nop
  0x00007fab7413326f: callq  0x00007fab74047d60  ; OopMap{[48]=Oop off=372}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@13 (line 669)
                                                ;   {optimized virtual_call}
  0x00007fab74133274: mov    0x30(%rsp),%rax
  0x00007fab74133279: jmpq   0x00007fab7413330c
  0x00007fab7413327e: mov    %rdx,0x8(%rsp)
  0x00007fab74133283: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413328b: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=400}
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipFile::ensureOpen@-1 (line 668)
                                                ;   {runtime_call}
  0x00007fab74133290: jmpq   0x00007fab7413315e
  0x00007fab74133295: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab7413329f: mov    $0xa050f00,%eax
  0x00007fab741332a4: callq  0x00007fab740ff5e0  ; OopMap{off=425}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@26 (line 673)
                                                ;   {runtime_call}
  0x00007fab741332a9: jmpq   0x00007fab741331f0
  0x00007fab741332ae: mov    %rdx,%rdx
  0x00007fab741332b1: callq  0x00007fab740fc4a0  ; OopMap{off=438}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@26 (line 673)
                                                ;   {runtime_call}
  0x00007fab741332b6: jmpq   0x00007fab741331ff
  0x00007fab741332bb: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab741332c5: mov    $0xa050f00,%eax
  0x00007fab741332ca: callq  0x00007fab740ff5e0  ; OopMap{off=463}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@7 (line 669)
                                                ;   {runtime_call}
  0x00007fab741332cf: jmpq   0x00007fab74133238
  0x00007fab741332d4: mov    %rdx,%rdx
  0x00007fab741332d7: callq  0x00007fab740fc4a0  ; OopMap{off=476}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@7 (line 669)
                                                ;   {runtime_call}
  0x00007fab741332dc: jmpq   0x00007fab74133247
  0x00007fab741332e1: nop
  0x00007fab741332e2: nop
  0x00007fab741332e3: mov    0x2c0(%r15),%rax
  0x00007fab741332ea: movabs $0x0,%r10
  0x00007fab741332f4: mov    %r10,0x2c0(%r15)
  0x00007fab741332fb: movabs $0x0,%r10
  0x00007fab74133305: mov    %r10,0x2c8(%r15)
  0x00007fab7413330c: add    $0x40,%rsp
  0x00007fab74133310: pop    %rbp
  0x00007fab74133311: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74133316: hlt    
  0x00007fab74133317: hlt    
  0x00007fab74133318: hlt    
  0x00007fab74133319: hlt    
  0x00007fab7413331a: hlt    
  0x00007fab7413331b: hlt    
  0x00007fab7413331c: hlt    
  0x00007fab7413331d: hlt    
  0x00007fab7413331e: hlt    
  0x00007fab7413331f: hlt    
[Stub Code]
  0x00007fab74133320: nop                       ;   {no_reloc}
  0x00007fab74133321: nop
  0x00007fab74133322: nop
  0x00007fab74133323: nop
  0x00007fab74133324: nop
  0x00007fab74133325: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413332f: jmpq   0x00007fab7413332f  ;   {runtime_call}
  0x00007fab74133334: nop
  0x00007fab74133335: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413333f: jmpq   0x00007fab7413333f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74133344: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74133349: mov    %rsp,-0x28(%rsp)
  0x00007fab7413334e: sub    $0x80,%rsp
  0x00007fab74133355: mov    %rax,0x78(%rsp)
  0x00007fab7413335a: mov    %rcx,0x70(%rsp)
  0x00007fab7413335f: mov    %rdx,0x68(%rsp)
  0x00007fab74133364: mov    %rbx,0x60(%rsp)
  0x00007fab74133369: mov    %rbp,0x50(%rsp)
  0x00007fab7413336e: mov    %rsi,0x48(%rsp)
  0x00007fab74133373: mov    %rdi,0x40(%rsp)
  0x00007fab74133378: mov    %r8,0x38(%rsp)
  0x00007fab7413337d: mov    %r9,0x30(%rsp)
  0x00007fab74133382: mov    %r10,0x28(%rsp)
  0x00007fab74133387: mov    %r11,0x20(%rsp)
  0x00007fab7413338c: mov    %r12,0x18(%rsp)
  0x00007fab74133391: mov    %r13,0x10(%rsp)
  0x00007fab74133396: mov    %r14,0x8(%rsp)
  0x00007fab7413339b: mov    %r15,(%rsp)
  0x00007fab7413339f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741333a9: movabs $0x7fab74133349,%rsi  ;   {internal_word}
  0x00007fab741333b3: mov    %rsp,%rdx
  0x00007fab741333b6: and    $0xfffffffffffffff0,%rsp
  0x00007fab741333ba: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741333bf: hlt    
[Deopt Handler Code]
  0x00007fab741333c0: movabs $0x7fab741333c0,%r10  ;   {section_word}
  0x00007fab741333ca: push   %r10
  0x00007fab741333cc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab741333d1: hlt    
  0x00007fab741333d2: hlt    
  0x00007fab741333d3: hlt    
  0x00007fab741333d4: hlt    
  0x00007fab741333d5: hlt    
  0x00007fab741333d6: hlt    
  0x00007fab741333d7: hlt    
<nmethod compile_id='77' compiler='C1' level='3' entry='0x00007fab74133100' size='1608' address='0x00007fab74132f50' relocation_offset='312' insts_offset='432' stub_offset='976' scopes_data_offset='1168' scopes_pcs_offset='1280' dependencies_offset='1600' metadata_offset='1160' method='java/util/zip/ZipFile ensureOpen ()V' bytes='37' count='385' iicount='385' stamp='0.334'/>
<writer thread='140373948942080'/>
<task_queued compile_id='81' method='java/net/URL getPort ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.334' comment='tiered' hot_count='128'/>
[Loaded jdk.vm.ci.hotspot.VMFlag from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.hotspot.VMIntrinsicMethod from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/zip/ZipCoder.encoder  [0x00007fab74133780, 0x00007fab74134128]  2472 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61b74890} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;
  #           [sp+0x70]  (sp of caller)
  0x00007fab74133780: mov    0x8(%rsi),%r10d
  0x00007fab74133784: shl    $0x3,%r10
  0x00007fab74133788: cmp    %rax,%r10
  0x00007fab7413378b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74133791: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7413379c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab741337a0: mov    %eax,-0x14000(%rsp)
  0x00007fab741337a7: push   %rbp
  0x00007fab741337a8: sub    $0x60,%rsp
  0x00007fab741337ac: movabs $0x7fab61b8aa70,%rdi  ;   {metadata(method data for {method} {0x00007fab61b74890} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab741337b6: mov    0xfc(%rdi),%ebx
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.meta.Assumptions$Assumption from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
  0x00007fab741337bc: add    $0x8,%ebx
  0x00007fab741337bf: mov    %ebx,0xfc(%rdi)
  0x00007fab741337c5: movabs $0x7fab61b74890,%rdi  ;   {metadata({method} {0x00007fab61b74890} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab741337cf: and    $0x1ff8,%ebx
  0x00007fab741337d5: cmp    $0x0,%ebx
  0x00007fab741337d8: je     0x00007fab74133fb3  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@0 (line 152)

  0x00007fab741337de: mov    0x18(%rsi),%edi
  0x00007fab741337e1: shl    $0x3,%rdi          ;*getfield enc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@1 (line 152)

  0x00007fab741337e5: cmp    $0x0,%rdi
  0x00007fab741337e9: movabs $0x7fab61b8aa70,%rdi  ;   {metadata(method data for {method} {0x00007fab61b74890} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab741337f3: movabs $0x130,%rbx
  0x00007fab741337fd: jne    0x00007fab7413380d
  0x00007fab74133803: movabs $0x140,%rbx
  0x00007fab7413380d: mov    (%rdi,%rbx,1),%rax
  0x00007fab74133811: lea    0x1(%rax),%rax
  0x00007fab74133815: mov    %rax,(%rdi,%rbx,1)
  0x00007fab74133819: jne    0x00007fab74133fa0  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@4 (line 152)

  0x00007fab7413381f: mov    0x10(%rsi),%edi
  0x00007fab74133822: shl    $0x3,%rdi          ;*getfield cs {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@9 (line 153)

  0x00007fab74133826: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x00007fab74133fca
  0x00007fab74133829: mov    %rdi,%rbx
  0x00007fab7413382c: movabs $0x7fab61b8aa70,%rax  ;   {metadata(method data for {method} {0x00007fab61b74890} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74133836: mov    0x8(%rbx),%ebx
  0x00007fab74133839: shl    $0x3,%rbx
  0x00007fab7413383d: cmp    0x160(%rax),%rbx
  0x00007fab74133844: jne    0x00007fab74133853
  0x00007fab74133846: addq   $0x1,0x168(%rax)
  0x00007fab7413384e: jmpq   0x00007fab74133a15
  0x00007fab74133853: cmp    0x170(%rax),%rbx
  0x00007fab7413385a: jne    0x00007fab74133869
  0x00007fab7413385c: addq   $0x1,0x178(%rax)
  0x00007fab74133864: jmpq   0x00007fab74133a15
  0x00007fab74133869: cmp    0x180(%rax),%rbx
  0x00007fab74133870: jne    0x00007fab7413387f
  0x00007fab74133872: addq   $0x1,0x188(%rax)
  0x00007fab7413387a: jmpq   0x00007fab74133a15
  0x00007fab7413387f: cmp    0x190(%rax),%rbx
  0x00007fab74133886: jne    0x00007fab74133895
  0x00007fab74133888: addq   $0x1,0x198(%rax)
  0x00007fab74133890: jmpq   0x00007fab74133a15
  0x00007fab74133895: cmp    0x1a0(%rax),%rbx
  0x00007fab7413389c: jne    0x00007fab741338ab
  0x00007fab7413389e: addq   $0x1,0x1a8(%rax)
  0x00007fab741338a6: jmpq   0x00007fab74133a15
  0x00007fab741338ab: cmp    0x1b0(%rax),%rbx
  0x00007fab741338b2: jne    0x00007fab741338c1
  0x00007fab741338b4: addq   $0x1,0x1b8(%rax)
  0x00007fab741338bc: jmpq   0x00007fab74133a15
  0x00007fab741338c1: cmp    0x1c0(%rax),%rbx
  0x00007fab741338c8: jne    0x00007fab741338d7
  0x00007fab741338ca: addq   $0x1,0x1c8(%rax)
  0x00007fab741338d2: jmpq   0x00007fab74133a15
  0x00007fab741338d7: cmp    0x1d0(%rax),%rbx
  0x00007fab741338de: jne    0x00007fab741338ed
  0x00007fab741338e0: addq   $0x1,0x1d8(%rax)
  0x00007fab741338e8: jmpq   0x00007fab74133a15
  0x00007fab741338ed: cmpq   $0x0,0x160(%rax)
  0x00007fab741338f8: jne    0x00007fab74133911
  0x00007fab741338fa: mov    %rbx,0x160(%rax)
  0x00007fab74133901: movq   $0x1,0x168(%rax)
  0x00007fab7413390c: jmpq   0x00007fab74133a15
  0x00007fab74133911: cmpq   $0x0,0x170(%rax)
  0x00007fab7413391c: jne    0x00007fab74133935
  0x00007fab7413391e: mov    %rbx,0x170(%rax)
  0x00007fab74133925: movq   $0x1,0x178(%rax)
  0x00007fab74133930: jmpq   0x00007fab74133a15
  0x00007fab74133935: cmpq   $0x0,0x180(%rax)
  0x00007fab74133940: jne    0x00007fab74133959
  0x00007fab74133942: mov    %rbx,0x180(%rax)
  0x00007fab74133949: movq   $0x1,0x188(%rax)
  0x00007fab74133954: jmpq   0x00007fab74133a15
  0x00007fab74133959: cmpq   $0x0,0x190(%rax)
  0x00007fab74133964: jne    0x00007fab7413397d
  0x00007fab74133966: mov    %rbx,0x190(%rax)
  0x00007fab7413396d: movq   $0x1,0x198(%rax)
  0x00007fab74133978: jmpq   0x00007fab74133a15
  0x00007fab7413397d: cmpq   $0x0,0x1a0(%rax)
  0x00007fab74133988: jne    0x00007fab741339a1
  0x00007fab7413398a: mov    %rbx,0x1a0(%rax)
  0x00007fab74133991: movq   $0x1,0x1a8(%rax)
  0x00007fab7413399c: jmpq   0x00007fab74133a15
  0x00007fab741339a1: cmpq   $0x0,0x1b0(%rax)
  0x00007fab741339ac: jne    0x00007fab741339c5
  0x00007fab741339ae: mov    %rbx,0x1b0(%rax)
  0x00007fab741339b5: movq   $0x1,0x1b8(%rax)
  0x00007fab741339c0: jmpq   0x00007fab74133a15
  0x00007fab741339c5: cmpq   $0x0,0x1c0(%rax)
  0x00007fab741339d0: jne    0x00007fab741339e9
  0x00007fab741339d2: mov    %rbx,0x1c0(%rax)
  0x00007fab741339d9: movq   $0x1,0x1c8(%rax)
  0x00007fab741339e4: jmpq   0x00007fab74133a15
  0x00007fab741339e9: cmpq   $0x0,0x1d0(%rax)
  0x00007fab741339f4: jne    0x00007fab74133a0d
  0x00007fab741339f6: mov    %rbx,0x1d0(%rax)
  0x00007fab741339fd: movq   $0x1,0x1d8(%rax)
  0x00007fab74133a08: jmpq   0x00007fab74133a15
  0x00007fab74133a0d: addq   $0x1,0x150(%rax)
  0x00007fab74133a15: mov    %rsi,0x48(%rsp)
  0x00007fab74133a1a: mov    %rdi,%rsi          ;*invokevirtual newEncoder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@12 (line 153)

  0x00007fab74133a1d: movabs $0xffffffffffffffff,%rax
  0x00007fab74133a27: callq  0x00007fab74047f60  ; OopMap{[72]=Oop off=684}
                                                ;*invokevirtual newEncoder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@12 (line 153)
                                                ;   {virtual_call}
  0x00007fab74133a2c: cmp    (%rax),%rax        ;*invokevirtual onMalformedInput {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ; implicit exception: dispatches to 0x00007fab74133fcf
  0x00007fab74133a2f: mov    %rax,%rsi
  0x00007fab74133a32: movabs $0x7fab61b8aa70,%rdi  ;   {metadata(method data for {method} {0x00007fab61b74890} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74133a3c: addq   $0x1,0x1e8(%rdi)
  0x00007fab74133a44: movabs $0x7fab61b8adc8,%rsi  ;   {metadata(method data for {method} {0x00007fab61a0aac0} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74133a4e: mov    0xfc(%rsi),%edi
  0x00007fab74133a54: add    $0x8,%edi
  0x00007fab74133a57: mov    %edi,0xfc(%rsi)
  0x00007fab74133a5d: movabs $0x7fab61a0aac0,%rsi  ;   {metadata({method} {0x00007fab61a0aac0} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74133a67: and    $0x7ffff8,%edi
  0x00007fab74133a6d: cmp    $0x0,%edi
  0x00007fab74133a70: je     0x00007fab74133fd4
  0x00007fab74133a76: movabs $0x7fab61b8adc8,%rsi  ;   {metadata(method data for {method} {0x00007fab61a0aac0} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74133a80: incl   0x130(%rsi)        ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@1 (line 382)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)

  0x00007fab74133a86: movabs $0x670b96908,%rsi  ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00007fab74133a90: movabs $0x670b96908,%r10  ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00007fab74133a9a: shr    $0x3,%r10
  0x00007fab74133a9e: mov    %r10d,0x20(%rax)
  0x00007fab74133aa2: mov    %rax,%rsi
  0x00007fab74133aa5: shr    $0x9,%rsi
  0x00007fab74133aa9: movabs $0x7fab701ff000,%rdi
  0x00007fab74133ab3: movb   $0x0,(%rsi,%rdi,1)  ;*putfield malformedInputAction {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@16 (line 384)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)

  0x00007fab74133ab7: mov    %rax,%rsi
  0x00007fab74133aba: movabs $0x7fab61b8adc8,%rdi  ;   {metadata(method data for {method} {0x00007fab61a0aac0} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74133ac4: mov    0x8(%rsi),%esi
  0x00007fab74133ac7: shl    $0x3,%rsi
  0x00007fab74133acb: cmp    0x170(%rdi),%rsi
  0x00007fab74133ad2: jne    0x00007fab74133ae1
  0x00007fab74133ad4: addq   $0x1,0x178(%rdi)
  0x00007fab74133adc: jmpq   0x00007fab74133ca3
  0x00007fab74133ae1: cmp    0x180(%rdi),%rsi
  0x00007fab74133ae8: jne    0x00007fab74133af7
  0x00007fab74133aea: addq   $0x1,0x188(%rdi)
  0x00007fab74133af2: jmpq   0x00007fab74133ca3
  0x00007fab74133af7: cmp    0x190(%rdi),%rsi
  0x00007fab74133afe: jne    0x00007fab74133b0d
  0x00007fab74133b00: addq   $0x1,0x198(%rdi)
  0x00007fab74133b08: jmpq   0x00007fab74133ca3
  0x00007fab74133b0d: cmp    0x1a0(%rdi),%rsi
  0x00007fab74133b14: jne    0x00007fab74133b23
  0x00007fab74133b16: addq   $0x1,0x1a8(%rdi)
  0x00007fab74133b1e: jmpq   0x00007fab74133ca3
  0x00007fab74133b23: cmp    0x1b0(%rdi),%rsi
  0x00007fab74133b2a: jne    0x00007fab74133b39
  0x00007fab74133b2c: addq   $0x1,0x1b8(%rdi)
  0x00007fab74133b34: jmpq   0x00007fab74133ca3
  0x00007fab74133b39: cmp    0x1c0(%rdi),%rsi
  0x00007fab74133b40: jne    0x00007fab74133b4f
  0x00007fab74133b42: addq   $0x1,0x1c8(%rdi)
  0x00007fab74133b4a: jmpq   0x00007fab74133ca3
  0x00007fab74133b4f: cmp    0x1d0(%rdi),%rsi
  0x00007fab74133b56: jne    0x00007fab74133b65
  0x00007fab74133b58: addq   $0x1,0x1d8(%rdi)
  0x00007fab74133b60: jmpq   0x00007fab74133ca3
  0x00007fab74133b65: cmp    0x1e0(%rdi),%rsi
  0x00007fab74133b6c: jne    0x00007fab74133b7b
  0x00007fab74133b6e: addq   $0x1,0x1e8(%rdi)
  0x00007fab74133b76: jmpq   0x00007fab74133ca3
  0x00007fab74133b7b: cmpq   $0x0,0x170(%rdi)
  0x00007fab74133b86: jne    0x00007fab74133b9f
  0x00007fab74133b88: mov    %rsi,0x170(%rdi)
  0x00007fab74133b8f: movq   $0x1,0x178(%rdi)
  0x00007fab74133b9a: jmpq   0x00007fab74133ca3
  0x00007fab74133b9f: cmpq   $0x0,0x180(%rdi)
  0x00007fab74133baa: jne    0x00007fab74133bc3
  0x00007fab74133bac: mov    %rsi,0x180(%rdi)
  0x00007fab74133bb3: movq   $0x1,0x188(%rdi)
  0x00007fab74133bbe: jmpq   0x00007fab74133ca3
  0x00007fab74133bc3: cmpq   $0x0,0x190(%rdi)
  0x00007fab74133bce: jne    0x00007fab74133be7
  0x00007fab74133bd0: mov    %rsi,0x190(%rdi)
  0x00007fab74133bd7: movq   $0x1,0x198(%rdi)
  0x00007fab74133be2: jmpq   0x00007fab74133ca3
  0x00007fab74133be7: cmpq   $0x0,0x1a0(%rdi)
  0x00007fab74133bf2: jne    0x00007fab74133c0b
  0x00007fab74133bf4: mov    %rsi,0x1a0(%rdi)
  0x00007fab74133bfb: movq   $0x1,0x1a8(%rdi)
  0x00007fab74133c06: jmpq   0x00007fab74133ca3
  0x00007fab74133c0b: cmpq   $0x0,0x1b0(%rdi)
  0x00007fab74133c16: jne    0x00007fab74133c2f
  0x00007fab74133c18: mov    %rsi,0x1b0(%rdi)
  0x00007fab74133c1f: movq   $0x1,0x1b8(%rdi)
  0x00007fab74133c2a: jmpq   0x00007fab74133ca3
  0x00007fab74133c2f: cmpq   $0x0,0x1c0(%rdi)
  0x00007fab74133c3a: jne    0x00007fab74133c53
  0x00007fab74133c3c: mov    %rsi,0x1c0(%rdi)
  0x00007fab74133c43: movq   $0x1,0x1c8(%rdi)
  0x00007fab74133c4e: jmpq   0x00007fab74133ca3
  0x00007fab74133c53: cmpq   $0x0,0x1d0(%rdi)
  0x00007fab74133c5e: jne    0x00007fab74133c77
  0x00007fab74133c60: mov    %rsi,0x1d0(%rdi)
  0x00007fab74133c67: movq   $0x1,0x1d8(%rdi)
  0x00007fab74133c72: jmpq   0x00007fab74133ca3
  0x00007fab74133c77: cmpq   $0x0,0x1e0(%rdi)
  0x00007fab74133c82: jne    0x00007fab74133c9b
  0x00007fab74133c84: mov    %rsi,0x1e0(%rdi)
  0x00007fab74133c8b: movq   $0x1,0x1e8(%rdi)
  0x00007fab74133c96: jmpq   0x00007fab74133ca3
  0x00007fab74133c9b: addq   $0x1,0x160(%rdi)
  0x00007fab74133ca3: movabs $0x7fab61b8b008,%rsi  ;   {metadata(method data for {method} {0x00007fab61a0ab68} &apos;implOnMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74133cad: mov    0xfc(%rsi),%edi
  0x00007fab74133cb3: add    $0x8,%edi
  0x00007fab74133cb6: mov    %edi,0xfc(%rsi)
  0x00007fab74133cbc: movabs $0x7fab61a0ab68,%rsi  ;   {metadata({method} {0x00007fab61a0ab68} &apos;implOnMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74133cc6: and    $0x7ffff8,%edi
  0x00007fab74133ccc: cmp    $0x0,%edi
  0x00007fab74133ccf: je     0x00007fab74133feb
  0x00007fab74133cd5: mov    %rax,%rsi
  0x00007fab74133cd8: movabs $0x7fab61b8aa70,%rdi  ;   {metadata(method data for {method} {0x00007fab61b74890} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74133ce2: addq   $0x1,0x280(%rdi)
  0x00007fab74133cea: movabs $0x7fab61b8b158,%rsi  ;   {metadata(method data for {method} {0x00007fab61a0acd0} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74133cf4: mov    0xfc(%rsi),%edi
  0x00007fab74133cfa: add    $0x8,%edi
  0x00007fab74133cfd: mov    %edi,0xfc(%rsi)
  0x00007fab74133d03: movabs $0x7fab61a0acd0,%rsi  ;   {metadata({method} {0x00007fab61a0acd0} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74133d0d: and    $0x7ffff8,%edi
  0x00007fab74133d13: cmp    $0x0,%edi
  0x00007fab74133d16: je     0x00007fab74134002
  0x00007fab74133d1c: movabs $0x7fab61b8b158,%rsi  ;   {metadata(method data for {method} {0x00007fab61a0acd0} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74133d26: incl   0x130(%rsi)        ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@1 (line 426)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)

  0x00007fab74133d2c: movabs $0x670b96908,%rsi  ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00007fab74133d36: movabs $0x670b96908,%r10  ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00007fab74133d40: shr    $0x3,%r10
  0x00007fab74133d44: mov    %r10d,0x24(%rax)
  0x00007fab74133d48: mov    %rax,%rsi
  0x00007fab74133d4b: shr    $0x9,%rsi
  0x00007fab74133d4f: movabs $0x7fab701ff000,%rdi
  0x00007fab74133d59: movb   $0x0,(%rsi,%rdi,1)  ;*putfield unmappableCharacterAction {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@16 (line 428)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)

  0x00007fab74133d5d: mov    %rax,%rsi
  0x00007fab74133d60: movabs $0x7fab61b8b158,%rdi  ;   {metadata(method data for {method} {0x00007fab61a0acd0} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74133d6a: mov    0x8(%rsi),%esi
  0x00007fab74133d6d: shl    $0x3,%rsi
  0x00007fab74133d71: cmp    0x170(%rdi),%rsi
  0x00007fab74133d78: jne    0x00007fab74133d87
  0x00007fab74133d7a: addq   $0x1,0x178(%rdi)
  0x00007fab74133d82: jmpq   0x00007fab74133f49
  0x00007fab74133d87: cmp    0x180(%rdi),%rsi
  0x00007fab74133d8e: jne    0x00007fab74133d9d
  0x00007fab74133d90: addq   $0x1,0x188(%rdi)
  0x00007fab74133d98: jmpq   0x00007fab74133f49
  0x00007fab74133d9d: cmp    0x190(%rdi),%rsi
  0x00007fab74133da4: jne    0x00007fab74133db3
  0x00007fab74133da6: addq   $0x1,0x198(%rdi)
  0x00007fab74133dae: jmpq   0x00007fab74133f49
  0x00007fab74133db3: cmp    0x1a0(%rdi),%rsi
  0x00007fab74133dba: jne    0x00007fab74133dc9
  0x00007fab74133dbc: addq   $0x1,0x1a8(%rdi)
  0x00007fab74133dc4: jmpq   0x00007fab74133f49
  0x00007fab74133dc9: cmp    0x1b0(%rdi),%rsi
  0x00007fab74133dd0: jne    0x00007fab74133ddf
  0x00007fab74133dd2: addq   $0x1,0x1b8(%rdi)
  0x00007fab74133dda: jmpq   0x00007fab74133f49
  0x00007fab74133ddf: cmp    0x1c0(%rdi),%rsi
  0x00007fab74133de6: jne    0x00007fab74133df5
  0x00007fab74133de8: addq   $0x1,0x1c8(%rdi)
  0x00007fab74133df0: jmpq   0x00007fab74133f49
  0x00007fab74133df5: cmp    0x1d0(%rdi),%rsi
  0x00007fab74133dfc: jne    0x00007fab74133e0b
  0x00007fab74133dfe: addq   $0x1,0x1d8(%rdi)
  0x00007fab74133e06: jmpq   0x00007fab74133f49
  0x00007fab74133e0b: cmp    0x1e0(%rdi),%rsi
  0x00007fab74133e12: jne    0x00007fab74133e21
  0x00007fab74133e14: addq   $0x1,0x1e8(%rdi)
  0x00007fab74133e1c: jmpq   0x00007fab74133f49
  0x00007fab74133e21: cmpq   $0x0,0x170(%rdi)
  0x00007fab74133e2c: jne    0x00007fab74133e45
  0x00007fab74133e2e: mov    %rsi,0x170(%rdi)
  0x00007fab74133e35: movq   $0x1,0x178(%rdi)
  0x00007fab74133e40: jmpq   0x00007fab74133f49
  0x00007fab74133e45: cmpq   $0x0,0x180(%rdi)
  0x00007fab74133e50: jne    0x00007fab74133e69
  0x00007fab74133e52: mov    %rsi,0x180(%rdi)
  0x00007fab74133e59: movq   $0x1,0x188(%rdi)
  0x00007fab74133e64: jmpq   0x00007fab74133f49
  0x00007fab74133e69: cmpq   $0x0,0x190(%rdi)
  0x00007fab74133e74: jne    0x00007fab74133e8d
  0x00007fab74133e76: mov    %rsi,0x190(%rdi)
  0x00007fab74133e7d: movq   $0x1,0x198(%rdi)
  0x00007fab74133e88: jmpq   0x00007fab74133f49
  0x00007fab74133e8d: cmpq   $0x0,0x1a0(%rdi)
  0x00007fab74133e98: jne    0x00007fab74133eb1
  0x00007fab74133e9a: mov    %rsi,0x1a0(%rdi)
  0x00007fab74133ea1: movq   $0x1,0x1a8(%rdi)
  0x00007fab74133eac: jmpq   0x00007fab74133f49
  0x00007fab74133eb1: cmpq   $0x0,0x1b0(%rdi)
  0x00007fab74133ebc: jne    0x00007fab74133ed5
  0x00007fab74133ebe: mov    %rsi,0x1b0(%rdi)
  0x00007fab74133ec5: movq   $0x1,0x1b8(%rdi)
  0x00007fab74133ed0: jmpq   0x00007fab74133f49
  0x00007fab74133ed5: cmpq   $0x0,0x1c0(%rdi)
  0x00007fab74133ee0: jne    0x00007fab74133ef9
  0x00007fab74133ee2: mov    %rsi,0x1c0(%rdi)
  0x00007fab74133ee9: movq   $0x1,0x1c8(%rdi)
  0x00007fab74133ef4: jmpq   0x00007fab74133f49
  0x00007fab74133ef9: cmpq   $0x0,0x1d0(%rdi)
  0x00007fab74133f04: jne    0x00007fab74133f1d
  0x00007fab74133f06: mov    %rsi,0x1d0(%rdi)
  0x00007fab74133f0d: movq   $0x1,0x1d8(%rdi)
  0x00007fab74133f18: jmpq   0x00007fab74133f49
  0x00007fab74133f1d: cmpq   $0x0,0x1e0(%rdi)
  0x00007fab74133f28: jne    0x00007fab74133f41
  0x00007fab74133f2a: mov    %rsi,0x1e0(%rdi)
  0x00007fab74133f31: movq   $0x1,0x1e8(%rdi)
  0x00007fab74133f3c: jmpq   0x00007fab74133f49
  0x00007fab74133f41: addq   $0x1,0x160(%rdi)
  0x00007fab74133f49: movabs $0x7fab61b8b398,%rsi  ;   {metadata(method data for {method} {0x00007fab61a0ad78} &apos;implOnUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74133f53: mov    0xfc(%rsi),%edi
  0x00007fab74133f59: add    $0x8,%edi
  0x00007fab74133f5c: mov    %edi,0xfc(%rsi)
  0x00007fab74133f62: movabs $0x7fab61a0ad78,%rsi  ;   {metadata({method} {0x00007fab61a0ad78} &apos;implOnUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74133f6c: and    $0x7ffff8,%edi
  0x00007fab74133f72: cmp    $0x0,%edi
  0x00007fab74133f75: je     0x00007fab74134019
  0x00007fab74133f7b: mov    0x48(%rsp),%rsi
  0x00007fab74133f80: mov    %rax,%r10
  0x00007fab74133f83: shr    $0x3,%r10
  0x00007fab74133f87: mov    %r10d,0x18(%rsi)
  0x00007fab74133f8b: mov    %rsi,%rax
  0x00007fab74133f8e: shr    $0x9,%rax
  0x00007fab74133f92: movabs $0x7fab701ff000,%rdi
  0x00007fab74133f9c: movb   $0x0,(%rax,%rdi,1)  ;*putfield enc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@27 (line 155)

  0x00007fab74133fa0: mov    0x18(%rsi),%eax
  0x00007fab74133fa3: shl    $0x3,%rax          ;*getfield enc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@31 (line 157)

  0x00007fab74133fa7: add    $0x60,%rsp
  0x00007fab74133fab: pop    %rbp
  0x00007fab74133fac: test   %eax,0x1b6ae14e(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74133fb2: retq   
  0x00007fab74133fb3: mov    %rdi,0x8(%rsp)
  0x00007fab74133fb8: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74133fc0: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=2117}
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipCoder::encoder@-1 (line 152)
                                                ;   {runtime_call}
  0x00007fab74133fc5: jmpq   0x00007fab741337de
  0x00007fab74133fca: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rdi=Oop off=2127}
                                                ;*invokevirtual newEncoder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@12 (line 153)
                                                ;   {runtime_call}
  0x00007fab74133fcf: callq  0x00007fab740fc000  ; OopMap{[72]=Oop rax=Oop off=2132}
                                                ;*invokevirtual onMalformedInput {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ;   {runtime_call}
  0x00007fab74133fd4: mov    %rsi,0x8(%rsp)
  0x00007fab74133fd9: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74133fe1: callq  0x00007fab741005e0  ; OopMap{[72]=Oop rax=Oop off=2150}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@-1 (line 382)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ;   {runtime_call}
  0x00007fab74133fe6: jmpq   0x00007fab74133a76
  0x00007fab74133feb: mov    %rsi,0x8(%rsp)
  0x00007fab74133ff0: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74133ff8: callq  0x00007fab741005e0  ; OopMap{[72]=Oop rax=Oop off=2173}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::implOnMalformedInput@-1 (line 398)
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@21 (line 385)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ;   {runtime_call}
  0x00007fab74133ffd: jmpq   0x00007fab74133cd5
  0x00007fab74134002: mov    %rsi,0x8(%rsp)
  0x00007fab74134007: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413400f: callq  0x00007fab741005e0  ; OopMap{[72]=Oop rax=Oop off=2196}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@-1 (line 426)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)
                                                ;   {runtime_call}
  0x00007fab74134014: jmpq   0x00007fab74133d1c
  0x00007fab74134019: mov    %rsi,0x8(%rsp)
  0x00007fab7413401e: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74134026: callq  0x00007fab741005e0  ; OopMap{[72]=Oop rax=Oop off=2219}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::implOnUnmappableCharacter@-1 (line 442)
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@21 (line 429)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)
                                                ;   {runtime_call}
  0x00007fab7413402b: jmpq   0x00007fab74133f7b
  0x00007fab74134030: nop
  0x00007fab74134031: nop
  0x00007fab74134032: mov    0x2c0(%r15),%rax
  0x00007fab74134039: movabs $0x0,%r10
  0x00007fab74134043: mov    %r10,0x2c0(%r15)
  0x00007fab7413404a: movabs $0x0,%r10
  0x00007fab74134054: mov    %r10,0x2c8(%r15)
  0x00007fab7413405b: add    $0x60,%rsp
  0x00007fab7413405f: pop    %rbp
  0x00007fab74134060: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74134065: hlt    
  0x00007fab74134066: hlt    
  0x00007fab74134067: hlt    
  0x00007fab74134068: hlt    
  0x00007fab74134069: hlt    
  0x00007fab7413406a: hlt    
  0x00007fab7413406b: hlt    
  0x00007fab7413406c: hlt    
  0x00007fab7413406d: hlt    
  0x00007fab7413406e: hlt    
  0x00007fab7413406f: hlt    
  0x00007fab74134070: hlt    
  0x00007fab74134071: hlt    
  0x00007fab74134072: hlt    
  0x00007fab74134073: hlt    
  0x00007fab74134074: hlt    
  0x00007fab74134075: hlt    
  0x00007fab74134076: hlt    
  0x00007fab74134077: hlt    
  0x00007fab74134078: hlt    
  0x00007fab74134079: hlt    
  0x00007fab7413407a: hlt    
  0x00007fab7413407b: hlt    
  0x00007fab7413407c: hlt    
  0x00007fab7413407d: hlt    
  0x00007fab7413407e: hlt    
  0x00007fab7413407f: hlt    
[Stub Code]
  0x00007fab74134080: nop                       ;   {no_reloc}
  0x00007fab74134081: nop
  0x00007fab74134082: nop
  0x00007fab74134083: nop
  0x00007fab74134084: nop
  0x00007fab74134085: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413408f: jmpq   0x00007fab7413408f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74134094: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74134099: mov    %rsp,-0x28(%rsp)
  0x00007fab7413409e: sub    $0x80,%rsp
  0x00007fab741340a5: mov    %rax,0x78(%rsp)
  0x00007fab741340aa: mov    %rcx,0x70(%rsp)
  0x00007fab741340af: mov    %rdx,0x68(%rsp)
  0x00007fab741340b4: mov    %rbx,0x60(%rsp)
  0x00007fab741340b9: mov    %rbp,0x50(%rsp)
  0x00007fab741340be: mov    %rsi,0x48(%rsp)
  0x00007fab741340c3: mov    %rdi,0x40(%rsp)
  0x00007fab741340c8: mov    %r8,0x38(%rsp)
  0x00007fab741340cd: mov    %r9,0x30(%rsp)
  0x00007fab741340d2: mov    %r10,0x28(%rsp)
  0x00007fab741340d7: mov    %r11,0x20(%rsp)
  0x00007fab741340dc: mov    %r12,0x18(%rsp)
  0x00007fab741340e1: mov    %r13,0x10(%rsp)
  0x00007fab741340e6: mov    %r14,0x8(%rsp)
  0x00007fab741340eb: mov    %r15,(%rsp)
  0x00007fab741340ef: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741340f9: movabs $0x7fab74134099,%rsi  ;   {internal_word}
  0x00007fab74134103: mov    %rsp,%rdx
  0x00007fab74134106: and    $0xfffffffffffffff0,%rsp
  0x00007fab7413410a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7413410f: hlt    
[Deopt Handler Code]
  0x00007fab74134110: movabs $0x7fab74134110,%r10  ;   {section_word}
  0x00007fab7413411a: push   %r10
  0x00007fab7413411c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74134121: hlt    
  0x00007fab74134122: hlt    
  0x00007fab74134123: hlt    
  0x00007fab74134124: hlt    
  0x00007fab74134125: hlt    
  0x00007fab74134126: hlt    
  0x00007fab74134127: hlt    
<nmethod compile_id='79' compiler='C1' level='3' entry='0x00007fab74133780' size='3520' address='0x00007fab741335d0' relocation_offset='312' insts_offset='432' stub_offset='2736' scopes_data_offset='2952' scopes_pcs_offset='3136' dependencies_offset='3488' nul_chk_table_offset='3496' oops_offset='2904' metadata_offset='2912' method='java/util/zip/ZipCoder encoder ()Ljava/nio/charset/CharsetEncoder;' bytes='35' count='407' iicount='407' stamp='0.337'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.meta.Assumptions$ConcreteMethod from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.meta.Assumptions$NoFinalizableSubclass from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.meta.Assumptions$ConcreteSubtype from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<task_queued compile_id='82' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='161' backedge_count='5120' iicount='161' level='3' stamp='0.337' comment='tiered' hot_count='161'/>
[Loaded jdk.vm.ci.meta.Assumptions$LeafType from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<task_queued compile_id='83' method='java/net/URLStreamHandler getDefaultPort ()I' bytes='2' count='128' iicount='128' level='1' stamp='0.337' comment='tiered' hot_count='128'/>
[Loaded jdk.vm.ci.meta.Assumptions$CallSiteTargetValue from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<task_queued compile_id='84' method='java/util/jar/JarFile getJarEntry (Ljava/lang/String;)Ljava/util/jar/JarEntry;' bytes='9' count='384' iicount='384' level='3' stamp='0.337' comment='tiered' hot_count='384'/>
[Loaded jdk.vm.ci.code.Architecture from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.TargetDescription from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.BytecodePosition from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/zip/ZipCoder.getBytes  [0x00007fab741347a0, 0x00007fab74136e58]  9912 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;
  # this:     rsi:rsi   = &apos;java/util/zip/ZipCoder&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x180]  (sp of caller)
  0x00007fab741347a0: mov    0x8(%rsi),%r10d
  0x00007fab741347a4: shl    $0x3,%r10
  0x00007fab741347a8: cmp    %rax,%r10
  0x00007fab741347ab: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab741347b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab741347bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab741347c0: mov    %eax,-0x14000(%rsp)
  0x00007fab741347c7: push   %rbp
  0x00007fab741347c8: sub    $0x170,%rsp
  0x00007fab741347cf: mov    %rsi,0xf0(%rsp)
  0x00007fab741347d7: movabs $0x7fab61b8b4e8,%rdi  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab741347e1: mov    0xfc(%rdi),%ebx
  0x00007fab741347e7: add    $0x8,%ebx
  0x00007fab741347ea: mov    %ebx,0xfc(%rdi)
  0x00007fab741347f0: movabs $0x7fab61b74330,%rdi  ;   {metadata({method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab741347fa: and    $0x1ff8,%ebx
  0x00007fab74134800: cmp    $0x0,%ebx
  0x00007fab74134803: je     0x00007fab741368d1  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@0 (line 77)

  0x00007fab74134809: mov    %rsi,%rdi
  0x00007fab7413480c: movabs $0x7fab61b8b4e8,%rbx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74134816: addq   $0x1,0x130(%rbx)
  0x00007fab7413481e: movabs $0x7fab61b8aa70,%rdi  ;   {metadata(method data for {method} {0x00007fab61b74890} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74134828: mov    0xfc(%rdi),%ebx
  0x00007fab7413482e: add    $0x8,%ebx
  0x00007fab74134831: mov    %ebx,0xfc(%rdi)
  0x00007fab74134837: movabs $0x7fab61b74890,%rdi  ;   {metadata({method} {0x00007fab61b74890} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74134841: and    $0x7ffff8,%ebx
  0x00007fab74134847: cmp    $0x0,%ebx
  0x00007fab7413484a: je     0x00007fab741368e8
  0x00007fab74134850: mov    0x18(%rsi),%edi
  0x00007fab74134853: shl    $0x3,%rdi          ;*getfield enc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@1 (line 152)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x00007fab74134857: cmp    $0x0,%rdi
  0x00007fab7413485b: movabs $0x7fab61b8aa70,%rdi  ;   {metadata(method data for {method} {0x00007fab61b74890} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74134865: movabs $0x130,%rbx
  0x00007fab7413486f: jne    0x00007fab7413487f
  0x00007fab74134875: movabs $0x140,%rbx
  0x00007fab7413487f: mov    (%rdi,%rbx,1),%rax
  0x00007fab74134883: lea    0x1(%rax),%rax
  0x00007fab74134887: mov    %rax,(%rdi,%rbx,1)
  0x00007fab7413488b: mov    %rdx,0xf8(%rsp)
  0x00007fab74134893: jne    0x00007fab7413501b  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@4 (line 152)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x00007fab74134899: mov    0x10(%rsi),%edi
  0x00007fab7413489c: shl    $0x3,%rdi          ;*getfield cs {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@9 (line 153)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x00007fab741348a0: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x00007fab741368ff
  0x00007fab741348a3: mov    %rdi,%rbx
  0x00007fab741348a6: movabs $0x7fab61b8aa70,%rax  ;   {metadata(method data for {method} {0x00007fab61b74890} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab741348b0: mov    0x8(%rbx),%ebx
  0x00007fab741348b3: shl    $0x3,%rbx
  0x00007fab741348b7: cmp    0x160(%rax),%rbx
  0x00007fab741348be: jne    0x00007fab741348cd
  0x00007fab741348c0: addq   $0x1,0x168(%rax)
  0x00007fab741348c8: jmpq   0x00007fab74134a8f
  0x00007fab741348cd: cmp    0x170(%rax),%rbx
  0x00007fab741348d4: jne    0x00007fab741348e3
  0x00007fab741348d6: addq   $0x1,0x178(%rax)
  0x00007fab741348de: jmpq   0x00007fab74134a8f
  0x00007fab741348e3: cmp    0x180(%rax),%rbx
  0x00007fab741348ea: jne    0x00007fab741348f9
  0x00007fab741348ec: addq   $0x1,0x188(%rax)
  0x00007fab741348f4: jmpq   0x00007fab74134a8f
  0x00007fab741348f9: cmp    0x190(%rax),%rbx
  0x00007fab74134900: jne    0x00007fab7413490f
  0x00007fab74134902: addq   $0x1,0x198(%rax)
  0x00007fab7413490a: jmpq   0x00007fab74134a8f
  0x00007fab7413490f: cmp    0x1a0(%rax),%rbx
  0x00007fab74134916: jne    0x00007fab74134925
  0x00007fab74134918: addq   $0x1,0x1a8(%rax)
  0x00007fab74134920: jmpq   0x00007fab74134a8f
  0x00007fab74134925: cmp    0x1b0(%rax),%rbx
  0x00007fab7413492c: jne    0x00007fab7413493b
  0x00007fab7413492e: addq   $0x1,0x1b8(%rax)
  0x00007fab74134936: jmpq   0x00007fab74134a8f
  0x00007fab7413493b: cmp    0x1c0(%rax),%rbx
  0x00007fab74134942: jne    0x00007fab74134951
  0x00007fab74134944: addq   $0x1,0x1c8(%rax)
  0x00007fab7413494c: jmpq   0x00007fab74134a8f
  0x00007fab74134951: cmp    0x1d0(%rax),%rbx
  0x00007fab74134958: jne    0x00007fab74134967
  0x00007fab7413495a: addq   $0x1,0x1d8(%rax)
  0x00007fab74134962: jmpq   0x00007fab74134a8f
  0x00007fab74134967: cmpq   $0x0,0x160(%rax)
  0x00007fab74134972: jne    0x00007fab7413498b
  0x00007fab74134974: mov    %rbx,0x160(%rax)
  0x00007fab7413497b: movq   $0x1,0x168(%rax)
  0x00007fab74134986: jmpq   0x00007fab74134a8f
  0x00007fab7413498b: cmpq   $0x0,0x170(%rax)
  0x00007fab74134996: jne    0x00007fab741349af
  0x00007fab74134998: mov    %rbx,0x170(%rax)
  0x00007fab7413499f: movq   $0x1,0x178(%rax)
  0x00007fab741349aa: jmpq   0x00007fab74134a8f
  0x00007fab741349af: cmpq   $0x0,0x180(%rax)
  0x00007fab741349ba: jne    0x00007fab741349d3
  0x00007fab741349bc: mov    %rbx,0x180(%rax)
  0x00007fab741349c3: movq   $0x1,0x188(%rax)
  0x00007fab741349ce: jmpq   0x00007fab74134a8f
  0x00007fab741349d3: cmpq   $0x0,0x190(%rax)
  0x00007fab741349de: jne    0x00007fab741349f7
  0x00007fab741349e0: mov    %rbx,0x190(%rax)
  0x00007fab741349e7: movq   $0x1,0x198(%rax)
  0x00007fab741349f2: jmpq   0x00007fab74134a8f
  0x00007fab741349f7: cmpq   $0x0,0x1a0(%rax)
  0x00007fab74134a02: jne    0x00007fab74134a1b
  0x00007fab74134a04: mov    %rbx,0x1a0(%rax)
  0x00007fab74134a0b: movq   $0x1,0x1a8(%rax)
  0x00007fab74134a16: jmpq   0x00007fab74134a8f
  0x00007fab74134a1b: cmpq   $0x0,0x1b0(%rax)
  0x00007fab74134a26: jne    0x00007fab74134a3f
  0x00007fab74134a28: mov    %rbx,0x1b0(%rax)
  0x00007fab74134a2f: movq   $0x1,0x1b8(%rax)
  0x00007fab74134a3a: jmpq   0x00007fab74134a8f
  0x00007fab74134a3f: cmpq   $0x0,0x1c0(%rax)
  0x00007fab74134a4a: jne    0x00007fab74134a63
  0x00007fab74134a4c: mov    %rbx,0x1c0(%rax)
  0x00007fab74134a53: movq   $0x1,0x1c8(%rax)
  0x00007fab74134a5e: jmpq   0x00007fab74134a8f
  0x00007fab74134a63: cmpq   $0x0,0x1d0(%rax)
  0x00007fab74134a6e: jne    0x00007fab74134a87
  0x00007fab74134a70: mov    %rbx,0x1d0(%rax)
  0x00007fab74134a77: movq   $0x1,0x1d8(%rax)
  0x00007fab74134a82: jmpq   0x00007fab74134a8f
  0x00007fab74134a87: addq   $0x1,0x150(%rax)
  0x00007fab74134a8f: mov    %rdi,%rsi          ;*invokevirtual newEncoder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@12 (line 153)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x00007fab74134a92: nop
  0x00007fab74134a93: nop
  0x00007fab74134a94: nop
  0x00007fab74134a95: movabs $0xffffffffffffffff,%rax
  0x00007fab74134a9f: callq  0x00007fab74047f60  ; OopMap{[240]=Oop [248]=Oop off=772}
                                                ;*invokevirtual newEncoder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@12 (line 153)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)
                                                ;   {virtual_call}
  0x00007fab74134aa4: cmp    (%rax),%rax        ;*invokevirtual onMalformedInput {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)
                                                ; implicit exception: dispatches to 0x00007fab74136904
  0x00007fab74134aa7: mov    %rax,%rbx
  0x00007fab74134aaa: movabs $0x7fab61b8aa70,%rdx  ;   {metadata(method data for {method} {0x00007fab61b74890} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74134ab4: addq   $0x1,0x1e8(%rdx)
  0x00007fab74134abc: movabs $0x7fab61b8adc8,%rbx  ;   {metadata(method data for {method} {0x00007fab61a0aac0} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74134ac6: mov    0xfc(%rbx),%edx
  0x00007fab74134acc: add    $0x8,%edx
  0x00007fab74134acf: mov    %edx,0xfc(%rbx)
  0x00007fab74134ad5: movabs $0x7fab61a0aac0,%rbx  ;   {metadata({method} {0x00007fab61a0aac0} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74134adf: and    $0x7ffff8,%edx
  0x00007fab74134ae5: cmp    $0x0,%edx
  0x00007fab74134ae8: je     0x00007fab74136909
  0x00007fab74134aee: movabs $0x7fab61b8adc8,%rbx  ;   {metadata(method data for {method} {0x00007fab61a0aac0} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74134af8: incl   0x130(%rbx)        ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@1 (line 382)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x00007fab74134afe: movabs $0x670b96908,%rbx  ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00007fab74134b08: movabs $0x670b96908,%r10  ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00007fab74134b12: shr    $0x3,%r10
  0x00007fab74134b16: mov    %r10d,0x20(%rax)
  0x00007fab74134b1a: mov    %rax,%rbx
  0x00007fab74134b1d: shr    $0x9,%rbx
  0x00007fab74134b21: movabs $0x7fab701ff000,%rdx
  0x00007fab74134b2b: movb   $0x0,(%rbx,%rdx,1)  ;*putfield malformedInputAction {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@16 (line 384)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x00007fab74134b2f: mov    %rax,%rbx
  0x00007fab74134b32: movabs $0x7fab61b8adc8,%rdx  ;   {metadata(method data for {method} {0x00007fab61a0aac0} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74134b3c: mov    0x8(%rbx),%ebx
  0x00007fab74134b3f: shl    $0x3,%rbx
  0x00007fab74134b43: cmp    0x170(%rdx),%rbx
  0x00007fab74134b4a: jne    0x00007fab74134b59
  0x00007fab74134b4c: addq   $0x1,0x178(%rdx)
  0x00007fab74134b54: jmpq   0x00007fab74134d1b
  0x00007fab74134b59: cmp    0x180(%rdx),%rbx
  0x00007fab74134b60: jne    0x00007fab74134b6f
  0x00007fab74134b62: addq   $0x1,0x188(%rdx)
  0x00007fab74134b6a: jmpq   0x00007fab74134d1b
  0x00007fab74134b6f: cmp    0x190(%rdx),%rbx
  0x00007fab74134b76: jne    0x00007fab74134b85
  0x00007fab74134b78: addq   $0x1,0x198(%rdx)
  0x00007fab74134b80: jmpq   0x00007fab74134d1b
  0x00007fab74134b85: cmp    0x1a0(%rdx),%rbx
  0x00007fab74134b8c: jne    0x00007fab74134b9b
  0x00007fab74134b8e: addq   $0x1,0x1a8(%rdx)
  0x00007fab74134b96: jmpq   0x00007fab74134d1b
  0x00007fab74134b9b: cmp    0x1b0(%rdx),%rbx
  0x00007fab74134ba2: jne    0x00007fab74134bb1
  0x00007fab74134ba4: addq   $0x1,0x1b8(%rdx)
  0x00007fab74134bac: jmpq   0x00007fab74134d1b
  0x00007fab74134bb1: cmp    0x1c0(%rdx),%rbx
  0x00007fab74134bb8: jne    0x00007fab74134bc7
  0x00007fab74134bba: addq   $0x1,0x1c8(%rdx)
  0x00007fab74134bc2: jmpq   0x00007fab74134d1b
  0x00007fab74134bc7: cmp    0x1d0(%rdx),%rbx
  0x00007fab74134bce: jne    0x00007fab74134bdd
  0x00007fab74134bd0: addq   $0x1,0x1d8(%rdx)
  0x00007fab74134bd8: jmpq   0x00007fab74134d1b
  0x00007fab74134bdd: cmp    0x1e0(%rdx),%rbx
  0x00007fab74134be4: jne    0x00007fab74134bf3
  0x00007fab74134be6: addq   $0x1,0x1e8(%rdx)
  0x00007fab74134bee: jmpq   0x00007fab74134d1b
  0x00007fab74134bf3: cmpq   $0x0,0x170(%rdx)
  0x00007fab74134bfe: jne    0x00007fab74134c17
  0x00007fab74134c00: mov    %rbx,0x170(%rdx)
  0x00007fab74134c07: movq   $0x1,0x178(%rdx)
  0x00007fab74134c12: jmpq   0x00007fab74134d1b
  0x00007fab74134c17: cmpq   $0x0,0x180(%rdx)
  0x00007fab74134c22: jne    0x00007fab74134c3b
  0x00007fab74134c24: mov    %rbx,0x180(%rdx)
  0x00007fab74134c2b: movq   $0x1,0x188(%rdx)
  0x00007fab74134c36: jmpq   0x00007fab74134d1b
  0x00007fab74134c3b: cmpq   $0x0,0x190(%rdx)
  0x00007fab74134c46: jne    0x00007fab74134c5f
  0x00007fab74134c48: mov    %rbx,0x190(%rdx)
  0x00007fab74134c4f: movq   $0x1,0x198(%rdx)
  0x00007fab74134c5a: jmpq   0x00007fab74134d1b
  0x00007fab74134c5f: cmpq   $0x0,0x1a0(%rdx)
  0x00007fab74134c6a: jne    0x00007fab74134c83
  0x00007fab74134c6c: mov    %rbx,0x1a0(%rdx)
  0x00007fab74134c73: movq   $0x1,0x1a8(%rdx)
  0x00007fab74134c7e: jmpq   0x00007fab74134d1b
  0x00007fab74134c83: cmpq   $0x0,0x1b0(%rdx)
  0x00007fab74134c8e: jne    0x00007fab74134ca7
  0x00007fab74134c90: mov    %rbx,0x1b0(%rdx)
  0x00007fab74134c97: movq   $0x1,0x1b8(%rdx)
  0x00007fab74134ca2: jmpq   0x00007fab74134d1b
  0x00007fab74134ca7: cmpq   $0x0,0x1c0(%rdx)
  0x00007fab74134cb2: jne    0x00007fab74134ccb
  0x00007fab74134cb4: mov    %rbx,0x1c0(%rdx)
  0x00007fab74134cbb: movq   $0x1,0x1c8(%rdx)
  0x00007fab74134cc6: jmpq   0x00007fab74134d1b
  0x00007fab74134ccb: cmpq   $0x0,0x1d0(%rdx)
  0x00007fab74134cd6: jne    0x00007fab74134cef
  0x00007fab74134cd8: mov    %rbx,0x1d0(%rdx)
  0x00007fab74134cdf: movq   $0x1,0x1d8(%rdx)
  0x00007fab74134cea: jmpq   0x00007fab74134d1b
  0x00007fab74134cef: cmpq   $0x0,0x1e0(%rdx)
  0x00007fab74134cfa: jne    0x00007fab74134d13
  0x00007fab74134cfc: mov    %rbx,0x1e0(%rdx)
  0x00007fab74134d03: movq   $0x1,0x1e8(%rdx)
  0x00007fab74134d0e: jmpq   0x00007fab74134d1b
  0x00007fab74134d13: addq   $0x1,0x160(%rdx)
  0x00007fab74134d1b: movabs $0x7fab61b8b008,%rbx  ;   {metadata(method data for {method} {0x00007fab61a0ab68} &apos;implOnMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74134d25: mov    0xfc(%rbx),%edx
  0x00007fab74134d2b: add    $0x8,%edx
  0x00007fab74134d2e: mov    %edx,0xfc(%rbx)
  0x00007fab74134d34: movabs $0x7fab61a0ab68,%rbx  ;   {metadata({method} {0x00007fab61a0ab68} &apos;implOnMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74134d3e: and    $0x7ffff8,%edx
  0x00007fab74134d44: cmp    $0x0,%edx
  0x00007fab74134d47: je     0x00007fab74136920
  0x00007fab74134d4d: mov    %rax,%rbx
  0x00007fab74134d50: movabs $0x7fab61b8aa70,%rdx  ;   {metadata(method data for {method} {0x00007fab61b74890} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74134d5a: addq   $0x1,0x280(%rdx)
  0x00007fab74134d62: movabs $0x7fab61b8b158,%rbx  ;   {metadata(method data for {method} {0x00007fab61a0acd0} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74134d6c: mov    0xfc(%rbx),%edx
  0x00007fab74134d72: add    $0x8,%edx
  0x00007fab74134d75: mov    %edx,0xfc(%rbx)
  0x00007fab74134d7b: movabs $0x7fab61a0acd0,%rbx  ;   {metadata({method} {0x00007fab61a0acd0} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74134d85: and    $0x7ffff8,%edx
  0x00007fab74134d8b: cmp    $0x0,%edx
  0x00007fab74134d8e: je     0x00007fab74136937
  0x00007fab74134d94: movabs $0x7fab61b8b158,%rbx  ;   {metadata(method data for {method} {0x00007fab61a0acd0} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74134d9e: incl   0x130(%rbx)        ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@1 (line 426)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x00007fab74134da4: movabs $0x670b96908,%rbx  ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00007fab74134dae: movabs $0x670b96908,%r10  ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00007fab74134db8: shr    $0x3,%r10
  0x00007fab74134dbc: mov    %r10d,0x24(%rax)
  0x00007fab74134dc0: mov    %rax,%rbx
  0x00007fab74134dc3: shr    $0x9,%rbx
  0x00007fab74134dc7: movabs $0x7fab701ff000,%rdx
  0x00007fab74134dd1: movb   $0x0,(%rbx,%rdx,1)  ;*putfield unmappableCharacterAction {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@16 (line 428)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x00007fab74134dd5: mov    %rax,%rbx
  0x00007fab74134dd8: movabs $0x7fab61b8b158,%rdx  ;   {metadata(method data for {method} {0x00007fab61a0acd0} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74134de2: mov    0x8(%rbx),%ebx
  0x00007fab74134de5: shl    $0x3,%rbx
  0x00007fab74134de9: cmp    0x170(%rdx),%rbx
  0x00007fab74134df0: jne    0x00007fab74134dff
  0x00007fab74134df2: addq   $0x1,0x178(%rdx)
  0x00007fab74134dfa: jmpq   0x00007fab74134fc1
  0x00007fab74134dff: cmp    0x180(%rdx),%rbx
  0x00007fab74134e06: jne    0x00007fab74134e15
  0x00007fab74134e08: addq   $0x1,0x188(%rdx)
  0x00007fab74134e10: jmpq   0x00007fab74134fc1
  0x00007fab74134e15: cmp    0x190(%rdx),%rbx
  0x00007fab74134e1c: jne    0x00007fab74134e2b
  0x00007fab74134e1e: addq   $0x1,0x198(%rdx)
  0x00007fab74134e26: jmpq   0x00007fab74134fc1
  0x00007fab74134e2b: cmp    0x1a0(%rdx),%rbx
  0x00007fab74134e32: jne    0x00007fab74134e41
  0x00007fab74134e34: addq   $0x1,0x1a8(%rdx)
  0x00007fab74134e3c: jmpq   0x00007fab74134fc1
  0x00007fab74134e41: cmp    0x1b0(%rdx),%rbx
  0x00007fab74134e48: jne    0x00007fab74134e57
  0x00007fab74134e4a: addq   $0x1,0x1b8(%rdx)
  0x00007fab74134e52: jmpq   0x00007fab74134fc1
  0x00007fab74134e57: cmp    0x1c0(%rdx),%rbx
  0x00007fab74134e5e: jne    0x00007fab74134e6d
  0x00007fab74134e60: addq   $0x1,0x1c8(%rdx)
  0x00007fab74134e68: jmpq   0x00007fab74134fc1
  0x00007fab74134e6d: cmp    0x1d0(%rdx),%rbx
  0x00007fab74134e74: jne    0x00007fab74134e83
  0x00007fab74134e76: addq   $0x1,0x1d8(%rdx)
  0x00007fab74134e7e: jmpq   0x00007fab74134fc1
  0x00007fab74134e83: cmp    0x1e0(%rdx),%rbx
  0x00007fab74134e8a: jne    0x00007fab74134e99
  0x00007fab74134e8c: addq   $0x1,0x1e8(%rdx)
  0x00007fab74134e94: jmpq   0x00007fab74134fc1
  0x00007fab74134e99: cmpq   $0x0,0x170(%rdx)
  0x00007fab74134ea4: jne    0x00007fab74134ebd
  0x00007fab74134ea6: mov    %rbx,0x170(%rdx)
  0x00007fab74134ead: movq   $0x1,0x178(%rdx)
  0x00007fab74134eb8: jmpq   0x00007fab74134fc1
  0x00007fab74134ebd: cmpq   $0x0,0x180(%rdx)
  0x00007fab74134ec8: jne    0x00007fab74134ee1
  0x00007fab74134eca: mov    %rbx,0x180(%rdx)
  0x00007fab74134ed1: movq   $0x1,0x188(%rdx)
  0x00007fab74134edc: jmpq   0x00007fab74134fc1
  0x00007fab74134ee1: cmpq   $0x0,0x190(%rdx)
  0x00007fab74134eec: jne    0x00007fab74134f05
  0x00007fab74134eee: mov    %rbx,0x190(%rdx)
  0x00007fab74134ef5: movq   $0x1,0x198(%rdx)
  0x00007fab74134f00: jmpq   0x00007fab74134fc1
  0x00007fab74134f05: cmpq   $0x0,0x1a0(%rdx)
  0x00007fab74134f10: jne    0x00007fab74134f29
  0x00007fab74134f12: mov    %rbx,0x1a0(%rdx)
  0x00007fab74134f19: movq   $0x1,0x1a8(%rdx)
  0x00007fab74134f24: jmpq   0x00007fab74134fc1
  0x00007fab74134f29: cmpq   $0x0,0x1b0(%rdx)
  0x00007fab74134f34: jne    0x00007fab74134f4d
  0x00007fab74134f36: mov    %rbx,0x1b0(%rdx)
  0x00007fab74134f3d: movq   $0x1,0x1b8(%rdx)
  0x00007fab74134f48: jmpq   0x00007fab74134fc1
  0x00007fab74134f4d: cmpq   $0x0,0x1c0(%rdx)
  0x00007fab74134f58: jne    0x00007fab74134f71
  0x00007fab74134f5a: mov    %rbx,0x1c0(%rdx)
  0x00007fab74134f61: movq   $0x1,0x1c8(%rdx)
  0x00007fab74134f6c: jmpq   0x00007fab74134fc1
  0x00007fab74134f71: cmpq   $0x0,0x1d0(%rdx)
  0x00007fab74134f7c: jne    0x00007fab74134f95
  0x00007fab74134f7e: mov    %rbx,0x1d0(%rdx)
  0x00007fab74134f85: movq   $0x1,0x1d8(%rdx)
  0x00007fab74134f90: jmpq   0x00007fab74134fc1
  0x00007fab74134f95: cmpq   $0x0,0x1e0(%rdx)
  0x00007fab74134fa0: jne    0x00007fab74134fb9
  0x00007fab74134fa2: mov    %rbx,0x1e0(%rdx)
  0x00007fab74134fa9: movq   $0x1,0x1e8(%rdx)
  0x00007fab74134fb4: jmpq   0x00007fab74134fc1
  0x00007fab74134fb9: addq   $0x1,0x160(%rdx)
  0x00007fab74134fc1: movabs $0x7fab61b8b398,%rbx  ;   {metadata(method data for {method} {0x00007fab61a0ad78} &apos;implOnUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74134fcb: mov    0xfc(%rbx),%edx
  0x00007fab74134fd1: add    $0x8,%edx
  0x00007fab74134fd4: mov    %edx,0xfc(%rbx)
  0x00007fab74134fda: movabs $0x7fab61a0ad78,%rbx  ;   {metadata({method} {0x00007fab61a0ad78} &apos;implOnUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74134fe4: and    $0x7ffff8,%edx
  0x00007fab74134fea: cmp    $0x0,%edx
  0x00007fab74134fed: je     0x00007fab7413694e
  0x00007fab74134ff3: mov    0xf0(%rsp),%rsi
  0x00007fab74134ffb: mov    %rax,%r10
  0x00007fab74134ffe: shr    $0x3,%r10
  0x00007fab74135002: mov    %r10d,0x18(%rsi)
  0x00007fab74135006: mov    %rsi,%rbx
  0x00007fab74135009: shr    $0x9,%rbx
  0x00007fab7413500d: movabs $0x7fab701ff000,%rdx
  0x00007fab74135017: movb   $0x0,(%rbx,%rdx,1)  ;*putfield enc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@27 (line 155)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x00007fab7413501b: mov    0x18(%rsi),%r11d
  0x00007fab7413501f: shl    $0x3,%r11          ;*getfield enc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@31 (line 157)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x00007fab74135023: mov    %r11,0x108(%rsp)
  0x00007fab7413502b: mov    0xf8(%rsp),%r8
  0x00007fab74135033: cmp    (%r11),%rax        ;*invokevirtual reset {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@4 (line 77)
                                                ; implicit exception: dispatches to 0x00007fab74136965
  0x00007fab74135036: mov    %r11,%rbx
  0x00007fab74135039: movabs $0x7fab61b8b4e8,%rdx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74135043: addq   $0x1,0x140(%rdx)
  0x00007fab7413504b: movabs $0x7fab61b83380,%rbx  ;   {metadata(method data for {method} {0x00007fab61a0b358} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74135055: mov    0xfc(%rbx),%edx
  0x00007fab7413505b: add    $0x8,%edx
  0x00007fab7413505e: mov    %edx,0xfc(%rbx)
  0x00007fab74135064: movabs $0x7fab61a0b358,%rbx  ;   {metadata({method} {0x00007fab61a0b358} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab7413506e: and    $0x7ffff8,%edx
  0x00007fab74135074: cmp    $0x0,%edx
  0x00007fab74135077: je     0x00007fab7413696a
  0x00007fab7413507d: mov    %r11,%rbx
  0x00007fab74135080: movabs $0x7fab61b83380,%rdx  ;   {metadata(method data for {method} {0x00007fab61a0b358} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab7413508a: mov    0x8(%rbx),%ebx
  0x00007fab7413508d: shl    $0x3,%rbx
  0x00007fab74135091: cmp    0x140(%rdx),%rbx
  0x00007fab74135098: jne    0x00007fab741350a7
  0x00007fab7413509a: addq   $0x1,0x148(%rdx)
  0x00007fab741350a2: jmpq   0x00007fab74135269
  0x00007fab741350a7: cmp    0x150(%rdx),%rbx
  0x00007fab741350ae: jne    0x00007fab741350bd
  0x00007fab741350b0: addq   $0x1,0x158(%rdx)
  0x00007fab741350b8: jmpq   0x00007fab74135269
  0x00007fab741350bd: cmp    0x160(%rdx),%rbx
  0x00007fab741350c4: jne    0x00007fab741350d3
  0x00007fab741350c6: addq   $0x1,0x168(%rdx)
  0x00007fab741350ce: jmpq   0x00007fab74135269
  0x00007fab741350d3: cmp    0x170(%rdx),%rbx
  0x00007fab741350da: jne    0x00007fab741350e9
  0x00007fab741350dc: addq   $0x1,0x178(%rdx)
  0x00007fab741350e4: jmpq   0x00007fab74135269
  0x00007fab741350e9: cmp    0x180(%rdx),%rbx
  0x00007fab741350f0: jne    0x00007fab741350ff
  0x00007fab741350f2: addq   $0x1,0x188(%rdx)
  0x00007fab741350fa: jmpq   0x00007fab74135269
  0x00007fab741350ff: cmp    0x190(%rdx),%rbx
  0x00007fab74135106: jne    0x00007fab74135115
  0x00007fab74135108: addq   $0x1,0x198(%rdx)
  0x00007fab74135110: jmpq   0x00007fab74135269
  0x00007fab74135115: cmp    0x1a0(%rdx),%rbx
  0x00007fab7413511c: jne    0x00007fab7413512b
  0x00007fab7413511e: addq   $0x1,0x1a8(%rdx)
  0x00007fab74135126: jmpq   0x00007fab74135269
  0x00007fab7413512b: cmp    0x1b0(%rdx),%rbx
  0x00007fab74135132: jne    0x00007fab74135141
  0x00007fab74135134: addq   $0x1,0x1b8(%rdx)
  0x00007fab7413513c: jmpq   0x00007fab74135269
  0x00007fab74135141: cmpq   $0x0,0x140(%rdx)
  0x00007fab7413514c: jne    0x00007fab74135165
  0x00007fab7413514e: mov    %rbx,0x140(%rdx)
  0x00007fab74135155: movq   $0x1,0x148(%rdx)
  0x00007fab74135160: jmpq   0x00007fab74135269
  0x00007fab74135165: cmpq   $0x0,0x150(%rdx)
  0x00007fab74135170: jne    0x00007fab74135189
  0x00007fab74135172: mov    %rbx,0x150(%rdx)
  0x00007fab74135179: movq   $0x1,0x158(%rdx)
  0x00007fab74135184: jmpq   0x00007fab74135269
  0x00007fab74135189: cmpq   $0x0,0x160(%rdx)
  0x00007fab74135194: jne    0x00007fab741351ad
  0x00007fab74135196: mov    %rbx,0x160(%rdx)
  0x00007fab7413519d: movq   $0x1,0x168(%rdx)
  0x00007fab741351a8: jmpq   0x00007fab74135269
  0x00007fab741351ad: cmpq   $0x0,0x170(%rdx)
  0x00007fab741351b8: jne    0x00007fab741351d1
  0x00007fab741351ba: mov    %rbx,0x170(%rdx)
  0x00007fab741351c1: movq   $0x1,0x178(%rdx)
  0x00007fab741351cc: jmpq   0x00007fab74135269
  0x00007fab741351d1: cmpq   $0x0,0x180(%rdx)
  0x00007fab741351dc: jne    0x00007fab741351f5
  0x00007fab741351de: mov    %rbx,0x180(%rdx)
  0x00007fab741351e5: movq   $0x1,0x188(%rdx)
  0x00007fab741351f0: jmpq   0x00007fab74135269
  0x00007fab741351f5: cmpq   $0x0,0x190(%rdx)
  0x00007fab74135200: jne    0x00007fab74135219
  0x00007fab74135202: mov    %rbx,0x190(%rdx)
  0x00007fab74135209: movq   $0x1,0x198(%rdx)
  0x00007fab74135214: jmpq   0x00007fab74135269
  0x00007fab74135219: cmpq   $0x0,0x1a0(%rdx)
  0x00007fab74135224: jne    0x00007fab7413523d
  0x00007fab74135226: mov    %rbx,0x1a0(%rdx)
  0x00007fab7413522d: movq   $0x1,0x1a8(%rdx)
  0x00007fab74135238: jmpq   0x00007fab74135269
  0x00007fab7413523d: cmpq   $0x0,0x1b0(%rdx)
  0x00007fab74135248: jne    0x00007fab74135261
  0x00007fab7413524a: mov    %rbx,0x1b0(%rdx)
  0x00007fab74135251: movq   $0x1,0x1b8(%rdx)
  0x00007fab7413525c: jmpq   0x00007fab74135269
  0x00007fab74135261: addq   $0x1,0x130(%rdx)
  0x00007fab74135269: movabs $0x7fab61b83588,%rbx  ;   {metadata(method data for {method} {0x00007fab61a0b3f8} &apos;implReset&apos; &apos;()V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74135273: mov    0xfc(%rbx),%edx
  0x00007fab74135279: add    $0x8,%edx
  0x00007fab7413527c: mov    %edx,0xfc(%rbx)
  0x00007fab74135282: movabs $0x7fab61a0b3f8,%rbx  ;   {metadata({method} {0x00007fab61a0b3f8} &apos;implReset&apos; &apos;()V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab7413528c: and    $0x7ffff8,%edx
  0x00007fab74135292: cmp    $0x0,%edx
  0x00007fab74135295: je     0x00007fab74136981
  0x00007fab7413529b: movl   $0x0,0x14(%r11)    ;*putfield state {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::reset@6 (line 710)
                                                ; - java.util.zip.ZipCoder::getBytes@4 (line 77)

  0x00007fab741352a3: cmp    (%r8),%rax         ;*invokevirtual toCharArray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)
                                                ; implicit exception: dispatches to 0x00007fab74136998
  0x00007fab741352a6: mov    %r8,%rdx
  0x00007fab741352a9: movabs $0x7fab61b8b4e8,%rbx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab741352b3: addq   $0x1,0x1d8(%rbx)
  0x00007fab741352bb: movabs $0x7fab61b82a88,%rbx  ;   {metadata(method data for {method} {0x00007fab61899640} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741352c5: mov    0xfc(%rbx),%edx
  0x00007fab741352cb: add    $0x8,%edx
  0x00007fab741352ce: mov    %edx,0xfc(%rbx)
  0x00007fab741352d4: movabs $0x7fab61899640,%rbx  ;   {metadata({method} {0x00007fab61899640} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741352de: and    $0x7ffff8,%edx
  0x00007fab741352e4: cmp    $0x0,%edx
  0x00007fab741352e7: je     0x00007fab7413699d
  0x00007fab741352ed: mov    0xc(%r8),%r9d
  0x00007fab741352f1: shl    $0x3,%r9           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@1 (line 2899)
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)

  0x00007fab741352f5: mov    0xc(%r9),%r13d     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@4 (line 2899)
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)
                                                ; implicit exception: dispatches to 0x00007fab741369b4
  0x00007fab741352f9: mov    %r13,%rbx
  0x00007fab741352fc: movabs $0x7c00001f8,%rdx  ;   {metadata({type array char})}
  0x00007fab74135306: movslq %ebx,%rbx
  0x00007fab74135309: mov    %rbx,%rdi
  0x00007fab7413530c: cmp    $0xffffff,%rbx
  0x00007fab74135313: ja     0x00007fab741369b9
  0x00007fab74135319: movabs $0x17,%rsi
  0x00007fab74135323: lea    (%rsi,%rbx,2),%rsi
  0x00007fab74135327: and    $0xfffffffffffffff8,%rsi
  0x00007fab7413532b: mov    0x60(%r15),%rax
  0x00007fab7413532f: lea    (%rax,%rsi,1),%rsi
  0x00007fab74135333: cmp    0x70(%r15),%rsi
  0x00007fab74135337: ja     0x00007fab741369b9
  0x00007fab7413533d: mov    %rsi,0x60(%r15)
  0x00007fab74135341: sub    %rax,%rsi
  0x00007fab74135344: movq   $0x1,(%rax)
  0x00007fab7413534b: mov    %rdx,%rcx
  0x00007fab7413534e: shr    $0x3,%rcx
  0x00007fab74135352: mov    %ecx,0x8(%rax)
  0x00007fab74135355: mov    %ebx,0xc(%rax)
  0x00007fab74135358: sub    $0x10,%rsi
  0x00007fab7413535c: je     0x00007fab74135373
  0x00007fab74135362: xor    %rbx,%rbx
  0x00007fab74135365: shr    $0x3,%rsi
  0x00007fab74135369: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fab7413536e: dec    %rsi
  0x00007fab74135371: jne    0x00007fab74135369  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@5 (line 2899)
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)

  0x00007fab74135373: mov    %rax,0x100(%rsp)
  0x00007fab7413537b: movabs $0x7fab61b82a88,%rsi  ;   {metadata(method data for {method} {0x00007fab61899640} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74135385: addq   $0x1,0x130(%rsi)
  0x00007fab7413538d: mov    %r9,%rsi
  0x00007fab74135390: mov    $0x0,%edx
  0x00007fab74135395: mov    %rax,%rcx
  0x00007fab74135398: mov    $0x0,%r8d
  0x00007fab7413539e: mov    %r13,%r9
  0x00007fab741353a1: lea    (%r8,%r9,1),%rdi
  0x00007fab741353a5: cmp    0xc(%rcx),%edi
  0x00007fab741353a8: ja     0x00007fab741369c3
  0x00007fab741353ae: movslq %edx,%rdx
  0x00007fab741353b1: movslq %r8d,%r8
  0x00007fab741353b4: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007fab741353b9: lea    0x10(%rcx,%r8,2),%rsi
  0x00007fab741353be: mov    %r9,%rdx
  0x00007fab741353c1: test   $0xf,%esp
  0x00007fab741353c7: je     0x00007fab741353df
  0x00007fab741353cd: sub    $0x8,%rsp
  0x00007fab741353d1: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007fab741353d6: add    $0x8,%rsp
  0x00007fab741353da: jmpq   0x00007fab741353e4
  0x00007fab741353df: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@20 (line 2900)
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)
                                                ;   {runtime_call}
  0x00007fab741353e4: mov    0x100(%rsp),%rax
  0x00007fab741353ec: mov    0xc(%rax),%r11d    ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@14 (line 79)

  0x00007fab741353f0: mov    0x108(%rsp),%rbx
  0x00007fab741353f8: movabs $0x7fab61b8b4e8,%rdx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74135402: addq   $0x1,0x270(%rdx)
  0x00007fab7413540a: vcvtsi2ss %r11d,%xmm0,%xmm0
  0x00007fab7413540f: movabs $0x7fab61b82520,%rbx  ;   {metadata(method data for {method} {0x00007fab61a0aeb8} &apos;maxBytesPerChar&apos; &apos;()F&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74135419: mov    0xfc(%rbx),%edx
  0x00007fab7413541f: add    $0x8,%edx
  0x00007fab74135422: mov    %edx,0xfc(%rbx)
  0x00007fab74135428: movabs $0x7fab61a0aeb8,%rbx  ;   {metadata({method} {0x00007fab61a0aeb8} &apos;maxBytesPerChar&apos; &apos;()F&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007fab74135432: and    $0x7ffff8,%edx
  0x00007fab74135438: cmp    $0x0,%edx
  0x00007fab7413543b: je     0x00007fab741369d1
  0x00007fab74135441: mov    0x108(%rsp),%r13
  0x00007fab74135449: vmovss 0x10(%r13),%xmm1   ;*getfield maxBytesPerChar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::maxBytesPerChar@1 (line 465)
                                                ; - java.util.zip.ZipCoder::getBytes@17 (line 79)

  0x00007fab7413544f: vmulss %xmm1,%xmm0,%xmm0
  0x00007fab74135453: vcvttss2si %xmm0,%r8d
  0x00007fab74135457: cmp    $0x80000000,%r8d
  0x00007fab7413545e: je     0x00007fab741369e8
  0x00007fab74135464: mov    %r8,%rbx
  0x00007fab74135467: movabs $0x7c0000768,%rdx  ;   {metadata({type array byte})}
  0x00007fab74135471: movslq %ebx,%rbx
  0x00007fab74135474: mov    %rbx,%rdi
  0x00007fab74135477: cmp    $0xffffff,%rbx
  0x00007fab7413547e: ja     0x00007fab74136a01
  0x00007fab74135484: movabs $0x17,%rsi
  0x00007fab7413548e: lea    (%rsi,%rbx,1),%rsi
  0x00007fab74135492: and    $0xfffffffffffffff8,%rsi
  0x00007fab74135496: mov    0x60(%r15),%rax
  0x00007fab7413549a: lea    (%rax,%rsi,1),%rsi
  0x00007fab7413549e: cmp    0x70(%r15),%rsi
  0x00007fab741354a2: ja     0x00007fab74136a01
  0x00007fab741354a8: mov    %rsi,0x60(%r15)
  0x00007fab741354ac: sub    %rax,%rsi
  0x00007fab741354af: movq   $0x1,(%rax)
  0x00007fab741354b6: mov    %rdx,%rcx
  0x00007fab741354b9: shr    $0x3,%rcx
  0x00007fab741354bd: mov    %ecx,0x8(%rax)
  0x00007fab741354c0: mov    %ebx,0xc(%rax)
  0x00007fab741354c3: sub    $0x10,%rsi
  0x00007fab741354c7: je     0x00007fab741354de
  0x00007fab741354cd: xor    %rbx,%rbx
  0x00007fab741354d0: shr    $0x3,%rsi
  0x00007fab741354d4: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fab741354d9: dec    %rsi
  0x00007fab741354dc: jne    0x00007fab741354d4  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@26 (line 80)

  0x00007fab741354de: mov    %rax,0x110(%rsp)
  0x00007fab741354e6: cmp    $0x0,%r8d
  0x00007fab741354ea: movabs $0x7fab61b8b4e8,%rdx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab741354f4: movabs $0x308,%rsi
  0x00007fab741354fe: jne    0x00007fab7413550e
  0x00007fab74135504: movabs $0x318,%rsi
  0x00007fab7413550e: mov    (%rdx,%rsi,1),%rdi
  0x00007fab74135512: lea    0x1(%rdi),%rdi
  0x00007fab74135516: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab7413551a: je     0x00007fab74136568  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@32 (line 81)

  0x00007fab74135520: mov    0xf0(%rsp),%rsi
  0x00007fab74135528: movsbl 0xc(%rsi),%edx     ;*getfield isUTF8 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@39 (line 85)

  0x00007fab7413552c: cmp    $0x0,%edx
  0x00007fab7413552f: movabs $0x7fab61b8b4e8,%rdx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74135539: movabs $0x328,%rsi
  0x00007fab74135543: je     0x00007fab74135553
  0x00007fab74135549: movabs $0x338,%rsi
  0x00007fab74135553: mov    (%rdx,%rsi,1),%rdi
  0x00007fab74135557: lea    0x1(%rdi),%rdi
  0x00007fab7413555b: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab7413555f: je     0x00007fab74135806  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@42 (line 85)

  0x00007fab74135565: cmp    $0x0,%r13
  0x00007fab74135569: jne    0x00007fab74135584
  0x00007fab7413556b: movabs $0x7fab61b8b4e8,%rdi  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74135575: orl    $0x100,0x340(%rdi)
  0x00007fab7413557f: jmpq   0x00007fab741357be
  0x00007fab74135584: movabs $0x7c00279a8,%rcx  ;   {metadata(&apos;sun/nio/cs/ArrayEncoder&apos;)}
  0x00007fab7413558e: mov    0x8(%r13),%edi
  0x00007fab74135592: shl    $0x3,%rdi
  0x00007fab74135596: cmp    0x18(%rdi),%rcx
  0x00007fab7413559a: je     0x00007fab741355bb
  0x00007fab741355a0: cmp    %rcx,%rdi
  0x00007fab741355a3: je     0x00007fab741355bb
  0x00007fab741355a9: push   %rdi
  0x00007fab741355aa: push   %rcx
  0x00007fab741355ab: callq  0x00007fab740fe720  ;   {runtime_call}
  0x00007fab741355b0: pop    %rdi
  0x00007fab741355b1: pop    %rdi
  0x00007fab741355b2: cmp    $0x0,%edi
  0x00007fab741355b5: je     0x00007fab741357a2
  0x00007fab741355bb: movabs $0x7fab61b8b4e8,%rdi  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab741355c5: mov    0x8(%r13),%ecx
  0x00007fab741355c9: shl    $0x3,%rcx
  0x00007fab741355cd: cmp    0x358(%rdi),%rcx
  0x00007fab741355d4: jne    0x00007fab741355e3
  0x00007fab741355d6: addq   $0x1,0x360(%rdi)
  0x00007fab741355de: jmpq   0x00007fab741357c3
  0x00007fab741355e3: cmp    0x368(%rdi),%rcx
  0x00007fab741355ea: jne    0x00007fab741355f9
  0x00007fab741355ec: addq   $0x1,0x370(%rdi)
  0x00007fab741355f4: jmpq   0x00007fab741357c3
  0x00007fab741355f9: cmp    0x378(%rdi),%rcx
  0x00007fab74135600: jne    0x00007fab7413560f
  0x00007fab74135602: addq   $0x1,0x380(%rdi)
  0x00007fab7413560a: jmpq   0x00007fab741357c3
  0x00007fab7413560f: cmp    0x388(%rdi),%rcx
  0x00007fab74135616: jne    0x00007fab74135625
  0x00007fab74135618: addq   $0x1,0x390(%rdi)
  0x00007fab74135620: jmpq   0x00007fab741357c3
  0x00007fab74135625: cmp    0x398(%rdi),%rcx
  0x00007fab7413562c: jne    0x00007fab7413563b
  0x00007fab7413562e: addq   $0x1,0x3a0(%rdi)
  0x00007fab74135636: jmpq   0x00007fab741357c3
  0x00007fab7413563b: cmp    0x3a8(%rdi),%rcx
  0x00007fab74135642: jne    0x00007fab74135651
  0x00007fab74135644: addq   $0x1,0x3b0(%rdi)
  0x00007fab7413564c: jmpq   0x00007fab741357c3
  0x00007fab74135651: cmp    0x3b8(%rdi),%rcx
  0x00007fab74135658: jne    0x00007fab74135667
  0x00007fab7413565a: addq   $0x1,0x3c0(%rdi)
  0x00007fab74135662: jmpq   0x00007fab741357c3
  0x00007fab74135667: cmp    0x3c8(%rdi),%rcx
  0x00007fab7413566e: jne    0x00007fab7413567d
  0x00007fab74135670: addq   $0x1,0x3d0(%rdi)
  0x00007fab74135678: jmpq   0x00007fab741357c3
  0x00007fab7413567d: cmpq   $0x0,0x358(%rdi)
  0x00007fab74135688: jne    0x00007fab741356a1
  0x00007fab7413568a: mov    %rcx,0x358(%rdi)
  0x00007fab74135691: movq   $0x1,0x360(%rdi)
  0x00007fab7413569c: jmpq   0x00007fab741357c3
  0x00007fab741356a1: cmpq   $0x0,0x368(%rdi)
  0x00007fab741356ac: jne    0x00007fab741356c5
  0x00007fab741356ae: mov    %rcx,0x368(%rdi)
  0x00007fab741356b5: movq   $0x1,0x370(%rdi)
  0x00007fab741356c0: jmpq   0x00007fab741357c3
  0x00007fab741356c5: cmpq   $0x0,0x378(%rdi)
  0x00007fab741356d0: jne    0x00007fab741356e9
  0x00007fab741356d2: mov    %rcx,0x378(%rdi)
  0x00007fab741356d9: movq   $0x1,0x380(%rdi)
  0x00007fab741356e4: jmpq   0x00007fab741357c3
  0x00007fab741356e9: cmpq   $0x0,0x388(%rdi)
  0x00007fab741356f4: jne    0x00007fab7413570d
  0x00007fab741356f6: mov    %rcx,0x388(%rdi)
  0x00007fab741356fd: movq   $0x1,0x390(%rdi)
  0x00007fab74135708: jmpq   0x00007fab741357c3
  0x00007fab7413570d: cmpq   $0x0,0x398(%rdi)
  0x00007fab74135718: jne    0x00007fab74135731
  0x00007fab7413571a: mov    %rcx,0x398(%rdi)
  0x00007fab74135721: movq   $0x1,0x3a0(%rdi)
  0x00007fab7413572c: jmpq   0x00007fab741357c3
  0x00007fab74135731: cmpq   $0x0,0x3a8(%rdi)
  0x00007fab7413573c: jne    0x00007fab74135755
  0x00007fab7413573e: mov    %rcx,0x3a8(%rdi)
  0x00007fab74135745: movq   $0x1,0x3b0(%rdi)
  0x00007fab74135750: jmpq   0x00007fab741357c3
  0x00007fab74135755: cmpq   $0x0,0x3b8(%rdi)
  0x00007fab74135760: jne    0x00007fab74135779
  0x00007fab74135762: mov    %rcx,0x3b8(%rdi)
  0x00007fab74135769: movq   $0x1,0x3c0(%rdi)
  0x00007fab74135774: jmpq   0x00007fab741357c3
  0x00007fab74135779: cmpq   $0x0,0x3c8(%rdi)
  0x00007fab74135784: jne    0x00007fab7413579d
  0x00007fab74135786: mov    %rcx,0x3c8(%rdi)
  0x00007fab7413578d: movq   $0x1,0x3d0(%rdi)
  0x00007fab74135798: jmpq   0x00007fab741357c3
  0x00007fab7413579d: jmpq   0x00007fab741357c3
  0x00007fab741357a2: movabs $0x7fab61b8b4e8,%rdi  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab741357ac: subq   $0x1,0x348(%rdi)
  0x00007fab741357b4: jmpq   0x00007fab741357be
  0x00007fab741357b9: jmpq   0x00007fab741357c3
  0x00007fab741357be: xor    %rdx,%rdx
  0x00007fab741357c1: jmp    0x00007fab741357cd
  0x00007fab741357c3: movabs $0x1,%rdx          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@46 (line 85)

  0x00007fab741357cd: cmp    $0x0,%edx
  0x00007fab741357d0: movabs $0x7fab61b8b4e8,%rdx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab741357da: movabs $0x3e0,%rsi
  0x00007fab741357e4: je     0x00007fab741357f4
  0x00007fab741357ea: movabs $0x3f0,%rsi
  0x00007fab741357f4: mov    (%rdx,%rsi,1),%rdi
  0x00007fab741357f8: lea    0x1(%rdi),%rdi
  0x00007fab741357fc: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab74135800: jne    0x00007fab74135f8a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@49 (line 85)

  0x00007fab74135806: mov    %r11d,0x118(%rsp)
  0x00007fab7413580e: movabs $0x7fab61b8b4e8,%rdx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74135818: addq   $0x1,0x570(%rdx)
  0x00007fab74135820: movabs $0x7fab61b8c010,%rdx  ;   {metadata(method data for {method} {0x00007fab61a0dd68} &apos;wrap&apos; &apos;([B)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00007fab7413582a: mov    0xfc(%rdx),%esi
  0x00007fab74135830: add    $0x8,%esi
  0x00007fab74135833: mov    %esi,0xfc(%rdx)
  0x00007fab74135839: movabs $0x7fab61a0dd68,%rdx  ;   {metadata({method} {0x00007fab61a0dd68} &apos;wrap&apos; &apos;([B)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00007fab74135843: and    $0x7ffff8,%esi
  0x00007fab74135849: cmp    $0x0,%esi
  0x00007fab7413584c: je     0x00007fab74136a0b
  0x00007fab74135852: mov    0xc(%rax),%r14d    ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.ByteBuffer::wrap@3 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)

  0x00007fab74135856: movabs $0x7fab61b8c010,%rdx  ;   {metadata(method data for {method} {0x00007fab61a0dd68} &apos;wrap&apos; &apos;([B)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00007fab74135860: addq   $0x1,0x130(%rdx)
  0x00007fab74135868: movabs $0x7fab61b8c190,%rdx  ;   {metadata(method data for {method} {0x00007fab61a0dcc0} &apos;wrap&apos; &apos;([BII)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00007fab74135872: mov    0xfc(%rdx),%esi
  0x00007fab74135878: add    $0x8,%esi
  0x00007fab7413587b: mov    %esi,0xfc(%rdx)
  0x00007fab74135881: movabs $0x7fab61a0dcc0,%rdx  ;   {metadata({method} {0x00007fab61a0dcc0} &apos;wrap&apos; &apos;([BII)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00007fab7413588b: and    $0x7ffff8,%esi
  0x00007fab74135891: cmp    $0x0,%esi
  0x00007fab74135894: je     0x00007fab74136a22
  0x00007fab7413589a: movabs $0x7c00283d8,%rdx  ;   {metadata(&apos;java/nio/HeapByteBuffer&apos;)}
  0x00007fab741358a4: mov    %rax,%r9
  0x00007fab741358a7: mov    0x60(%r15),%rax
  0x00007fab741358ab: lea    0x30(%rax),%rdi
  0x00007fab741358af: cmp    0x70(%r15),%rdi
  0x00007fab741358b3: ja     0x00007fab74136a39
  0x00007fab741358b9: mov    %rdi,0x60(%r15)
  0x00007fab741358bd: mov    0xa8(%rdx),%rcx
  0x00007fab741358c4: mov    %rcx,(%rax)
  0x00007fab741358c7: mov    %rdx,%rcx
  0x00007fab741358ca: shr    $0x3,%rcx
  0x00007fab741358ce: mov    %ecx,0x8(%rax)
  0x00007fab741358d1: xor    %rcx,%rcx
  0x00007fab741358d4: mov    %ecx,0xc(%rax)
  0x00007fab741358d7: xor    %rcx,%rcx
  0x00007fab741358da: mov    %rcx,0x10(%rax)
  0x00007fab741358de: mov    %rcx,0x18(%rax)
  0x00007fab741358e2: mov    %rcx,0x20(%rax)
  0x00007fab741358e6: mov    %rcx,0x28(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.ByteBuffer::wrap@0 (line 373)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)

  0x00007fab741358ea: mov    %rax,0x120(%rsp)
  0x00007fab741358f2: mov    %rax,%rdx
  0x00007fab741358f5: movabs $0x7fab61b8c190,%rcx  ;   {metadata(method data for {method} {0x00007fab61a0dcc0} &apos;wrap&apos; &apos;([BII)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00007fab741358ff: addq   $0x1,0x130(%rcx)
  0x00007fab74135907: movabs $0x7fab61b8c320,%rdx  ;   {metadata(method data for {method} {0x00007fab61a11858} &apos;&lt;init&gt;&apos; &apos;([BII)V&apos; in &apos;java/nio/HeapByteBuffer&apos;)}
  0x00007fab74135911: mov    0xfc(%rdx),%ecx
  0x00007fab74135917: add    $0x8,%ecx
  0x00007fab7413591a: mov    %ecx,0xfc(%rdx)
  0x00007fab74135920: movabs $0x7fab61a11858,%rdx  ;   {metadata({method} {0x00007fab61a11858} &apos;&lt;init&gt;&apos; &apos;([BII)V&apos; in &apos;java/nio/HeapByteBuffer&apos;)}
  0x00007fab7413592a: and    $0x7ffff8,%ecx
  0x00007fab74135930: cmp    $0x0,%ecx
  0x00007fab74135933: je     0x00007fab74136a46
  0x00007fab74135939: mov    %rax,%rdx
  0x00007fab7413593c: movabs $0x7fab61b8c320,%rcx  ;   {metadata(method data for {method} {0x00007fab61a11858} &apos;&lt;init&gt;&apos; &apos;([BII)V&apos; in &apos;java/nio/HeapByteBuffer&apos;)}
  0x00007fab74135946: addq   $0x1,0x130(%rcx)
  0x00007fab7413594e: mov    $0xffffffff,%edx
  0x00007fab74135953: mov    $0x0,%ecx
  0x00007fab74135958: mov    %r14,%r8
  0x00007fab7413595b: mov    %r9,%rsi
  0x00007fab7413595e: mov    %r14,%r9
  0x00007fab74135961: mov    %rsi,%rdi
  0x00007fab74135964: movl   $0x0,(%rsp)
  0x00007fab7413596b: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.HeapByteBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.ByteBuffer::wrap@7 (line 373)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)

  0x00007fab7413596e: mov    %r14d,0x11c(%rsp)
  0x00007fab74135976: nop
  0x00007fab74135977: callq  0x00007fab74047d60  ; OopMap{[272]=Oop [288]=Oop [264]=Oop [256]=Oop off=4572}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.HeapByteBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.ByteBuffer::wrap@7 (line 373)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)
                                                ;   {optimized virtual_call}
  0x00007fab7413597c: movabs $0x7fab61b8b4e8,%rdx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74135986: addq   $0x1,0x580(%rdx)
  0x00007fab7413598e: movabs $0x7fab61b8c698,%rdx  ;   {metadata(method data for {method} {0x00007fab61a4d4e8} &apos;wrap&apos; &apos;([C)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00007fab74135998: mov    0xfc(%rdx),%esi
  0x00007fab7413599e: add    $0x8,%esi
  0x00007fab741359a1: mov    %esi,0xfc(%rdx)
  0x00007fab741359a7: movabs $0x7fab61a4d4e8,%rdx  ;   {metadata({method} {0x00007fab61a4d4e8} &apos;wrap&apos; &apos;([C)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00007fab741359b1: and    $0x7ffff8,%esi
  0x00007fab741359b7: cmp    $0x0,%esi
  0x00007fab741359ba: je     0x00007fab74136a5d
  0x00007fab741359c0: movabs $0x7fab61b8c698,%rdx  ;   {metadata(method data for {method} {0x00007fab61a4d4e8} &apos;wrap&apos; &apos;([C)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00007fab741359ca: addq   $0x1,0x130(%rdx)
  0x00007fab741359d2: movabs $0x7fab61b8c818,%rdx  ;   {metadata(method data for {method} {0x00007fab61a4d440} &apos;wrap&apos; &apos;([CII)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00007fab741359dc: mov    0xfc(%rdx),%esi
  0x00007fab741359e2: add    $0x8,%esi
  0x00007fab741359e5: mov    %esi,0xfc(%rdx)
  0x00007fab741359eb: movabs $0x7fab61a4d440,%rdx  ;   {metadata({method} {0x00007fab61a4d440} &apos;wrap&apos; &apos;([CII)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00007fab741359f5: and    $0x7ffff8,%esi
  0x00007fab741359fb: cmp    $0x0,%esi
  0x00007fab741359fe: je     0x00007fab74136a74
  0x00007fab74135a04: movabs $0x7c0030970,%rdx  ;   {metadata(&apos;java/nio/HeapCharBuffer&apos;)}
  0x00007fab74135a0e: mov    0x60(%r15),%rax
  0x00007fab74135a12: lea    0x30(%rax),%rdi
  0x00007fab74135a16: cmp    0x70(%r15),%rdi
  0x00007fab74135a1a: ja     0x00007fab74136a8b
  0x00007fab74135a20: mov    %rdi,0x60(%r15)
  0x00007fab74135a24: mov    0xa8(%rdx),%rcx
  0x00007fab74135a2b: mov    %rcx,(%rax)
  0x00007fab74135a2e: mov    %rdx,%rcx
  0x00007fab74135a31: shr    $0x3,%rcx
  0x00007fab74135a35: mov    %ecx,0x8(%rax)
  0x00007fab74135a38: xor    %rcx,%rcx
  0x00007fab74135a3b: mov    %ecx,0xc(%rax)
  0x00007fab74135a3e: xor    %rcx,%rcx
  0x00007fab74135a41: mov    %rcx,0x10(%rax)
  0x00007fab74135a45: mov    %rcx,0x18(%rax)
  0x00007fab74135a49: mov    %rcx,0x20(%rax)
  0x00007fab74135a4d: mov    %rcx,0x28(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::wrap@0 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)

  0x00007fab74135a51: mov    %rax,%rdx
  0x00007fab74135a54: movabs $0x7fab61b8c818,%rcx  ;   {metadata(method data for {method} {0x00007fab61a4d440} &apos;wrap&apos; &apos;([CII)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00007fab74135a5e: addq   $0x1,0x130(%rcx)
  0x00007fab74135a66: movabs $0x7fab61b8c9a8,%rdx  ;   {metadata(method data for {method} {0x00007fab61a50570} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/nio/HeapCharBuffer&apos;)}
  0x00007fab74135a70: mov    0xfc(%rdx),%ecx
  0x00007fab74135a76: add    $0x8,%ecx
  0x00007fab74135a79: mov    %ecx,0xfc(%rdx)
  0x00007fab74135a7f: movabs $0x7fab61a50570,%rdx  ;   {metadata({method} {0x00007fab61a50570} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/nio/HeapCharBuffer&apos;)}
  0x00007fab74135a89: and    $0x7ffff8,%ecx
  0x00007fab74135a8f: cmp    $0x0,%ecx
  0x00007fab74135a92: je     0x00007fab74136a98
  0x00007fab74135a98: mov    %rax,%rdx
  0x00007fab74135a9b: movabs $0x7fab61b8c9a8,%rcx  ;   {metadata(method data for {method} {0x00007fab61a50570} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/nio/HeapCharBuffer&apos;)}
  0x00007fab74135aa5: addq   $0x1,0x130(%rcx)
  0x00007fab74135aad: movabs $0x7fab61b8cb28,%rdx  ;   {metadata(method data for {method} {0x00007fab61a4d1d0} &apos;&lt;init&gt;&apos; &apos;(IIII[CI)V&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00007fab74135ab7: mov    0xfc(%rdx),%ecx
  0x00007fab74135abd: add    $0x8,%ecx
  0x00007fab74135ac0: mov    %ecx,0xfc(%rdx)
  0x00007fab74135ac6: movabs $0x7fab61a4d1d0,%rdx  ;   {metadata({method} {0x00007fab61a4d1d0} &apos;&lt;init&gt;&apos; &apos;(IIII[CI)V&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00007fab74135ad0: and    $0x7ffff8,%ecx
  0x00007fab74135ad6: cmp    $0x0,%ecx
  0x00007fab74135ad9: je     0x00007fab74136aaf
  0x00007fab74135adf: mov    %rax,%rdx
  0x00007fab74135ae2: movabs $0x7fab61b8cb28,%rcx  ;   {metadata(method data for {method} {0x00007fab61a4d1d0} &apos;&lt;init&gt;&apos; &apos;(IIII[CI)V&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00007fab74135aec: addq   $0x1,0x130(%rcx)
  0x00007fab74135af4: mov    $0xffffffff,%edx
  0x00007fab74135af9: mov    $0x0,%ecx
  0x00007fab74135afe: mov    0x118(%rsp),%r8d
  0x00007fab74135b06: mov    0x118(%rsp),%r9d
  0x00007fab74135b0e: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::&lt;init&gt;@6 (line 281)
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)

  0x00007fab74135b11: mov    %rax,0x128(%rsp)
  0x00007fab74135b19: nop
  0x00007fab74135b1a: nop
  0x00007fab74135b1b: nop
  0x00007fab74135b1c: nop
  0x00007fab74135b1d: nop
  0x00007fab74135b1e: nop
  0x00007fab74135b1f: callq  0x00007fab74047d60  ; OopMap{[272]=Oop [288]=Oop [264]=Oop [296]=Oop [256]=Oop off=4996}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::&lt;init&gt;@6 (line 281)
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)
                                                ;   {optimized virtual_call}
  0x00007fab74135b24: mov    0x128(%rsp),%rdx
  0x00007fab74135b2c: mov    0x100(%rsp),%rax
  0x00007fab74135b34: mov    %rax,%r10
  0x00007fab74135b37: shr    $0x3,%r10
  0x00007fab74135b3b: mov    %r10d,0x2c(%rdx)
  0x00007fab74135b3f: mov    %rdx,%rax
  0x00007fab74135b42: shr    $0x9,%rax
  0x00007fab74135b46: movabs $0x7fab701ff000,%rcx
  0x00007fab74135b50: movb   $0x0,(%rax,%rcx,1)  ;*putfield hb {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::&lt;init&gt;@12 (line 282)
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)

  0x00007fab74135b54: movl   $0x0,0x24(%rdx)    ;*putfield offset {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::&lt;init&gt;@18 (line 283)
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)

  0x00007fab74135b5b: mov    0x108(%rsp),%r11
  0x00007fab74135b63: movabs $0x7fab61b8b4e8,%rcx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74135b6d: addq   $0x1,0x590(%rcx)
  0x00007fab74135b75: mov    0x120(%rsp),%rcx
  0x00007fab74135b7d: mov    $0x1,%r8d
  0x00007fab74135b83: mov    0x108(%rsp),%rsi   ;*invokevirtual encode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@112 (line 93)

  0x00007fab74135b8b: nop
  0x00007fab74135b8c: nop
  0x00007fab74135b8d: nop
  0x00007fab74135b8e: nop
  0x00007fab74135b8f: callq  0x00007fab74047d60  ; OopMap{[272]=Oop [288]=Oop [264]=Oop off=5108}
                                                ;*invokevirtual encode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@112 (line 93)
                                                ;   {optimized virtual_call}
  0x00007fab74135b94: mov    %rax,%rbx          ;*invokevirtual encode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@112 (line 93)

  0x00007fab74135b97: cmp    (%rbx),%rax        ;*invokevirtual isUnderflow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@119 (line 94)
                                                ; implicit exception: dispatches to 0x00007fab74136ac6
  0x00007fab74135b9a: mov    %rbx,%rdx
  0x00007fab74135b9d: movabs $0x7fab61b8b4e8,%rsi  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74135ba7: movabs $0x7c0030d30,%r10  ;   {metadata(&apos;java/nio/charset/CoderResult&apos;)}
  0x00007fab74135bb1: mov    %r10,0x638(%rsi)
  0x00007fab74135bb8: addq   $0x1,0x640(%rsi)
  0x00007fab74135bc0: movabs $0x7fab61b8e248,%rdx  ;   {metadata(method data for {method} {0x00007fab61a524f8} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00007fab74135bca: mov    0xfc(%rdx),%esi
  0x00007fab74135bd0: add    $0x8,%esi
  0x00007fab74135bd3: mov    %esi,0xfc(%rdx)
  0x00007fab74135bd9: movabs $0x7fab61a524f8,%rdx  ;   {metadata({method} {0x00007fab61a524f8} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00007fab74135be3: and    $0x7ffff8,%esi
  0x00007fab74135be9: cmp    $0x0,%esi
  0x00007fab74135bec: je     0x00007fab74136acb
  0x00007fab74135bf2: mov    0xc(%rbx),%edx     ;*getfield type {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CoderResult::isUnderflow@1 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@119 (line 94)

  0x00007fab74135bf5: cmp    $0x0,%edx
  0x00007fab74135bf8: movabs $0x7fab61b8e248,%rdx  ;   {metadata(method data for {method} {0x00007fab61a524f8} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00007fab74135c02: movabs $0x130,%rsi
  0x00007fab74135c0c: jne    0x00007fab74135c1c
  0x00007fab74135c12: movabs $0x140,%rsi
  0x00007fab74135c1c: mov    (%rdx,%rsi,1),%rdi
  0x00007fab74135c20: lea    0x1(%rdi),%rdi
  0x00007fab74135c24: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab74135c28: jne    0x00007fab74135c48  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CoderResult::isUnderflow@4 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@119 (line 94)

  0x00007fab74135c2e: movabs $0x7fab61b8e248,%rdx  ;   {metadata(method data for {method} {0x00007fab61a524f8} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00007fab74135c38: incl   0x150(%rdx)
  0x00007fab74135c3e: mov    $0x1,%edx
  0x00007fab74135c43: jmpq   0x00007fab74135c4d  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CoderResult::isUnderflow@8 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@119 (line 94)

  0x00007fab74135c48: mov    $0x0,%edx          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CoderResult::isUnderflow@12 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@119 (line 94)

  0x00007fab74135c4d: and    $0x1,%edx
  0x00007fab74135c50: cmp    $0x0,%edx
  0x00007fab74135c53: movabs $0x7fab61b8b4e8,%rdx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74135c5d: movabs $0x6c0,%rsi
  0x00007fab74135c67: jne    0x00007fab74135c77
  0x00007fab74135c6d: movabs $0x6d0,%rsi
  0x00007fab74135c77: mov    (%rdx,%rsi,1),%rdi
  0x00007fab74135c7b: lea    0x1(%rdi),%rdi
  0x00007fab74135c7f: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab74135c83: je     0x00007fab741366c1  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@122 (line 94)

  0x00007fab74135c89: mov    0x108(%rsp),%r11
  0x00007fab74135c91: movabs $0x7fab61b8b4e8,%rdx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74135c9b: addq   $0x1,0x788(%rdx)
  0x00007fab74135ca3: mov    0x120(%rsp),%rdx
  0x00007fab74135cab: mov    0x108(%rsp),%rsi   ;*invokevirtual flush {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@141 (line 96)

  0x00007fab74135cb3: nop
  0x00007fab74135cb4: nop
  0x00007fab74135cb5: nop
  0x00007fab74135cb6: nop
  0x00007fab74135cb7: callq  0x00007fab74047d60  ; OopMap{[272]=Oop [288]=Oop off=5404}
                                                ;*invokevirtual flush {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@141 (line 96)
                                                ;   {optimized virtual_call}
  0x00007fab74135cbc: mov    %rax,%rbx          ;*invokevirtual flush {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@141 (line 96)

  0x00007fab74135cbf: cmp    (%rbx),%rax        ;*invokevirtual isUnderflow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@148 (line 97)
                                                ; implicit exception: dispatches to 0x00007fab74136ae2
  0x00007fab74135cc2: mov    %rbx,%rdx
  0x00007fab74135cc5: movabs $0x7fab61b8b4e8,%rsi  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74135ccf: movabs $0x7c0030d30,%r10  ;   {metadata(&apos;java/nio/charset/CoderResult&apos;)}
  0x00007fab74135cd9: mov    %r10,0x830(%rsi)
  0x00007fab74135ce0: addq   $0x1,0x838(%rsi)
  0x00007fab74135ce8: movabs $0x7fab61b8e248,%rdx  ;   {metadata(method data for {method} {0x00007fab61a524f8} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00007fab74135cf2: mov    0xfc(%rdx),%esi
  0x00007fab74135cf8: add    $0x8,%esi
  0x00007fab74135cfb: mov    %esi,0xfc(%rdx)
  0x00007fab74135d01: movabs $0x7fab61a524f8,%rdx  ;   {metadata({method} {0x00007fab61a524f8} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00007fab74135d0b: and    $0x7ffff8,%esi
  0x00007fab74135d11: cmp    $0x0,%esi
  0x00007fab74135d14: je     0x00007fab74136ae7
  0x00007fab74135d1a: mov    0xc(%rbx),%edx     ;*getfield type {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CoderResult::isUnderflow@1 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@148 (line 97)

  0x00007fab74135d1d: cmp    $0x0,%edx
  0x00007fab74135d20: movabs $0x7fab61b8e248,%rdx  ;   {metadata(method data for {method} {0x00007fab61a524f8} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00007fab74135d2a: movabs $0x130,%rsi
  0x00007fab74135d34: jne    0x00007fab74135d44
  0x00007fab74135d3a: movabs $0x140,%rsi
  0x00007fab74135d44: mov    (%rdx,%rsi,1),%rdi
  0x00007fab74135d48: lea    0x1(%rdi),%rdi
  0x00007fab74135d4c: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab74135d50: jne    0x00007fab74135d70  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CoderResult::isUnderflow@4 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@148 (line 97)

  0x00007fab74135d56: movabs $0x7fab61b8e248,%rdx  ;   {metadata(method data for {method} {0x00007fab61a524f8} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00007fab74135d60: incl   0x150(%rdx)
  0x00007fab74135d66: mov    $0x1,%edx
  0x00007fab74135d6b: jmpq   0x00007fab74135d75  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CoderResult::isUnderflow@8 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@148 (line 97)

  0x00007fab74135d70: mov    $0x0,%edx          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CoderResult::isUnderflow@12 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@148 (line 97)

  0x00007fab74135d75: and    $0x1,%edx
  0x00007fab74135d78: cmp    $0x0,%edx
  0x00007fab74135d7b: movabs $0x7fab61b8b4e8,%rdx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74135d85: movabs $0x8b8,%rsi
  0x00007fab74135d8f: jne    0x00007fab74135d9f
  0x00007fab74135d95: movabs $0x8c8,%rsi
  0x00007fab74135d9f: mov    (%rdx,%rsi,1),%rdi
  0x00007fab74135da3: lea    0x1(%rdi),%rdi
  0x00007fab74135da7: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab74135dab: je     0x00007fab74136601  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@151 (line 97)

  0x00007fab74135db1: mov    0x120(%rsp),%rax
  0x00007fab74135db9: mov    %rax,%rbx
  0x00007fab74135dbc: movabs $0x7fab61b8b4e8,%rdx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74135dc6: addq   $0x1,0x980(%rdx)
  0x00007fab74135dce: mov    0x18(%rax),%r8d    ;*getfield position {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::position@1 (line 226)
                                                ; - java.util.zip.ZipCoder::getBytes@169 (line 99)

  0x00007fab74135dd2: cmp    0x11c(%rsp),%r8d
  0x00007fab74135dda: movabs $0x7fab61b8b4e8,%rbx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74135de4: movabs $0xa18,%rdx
  0x00007fab74135dee: jne    0x00007fab74135dfe
  0x00007fab74135df4: movabs $0xa28,%rdx
  0x00007fab74135dfe: mov    (%rbx,%rdx,1),%rsi
  0x00007fab74135e02: lea    0x1(%rsi),%rsi
  0x00007fab74135e06: mov    %rsi,(%rbx,%rdx,1)
  0x00007fab74135e0a: je     0x00007fab7413654e  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@175 (line 99)

  0x00007fab74135e10: mov    0x11c(%rsp),%r14d
  0x00007fab74135e18: movabs $0x7fab61b8b4e8,%rbx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74135e22: addq   $0x1,0xa38(%rbx)
  0x00007fab74135e2a: movabs $0x7fab61b8b4e8,%rbx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74135e34: addq   $0x1,0xad0(%rbx)
  0x00007fab74135e3c: movabs $0x7fab61b82058,%rbx  ;   {metadata(method data for {method} {0x00007fab619ce410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab74135e46: mov    0xfc(%rbx),%edx
  0x00007fab74135e4c: add    $0x8,%edx
  0x00007fab74135e4f: mov    %edx,0xfc(%rbx)
  0x00007fab74135e55: movabs $0x7fab619ce410,%rbx  ;   {metadata({method} {0x00007fab619ce410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab74135e5f: and    $0x7ffff8,%edx
  0x00007fab74135e65: cmp    $0x0,%edx
  0x00007fab74135e68: je     0x00007fab74136afe
  0x00007fab74135e6e: mov    %r8,%rbx
  0x00007fab74135e71: movabs $0x7c0000768,%rdx  ;   {metadata({type array byte})}
  0x00007fab74135e7b: movslq %ebx,%rbx
  0x00007fab74135e7e: mov    %rbx,%rdi
  0x00007fab74135e81: cmp    $0xffffff,%rbx
  0x00007fab74135e88: ja     0x00007fab74136b15
  0x00007fab74135e8e: movabs $0x17,%rsi
  0x00007fab74135e98: lea    (%rsi,%rbx,1),%rsi
  0x00007fab74135e9c: and    $0xfffffffffffffff8,%rsi
  0x00007fab74135ea0: mov    0x60(%r15),%rax
  0x00007fab74135ea4: lea    (%rax,%rsi,1),%rsi
  0x00007fab74135ea8: cmp    0x70(%r15),%rsi
  0x00007fab74135eac: ja     0x00007fab74136b15
  0x00007fab74135eb2: mov    %rsi,0x60(%r15)
  0x00007fab74135eb6: sub    %rax,%rsi
  0x00007fab74135eb9: movq   $0x1,(%rax)
  0x00007fab74135ec0: mov    %rdx,%rcx
  0x00007fab74135ec3: shr    $0x3,%rcx
  0x00007fab74135ec7: mov    %ecx,0x8(%rax)
  0x00007fab74135eca: mov    %ebx,0xc(%rax)
  0x00007fab74135ecd: sub    $0x10,%rsi
  0x00007fab74135ed1: je     0x00007fab74135ee8
  0x00007fab74135ed7: xor    %rbx,%rbx
  0x00007fab74135eda: shr    $0x3,%rsi
  0x00007fab74135ede: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fab74135ee3: dec    %rsi
  0x00007fab74135ee6: jne    0x00007fab74135ede  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3236)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)

  0x00007fab74135ee8: movabs $0x7fab61b82058,%rdx  ;   {metadata(method data for {method} {0x00007fab619ce410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab74135ef2: addq   $0x1,0x130(%rdx)
  0x00007fab74135efa: movabs $0x7fab61a9c058,%rdx  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab74135f04: mov    0xfc(%rdx),%ecx
  0x00007fab74135f0a: add    $0x8,%ecx
  0x00007fab74135f0d: mov    %ecx,0xfc(%rdx)
  0x00007fab74135f13: movabs $0x7fab619a58b8,%rdx  ;   {metadata({method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab74135f1d: and    $0x7ffff8,%ecx
  0x00007fab74135f23: cmp    $0x0,%ecx
  0x00007fab74135f26: je     0x00007fab74136b1f
  0x00007fab74135f2c: cmp    %r8d,%r14d
  0x00007fab74135f2f: movabs $0x7fab61a9c058,%rdx  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab74135f39: movabs $0x130,%rcx
  0x00007fab74135f43: jg     0x00007fab74135f53
  0x00007fab74135f49: movabs $0x140,%rcx
  0x00007fab74135f53: mov    (%rdx,%rcx,1),%r9
  0x00007fab74135f57: lea    0x1(%r9),%r9
  0x00007fab74135f5b: mov    %r9,(%rdx,%rcx,1)
  0x00007fab74135f5f: jg     0x00007fab74135f7a  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)

  0x00007fab74135f65: movabs $0x7fab61a9c058,%rdx  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab74135f6f: incl   0x150(%rdx)
  0x00007fab74135f75: jmpq   0x00007fab74135f7d  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)

  0x00007fab74135f7a: mov    %r8,%r14           ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)

  0x00007fab74135f7d: mov    0x110(%rsp),%r9
  0x00007fab74135f85: jmpq   0x00007fab741364aa  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)

  0x00007fab74135f8a: mov    %r11,%r8
  0x00007fab74135f8d: mov    0x100(%rsp),%rax
  0x00007fab74135f95: mov    %r13,%r11
  0x00007fab74135f98: cmp    $0x0,%r11
  0x00007fab74135f9c: jne    0x00007fab74135fb7
  0x00007fab74135f9e: movabs $0x7fab61b8b4e8,%rcx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74135fa8: orl    $0x100,0x3f8(%rcx)
  0x00007fab74135fb2: jmpq   0x00007fab741361f2
  0x00007fab74135fb7: movabs $0x7c00279a8,%r9   ;   {metadata(&apos;sun/nio/cs/ArrayEncoder&apos;)}
  0x00007fab74135fc1: mov    0x8(%r11),%ecx
  0x00007fab74135fc5: shl    $0x3,%rcx
  0x00007fab74135fc9: cmp    0x18(%rcx),%r9
  0x00007fab74135fcd: je     0x00007fab74135fef
  0x00007fab74135fd3: cmp    %r9,%rcx
  0x00007fab74135fd6: je     0x00007fab74135fef
  0x00007fab74135fdc: push   %rcx
  0x00007fab74135fdd: push   %r9
  0x00007fab74135fdf: callq  0x00007fab740fe720  ;   {runtime_call}
  0x00007fab74135fe4: pop    %rcx
  0x00007fab74135fe5: pop    %rcx
  0x00007fab74135fe6: cmp    $0x0,%ecx
  0x00007fab74135fe9: je     0x00007fab741361d6
  0x00007fab74135fef: movabs $0x7fab61b8b4e8,%rcx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74135ff9: mov    0x8(%r11),%r9d
  0x00007fab74135ffd: shl    $0x3,%r9
  0x00007fab74136001: cmp    0x410(%rcx),%r9
  0x00007fab74136008: jne    0x00007fab74136017
  0x00007fab7413600a: addq   $0x1,0x418(%rcx)
  0x00007fab74136012: jmpq   0x00007fab741361f2
  0x00007fab74136017: cmp    0x420(%rcx),%r9
  0x00007fab7413601e: jne    0x00007fab7413602d
  0x00007fab74136020: addq   $0x1,0x428(%rcx)
  0x00007fab74136028: jmpq   0x00007fab741361f2
  0x00007fab7413602d: cmp    0x430(%rcx),%r9
  0x00007fab74136034: jne    0x00007fab74136043
  0x00007fab74136036: addq   $0x1,0x438(%rcx)
  0x00007fab7413603e: jmpq   0x00007fab741361f2
  0x00007fab74136043: cmp    0x440(%rcx),%r9
  0x00007fab7413604a: jne    0x00007fab74136059
  0x00007fab7413604c: addq   $0x1,0x448(%rcx)
  0x00007fab74136054: jmpq   0x00007fab741361f2
  0x00007fab74136059: cmp    0x450(%rcx),%r9
  0x00007fab74136060: jne    0x00007fab7413606f
  0x00007fab74136062: addq   $0x1,0x458(%rcx)
  0x00007fab7413606a: jmpq   0x00007fab741361f2
  0x00007fab7413606f: cmp    0x460(%rcx),%r9
  0x00007fab74136076: jne    0x00007fab74136085
  0x00007fab74136078: addq   $0x1,0x468(%rcx)
  0x00007fab74136080: jmpq   0x00007fab741361f2
  0x00007fab74136085: cmp    0x470(%rcx),%r9
  0x00007fab7413608c: jne    0x00007fab7413609b
  0x00007fab7413608e: addq   $0x1,0x478(%rcx)
  0x00007fab74136096: jmpq   0x00007fab741361f2
  0x00007fab7413609b: cmp    0x480(%rcx),%r9
  0x00007fab741360a2: jne    0x00007fab741360b1
  0x00007fab741360a4: addq   $0x1,0x488(%rcx)
  0x00007fab741360ac: jmpq   0x00007fab741361f2
  0x00007fab741360b1: cmpq   $0x0,0x410(%rcx)
  0x00007fab741360bc: jne    0x00007fab741360d5
  0x00007fab741360be: mov    %r9,0x410(%rcx)
  0x00007fab741360c5: movq   $0x1,0x418(%rcx)
  0x00007fab741360d0: jmpq   0x00007fab741361f2
  0x00007fab741360d5: cmpq   $0x0,0x420(%rcx)
  0x00007fab741360e0: jne    0x00007fab741360f9
  0x00007fab741360e2: mov    %r9,0x420(%rcx)
  0x00007fab741360e9: movq   $0x1,0x428(%rcx)
  0x00007fab741360f4: jmpq   0x00007fab741361f2
  0x00007fab741360f9: cmpq   $0x0,0x430(%rcx)
  0x00007fab74136104: jne    0x00007fab7413611d
  0x00007fab74136106: mov    %r9,0x430(%rcx)
  0x00007fab7413610d: movq   $0x1,0x438(%rcx)
  0x00007fab74136118: jmpq   0x00007fab741361f2
  0x00007fab7413611d: cmpq   $0x0,0x440(%rcx)
  0x00007fab74136128: jne    0x00007fab74136141
  0x00007fab7413612a: mov    %r9,0x440(%rcx)
  0x00007fab74136131: movq   $0x1,0x448(%rcx)
  0x00007fab7413613c: jmpq   0x00007fab741361f2
  0x00007fab74136141: cmpq   $0x0,0x450(%rcx)
  0x00007fab7413614c: jne    0x00007fab74136165
  0x00007fab7413614e: mov    %r9,0x450(%rcx)
  0x00007fab74136155: movq   $0x1,0x458(%rcx)
  0x00007fab74136160: jmpq   0x00007fab741361f2
  0x00007fab74136165: cmpq   $0x0,0x460(%rcx)
  0x00007fab74136170: jne    0x00007fab74136189
  0x00007fab74136172: mov    %r9,0x460(%rcx)
  0x00007fab74136179: movq   $0x1,0x468(%rcx)
  0x00007fab74136184: jmpq   0x00007fab741361f2
  0x00007fab74136189: cmpq   $0x0,0x470(%rcx)
  0x00007fab74136194: jne    0x00007fab741361ad
  0x00007fab74136196: mov    %r9,0x470(%rcx)
  0x00007fab7413619d: movq   $0x1,0x478(%rcx)
  0x00007fab741361a8: jmpq   0x00007fab741361f2
  0x00007fab741361ad: cmpq   $0x0,0x480(%rcx)
  0x00007fab741361b8: jne    0x00007fab741361d1
  0x00007fab741361ba: mov    %r9,0x480(%rcx)
  0x00007fab741361c1: movq   $0x1,0x488(%rcx)
  0x00007fab741361cc: jmpq   0x00007fab741361f2
  0x00007fab741361d1: jmpq   0x00007fab741361f2
  0x00007fab741361d6: movabs $0x7fab61b8b4e8,%rcx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab741361e0: subq   $0x1,0x400(%rcx)
  0x00007fab741361e8: jmpq   0x00007fab74136b36
  0x00007fab741361ed: jmpq   0x00007fab741361f2
  0x00007fab741361f2: mov    %r11,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@53 (line 86)

  0x00007fab741361f5: cmp    $0x0,%rsi
  0x00007fab741361f9: je     0x00007fab7413621e
  0x00007fab741361ff: movabs $0x7c0027dd0,%rdi  ;   {metadata(&apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab74136209: mov    0x8(%rsi),%ecx
  0x00007fab7413620c: shl    $0x3,%rcx
  0x00007fab74136210: cmp    %rcx,%rdi
  0x00007fab74136213: jne    0x00007fab74136b3f
  0x00007fab74136219: jmpq   0x00007fab7413621e
  0x00007fab7413621e: mov    %rsi,%rdx
  0x00007fab74136221: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00007fab74136b44
  0x00007fab74136224: mov    %rsi,%rdx
  0x00007fab74136227: movabs $0x7fab61b8b4e8,%rcx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74136231: movabs $0x7c0027dd0,%r10  ;   {metadata(&apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007fab7413623b: mov    %r10,0x4a8(%rcx)
  0x00007fab74136242: addq   $0x1,0x4b0(%rcx)
  0x00007fab7413624a: mov    %rax,%rdx
  0x00007fab7413624d: mov    $0x0,%ecx
  0x00007fab74136252: mov    0x110(%rsp),%r9    ;*invokeinterface encode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@62 (line 86)

  0x00007fab7413625a: nop
  0x00007fab7413625b: nop
  0x00007fab7413625c: nop
  0x00007fab7413625d: nop
  0x00007fab7413625e: nop
  0x00007fab7413625f: callq  0x00007fab74047d60  ; OopMap{[272]=Oop off=6852}
                                                ;*invokeinterface encode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@62 (line 86)
                                                ;   {optimized virtual_call}
  0x00007fab74136264: mov    %rax,%r8           ;*invokeinterface encode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@62 (line 86)

  0x00007fab74136267: cmp    $0xffffffff,%r8d
  0x00007fab7413626b: movabs $0x7fab61b8b4e8,%rbx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74136275: movabs $0x530,%rdx
  0x00007fab7413627f: jne    0x00007fab7413628f
  0x00007fab74136285: movabs $0x540,%rdx
  0x00007fab7413628f: mov    (%rbx,%rdx,1),%rsi
  0x00007fab74136293: lea    0x1(%rsi),%rsi
  0x00007fab74136297: mov    %rsi,(%rbx,%rdx,1)
  0x00007fab7413629b: je     0x00007fab7413657d  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@72 (line 87)

  0x00007fab741362a1: mov    0x110(%rsp),%rax
  0x00007fab741362a9: movabs $0x7fab61b8b4e8,%rbx  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab741362b3: addq   $0x1,0x560(%rbx)
  0x00007fab741362bb: movabs $0x7fab61b82058,%rbx  ;   {metadata(method data for {method} {0x00007fab619ce410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab741362c5: mov    0xfc(%rbx),%edx
  0x00007fab741362cb: add    $0x8,%edx
  0x00007fab741362ce: mov    %edx,0xfc(%rbx)
  0x00007fab741362d4: movabs $0x7fab619ce410,%rbx  ;   {metadata({method} {0x00007fab619ce410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab741362de: and    $0x7ffff8,%edx
  0x00007fab741362e4: cmp    $0x0,%edx
  0x00007fab741362e7: je     0x00007fab74136b49
  0x00007fab741362ed: mov    %r8,%rbx
  0x00007fab741362f0: movabs $0x7c0000768,%rdx  ;   {metadata({type array byte})}
  0x00007fab741362fa: mov    %rax,%r9
  0x00007fab741362fd: movslq %ebx,%rbx
  0x00007fab74136300: mov    %rbx,%rdi
  0x00007fab74136303: cmp    $0xffffff,%rbx
  0x00007fab7413630a: ja     0x00007fab74136b60
  0x00007fab74136310: movabs $0x17,%rsi
  0x00007fab7413631a: lea    (%rsi,%rbx,1),%rsi
  0x00007fab7413631e: and    $0xfffffffffffffff8,%rsi
  0x00007fab74136322: mov    0x60(%r15),%rax
  0x00007fab74136326: lea    (%rax,%rsi,1),%rsi
  0x00007fab7413632a: cmp    0x70(%r15),%rsi
  0x00007fab7413632e: ja     0x00007fab74136b60
  0x00007fab74136334: mov    %rsi,0x60(%r15)
  0x00007fab74136338: sub    %rax,%rsi
  0x00007fab7413633b: movq   $0x1,(%rax)
  0x00007fab74136342: mov    %rdx,%rcx
  0x00007fab74136345: shr    $0x3,%rcx
  0x00007fab74136349: mov    %ecx,0x8(%rax)
  0x00007fab7413634c: mov    %ebx,0xc(%rax)
  0x00007fab7413634f: sub    $0x10,%rsi
  0x00007fab74136353: je     0x00007fab7413636a
  0x00007fab74136359: xor    %rbx,%rbx
  0x00007fab7413635c: shr    $0x3,%rsi
  0x00007fab74136360: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fab74136365: dec    %rsi
  0x00007fab74136368: jne    0x00007fab74136360  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3236)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)

  0x00007fab7413636a: mov    0xc(%r9),%esi      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@9 (line 3237)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)

  0x00007fab7413636e: movabs $0x7fab61b82058,%rdx  ;   {metadata(method data for {method} {0x00007fab619ce410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab74136378: addq   $0x1,0x130(%rdx)
  0x00007fab74136380: movabs $0x7fab61a9c058,%rdx  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7413638a: mov    0xfc(%rdx),%ecx
  0x00007fab74136390: add    $0x8,%ecx
  0x00007fab74136393: mov    %ecx,0xfc(%rdx)
  0x00007fab74136399: movabs $0x7fab619a58b8,%rdx  ;   {metadata({method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab741363a3: and    $0x7ffff8,%ecx
  0x00007fab741363a9: cmp    $0x0,%ecx
  0x00007fab741363ac: je     0x00007fab74136b6a
  0x00007fab741363b2: cmp    %r8d,%esi
  0x00007fab741363b5: movabs $0x7fab61a9c058,%rdx  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab741363bf: movabs $0x130,%rcx
  0x00007fab741363c9: jg     0x00007fab741363d9
  0x00007fab741363cf: movabs $0x140,%rcx
  0x00007fab741363d9: mov    (%rdx,%rcx,1),%rdi
  0x00007fab741363dd: lea    0x1(%rdi),%rdi
  0x00007fab741363e1: mov    %rdi,(%rdx,%rcx,1)
  0x00007fab741363e5: jg     0x00007fab74136403  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)

  0x00007fab741363eb: movabs $0x7fab61a9c058,%rdx  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab741363f5: incl   0x150(%rdx)
  0x00007fab741363fb: mov    %rsi,%rdi
  0x00007fab741363fe: jmpq   0x00007fab74136406  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)

  0x00007fab74136403: mov    %r8,%rdi           ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)

  0x00007fab74136406: movabs $0x7fab61b82058,%rsi  ;   {metadata(method data for {method} {0x00007fab619ce410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab74136410: addq   $0x1,0x140(%rsi)
  0x00007fab74136418: mov    %r9,%rsi
  0x00007fab7413641b: mov    $0x0,%edx
  0x00007fab74136420: mov    %rax,%rcx
  0x00007fab74136423: mov    $0x0,%r8d
  0x00007fab74136429: mov    %rdi,%r9
  0x00007fab7413642c: mov    %rax,0x130(%rsp)
  0x00007fab74136434: lea    (%rdx,%r9,1),%rdi
  0x00007fab74136438: cmp    0xc(%rsi),%edi
  0x00007fab7413643b: ja     0x00007fab74136b81
  0x00007fab74136441: lea    (%r8,%r9,1),%rdi
  0x00007fab74136445: cmp    0xc(%rcx),%edi
  0x00007fab74136448: ja     0x00007fab74136b81
  0x00007fab7413644e: test   %r9d,%r9d
  0x00007fab74136451: jl     0x00007fab74136b81
  0x00007fab74136457: je     0x00007fab74136493
  0x00007fab7413645d: movslq %edx,%rdx
  0x00007fab74136460: movslq %r8d,%r8
  0x00007fab74136463: lea    0x10(%rsi,%rdx,1),%rdi
  0x00007fab74136468: lea    0x10(%rcx,%r8,1),%rsi
  0x00007fab7413646d: mov    %r9,%rdx
  0x00007fab74136470: test   $0xf,%esp
  0x00007fab74136476: je     0x00007fab7413648e
  0x00007fab7413647c: sub    $0x8,%rsp
  0x00007fab74136480: callq  Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007fab74136485: add    $0x8,%rsp
  0x00007fab74136489: jmpq   0x00007fab74136493
  0x00007fab7413648e: callq  Stub::jbyte_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)
                                                ;   {runtime_call}
  0x00007fab74136493: mov    0x130(%rsp),%rax
  0x00007fab7413649b: add    $0x170,%rsp
  0x00007fab741364a2: pop    %rbp
  0x00007fab741364a3: test   %eax,0x1b6abc57(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741364a9: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@92 (line 89)

  0x00007fab741364aa: movabs $0x7fab61b82058,%rsi  ;   {metadata(method data for {method} {0x00007fab619ce410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab741364b4: addq   $0x1,0x140(%rsi)
  0x00007fab741364bc: mov    %r9,%rsi
  0x00007fab741364bf: mov    $0x0,%edx
  0x00007fab741364c4: mov    %rax,%rcx
  0x00007fab741364c7: mov    $0x0,%r8d
  0x00007fab741364cd: mov    %r14,%r9
  0x00007fab741364d0: mov    %rax,0x138(%rsp)
  0x00007fab741364d8: lea    (%rdx,%r9,1),%rdi
  0x00007fab741364dc: cmp    0xc(%rsi),%edi
  0x00007fab741364df: ja     0x00007fab74136b91
  0x00007fab741364e5: lea    (%r8,%r9,1),%rdi
  0x00007fab741364e9: cmp    0xc(%rcx),%edi
  0x00007fab741364ec: ja     0x00007fab74136b91
  0x00007fab741364f2: test   %r9d,%r9d
  0x00007fab741364f5: jl     0x00007fab74136b91
  0x00007fab741364fb: je     0x00007fab74136537
  0x00007fab74136501: movslq %edx,%rdx
  0x00007fab74136504: movslq %r8d,%r8
  0x00007fab74136507: lea    0x10(%rsi,%rdx,1),%rdi
  0x00007fab7413650c: lea    0x10(%rcx,%r8,1),%rsi
  0x00007fab74136511: mov    %r9,%rdx
  0x00007fab74136514: test   $0xf,%esp
  0x00007fab7413651a: je     0x00007fab74136532
  0x00007fab74136520: sub    $0x8,%rsp
  0x00007fab74136524: callq  Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007fab74136529: add    $0x8,%rsp
  0x00007fab7413652d: jmpq   0x00007fab74136537
  0x00007fab74136532: callq  Stub::jbyte_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)
                                                ;   {runtime_call}
  0x00007fab74136537: mov    0x138(%rsp),%rax
  0x00007fab7413653f: add    $0x170,%rsp
  0x00007fab74136546: pop    %rbp
  0x00007fab74136547: test   %eax,0x1b6abbb3(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7413654d: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@191 (line 102)

  0x00007fab7413654e: mov    0x110(%rsp),%r9
  0x00007fab74136556: mov    %r9,%rax
  0x00007fab74136559: add    $0x170,%rsp
  0x00007fab74136560: pop    %rbp
  0x00007fab74136561: test   %eax,0x1b6abb99(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74136567: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@180 (line 100)

  0x00007fab74136568: mov    %rax,%r9
  0x00007fab7413656b: mov    %r9,%rax
  0x00007fab7413656e: add    $0x170,%rsp
  0x00007fab74136575: pop    %rbp
  0x00007fab74136576: test   %eax,0x1b6abb84(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7413657c: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@37 (line 82)

  0x00007fab7413657d: data16 xchg %ax,%ax
  0x00007fab74136580: jmpq   0x00007fab74136bb0  ;   {no_reloc}
  0x00007fab74136585: add    %al,(%rax)
  0x00007fab74136587: add    %al,(%rax)
  0x00007fab74136589: add    %cl,-0x75(%rcx)
  0x00007fab7413658c: rex.RXB (bad) 
  0x00007fab7413658e: lea    0x20(%rax),%rdi
  0x00007fab74136592: cmp    0x70(%r15),%rdi
  0x00007fab74136596: ja     0x00007fab74136bba
  0x00007fab7413659c: mov    %rdi,0x60(%r15)
  0x00007fab741365a0: mov    0xa8(%rdx),%rcx
  0x00007fab741365a7: mov    %rcx,(%rax)
  0x00007fab741365aa: mov    %rdx,%rcx
  0x00007fab741365ad: shr    $0x3,%rcx
  0x00007fab741365b1: mov    %ecx,0x8(%rax)
  0x00007fab741365b4: xor    %rcx,%rcx
  0x00007fab741365b7: mov    %ecx,0xc(%rax)
  0x00007fab741365ba: xor    %rcx,%rcx
  0x00007fab741365bd: mov    %rcx,0x10(%rax)
  0x00007fab741365c1: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@75 (line 88)

  0x00007fab741365c5: mov    %rax,%rdx
  0x00007fab741365c8: movabs $0x7fab61b8b4e8,%rsi  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab741365d2: addq   $0x1,0x550(%rsi)
  0x00007fab741365da: movabs $0x670bb8648,%rdx  ;   {oop(&quot;MALFORMED&quot;)}
  0x00007fab741365e4: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@81 (line 88)

  0x00007fab741365e7: mov    %rax,0x140(%rsp)
  0x00007fab741365ef: callq  0x00007fab74047d60  ; OopMap{[320]=Oop off=7764}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@81 (line 88)
                                                ;   {optimized virtual_call}
  0x00007fab741365f4: mov    0x140(%rsp),%rax
  0x00007fab741365fc: jmpq   0x00007fab74136c94  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@84 (line 88)

  0x00007fab74136601: nopl   0x0(%rax)
  0x00007fab74136608: jmpq   0x00007fab74136bd6  ;   {no_reloc}
  0x00007fab7413660d: add    %al,(%rax)
  0x00007fab7413660f: add    %al,(%rax)
  0x00007fab74136611: add    %cl,-0x75(%rcx)
  0x00007fab74136614: rex.RXB (bad) 
  0x00007fab74136616: lea    0x20(%rax),%rdi
  0x00007fab7413661a: cmp    0x70(%r15),%rdi
  0x00007fab7413661e: ja     0x00007fab74136be0
  0x00007fab74136624: mov    %rdi,0x60(%r15)
  0x00007fab74136628: mov    0xa8(%rdx),%rcx
  0x00007fab7413662f: mov    %rcx,(%rax)
  0x00007fab74136632: mov    %rdx,%rcx
  0x00007fab74136635: shr    $0x3,%rcx
  0x00007fab74136639: mov    %ecx,0x8(%rax)
  0x00007fab7413663c: xor    %rcx,%rcx
  0x00007fab7413663f: mov    %ecx,0xc(%rax)
  0x00007fab74136642: xor    %rcx,%rcx
  0x00007fab74136645: mov    %rcx,0x10(%rax)
  0x00007fab74136649: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@154 (line 98)

  0x00007fab7413664d: mov    %rbx,%rsi
  0x00007fab74136650: movabs $0x7fab61b8b4e8,%rdi  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab7413665a: movabs $0x7c0030d30,%r10  ;   {metadata(&apos;java/nio/charset/CoderResult&apos;)}
  0x00007fab74136664: mov    %r10,0x8e8(%rdi)
  0x00007fab7413666b: addq   $0x1,0x8f0(%rdi)
  0x00007fab74136673: mov    %rbx,%rsi          ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@160 (line 98)

  0x00007fab74136676: mov    %rax,0x148(%rsp)
  0x00007fab7413667e: nop
  0x00007fab7413667f: callq  0x00007fab74047d60  ; OopMap{[328]=Oop off=7908}
                                                ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@160 (line 98)
                                                ;   {optimized virtual_call}
  0x00007fab74136684: mov    0x148(%rsp),%rdx
  0x00007fab7413668c: movabs $0x7fab61b8b4e8,%rsi  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74136696: addq   $0x1,0x970(%rsi)
  0x00007fab7413669e: mov    %rax,%rdx
  0x00007fab741366a1: mov    0x148(%rsp),%rsi   ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@163 (line 98)

  0x00007fab741366a9: nop
  0x00007fab741366aa: nop
  0x00007fab741366ab: nop
  0x00007fab741366ac: nop
  0x00007fab741366ad: nop
  0x00007fab741366ae: nop
  0x00007fab741366af: callq  0x00007fab74047d60  ; OopMap{[328]=Oop off=7956}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@163 (line 98)
                                                ;   {optimized virtual_call}
  0x00007fab741366b4: mov    0x148(%rsp),%rax
  0x00007fab741366bc: jmpq   0x00007fab74136c94  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@166 (line 98)

  0x00007fab741366c1: nopl   0x0(%rax)
  0x00007fab741366c8: jmpq   0x00007fab74136bfc  ;   {no_reloc}
  0x00007fab741366cd: add    %al,(%rax)
  0x00007fab741366cf: add    %al,(%rax)
  0x00007fab741366d1: add    %cl,-0x75(%rcx)
  0x00007fab741366d4: rex.RXB (bad) 
  0x00007fab741366d6: lea    0x20(%rax),%rdi
  0x00007fab741366da: cmp    0x70(%r15),%rdi
  0x00007fab741366de: ja     0x00007fab74136c06
  0x00007fab741366e4: mov    %rdi,0x60(%r15)
  0x00007fab741366e8: mov    0xa8(%rdx),%rcx
  0x00007fab741366ef: mov    %rcx,(%rax)
  0x00007fab741366f2: mov    %rdx,%rcx
  0x00007fab741366f5: shr    $0x3,%rcx
  0x00007fab741366f9: mov    %ecx,0x8(%rax)
  0x00007fab741366fc: xor    %rcx,%rcx
  0x00007fab741366ff: mov    %ecx,0xc(%rax)
  0x00007fab74136702: xor    %rcx,%rcx
  0x00007fab74136705: mov    %rcx,0x10(%rax)
  0x00007fab74136709: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@125 (line 95)

  0x00007fab7413670d: mov    %rbx,%rsi
  0x00007fab74136710: movabs $0x7fab61b8b4e8,%rdi  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab7413671a: movabs $0x7c0030d30,%r10  ;   {metadata(&apos;java/nio/charset/CoderResult&apos;)}
  0x00007fab74136724: mov    %r10,0x6f0(%rdi)
  0x00007fab7413672b: addq   $0x1,0x6f8(%rdi)
  0x00007fab74136733: mov    %rbx,%rsi          ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@131 (line 95)

  0x00007fab74136736: mov    %rax,0x150(%rsp)
  0x00007fab7413673e: nop
  0x00007fab7413673f: callq  0x00007fab74047d60  ; OopMap{[336]=Oop off=8100}
                                                ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@131 (line 95)
                                                ;   {optimized virtual_call}
  0x00007fab74136744: mov    0x150(%rsp),%rdx
  0x00007fab7413674c: movabs $0x7fab61b8b4e8,%rsi  ;   {metadata(method data for {method} {0x00007fab61b74330} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007fab74136756: addq   $0x1,0x778(%rsi)
  0x00007fab7413675e: mov    %rax,%rdx
  0x00007fab74136761: mov    0x150(%rsp),%rsi   ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@134 (line 95)

  0x00007fab74136769: nop
  0x00007fab7413676a: nop
  0x00007fab7413676b: nop
  0x00007fab7413676c: nop
  0x00007fab7413676d: nop
  0x00007fab7413676e: nop
  0x00007fab7413676f: callq  0x00007fab74047d60  ; OopMap{[336]=Oop off=8148}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@134 (line 95)
                                                ;   {optimized virtual_call}
  0x00007fab74136774: mov    0x150(%rsp),%rax
  0x00007fab7413677c: jmpq   0x00007fab74136c94  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@137 (line 95)

  0x00007fab74136781: mov    0x2c0(%r15),%rax
  0x00007fab74136788: xor    %r10,%r10
  0x00007fab7413678b: mov    %r10,0x2c0(%r15)
  0x00007fab74136792: xor    %r10,%r10
  0x00007fab74136795: mov    %r10,0x2c8(%r15)
  0x00007fab7413679c: nopl   0x0(%rax)
  0x00007fab741367a0: jmpq   0x00007fab74136c22  ;   {no_reloc}
  0x00007fab741367a5: add    %al,(%rax)
  0x00007fab741367a7: add    %al,(%rax)
  0x00007fab741367a9: add    %al,0x162ba(%rax)
  0x00007fab741367af: add    %al,(%rdi,%rcx,1)
  0x00007fab741367b2: test   %edi,0x4(%rdx)
  0x00007fab741367b5: add    %al,(%rax)
  0x00007fab741367b7: mov    0x60(%r15),%rax
  0x00007fab741367bb: lea    0x20(%rax),%rdi
  0x00007fab741367bf: cmp    0x70(%r15),%rdi
  0x00007fab741367c3: ja     0x00007fab74136c31
  0x00007fab741367c9: mov    %rdi,0x60(%r15)
  0x00007fab741367cd: mov    0xa8(%rdx),%rcx
  0x00007fab741367d4: mov    %rcx,(%rax)
  0x00007fab741367d7: mov    %rdx,%rcx
  0x00007fab741367da: shr    $0x3,%rcx
  0x00007fab741367de: mov    %ecx,0x8(%rax)
  0x00007fab741367e1: xor    %rcx,%rcx
  0x00007fab741367e4: mov    %ecx,0xc(%rax)
  0x00007fab741367e7: xor    %rcx,%rcx
  0x00007fab741367ea: mov    %rcx,0x10(%rax)
  0x00007fab741367ee: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::wrap@12 (line 375)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)

  0x00007fab741367f2: mov    %rax,%rsi
  0x00007fab741367f5: movabs $0x7fab61b8c818,%rdi  ;   {metadata(method data for {method} {0x00007fab61a4d440} &apos;wrap&apos; &apos;([CII)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00007fab741367ff: addq   $0x1,0x140(%rdi)
  0x00007fab74136807: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::wrap@16 (line 375)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)

  0x00007fab7413680a: mov    %rax,0x158(%rsp)
  0x00007fab74136812: nop
  0x00007fab74136813: nop
  0x00007fab74136814: nop
  0x00007fab74136815: nop
  0x00007fab74136816: nop
  0x00007fab74136817: callq  0x00007fab74047d60  ; OopMap{[344]=Oop [272]=Oop [288]=Oop [264]=Oop off=8316}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::wrap@16 (line 375)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)
                                                ;   {optimized virtual_call}
  0x00007fab7413681c: mov    0x158(%rsp),%rax
  0x00007fab74136824: jmpq   0x00007fab74136c94  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::wrap@19 (line 375)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)

  0x00007fab74136829: mov    0x2c0(%r15),%rax
  0x00007fab74136830: xor    %r10,%r10
  0x00007fab74136833: mov    %r10,0x2c0(%r15)
  0x00007fab7413683a: xor    %r10,%r10
  0x00007fab7413683d: mov    %r10,0x2c8(%r15)
  0x00007fab74136844: nopl   0x0(%rax)
  0x00007fab74136848: jmpq   0x00007fab74136c4d  ;   {no_reloc}
  0x00007fab7413684d: add    %al,(%rax)
  0x00007fab7413684f: add    %al,(%rax)
  0x00007fab74136851: add    %al,0x162ba(%rax)
  0x00007fab74136857: add    %al,(%rdi,%rcx,1)
  0x00007fab7413685a: test   %edi,%ebp
  0x00007fab7413685c: add    (%rax),%eax
  0x00007fab7413685e: add    %cl,-0x75(%rcx)
  0x00007fab74136861: rex.RXB (bad) 
  0x00007fab74136863: lea    0x20(%rax),%rdi
  0x00007fab74136867: cmp    0x70(%r15),%rdi
  0x00007fab7413686b: ja     0x00007fab74136c5c
  0x00007fab74136871: mov    %rdi,0x60(%r15)
  0x00007fab74136875: mov    0xa8(%rdx),%rcx
  0x00007fab7413687c: mov    %rcx,(%rax)
  0x00007fab7413687f: mov    %rdx,%rcx
  0x00007fab74136882: shr    $0x3,%rcx
  0x00007fab74136886: mov    %ecx,0x8(%rax)
  0x00007fab74136889: xor    %rcx,%rcx
  0x00007fab7413688c: mov    %ecx,0xc(%rax)
  0x00007fab7413688f: xor    %rcx,%rcx
  0x00007fab74136892: mov    %rcx,0x10(%rax)
  0x00007fab74136896: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.ByteBuffer::wrap@12 (line 375)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)

  0x00007fab7413689a: mov    %rax,%rsi
  0x00007fab7413689d: movabs $0x7fab61b8c190,%rdi  ;   {metadata(method data for {method} {0x00007fab61a0dcc0} &apos;wrap&apos; &apos;([BII)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00007fab741368a7: addq   $0x1,0x140(%rdi)
  0x00007fab741368af: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.ByteBuffer::wrap@16 (line 375)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)

  0x00007fab741368b2: mov    %rax,0x160(%rsp)
  0x00007fab741368ba: nop
  0x00007fab741368bb: nop
  0x00007fab741368bc: nop
  0x00007fab741368bd: nop
  0x00007fab741368be: nop
  0x00007fab741368bf: callq  0x00007fab74047d60  ; OopMap{[352]=Oop [272]=Oop [256]=Oop [264]=Oop off=8484}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.ByteBuffer::wrap@16 (line 375)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)
                                                ;   {optimized virtual_call}
  0x00007fab741368c4: mov    0x160(%rsp),%rax
  0x00007fab741368cc: jmpq   0x00007fab74136c94
  0x00007fab741368d1: mov    %rdi,0x8(%rsp)
  0x00007fab741368d6: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741368de: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [240]=Oop rdx=Oop off=8515}
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipCoder::getBytes@-1 (line 77)
                                                ;   {runtime_call}
  0x00007fab741368e3: jmpq   0x00007fab74134809
  0x00007fab741368e8: mov    %rdi,0x8(%rsp)
  0x00007fab741368ed: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741368f5: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [240]=Oop rdx=Oop off=8538}
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipCoder::encoder@-1 (line 152)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)
                                                ;   {runtime_call}
  0x00007fab741368fa: jmpq   0x00007fab74134850
  0x00007fab741368ff: callq  0x00007fab740fc000  ; OopMap{rsi=Oop [240]=Oop [248]=Oop rdi=Oop off=8548}
                                                ;*invokevirtual newEncoder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@12 (line 153)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)
                                                ;   {runtime_call}
  0x00007fab74136904: callq  0x00007fab740fc000  ; OopMap{[240]=Oop [248]=Oop rax=Oop off=8553}
                                                ;*invokevirtual onMalformedInput {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)
                                                ;   {runtime_call}
  0x00007fab74136909: mov    %rbx,0x8(%rsp)
  0x00007fab7413690e: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74136916: callq  0x00007fab741005e0  ; OopMap{[240]=Oop [248]=Oop rax=Oop off=8571}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@-1 (line 382)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)
                                                ;   {runtime_call}
  0x00007fab7413691b: jmpq   0x00007fab74134aee
  0x00007fab74136920: mov    %rbx,0x8(%rsp)
  0x00007fab74136925: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413692d: callq  0x00007fab741005e0  ; OopMap{[240]=Oop [248]=Oop rax=Oop off=8594}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::implOnMalformedInput@-1 (line 398)
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@21 (line 385)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)
                                                ;   {runtime_call}
  0x00007fab74136932: jmpq   0x00007fab74134d4d
  0x00007fab74136937: mov    %rbx,0x8(%rsp)
  0x00007fab7413693c: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74136944: callq  0x00007fab741005e0  ; OopMap{[240]=Oop [248]=Oop rax=Oop off=8617}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@-1 (line 426)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)
                                                ;   {runtime_call}
  0x00007fab74136949: jmpq   0x00007fab74134d94
  0x00007fab7413694e: mov    %rbx,0x8(%rsp)
  0x00007fab74136953: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413695b: callq  0x00007fab741005e0  ; OopMap{[240]=Oop [248]=Oop rax=Oop off=8640}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::implOnUnmappableCharacter@-1 (line 442)
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@21 (line 429)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)
                                                ;   {runtime_call}
  0x00007fab74136960: jmpq   0x00007fab74134ff3
  0x00007fab74136965: callq  0x00007fab740fc000  ; OopMap{r11=Oop [264]=Oop [240]=Oop r8=Oop off=8650}
                                                ;*invokevirtual reset {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@4 (line 77)
                                                ;   {runtime_call}
  0x00007fab7413696a: mov    %rbx,0x8(%rsp)
  0x00007fab7413696f: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74136977: callq  0x00007fab741005e0  ; OopMap{r11=Oop [264]=Oop [240]=Oop r8=Oop off=8668}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::reset@-1 (line 709)
                                                ; - java.util.zip.ZipCoder::getBytes@4 (line 77)
                                                ;   {runtime_call}
  0x00007fab7413697c: jmpq   0x00007fab7413507d
  0x00007fab74136981: mov    %rbx,0x8(%rsp)
  0x00007fab74136986: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413698e: callq  0x00007fab741005e0  ; OopMap{r11=Oop [264]=Oop [240]=Oop r8=Oop off=8691}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::implReset@-1 (line 720)
                                                ; - java.nio.charset.CharsetEncoder::reset@1 (line 709)
                                                ; - java.util.zip.ZipCoder::getBytes@4 (line 77)
                                                ;   {runtime_call}
  0x00007fab74136993: jmpq   0x00007fab7413529b
  0x00007fab74136998: callq  0x00007fab740fc000  ; OopMap{r11=Oop [264]=Oop [240]=Oop r8=Oop off=8701}
                                                ;*invokevirtual toCharArray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)
                                                ;   {runtime_call}
  0x00007fab7413699d: mov    %rbx,0x8(%rsp)
  0x00007fab741369a2: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741369aa: callq  0x00007fab741005e0  ; OopMap{r11=Oop [264]=Oop [240]=Oop r8=Oop off=8719}
                                                ;*synchronization entry
                                                ; - java.lang.String::toCharArray@-1 (line 2899)
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)
                                                ;   {runtime_call}
  0x00007fab741369af: jmpq   0x00007fab741352ed
  0x00007fab741369b4: callq  0x00007fab740fc000  ; OopMap{r11=Oop [264]=Oop [240]=Oop r8=Oop r9=Oop off=8729}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@4 (line 2899)
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)
                                                ;   {runtime_call}
  0x00007fab741369b9: callq  0x00007fab740fd020  ; OopMap{r11=Oop [264]=Oop r8=Oop r9=Oop [240]=Oop off=8734}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@5 (line 2899)
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)
                                                ;   {runtime_call}
  0x00007fab741369be: jmpq   0x00007fab74135373
  0x00007fab741369c3: nop
  0x00007fab741369c4: nop
  0x00007fab741369c5: nop
  0x00007fab741369c6: nop
  0x00007fab741369c7: callq  0x00007fab74048160  ; OopMap{[256]=Oop [240]=Oop [264]=Oop off=8748}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@20 (line 2900)
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)
                                                ;   {static_call}
  0x00007fab741369cc: jmpq   0x00007fab741353e4
  0x00007fab741369d1: mov    %rbx,0x8(%rsp)
  0x00007fab741369d6: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741369de: callq  0x00007fab741005e0  ; OopMap{[240]=Oop [264]=Oop rax=Oop [256]=Oop off=8771}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::maxBytesPerChar@-1 (line 465)
                                                ; - java.util.zip.ZipCoder::getBytes@17 (line 79)
                                                ;   {runtime_call}
  0x00007fab741369e3: jmpq   0x00007fab74135441
  0x00007fab741369e8: vcomiss 0x1a837840(%rip),%xmm0        # 0x00007fab8e96e230
                                                ;   {external_word}
  0x00007fab741369f0: jp     0x00007fab741369f9
  0x00007fab741369f2: jb     0x00007fab741369fc
  0x00007fab741369f4: dec    %r8
  0x00007fab741369f7: jmp    0x00007fab741369fc
  0x00007fab741369f9: xor    %r8,%r8
  0x00007fab741369fc: jmpq   0x00007fab74135464
  0x00007fab74136a01: callq  0x00007fab740fd020  ; OopMap{[240]=Oop r13=Oop [264]=Oop [256]=Oop off=8806}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@26 (line 80)
                                                ;   {runtime_call}
  0x00007fab74136a06: jmpq   0x00007fab741354de
  0x00007fab74136a0b: mov    %rdx,0x8(%rsp)
  0x00007fab74136a10: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74136a18: callq  0x00007fab741005e0  ; OopMap{rax=Oop [272]=Oop [256]=Oop [264]=Oop off=8829}
                                                ;*synchronization entry
                                                ; - java.nio.ByteBuffer::wrap@-1 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)
                                                ;   {runtime_call}
  0x00007fab74136a1d: jmpq   0x00007fab74135852
  0x00007fab74136a22: mov    %rdx,0x8(%rsp)
  0x00007fab74136a27: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74136a2f: callq  0x00007fab741005e0  ; OopMap{rax=Oop [272]=Oop [256]=Oop [264]=Oop off=8852}
                                                ;*synchronization entry
                                                ; - java.nio.ByteBuffer::wrap@-1 (line 373)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)
                                                ;   {runtime_call}
  0x00007fab74136a34: jmpq   0x00007fab7413589a
  0x00007fab74136a39: mov    %rdx,%rdx
  0x00007fab74136a3c: callq  0x00007fab740fc760  ; OopMap{[256]=Oop [264]=Oop r9=Oop [272]=Oop off=8865}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.ByteBuffer::wrap@0 (line 373)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)
                                                ;   {runtime_call}
  0x00007fab74136a41: jmpq   0x00007fab741358ea
  0x00007fab74136a46: mov    %rdx,0x8(%rsp)
  0x00007fab74136a4b: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74136a53: callq  0x00007fab741005e0  ; OopMap{[256]=Oop [264]=Oop r9=Oop [272]=Oop rax=Oop [288]=Oop off=8888}
                                                ;*synchronization entry
                                                ; - java.nio.HeapByteBuffer::&lt;init&gt;@-1 (line 70)
                                                ; - java.nio.ByteBuffer::wrap@7 (line 373)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)
                                                ;   {runtime_call}
  0x00007fab74136a58: jmpq   0x00007fab74135939
  0x00007fab74136a5d: mov    %rdx,0x8(%rsp)
  0x00007fab74136a62: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74136a6a: callq  0x00007fab741005e0  ; OopMap{[272]=Oop [288]=Oop [264]=Oop [256]=Oop off=8911}
                                                ;*synchronization entry
                                                ; - java.nio.CharBuffer::wrap@-1 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)
                                                ;   {runtime_call}
  0x00007fab74136a6f: jmpq   0x00007fab741359c0
  0x00007fab74136a74: mov    %rdx,0x8(%rsp)
  0x00007fab74136a79: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74136a81: callq  0x00007fab741005e0  ; OopMap{[272]=Oop [288]=Oop [264]=Oop [256]=Oop off=8934}
                                                ;*synchronization entry
                                                ; - java.nio.CharBuffer::wrap@-1 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)
                                                ;   {runtime_call}
  0x00007fab74136a86: jmpq   0x00007fab74135a04
  0x00007fab74136a8b: mov    %rdx,%rdx
  0x00007fab74136a8e: callq  0x00007fab740fc760  ; OopMap{[272]=Oop [288]=Oop [264]=Oop [256]=Oop off=8947}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::wrap@0 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)
                                                ;   {runtime_call}
  0x00007fab74136a93: jmpq   0x00007fab74135a51
  0x00007fab74136a98: mov    %rdx,0x8(%rsp)
  0x00007fab74136a9d: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74136aa5: callq  0x00007fab741005e0  ; OopMap{[272]=Oop [288]=Oop [264]=Oop [256]=Oop rax=Oop off=8970}
                                                ;*synchronization entry
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@-1 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)
                                                ;   {runtime_call}
  0x00007fab74136aaa: jmpq   0x00007fab74135a98
  0x00007fab74136aaf: mov    %rdx,0x8(%rsp)
  0x00007fab74136ab4: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74136abc: callq  0x00007fab741005e0  ; OopMap{[272]=Oop [288]=Oop [264]=Oop [256]=Oop rax=Oop off=8993}
                                                ;*synchronization entry
                                                ; - java.nio.CharBuffer::&lt;init&gt;@-1 (line 281)
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)
                                                ;   {runtime_call}
  0x00007fab74136ac1: jmpq   0x00007fab74135adf
  0x00007fab74136ac6: callq  0x00007fab740fc000  ; OopMap{[272]=Oop [288]=Oop [264]=Oop rbx=Oop off=9003}
                                                ;*invokevirtual isUnderflow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@119 (line 94)
                                                ;   {runtime_call}
  0x00007fab74136acb: mov    %rdx,0x8(%rsp)
  0x00007fab74136ad0: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74136ad8: callq  0x00007fab741005e0  ; OopMap{[272]=Oop [288]=Oop [264]=Oop rbx=Oop off=9021}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CoderResult::isUnderflow@-1 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@119 (line 94)
                                                ;   {runtime_call}
  0x00007fab74136add: jmpq   0x00007fab74135bf2
  0x00007fab74136ae2: callq  0x00007fab740fc000  ; OopMap{[272]=Oop [288]=Oop rbx=Oop off=9031}
                                                ;*invokevirtual isUnderflow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@148 (line 97)
                                                ;   {runtime_call}
  0x00007fab74136ae7: mov    %rdx,0x8(%rsp)
  0x00007fab74136aec: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74136af4: callq  0x00007fab741005e0  ; OopMap{[272]=Oop [288]=Oop rbx=Oop off=9049}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CoderResult::isUnderflow@-1 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@148 (line 97)
                                                ;   {runtime_call}
  0x00007fab74136af9: jmpq   0x00007fab74135d1a
  0x00007fab74136afe: mov    %rbx,0x8(%rsp)
  0x00007fab74136b03: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74136b0b: callq  0x00007fab741005e0  ; OopMap{[272]=Oop off=9072}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3236)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)
                                                ;   {runtime_call}
  0x00007fab74136b10: jmpq   0x00007fab74135e6e
  0x00007fab74136b15: callq  0x00007fab740fd020  ; OopMap{[272]=Oop off=9082}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3236)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)
                                                ;   {runtime_call}
  0x00007fab74136b1a: jmpq   0x00007fab74135ee8
  0x00007fab74136b1f: mov    %rdx,0x8(%rsp)
  0x00007fab74136b24: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74136b2c: callq  0x00007fab741005e0  ; OopMap{[272]=Oop rax=Oop off=9105}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)
                                                ;   {runtime_call}
  0x00007fab74136b31: jmpq   0x00007fab74135f2c
  0x00007fab74136b36: mov    %r11,(%rsp)
  0x00007fab74136b3a: callq  0x00007fab740fe2c0  ; OopMap{[272]=Oop rax=Oop [256]=Oop off=9119}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@53 (line 86)
                                                ;   {runtime_call}
  0x00007fab74136b3f: callq  0x00007fab740fe500  ; OopMap{[272]=Oop rax=Oop [256]=Oop rsi=Oop off=9124}
                                                ;*invokeinterface encode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@62 (line 86)
                                                ;   {runtime_call}
  0x00007fab74136b44: callq  0x00007fab740fc000  ; OopMap{[272]=Oop rax=Oop [256]=Oop rsi=Oop off=9129}
                                                ;*invokeinterface encode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@62 (line 86)
                                                ;   {runtime_call}
  0x00007fab74136b49: mov    %rbx,0x8(%rsp)
  0x00007fab74136b4e: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74136b56: callq  0x00007fab741005e0  ; OopMap{rax=Oop [272]=Oop off=9147}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3236)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)
                                                ;   {runtime_call}
  0x00007fab74136b5b: jmpq   0x00007fab741362ed
  0x00007fab74136b60: callq  0x00007fab740fd020  ; OopMap{r9=Oop [272]=Oop off=9157}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3236)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)
                                                ;   {runtime_call}
  0x00007fab74136b65: jmpq   0x00007fab7413636a
  0x00007fab74136b6a: mov    %rdx,0x8(%rsp)
  0x00007fab74136b6f: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74136b77: callq  0x00007fab741005e0  ; OopMap{r9=Oop [272]=Oop rax=Oop off=9180}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)
                                                ;   {runtime_call}
  0x00007fab74136b7c: jmpq   0x00007fab741363b2
  0x00007fab74136b81: nop
  0x00007fab74136b82: nop
  0x00007fab74136b83: nop
  0x00007fab74136b84: nop
  0x00007fab74136b85: nop
  0x00007fab74136b86: nop
  0x00007fab74136b87: callq  0x00007fab74048160  ; OopMap{[304]=Oop off=9196}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)
                                                ;   {static_call}
  0x00007fab74136b8c: jmpq   0x00007fab74136493
  0x00007fab74136b91: nop
  0x00007fab74136b92: nop
  0x00007fab74136b93: nop
  0x00007fab74136b94: nop
  0x00007fab74136b95: nop
  0x00007fab74136b96: nop
  0x00007fab74136b97: callq  0x00007fab74048160  ; OopMap{[312]=Oop off=9212}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)
                                                ;   {static_call}
  0x00007fab74136b9c: jmpq   0x00007fab74136537
  0x00007fab74136ba1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab74136bab: mov    $0xa050f00,%eax
  0x00007fab74136bb0: callq  0x00007fab740ff5e0  ; OopMap{off=9237}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@75 (line 88)
                                                ;   {runtime_call}
  0x00007fab74136bb5: jmpq   0x00007fab74136580
  0x00007fab74136bba: mov    %rdx,%rdx
  0x00007fab74136bbd: callq  0x00007fab740fc760  ; OopMap{off=9250}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@75 (line 88)
                                                ;   {runtime_call}
  0x00007fab74136bc2: jmpq   0x00007fab741365c5
  0x00007fab74136bc7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab74136bd1: mov    $0xa050f00,%eax
  0x00007fab74136bd6: callq  0x00007fab740ff5e0  ; OopMap{rbx=Oop off=9275}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@154 (line 98)
                                                ;   {runtime_call}
  0x00007fab74136bdb: jmpq   0x00007fab74136608
  0x00007fab74136be0: mov    %rdx,%rdx
  0x00007fab74136be3: callq  0x00007fab740fc760  ; OopMap{rbx=Oop off=9288}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@154 (line 98)
                                                ;   {runtime_call}
  0x00007fab74136be8: jmpq   0x00007fab7413664d
  0x00007fab74136bed: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab74136bf7: mov    $0xa050f00,%eax
  0x00007fab74136bfc: callq  0x00007fab740ff5e0  ; OopMap{rbx=Oop off=9313}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@125 (line 95)
                                                ;   {runtime_call}
  0x00007fab74136c01: jmpq   0x00007fab741366c8
  0x00007fab74136c06: mov    %rdx,%rdx
  0x00007fab74136c09: callq  0x00007fab740fc760  ; OopMap{rbx=Oop off=9326}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@125 (line 95)
                                                ;   {runtime_call}
  0x00007fab74136c0e: jmpq   0x00007fab7413670d
  0x00007fab74136c13: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab74136c1d: mov    $0xa050f00,%eax
  0x00007fab74136c22: callq  0x00007fab740ff5e0  ; OopMap{[264]=Oop [288]=Oop [272]=Oop off=9351}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::wrap@12 (line 375)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)
                                                ;   {runtime_call}
  0x00007fab74136c27: jmpq   0x00007fab741367a0
  0x00007fab74136c2c: callq  0x00007fab740fc000  ; OopMap{[264]=Oop [288]=Oop [272]=Oop off=9361}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::wrap@12 (line 375)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)
                                                ;   {runtime_call}
  0x00007fab74136c31: mov    %rdx,%rdx
  0x00007fab74136c34: callq  0x00007fab740fcba0  ; OopMap{[264]=Oop [288]=Oop [272]=Oop off=9369}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::wrap@12 (line 375)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)
                                                ;   {runtime_call}
  0x00007fab74136c39: jmpq   0x00007fab741367f2
  0x00007fab74136c3e: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab74136c48: mov    $0xa050f00,%eax
  0x00007fab74136c4d: callq  0x00007fab740ff5e0  ; OopMap{[264]=Oop [256]=Oop [272]=Oop off=9394}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.ByteBuffer::wrap@12 (line 375)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)
                                                ;   {runtime_call}
  0x00007fab74136c52: jmpq   0x00007fab74136848
  0x00007fab74136c57: callq  0x00007fab740fc000  ; OopMap{[264]=Oop [256]=Oop [272]=Oop off=9404}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.ByteBuffer::wrap@12 (line 375)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)
                                                ;   {runtime_call}
  0x00007fab74136c5c: mov    %rdx,%rdx
  0x00007fab74136c5f: callq  0x00007fab740fcba0  ; OopMap{[264]=Oop [256]=Oop [272]=Oop off=9412}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.ByteBuffer::wrap@12 (line 375)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)
                                                ;   {runtime_call}
  0x00007fab74136c64: jmpq   0x00007fab7413689a
  0x00007fab74136c69: nop
  0x00007fab74136c6a: nop
  0x00007fab74136c6b: mov    0x2c0(%r15),%rax
  0x00007fab74136c72: movabs $0x0,%r10
  0x00007fab74136c7c: mov    %r10,0x2c0(%r15)
  0x00007fab74136c83: movabs $0x0,%r10
  0x00007fab74136c8d: mov    %r10,0x2c8(%r15)
  0x00007fab74136c94: add    $0x170,%rsp
  0x00007fab74136c9b: pop    %rbp
  0x00007fab74136c9c: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74136ca1: hlt    
  0x00007fab74136ca2: hlt    
  0x00007fab74136ca3: hlt    
  0x00007fab74136ca4: hlt    
  0x00007fab74136ca5: hlt    
  0x00007fab74136ca6: hlt    
  0x00007fab74136ca7: hlt    
  0x00007fab74136ca8: hlt    
  0x00007fab74136ca9: hlt    
  0x00007fab74136caa: hlt    
  0x00007fab74136cab: hlt    
  0x00007fab74136cac: hlt    
  0x00007fab74136cad: hlt    
  0x00007fab74136cae: hlt    
  0x00007fab74136caf: hlt    
  0x00007fab74136cb0: hlt    
  0x00007fab74136cb1: hlt    
  0x00007fab74136cb2: hlt    
  0x00007fab74136cb3: hlt    
  0x00007fab74136cb4: hlt    
  0x00007fab74136cb5: hlt    
  0x00007fab74136cb6: hlt    
  0x00007fab74136cb7: hlt    
  0x00007fab74136cb8: hlt    
  0x00007fab74136cb9: hlt    
  0x00007fab74136cba: hlt    
  0x00007fab74136cbb: hlt    
  0x00007fab74136cbc: hlt    
  0x00007fab74136cbd: hlt    
  0x00007fab74136cbe: hlt    
  0x00007fab74136cbf: hlt    
[Stub Code]
  0x00007fab74136cc0: nop                       ;   {no_reloc}
  0x00007fab74136cc1: nop
  0x00007fab74136cc2: nop
  0x00007fab74136cc3: nop
  0x00007fab74136cc4: nop
  0x00007fab74136cc5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74136ccf: jmpq   0x00007fab74136ccf  ;   {runtime_call}
  0x00007fab74136cd4: nop
  0x00007fab74136cd5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74136cdf: jmpq   0x00007fab74136cdf  ;   {runtime_call}
  0x00007fab74136ce4: nop
  0x00007fab74136ce5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74136cef: jmpq   0x00007fab74136cef  ;   {runtime_call}
  0x00007fab74136cf4: nop
  0x00007fab74136cf5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74136cff: jmpq   0x00007fab74136cff  ;   {runtime_call}
  0x00007fab74136d04: nop
  0x00007fab74136d05: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74136d0f: jmpq   0x00007fab74136d0f  ;   {runtime_call}
  0x00007fab74136d14: nop
  0x00007fab74136d15: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74136d1f: jmpq   0x00007fab74136d1f  ;   {runtime_call}
  0x00007fab74136d24: nop
  0x00007fab74136d25: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74136d2f: jmpq   0x00007fab74136d2f  ;   {runtime_call}
  0x00007fab74136d34: nop
  0x00007fab74136d35: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74136d3f: jmpq   0x00007fab74136d3f  ;   {runtime_call}
  0x00007fab74136d44: nop
  0x00007fab74136d45: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74136d4f: jmpq   0x00007fab74136d4f  ;   {runtime_call}
  0x00007fab74136d54: nop
  0x00007fab74136d55: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74136d5f: jmpq   0x00007fab74136d5f  ;   {runtime_call}
  0x00007fab74136d64: nop
  0x00007fab74136d65: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74136d6f: jmpq   0x00007fab74136d6f  ;   {runtime_call}
  0x00007fab74136d74: nop
  0x00007fab74136d75: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74136d7f: jmpq   0x00007fab74136d7f  ;   {runtime_call}
  0x00007fab74136d84: nop
  0x00007fab74136d85: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74136d8f: jmpq   0x00007fab74136d8f  ;   {runtime_call}
  0x00007fab74136d94: nop
  0x00007fab74136d95: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74136d9f: jmpq   0x00007fab74136d9f  ;   {runtime_call}
  0x00007fab74136da4: nop
  0x00007fab74136da5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74136daf: jmpq   0x00007fab74136daf  ;   {runtime_call}
  0x00007fab74136db4: nop
  0x00007fab74136db5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74136dbf: jmpq   0x00007fab74136dbf  ;   {runtime_call}
[Exception Handler]
  0x00007fab74136dc4: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74136dc9: mov    %rsp,-0x28(%rsp)
  0x00007fab74136dce: sub    $0x80,%rsp
  0x00007fab74136dd5: mov    %rax,0x78(%rsp)
  0x00007fab74136dda: mov    %rcx,0x70(%rsp)
  0x00007fab74136ddf: mov    %rdx,0x68(%rsp)
  0x00007fab74136de4: mov    %rbx,0x60(%rsp)
  0x00007fab74136de9: mov    %rbp,0x50(%rsp)
  0x00007fab74136dee: mov    %rsi,0x48(%rsp)
  0x00007fab74136df3: mov    %rdi,0x40(%rsp)
  0x00007fab74136df8: mov    %r8,0x38(%rsp)
  0x00007fab74136dfd: mov    %r9,0x30(%rsp)
  0x00007fab74136e02: mov    %r10,0x28(%rsp)
  0x00007fab74136e07: mov    %r11,0x20(%rsp)
  0x00007fab74136e0c: mov    %r12,0x18(%rsp)
  0x00007fab74136e11: mov    %r13,0x10(%rsp)
  0x00007fab74136e16: mov    %r14,0x8(%rsp)
  0x00007fab74136e1b: mov    %r15,(%rsp)
  0x00007fab74136e1f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74136e29: movabs $0x7fab74136dc9,%rsi  ;   {internal_word}
  0x00007fab74136e33: mov    %rsp,%rdx
  0x00007fab74136e36: and    $0xfffffffffffffff0,%rsp
  0x00007fab74136e3a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74136e3f: hlt    
[Deopt Handler Code]
  0x00007fab74136e40: movabs $0x7fab74136e40,%r10  ;   {section_word}
  0x00007fab74136e4a: push   %r10
  0x00007fab74136e4c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74136e51: hlt    
  0x00007fab74136e52: hlt    
  0x00007fab74136e53: hlt    
  0x00007fab74136e54: hlt    
  0x00007fab74136e55: hlt    
  0x00007fab74136e56: hlt    
  0x00007fab74136e57: hlt    
<nmethod compile_id='78' compiler='C1' level='3' entry='0x00007fab741347a0' size='15800' address='0x00007fab741343d0' relocation_offset='312' insts_offset='976' stub_offset='10480' scopes_data_offset='11088' scopes_pcs_offset='13088' dependencies_offset='15600' handler_table_offset='15616' nul_chk_table_offset='15712' oops_offset='10888' metadata_offset='10896' method='java/util/zip/ZipCoder getBytes (Ljava/lang/String;)[B' bytes='192' count='463' iicount='463' stamp='0.353'/>
<writer thread='140373948942080'/>
<task_queued compile_id='85' method='java/security/CodeSource getLocation ()Ljava/net/URL;' bytes='5' count='128' iicount='128' level='1' stamp='0.353' comment='tiered' hot_count='128'/>
[Loaded jdk.vm.ci.code.DebugInfo from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<task_queued compile_id='86' method='java/net/URLClassLoader access$000 (Ljava/net/URLClassLoader;)Lsun/misc/URLClassPath;' bytes='5' count='128' iicount='128' level='1' stamp='0.354' comment='tiered' hot_count='128'/>
<task_queued compile_id='87' method='sun/misc/URLClassPath$JarLoader access$700 (Lsun/misc/URLClassPath$JarLoader;)Ljava/util/jar/JarFile;' bytes='5' count='128' iicount='128' level='1' stamp='0.354' comment='tiered' hot_count='128'/>
[Loaded jdk.vm.ci.code.RegisterSaveLayout from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/String.replace  [0x00007fab741383a0, 0x00007fab74138a50]  1712 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61898258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = char
  # parm1:    rcx       = char
  #           [sp+0x60]  (sp of caller)
  0x00007fab741383a0: mov    0x8(%rsi),%r10d
  0x00007fab741383a4: shl    $0x3,%r10
  0x00007fab741383a8: cmp    %rax,%r10
  0x00007fab741383ab: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab741383b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab741383bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab741383c0: mov    %eax,-0x14000(%rsp)
  0x00007fab741383c7: push   %rbp
  0x00007fab741383c8: sub    $0x50,%rsp
  0x00007fab741383cc: mov    %rdx,%r8
  0x00007fab741383cf: mov    %rcx,%r9
  0x00007fab741383d2: movabs $0x7fab61b8ec38,%rbx  ;   {metadata(method data for {method} {0x00007fab61898258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741383dc: mov    0xfc(%rbx),%edx
  0x00007fab741383e2: add    $0x8,%edx
  0x00007fab741383e5: mov    %edx,0xfc(%rbx)
  0x00007fab741383eb: movabs $0x7fab61898258,%rbx  ;   {metadata({method} {0x00007fab61898258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741383f5: and    $0x1ff8,%edx
  0x00007fab741383fb: cmp    $0x0,%edx
  0x00007fab741383fe: je     0x00007fab741388a7  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@0 (line 2067)

  0x00007fab74138404: cmp    %r9d,%r8d
  0x00007fab74138407: movabs $0x7fab61b8ec38,%rbx  ;   {metadata(method data for {method} {0x00007fab61898258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74138411: movabs $0x130,%rdx
  0x00007fab7413841b: je     0x00007fab7413842b
  0x00007fab74138421: movabs $0x140,%rdx
  0x00007fab7413842b: mov    (%rbx,%rdx,1),%rdi
  0x00007fab7413842f: lea    0x1(%rdi),%rdi
  0x00007fab74138433: mov    %rdi,(%rbx,%rdx,1)
  0x00007fab74138437: je     0x00007fab74138898  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@2 (line 2067)

  0x00007fab7413843d: mov    0xc(%rsi),%r11d
  0x00007fab74138441: shl    $0x3,%r11          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@6 (line 2068)

  0x00007fab74138445: mov    0xc(%r11),%r13d    ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ; implicit exception: dispatches to 0x00007fab741388be
  0x00007fab74138449: mov    $0xffffffff,%ebx
  0x00007fab7413844e: jmpq   0x00007fab741384df  ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@20 (line 2072)

  0x00007fab74138453: nopl   0x0(%rax,%rax,1)
  0x00007fab74138458: movslq %r14d,%rbx
  0x00007fab7413845b: cmp    0xc(%r11),%r14d
  0x00007fab7413845f: jae    0x00007fab741388c3
  0x00007fab74138465: movzwl 0x10(%r11,%rbx,2),%ebx  ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@33 (line 2073)

  0x00007fab7413846b: movabs $0x7fab61b8ec38,%rdx  ;   {metadata(method data for {method} {0x00007fab61898258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74138475: mov    0x100(%rdx),%edi
  0x00007fab7413847b: add    $0x8,%edi
  0x00007fab7413847e: mov    %edi,0x100(%rdx)
  0x00007fab74138484: movabs $0x7fab61898258,%rdx  ;   {metadata({method} {0x00007fab61898258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7413848e: and    $0xfff8,%edi
  0x00007fab74138494: cmp    $0x0,%edi
  0x00007fab74138497: je     0x00007fab741388cc  ; OopMap{rsi=Oop r11=Oop off=253}
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@35 (line 2073)

  0x00007fab7413849d: test   %eax,0x1b6a9c5d(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab741384a3: cmp    %r8d,%ebx
  0x00007fab741384a6: movabs $0x7fab61b8ec38,%rbx  ;   {metadata(method data for {method} {0x00007fab61898258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741384b0: movabs $0x170,%rdx
  0x00007fab741384ba: jne    0x00007fab741384ca
  0x00007fab741384c0: movabs $0x180,%rdx
  0x00007fab741384ca: mov    (%rbx,%rdx,1),%rdi
  0x00007fab741384ce: lea    0x1(%rdi),%rdi
  0x00007fab741384d2: mov    %rdi,(%rbx,%rdx,1)
  0x00007fab741384d6: je     0x00007fab74138523  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@35 (line 2073)

  0x00007fab741384dc: mov    %r14,%rbx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@20 (line 2072)

  0x00007fab741384df: mov    %rbx,%r14
  0x00007fab741384e2: inc    %r14d
  0x00007fab741384e5: cmp    %r13d,%r14d
  0x00007fab741384e8: movabs $0x7fab61b8ec38,%rbx  ;   {metadata(method data for {method} {0x00007fab61898258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741384f2: movabs $0x150,%rdx
  0x00007fab741384fc: jge    0x00007fab7413850c
  0x00007fab74138502: movabs $0x160,%rdx
  0x00007fab7413850c: mov    (%rbx,%rdx,1),%rdi
  0x00007fab74138510: lea    0x1(%rdi),%rdi
  0x00007fab74138514: mov    %rdi,(%rbx,%rdx,1)
  0x00007fab74138518: jge    0x00007fab74138533
  0x00007fab7413851e: jmpq   0x00007fab74138458  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@26 (line 2072)

  0x00007fab74138523: movabs $0x7fab61b8ec38,%rbx  ;   {metadata(method data for {method} {0x00007fab61898258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7413852d: incl   0x190(%rbx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@38 (line 2074)

  0x00007fab74138533: cmp    %r13d,%r14d
  0x00007fab74138536: movabs $0x7fab61b8ec38,%rbx  ;   {metadata(method data for {method} {0x00007fab61898258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74138540: movabs $0x1a8,%rdx
  0x00007fab7413854a: jge    0x00007fab7413855a
  0x00007fab74138550: movabs $0x1b8,%rdx
  0x00007fab7413855a: mov    (%rbx,%rdx,1),%rdi
  0x00007fab7413855e: lea    0x1(%rdi),%rdi
  0x00007fab74138562: mov    %rdi,(%rbx,%rdx,1)
  0x00007fab74138566: jge    0x00007fab74138898  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@44 (line 2077)

  0x00007fab7413856c: mov    %r13,%rbx
  0x00007fab7413856f: movabs $0x7c00001f8,%rdx  ;   {metadata({type array char})}
  0x00007fab74138579: movslq %ebx,%rbx
  0x00007fab7413857c: mov    %rbx,%rdi
  0x00007fab7413857f: cmp    $0xffffff,%rbx
  0x00007fab74138586: ja     0x00007fab741388e3
  0x00007fab7413858c: movabs $0x17,%rsi
  0x00007fab74138596: lea    (%rsi,%rbx,2),%rsi
  0x00007fab7413859a: and    $0xfffffffffffffff8,%rsi
  0x00007fab7413859e: mov    0x60(%r15),%rax
  0x00007fab741385a2: lea    (%rax,%rsi,1),%rsi
  0x00007fab741385a6: cmp    0x70(%r15),%rsi
  0x00007fab741385aa: ja     0x00007fab741388e3
  0x00007fab741385b0: mov    %rsi,0x60(%r15)
  0x00007fab741385b4: sub    %rax,%rsi
  0x00007fab741385b7: movq   $0x1,(%rax)
  0x00007fab741385be: mov    %rdx,%rcx
  0x00007fab741385c1: shr    $0x3,%rcx
  0x00007fab741385c5: mov    %ecx,0x8(%rax)
  0x00007fab741385c8: mov    %ebx,0xc(%rax)
  0x00007fab741385cb: sub    $0x10,%rsi
  0x00007fab741385cf: je     0x00007fab741385e6
  0x00007fab741385d5: xor    %rbx,%rbx
  0x00007fab741385d8: shr    $0x3,%rsi
  0x00007fab741385dc: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fab741385e1: dec    %rsi
  0x00007fab741385e4: jne    0x00007fab741385dc
  0x00007fab741385e6: mov    %rax,%rbx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@48 (line 2078)

  0x00007fab741385e9: mov    $0x0,%edx
  0x00007fab741385ee: jmpq   0x00007fab74138666  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@55 (line 2079)

  0x00007fab741385f3: nopl   0x0(%rax,%rax,1)
  0x00007fab741385f8: movslq %edx,%rsi
  0x00007fab741385fb: cmp    0xc(%r11),%edx
  0x00007fab741385ff: jae    0x00007fab741388ed
  0x00007fab74138605: movzwl 0x10(%r11,%rsi,2),%esi  ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@70 (line 2080)

  0x00007fab7413860b: movslq %edx,%rdi
  0x00007fab7413860e: cmp    0xc(%rbx),%edx
  0x00007fab74138611: jae    0x00007fab741388f6
  0x00007fab74138617: mov    %si,0x10(%rbx,%rdi,2)  ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@71 (line 2080)

  0x00007fab7413861c: inc    %edx
  0x00007fab7413861e: movabs $0x7fab61b8ec38,%rsi  ;   {metadata(method data for {method} {0x00007fab61898258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74138628: mov    0x100(%rsi),%edi
  0x00007fab7413862e: add    $0x8,%edi
  0x00007fab74138631: mov    %edi,0x100(%rsi)
  0x00007fab74138637: movabs $0x7fab61898258,%rsi  ;   {metadata({method} {0x00007fab61898258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74138641: and    $0xfff8,%edi
  0x00007fab74138647: cmp    $0x0,%edi
  0x00007fab7413864a: je     0x00007fab741388ff  ; OopMap{r11=Oop rbx=Oop off=688}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@75 (line 2079)

  0x00007fab74138650: test   %eax,0x1b6a9aaa(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab74138656: movabs $0x7fab61b8ec38,%rsi  ;   {metadata(method data for {method} {0x00007fab61898258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74138660: incl   0x1e8(%rsi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@75 (line 2079)

  0x00007fab74138666: cmp    %r14d,%edx
  0x00007fab74138669: movabs $0x7fab61b8ec38,%rsi  ;   {metadata(method data for {method} {0x00007fab61898258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74138673: movabs $0x1c8,%rdi
  0x00007fab7413867d: jge    0x00007fab7413868d
  0x00007fab74138683: movabs $0x1d8,%rdi
  0x00007fab7413868d: mov    (%rsi,%rdi,1),%rax
  0x00007fab74138691: lea    0x1(%rax),%rax
  0x00007fab74138695: mov    %rax,(%rsi,%rdi,1)
  0x00007fab74138699: jge    0x00007fab74138764
  0x00007fab7413869f: jmpq   0x00007fab741385f8  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@59 (line 2079)

  0x00007fab741386a4: nopl   0x0(%rax)
  0x00007fab741386a8: movslq %r14d,%rdx
  0x00007fab741386ab: cmp    0xc(%r11),%r14d
  0x00007fab741386af: jae    0x00007fab74138916
  0x00007fab741386b5: movzwl 0x10(%r11,%rdx,2),%edx  ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@88 (line 2083)

  0x00007fab741386bb: cmp    %r8d,%edx
  0x00007fab741386be: movabs $0x7fab61b8ec38,%rsi  ;   {metadata(method data for {method} {0x00007fab61898258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741386c8: movabs $0x220,%rdi
  0x00007fab741386d2: jne    0x00007fab741386e2
  0x00007fab741386d8: movabs $0x230,%rdi
  0x00007fab741386e2: mov    (%rsi,%rdi,1),%rax
  0x00007fab741386e6: lea    0x1(%rax),%rax
  0x00007fab741386ea: mov    %rax,(%rsi,%rdi,1)
  0x00007fab741386ee: jne    0x00007fab74138707  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@98 (line 2084)

  0x00007fab741386f4: movabs $0x7fab61b8ec38,%rdx  ;   {metadata(method data for {method} {0x00007fab61898258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741386fe: incl   0x240(%rdx)
  0x00007fab74138704: mov    %r9,%rdx           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@102 (line 2084)

  0x00007fab74138707: movslq %r14d,%rsi
  0x00007fab7413870a: cmp    0xc(%rbx),%r14d
  0x00007fab7413870e: jae    0x00007fab7413891f
  0x00007fab74138714: mov    %dx,0x10(%rbx,%rsi,2)  ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@107 (line 2084)

  0x00007fab74138719: inc    %r14d
  0x00007fab7413871c: movabs $0x7fab61b8ec38,%rdx  ;   {metadata(method data for {method} {0x00007fab61898258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74138726: mov    0x100(%rdx),%esi
  0x00007fab7413872c: add    $0x8,%esi
  0x00007fab7413872f: mov    %esi,0x100(%rdx)
  0x00007fab74138735: movabs $0x7fab61898258,%rdx  ;   {metadata({method} {0x00007fab61898258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7413873f: and    $0xfff8,%esi
  0x00007fab74138745: cmp    $0x0,%esi
  0x00007fab74138748: je     0x00007fab74138928  ; OopMap{r11=Oop rbx=Oop off=942}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@111 (line 2086)

  0x00007fab7413874e: test   %eax,0x1b6a99ac(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab74138754: movabs $0x7fab61b8ec38,%rdx  ;   {metadata(method data for {method} {0x00007fab61898258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7413875e: incl   0x258(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@111 (line 2086)

  0x00007fab74138764: cmp    %r13d,%r14d
  0x00007fab74138767: movabs $0x7fab61b8ec38,%rdx  ;   {metadata(method data for {method} {0x00007fab61898258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74138771: movabs $0x200,%rsi
  0x00007fab7413877b: jge    0x00007fab7413878b
  0x00007fab74138781: movabs $0x210,%rsi
  0x00007fab7413878b: mov    (%rdx,%rsi,1),%rdi
  0x00007fab7413878f: lea    0x1(%rdi),%rdi
  0x00007fab74138793: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab74138797: jl     0x00007fab741386a8  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@81 (line 2082)

  0x00007fab7413879d: movabs $0x7c0001610,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007fab741387a7: mov    0x60(%r15),%rax
  0x00007fab741387ab: lea    0x18(%rax),%rdi
  0x00007fab741387af: cmp    0x70(%r15),%rdi
  0x00007fab741387b3: ja     0x00007fab7413893f
  0x00007fab741387b9: mov    %rdi,0x60(%r15)
  0x00007fab741387bd: mov    0xa8(%rdx),%rcx
  0x00007fab741387c4: mov    %rcx,(%rax)
  0x00007fab741387c7: mov    %rdx,%rcx
  0x00007fab741387ca: shr    $0x3,%rcx
  0x00007fab741387ce: mov    %ecx,0x8(%rax)
  0x00007fab741387d1: xor    %rcx,%rcx
  0x00007fab741387d4: mov    %ecx,0xc(%rax)
  0x00007fab741387d7: xor    %rcx,%rcx
  0x00007fab741387da: mov    %rcx,0x10(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@114 (line 2087)

  0x00007fab741387de: mov    %rax,%rsi
  0x00007fab741387e1: movabs $0x7fab61b8ec38,%rdi  ;   {metadata(method data for {method} {0x00007fab61898258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741387eb: addq   $0x1,0x270(%rdi)
  0x00007fab741387f3: movabs $0x7fab61b8eef8,%rsi  ;   {metadata(method data for {method} {0x00007fab61895490} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741387fd: mov    0xfc(%rsi),%edi
  0x00007fab74138803: add    $0x8,%edi
  0x00007fab74138806: mov    %edi,0xfc(%rsi)
  0x00007fab7413880c: movabs $0x7fab61895490,%rsi  ;   {metadata({method} {0x00007fab61895490} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74138816: and    $0x7ffff8,%edi
  0x00007fab7413881c: cmp    $0x0,%edi
  0x00007fab7413881f: je     0x00007fab7413894c
  0x00007fab74138825: mov    %rax,%rsi
  0x00007fab74138828: movabs $0x7fab61b8eef8,%rdi  ;   {metadata(method data for {method} {0x00007fab61895490} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74138832: addq   $0x1,0x130(%rdi)
  0x00007fab7413883a: movabs $0x7fab61a342a0,%rsi  ;   {metadata(method data for {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab74138844: mov    0xfc(%rsi),%edi
  0x00007fab7413884a: add    $0x8,%edi
  0x00007fab7413884d: mov    %edi,0xfc(%rsi)
  0x00007fab74138853: movabs $0x7fab618914d8,%rsi  ;   {metadata({method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7413885d: and    $0x7ffff8,%edi
  0x00007fab74138863: cmp    $0x0,%edi
  0x00007fab74138866: je     0x00007fab74138963
  0x00007fab7413886c: mov    %rbx,%r10
  0x00007fab7413886f: shr    $0x3,%r10
  0x00007fab74138873: mov    %r10d,0xc(%rax)
  0x00007fab74138877: mov    %rax,%rsi
  0x00007fab7413887a: shr    $0x9,%rsi
  0x00007fab7413887e: movabs $0x7fab701ff000,%rdi
  0x00007fab74138888: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)
                                                ; - java.lang.String::replace@121 (line 2087)

  0x00007fab7413888c: add    $0x50,%rsp
  0x00007fab74138890: pop    %rbp
  0x00007fab74138891: test   %eax,0x1b6a9869(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74138897: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@124 (line 2087)

  0x00007fab74138898: mov    %rsi,%rax
  0x00007fab7413889b: add    $0x50,%rsp
  0x00007fab7413889f: pop    %rbp
  0x00007fab741388a0: test   %eax,0x1b6a985a(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741388a6: retq   
  0x00007fab741388a7: mov    %rbx,0x8(%rsp)
  0x00007fab741388ac: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741388b4: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=1305}
                                                ;*synchronization entry
                                                ; - java.lang.String::replace@-1 (line 2067)
                                                ;   {runtime_call}
  0x00007fab741388b9: jmpq   0x00007fab74138404
  0x00007fab741388be: callq  0x00007fab740fc000  ; OopMap{rsi=Oop r11=Oop off=1315}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ;   {runtime_call}
  0x00007fab741388c3: mov    %r14,(%rsp)
  0x00007fab741388c7: callq  0x00007fab740fb940  ; OopMap{rsi=Oop r11=Oop off=1324}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@33 (line 2073)
                                                ;   {runtime_call}
  0x00007fab741388cc: mov    %rdx,0x8(%rsp)
  0x00007fab741388d1: movq   $0x23,(%rsp)
  0x00007fab741388d9: callq  0x00007fab741005e0  ; OopMap{rsi=Oop r11=Oop off=1342}
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@35 (line 2073)
                                                ;   {runtime_call}
  0x00007fab741388de: jmpq   0x00007fab7413849d
  0x00007fab741388e3: callq  0x00007fab740fd020  ; OopMap{r11=Oop off=1352}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@48 (line 2078)
                                                ;   {runtime_call}
  0x00007fab741388e8: jmpq   0x00007fab741385e6
  0x00007fab741388ed: mov    %rdx,(%rsp)
  0x00007fab741388f1: callq  0x00007fab740fb940  ; OopMap{r11=Oop rbx=Oop off=1366}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@70 (line 2080)
                                                ;   {runtime_call}
  0x00007fab741388f6: mov    %rdx,(%rsp)
  0x00007fab741388fa: callq  0x00007fab740fb940  ; OopMap{r11=Oop rbx=Oop off=1375}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@71 (line 2080)
                                                ;   {runtime_call}
  0x00007fab741388ff: mov    %rsi,0x8(%rsp)
  0x00007fab74138904: movq   $0x4b,(%rsp)
  0x00007fab7413890c: callq  0x00007fab741005e0  ; OopMap{r11=Oop rbx=Oop off=1393}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@75 (line 2079)
                                                ;   {runtime_call}
  0x00007fab74138911: jmpq   0x00007fab74138650
  0x00007fab74138916: mov    %r14,(%rsp)
  0x00007fab7413891a: callq  0x00007fab740fb940  ; OopMap{r11=Oop rbx=Oop off=1407}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@88 (line 2083)
                                                ;   {runtime_call}
  0x00007fab7413891f: mov    %r14,(%rsp)
  0x00007fab74138923: callq  0x00007fab740fb940  ; OopMap{r11=Oop rbx=Oop off=1416}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@107 (line 2084)
                                                ;   {runtime_call}
  0x00007fab74138928: mov    %rdx,0x8(%rsp)
  0x00007fab7413892d: movq   $0x6f,(%rsp)
  0x00007fab74138935: callq  0x00007fab741005e0  ; OopMap{r11=Oop rbx=Oop off=1434}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@111 (line 2086)
                                                ;   {runtime_call}
  0x00007fab7413893a: jmpq   0x00007fab7413874e
  0x00007fab7413893f: mov    %rdx,%rdx
  0x00007fab74138942: callq  0x00007fab740fc760  ; OopMap{rbx=Oop off=1447}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@114 (line 2087)
                                                ;   {runtime_call}
  0x00007fab74138947: jmpq   0x00007fab741387de
  0x00007fab7413894c: mov    %rsi,0x8(%rsp)
  0x00007fab74138951: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74138959: callq  0x00007fab741005e0  ; OopMap{rbx=Oop rax=Oop off=1470}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 609)
                                                ; - java.lang.String::replace@121 (line 2087)
                                                ;   {runtime_call}
  0x00007fab7413895e: jmpq   0x00007fab74138825
  0x00007fab74138963: mov    %rsi,0x8(%rsp)
  0x00007fab74138968: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74138970: callq  0x00007fab741005e0  ; OopMap{rbx=Oop rax=Oop off=1493}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.String::replace@121 (line 2087)
                                                ;   {runtime_call}
  0x00007fab74138975: jmpq   0x00007fab7413886c
  0x00007fab7413897a: nop
  0x00007fab7413897b: nop
  0x00007fab7413897c: mov    0x2c0(%r15),%rax
  0x00007fab74138983: movabs $0x0,%r10
  0x00007fab7413898d: mov    %r10,0x2c0(%r15)
  0x00007fab74138994: movabs $0x0,%r10
  0x00007fab7413899e: mov    %r10,0x2c8(%r15)
  0x00007fab741389a5: add    $0x50,%rsp
  0x00007fab741389a9: pop    %rbp
  0x00007fab741389aa: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab741389af: hlt    
  0x00007fab741389b0: hlt    
  0x00007fab741389b1: hlt    
  0x00007fab741389b2: hlt    
  0x00007fab741389b3: hlt    
  0x00007fab741389b4: hlt    
  0x00007fab741389b5: hlt    
  0x00007fab741389b6: hlt    
  0x00007fab741389b7: hlt    
  0x00007fab741389b8: hlt    
  0x00007fab741389b9: hlt    
  0x00007fab741389ba: hlt    
  0x00007fab741389bb: hlt    
  0x00007fab741389bc: hlt    
  0x00007fab741389bd: hlt    
  0x00007fab741389be: hlt    
  0x00007fab741389bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab741389c0: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab741389c5: mov    %rsp,-0x28(%rsp)
  0x00007fab741389ca: sub    $0x80,%rsp
  0x00007fab741389d1: mov    %rax,0x78(%rsp)
  0x00007fab741389d6: mov    %rcx,0x70(%rsp)
  0x00007fab741389db: mov    %rdx,0x68(%rsp)
  0x00007fab741389e0: mov    %rbx,0x60(%rsp)
  0x00007fab741389e5: mov    %rbp,0x50(%rsp)
  0x00007fab741389ea: mov    %rsi,0x48(%rsp)
  0x00007fab741389ef: mov    %rdi,0x40(%rsp)
  0x00007fab741389f4: mov    %r8,0x38(%rsp)
  0x00007fab741389f9: mov    %r9,0x30(%rsp)
  0x00007fab741389fe: mov    %r10,0x28(%rsp)
  0x00007fab74138a03: mov    %r11,0x20(%rsp)
  0x00007fab74138a08: mov    %r12,0x18(%rsp)
  0x00007fab74138a0d: mov    %r13,0x10(%rsp)
  0x00007fab74138a12: mov    %r14,0x8(%rsp)
  0x00007fab74138a17: mov    %r15,(%rsp)
  0x00007fab74138a1b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74138a25: movabs $0x7fab741389c5,%rsi  ;   {internal_word}
  0x00007fab74138a2f: mov    %rsp,%rdx
  0x00007fab74138a32: and    $0xfffffffffffffff0,%rsp
  0x00007fab74138a36: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74138a3b: hlt    
[Deopt Handler Code]
  0x00007fab74138a3c: movabs $0x7fab74138a3c,%r10  ;   {section_word}
  0x00007fab74138a46: push   %r10
  0x00007fab74138a48: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74138a4d: hlt    
  0x00007fab74138a4e: hlt    
  0x00007fab74138a4f: hlt    
<nmethod compile_id='82' compiler='C1' level='3' entry='0x00007fab741383a0' size='3384' address='0x00007fab741381d0' relocation_offset='312' insts_offset='464' stub_offset='2032' scopes_data_offset='2200' scopes_pcs_offset='2640' dependencies_offset='3360' nul_chk_table_offset='3368' metadata_offset='2176' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='174' backedge_count='5598' iicount='174' stamp='0.356'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.code.BytecodeFrame from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/jar/JarFile.getJarEntry  [0x00007fab74139100, 0x00007fab74139718]  1560 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61b66fe8} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;
  # this:     rsi:rsi   = &apos;java/util/jar/JarFile&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0xa0]  (sp of caller)
  0x00007fab74139100: mov    0x8(%rsi),%r10d
  0x00007fab74139104: shl    $0x3,%r10
  0x00007fab74139108: 
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.code.Location from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
cmp    %rax,%r10
  0x00007fab7413910b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74139111: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7413911c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74139120: mov    %eax,-0x14000(%rsp)
  0x00007fab74139127: push   %rbp
  0x00007fab74139128: sub    $0x90,%rsp
  0x00007fab7413912f: movabs $0x7fab61b8f078,%rdi  ;   {metadata(method data for {method} {0x00007fab61b66fe8} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab74139139: mov    0xfc(%rdi),%ebx
  0x00007fab7413913f: add    $0x8,%ebx
  0x00007fab74139142: mov    %ebx,0xfc(%rdi)
  0x00007fab74139148: movabs $0x7fab61b66fe8,%rdi  ;   {metadata({method} {0x00007fab61b66fe8} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab74139152: and    $0x1ff8,%ebx
  0x00007fab74139158: cmp    $0x0,%ebx
  0x00007fab7413915b: je     0x00007fab741395ab  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@0 (line 223)

  0x00007fab74139161: mov    %rsi,%rdi
  0x00007fab74139164: movabs $0x7fab61b8f078,%rbx  ;   {metadata(method data for {method} {0x00007fab61b66fe8} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab7413916e: movabs $0x7c004e150,%r10  ;   {metadata(&apos;java/util/jar/JarFile&apos;)}
  0x00007fab74139178: mov    %r10,0x140(%rbx)
  0x00007fab7413917f: addq   $0x1,0x148(%rbx)
  0x00007fab74139187: movabs $0x7fab61b8f320,%rdi  ;   {metadata(method data for {method} {0x00007fab61b670b8} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab74139191: mov    0xfc(%rdi),%ebx
  0x00007fab74139197: add    $0x8,%ebx
  0x00007fab7413919a: mov    %ebx,0xfc(%rdi)
  0x00007fab741391a0: movabs $0x7fab61b670b8,%rdi  ;   {metadata({method} {0x00007fab61b670b8} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab741391aa: and    $0x7ffff8,%ebx
  0x00007fab741391b0: cmp    $0x0,%ebx
  0x00007fab741391b3: je     0x00007fab741395c2
  0x00007fab741391b9: mov    %rsi,%rdi
  0x00007fab741391bc: movabs $0x7fab61b8f320,%rbx  ;   {metadata(method data for {method} {0x00007fab61b670b8} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab741391c6: addq   $0x1,0x130(%rbx)
  0x00007fab741391ce: mov    %rsi,%rdi
  0x00007fab741391d1: mov    %rdi,%rsi          ;*invokespecial getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@2 (line 240)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)

  0x00007fab741391d4: mov    %rdi,0x70(%rsp)
  0x00007fab741391d9: nop
  0x00007fab741391da: nop
  0x00007fab741391db: nop
  0x00007fab741391dc: nop
  0x00007fab741391dd: nop
  0x00007fab741391de: nop
  0x00007fab741391df: callq  0x00007fab74047d60  ; OopMap{[112]=Oop off=228}
                                                ;*invokespecial getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@2 (line 240)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ;   {optimized virtual_call}
  0x00007fab741391e4: mov    %rax,%rbx          ;*invokespecial getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@2 (line 240)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)

  0x00007fab741391e7: cmp    $0x0,%rbx
  0x00007fab741391eb: movabs $0x7fab61b8f320,%rdx  ;   {metadata(method data for {method} {0x00007fab61b670b8} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab741391f5: movabs $0x140,%rsi
  0x00007fab741391ff: je     0x00007fab7413920f
  0x00007fab74139205: movabs $0x150,%rsi
  0x00007fab7413920f: mov    (%rdx,%rsi,1),%rdi
  0x00007fab74139213: lea    0x1(%rdi),%rdi
  0x00007fab74139217: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab7413921b: je     0x00007fab74139356  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@7 (line 241)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)

  0x00007fab74139221: mov    0x70(%rsp),%r8
  0x00007fab74139226: movabs $0x7c0050ba0,%rdx  ;   {metadata(&apos;java/util/jar/JarFile$JarFileEntry&apos;)}
  0x00007fab74139230: mov    0x60(%r15),%rax
  0x00007fab74139234: lea    0x60(%rax),%rdi
  0x00007fab74139238: cmp    0x70(%r15),%rdi
  0x00007fab7413923c: ja     0x00007fab741395d9
  0x00007fab74139242: mov    %rdi,0x60(%r15)
  0x00007fab74139246: mov    0xa8(%rdx),%rcx
  0x00007fab7413924d: mov    %rcx,(%rax)
  0x00007fab74139250: mov    %rdx,%rcx
  0x00007fab74139253: shr    $0x3,%rcx
  0x00007fab74139257: mov    %ecx,0x8(%rax)
  0x00007fab7413925a: xor    %rcx,%rcx
  0x00007fab7413925d: mov    %ecx,0xc(%rax)
  0x00007fab74139260: xor    %rcx,%rcx
  0x00007fab74139263: movabs $0xa,%rdi
  0x00007fab7413926d: mov    %rcx,0x8(%rax,%rdi,8)
  0x00007fab74139272: dec    %rdi
  0x00007fab74139275: jne    0x00007fab7413926d  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@10 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)

  0x00007fab74139277: mov    %rax,%rdx
  0x00007fab7413927a: movabs $0x7fab61b8f320,%rsi  ;   {metadata(method data for {method} {0x00007fab61b670b8} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab74139284: addq   $0x1,0x160(%rsi)
  0x00007fab7413928c: movabs $0x7fab61b8f780,%rdx  ;   {metadata(method data for {method} {0x00007fab61b7e5a8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/jar/JarFile;Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarFile$JarFileEntry&apos;)}
  0x00007fab74139296: mov    0xfc(%rdx),%esi
  0x00007fab7413929c: add    $0x8,%esi
  0x00007fab7413929f: mov    %esi,0xfc(%rdx)
  0x00007fab741392a5: movabs $0x7fab61b7e5a8,%rdx  ;   {metadata({method} {0x00007fab61b7e5a8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/jar/JarFile;Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarFile$JarFileEntry&apos;)}
  0x00007fab741392af: and    $0x7ffff8,%esi
  0x00007fab741392b5: cmp    $0x0,%esi
  0x00007fab741392b8: je     0x00007fab741395e6
  0x00007fab741392be: mov    %r8,%r10
  0x00007fab741392c1: shr    $0x3,%r10
  0x00007fab741392c5: mov    %r10d,0x58(%rax)
  0x00007fab741392c9: mov    %rax,%rdx
  0x00007fab741392cc: shr    $0x9,%rdx
  0x00007fab741392d0: movabs $0x7fab701ff000,%rsi
  0x00007fab741392da: movb   $0x0,(%rdx,%rsi,1)  ;*putfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@2 (line 286)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)

  0x00007fab741392de: mov    %rax,%rdx
  0x00007fab741392e1: movabs $0x7fab61b8f780,%rsi  ;   {metadata(method data for {method} {0x00007fab61b7e5a8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/jar/JarFile;Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarFile$JarFileEntry&apos;)}
  0x00007fab741392eb: addq   $0x1,0x130(%rsi)
  0x00007fab741392f3: movabs $0x7fab61b8f900,%rdx  ;   {metadata(method data for {method} {0x00007fab61b7ecb8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarEntry&apos;)}
  0x00007fab741392fd: mov    0xfc(%rdx),%esi
  0x00007fab74139303: add    $0x8,%esi
  0x00007fab74139306: mov    %esi,0xfc(%rdx)
  0x00007fab7413930c: movabs $0x7fab61b7ecb8,%rdx  ;   {metadata({method} {0x00007fab61b7ecb8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarEntry&apos;)}
  0x00007fab74139316: and    $0x7ffff8,%esi
  0x00007fab7413931c: cmp    $0x0,%esi
  0x00007fab7413931f: je     0x00007fab741395fd
  0x00007fab74139325: mov    %rax,%rdx
  0x00007fab74139328: movabs $0x7fab61b8f900,%rsi  ;   {metadata(method data for {method} {0x00007fab61b7ecb8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarEntry&apos;)}
  0x00007fab74139332: addq   $0x1,0x130(%rsi)
  0x00007fab7413933a: mov    %rbx,%rdx
  0x00007fab7413933d: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarEntry::&lt;init&gt;@2 (line 62)
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@7 (line 287)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)

  0x00007fab74139340: mov    %rax,0x78(%rsp)
  0x00007fab74139345: nop
  0x00007fab74139346: nop
  0x00007fab74139347: callq  0x00007fab74047d60  ; OopMap{[120]=Oop off=588}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarEntry::&lt;init&gt;@2 (line 62)
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@7 (line 287)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ;   {optimized virtual_call}
  0x00007fab7413934c: mov    0x78(%rsp),%rax
  0x00007fab74139351: jmpq   0x00007fab74139360
  0x00007fab74139356: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fab74139360: cmp    $0x0,%rax
  0x00007fab74139364: jne    0x00007fab7413937f
  0x00007fab74139366: movabs $0x7fab61b8f078,%rdi  ;   {metadata(method data for {method} {0x00007fab61b66fe8} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab74139370: orl    $0x100,0x1c0(%rdi)
  0x00007fab7413937a: jmpq   0x00007fab7413959c
  0x00007fab7413937f: movabs $0x7c00508e8,%rbx  ;   {metadata(&apos;java/util/jar/JarEntry&apos;)}
  0x00007fab74139389: mov    0x8(%rax),%edi
  0x00007fab7413938c: shl    $0x3,%rdi
  0x00007fab74139390: cmp    0x38(%rdi),%rbx
  0x00007fab74139394: jne    0x00007fab74139580
  0x00007fab7413939a: movabs $0x7fab61b8f078,%rdi  ;   {metadata(method data for {method} {0x00007fab61b66fe8} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab741393a4: mov    0x8(%rax),%ebx
  0x00007fab741393a7: shl    $0x3,%rbx
  0x00007fab741393ab: cmp    0x1d8(%rdi),%rbx
  0x00007fab741393b2: jne    0x00007fab741393c1
  0x00007fab741393b4: addq   $0x1,0x1e0(%rdi)
  0x00007fab741393bc: jmpq   0x00007fab7413959c
  0x00007fab741393c1: cmp    0x1e8(%rdi),%rbx
  0x00007fab741393c8: jne    0x00007fab741393d7
  0x00007fab741393ca: addq   $0x1,0x1f0(%rdi)
  0x00007fab741393d2: jmpq   0x00007fab7413959c
  0x00007fab741393d7: cmp    0x1f8(%rdi),%rbx
  0x00007fab741393de: jne    0x00007fab741393ed
  0x00007fab741393e0: addq   $0x1,0x200(%rdi)
  0x00007fab741393e8: jmpq   0x00007fab7413959c
  0x00007fab741393ed: cmp    0x208(%rdi),%rbx
  0x00007fab741393f4: jne    0x00007fab74139403
  0x00007fab741393f6: addq   $0x1,0x210(%rdi)
  0x00007fab741393fe: jmpq   0x00007fab7413959c
  0x00007fab74139403: cmp    0x218(%rdi),%rbx
  0x00007fab7413940a: jne    0x00007fab74139419
  0x00007fab7413940c: addq   $0x1,0x220(%rdi)
  0x00007fab74139414: jmpq   0x00007fab7413959c
  0x00007fab74139419: cmp    0x228(%rdi),%rbx
  0x00007fab74139420: jne    0x00007fab7413942f
  0x00007fab74139422: addq   $0x1,0x230(%rdi)
  0x00007fab7413942a: jmpq   0x00007fab7413959c
  0x00007fab7413942f: cmp    0x238(%rdi),%rbx
  0x00007fab74139436: jne    0x00007fab74139445
  0x00007fab74139438: addq   $0x1,0x240(%rdi)
  0x00007fab74139440: jmpq   0x00007fab7413959c
  0x00007fab74139445: cmp    0x248(%rdi),%rbx
  0x00007fab7413944c: jne    0x00007fab7413945b
  0x00007fab7413944e: addq   $0x1,0x250(%rdi)
  0x00007fab74139456: jmpq   0x00007fab7413959c
  0x00007fab7413945b: cmpq   $0x0,0x1d8(%rdi)
  0x00007fab74139466: jne    0x00007fab7413947f
  0x00007fab74139468: mov    %rbx,0x1d8(%rdi)
  0x00007fab7413946f: movq   $0x1,0x1e0(%rdi)
  0x00007fab7413947a: jmpq   0x00007fab7413959c
  0x00007fab7413947f: cmpq   $0x0,0x1e8(%rdi)
  0x00007fab7413948a: jne    0x00007fab741394a3
  0x00007fab7413948c: mov    %rbx,0x1e8(%rdi)
  0x00007fab74139493: movq   $0x1,0x1f0(%rdi)
  0x00007fab7413949e: jmpq   0x00007fab7413959c
  0x00007fab741394a3: cmpq   $0x0,0x1f8(%rdi)
  0x00007fab741394ae: jne    0x00007fab741394c7
  0x00007fab741394b0: mov    %rbx,0x1f8(%rdi)
  0x00007fab741394b7: movq   $0x1,0x200(%rdi)
  0x00007fab741394c2: jmpq   0x00007fab7413959c
  0x00007fab741394c7: cmpq   $0x0,0x208(%rdi)
  0x00007fab741394d2: jne    0x00007fab741394eb
  0x00007fab741394d4: mov    %rbx,0x208(%rdi)
  0x00007fab741394db: movq   $0x1,0x210(%rdi)
  0x00007fab741394e6: jmpq   0x00007fab7413959c
  0x00007fab741394eb: cmpq   $0x0,0x218(%rdi)
  0x00007fab741394f6: jne    0x00007fab7413950f
  0x00007fab741394f8: mov    %rbx,0x218(%rdi)
  0x00007fab741394ff: movq   $0x1,0x220(%rdi)
  0x00007fab7413950a: jmpq   0x00007fab7413959c
  0x00007fab7413950f: cmpq   $0x0,0x228(%rdi)
  0x00007fab7413951a: jne    0x00007fab74139533
  0x00007fab7413951c: mov    %rbx,0x228(%rdi)
  0x00007fab74139523: movq   $0x1,0x230(%rdi)
  0x00007fab7413952e: jmpq   0x00007fab7413959c
  0x00007fab74139533: cmpq   $0x0,0x238(%rdi)
  0x00007fab7413953e: jne    0x00007fab74139557
  0x00007fab74139540: mov    %rbx,0x238(%rdi)
  0x00007fab74139547: movq   $0x1,0x240(%rdi)
  0x00007fab74139552: jmpq   0x00007fab7413959c
  0x00007fab74139557: cmpq   $0x0,0x248(%rdi)
  0x00007fab74139562: jne    0x00007fab7413957b
  0x00007fab74139564: mov    %rbx,0x248(%rdi)
  0x00007fab7413956b: movq   $0x1,0x250(%rdi)
  0x00007fab74139576: jmpq   0x00007fab7413959c
  0x00007fab7413957b: jmpq   0x00007fab7413959c
  0x00007fab74139580: movabs $0x7fab61b8f078,%rdi  ;   {metadata(method data for {method} {0x00007fab61b66fe8} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab7413958a: subq   $0x1,0x1c8(%rdi)
  0x00007fab74139592: jmpq   0x00007fab74139614
  0x00007fab74139597: jmpq   0x00007fab7413959c  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@5 (line 223)

  0x00007fab7413959c: add    $0x90,%rsp
  0x00007fab741395a3: pop    %rbp
  0x00007fab741395a4: test   %eax,0x1b6a8b56(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741395aa: retq   
  0x00007fab741395ab: mov    %rdi,0x8(%rsp)
  0x00007fab741395b0: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741395b8: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop off=1213}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarFile::getJarEntry@-1 (line 223)
                                                ;   {runtime_call}
  0x00007fab741395bd: jmpq   0x00007fab74139161
  0x00007fab741395c2: mov    %rdi,0x8(%rsp)
  0x00007fab741395c7: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741395cf: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop off=1236}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarFile::getEntry@-1 (line 240)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ;   {runtime_call}
  0x00007fab741395d4: jmpq   0x00007fab741391b9
  0x00007fab741395d9: mov    %rdx,%rdx
  0x00007fab741395dc: callq  0x00007fab740fc760  ; OopMap{rbx=Oop r8=Oop off=1249}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@10 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ;   {runtime_call}
  0x00007fab741395e1: jmpq   0x00007fab74139277
  0x00007fab741395e6: mov    %rdx,0x8(%rsp)
  0x00007fab741395eb: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741395f3: callq  0x00007fab741005e0  ; OopMap{rbx=Oop r8=Oop rax=Oop off=1272}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@-1 (line 286)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ;   {runtime_call}
  0x00007fab741395f8: jmpq   0x00007fab741392be
  0x00007fab741395fd: mov    %rdx,0x8(%rsp)
  0x00007fab74139602: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413960a: callq  0x00007fab741005e0  ; OopMap{rbx=Oop rax=Oop off=1295}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarEntry::&lt;init&gt;@-1 (line 62)
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@7 (line 287)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ;   {runtime_call}
  0x00007fab7413960f: jmpq   0x00007fab74139325
  0x00007fab74139614: mov    %rax,(%rsp)
  0x00007fab74139618: callq  0x00007fab740fe2c0  ; OopMap{off=1309}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@5 (line 223)
                                                ;   {runtime_call}
  0x00007fab7413961d: nop
  0x00007fab7413961e: nop
  0x00007fab7413961f: mov    0x2c0(%r15),%rax
  0x00007fab74139626: movabs $0x0,%r10
  0x00007fab74139630: mov    %r10,0x2c0(%r15)
  0x00007fab74139637: movabs $0x0,%r10
  0x00007fab74139641: mov    %r10,0x2c8(%r15)
  0x00007fab74139648: add    $0x90,%rsp
  0x00007fab7413964f: pop    %rbp
  0x00007fab74139650: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74139655: hlt    
  0x00007fab74139656: hlt    
  0x00007fab74139657: hlt    
  0x00007fab74139658: hlt    
  0x00007fab74139659: hlt    
  0x00007fab7413965a: hlt    
  0x00007fab7413965b: hlt    
  0x00007fab7413965c: hlt    
  0x00007fab7413965d: hlt    
  0x00007fab7413965e: hlt    
  0x00007fab7413965f: hlt    
[Stub Code]
  0x00007fab74139660: nop                       ;   {no_reloc}
  0x00007fab74139661: nop
  0x00007fab74139662: nop
  0x00007fab74139663: nop
  0x00007fab74139664: nop
  0x00007fab74139665: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413966f: jmpq   0x00007fab7413966f  ;   {runtime_call}
  0x00007fab74139674: nop
  0x00007fab74139675: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413967f: jmpq   0x00007fab7413967f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74139684: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74139689: mov    %rsp,-0x28(%rsp)
  0x00007fab7413968e: sub    $0x80,%rsp
  0x00007fab74139695: mov    %rax,0x78(%rsp)
  0x00007fab7413969a: mov    %rcx,0x70(%rsp)
  0x00007fab7413969f: mov    %rdx,0x68(%rsp)
  0x00007fab741396a4: mov    %rbx,0x60(%rsp)
  0x00007fab741396a9: mov    %rbp,0x50(%rsp)
  0x00007fab741396ae: mov    %rsi,0x48(%rsp)
  0x00007fab741396b3: mov    %rdi,0x40(%rsp)
  0x00007fab741396b8: mov    %r8,0x38(%rsp)
  0x00007fab741396bd: mov    %r9,0x30(%rsp)
  0x00007fab741396c2: mov    %r10,0x28(%rsp)
  0x00007fab741396c7: mov    %r11,0x20(%rsp)
  0x00007fab741396cc: mov    %r12,0x18(%rsp)
  0x00007fab741396d1: mov    %r13,0x10(%rsp)
  0x00007fab741396d6: mov    %r14,0x8(%rsp)
  0x00007fab741396db: mov    %r15,(%rsp)
  0x00007fab741396df: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741396e9: movabs $0x7fab74139689,%rsi  ;   {internal_word}
  0x00007fab741396f3: mov    %rsp,%rdx
  0x00007fab741396f6: and    $0xfffffffffffffff0,%rsp
  0x00007fab741396fa: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741396ff: hlt    
[Deopt Handler Code]
  0x00007fab74139700: movabs $0x7fab74139700,%r10  ;   {section_word}
  0x00007fab7413970a: push   %r10
  0x00007fab7413970c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74139711: hlt    
  0x00007fab74139712: hlt    
  0x00007fab74139713: hlt    
  0x00007fab74139714: hlt    
  0x00007fab74139715: hlt    
  0x00007fab74139716: hlt    
  0x00007fab74139717: hlt    
<nmethod compile_id='84' compiler='C1' level='3' entry='0x00007fab74139100' size='2536' address='0x00007fab74138f50' relocation_offset='312' insts_offset='432' stub_offset='1808' scopes_data_offset='2032' scopes_pcs_offset='2240' dependencies_offset='2528' metadata_offset='1992' method='java/util/jar/JarFile getJarEntry (Ljava/lang/String;)Ljava/util/jar/JarEntry;' bytes='9' count='421' iicount='421' stamp='0.358'/>
----------------------------------------------------------------------
java/net/URL.getQuery  [0x00007fab74139ac0, 0x00007fab74139bd0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61930850} &apos;getQuery&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab74139ac0: mov    0x8(%rsi),%r10d
  0x00007fab74139ac4: shl    $0x3,%r10
  0x00007fab74139ac8: cmp    %rax,%r10
  0x00007fab74139acb: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74139ad1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74139adc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74139ae0: mov    %eax,-0x14000(%rsp)
  0x00007fab74139ae7: push   %rbp
  0x00007fab74139ae8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getQuery@0 (line 736)

  0x00007fab74139aec: mov    0x20(%rsi),%eax
  0x00007fab74139aef: shl    $0x3,%rax          ;*getfield query {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getQuery@1 (line 736)

  0x00007fab74139af3: add    $0x30,%rsp
  0x00007fab74139af7: pop    %rbp
  0x00007fab74139af8: test   %eax,0x1b6a8602(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74139afe: retq   
  0x00007fab74139aff: nop
  0x00007fab74139b00: nop
  0x00007fab74139b01: mov    0x2c0(%r15),%rax
  0x00007fab74139b08: movabs $0x0,%r10
  0x00007fab74139b12: mov    %r10,0x2c0(%r15)
  0x00007fab74139b19: movabs $0x0,%r10
  0x00007fab74139b23: mov    %r10,0x2c8(%r15)
  0x00007fab74139b2a: add    $0x30,%rsp
  0x00007fab74139b2e: pop    %rbp
  0x00007fab74139b2f: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74139b34: hlt    
  0x00007fab74139b35: hlt    
  0x00007fab74139b36: hlt    
  0x00007fab74139b37: hlt    
  0x00007fab74139b38: hlt    
  0x00007fab74139b39: hlt    
  0x00007fab74139b3a: hlt    
  0x00007fab74139b3b: hlt    
  0x00007fab74139b3c: hlt    
  0x00007fab74139b3d: hlt    
  0x00007fab74139b3e: hlt    
  0x00007fab74139b3f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74139b40: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74139b45: mov    %rsp,-0x28(%rsp)
  0x00007fab74139b4a: sub    $0x80,%rsp
  0x00007fab74139b51: mov    %rax,0x78(%rsp)
  0x00007fab74139b56: mov    %rcx,0x70(%rsp)
  0x00007fab74139b5b: mov    %rdx,0x68(%rsp)
  0x00007fab74139b60: mov    %rbx,0x60(%rsp)
  0x00007fab74139b65: mov    %rbp,0x50(%rsp)
  0x00007fab74139b6a: mov    %rsi,0x48(%rsp)
  0x00007fab74139b6f: mov    %rdi,0x40(%rsp)
  0x00007fab74139b74: mov    %r8,0x38(%rsp)
  0x00007fab74139b79: mov    %r9,0x30(%rsp)
  0x00007fab74139b7e: mov    %r10,0x28(%rsp)
  0x00007fab74139b83: mov    %r11,0x20(%rsp)
  0x00007fab74139b88: mov    %r12,0x18(%rsp)
  0x00007fab74139b8d: mov    %r13,0x10(%rsp)
  0x00007fab74139b92: mov    %r14,0x8(%rsp)
  0x00007fab74139b97: mov    %r15,(%rsp)
  0x00007fab74139b9b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74139ba5: movabs $0x7fab74139b45,%rsi  ;   {internal_word}
  0x00007fab74139baf: mov    %rsp,%rdx
  0x00007fab74139bb2: and    $0xfffffffffffffff0,%rsp
  0x00007fab74139bb6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74139bbb: hlt    
[Deopt Handler Code]
  0x00007fab74139bbc: movabs $0x7fab74139bbc,%r10  ;   {section_word}
  0x00007fab74139bc6: push   %r10
  0x00007fab74139bc8: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74139bcd: hlt    
  0x00007fab74139bce: hlt    
  0x00007fab74139bcf: hlt    
<nmethod compile_id='74' compiler='C1' level='1' entry='0x00007fab74139ac0' size='736' address='0x00007fab74139950' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/net/URL getQuery ()Ljava/lang/String;' bytes='5' count='174' iicount='174' stamp='0.359'/>
<writer thread='140373948942080'/>
<task_queued compile_id='88' method='java/util/zip/ZipFile access$000 (Ljava/util/zip/ZipFile;)Ljava/util/Map;' bytes='5' count='128' iicount='128' level='1' stamp='0.359' comment='tiered' hot_count='128'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/net/URL.getPort  [0x00007fab74139dc0, 0x00007fab74139ed0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61930ad0} &apos;getPort&apos; &apos;()I&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab74139dc0: mov    0x8(%rsi),%r10d
  0x00007fab74139dc4: shl    $0x3,%r10
  0x00007fab74139dc8: cmp    %rax,%r10
  0x00007fab74139dcb: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74139dd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74139ddc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74139de0: mov    %eax,-0x14000(%rsp)
  0x00007fab74139de7: push   %rbp
  0x00007fab74139de8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getPort@0 (line 777)

  0x00007fab74139dec: mov    0xc(%rsi),%eax     ;*getfield port {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getPort@1 (line 777)

  0x00007fab74139def: add    $0x30,%rsp
  0x00007fab74139df3: pop    %rbp
  0x00007fab74139df4: test   %eax,0x1b6a8306(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74139dfa: retq   
  0x00007fab74139dfb: nop
  0x00007fab74139dfc: nop
  0x00007fab74139dfd: mov    0x2c0(%r15),%rax
  0x00007fab74139e04: movabs $0x0,%r10
  0x00007fab74139e0e: mov    %r10,0x2c0(%r15)
  0x00007fab74139e15: movabs $0x0,%r10
  0x00007fab74139e1f: mov    %r10,0x2c8(%r15)
  0x00007fab74139e26: add    $0x30,%rsp
  0x00007fab74139e2a: pop    %rbp
  0x00007fab74139e2b: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74139e30: hlt    
  0x00007fab74139e31: hlt    
  0x00007fab74139e32: hlt    
  0x00007fab74139e33: hlt    
  0x00007fab74139e34: hlt    
  0x00007fab74139e35: hlt    
  0x00007fab74139e36: hlt    
  0x00007fab74139e37: hlt    
  0x00007fab74139e38: hlt    
  0x00007fab74139e39: hlt    
  0x00007fab74139e3a: hlt    
  0x00007fab74139e3b: hlt    
  0x00007fab74139e3c: hlt    
  0x00007fab74139e3d: hlt    
  0x00007fab74139e3e: hlt    
  0x00007fab74139e3f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74139e40: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74139e45: mov    %rsp,-0x28(%rsp)
  0x00007fab74139e4a: sub    $0x80,%rsp
  0x00007fab74139e51: mov    %rax,0x78(%rsp)
  0x00007fab74139e56: mov    %rcx,0x70(%rsp)
  0x00007fab74139e5b: mov    %rdx,0x68(%rsp)
  0x00007fab74139e60: mov    %rbx,0x60(%rsp)
  0x00007fab74139e65: mov    %rbp,0x50(%rsp)
  0x00007fab74139e6a: mov    %rsi,0x48(%rsp)
  0x00007fab74139e6f: mov    %rdi,0x40(%rsp)
  0x00007fab74139e74: mov    %r8,0x38(%rsp)
  0x00007fab74139e79: mov    %r9,0x30(%rsp)
  0x00007fab74139e7e: mov    %r10,0x28(%rsp)
  0x00007fab74139e83: mov    %r11,0x20(%rsp)
  0x00007fab74139e88: mov    %r12,0x18(%rsp)
  0x00007fab74139e8d: mov    %r13,0x10(%rsp)
  0x00007fab74139e92: mov    %r14,0x8(%rsp)
  0x00007fab74139e97: mov    %r15,(%rsp)
  0x00007fab74139e9b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74139ea5: movabs $0x7fab74139e45,%rsi  ;   {internal_word}
  0x00007fab74139eaf: mov    %rsp,%rdx
  0x00007fab74139eb2: and    $0xfffffffffffffff0,%rsp
  0x00007fab74139eb6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74139ebb: hlt    
[Deopt Handler Code]
  0x00007fab74139ebc: movabs $0x7fab74139ebc,%r10  ;   {section_word}
  0x00007fab74139ec6: push   %r10
  0x00007fab74139ec8: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74139ecd: hlt    
  0x00007fab74139ece: hlt    
  0x00007fab74139ecf: hlt    
<nmethod compile_id='81' compiler='C1' level='1' entry='0x00007fab74139dc0' size='736' address='0x00007fab74139c50' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/net/URL getPort ()I' bytes='5' count='159' iicount='159' stamp='0.359'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.code.Register from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/net/URLStreamHandler.getDefaultPort  [0x00007fab7413a0c0, 0x00007fab7413a1d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61a8fd90} &apos;getDefaultPort&apos; &apos;()I&apos; in &apos;java/net/URLStreamHandler&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab7413a0c0: mov    0x8(%rsi),%r10d
  0x00007fab7413a0c4: shl    $0x3,%r10
  0x00007fab7413a0c8: cmp    %rax,%r10
  0x00007fab7413a0cb: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7413a0d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7413a0dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7413a0e0: mov    %eax,-0x14000(%rsp)
  0x00007fab7413a0e7: push   %rbp
  0x00007fab7413a0e8: sub    $0x30,%rsp         ;*iconst_m1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URLStreamHandler::getDefaultPort@0 (line 320)

  0x00007fab7413a0ec: mov    $0xffffffff,%eax
  0x00007fab7413a0f1: add    $0x30,%rsp
  0x00007fab7413a0f5: pop    %rbp
  0x00007fab7413a0f6: test   %eax,0x1b6a8004(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7413a0fc: retq   
  0x00007fab7413a0fd: nop
  0x00007fab7413a0fe: nop
  0x00007fab7413a0ff: mov    0x2c0(%r15),%rax
  0x00007fab7413a106: movabs $0x0,%r10
  0x00007fab7413a110: mov    %r10,0x2c0(%r15)
  0x00007fab7413a117: movabs $0x0,%r10
  0x00007fab7413a121: mov    %r10,0x2c8(%r15)
  0x00007fab7413a128: add    $0x30,%rsp
  0x00007fab7413a12c: pop    %rbp
  0x00007fab7413a12d: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7413a132: hlt    
  0x00007fab7413a133: hlt    
  0x00007fab7413a134: hlt    
  0x00007fab7413a135: hlt    
  0x00007fab7413a136: hlt    
  0x00007fab7413a137: hlt    
  0x00007fab7413a138: hlt    
  0x00007fab7413a139: hlt    
  0x00007fab7413a13a: hlt    
  0x00007fab7413a13b: hlt    
  0x00007fab7413a13c: hlt    
  0x00007fab7413a13d: hlt    
  0x00007fab7413a13e: hlt    
  0x00007fab7413a13f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab7413a140: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7413a145: mov    %rsp,-0x28(%rsp)
  0x00007fab7413a14a: sub    $0x80,%rsp
  0x00007fab7413a151: mov    %rax,0x78(%rsp)
  0x00007fab7413a156: mov    %rcx,0x70(%rsp)
  0x00007fab7413a15b: mov    %rdx,0x68(%rsp)
  0x00007fab7413a160: mov    %rbx,0x60(%rsp)
  0x00007fab7413a165: mov    %rbp,0x50(%rsp)
  0x00007fab7413a16a: mov    %rsi,0x48(%rsp)
  0x00007fab7413a16f: mov    %rdi,0x40(%rsp)
  0x00007fab7413a174: mov    %r8,0x38(%rsp)
  0x00007fab7413a179: mov    %r9,0x30(%rsp)
  0x00007fab7413a17e: mov    %r10,0x28(%rsp)
  0x00007fab7413a183: mov    %r11,0x20(%rsp)
  0x00007fab7413a188: mov    %r12,0x18(%rsp)
  0x00007fab7413a18d: mov    %r13,0x10(%rsp)
  0x00007fab7413a192: mov    %r14,0x8(%rsp)
  0x00007fab7413a197: mov    %r15,(%rsp)
  0x00007fab7413a19b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7413a1a5: movabs $0x7fab7413a145,%rsi  ;   {internal_word}
  0x00007fab7413a1af: mov    %rsp,%rdx
  0x00007fab7413a1b2: and    $0xfffffffffffffff0,%rsp
  0x00007fab7413a1b6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7413a1bb: hlt    
[Deopt Handler Code]
  0x00007fab7413a1bc: movabs $0x7fab7413a1bc,%r10  ;   {section_word}
  0x00007fab7413a1c6: push   %r10
  0x00007fab7413a1c8: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7413a1cd: hlt    
  0x00007fab7413a1ce: hlt    
  0x00007fab7413a1cf: hlt    
<nmethod compile_id='83' compiler='C1' level='1' entry='0x00007fab7413a0c0' size='712' address='0x00007fab74139f50' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='656' dependencies_offset='704' metadata_offset='640' method='java/net/URLStreamHandler getDefaultPort ()I' bytes='2' count='145' iicount='145' stamp='0.359'/>
----------------------------------------------------------------------
java/security/CodeSource.getLocation  [0x00007fab7413a3c0, 0x00007fab7413a4d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61938788} &apos;getLocation&apos; &apos;()Ljava/net/URL;&apos; in &apos;java/security/CodeSource&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab7413a3c0: mov    0x8(%rsi),%r10d
  0x00007fab7413a3c4: shl    $0x3,%r10
  0x00007fab7413a3c8: cmp    %rax,%r10
  0x00007fab7413a3cb: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7413a3d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7413a3dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7413a3e0: mov    %eax,-0x14000(%rsp)
  0x00007fab7413a3e7: push   %rbp
  0x00007fab7413a3e8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.security.CodeSource::getLocation@0 (line 168)

  0x00007fab7413a3ec: mov    0xc(%rsi),%eax
  0x00007fab7413a3ef: shl    $0x3,%rax          ;*getfield location {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.security.CodeSource::getLocation@1 (line 168)

  0x00007fab7413a3f3: add    $0x30,%rsp
  0x00007fab7413a3f7: pop    %rbp
  0x00007fab7413a3f8: test   %eax,0x1b6a7d02(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7413a3fe: retq   
  0x00007fab7413a3ff: nop
  0x00007fab7413a400: nop
  0x00007fab7413a401: mov    0x2c0(%r15),%rax
  0x00007fab7413a408: movabs $0x0,%r10
  0x00007fab7413a412: mov    %r10,0x2c0(%r15)
  0x00007fab7413a419: movabs $0x0,%r10
  0x00007fab7413a423: mov    %r10,0x2c8(%r15)
  0x00007fab7413a42a: add    $0x30,%rsp
  0x00007fab7413a42e: pop    %rbp
  0x00007fab7413a42f: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7413a434: hlt    
  0x00007fab7413a435: hlt    
  0x00007fab7413a436: hlt    
  0x00007fab7413a437: hlt    
  0x00007fab7413a438: hlt    
  0x00007fab7413a439: hlt    
  0x00007fab7413a43a: hlt    
  0x00007fab7413a43b: hlt    
  0x00007fab7413a43c: hlt    
  0x00007fab7413a43d: hlt    
  0x00007fab7413a43e: hlt    
  0x00007fab7413a43f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab7413a440: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7413a445: mov    %rsp,-0x28(%rsp)
  0x00007fab7413a44a: sub    $0x80,%rsp
  0x00007fab7413a451: mov    %rax,0x78(%rsp)
  0x00007fab7413a456: mov    %rcx,0x70(%rsp)
  0x00007fab7413a45b: mov    %rdx,0x68(%rsp)
  0x00007fab7413a460: mov    %rbx,0x60(%rsp)
  0x00007fab7413a465: mov    %rbp,0x50(%rsp)
  0x00007fab7413a46a: mov    %rsi,0x48(%rsp)
  0x00007fab7413a46f: mov    %rdi,0x40(%rsp)
  0x00007fab7413a474: mov    %r8,0x38(%rsp)
  0x00007fab7413a479: mov    %r9,0x30(%rsp)
  0x00007fab7413a47e: mov    %r10,0x28(%rsp)
  0x00007fab7413a483: mov    %r11,0x20(%rsp)
  0x00007fab7413a488: mov    %r12,0x18(%rsp)
  0x00007fab7413a48d: mov    %r13,0x10(%rsp)
  0x00007fab7413a492: mov    %r14,0x8(%rsp)
  0x00007fab7413a497: mov    %r15,(%rsp)
  0x00007fab7413a49b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7413a4a5: movabs $0x7fab7413a445,%rsi  ;   {internal_word}
  0x00007fab7413a4af: mov    %rsp,%rdx
  0x00007fab7413a4b2: and    $0xfffffffffffffff0,%rsp
  0x00007fab7413a4b6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7413a4bb: hlt    
[Deopt Handler Code]
  0x00007fab7413a4bc: movabs $0x7fab7413a4bc,%r10  ;   {section_word}
  0x00007fab7413a4c6: push   %r10
  0x00007fab7413a4c8: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7413a4cd: hlt    
  0x00007fab7413a4ce: hlt    
  0x00007fab7413a4cf: hlt    
<nmethod compile_id='85' compiler='C1' level='1' entry='0x00007fab7413a3c0' size='736' address='0x00007fab7413a250' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/security/CodeSource getLocation ()Ljava/net/URL;' bytes='5' count='140' iicount='140' stamp='0.360'/>
<writer thread='140373948942080'/>
<task_queued compile_id='89' method='sun/misc/URLClassPath$JarLoader getResource (Ljava/lang/String;Z)Lsun/misc/Resource;' bytes='85' count='384' iicount='384' level='3' stamp='0.360' comment='tiered' hot_count='384'/>
[Loaded jdk.vm.ci.meta.Value from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.meta.AllocatableValue from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.RegisterValue from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.StackSlot from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.StackLockValue from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
sun/misc/URLClassPath$JarLoader.getResource  [0x00007fab7413a7c0, 0x00007fab7413b528]  3432 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61abbd30} &apos;
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.code.VirtualObject from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;
  # this:     rsi:rsi   = &apos;sun/misc/URLClassPath$JarLoader&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  # parm1:    rcx       = boolean
  #           [sp+0xe0]  (sp of caller)
  0x00007fab7413a7c0: mov    0x8(%rsi),%r10d
  0x00007fab7413a7c4: shl    $0x3,%r10
  0x00007fab7413a7c8: cmp    %rax,%r10
  0x00007fab7413a7cb: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7413a7d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7413a7dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7413a7e0: mov    %eax,-0x14000(%rsp)
  0x00007fab7413a7e7: push   %rbp
  0x00007fab7413a7e8: sub    $0xd0,%rsp
  0x00007fab7413a7ef: mov    %rsi,0x98(%rsp)
  0x00007fab7413a7f7: movabs $0x7fab61b8fc50,%rdi  ;   {metadata(method data for {method} {0x00007fab61abbd30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab7413a801: mov    0xfc(%rdi),%ebx
  0x00007fab7413a807: add    $0x8,%ebx
  0x00007fab7413a80a: mov    %ebx,0xfc(%rdi)
  0x00007fab7413a810: movabs $0x7fab61abbd30,%rdi  ;   {metadata({method} {0x00007fab61abbd30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab7413a81a: and    $0x1ff8,%ebx
  0x00007fab7413a820: cmp    $0x0,%ebx
  0x00007fab7413a823: je     0x00007fab7413b249  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@0 (line 1031)

  0x00007fab7413a829: mov    0x24(%rsi),%edi
  0x00007fab7413a82c: shl    $0x3,%rdi          ;*getfield metaIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@1 (line 1031)

  0x00007fab7413a830: cmp    $0x0,%rdi
  0x00007fab7413a834: movabs $0x7fab61b8fc50,%rbx  ;   {metadata(method data for {method} {0x00007fab61abbd30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab7413a83e: movabs $0x130,%rax
  0x00007fab7413a848: je     0x00007fab7413a858
  0x00007fab7413a84e: movabs $0x140,%rax
  0x00007fab7413a858: mov    (%rbx,%rax,1),%r8
  0x00007fab7413a85c: lea    0x1(%r8),%r8
  0x00007fab7413a860: mov    %r8,(%rbx,%rax,1)
  0x00007fab7413a864: mov    %ecx,0xa8(%rsp)
  0x00007fab7413a86b: jne    0x00007fab7413a87e  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@4 (line 1031)

  0x00007fab7413a871: mov    %rdx,0xa0(%rsp)
  0x00007fab7413a879: jmpq   0x00007fab7413a8fd  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@20 (line 1038)

  0x00007fab7413a87e: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x00007fab7413b260
  0x00007fab7413a881: mov    %rdi,%rbx
  0x00007fab7413a884: movabs $0x7fab61b8fc50,%rax  ;   {metadata(method data for {method} {0x00007fab61abbd30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab7413a88e: movabs $0x7c002f4e0,%r10  ;   {metadata(&apos;sun/misc/MetaIndex&apos;)}
  0x00007fab7413a898: mov    %r10,0x160(%rax)
  0x00007fab7413a89f: addq   $0x1,0x168(%rax)
  0x00007fab7413a8a7: mov    %rdx,%rbx
  0x00007fab7413a8aa: mov    %rbx,%rdx
  0x00007fab7413a8ad: mov    %rdi,%rsi          ;*invokevirtual mayContain {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@12 (line 1032)

  0x00007fab7413a8b0: mov    %rbx,0xa0(%rsp)
  0x00007fab7413a8b8: nop
  0x00007fab7413a8b9: nop
  0x00007fab7413a8ba: nop
  0x00007fab7413a8bb: nop
  0x00007fab7413a8bc: nop
  0x00007fab7413a8bd: nop
  0x00007fab7413a8be: nop
  0x00007fab7413a8bf: callq  0x00007fab74047d60  ; OopMap{[152]=Oop [160]=Oop off=260}
                                                ;*invokevirtual mayContain {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@12 (line 1032)
                                                ;   {optimized virtual_call}
  0x00007fab7413a8c4: cmp    $0x0,%eax
  0x00007fab7413a8c7: movabs $0x7fab61b8fc50,%rsi  ;   {metadata(method data for {method} {0x00007fab61abbd30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab7413a8d1: movabs $0x1e8,%rdi
  0x00007fab7413a8db: jne    0x00007fab7413a8eb
  0x00007fab7413a8e1: movabs $0x1f8,%rdi
  0x00007fab7413a8eb: mov    (%rsi,%rdi,1),%rbx
  0x00007fab7413a8ef: lea    0x1(%rbx),%rbx
  0x00007fab7413a8f3: mov    %rbx,(%rsi,%rdi,1)
  0x00007fab7413a8f7: je     0x00007fab7413b1c3  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@15 (line 1032)

  0x00007fab7413a8fd: mov    0x98(%rsp),%rsi
  0x00007fab7413a905: movabs $0x7fab61b8fc50,%rdi  ;   {metadata(method data for {method} {0x00007fab61abbd30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab7413a90f: addq   $0x1,0x208(%rdi)
  0x00007fab7413a917: mov    0x98(%rsp),%rsi    ;*invokespecial ensureOpen {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@21 (line 1038)

  0x00007fab7413a91f: callq  0x00007fab74047d60  ; OopMap{[152]=Oop [160]=Oop off=356}
                                                ;*invokespecial ensureOpen {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@21 (line 1038)
                                                ;   {optimized virtual_call}
  0x00007fab7413a924: movabs $0x7fab61b8fc50,%rdx  ;   {metadata(method data for {method} {0x00007fab61abbd30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab7413a92e: incl   0x218(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@24 (line 1041)

  0x00007fab7413a934: mov    0x98(%rsp),%rsi
  0x00007fab7413a93c: mov    0x18(%rsi),%edi
  0x00007fab7413a93f: shl    $0x3,%rdi          ;*getfield jar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@38 (line 1042)

  0x00007fab7413a943: cmp    (%rdi),%rax        ;*invokevirtual getJarEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ; implicit exception: dispatches to 0x00007fab7413b265
  0x00007fab7413a946: mov    %rdi,%rdx
  0x00007fab7413a949: movabs $0x7fab61b8fc50,%rbx  ;   {metadata(method data for {method} {0x00007fab61abbd30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab7413a953: movabs $0x7c004e150,%r10  ;   {metadata(&apos;java/util/jar/JarFile&apos;)}
  0x00007fab7413a95d: mov    %r10,0x250(%rbx)
  0x00007fab7413a964: addq   $0x1,0x258(%rbx)
  0x00007fab7413a96c: movabs $0x7fab61b8f078,%rdx  ;   {metadata(method data for {method} {0x00007fab61b66fe8} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab7413a976: mov    0xfc(%rdx),%ebx
  0x00007fab7413a97c: add    $0x8,%ebx
  0x00007fab7413a97f: mov    %ebx,0xfc(%rdx)
  0x00007fab7413a985: movabs $0x7fab61b66fe8,%rdx  ;   {metadata({method} {0x00007fab61b66fe8} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab7413a98f: and    $0x7ffff8,%ebx
  0x00007fab7413a995: cmp    $0x0,%ebx
  0x00007fab7413a998: je     0x00007fab7413b26a
  0x00007fab7413a99e: mov    %rdi,%rdx
  0x00007fab7413a9a1: movabs $0x7fab61b8f078,%rbx  ;   {metadata(method data for {method} {0x00007fab61b66fe8} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab7413a9ab: addq   $0x1,0x148(%rbx)
  0x00007fab7413a9b3: movabs $0x7fab61b8f320,%rdx  ;   {metadata(method data for {method} {0x00007fab61b670b8} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab7413a9bd: mov    0xfc(%rdx),%ebx
  0x00007fab7413a9c3: add    $0x8,%ebx
  0x00007fab7413a9c6: mov    %ebx,0xfc(%rdx)
  0x00007fab7413a9cc: movabs $0x7fab61b670b8,%rdx  ;   {metadata({method} {0x00007fab61b670b8} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab7413a9d6: and    $0x7ffff8,%ebx
  0x00007fab7413a9dc: cmp    $0x0,%ebx
  0x00007fab7413a9df: je     0x00007fab7413b281
  0x00007fab7413a9e5: mov    %rdi,%rdx
  0x00007fab7413a9e8: movabs $0x7fab61b8f320,%rbx  ;   {metadata(method data for {method} {0x00007fab61b670b8} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab7413a9f2: addq   $0x1,0x130(%rbx)
  0x00007fab7413a9fa: mov    0xa0(%rsp),%rdx
  0x00007fab7413aa02: mov    %rdi,%rsi          ;*invokespecial getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@2 (line 240)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)

  0x00007fab7413aa05: mov    %rdi,0xb0(%rsp)
  0x00007fab7413aa0d: nop
  0x00007fab7413aa0e: nop
  0x00007fab7413aa0f: callq  0x00007fab74047d60  ; OopMap{[160]=Oop [152]=Oop [176]=Oop off=596}
                                                ;*invokespecial getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@2 (line 240)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {optimized virtual_call}
  0x00007fab7413aa14: mov    %rax,%rbx          ;*invokespecial getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@2 (line 240)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)

  0x00007fab7413aa17: cmp    $0x0,%rbx
  0x00007fab7413aa1b: movabs $0x7fab61b8f320,%rdx  ;   {metadata(method data for {method} {0x00007fab61b670b8} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab7413aa25: movabs $0x140,%rsi
  0x00007fab7413aa2f: je     0x00007fab7413aa3f
  0x00007fab7413aa35: movabs $0x150,%rsi
  0x00007fab7413aa3f: mov    (%rdx,%rsi,1),%rdi
  0x00007fab7413aa43: lea    0x1(%rdi),%rdi
  0x00007fab7413aa47: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab7413aa4b: je     0x00007fab7413ab91  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@7 (line 241)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)

  0x00007fab7413aa51: mov    0xb0(%rsp),%r8
  0x00007fab7413aa59: movabs $0x7c0050ba0,%rdx  ;   {metadata(&apos;java/util/jar/JarFile$JarFileEntry&apos;)}
  0x00007fab7413aa63: mov    0x60(%r15),%rax
  0x00007fab7413aa67: lea    0x60(%rax),%rdi
  0x00007fab7413aa6b: cmp    0x70(%r15),%rdi
  0x00007fab7413aa6f: ja     0x00007fab7413b298
  0x00007fab7413aa75: mov    %rdi,0x60(%r15)
  0x00007fab7413aa79: mov    0xa8(%rdx),%rcx
  0x00007fab7413aa80: mov    %rcx,(%rax)
  0x00007fab7413aa83: mov    %rdx,%rcx
  0x00007fab7413aa86: shr    $0x3,%rcx
  0x00007fab7413aa8a: mov    %ecx,0x8(%rax)
  0x00007fab7413aa8d: xor    %rcx,%rcx
  0x00007fab7413aa90: mov    %ecx,0xc(%rax)
  0x00007fab7413aa93: xor    %rcx,%rcx
  0x00007fab7413aa96: movabs $0xa,%rdi
  0x00007fab7413aaa0: mov    %rcx,0x8(%rax,%rdi,8)
  0x00007fab7413aaa5: dec    %rdi
  0x00007fab7413aaa8: jne    0x00007fab7413aaa0  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@10 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)

  0x00007fab7413aaaa: mov    %rax,%rdx
  0x00007fab7413aaad: movabs $0x7fab61b8f320,%rsi  ;   {metadata(method data for {method} {0x00007fab61b670b8} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab7413aab7: addq   $0x1,0x160(%rsi)
  0x00007fab7413aabf: movabs $0x7fab61b8f780,%rdx  ;   {metadata(method data for {method} {0x00007fab61b7e5a8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/jar/JarFile;Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarFile$JarFileEntry&apos;)}
  0x00007fab7413aac9: mov    0xfc(%rdx),%esi
  0x00007fab7413aacf: add    $0x8,%esi
  0x00007fab7413aad2: mov    %esi,0xfc(%rdx)
  0x00007fab7413aad8: movabs $0x7fab61b7e5a8,%rdx  ;   {metadata({method} {0x00007fab61b7e5a8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/jar/JarFile;Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarFile$JarFileEntry&apos;)}
  0x00007fab7413aae2: and    $0x7ffff8,%esi
  0x00007fab7413aae8: cmp    $0x0,%esi
  0x00007fab7413aaeb: je     0x00007fab7413b2a5
  0x00007fab7413aaf1: mov    %r8,%r10
  0x00007fab7413aaf4: shr    $0x3,%r10
  0x00007fab7413aaf8: mov    %r10d,0x58(%rax)
  0x00007fab7413aafc: mov    %rax,%rdx
  0x00007fab7413aaff: shr    $0x9,%rdx
  0x00007fab7413ab03: movabs $0x7fab701ff000,%rsi
  0x00007fab7413ab0d: movb   $0x0,(%rdx,%rsi,1)  ;*putfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@2 (line 286)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)

  0x00007fab7413ab11: mov    %rax,%rdx
  0x00007fab7413ab14: movabs $0x7fab61b8f780,%rsi  ;   {metadata(method data for {method} {0x00007fab61b7e5a8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/jar/JarFile;Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarFile$JarFileEntry&apos;)}
  0x00007fab7413ab1e: addq   $0x1,0x130(%rsi)
  0x00007fab7413ab26: movabs $0x7fab61b8f900,%rdx  ;   {metadata(method data for {method} {0x00007fab61b7ecb8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarEntry&apos;)}
  0x00007fab7413ab30: mov    0xfc(%rdx),%esi
  0x00007fab7413ab36: add    $0x8,%esi
  0x00007fab7413ab39: mov    %esi,0xfc(%rdx)
  0x00007fab7413ab3f: movabs $0x7fab61b7ecb8,%rdx  ;   {metadata({method} {0x00007fab61b7ecb8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarEntry&apos;)}
  0x00007fab7413ab49: and    $0x7ffff8,%esi
  0x00007fab7413ab4f: cmp    $0x0,%esi
  0x00007fab7413ab52: je     0x00007fab7413b2bc
  0x00007fab7413ab58: mov    %rax,%rdx
  0x00007fab7413ab5b: movabs $0x7fab61b8f900,%rsi  ;   {metadata(method data for {method} {0x00007fab61b7ecb8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarEntry&apos;)}
  0x00007fab7413ab65: addq   $0x1,0x130(%rsi)
  0x00007fab7413ab6d: mov    %rbx,%rdx
  0x00007fab7413ab70: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarEntry::&lt;init&gt;@2 (line 62)
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@7 (line 287)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)

  0x00007fab7413ab73: mov    %rax,0xb8(%rsp)
  0x00007fab7413ab7b: nop
  0x00007fab7413ab7c: nop
  0x00007fab7413ab7d: nop
  0x00007fab7413ab7e: nop
  0x00007fab7413ab7f: callq  0x00007fab74047d60  ; OopMap{[160]=Oop [152]=Oop [184]=Oop off=964}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarEntry::&lt;init&gt;@2 (line 62)
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@7 (line 287)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {optimized virtual_call}
  0x00007fab7413ab84: mov    0xb8(%rsp),%rax
  0x00007fab7413ab8c: jmpq   0x00007fab7413ab9b
  0x00007fab7413ab91: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fab7413ab9b: cmp    $0x0,%rax
  0x00007fab7413ab9f: jne    0x00007fab7413abba
  0x00007fab7413aba1: movabs $0x7fab61b8f078,%rdx  ;   {metadata(method data for {method} {0x00007fab61b66fe8} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab7413abab: orl    $0x100,0x1c0(%rdx)
  0x00007fab7413abb5: jmpq   0x00007fab7413add7
  0x00007fab7413abba: movabs $0x7c00508e8,%rdi  ;   {metadata(&apos;java/util/jar/JarEntry&apos;)}
  0x00007fab7413abc4: mov    0x8(%rax),%edx
  0x00007fab7413abc7: shl    $0x3,%rdx
  0x00007fab7413abcb: cmp    0x38(%rdx),%rdi
  0x00007fab7413abcf: jne    0x00007fab7413adbb
  0x00007fab7413abd5: movabs $0x7fab61b8f078,%rdx  ;   {metadata(method data for {method} {0x00007fab61b66fe8} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab7413abdf: mov    0x8(%rax),%edi
  0x00007fab7413abe2: shl    $0x3,%rdi
  0x00007fab7413abe6: cmp    0x1d8(%rdx),%rdi
  0x00007fab7413abed: jne    0x00007fab7413abfc
  0x00007fab7413abef: addq   $0x1,0x1e0(%rdx)
  0x00007fab7413abf7: jmpq   0x00007fab7413add7
  0x00007fab7413abfc: cmp    0x1e8(%rdx),%rdi
  0x00007fab7413ac03: jne    0x00007fab7413ac12
  0x00007fab7413ac05: addq   $0x1,0x1f0(%rdx)
  0x00007fab7413ac0d: jmpq   0x00007fab7413add7
  0x00007fab7413ac12: cmp    0x1f8(%rdx),%rdi
  0x00007fab7413ac19: jne    0x00007fab7413ac28
  0x00007fab7413ac1b: addq   $0x1,0x200(%rdx)
  0x00007fab7413ac23: jmpq   0x00007fab7413add7
  0x00007fab7413ac28: cmp    0x208(%rdx),%rdi
  0x00007fab7413ac2f: jne    0x00007fab7413ac3e
  0x00007fab7413ac31: addq   $0x1,0x210(%rdx)
  0x00007fab7413ac39: jmpq   0x00007fab7413add7
  0x00007fab7413ac3e: cmp    0x218(%rdx),%rdi
  0x00007fab7413ac45: jne    0x00007fab7413ac54
  0x00007fab7413ac47: addq   $0x1,0x220(%rdx)
  0x00007fab7413ac4f: jmpq   0x00007fab7413add7
  0x00007fab7413ac54: cmp    0x228(%rdx),%rdi
  0x00007fab7413ac5b: jne    0x00007fab7413ac6a
  0x00007fab7413ac5d: addq   $0x1,0x230(%rdx)
  0x00007fab7413ac65: jmpq   0x00007fab7413add7
  0x00007fab7413ac6a: cmp    0x238(%rdx),%rdi
  0x00007fab7413ac71: jne    0x00007fab7413ac80
  0x00007fab7413ac73: addq   $0x1,0x240(%rdx)
  0x00007fab7413ac7b: jmpq   0x00007fab7413add7
  0x00007fab7413ac80: cmp    0x248(%rdx),%rdi
  0x00007fab7413ac87: jne    0x00007fab7413ac96
  0x00007fab7413ac89: addq   $0x1,0x250(%rdx)
  0x00007fab7413ac91: jmpq   0x00007fab7413add7
  0x00007fab7413ac96: cmpq   $0x0,0x1d8(%rdx)
  0x00007fab7413aca1: jne    0x00007fab7413acba
  0x00007fab7413aca3: mov    %rdi,0x1d8(%rdx)
  0x00007fab7413acaa: movq   $0x1,0x1e0(%rdx)
  0x00007fab7413acb5: jmpq   0x00007fab7413add7
  0x00007fab7413acba: cmpq   $0x0,0x1e8(%rdx)
  0x00007fab7413acc5: jne    0x00007fab7413acde
  0x00007fab7413acc7: mov    %rdi,0x1e8(%rdx)
  0x00007fab7413acce: movq   $0x1,0x1f0(%rdx)
  0x00007fab7413acd9: jmpq   0x00007fab7413add7
  0x00007fab7413acde: cmpq   $0x0,0x1f8(%rdx)
  0x00007fab7413ace9: jne    0x00007fab7413ad02
  0x00007fab7413aceb: mov    %rdi,0x1f8(%rdx)
  0x00007fab7413acf2: movq   $0x1,0x200(%rdx)
  0x00007fab7413acfd: jmpq   0x00007fab7413add7
  0x00007fab7413ad02: cmpq   $0x0,0x208(%rdx)
  0x00007fab7413ad0d: jne    0x00007fab7413ad26
  0x00007fab7413ad0f: mov    %rdi,0x208(%rdx)
  0x00007fab7413ad16: movq   $0x1,0x210(%rdx)
  0x00007fab7413ad21: jmpq   0x00007fab7413add7
  0x00007fab7413ad26: cmpq   $0x0,0x218(%rdx)
  0x00007fab7413ad31: jne    0x00007fab7413ad4a
  0x00007fab7413ad33: mov    %rdi,0x218(%rdx)
  0x00007fab7413ad3a: movq   $0x1,0x220(%rdx)
  0x00007fab7413ad45: jmpq   0x00007fab7413add7
  0x00007fab7413ad4a: cmpq   $0x0,0x228(%rdx)
  0x00007fab7413ad55: jne    0x00007fab7413ad6e
  0x00007fab7413ad57: mov    %rdi,0x228(%rdx)
  0x00007fab7413ad5e: movq   $0x1,0x230(%rdx)
  0x00007fab7413ad69: jmpq   0x00007fab7413add7
  0x00007fab7413ad6e: cmpq   $0x0,0x238(%rdx)
  0x00007fab7413ad79: jne    0x00007fab7413ad92
  0x00007fab7413ad7b: mov    %rdi,0x238(%rdx)
  0x00007fab7413ad82: movq   $0x1,0x240(%rdx)
  0x00007fab7413ad8d: jmpq   0x00007fab7413add7
  0x00007fab7413ad92: cmpq   $0x0,0x248(%rdx)
  0x00007fab7413ad9d: jne    0x00007fab7413adb6
  0x00007fab7413ad9f: mov    %rdi,0x248(%rdx)
  0x00007fab7413ada6: movq   $0x1,0x250(%rdx)
  0x00007fab7413adb1: jmpq   0x00007fab7413add7
  0x00007fab7413adb6: jmpq   0x00007fab7413add7
  0x00007fab7413adbb: movabs $0x7fab61b8f078,%rdx  ;   {metadata(method data for {method} {0x00007fab61b66fe8} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab7413adc5: subq   $0x1,0x1c8(%rdx)
  0x00007fab7413adcd: jmpq   0x00007fab7413b2d3
  0x00007fab7413add2: jmpq   0x00007fab7413add7
  0x00007fab7413add7: mov    %rax,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@5 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)

  0x00007fab7413adda: cmp    $0x0,%rsi
  0x00007fab7413adde: movabs $0x7fab61b8fc50,%rax  ;   {metadata(method data for {method} {0x00007fab61abbd30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab7413ade8: movabs $0x2d8,%rdx
  0x00007fab7413adf2: je     0x00007fab7413ae02
  0x00007fab7413adf8: movabs $0x2e8,%rdx
  0x00007fab7413ae02: mov    (%rax,%rdx,1),%rdi
  0x00007fab7413ae06: lea    0x1(%rdi),%rdi
  0x00007fab7413ae0a: mov    %rdi,(%rax,%rdx,1)
  0x00007fab7413ae0e: jne    0x00007fab7413b16b  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@47 (line 1043)

  0x00007fab7413ae14: mov    0x98(%rsp),%rbx
  0x00007fab7413ae1c: mov    0x20(%rbx),%eax
  0x00007fab7413ae1f: shl    $0x3,%rax          ;*getfield index {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@59 (line 1046)

  0x00007fab7413ae23: cmp    $0x0,%rax
  0x00007fab7413ae27: movabs $0x7fab61b8fc50,%rax  ;   {metadata(method data for {method} {0x00007fab61abbd30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab7413ae31: movabs $0x390,%rdx
  0x00007fab7413ae3b: jne    0x00007fab7413ae4b
  0x00007fab7413ae41: movabs $0x3a0,%rdx
  0x00007fab7413ae4b: mov    (%rax,%rdx,1),%rsi
  0x00007fab7413ae4f: lea    0x1(%rsi),%rsi
  0x00007fab7413ae53: mov    %rsi,(%rax,%rdx,1)
  0x00007fab7413ae57: jne    0x00007fab7413ae76  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@62 (line 1046)

  0x00007fab7413ae5d: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fab7413ae67: add    $0xd0,%rsp
  0x00007fab7413ae6e: pop    %rbp
  0x00007fab7413ae6f: test   %eax,0x1b6a728b(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7413ae75: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@66 (line 1047)

  0x00007fab7413ae76: xchg   %ax,%ax
  0x00007fab7413ae78: jmpq   0x00007fab7413b2eb  ;   {no_reloc}
  0x00007fab7413ae7d: add    %al,(%rax)
  0x00007fab7413ae7f: add    %al,(%rax)
  0x00007fab7413ae81: add    %cl,-0x75(%rcx)
  0x00007fab7413ae84: rex.RXB (bad) 
  0x00007fab7413ae86: lea    0x10(%rax),%rdi
  0x00007fab7413ae8a: cmp    0x70(%r15),%rdi
  0x00007fab7413ae8e: ja     0x00007fab7413b2f5
  0x00007fab7413ae94: mov    %rdi,0x60(%r15)
  0x00007fab7413ae98: mov    0xa8(%rdx),%rcx
  0x00007fab7413ae9f: mov    %rcx,(%rax)
  0x00007fab7413aea2: mov    %rdx,%rcx
  0x00007fab7413aea5: shr    $0x3,%rcx
  0x00007fab7413aea9: mov    %ecx,0x8(%rax)
  0x00007fab7413aeac: xor    %rcx,%rcx
  0x00007fab7413aeaf: mov    %ecx,0xc(%rax)
  0x00007fab7413aeb2: xor    %rcx,%rcx
  0x00007fab7413aeb5: mov    %rax,%r8           ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@67 (line 1049)

  0x00007fab7413aeb8: mov    %r8,%rdx
  0x00007fab7413aebb: movabs $0x7fab61b8fc50,%rsi  ;   {metadata(method data for {method} {0x00007fab61abbd30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab7413aec5: addq   $0x1,0x3b0(%rsi)
  0x00007fab7413aecd: movabs $0x7fab61b909c8,%rdx  ;   {metadata(method data for {method} {0x00007fab61a944c0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/HashSet&apos;)}
  0x00007fab7413aed7: mov    0xfc(%rdx),%esi
  0x00007fab7413aedd: add    $0x8,%esi
  0x00007fab7413aee0: mov    %esi,0xfc(%rdx)
  0x00007fab7413aee6: movabs $0x7fab61a944c0,%rdx  ;   {metadata({method} {0x00007fab61a944c0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/HashSet&apos;)}
  0x00007fab7413aef0: and    $0x7ffff8,%esi
  0x00007fab7413aef6: cmp    $0x0,%esi
  0x00007fab7413aef9: je     0x00007fab7413b302
  0x00007fab7413aeff: mov    %r8,%rdx
  0x00007fab7413af02: movabs $0x7fab61b909c8,%rsi  ;   {metadata(method data for {method} {0x00007fab61a944c0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/HashSet&apos;)}
  0x00007fab7413af0c: addq   $0x1,0x130(%rsi)
  0x00007fab7413af14: movabs $0x7fab61b90b48,%rdx  ;   {metadata(method data for {method} {0x00007fab619873d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractSet&apos;)}
  0x00007fab7413af1e: mov    0xfc(%rdx),%esi
  0x00007fab7413af24: add    $0x8,%esi
  0x00007fab7413af27: mov    %esi,0xfc(%rdx)
  0x00007fab7413af2d: movabs $0x7fab619873d8,%rdx  ;   {metadata({method} {0x00007fab619873d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractSet&apos;)}
  0x00007fab7413af37: and    $0x7ffff8,%esi
  0x00007fab7413af3d: cmp    $0x0,%esi
  0x00007fab7413af40: je     0x00007fab7413b319
  0x00007fab7413af46: mov    %r8,%rdx
  0x00007fab7413af49: movabs $0x7fab61b90b48,%rsi  ;   {metadata(method data for {method} {0x00007fab619873d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractSet&apos;)}
  0x00007fab7413af53: addq   $0x1,0x130(%rsi)
  0x00007fab7413af5b: movabs $0x7fab61b90ca8,%rdx  ;   {metadata(method data for {method} {0x00007fab619718f8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x00007fab7413af65: mov    0xfc(%rdx),%esi
  0x00007fab7413af6b: add    $0x8,%esi
  0x00007fab7413af6e: mov    %esi,0xfc(%rdx)
  0x00007fab7413af74: movabs $0x7fab619718f8,%rdx  ;   {metadata({method} {0x00007fab619718f8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x00007fab7413af7e: and    $0x7ffff8,%esi
  0x00007fab7413af84: cmp    $0x0,%esi
  0x00007fab7413af87: je     0x00007fab7413b330
  0x00007fab7413af8d: mov    %r8,%rdx
  0x00007fab7413af90: movabs $0x7fab61b90ca8,%rsi  ;   {metadata(method data for {method} {0x00007fab619718f8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x00007fab7413af9a: addq   $0x1,0x130(%rsi)
  0x00007fab7413afa2: movabs $0x7fab61a342a0,%rdx  ;   {metadata(method data for {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7413afac: mov    0xfc(%rdx),%esi
  0x00007fab7413afb2: add    $0x8,%esi
  0x00007fab7413afb5: mov    %esi,0xfc(%rdx)
  0x00007fab7413afbb: movabs $0x7fab618914d8,%rdx  ;   {metadata({method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7413afc5: and    $0x7ffff8,%esi
  0x00007fab7413afcb: cmp    $0x0,%esi
  0x00007fab7413afce: je     0x00007fab7413b347
  0x00007fab7413afd4: movabs $0x7c001b1e8,%rdx  ;   {metadata(&apos;java/util/HashMap&apos;)}
  0x00007fab7413afde: mov    0x60(%r15),%rax
  0x00007fab7413afe2: lea    0x30(%rax),%rdi
  0x00007fab7413afe6: cmp    0x70(%r15),%rdi
  0x00007fab7413afea: ja     0x00007fab7413b35e
  0x00007fab7413aff0: mov    %rdi,0x60(%r15)
  0x00007fab7413aff4: mov    0xa8(%rdx),%rcx
  0x00007fab7413affb: mov    %rcx,(%rax)
  0x00007fab7413affe: mov    %rdx,%rcx
  0x00007fab7413b001: shr    $0x3,%rcx
  0x00007fab7413b005: mov    %ecx,0x8(%rax)
  0x00007fab7413b008: xor    %rcx,%rcx
  0x00007fab7413b00b: mov    %ecx,0xc(%rax)
  0x00007fab7413b00e: xor    %rcx,%rcx
  0x00007fab7413b011: mov    %rcx,0x10(%rax)
  0x00007fab7413b015: mov    %rcx,0x18(%rax)
  0x00007fab7413b019: mov    %rcx,0x20(%rax)
  0x00007fab7413b01d: mov    %rcx,0x28(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashSet::&lt;init&gt;@5 (line 105)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)

  0x00007fab7413b021: mov    %rax,%rdx
  0x00007fab7413b024: movabs $0x7fab61b909c8,%rcx  ;   {metadata(method data for {method} {0x00007fab61a944c0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/HashSet&apos;)}
  0x00007fab7413b02e: addq   $0x1,0x140(%rcx)
  0x00007fab7413b036: movabs $0x7fab61b90e08,%rdx  ;   {metadata(method data for {method} {0x00007fab61997eb8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7413b040: mov    0xfc(%rdx),%ecx
  0x00007fab7413b046: add    $0x8,%ecx
  0x00007fab7413b049: mov    %ecx,0xfc(%rdx)
  0x00007fab7413b04f: movabs $0x7fab61997eb8,%rdx  ;   {metadata({method} {0x00007fab61997eb8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7413b059: and    $0x7ffff8,%ecx
  0x00007fab7413b05f: cmp    $0x0,%ecx
  0x00007fab7413b062: je     0x00007fab7413b36b
  0x00007fab7413b068: mov    %rax,%rdx
  0x00007fab7413b06b: movabs $0x7fab61b90e08,%rcx  ;   {metadata(method data for {method} {0x00007fab61997eb8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7413b075: addq   $0x1,0x130(%rcx)
  0x00007fab7413b07d: movabs $0x7fab61b90f78,%rdx  ;   {metadata(method data for {method} {0x00007fab6198b0e0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractMap&apos;)}
  0x00007fab7413b087: mov    0xfc(%rdx),%ecx
  0x00007fab7413b08d: add    $0x8,%ecx
  0x00007fab7413b090: mov    %ecx,0xfc(%rdx)
  0x00007fab7413b096: movabs $0x7fab6198b0e0,%rdx  ;   {metadata({method} {0x00007fab6198b0e0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractMap&apos;)}
  0x00007fab7413b0a0: and    $0x7ffff8,%ecx
  0x00007fab7413b0a6: cmp    $0x0,%ecx
  0x00007fab7413b0a9: je     0x00007fab7413b382
  0x00007fab7413b0af: mov    %rax,%rdx
  0x00007fab7413b0b2: movabs $0x7fab61b90f78,%rcx  ;   {metadata(method data for {method} {0x00007fab6198b0e0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractMap&apos;)}
  0x00007fab7413b0bc: addq   $0x1,0x130(%rcx)
  0x00007fab7413b0c4: movabs $0x7fab61a342a0,%rdx  ;   {metadata(method data for {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7413b0ce: mov    0xfc(%rdx),%ecx
  0x00007fab7413b0d4: add    $0x8,%ecx
  0x00007fab7413b0d7: mov    %ecx,0xfc(%rdx)
  0x00007fab7413b0dd: movabs $0x7fab618914d8,%rdx  ;   {metadata({method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7413b0e7: and    $0x7ffff8,%ecx
  0x00007fab7413b0ed: cmp    $0x0,%ecx
  0x00007fab7413b0f0: je     0x00007fab7413b399
  0x00007fab7413b0f6: movl   $0x3f400000,0x20(%rax)  ;*putfield loadFactor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::&lt;init&gt;@7 (line 475)
                                                ; - java.util.HashSet::&lt;init&gt;@9 (line 105)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)

  0x00007fab7413b0fd: mov    %rax,%r10
  0x00007fab7413b100: shr    $0x3,%r10
  0x00007fab7413b104: mov    %r10d,0xc(%r8)
  0x00007fab7413b108: mov    %r8,%rdx
  0x00007fab7413b10b: shr    $0x9,%rdx
  0x00007fab7413b10f: movabs $0x7fab701ff000,%rcx
  0x00007fab7413b119: movb   $0x0,(%rdx,%rcx,1)  ;*putfield map {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashSet::&lt;init&gt;@12 (line 105)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)

  0x00007fab7413b11d: mov    %rbx,%rsi
  0x00007fab7413b120: movabs $0x7fab61b8fc50,%rdx  ;   {metadata(method data for {method} {0x00007fab61abbd30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab7413b12a: movabs $0x7c003adc0,%r10  ;   {metadata(&apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab7413b134: mov    %r10,0x3d0(%rdx)
  0x00007fab7413b13b: addq   $0x1,0x3d8(%rdx)
  0x00007fab7413b143: mov    0xa0(%rsp),%rdx
  0x00007fab7413b14b: mov    0xa8(%rsp),%ecx
  0x00007fab7413b152: mov    %rbx,%rsi          ;*invokevirtual getResource {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@81 (line 1050)

  0x00007fab7413b155: nop
  0x00007fab7413b156: nop
  0x00007fab7413b157: callq  0x00007fab74047d60  ; OopMap{off=2460}
                                                ;*invokevirtual getResource {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@81 (line 1050)
                                                ;   {optimized virtual_call}
  0x00007fab7413b15c: add    $0xd0,%rsp
  0x00007fab7413b163: pop    %rbp
  0x00007fab7413b164: test   %eax,0x1b6a6f96(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7413b16a: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@84 (line 1050)

  0x00007fab7413b16b: mov    0xa8(%rsp),%ecx
  0x00007fab7413b172: mov    0xa0(%rsp),%rdx
  0x00007fab7413b17a: mov    0x98(%rsp),%rbx
  0x00007fab7413b182: mov    %rbx,%r8
  0x00007fab7413b185: movabs $0x7fab61b8fc50,%rdi  ;   {metadata(method data for {method} {0x00007fab61abbd30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab7413b18f: movabs $0x7c003adc0,%r10  ;   {metadata(&apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab7413b199: mov    %r10,0x308(%rdi)
  0x00007fab7413b1a0: addq   $0x1,0x310(%rdi)
  0x00007fab7413b1a8: mov    %rsi,%r8
  0x00007fab7413b1ab: mov    %rbx,%rsi          ;*invokevirtual checkResource {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@54 (line 1044)

  0x00007fab7413b1ae: nop
  0x00007fab7413b1af: callq  0x00007fab74047d60  ; OopMap{off=2548}
                                                ;*invokevirtual checkResource {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@54 (line 1044)
                                                ;   {optimized virtual_call}
  0x00007fab7413b1b4: add    $0xd0,%rsp
  0x00007fab7413b1bb: pop    %rbp
  0x00007fab7413b1bc: test   %eax,0x1b6a6f3e(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7413b1c2: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@57 (line 1044)

  0x00007fab7413b1c3: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fab7413b1cd: add    $0xd0,%rsp
  0x00007fab7413b1d4: pop    %rbp
  0x00007fab7413b1d5: test   %eax,0x1b6a6f25(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7413b1db: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@19 (line 1033)

  0x00007fab7413b1dc: mov    0x2c0(%r15),%rax
  0x00007fab7413b1e3: xor    %r10,%r10
  0x00007fab7413b1e6: mov    %r10,0x2c0(%r15)
  0x00007fab7413b1ed: xor    %r10,%r10
  0x00007fab7413b1f0: mov    %r10,0x2c8(%r15)
  0x00007fab7413b1f7: mov    %rax,%rsi
  0x00007fab7413b1fa: nopw   0x0(%rax,%rax,1)
  0x00007fab7413b200: jmpq   0x00007fab7413b3bf  ;   {no_reloc}
  0x00007fab7413b205: add    %al,(%rax)
  0x00007fab7413b207: add    %al,(%rax)
  0x00007fab7413b209: add    %ch,%cl
  0x00007fab7413b20b: mov    $0x48000001,%edx   ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@28 (line 1040)

  0x00007fab7413b210: mov    %eax,%edx
  0x00007fab7413b212: movabs $0x7fab61b8fc50,%rdi  ;   {metadata(method data for {method} {0x00007fab61abbd30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab7413b21c: addq   $0x1,0x230(%rdi)
  0x00007fab7413b224: mov    %rsi,%rdx
  0x00007fab7413b227: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@33 (line 1040)

  0x00007fab7413b22a: mov    %rax,0xc0(%rsp)
  0x00007fab7413b232: nop
  0x00007fab7413b233: nop
  0x00007fab7413b234: nop
  0x00007fab7413b235: nop
  0x00007fab7413b236: nop
  0x00007fab7413b237: callq  0x00007fab74047d60  ; OopMap{[192]=Oop off=2684}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@33 (line 1040)
                                                ;   {optimized virtual_call}
  0x00007fab7413b23c: mov    0xc0(%rsp),%rax
  0x00007fab7413b244: jmpq   0x00007fab7413b401
  0x00007fab7413b249: mov    %rdi,0x8(%rsp)
  0x00007fab7413b24e: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413b256: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [152]=Oop rdx=Oop off=2715}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@-1 (line 1031)
                                                ;   {runtime_call}
  0x00007fab7413b25b: jmpq   0x00007fab7413a829
  0x00007fab7413b260: callq  0x00007fab740fc000  ; OopMap{rdx=Oop [152]=Oop rdi=Oop off=2725}
                                                ;*invokevirtual mayContain {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@12 (line 1032)
                                                ;   {runtime_call}
  0x00007fab7413b265: callq  0x00007fab740fc000  ; OopMap{[160]=Oop rsi=Oop [152]=Oop rdi=Oop off=2730}
                                                ;*invokevirtual getJarEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {runtime_call}
  0x00007fab7413b26a: mov    %rdx,0x8(%rsp)
  0x00007fab7413b26f: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413b277: callq  0x00007fab741005e0  ; OopMap{[160]=Oop rsi=Oop [152]=Oop rdi=Oop off=2748}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarFile::getJarEntry@-1 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {runtime_call}
  0x00007fab7413b27c: jmpq   0x00007fab7413a99e
  0x00007fab7413b281: mov    %rdx,0x8(%rsp)
  0x00007fab7413b286: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413b28e: callq  0x00007fab741005e0  ; OopMap{[160]=Oop rsi=Oop [152]=Oop rdi=Oop off=2771}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarFile::getEntry@-1 (line 240)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {runtime_call}
  0x00007fab7413b293: jmpq   0x00007fab7413a9e5
  0x00007fab7413b298: mov    %rdx,%rdx
  0x00007fab7413b29b: callq  0x00007fab740fc760  ; OopMap{[160]=Oop [152]=Oop rbx=Oop r8=Oop off=2784}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@10 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {runtime_call}
  0x00007fab7413b2a0: jmpq   0x00007fab7413aaaa
  0x00007fab7413b2a5: mov    %rdx,0x8(%rsp)
  0x00007fab7413b2aa: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413b2b2: callq  0x00007fab741005e0  ; OopMap{[160]=Oop [152]=Oop rbx=Oop r8=Oop rax=Oop off=2807}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@-1 (line 286)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {runtime_call}
  0x00007fab7413b2b7: jmpq   0x00007fab7413aaf1
  0x00007fab7413b2bc: mov    %rdx,0x8(%rsp)
  0x00007fab7413b2c1: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413b2c9: callq  0x00007fab741005e0  ; OopMap{[160]=Oop [152]=Oop rbx=Oop rax=Oop off=2830}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarEntry::&lt;init&gt;@-1 (line 62)
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@7 (line 287)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {runtime_call}
  0x00007fab7413b2ce: jmpq   0x00007fab7413ab58
  0x00007fab7413b2d3: mov    %rax,(%rsp)
  0x00007fab7413b2d7: callq  0x00007fab740fe2c0  ; OopMap{[160]=Oop [152]=Oop off=2844}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@5 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {runtime_call}
  0x00007fab7413b2dc: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab7413b2e6: mov    $0xa050f00,%eax
  0x00007fab7413b2eb: callq  0x00007fab740ff5e0  ; OopMap{rbx=Oop [152]=Oop [160]=Oop off=2864}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@67 (line 1049)
                                                ;   {runtime_call}
  0x00007fab7413b2f0: jmpq   0x00007fab7413ae78
  0x00007fab7413b2f5: mov    %rdx,%rdx
  0x00007fab7413b2f8: callq  0x00007fab740fc760  ; OopMap{rbx=Oop [152]=Oop [160]=Oop off=2877}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@67 (line 1049)
                                                ;   {runtime_call}
  0x00007fab7413b2fd: jmpq   0x00007fab7413aeb5
  0x00007fab7413b302: mov    %rdx,0x8(%rsp)
  0x00007fab7413b307: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413b30f: callq  0x00007fab741005e0  ; OopMap{rbx=Oop [152]=Oop [160]=Oop r8=Oop off=2900}
                                                ;*synchronization entry
                                                ; - java.util.HashSet::&lt;init&gt;@-1 (line 104)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007fab7413b314: jmpq   0x00007fab7413aeff
  0x00007fab7413b319: mov    %rdx,0x8(%rsp)
  0x00007fab7413b31e: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413b326: callq  0x00007fab741005e0  ; OopMap{rbx=Oop [152]=Oop [160]=Oop r8=Oop off=2923}
                                                ;*synchronization entry
                                                ; - java.util.AbstractSet::&lt;init&gt;@-1 (line 63)
                                                ; - java.util.HashSet::&lt;init&gt;@1 (line 104)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007fab7413b32b: jmpq   0x00007fab7413af46
  0x00007fab7413b330: mov    %rdx,0x8(%rsp)
  0x00007fab7413b335: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413b33d: callq  0x00007fab741005e0  ; OopMap{rbx=Oop [152]=Oop [160]=Oop r8=Oop off=2946}
                                                ;*synchronization entry
                                                ; - java.util.AbstractCollection::&lt;init&gt;@-1 (line 66)
                                                ; - java.util.AbstractSet::&lt;init&gt;@1 (line 63)
                                                ; - java.util.HashSet::&lt;init&gt;@1 (line 104)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007fab7413b342: jmpq   0x00007fab7413af8d
  0x00007fab7413b347: mov    %rdx,0x8(%rsp)
  0x00007fab7413b34c: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413b354: callq  0x00007fab741005e0  ; OopMap{rbx=Oop [152]=Oop [160]=Oop r8=Oop off=2969}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.AbstractCollection::&lt;init&gt;@1 (line 66)
                                                ; - java.util.AbstractSet::&lt;init&gt;@1 (line 63)
                                                ; - java.util.HashSet::&lt;init&gt;@1 (line 104)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007fab7413b359: jmpq   0x00007fab7413afd4
  0x00007fab7413b35e: mov    %rdx,%rdx
  0x00007fab7413b361: callq  0x00007fab740fc760  ; OopMap{rbx=Oop [152]=Oop [160]=Oop r8=Oop off=2982}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashSet::&lt;init&gt;@5 (line 105)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007fab7413b366: jmpq   0x00007fab7413b021
  0x00007fab7413b36b: mov    %rdx,0x8(%rsp)
  0x00007fab7413b370: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413b378: callq  0x00007fab741005e0  ; OopMap{rbx=Oop [152]=Oop [160]=Oop r8=Oop rax=Oop off=3005}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::&lt;init&gt;@-1 (line 474)
                                                ; - java.util.HashSet::&lt;init&gt;@9 (line 105)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007fab7413b37d: jmpq   0x00007fab7413b068
  0x00007fab7413b382: mov    %rdx,0x8(%rsp)
  0x00007fab7413b387: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413b38f: callq  0x00007fab741005e0  ; OopMap{rbx=Oop [152]=Oop [160]=Oop r8=Oop rax=Oop off=3028}
                                                ;*synchronization entry
                                                ; - java.util.AbstractMap::&lt;init&gt;@-1 (line 73)
                                                ; - java.util.HashMap::&lt;init&gt;@1 (line 474)
                                                ; - java.util.HashSet::&lt;init&gt;@9 (line 105)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007fab7413b394: jmpq   0x00007fab7413b0af
  0x00007fab7413b399: mov    %rdx,0x8(%rsp)
  0x00007fab7413b39e: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413b3a6: callq  0x00007fab741005e0  ; OopMap{rbx=Oop [152]=Oop [160]=Oop r8=Oop rax=Oop off=3051}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.AbstractMap::&lt;init&gt;@1 (line 73)
                                                ; - java.util.HashMap::&lt;init&gt;@1 (line 474)
                                                ; - java.util.HashSet::&lt;init&gt;@9 (line 105)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007fab7413b3ab: jmpq   0x00007fab7413b0f6
  0x00007fab7413b3b0: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab7413b3ba: mov    $0xa050f00,%eax
  0x00007fab7413b3bf: callq  0x00007fab740ff5e0  ; OopMap{rsi=Oop off=3076}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@28 (line 1040)
                                                ;   {runtime_call}
  0x00007fab7413b3c4: jmpq   0x00007fab7413b200
  0x00007fab7413b3c9: mov    %rdx,%rdx
  0x00007fab7413b3cc: callq  0x00007fab740fc4a0  ; OopMap{rsi=Oop off=3089}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@28 (line 1040)
                                                ;   {runtime_call}
  0x00007fab7413b3d1: jmpq   0x00007fab7413b20f
  0x00007fab7413b3d6: nop
  0x00007fab7413b3d7: nop
  0x00007fab7413b3d8: mov    0x2c0(%r15),%rax
  0x00007fab7413b3df: movabs $0x0,%r10
  0x00007fab7413b3e9: mov    %r10,0x2c0(%r15)
  0x00007fab7413b3f0: movabs $0x0,%r10
  0x00007fab7413b3fa: mov    %r10,0x2c8(%r15)
  0x00007fab7413b401: add    $0xd0,%rsp
  0x00007fab7413b408: pop    %rbp
  0x00007fab7413b409: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7413b40e: hlt    
  0x00007fab7413b40f: hlt    
  0x00007fab7413b410: hlt    
  0x00007fab7413b411: hlt    
  0x00007fab7413b412: hlt    
  0x00007fab7413b413: hlt    
  0x00007fab7413b414: hlt    
  0x00007fab7413b415: hlt    
  0x00007fab7413b416: hlt    
  0x00007fab7413b417: hlt    
  0x00007fab7413b418: hlt    
  0x00007fab7413b419: hlt    
  0x00007fab7413b41a: hlt    
  0x00007fab7413b41b: hlt    
  0x00007fab7413b41c: hlt    
  0x00007fab7413b41d: hlt    
  0x00007fab7413b41e: hlt    
  0x00007fab7413b41f: hlt    
[Stub Code]
  0x00007fab7413b420: nop                       ;   {no_reloc}
  0x00007fab7413b421: nop
  0x00007fab7413b422: nop
  0x00007fab7413b423: nop
  0x00007fab7413b424: nop
  0x00007fab7413b425: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413b42f: jmpq   0x00007fab7413b42f  ;   {runtime_call}
  0x00007fab7413b434: nop
  0x00007fab7413b435: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413b43f: jmpq   0x00007fab7413b43f  ;   {runtime_call}
  0x00007fab7413b444: nop
  0x00007fab7413b445: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413b44f: jmpq   0x00007fab7413b44f  ;   {runtime_call}
  0x00007fab7413b454: nop
  0x00007fab7413b455: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413b45f: jmpq   0x00007fab7413b45f  ;   {runtime_call}
  0x00007fab7413b464: nop
  0x00007fab7413b465: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413b46f: jmpq   0x00007fab7413b46f  ;   {runtime_call}
  0x00007fab7413b474: nop
  0x00007fab7413b475: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413b47f: jmpq   0x00007fab7413b47f  ;   {runtime_call}
  0x00007fab7413b484: nop
  0x00007fab7413b485: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413b48f: jmpq   0x00007fab7413b48f  ;   {runtime_call}
[Exception Handler]
  0x00007fab7413b494: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab7413b499: mov    %rsp,-0x28(%rsp)
  0x00007fab7413b49e: sub    $0x80,%rsp
  0x00007fab7413b4a5: mov    %rax,0x78(%rsp)
  0x00007fab7413b4aa: mov    %rcx,0x70(%rsp)
  0x00007fab7413b4af: mov    %rdx,0x68(%rsp)
  0x00007fab7413b4b4: mov    %rbx,0x60(%rsp)
  0x00007fab7413b4b9: mov    %rbp,0x50(%rsp)
  0x00007fab7413b4be: mov    %rsi,0x48(%rsp)
  0x00007fab7413b4c3: mov    %rdi,0x40(%rsp)
  0x00007fab7413b4c8: mov    %r8,0x38(%rsp)
  0x00007fab7413b4cd: mov    %r9,0x30(%rsp)
  0x00007fab7413b4d2: mov    %r10,0x28(%rsp)
  0x00007fab7413b4d7: mov    %r11,0x20(%rsp)
  0x00007fab7413b4dc: mov    %r12,0x18(%rsp)
  0x00007fab7413b4e1: mov    %r13,0x10(%rsp)
  0x00007fab7413b4e6: mov    %r14,0x8(%rsp)
  0x00007fab7413b4eb: mov    %r15,(%rsp)
  0x00007fab7413b4ef: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7413b4f9: movabs $0x7fab7413b499,%rsi  ;   {internal_word}
  0x00007fab7413b503: mov    %rsp,%rdx
  0x00007fab7413b506: and    $0xfffffffffffffff0,%rsp
  0x00007fab7413b50a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7413b50f: hlt    
[Deopt Handler Code]
  0x00007fab7413b510: movabs $0x7fab7413b510,%r10  ;   {section_word}
  0x00007fab7413b51a: push   %r10
  0x00007fab7413b51c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7413b521: hlt    
  0x00007fab7413b522: hlt    
  0x00007fab7413b523: hlt    
  0x00007fab7413b524: hlt    
  0x00007fab7413b525: hlt    
  0x00007fab7413b526: hlt    
  0x00007fab7413b527: hlt    
<nmethod compile_id='89' compiler='C1' level='3' entry='0x00007fab7413a7c0' size='5904' address='0x00007fab7413a550' relocation_offset='312' insts_offset='624' stub_offset='3792' scopes_data_offset='4168' scopes_pcs_offset='4856' dependencies_offset='5848' handler_table_offset='5856' nul_chk_table_offset='5880' metadata_offset='4056' method='sun/misc/URLClassPath$JarLoader getResource (Ljava/lang/String;Z)Lsun/misc/Resource;' bytes='85' count='399' iicount='399' stamp='0.378'/>
----------------------------------------------------------------------
java/net/URLClassLoader.access$000  [0x00007fab7413be00, 0x00007fab7413bef0]  240 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab6192ddf0} &apos;access$000&apos; &apos;(Ljava/net/URLClassLoader;)Lsun/misc/URLClassPath;&apos; in &apos;java/net/URLClassLoader&apos;
  # parm0:    rsi:rsi   = &apos;java/net/URLClassLoader&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab7413be00: mov    %eax,-0x14000(%rsp)
  0x00007fab7413be07: push   %rbp
  0x00007fab7413be08: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URLClassLoader::access$000@0 (line 73)

  0x00007fab7413be0c: mov    0x4c(%rsi),%eax    ; implicit exception: dispatches to 0x00007fab7413be1f
  0x00007fab7413be0f: shl    $0x3,%rax          ;*getfield ucp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URLClassLoader::access$000@1 (line 73)

  0x00007fab7413be13: add    $0x30,%rsp
  0x00007fab7413be17: pop    %rbp
  0x00007fab7413be18: test   %eax,0x1b6a62e2(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7413be1e: retq   
  0x00007fab7413be1f: callq  0x00007fab740fc000  ; OopMap{off=36}
                                                ;*getfield ucp {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.net.URLClassLoader::access$000@1 (line 73)
                                                ;   {runtime_call}
  0x00007fab7413be24: nop
  0x00007fab7413be25: nop
  0x00007fab7413be26: mov    0x2c0(%r15),%rax
  0x00007fab7413be2d: movabs $0x0,%r10
  0x00007fab7413be37: mov    %r10,0x2c0(%r15)
  0x00007fab7413be3e: movabs $0x0,%r10
  0x00007fab7413be48: mov    %r10,0x2c8(%r15)
  0x00007fab7413be4f: add    $0x30,%rsp
  0x00007fab7413be53: pop    %rbp
  0x00007fab7413be54: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7413be59: hlt    
  0x00007fab7413be5a: hlt    
  0x00007fab7413be5b: hlt    
  0x00007fab7413be5c: hlt    
  0x00007fab7413be5d: hlt    
  0x00007fab7413be5e: hlt    
  0x00007fab7413be5f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab7413be60: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7413be65: mov    %rsp,-0x28(%rsp)
  0x00007fab7413be6a: sub    $0x80,%rsp
  0x00007fab7413be71: mov    %rax,0x78(%rsp)
  0x00007fab7413be76: mov    %rcx,0x70(%rsp)
  0x00007fab7413be7b: mov    %rdx,0x68(%rsp)
  0x00007fab7413be80: mov    %rbx,0x60(%rsp)
  0x00007fab7413be85: mov    %rbp,0x50(%rsp)
  0x00007fab7413be8a: mov    %rsi,0x48(%rsp)
  0x00007fab7413be8f: mov    %rdi,0x40(%rsp)
  0x00007fab7413be94: mov    %r8,0x38(%rsp)
  0x00007fab7413be99: mov    %r9,0x30(%rsp)
  0x00007fab7413be9e: mov    %r10,0x28(%rsp)
  0x00007fab7413bea3: mov    %r11,0x20(%rsp)
  0x00007fab7413bea8: mov    %r12,0x18(%rsp)
  0x00007fab7413bead: mov    %r13,0x10(%rsp)
  0x00007fab7413beb2: mov    %r14,0x8(%rsp)
  0x00007fab7413beb7: mov    %r15,(%rsp)
  0x00007fab7413bebb: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7413bec5: movabs $0x7fab7413be65
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.code.site.Site from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
,%rsi                                           ;   {internal_word}
  0x00007fab7413becf: mov    %rsp,%rdx
  0x00007fab7413bed2: and    $0xfffffffffffffff0,%rsp
  0x00007fab7413bed6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7413bedb: hlt    
[Deopt Handler Code]
  0x00007fab7413bedc: movabs $0x7fab7413bedc,%r10  ;   {section_word}
  0x00007fab7413bee6: push   %r10
  0x00007fab7413bee8: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7413beed: hlt    
  0x00007fab7413beee: hlt    
  0x00007fab7413beef: hlt    
<nmethod compile_id='86' compiler='C1' level='1' entry='0x00007fab7413be00' size='744' address='0x00007fab7413bc90' relocation_offset='312' insts_offset='368' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='640' dependencies_offset='720' nul_chk_table_offset='728' metadata_offset='608' method='java/net/URLClassLoader access$000 (Ljava/net/URLClassLoader;)Lsun/misc/URLClassPath;' bytes='5' count='152' iicount='152' stamp='0.379'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.code.site.Infopoint from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.site.Call from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
sun/misc/URLClassPath$JarLoader.access$700  [0x00007fab7413c100, 0x00007fab7413c1f0]  240 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab61abc6e0} &apos;access$700&apos; &apos;(Lsun/misc/URLClassPath$JarLoader;)Ljava/util/jar/JarFile;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;
  # parm0:    rsi:rsi   = &apos;sun/misc/URLClassPath$JarLoader&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab7413c100: mov    %eax,-0x14000(%rsp)
  0x00007fab7413c107: push   %rbp
  0x00007fab7413c108: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::access$700@0 (line 791)

  0x00007fab7413c10c: mov    0x18(%rsi),%eax    ; implicit exception: dispatches to 0x00007fab7413c11f
  0x00007fab7413c10f: shl    $0x3,%rax          ;*getfield jar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::access$700@1 (line 791)

  0x00007fab7413c113: add    $0x30,%rsp
  0x00007fab7413c117: pop    %rbp
  0x00007fab7413c118: test   %eax,0x1b6a5fe2(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7413c11e: retq   
  0x00007fab7413c11f: callq  0x00007fab740fc000  ; OopMap{off=36}
                
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.code.site.Reference from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
                                ;*getfield jar {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::access$700@1 (line 791)
                                                ;   {runtime_call}
  0x00007fab7413c124: nop
  0x00007fab7413c125: nop
  0x00007fab7413c126: mov    0x2c0(%r15),%rax
  0x00007fab7413c12d: movabs $0x0,%r10
  0x00007fab7413c137: mov    %r10,0x2c0(%r15)
  0x00007fab7413c13e: movabs $0x0,%r10
  0x00007fab7413c148: mov    %r10,0x2c8(%r15)
  0x00007fab7413c14f: add    $0x30,%rsp
  0x00007fab7413c153: pop    %rbp
  0x00007fab7413c154: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7413c159: hlt    
  0x00007fab7413c15a: hlt    
  0x00007fab7413c15b: hlt    
  0x00007fab7413c15c: hlt    
  0x00007fab7413c15d: hlt    
  0x00007fab7413c15e: hlt    
  0x00007fab7413c15f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab7413c160: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7413c165: mov    %rsp,-0x28(%rsp)
  0x00007fab7413c16a: sub    $0x80,%rsp
  0x00007fab7413c171: mov    %rax,0x78(%rsp)
  0x00007fab7413c176: mov    %rcx,0x70(%rsp)
  0x00007fab7413c17b: mov    %rdx,0x68(%rsp)
  0x00007fab7413c180: mov    %rbx,0x60(%rsp)
  0x00007fab7413c185: mov    %rbp,0x50(%rsp)
  0x00007fab7413c18a: mov    %rsi,0x48(%rsp)
  0x00007fab7413c18f: mov    %rdi,0x40(%rsp)
  0x00007fab7413c194: mov    %r8,0x38(%rsp)
  0x00007fab7413c199: mov    %r9,0x30(%rsp)
  0x00007fab7413c19e: mov    %r10,0x28(%rsp)
  0x00007fab7413c1a3: mov    %r11,0x20(%rsp)
  0x00007fab7413c1a8: mov    %r12,0x18(%rsp)
  0x00007fab7413c1ad: mov    %r13,0x10(%rsp)
  0x00007fab7413c1b2: mov    %r14,0x8(%rsp)
  0x00007fab7413c1b7: mov    %r15,(%rsp)
  0x00007fab7413c1bb: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7413c1c5: movabs $0x7fab7413c165,%rsi  ;   {internal_word}
  0x00007fab7413c1cf: mov    %rsp,%rdx
  0x00007fab7413c1d2: and    $0xfffffffffffffff0,%rsp
  0x00007fab7413c1d6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7413c1db: hlt    
[Deopt Handler Code]
  0x00007fab7413c1dc: movabs $0x7fab7413c1dc,%r10  ;   {section_word}
  0x00007fab7413c1e6: push   %r10
  0x00007fab7413c1e8: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7413c1ed: hlt    
  0x00007fab7413c1ee: hlt    
  0x00007fab7413c1ef: hlt    
<nmethod compile_id='87' compiler='C1' level='1' entry='0x00007fab7413c100' size='744' address='0x00007fab7413bf90' relocation_offset='312' insts_offset='368' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='640' dependencies_offset='720' nul_chk_table_offset='728' metadata_offset='608' method='sun/misc/URLClassPath$JarLoader access$700 (Lsun/misc/URLClassPath$JarLoader;)Ljava/util/jar/JarFile;' bytes='5' count='156' iicount='156' stamp='0.380'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.code.site.ConstantReference from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/zip/ZipFile.access$000  [0x00007fab7413c400, 0x00007fab7413c4f0]  240 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab61ac22c8} &apos;access$000&apos; &apos;(Ljava/util/zip/ZipFile;)Ljava/util/Map;&apos; in &apos;java/util/zip/ZipFile&apos;
  # parm0:    rsi:rsi   = &apos;java/util/zip/ZipFile&apos;
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.code.site.DataPatch from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
  #           [sp+0x40]  (sp of caller)
  0x00007fab7413c400: mov    %eax,-0x14000(%rsp)
  0x00007fab7413c407: push   %rbp
  0x00007fab7413c408: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::access$000@0 (line 60)

  0x00007fab7413c40c: mov    0x24(%rsi),%eax    ; implicit exception: dispatches to 0x00007fab7413c41f
  0x00007fab7413c40f: shl    $0x3,%rax          ;*getfield streams {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::access$000@1 (line 60)

  0x00007fab7413c413: add    $0x30,%rsp
  0x00007fab7413c417: pop    %rbp
  0x00007fab7413c418: test   %eax,0x1b6a5ce2(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7413c41e: retq   
  0x00007fab7413c41f: callq  0x00007fab740fc000  ; OopMap{off=36}
                                                ;*getfield streams {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::access$000@1 (line 60)
                                                ;   {runtime_call}
  0x00007fab7413c424: nop
  0x00007fab7413c425: nop
  0x00007fab7413c426: mov    0x2c0(%r15),%rax
  0x00007fab7413c42d: movabs $0x0,%r10
  0x00007fab7413c437: mov    %r10,0x2c0(%r15)
  0x00007fab7413c43e: movabs $0x0,%r10
  0x00007fab7413c448: mov    %r10,0x2c8(%r15)
  0x00007fab7413c44f: add    $0x30,%rsp
  0x00007fab7413c453: pop    %rbp
  0x00007fab7413c454: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7413c459: hlt    
  0x00007fab7413c45a: hlt    
  0x00007fab7413c45b: hlt    
  0x00007fab7413c45c: hlt    
  0x00007fab7413c45d: hlt    
  0x00007fab7413c45e: hlt    
  0x00007fab7413c45f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab7413c460: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7413c465: mov    %rsp,-0x28(%rsp)
  0x00007fab7413c46a: sub    $0x80,%rsp
  0x00007fab7413c471: mov    %rax,0x78(%rsp)
  0x00007fab7413c476: mov    %rcx,0x70(%rsp)
  0x00007fab7413c47b: mov    %rdx,0x68(%rsp)
  0x00007fab7413c480: mov    %rbx,0x60(%rsp)
  0x00007fab7413c485: mov    %rbp,0x50(%rsp)
  0x00007fab7413c48a: mov    %rsi,0x48(%rsp)
  0x00007fab7413c48f: mov    %rdi,0x40(%rsp)
  0x00007fab7413c494: mov    %r8,0x38(%rsp)
  0x00007fab7413c499: mov    %r9,0x30(%rsp)
  0x00007fab7413c49e: mov    %r10,0x28(%rsp)
  0x00007fab7413c4a3: mov    %r11,0x20(%rsp)
  0x00007fab7413c4a8: mov    %r12,0x18(%rsp)
  0x00007fab7413c4ad: mov    %r13,0x10(%rsp)
  0x00007fab7413c4b2: mov    %r14,0x8(%rsp)
  0x00007fab7413c4b7: mov    %r15,(%rsp)
  0x00007fab7413c4bb: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7413c4c5: movabs $0x7fab7413c465,%rsi  ;   {internal_word}
  0x00007fab7413c4cf: mov    %rsp,%rdx
  0x00007fab7413c4d2: and    $0xfffffffffffffff0,%rsp
  0x00007fab7413c4d6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7413c4db: hlt    
[Deopt Handler Code]
  0x00007fab7413c4dc: movabs $0x7fab7413c4dc,%r10  ;   {section_word}
  0x00007fab7413c4e6: push   %r10
  0x00007fab7413c4e8: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7413c4ed: hlt    
  0x00007fab7413c4ee: hlt    
  0x00007fab7413c4ef: hlt    
<nmethod compile_id='88' compiler='C1' level='1' entry='0x00007fab7413c400' size='744' address='0x00007fab7413c290' relocation_offset='312' insts_offset='368' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='640' dependencies_offset='720' nul_chk_table_offset='728' metadata_offset='608' method='java/util/zip/ZipFile access$000 (Ljava/util/zip/ZipFile;)Ljava/util/Map;' bytes='5' count='152' iicount='152' stamp='0.380'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.code.site.DataSectionReference from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
----------------------------------------------------------------------
java/lang/Object.hashCode  [0x00007fab7413c720, 0x00007fab7413c928]  520 bytes
[Entry Point]
  # {method} {0x00007fab61891698} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fab7413c720: mov    0x8(%rsi),%r10d
  0x00007fab7413c724: shl    $0x3,%r10
  0x00007fab7413c728: cmp    %r10,%rax
  0x00007fab7413c72b: je     0x00007fab7413c738
  0x00007fab7413c731: jmpq   0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7413c736: xchg   %ax,%ax
[Verified Entry Point]
  0x00007fab7413c738: mov    (%rsi),%rax
  0x00007fab7413c73b: test   $0x1,%rax
  0x00007fab7413c741: je     0x00007fab7413c765
  0x00007fab7413c747: test   $0x4,%rax
  0x00007fab7413c74d: jne    0x00007fab7413c765
  0x00007fab7413c753: shr    $0x8,%rax
  0x00007fab7413c757: and    $0x7fffffff,%rax
  0x00007fab7413c75e: je     0x00007fab7413c765
  0x00007fab7413c764: retq   
  0x00007fab7413c765: mov    %eax,-0x14000(%rsp)
  0x00007fab7413c76c: push   %rbp
  0x00007fab7413c76d: mov    %rsp,%rbp
  0x00007fab7413c770: sub    $0x40,%rsp
  0x00007fab7413c774: mov    %rsi,(%rsp)
  0x00007fab7413c778: cmp    $0x0,%rsi
  0x00007fab7413c77c: lea    (%rsp),%rsi
  0x00007fab7413c780: cmove  (%rsp),%rsi        ; OopMap{[0]=Oop off=101}
  0x00007fab7413c785: movabs $0x7fab7413c785,%r10  ;   {section_word}
  0x00007fab7413c78f: mov    %r10,0x1c8(%r15)
  0x00007fab7413c796: mov    %rsp,0x1c0(%r15)
  0x00007fab7413c79d: cmpb   $0x0,0x1a838230(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab7413c7a4: je     0x00007fab7413c7dc
  0x00007fab7413c7aa: push   %rsi
  0x00007fab7413c7ab: movabs $0x7fab61891698,%rsi  ;   {metadata({method} {0x00007fab61891698} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7413c7b5: mov    %r15,%rdi
  0x00007fab7413c7b8: test   $0xf,%esp
  0x00007fab7413c7be: je     0x00007fab7413c7d6
  0x00007fab7413c7c4: sub    $0x8,%rsp
  0x00007fab7413c7c8: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab7413c7cd: add    $0x8,%rsp
  0x00007fab7413c7d1: jmpq   0x00007fab7413c7db
  0x00007fab7413c7d6: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab7413c7db: pop    %rsi
  0x00007fab7413c7dc: lea    0x1e0(%r15),%rdi
  0x00007fab7413c7e3: movl   $0x4,0x258(%r15)
  0x00007fab7413c7ee: callq  0x00007fab8e078340  ;   {runtime_call}
  0x00007fab7413c7f3: vzeroupper 
  0x00007fab7413c7f6: movl   $0x5,0x258(%r15)
  0x00007fab7413c801: mov    %r15d,%ecx
  0x00007fab7413c804: shr    $0x4,%ecx
  0x00007fab7413c807: and    $0xffc,%ecx
  0x00007fab7413c80d: movabs $0x7fab8f7e1000,%r10  ;   {external_word}
  0x00007fab7413c817: mov    %ecx,(%r10,%rcx,1)
  0x00007fab7413c81b: cmpl   $0x0,0x1a843197(%rip)        # 0x00007fab8e97f9bc
                                                ;   {external_word}
  0x00007fab7413c825: jne    0x00007fab7413c839
  0x00007fab7413c82b: cmpl   $0x0,0x30(%r15)
  0x00007fab7413c833: je     0x00007fab7413c85a
  0x00007fab7413c839: mov    %rax,-0x8(%rbp)
  0x00007fab7413c83d: mov    %r15,%rdi
  0x00007fab7413c840: mov    %rsp,%r12
  0x00007fab7413c843: sub    $0x0,%rsp
  0x00007fab7413c847: and    $0xfffffffffffffff0,%rsp
  0x00007fab7413c84b: callq  0x00007fab8e40fc20  ;   {runtime_call}
  0x00007fab7413c850: mov    %r12,%rsp
  0x00007fab7413c853: xor    %r12,%r12
  0x00007fab7413c856: mov    -0x8(%rbp),%rax
  0x00007fab7413c85a: movl   $0x8,0x258(%r15)
  0x00007fab7413c865: cmpl   $0x1,0x2b0(%r15)
  0x00007fab7413c870: je     0x00007fab7413c900
  0x00007fab7413c876: cmpb   $0x0,0x1a838157(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab7413c87d: je     0x00007fab7413c8bb
  0x00007fab7413c883: mov    %rax,-0x8(%rbp)
  0x00007fab7413c887: movabs $0x7fab61891698,%rsi  ;   {metadata({method} {0x00007fab61891698} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7413c891: mov    %r15,%rdi
  0x00007fab7413c894: test   $0xf,%esp
  0x00007fab7413c89a: je     0x00007fab7413c8b2
  0x00007fab7413c8a0: sub    $0x8,%rsp
  0x00007fab7413c8a4: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab7413c8a9: add    $0x8,%rsp
  0x00007fab7413c8ad: jmpq   0x00007fab7413c8b7
  0x00007fab7413c8b2: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab7413c8b7: mov    -0x8(%rbp),%rax
  0x00007fab7413c8bb: movabs $0x0,%r10
  0x00007fab7413c8c5: mov    %r10,0x1c0(%r15)
  0x00007fab7413c8cc: movabs $0x0,%r10
  0x00007fab7413c8d6: mov    %r10,0x1c8(%r15)
  0x00007fab7413c8dd: mov    0x38(%r15),%rcx
  0x00007fab7413c8e1: movl   $0x0,0x100(%rcx)
  0x00007fab7413c8eb: leaveq 
  0x00007fab7413c8ec: cmpq   $0x0,0x8(%r15)
  0x00007fab7413c8f4: jne    0x00007fab7413c8fb
  0x00007fab7413c8fa: retq   
  0x00007fab7413c8fb: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00007fab7413c900: mov    %rax,-0x8(%rbp)
  0x00007fab7413c904: mov    %rsp,%r12
  0x00007fab7413c907: sub    $0x0,%rsp
  0x00007fab7413c90b: and    $0xfffffffffffffff0,%rsp
  0x00007fab7413c90f: callq  0x00007fab8e372120  ;   {runtime_call}
  0x00007fab7413c914: mov    %r12,%rsp
  0x00007fab7413c917: xor    %r12,%r12
  0x00007fab7413c91a: mov    -0x8(%rbp),%rax
  0x00007fab7413c91e: jmpq   0x00007fab7413c876
  0x00007fab7413c923: hlt    
  0x00007fab7413c924: hlt    
  0x00007fab7413c925: hlt    
  0x00007fab7413c926: hlt    
  0x00007fab7413c927: hlt    
<nmethod compile_id='90' compile_kind='c2n' level='0' entry='0x00007fab7413c720' size='920' address='0x00007fab7413c590' relocation_offset='312' consts_offset='920' insts_offset='400' method='java/lang/Object hashCode ()I' bytes='0' count='256' iicount='256' stamp='0.381'/>
[Loaded jdk.vm.ci.code.site.ExceptionHandler from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<task_queued compile_id='91' method='java/lang/String endsWith (Ljava/lang/String;)Z' bytes='17' count='384' iicount='384' level='3' stamp='0.381' comment='tiered' hot_count='384'/>
[Loaded jdk.vm.ci.code.site.Mark from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/String.endsWith  [0x00007fab7413cae0, 0x00007fab7413cc88]  424 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61896d38} &apos;endsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab7413cae0: mov    0x8(%rsi),%r10d
  0x00007fab7413cae4: shl    $0x3,%r10
  0x00007fab7413cae8: cmp    %rax,%r10
  0x00007fab7413caeb: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7413caf1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7413cafc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7413cb00: mov    %eax,-0x14000(%rsp)
  0x00007fab7413cb07: push   %rbp
  0x00007fab7413cb08: sub    $0x30,%rsp
  0x00007fab7413cb0c: movabs $0x7fab61b92158,%rcx  ;   {metadata(method data for {method} {0x00007fab61896d38} &apos;endsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7413cb16: mov    0xfc(%rcx),%edi
  0x00007fab7413cb1c: add    $0x8,%edi
  0x00007fab7413cb1f: mov    %edi,0xfc(%rcx)
  0x00007fab7413cb25: movabs $0x7fab61896d38,%rcx  ;   {metadata({method} {0x00007fab61896d38} &apos;endsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7413cb2f: and    $0x1ff8,%edi
  0x00007fab7413cb35: cmp    $0x0,%edi
  0x00007fab7413cb38: je     0x00007fab7413cb83  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::endsWith@0 (line 1449)

  0x00007fab7413cb3e: mov    0xc(%rsi),%ecx
  0x00007fab7413cb41: shl    $0x3,%rcx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::endsWith@3 (line 1449)

  0x00007fab7413cb45: mov    0xc(%rcx),%ecx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::endsWith@6 (line 1449)
                                                ; implicit exception: dispatches to 0x00007fab7413cb97
  0x00007fab7413cb48: mov    0xc(%rdx),%edi     ; implicit exception: dispatches to 0x00007fab7413cb9c
  0x00007fab7413cb4b: shl    $0x3,%rdi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::endsWith@8 (line 1449)

  0x00007fab7413cb4f: mov    0xc(%rdi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::endsWith@11 (line 1449)
                                                ; implicit exception: dispatches to 0x00007fab7413cba1
  0x00007fab7413cb52: mov    %rsi,%rbx
  0x00007fab7413cb55: movabs $0x7fab61b92158,%rax  ;   {metadata(method data for {method} {0x00007fab61896d38} &apos;endsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7413cb5f: addq   $0x1,0x130(%rax)
  0x00007fab7413cb67: sub    %edi,%ecx
  0x00007fab7413cb69: nop
  0x00007fab7413cb6a: nop
  0x00007fab7413cb6b: nop
  0x00007fab7413cb6c: nop
  0x00007fab7413cb6d: nop
  0x00007fab7413cb6e: nop
  0x00007fab7413cb6f: callq  0x00007fab74047d60  ; OopMap{off=148}
                                                ;*invokevirtual startsWith {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::endsWith@13 (line 1449)
                                                ;   {optimized virtual_call}
  0x00007fab7413cb74: and    $0x1,%eax
  0x00007fab7413cb77: add    $0x30,%rsp
  0x00007fab7413cb7b: pop    %rbp
  0x00007fab7413cb7c: test   %eax,0x1b6a557e(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7413cb82: retq   
  0x00007fab7413cb83: mov    %rcx,0x8(%rsp)
  0x00007fab7413cb88: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413cb90: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop off=181}
                                                ;*synchronization entry
                                                ; - java.lang.String::endsWith@-1 (line 1449)
                                                ;   {runtime_call}
  0x00007fab7413cb95: jmp    0x00007fab7413cb3e
  0x00007fab7413cb97: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rdx=Oop off=188}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::endsWith@6 (line 1449)
                                                ;   {runtime_call}
  0x00007fab7413cb9c: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rdx=Oop off=193}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::endsWith@8 (line 1449)
                                                ;   {runtime_call}
  0x00007fab7413cba1: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rdx=Oop off=198}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::endsWith@11 (line 1449)
                                                ;   {runtime_call}
  0x00007fab7413cba6: nop
  0x00007fab7413cba7: nop
  0x00007fab7413cba8: mov    0x2c0(%r15),%rax
  0x00007fab7413cbaf: movabs $0x0,%r10
  0x00007fab7413cbb9: mov    %r10,0x2c0(%r15)
  0x00007fab7413cbc0: movabs $0x0,%r10
  0x00007fab7413cbca: mov    %r10,0x2c8(%r15)
  0x00007fab7413cbd1: add    $0x30,%rsp
  0x00007fab7413cbd5: pop    %rbp
  0x00007fab7413cbd6: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7413cbdb: hlt    
  0x00007fab7413cbdc: hlt    
  0x00007fab7413cbdd: hlt    
  0x00007fab7413cbde: hlt    
  0x00007fab7413cbdf: hlt    
[Stub Code]
  0x00007fab7413cbe0: nop                       ;   {no_reloc}
  0x00007fab7413cbe1: nop
  0x00007fab7413cbe2: nop
  0x00007fab7413cbe3: nop
  0x00007fab7413cbe4: nop
  0x00007fab7413cbe5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413cbef: jmpq   0x00007fab7413cbef  ;   {runtime_call}
[Exception Handler]
  0x00007fab7413cbf4: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab7413cbf9: mov    %rsp,-0x28(%rsp)
  0x00007fab7413cbfe: sub    $0x80,%rsp
  0x00007fab7413cc05: mov    %rax,0x78(%rsp)
  0x00007fab7413cc0a: mov    %rcx,0x70(%rsp)
  0x00007fab7413cc0f: mov    %rdx,0x68(%rsp)
  0x00007fab7413cc14: mov    %rbx,0x60(%rsp)
  0x00007fab7413cc19: mov    %rbp,0x50(%rsp)
  0x00007fab7413cc1e: mov    %rsi,0x48(%rsp)
  0x00007fab7413cc23: mov    %rdi,0x40(%rsp)
  0x00007fab7413cc28: mov    %r8,0x38(%rsp)
  0x00007fab7413cc2d: mov    %r9,0x30(%rsp)
  0x00007fab7413cc32: mov    %r10,0x28(%rsp)
  0x00007fab7413cc37: mov    %r11,0x20(%rsp)
  0x00007fab7413cc3c: mov    %r12,0x18(%rsp)
  0x00007fab7413cc41: mov    %r13,0x10(%rsp)
  0x00007fab7413cc46: mov    %r14,0x8(%rsp)
  0x00007fab7413cc4b: mov    %r15,(%rsp)
  0x00007fab7413cc4f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7413cc59: movabs $0x7fab7413cbf9,%rsi  ;   {internal_word}
  0x00007fab7413cc63: mov    %rsp,%rdx
  0x00007fab7413cc66: and    $0xfffffffffffffff0,%rsp
  0x00007fab7413cc6a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7413cc6f: hlt    
[Deopt Handler Code]
  0x00007fab7413cc70: movabs $0x7fab7413cc70,%r10  ;   {section_word}
  0x00007fab7413cc7a: push   %r10
  0x00007fab7413cc7c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7413cc81: hlt    
  0x00007fab7413cc82: hlt    
  0x00007fab7413cc83: hlt    
  0x00007fab7413cc84: hlt    
  0x00007fab7413cc85: hlt    
  0x00007fab7413cc86: hlt    
  0x00007fab7413cc87: hlt    
<nmethod compile_id='91' compiler='C1' level='3' entry='0x00007fab7413cae0' size='1136' address='0x00007fab7413c950' relocation_offset='312' insts_offset='400' stub_offset='656' scopes_data_offset='832' scopes_pcs_offset='904' dependencies_offset='1096' nul_chk_table_offset='1104' metadata_offset='824' method='java/lang/String endsWith (Ljava/lang/String;)Z' bytes='17' count='387' iicount='387' stamp='0.383'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.code.site.InfopointReason from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<task_queued compile_id='92' method='java/lang/ClassLoader checkName (Ljava/lang/String;)Z' bytes='43' count='384' iicount='384' level='3' stamp='0.383' comment='tiered' hot_count='384'/>
<task_queued compile_id='93' method='sun/misc/VM allowArraySyntax ()Z' bytes='4' count='384' iicount='384' level='3' stamp='0.383' comment='tiered' hot_count='384'/>
[Loaded jdk.vm.ci.meta.SerializableConstant from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.meta.PrimitiveConstant from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.meta.RawConstant from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/ClassLoader.checkName  [0x00007fab7413cfa0, 0x00007fab7413d518]  1400 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab618a9b00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;
  # this:     rsi:rsi   = &apos;java/lang/ClassLoader&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x60]  (sp of caller)
  0x00007fab7413cfa0: mov    0x8(%rsi),%r10d
  0x00007fab7413cfa4: shl    $0x3,%r10
  0x00007fab7413cfa8: cmp    %rax,%r10
  0x00007fab7413cfab: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7413cfb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7413cfbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7413cfc0: mov    %eax,-0x14000(%rsp)
  0x00007fab7413cfc7: push   %rbp
  0x00007fab7413cfc8: sub    $0x50,%rsp
  0x00007fab7413cfcc: movabs $0x7fab61b92368,%rcx  ;   {metadata(method data for {method} {0x00007fab618a9b00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007fab7413cfd6: mov    0xfc(%rcx),%edi
  0x00007fab7413cfdc: add    $0x8,%edi
  0x00007fab7413cfdf: mov    %edi,0xfc(%rcx)
  0x00007fab7413cfe5: movabs $0x7fab618a9b00,%rcx  ;   {metadata({method} {0x00007fab618a9b00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007fab7413cfef: and    $0x1ff8,%edi
  0x00007fab7413cff5: cmp    $0x0,%edi
  0x00007fab7413cff8: je     0x00007fab7413d376  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@0 (line 869)

  0x00007fab7413cffe: cmp    $0x0,%rdx
  0x00007fab7413d002: movabs $0x7fab61b92368,%rcx  ;   {metadata(method data for {method} {0x00007fab618a9b00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007fab7413d00c: movabs $0x130,%rsi
  0x00007fab7413d016: je     0x00007fab7413d026
  0x00007fab7413d01c: movabs $0x140,%rsi
  0x00007fab7413d026: mov    (%rcx,%rsi,1),%rdi
  0x00007fab7413d02a: lea    0x1(%rdi),%rdi
  0x00007fab7413d02e: mov    %rdi,(%rcx,%rsi,1)
  0x00007fab7413d032: je     0x00007fab7413d319  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@1 (line 869)

  0x00007fab7413d038: cmp    (%rdx),%rax        ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@5 (line 869)
                                                ; implicit exception: dispatches to 0x00007fab7413d38d
  0x00007fab7413d03b: mov    %rdx,%rcx
  0x00007fab7413d03e: movabs $0x7fab61b92368,%rsi  ;   {metadata(method data for {method} {0x00007fab618a9b00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007fab7413d048: addq   $0x1,0x150(%rsi)
  0x00007fab7413d050: movabs $0x7fab61ab9630,%rcx  ;   {metadata(method data for {method} {0x00007fab61895538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7413d05a: mov    0xfc(%rcx),%esi
  0x00007fab7413d060: add    $0x8,%esi
  0x00007fab7413d063: mov    %esi,0xfc(%rcx)
  0x00007fab7413d069: movabs $0x7fab61895538,%rcx  ;   {metadata({method} {0x00007fab61895538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7413d073: and    $0x7ffff8,%esi
  0x00007fab7413d079: cmp    $0x0,%esi
  0x00007fab7413d07c: je     0x00007fab7413d392
  0x00007fab7413d082: mov    0xc(%rdx),%ecx
  0x00007fab7413d085: shl    $0x3,%rcx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.ClassLoader::checkName@5 (line 869)

  0x00007fab7413d089: mov    0xc(%rcx),%ecx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.ClassLoader::checkName@5 (line 869)
                                                ; implicit exception: dispatches to 0x00007fab7413d3a9
  0x00007fab7413d08c: cmp    $0x0,%ecx
  0x00007fab7413d08f: movabs $0x7fab61b92368,%rcx  ;   {metadata(method data for {method} {0x00007fab618a9b00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007fab7413d099: movabs $0x1e8,%rsi
  0x00007fab7413d0a3: jne    0x00007fab7413d0b3
  0x00007fab7413d0a9: movabs $0x1f8,%rsi
  0x00007fab7413d0b3: mov    (%rcx,%rsi,1),%rdi
  0x00007fab7413d0b7: lea    0x1(%rdi),%rdi
  0x00007fab7413d0bb: mov    %rdi,(%rcx,%rsi,1)
  0x00007fab7413d0bf: je     0x00007fab7413d319  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@8 (line 869)

  0x00007fab7413d0c5: mov    %rdx,%rcx
  0x00007fab7413d0c8: movabs $0x7fab61b92368,%rsi  ;   {metadata(method data for {method} {0x00007fab618a9b00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007fab7413d0d2: addq   $0x1,0x208(%rsi)
  0x00007fab7413d0da: movabs $0x7fab61b2c4f0,%rcx  ;   {metadata(method data for {method} {0x00007fab61896ee8} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7413d0e4: mov    0xfc(%rcx),%esi
  0x00007fab7413d0ea: add    $0x8,%esi
  0x00007fab7413d0ed: mov    %esi,0xfc(%rcx)
  0x00007fab7413d0f3: movabs $0x7fab61896ee8,%rcx  ;   {metadata({method} {0x00007fab61896ee8} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7413d0fd: and    $0x7ffff8,%esi
  0x00007fab7413d103: cmp    $0x0,%esi
  0x00007fab7413d106: je     0x00007fab7413d3ae
  0x00007fab7413d10c: mov    %rdx,%rcx
  0x00007fab7413d10f: movabs $0x7fab61b2c4f0,%rsi  ;   {metadata(method data for {method} {0x00007fab61896ee8} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7413d119: addq   $0x1,0x130(%rsi)
  0x00007fab7413d121: mov    %rdx,%rdi
  0x00007fab7413d124: mov    $0x2f,%edx
  0x00007fab7413d129: mov    $0x0,%ecx
  0x00007fab7413d12e: mov    %rdi,%rsi          ;*invokevirtual indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ; - java.lang.ClassLoader::checkName@16 (line 871)

  0x00007fab7413d131: mov    %rdi,0x38(%rsp)
  0x00007fab7413d136: nop
  0x00007fab7413d137: callq  0x00007fab74047d60  ; OopMap{[56]=Oop off=412}
                                                ;*invokevirtual indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ; - java.lang.ClassLoader::checkName@16 (line 871)
                                                ;   {optimized virtual_call}
  0x00007fab7413d13c: cmp    $0xffffffff,%eax
  0x00007fab7413d13f: movabs $0x7fab61b92368,%rax  ;   {metadata(method data for {method} {0x00007fab618a9b00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007fab7413d149: movabs $0x2a0,%rdx
  0x00007fab7413d153: jne    0x00007fab7413d163
  0x00007fab7413d159: movabs $0x2b0,%rdx
  0x00007fab7413d163: mov    (%rax,%rdx,1),%rsi
  0x00007fab7413d167: lea    0x1(%rsi),%rsi
  0x00007fab7413d16b: mov    %rsi,(%rax,%rdx,1)
  0x00007fab7413d16f: jne    0x00007fab7413d308  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@20 (line 871)

  0x00007fab7413d175: movabs $0x7fab61b92368,%rax  ;   {metadata(method data for {method} {0x00007fab618a9b00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007fab7413d17f: addq   $0x1,0x2c0(%rax)
  0x00007fab7413d187: movabs $0x7fab61b92758,%rax  ;   {metadata(method data for {method} {0x00007fab6199f998} &apos;allowArraySyntax&apos; &apos;()Z&apos; in &apos;sun/misc/VM&apos;)}
  0x00007fab7413d191: mov    0xfc(%rax),%edx
  0x00007fab7413d197: add    $0x8,%edx
  0x00007fab7413d19a: mov    %edx,0xfc(%rax)
  0x00007fab7413d1a0: movabs $0x7fab6199f998,%rax  ;   {metadata({method} {0x00007fab6199f998} &apos;allowArraySyntax&apos; &apos;()Z&apos; in &apos;sun/misc/VM&apos;)}
  0x00007fab7413d1aa: and    $0x7ffff8,%edx
  0x00007fab7413d1b0: cmp    $0x0,%edx
  0x00007fab7413d1b3: je     0x00007fab7413d3c5
  0x00007fab7413d1b9: movabs $0x670b88a30,%rax  ;   {oop(a &apos;java/lang/Class&apos; = &apos;sun/misc/VM&apos;)}
  0x00007fab7413d1c3: movsbl 0xa8(%rax),%eax    ;*getstatic allowArraySyntax {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.VM::allowArraySyntax@0 (line 232)
                                                ; - java.lang.ClassLoader::checkName@23 (line 872)

  0x00007fab7413d1ca: and    $0x1,%eax
  0x00007fab7413d1cd: cmp    $0x0,%eax
  0x00007fab7413d1d0: movabs $0x7fab61b92368,%rax  ;   {metadata(method data for {method} {0x00007fab618a9b00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007fab7413d1da: movabs $0x2d0,%rdx
  0x00007fab7413d1e4: jne    0x00007fab7413d1f4
  0x00007fab7413d1ea: movabs $0x2e0,%rdx
  0x00007fab7413d1f4: mov    (%rax,%rdx,1),%rsi
  0x00007fab7413d1f8: lea    0x1(%rsi),%rsi
  0x00007fab7413d1fc: mov    %rsi,(%rax,%rdx,1)
  0x00007fab7413d200: jne    0x00007fab7413d2f7  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@26 (line 872)

  0x00007fab7413d206: mov    0x38(%rsp),%rdx
  0x00007fab7413d20b: movabs $0x7fab61b92368,%rax  ;   {metadata(method data for {method} {0x00007fab618a9b00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007fab7413d215: addq   $0x1,0x2f0(%rax)
  0x00007fab7413d21d: movabs $0x7fab61a543b8,%rax  ;   {metadata(method data for {method} {0x00007fab618956b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7413d227: mov    0xfc(%rax),%edx
  0x00007fab7413d22d: add    $0x8,%edx
  0x00007fab7413d230: mov    %edx,0xfc(%rax)
  0x00007fab7413d236: movabs $0x7fab618956b0,%rax  ;   {metadata({method} {0x00007fab618956b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7413d240: and    $0x7ffff8,%edx
  0x00007fab7413d246: cmp    $0x0,%edx
  0x00007fab7413d249: je     0x00007fab7413d3dc
  0x00007fab7413d24f: movabs $0x7fab61a543b8,%rax  ;   {metadata(method data for {method} {0x00007fab618956b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7413d259: incl   0x140(%rax)        ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)

  0x00007fab7413d25f: mov    0x38(%rsp),%rdx
  0x00007fab7413d264: mov    0xc(%rdx),%eax
  0x00007fab7413d267: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)

  0x00007fab7413d26b: mov    0xc(%rax),%edx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)
                                                ; implicit exception: dispatches to 0x00007fab7413d3f3
  0x00007fab7413d26e: cmp    $0x0,%edx
  0x00007fab7413d271: movabs $0x7fab61a543b8,%rdx  ;   {metadata(method data for {method} {0x00007fab618956b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7413d27b: movabs $0x150,%rsi
  0x00007fab7413d285: jg     0x00007fab7413d295
  0x00007fab7413d28b: movabs $0x160,%rsi
  0x00007fab7413d295: mov    (%rdx,%rsi,1),%rdi
  0x00007fab7413d299: lea    0x1(%rdi),%rdi
  0x00007fab7413d29d: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab7413d2a1: jle    0x00007fab7413d32a  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)

  0x00007fab7413d2a7: cmpl   $0x0,0xc(%rax)
  0x00007fab7413d2ae: jbe    0x00007fab7413d3f8
  0x00007fab7413d2b4: movzwl 0x10(%rax),%eax    ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)

  0x00007fab7413d2b8: and    $0xffff,%eax
  0x00007fab7413d2be: cmp    $0x5b,%eax
  0x00007fab7413d2c1: movabs $0x7fab61b92368,%rax  ;   {metadata(method data for {method} {0x00007fab618a9b00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007fab7413d2cb: movabs $0x388,%rdx
  0x00007fab7413d2d5: jne    0x00007fab7413d2e5
  0x00007fab7413d2db: movabs $0x398,%rdx
  0x00007fab7413d2e5: mov    (%rax,%rdx,1),%rsi
  0x00007fab7413d2e9: lea    0x1(%rsi),%rsi
  0x00007fab7413d2ed: mov    %rsi,(%rax,%rdx,1)
  0x00007fab7413d2f1: je     0x00007fab7413d308  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@36 (line 872)

  0x00007fab7413d2f7: mov    $0x1,%eax
  0x00007fab7413d2fc: add    $0x50,%rsp
  0x00007fab7413d300: pop    %rbp
  0x00007fab7413d301: test   %eax,0x1b6a4df9(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7413d307: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@42 (line 874)

  0x00007fab7413d308: mov    $0x0,%eax
  0x00007fab7413d30d: add    $0x50,%rsp
  0x00007fab7413d311: pop    %rbp
  0x00007fab7413d312: test   %eax,0x1b6a4de8(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7413d318: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@40 (line 873)

  0x00007fab7413d319: mov    $0x1,%eax
  0x00007fab7413d31e: add    $0x50,%rsp
  0x00007fab7413d322: pop    %rbp
  0x00007fab7413d323: test   %eax,0x1b6a4dd7(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7413d329: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@12 (line 870)

  0x00007fab7413d32a: nopw   0x0(%rax,%rax,1)
  0x00007fab7413d330: jmpq   0x00007fab7413d414  ;   {no_reloc}
  0x00007fab7413d335: add    %al,(%rax)
  0x00007fab7413d337: add    %al,(%rax)
  0x00007fab7413d339: add    %ch,%cl
  0x00007fab7413d33b: fild   (%rax)
  0x00007fab7413d33d: add    %al,(%rax)         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)

  0x00007fab7413d33f: mov    %rax,%rdx
  0x00007fab7413d342: movabs $0x7fab61a543b8,%rsi  ;   {metadata(method data for {method} {0x00007fab618956b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7413d34c: addq   $0x1,0x170(%rsi)
  0x00007fab7413d354: mov    $0x0,%edx
  0x00007fab7413d359: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)

  0x00007fab7413d35c: mov    %rax,0x40(%rsp)
  0x00007fab7413d361: nop
  0x00007fab7413d362: nop
  0x00007fab7413d363: nop
  0x00007fab7413d364: nop
  0x00007fab7413d365: nop
  0x00007fab7413d366: nop
  0x00007fab7413d367: callq  0x00007fab74047d60  ; OopMap{[64]=Oop off=972}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)
                                                ;   {optimized virtual_call}
  0x00007fab7413d36c: mov    0x40(%rsp),%rax
  0x00007fab7413d371: jmpq   0x00007fab7413d456
  0x00007fab7413d376: mov    %rcx,0x8(%rsp)
  0x00007fab7413d37b: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413d383: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop off=1000}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::checkName@-1 (line 869)
                                                ;   {runtime_call}
  0x00007fab7413d388: jmpq   0x00007fab7413cffe
  0x00007fab7413d38d: callq  0x00007fab740fc000  ; OopMap{rdx=Oop off=1010}
                                                ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@5 (line 869)
                                                ;   {runtime_call}
  0x00007fab7413d392: mov    %rcx,0x8(%rsp)
  0x00007fab7413d397: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413d39f: callq  0x00007fab741005e0  ; OopMap{rdx=Oop off=1028}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.ClassLoader::checkName@5 (line 869)
                                                ;   {runtime_call}
  0x00007fab7413d3a4: jmpq   0x00007fab7413d082
  0x00007fab7413d3a9: callq  0x00007fab740fc000  ; OopMap{rdx=Oop off=1038}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.ClassLoader::checkName@5 (line 869)
                                                ;   {runtime_call}
  0x00007fab7413d3ae: mov    %rcx,0x8(%rsp)
  0x00007fab7413d3b3: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413d3bb: callq  0x00007fab741005e0  ; OopMap{rdx=Oop off=1056}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ; - java.lang.ClassLoader::checkName@16 (line 871)
                                                ;   {runtime_call}
  0x00007fab7413d3c0: jmpq   0x00007fab7413d10c
  0x00007fab7413d3c5: mov    %rax,0x8(%rsp)
  0x00007fab7413d3ca: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413d3d2: callq  0x00007fab741005e0  ; OopMap{[56]=Oop off=1079}
                                                ;*synchronization entry
                                                ; - sun.misc.VM::allowArraySyntax@-1 (line 232)
                                                ; - java.lang.ClassLoader::checkName@23 (line 872)
                                                ;   {runtime_call}
  0x00007fab7413d3d7: jmpq   0x00007fab7413d1b9
  0x00007fab7413d3dc: mov    %rax,0x8(%rsp)
  0x00007fab7413d3e1: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413d3e9: callq  0x00007fab741005e0  ; OopMap{[56]=Oop off=1102}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)
                                                ;   {runtime_call}
  0x00007fab7413d3ee: jmpq   0x00007fab7413d24f
  0x00007fab7413d3f3: callq  0x00007fab740fc000  ; OopMap{rax=Oop off=1112}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)
                                                ;   {runtime_call}
  0x00007fab7413d3f8: movq   $0x0,(%rsp)
  0x00007fab7413d400: callq  0x00007fab740fb940  ; OopMap{rax=Oop off=1125}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)
                                                ;   {runtime_call}
  0x00007fab7413d405: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab7413d40f: mov    $0xa050f00,%eax
  0x00007fab7413d414: callq  0x00007fab740ff5e0  ; OopMap{off=1145}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)
                                                ;   {runtime_call}
  0x00007fab7413d419: jmpq   0x00007fab7413d330
  0x00007fab7413d41e: mov    %rdx,%rdx
  0x00007fab7413d421: callq  0x00007fab740fc4a0  ; OopMap{off=1158}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)
                                                ;   {runtime_call}
  0x00007fab7413d426: jmpq   0x00007fab7413d33f
  0x00007fab7413d42b: nop
  0x00007fab7413d42c: nop
  0x00007fab7413d42d: mov    0x2c0(%r15),%rax
  0x00007fab7413d434: movabs $0x0,%r10
  0x00007fab7413d43e: mov    %r10,0x2c0(%r15)
  0x00007fab7413d445: movabs $0x0,%r10
  0x00007fab7413d44f: mov    %r10,0x2c8(%r15)
  0x00007fab7413d456: add    $0x50,%rsp
  0x00007fab7413d45a: pop    %rbp
  0x00007fab7413d45b: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
[Stub Code]
  0x00007fab7413d460: nop                       ;   {no_reloc}
  0x00007fab7413d461: nop
  0x00007fab7413d462: nop
  0x00007fab7413d463: nop
  0x00007fab7413d464: nop
  0x00007fab7413d465: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413d46f: jmpq   0x00007fab7413d46f  ;   {runtime_call}
  0x00007fab7413d474: nop
  0x00007fab7413d475: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413d47f: jmpq   0x00007fab7413d47f  ;   {runtime_call}
[Exception Handler]
  0x00007fab7413d484: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab7413d489: mov    %rsp,-0x28(%rsp)
  0x00007fab7413d48e: sub    $0x80,%rsp
  0x00007fab7413d495: mov    %rax,0x78(%rsp)
  0x00007fab7413d49a: mov    %rcx,0x70(%rsp)
  0x00007fab7413d49f: mov    %rdx,0x68(%rsp)
  0x00007fab7413d4a4: mov    %rbx,0x60(%rsp)
  0x00007fab7413d4a9: mov    %rbp,0x50(%rsp)
  0x00007fab7413d4ae: mov    %rsi,0x48(%rsp)
  0x00007fab7413d4b3: mov    %rdi,0x40(%rsp)
  0x00007fab7413d4b8: mov    %r8,0x38(%rsp)
  0x00007fab7413d4bd: mov    %r9,0x30(%rsp)
  0x00007fab7413d4c2: mov    %r10,0x28(%rsp)
  0x00007fab7413d4c7: mov    %r11,0x20(%rsp)
  0x00007fab7413d4cc: mov    %r12,0x18(%rsp)
  0x00007fab7413d4d1: mov    %r13,0x10(%rsp)
  0x00007fab7413d4d6: mov    %r14,0x8(%rsp)
  0x00007fab7413d4db: mov    %r15,(%rsp)
  0x00007fab7413d4df: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7413d4e9: movabs $0x7fab7413d489,%rsi  ;   {internal_word}
  0x00007fab7413d4f3: mov    %rsp,%rdx
  0x00007fab7413d4f6: and    $0xfffffffffffffff0,%rsp
  0x00007fab7413d4fa: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7413d4ff: hlt    
[Deopt Handler Code]
  0x00007fab7413d500: movabs $0x7fab7413d500,%r10  ;   {section_word}
  0x00007fab7413d50a: push   %r10
  0x00007fab7413d50c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7413d511: hlt    
  0x00007fab7413d512: hlt    
  0x00007fab7413d513: hlt    
  0x00007fab7413d514: hlt    
  0x00007fab7413d515: hlt    
  0x00007fab7413d516: hlt    
  0x00007fab7413d517: hlt    
<nmethod compile_id='92' compiler='C1' level='3' entry='0x00007fab7413cfa0' size='2832' address='0x00007fab7413cdd0' relocation_offset='312' insts_offset='464' stub_offset='1680' scopes_data_offset='1904' scopes_pcs_offset='2216' dependencies_offset='2792' nul_chk_table_offset='2800' metadata_offset='1864' method='java/lang/ClassLoader checkName (Ljava/lang/String;)Z' bytes='43' count='391' iicount='391' stamp='0.386'/>
<writer thread='140373948942080'/>
<task_queued compile_id='94' method='java/util/zip/ZipFile getEntry (Ljava/lang/String;)Ljava/util/zip/ZipEntry;' bytes='86' count='542' iicount='542' level='3' stamp='0.386' comment='tiered' hot_count='542'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
sun/misc/VM.allowArraySyntax  [0x00007fab7413da80, 0x00007fab7413dbd0]  336 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab6199f998} &apos;allowArraySyntax&apos; &apos;()Z&apos; in &apos;sun/misc/VM&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab7413da80: mov    %eax,-0x14000(%rsp)
  0x00007fab7413da87: push   %rbp
  0x00007fab7413da88: sub    $0x30,%rsp
  0x00007fab7413da8c: movabs $0x7fab61b92758,%rax  ;   {metadata(method data for {method} {0x00007fab6199f998} &apos;allowArraySyntax&apos; &apos;()Z&apos; in &apos;sun/misc/VM&apos;)}
  0x00007fab7413da96: mov    0xfc(%rax),%esi
  0x00007fab7413da9c: add    $0x8,%esi
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.meta.NullConstant from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>

  0x00007fab7413da9f: mov    %esi,0xfc(%rax)
  0x00007fab7413daa5: movabs $0x7fab6199f998,%rax  ;   {metadata({method} {0x00007fab6199f998} &apos;allowArraySyntax&apos; &apos;()Z&apos; in &apos;sun/misc/VM&apos;)}
  0x00007fab7413daaf: and    $0x1ff8,%esi
  0x00007fab7413dab5: cmp    $0x0,%esi
  0x00007fab7413dab8: je     0x00007fab7413dade
  0x00007fab7413dabe: movabs $0x670b88a30,%rax  ;   {oop(a &apos;java/lang/Class&apos; = &apos;sun/misc/VM&apos;)}
  0x00007fab7413dac8: movsbl 0xa8(%rax),%eax    ;*getstatic allowArraySyntax {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.VM::allowArraySyntax@0 (line 232)

  0x00007fab7413dacf: and    $0x1,%eax
  0x00007fab7413dad2: add    $0x30,%rsp
  0x00007fab7413dad6: pop    %rbp
  0x00007fab7413dad7: test   %eax,0x1b6a4623(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7413dadd: retq   
  0x00007fab7413dade: mov    %rax,0x8(%rsp)
  0x00007fab7413dae3: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413daeb: callq  0x00007fab741005e0  ; OopMap{off=112}
                                                ;*synchronization entry
                                                ; - sun.misc.VM::allowArraySyntax@-1 (line 232)
                                                ;   {runtime_call}
  0x00007fab7413daf0: jmp    0x00007fab7413dabe
  0x00007fab7413daf2: nop
  0x00007fab7413daf3: nop
  0x00007fab7413daf4: mov    0x2c0(%r15),%rax
  0x00007fab7413dafb: movabs $0x0,%r10
  0x00007fab7413db05: mov    %r10,0x2c0(%r15)
  0x00007fab7413db0c: movabs $0x0,%r10
  0x00007fab7413db16: mov    %r10,0x2c8(%r15)
  0x00007fab7413db1d: add    $0x30,%rsp
  0x00007fab7413db21: pop    %rbp
  0x00007fab7413db22: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7413db27: hlt    
  0x00007fab7413db28: hlt    
  0x00007fab7413db29: hlt    
  0x00007fab7413db2a: hlt    
  0x00007fab7413db2b: hlt    
  0x00007fab7413db2c: hlt    
  0x00007fab7413db2d: hlt    
  0x00007fab7413db2e: hlt    
  0x00007fab7413db2f: hlt    
  0x00007fab7413db30: hlt    
  0x00007fab7413db31: hlt    
  0x00007fab7413db32: hlt    
  0x00007fab7413db33: hlt    
  0x00007fab7413db34: hlt    
  0x00007fab7413db35: hlt    
  0x00007fab7413db36: hlt    
  0x00007fab7413db37: hlt    
  0x00007fab7413db38: hlt    
  0x00007fab7413db39: hlt    
  0x00007fab7413db3a: hlt    
  0x00007fab7413db3b: hlt    
  0x00007fab7413db3c: hlt    
  0x00007fab7413db3d: hlt    
  0x00007fab7413db3e: hlt    
  0x00007fab7413db3f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab7413db40: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7413db45: mov    %rsp,-0x28(%rsp)
  0x00007fab7413db4a: sub    $0x80,%rsp
  0x00007fab7413db51: mov    %rax,0x78(%rsp)
  0x00007fab7413db56: mov    %rcx,0x70(%rsp)
  0x00007fab7413db5b: mov    %rdx,0x68(%rsp)
  0x00007fab7413db60: mov    %rbx,0x60(%rsp)
  0x00007fab7413db65: mov    %rbp,0x50(%rsp)
  0x00007fab7413db6a: mov    %rsi,0x48(%rsp)
  0x00007fab7413db6f: mov    %rdi,0x40(%rsp)
  0x00007fab7413db74: mov    %r8,0x38(%rsp)
  0x00007fab7413db79: mov    %r9,0x30(%rsp)
  0x00007fab7413db7e: mov    %r10,0x28(%rsp)
  0x00007fab7413db83: mov    %r11,0x20(%rsp)
  0x00007fab7413db88: mov    %r12,0x18(%rsp)
  0x00007fab7413db8d: mov    %r13,0x10(%rsp)
  0x00007fab7413db92: mov    %r14,0x8(%rsp)
  0x00007fab7413db97: mov    %r15,(%rsp)
  0x00007fab7413db9b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7413dba5: movabs $0x7fab7413db45,%rsi  ;   {internal_word}
  0x00007fab7413dbaf: mov    %rsp,%rdx
  0x00007fab7413dbb2: and    $0xfffffffffffffff0,%rsp
  0x00007fab7413dbb6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7413dbbb: hlt    
[Deopt Handler Code]
  0x00007fab7413dbbc: movabs $0x7fab7413dbbc,%r10  ;   {section_word}
  0x00007fab7413dbc6: push   %r10
  0x00007fab7413dbc8: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7413dbcd: hlt    
  0x00007fab7413dbce: hlt    
  0x00007fab7413dbcf: hlt    
<nmethod compile_id='93' compiler='C1' level='3' entry='0x00007fab7413da80' size='800' address='0x00007fab7413d910' relocation_offset='312' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='sun/misc/VM allowArraySyntax ()Z' bytes='4' count='395' iicount='395' stamp='0.386'/>
<writer thread='140373948942080'/>
----------------------------------------------------------------------
sun/misc/Unsafe.compareAndSwapLong  [0x00007fab7413dde0, 0x00007fab7413dfe0]  512 bytes
[Entry Point]
  # {method} {0x00007fab619228f8} &apos;compareAndSwapLong&apos; &apos;(Ljava/lang/Object;JJJ)Z&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rsi:rsi   = &apos;sun/misc/Unsafe&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = long
  # parm2:    r8:r8     = long
  # parm3:    r9:r9     = long
  #           [sp+0x50]  (sp of caller)
  0x00007fab7413dde0: mov    0x8(%rsi),%r10d
  0x00007fab7413dde4: shl    $0x3,%r10
  0x00007fab7413dde8: cmp    %r10,%rax
  0x00007fab7413ddeb: je     0x00007fab7413ddf8
  0x00007fab7413ddf1: jmpq   0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7413ddf6: xchg   %ax,%ax
[Verified Entry Point]
  0x00007fab7413ddf8: mov    %eax,-0x14000(%rsp)
  0x00007fab7413ddff: push   %rbp
  0x00007fab7413de00: mov    %rsp,%rbp
  0x00007fab7413de03: sub    $0x40,%rsp
  0x00007fab7413de07: mov    %rdx,0x8(%rsp)
  0x00007fab7413de0c: cmp    $0x0,%rdx
  0x00007fab7413de10: lea    0x8(%rsp),%rdx
  0x00007fab7413de15: cmove  0x8(%rsp),%rdx
  0x00007fab7413de1b: mov    %rsi,(%rsp)
  0x00007fab7413de1f: cmp    $0x0,%rsi
  0x00007fab7413de23: lea    (%rsp),%rsi
  0x00007fab7413de27: cmove  (%rsp),%rsi        ; OopMap{[8]=Oop [0]=Oop off=76}
  0x00007fab7413de2c: movabs $0x7fab7413de2c,%r10  ;   {section_word}
  0x00007fab7413de36: mov    %r10,0x1c8(%r15)
  0x00007fab7413de3d: mov    %rsp,0x1c0(%r15)
  0x00007fab7413de44: cmpb   $0x0,0x1a836b89(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab7413de4b: je     0x00007fab7413de8f
  0x00007fab7413de51: push   %rsi
  0x00007fab7413de52: push   %rdx
  0x00007fab7413de53: push   %rcx
  0x00007fab7413de54: push   %r8
  0x00007fab7413de56: push   %r9
  0x00007fab7413de58: movabs $0x7fab619228f8,%rsi  ;   {metadata({method} {0x00007fab619228f8} &apos;compareAndSwapLong&apos; &apos;(Ljava/lang/Object;JJJ)Z&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00007fab7413de62: mov    %r15,%rdi
  0x00007fab7413de65: test   $0xf,%esp
  0x00007fab7413de6b: je     0x00007fab7413de83
  0x00007fab7413de71: sub    $0x8,%rsp
  0x00007fab7413de75: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab7413de7a: add    $0x8,%rsp
  0x00007fab7413de7e: jmpq   0x00007fab7413de88
  0x00007fab7413de83: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab7413de88: pop    %r9
  0x00007fab7413de8a: pop    %r8
  0x00007fab7413de8c: pop    %rcx
  0x00007fab7413de8d: pop    %rdx
  0x00007fab7413de8e: pop    %rsi
  0x00007fab7413de8f: lea    0x1e0(%r15),%rdi
  0x00007fab7413de96: movl   $0x4,0x258(%r15)
  0x00007fab7413dea1: callq  0x00007fab8e4397b0  ;   {runtime_call}
  0x00007fab7413dea6: vzeroupper 
  0x00007fab7413dea9: and    $0xff,%eax
  0x00007fab7413deaf: setne  %al
  0x00007fab7413deb2: movl   $0x5,0x258(%r15)
  0x00007fab7413debd: mov    %r15d,%ecx
  0x00007fab7413dec0: shr    $0x4,%ecx
  0x00007fab7413dec3: and    $0xffc,%ecx
  0x00007fab7413dec9: movabs $0x7fab8f7e1000,%r10  ;   {external_word}
  0x00007fab7413ded3: mov    %ecx,(%r10,%rcx,1)
  0x00007fab7413ded7: cmpl   $0x0,0x1a841adb(%rip)        # 0x00007fab8e97f9bc
                                                ;   {external_word}
  0x00007fab7413dee1: jne    0x00007fab7413def5
  0x00007fab7413dee7: cmpl   $0x0,0x30(%r15)
  0x00007fab7413deef: je     0x00007fab7413df16
  0x00007fab7413def5: mov    %rax,-0x8(%rbp)
  0x00007fab7413def9: mov    %r15,%rdi
  0x00007fab7413defc: mov    %rsp,%r12
  0x00007fab7413deff: sub    $0x0,%rsp
  0x00007fab7413df03: and    $0xfffffffffffffff0,%rsp
  0x00007fab7413df07: callq  0x00007fab8e40fc20  ;   {runtime_call}
  0x00007fab7413df0c: mov    %r12,%rsp
  0x00007fab7413df0f: xor    %r12,%r12
  0x00007fab7413df12: mov    -0x8(%rbp),%rax
  0x00007fab7413df16: movl   $0x8,0x258(%r15)
  0x00007fab7413df21: cmpl   $0x1,0x2b0(%r15)
  0x00007fab7413df2c: je     0x00007fab7413dfbc
  0x00007fab7413df32: cmpb   $0x0,0x1a836a9b(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab7413df39: je     0x00007fab7413df77
  0x00007fab7413df3f: mov    %rax,-0x8(%rbp)
  0x00007fab7413df43: movabs $0x7fab619228f8,%rsi  ;   {metadata({method} {0x00007fab619228f8} &apos;compareAndSwapLong&apos; &apos;(Ljava/lang/Object;JJJ)Z&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00007fab7413df4d: mov    %r15,%rdi
  0x00007fab7413df50: test   $0xf,%esp
  0x00007fab7413df56: je     0x00007fab7413df6e
  0x00007fab7413df5c: sub    $0x8,%rsp
  0x00007fab7413df60: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab7413df65: add    $0x8,%rsp
  0x00007fab7413df69: jmpq   0x00007fab7413df73
  0x00007fab7413df6e: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab7413df73: mov    -0x8(%rbp),%rax
  0x00007fab7413df77: movabs $0x0,%r10
  0x00007fab7413df81: mov    %r10,0x1c0(%r15)
  0x00007fab7413df88: movabs $0x0,%r10
  0x00007fab7413df92: mov    %r10,0x1c8(%r15)
  0x00007fab7413df99: mov    0x38(%r15),%rcx
  0x00007fab7413df9d: movl   $0x0,0x100(%rcx)
  0x00007fab7413dfa7: leaveq 
  0x00007fab7413dfa8: cmpq   $0x0,0x8(%r15)
  0x00007fab7413dfb0: jne    0x00007fab7413dfb7
  0x00007fab7413dfb6: retq   
  0x00007fab7413dfb7: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00007fab7413dfbc: mov    %rax,-0x8(%rbp)
  0x00007fab7413dfc0: mov    %rsp,%r12
  0x00007fab7413dfc3: sub    $0x0,%rsp
  0x00007fab7413dfc7: and    $0xfffffffffffffff0,%rsp
  0x00007fab7413dfcb: callq  0x00007fab8e372120  ;   {runtime_call}
  0x00007fab7413dfd0: mov    %r12,%rsp
  0x00007fab7413dfd3: xor    %r12,%r12
  0x00007fab7413dfd6: mov    -0x8(%rbp),%rax
  0x00007fab7413dfda: jmpq   0x00007fab7413df32
  0x00007fab7413dfdf: hlt    
<nmethod compile_id='95' compile_kind='c2n' level='0' entry='0x00007fab7413dde0' size='912' address='0x00007fab7413dc50' relocation_offset='312' consts_offset='912' insts_offset='400' method='sun/misc/Unsafe compareAndSwapLong (Ljava/lang/Object;JJJ)Z' bytes='0' count='256' iicount='256' stamp='0.387'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/zip/ZipFile.getEntry  [0x00007fab7413e200, 0x00007fab7413e7d8]  1496 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61ac0a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;
  # this:     rsi:rsi   = &apos;java/util/zip/ZipFile&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x80]  (sp of caller)
  0x00007fab7413e200: mov    0x8(%rsi),%r10d
  0x00007fab7413e204: shl    $0x3,%r10
  0x00007fab7413e208: cmp    %rax,%r10
  0x00007fab7413e20b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7413e211: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7413e21c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7413e220: mov    %eax,-0x14000(%rsp)
  0x00007fab7413e227: push   %rbp
  0x00007fab7413e228: sub    $0x70,%rsp
  0x00007fab7413e22c: mov    %rsi,0x28(%rsp)
  0x00007fab7413e231: movabs $0x7fab61b8f4c8,%rax  ;   {metadata(method data for {method} {0x00007fab61ac0a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab7413e23b: mov    0xfc(%rax),%edi
  0x00007fab7413e241: add    $0x8,%edi
  0x00007fab7413e244: mov    %edi,0xfc(%rax)
  0x00007fab7413e24a: movabs $0x7fab61ac0a30,%rax  ;   {metadata({method} {0x00007fab61ac0a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab7413e254: and    $0x1ff8,%edi
  0x00007fab7413e25a: cmp    $0x0,%edi
  0x00007fab7413e25d: je     0x00007fab7413e60d  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@0 (line 304)

  0x00007fab7413e263: cmp    $0x0,%rdx
  0x00007fab7413e267: movabs $0x7fab61b8f4c8,%rax  ;   {metadata(method data for {method} {0x00007fab61ac0a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab7413e271: movabs $0x130,%rdi
  0x00007fab7413e27b: jne    0x00007fab7413e28b
  0x00007fab7413e281: movabs $0x140,%rdi
  0x00007fab7413e28b: mov    (%rax,%rdi,1),%rbx
  0x00007fab7413e28f: lea    0x1(%rbx),%rbx
  0x00007fab7413e293: mov    %rbx,(%rax,%rdi,1)
  0x00007fab7413e297: je     0x00007fab7413e536  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@1 (line 304)

  0x00007fab7413e29d: lea    0x58(%rsp),%rdi
  0x00007fab7413e2a2: mov    %rsi,0x8(%rdi)
  0x00007fab7413e2a6: mov    (%rsi),%rax
  0x00007fab7413e2a9: mov    %rax,%rbx
  0x00007fab7413e2ac: and    $0x7,%rbx
  0x00007fab7413e2b0: cmp    $0x5,%rbx
  0x00007fab7413e2b4: jne    0x00007fab7413e33b
  0x00007fab7413e2ba: mov    0x8(%rsi),%ebx
  0x00007fab7413e2bd: shl    $0x3,%rbx
  0x00007fab7413e2c1: mov    0xa8(%rbx),%rbx
  0x00007fab7413e2c8: or     %r15,%rbx
  0x00007fab7413e2cb: xor    %rax,%rbx
  0x00007fab7413e2ce: and    $0xffffffffffffff87,%rbx
  0x00007fab7413e2d2: je     0x00007fab7413e363
  0x00007fab7413e2d8: test   $0x7,%rbx
  0x00007fab7413e2df: jne    0x00007fab7413e328
  0x00007fab7413e2e1: test   $0x300,%rbx
  0x00007fab7413e2e8: jne    0x00007fab7413e307
  0x00007fab7413e2ea: and    $0x37f,%rax
  0x00007fab7413e2f1: mov    %rax,%rbx
  0x00007fab7413e2f4: or     %r15,%rbx
  0x00007fab7413e2f7: lock cmpxchg %rbx,(%rsi)
  0x00007fab7413e2fc: jne    0x00007fab7413e624
  0x00007fab7413e302: jmpq   0x00007fab7413e363
  0x00007fab7413e307: mov    0x8(%rsi),%ebx
  0x00007fab7413e30a: shl    $0x3,%rbx
  0x00007fab7413e30e: mov    0xa8(%rbx),%rbx
  0x00007fab7413e315: or     %r15,%rbx
  0x00007fab7413e318: lock cmpxchg %rbx,(%rsi)
  0x00007fab7413e31d: jne    0x00007fab7413e624
  0x00007fab7413e323: jmpq   0x00007fab7413e363
  0x00007fab7413e328: mov    0x8(%rsi),%ebx
  0x00007fab7413e32b: shl    $0x3,%rbx
  0x00007fab7413e32f: mov    0xa8(%rbx),%rbx
  0x00007fab7413e336: lock cmpxchg %rbx,(%rsi)
  0x00007fab7413e33b: mov    (%rsi),%rax
  0x00007fab7413e33e: or     $0x1,%rax
  0x00007fab7413e342: mov    %rax,(%rdi)
  0x00007fab7413e345: lock cmpxchg %rdi,(%rsi)
  0x00007fab7413e34a: je     0x00007fab7413e363
  0x00007fab7413e350: sub    %rsp,%rax
  0x00007fab7413e353: and    $0xfffffffffffff007,%rax
  0x00007fab7413e35a: mov    %rax,(%rdi)
  0x00007fab7413e35d: jne    0x00007fab7413e624  ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@20 (line 308)

  0x00007fab7413e363: mov    %rdx,0x30(%rsp)
  0x00007fab7413e368: mov    %rsi,%rdi
  0x00007fab7413e36b: movabs $0x7fab61b8f4c8,%rbx  ;   {metadata(method data for {method} {0x00007fab61ac0a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab7413e375: addq   $0x1,0x160(%rbx)
  0x00007fab7413e37d: mov    %rsi,%rdi
  0x00007fab7413e380: mov    %rdi,%rsi          ;*invokespecial ensureOpen {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@22 (line 309)

  0x00007fab7413e383: nop
  0x00007fab7413e384: nop
  0x00007fab7413e385: nop
  0x00007fab7413e386: nop
  0x00007fab7413e387: callq  0x00007fab74047d60  ; OopMap{[40]=Oop [48]=Oop [96]=Oop off=396}
                                                ;*invokespecial ensureOpen {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@22 (line 309)
                                                ;   {optimized virtual_call}
  0x00007fab7413e38c: mov    0x28(%rsp),%rsi
  0x00007fab7413e391: mov    0x10(%rsi),%rdi    ;*getfield jzfile {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@26 (line 310)

  0x00007fab7413e395: mov    0x20(%rsi),%ebx
  0x00007fab7413e398: shl    $0x3,%rbx          ;*getfield zc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@30 (line 310)

  0x00007fab7413e39c: cmp    (%rbx),%rax        ; implicit exception: dispatches to 0x00007fab7413e637
  0x00007fab7413e39f: mov    %rbx,%rdx
  0x00007fab7413e3a2: movabs $0x7fab61b8f4c8,%rax  ;   {metadata(method data for {method} {0x00007fab61ac0a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab7413e3ac: addq   $0x1,0x170(%rax)
  0x00007fab7413e3b4: mov    0x30(%rsp),%rdx
  0x00007fab7413e3b9: mov    %rbx,%rsi          ;*invokevirtual getBytes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@34 (line 310)

  0x00007fab7413e3bc: mov    %rdi,0x38(%rsp)
  0x00007fab7413e3c1: nop
  0x00007fab7413e3c2: nop
  0x00007fab7413e3c3: nop
  0x00007fab7413e3c4: nop
  0x00007fab7413e3c5: nop
  0x00007fab7413e3c6: nop
  0x00007fab7413e3c7: callq  0x00007fab74047d60  ; OopMap{[48]=Oop [40]=Oop [96]=Oop off=460}
                                                ;*invokevirtual getBytes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@34 (line 310)
                                                ;   {optimized virtual_call}
  0x00007fab7413e3cc: movabs $0x7fab61b8f4c8,%rsi  ;   {metadata(method data for {method} {0x00007fab61ac0a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab7413e3d6: addq   $0x1,0x208(%rsi)
  0x00007fab7413e3de: mov    0x38(%rsp),%rsi
  0x00007fab7413e3e3: mov    %rax,%rdx
  0x00007fab7413e3e6: mov    $0x1,%ecx          ;*invokestatic getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@38 (line 310)

  0x00007fab7413e3eb: nop
  0x00007fab7413e3ec: nop
  0x00007fab7413e3ed: nop
  0x00007fab7413e3ee: nop
  0x00007fab7413e3ef: callq  0x00007fab74048160  ; OopMap{[48]=Oop [40]=Oop [96]=Oop off=500}
                                                ;*invokestatic getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@38 (line 310)
                                                ;   {static_call}
  0x00007fab7413e3f4: movabs $0x0,%rdx
  0x00007fab7413e3fe: mov    %rax,%rcx
  0x00007fab7413e401: cmp    %rdx,%rcx
  0x00007fab7413e404: movabs $0x7fab61b8f4c8,%rdx  ;   {metadata(method data for {method} {0x00007fab61ac0a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab7413e40e: movabs $0x228,%rcx
  0x00007fab7413e418: jne    0x00007fab7413e428
  0x00007fab7413e41e: movabs $0x218,%rcx
  0x00007fab7413e428: mov    (%rdx,%rcx,1),%rsi
  0x00007fab7413e42c: lea    0x1(%rsi),%rsi
  0x00007fab7413e430: mov    %rsi,(%rdx,%rcx,1)
  0x00007fab7413e434: jne    0x00007fab7413e491  ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@44 (line 311)

  0x00007fab7413e43a: lea    0x58(%rsp),%rax
  0x00007fab7413e43f: mov    0x8(%rax),%rcx
  0x00007fab7413e443: mov    (%rcx),%rdx
  0x00007fab7413e446: and    $0x7,%rdx
  0x00007fab7413e44a: cmp    $0x5,%rdx
  0x00007fab7413e44e: je     0x00007fab7413e46b
  0x00007fab7413e454: mov    (%rax),%rdx
  0x00007fab7413e457: test   %rdx,%rdx
  0x00007fab7413e45a: je     0x00007fab7413e46b
  0x00007fab7413e460: lock cmpxchg %rdx,(%rcx)
  0x00007fab7413e465: jne    0x00007fab7413e63c  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@72 (line 316)

  0x00007fab7413e46b: movabs $0x7fab61b8f4c8,%rax  ;   {metadata(method data for {method} {0x00007fab61ac0a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab7413e475: incl   0x258(%rax)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@73 (line 316)

  0x00007fab7413e47b: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fab7413e485: add    $0x70,%rsp
  0x00007fab7413e489: pop    %rbp
  0x00007fab7413e48a: test   %eax,0x1b6a3c70(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7413e490: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@85 (line 317)

  0x00007fab7413e491: mov    0x30(%rsp),%rdx
  0x00007fab7413e496: mov    0x28(%rsp),%rsi
  0x00007fab7413e49b: mov    %rsi,%rcx
  0x00007fab7413e49e: movabs $0x7fab61b8f4c8,%rdi  ;   {metadata(method data for {method} {0x00007fab61ac0a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab7413e4a8: addq   $0x1,0x238(%rdi)
  0x00007fab7413e4b0: mov    %rax,%rcx
  0x00007fab7413e4b3: mov    %rsi,%rdi
  0x00007fab7413e4b6: mov    %rdi,%rsi          ;*invokespecial getZipEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@51 (line 312)

  0x00007fab7413e4b9: mov    %rax,0x40(%rsp)
  0x00007fab7413e4be: nop
  0x00007fab7413e4bf: callq  0x00007fab74047d60  ; OopMap{[40]=Oop [96]=Oop off=708}
                                                ;*invokespecial getZipEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@51 (line 312)
                                                ;   {optimized virtual_call}
  0x00007fab7413e4c4: mov    0x28(%rsp),%rsi
  0x00007fab7413e4c9: mov    0x10(%rsi),%rdx    ;*getfield jzfile {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@57 (line 313)

  0x00007fab7413e4cd: movabs $0x7fab61b8f4c8,%rdi  ;   {metadata(method data for {method} {0x00007fab61ac0a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab7413e4d7: addq   $0x1,0x248(%rdi)
  0x00007fab7413e4df: mov    %rdx,%rsi
  0x00007fab7413e4e2: mov    0x40(%rsp),%rdx    ;*invokestatic freeEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@61 (line 313)

  0x00007fab7413e4e7: mov    %rax,0x48(%rsp)
  0x00007fab7413e4ec: nop
  0x00007fab7413e4ed: nop
  0x00007fab7413e4ee: nop
  0x00007fab7413e4ef: callq  0x00007fab74048160  ; OopMap{[40]=Oop [72]=Oop [96]=Oop off=756}
                                                ;*invokestatic freeEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@61 (line 313)
                                                ;   {static_call}
  0x00007fab7413e4f4: lea    0x58(%rsp),%rax
  0x00007fab7413e4f9: mov    0x8(%rax),%rsi
  0x00007fab7413e4fd: mov    (%rsi),%rdx
  0x00007fab7413e500: and    $0x7,%rdx
  0x00007fab7413e504: cmp    $0x5,%rdx
  0x00007fab7413e508: je     0x00007fab7413e525
  0x00007fab7413e50e: mov    (%rax),%rdx
  0x00007fab7413e511: test   %rdx,%rdx
  0x00007fab7413e514: je     0x00007fab7413e525
  0x00007fab7413e51a: lock cmpxchg %rdx,(%rsi)
  0x00007fab7413e51f: jne    0x00007fab7413e64f  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@68 (line 314)

  0x00007fab7413e525: mov    0x48(%rsp),%rax
  0x00007fab7413e52a: add    $0x70,%rsp
  0x00007fab7413e52e: pop    %rbp
  0x00007fab7413e52f: test   %eax,0x1b6a3bcb(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7413e535: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@69 (line 314)

  0x00007fab7413e536: xchg   %ax,%ax
  0x00007fab7413e538: jmpq   0x00007fab7413e671  ;   {no_reloc}
  0x00007fab7413e53d: add    %al,(%rax)
  0x00007fab7413e53f: add    %al,(%rax)
  0x00007fab7413e541: add    %cl,-0x75(%rcx)
  0x00007fab7413e544: rex.RXB (bad) 
  0x00007fab7413e546: lea    0x20(%rax),%rdi
  0x00007fab7413e54a: cmp    0x70(%r15),%rdi
  0x00007fab7413e54e: ja     0x00007fab7413e67b
  0x00007fab7413e554: mov    %rdi,0x60(%r15)
  0x00007fab7413e558: mov    0xa8(%rdx),%rcx
  0x00007fab7413e55f: mov    %rcx,(%rax)
  0x00007fab7413e562: mov    %rdx,%rcx
  0x00007fab7413e565: shr    $0x3,%rcx
  0x00007fab7413e569: mov    %ecx,0x8(%rax)
  0x00007fab7413e56c: xor    %rcx,%rcx
  0x00007fab7413e56f: mov    %ecx,0xc(%rax)
  0x00007fab7413e572: xor    %rcx,%rcx
  0x00007fab7413e575: mov    %rcx,0x10(%rax)
  0x00007fab7413e579: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@4 (line 305)

  0x00007fab7413e57d: mov    %rax,%rdx
  0x00007fab7413e580: movabs $0x7fab61b8f4c8,%rsi  ;   {metadata(method data for {method} {0x00007fab61ac0a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab7413e58a: addq   $0x1,0x150(%rsi)
  0x00007fab7413e592: movabs $0x670b94338,%rdx  ;   {oop(&quot;name&quot;)}
  0x00007fab7413e59c: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@10 (line 305)

  0x00007fab7413e59f: mov    %rax,0x50(%rsp)
  0x00007fab7413e5a4: nop
  0x00007fab7413e5a5: nop
  0x00007fab7413e5a6: nop
  0x00007fab7413e5a7: callq  0x00007fab74047d60  ; OopMap{[80]=Oop off=940}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@10 (line 305)
                                                ;   {optimized virtual_call}
  0x00007fab7413e5ac: mov    0x50(%rsp),%rax
  0x00007fab7413e5b1: jmpq   0x00007fab7413e6c6  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@13 (line 305)

  0x00007fab7413e5b6: mov    0x2c0(%r15),%rax
  0x00007fab7413e5bd: xor    %r10,%r10
  0x00007fab7413e5c0: mov    %r10,0x2c0(%r15)
  0x00007fab7413e5c7: xor    %r10,%r10
  0x00007fab7413e5ca: mov    %r10,0x2c8(%r15)
  0x00007fab7413e5d1: mov    %rax,%rsi
  0x00007fab7413e5d4: lea    0x58(%rsp),%rax
  0x00007fab7413e5d9: mov    0x8(%rax),%rbx
  0x00007fab7413e5dd: mov    (%rbx),%rdi
  0x00007fab7413e5e0: and    $0x7,%rdi
  0x00007fab7413e5e4: cmp    $0x5,%rdi
  0x00007fab7413e5e8: je     0x00007fab7413e605
  0x00007fab7413e5ee: mov    (%rax),%rdi
  0x00007fab7413e5f1: test   %rdi,%rdi
  0x00007fab7413e5f4: je     0x00007fab7413e605
  0x00007fab7413e5fa: lock cmpxchg %rdi,(%rbx)
  0x00007fab7413e5ff: jne    0x00007fab7413e688  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@80 (line 316)

  0x00007fab7413e605: mov    %rsi,%rax
  0x00007fab7413e608: jmpq   0x00007fab7413e6c6
  0x00007fab7413e60d: mov    %rax,0x8(%rsp)
  0x00007fab7413e612: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413e61a: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [40]=Oop rdx=Oop off=1055}
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipFile::getEntry@-1 (line 304)
                                                ;   {runtime_call}
  0x00007fab7413e61f: jmpq   0x00007fab7413e263
  0x00007fab7413e624: mov    %rsi,0x8(%rsp)
  0x00007fab7413e629: mov    %rdi,(%rsp)
  0x00007fab7413e62d: callq  0x00007fab740fea60  ; OopMap{rsi=Oop [40]=Oop rdx=Oop [96]=Oop off=1074}
                                                ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@20 (line 308)
                                                ;   {runtime_call}
  0x00007fab7413e632: jmpq   0x00007fab7413e363
  0x00007fab7413e637: callq  0x00007fab740fc000  ; OopMap{[48]=Oop rsi=Oop [40]=Oop rbx=Oop [96]=Oop off=1084}
                                                ;*invokevirtual getBytes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@34 (line 310)
                                                ;   {runtime_call}
  0x00007fab7413e63c: lea    0x58(%rsp),%rax
  0x00007fab7413e641: mov    %rax,(%rsp)
  0x00007fab7413e645: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab7413e64a: jmpq   0x00007fab7413e46b
  0x00007fab7413e64f: lea    0x58(%rsp),%rax
  0x00007fab7413e654: mov    %rax,(%rsp)
  0x00007fab7413e658: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab7413e65d: jmpq   0x00007fab7413e525
  0x00007fab7413e662: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab7413e66c: mov    $0xa050f00,%eax
  0x00007fab7413e671: callq  0x00007fab740ff5e0  ; OopMap{off=1142}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@4 (line 305)
                                                ;   {runtime_call}
  0x00007fab7413e676: jmpq   0x00007fab7413e538
  0x00007fab7413e67b: mov    %rdx,%rdx
  0x00007fab7413e67e: callq  0x00007fab740fc760  ; OopMap{off=1155}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@4 (line 305)
                                                ;   {runtime_call}
  0x00007fab7413e683: jmpq   0x00007fab7413e57d
  0x00007fab7413e688: lea    0x58(%rsp),%rax
  0x00007fab7413e68d: mov    %rax,(%rsp)
  0x00007fab7413e691: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab7413e696: jmpq   0x00007fab7413e605
  0x00007fab7413e69b: nop
  0x00007fab7413e69c: nop
  0x00007fab7413e69d: mov    0x2c0(%r15),%rax
  0x00007fab7413e6a4: movabs $0x0,%r10
  0x00007fab7413e6ae: mov    %r10,0x2c0(%r15)
  0x00007fab7413e6b5: movabs $0x0,%r10
  0x00007fab7413e6bf: mov    %r10,0x2c8(%r15)
  0x00007fab7413e6c6: add    $0x70,%rsp
  0x00007fab7413e6ca: pop    %rbp
  0x00007fab7413e6cb: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7413e6d0: hlt    
  0x00007fab7413e6d1: hlt    
  0x00007fab7413e6d2: hlt    
  0x00007fab7413e6d3: hlt    
  0x00007fab7413e6d4: hlt    
  0x00007fab7413e6d5: hlt    
  0x00007fab7413e6d6: hlt    
  0x00007fab7413e6d7: hlt    
  0x00007fab7413e6d8: hlt    
  0x00007fab7413e6d9: hlt    
  0x00007fab7413e6da: hlt    
  0x00007fab7413e6db: hlt    
  0x00007fab7413e6dc: hlt    
  0x00007fab7413e6dd: hlt    
  0x00007fab7413e6de: hlt    
  0x00007fab7413e6df: hlt    
[Stub Code]
  0x00007fab7413e6e0: nop                       ;   {no_reloc}
  0x00007fab7413e6e1: nop
  0x00007fab7413e6e2: nop
  0x00007fab7413e6e3: nop
  0x00007fab7413e6e4: nop
  0x00007fab7413e6e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413e6ef: jmpq   0x00007fab7413e6ef  ;   {runtime_call}
  0x00007fab7413e6f4: nop
  0x00007fab7413e6f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413e6ff: jmpq   0x00007fab7413e6ff  ;   {runtime_call}
  0x00007fab7413e704: nop
  0x00007fab7413e705: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413e70f: jmpq   0x00007fab7413e70f  ;   {runtime_call}
  0x00007fab7413e714: nop
  0x00007fab7413e715: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413e71f: jmpq   0x00007fab7413e71f  ;   {runtime_call}
  0x00007fab7413e724: nop
  0x00007fab7413e725: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413e72f: jmpq   0x00007fab7413e72f  ;   {runtime_call}
  0x00007fab7413e734: nop
  0x00007fab7413e735: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7413e73f: jmpq   0x00007fab7413e73f  ;   {runtime_call}
[Exception Handler]
  0x00007fab7413e744: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab7413e749: mov    %rsp,-0x28(%rsp)
  0x00007fab7413e74e: sub    $0x80,%rsp
  0x00007fab7413e755: mov    %rax,0x78(%rsp)
  0x00007fab7413e75a: mov    %rcx,0x70(%rsp)
  0x00007fab7413e75f: mov    %rdx,0x68(%rsp)
  0x00007fab7413e764: mov    %rbx,0x60(%rsp)
  0x00007fab7413e769: mov    %rbp,0x50(%rsp)
  0x00007fab7413e76e: mov    %rsi,0x48(%rsp)
  0x00007fab7413e773: mov    %rdi,0x40(%rsp)
  0x00007fab7413e778: mov    %r8,0x38(%rsp)
  0x00007fab7413e77d: mov    %r9,0x30(%rsp)
  0x00007fab7413e782: mov    %r10,0x28(%rsp)
  0x00007fab7413e787: mov    %r11,0x20(%rsp)
  0x00007fab7413e78c: mov    %r12,0x18(%rsp)
  0x00007fab7413e791: mov    %r13,0x10(%rsp)
  0x00007fab7413e796: mov    %r14,0x8(%rsp)
  0x00007fab7413e79b: mov    %r15,(%rsp)
  0x00007fab7413e79f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7413e7a9: movabs $0x7fab7413e749,%rsi  ;   {internal_word}
  0x00007fab7413e7b3: mov    %rsp,%rdx
  0x00007fab7413e7b6: and    $0xfffffffffffffff0,%rsp
  0x00007fab7413e7ba: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7413e7bf: hlt    
[Deopt Handler Code]
  0x00007fab7413e7c0: movabs $0x7fab7413e7c0,%r10  ;   {section_word}
  0x00007fab7413e7ca: push   %r10
  0x00007fab7413e7cc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7413e7d1: hlt    
  0x00007fab7413e7d2: hlt    
  0x00007fab7413e7d3: hlt    
  0x00007fab7413e7d4: hlt    
  0x00007fab7413e7d5: hlt    
  0x00007fab7413e7d6: hlt    
  0x00007fab7413e7d7: hlt    
<nmethod compile_id='94' compiler='C1' level='3' entry='0x00007fab7413e200' size='3048' address='0x00007fab7413e010' relocation_offset='312' insts_offset='496' stub_offset='1744' scopes_data_offset='2000' scopes_pcs_offset='2336' dependencies_offset='2880' handler_table_offset='2888' nul_chk_table_offset='3032' metadata_offset='1992' method='java/util/zip/ZipFile getEntry (Ljava/lang/String;)Ljava/util/zip/ZipEntry;' bytes='86' count='551' iicount='551' stamp='0.390'/>
<writer thread='140373948942080'/>
<task_queued compile_id='96' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='499' iicount='499' level='3' stamp='0.390' comment='tiered' hot_count='499'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/String.&lt;init&gt;  [0x00007fab7413ed80, 0x00007fab7413ef50]  464 bytes
[Entry Point]
[Constants]
  # {method}
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.meta.ExceptionHandler from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
 {0x00007fab61895490} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    rcx       = boolean
  #           [sp+0x40]  (sp of caller)
  0x00007fab7413ed80: mov    0x8(%rsi),%r10d
  0x00007fab7413ed84: shl    $0x3,%r10
  0x00007fab7413ed88: cmp    %rax,%r10
  0x00007fab7413ed8b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7413ed91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7413ed9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7413eda0: mov    %eax,-0x14000(%rsp)
  0x00007fab7413eda7: push   %rbp
  0x00007fab7413eda8: sub    $0x30,%rsp
  0x00007fab7413edac: movabs $0x7fab61b8eef8,%rdi  ;   {metadata(method data for {method} {0x00007fab61895490} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7413edb6: mov    0xfc(%rdi),%ebx
  0x00007fab7413edbc: add    $0x8,%ebx
  0x00007fab7413edbf: mov    %ebx,0xfc(%rdi)
  0x00007fab7413edc5: movabs $0x7fab61895490,%rdi  ;   {metadata({method} {0x00007fab61895490} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7413edcf: and    $0x1ff8,%ebx
  0x00007fab7413edd5: cmp    $0x0,%ebx
  0x00007fab7413edd8: je     0x00007fab7413ee4e  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@0 (line 609)

  0x00007fab7413edde: mov    %rsi,%rdi
  0x00007fab7413ede1: movabs $0x7fab61b8eef8,%rbx  ;   {metadata(method data for {method} {0x00007fab61895490} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7413edeb: addq   $0x1,0x130(%rbx)
  0x00007fab7413edf3: movabs $0x7fab61a342a0,%rdi  ;   {metadata(method data for {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7413edfd: mov    0xfc(%rdi),%ebx
  0x00007fab7413ee03: add    $0x8,%ebx
  0x00007fab7413ee06: mov    %ebx,0xfc(%rdi)
  0x00007fab7413ee0c: movabs $0x7fab618914d8,%rdi  ;   {metadata({method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7413ee16: and    $0x7ffff8,%ebx
  0x00007fab7413ee1c: cmp    $0x0,%ebx
  0x00007fab7413ee1f: je     0x00007fab7413ee65
  0x00007fab7413ee25: mov    %rdx,%r10
  0x00007fab7413ee28: shr    $0x3,%r10
  0x00007fab7413ee2c: mov    %r10d,0xc(%rsi)
  0x00007fab7413ee30: shr    $0x9,%rsi
  0x00007fab7413ee34: movabs $0x7fab701ff000,%rdi
  0x00007fab7413ee3e: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)

  0x00007fab7413ee42: add    $0x30,%rsp
  0x00007fab7413ee46: pop    %rbp
  0x00007fab7413ee47: test   %eax,0x1b6a32b3(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7413ee4d: retq   
  0x00007fab7413ee4e: mov    %rdi,0x8(%rsp)
  0x00007fab7413ee53: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413ee5b: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop off=224}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 609)
                                                ;   {runtime_call}
  0x00007fab7413ee60: jmpq   0x00007fab7413edde
  0x00007fab7413ee65: mov    %rdi,0x8(%rsp)
  0x00007fab7413ee6a: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7413ee72: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop off=247}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ;   {runtime_call}
  0x00007fab7413ee77: jmp    0x00007fab7413ee25
  0x00007fab7413ee79: nop
  0x00007fab7413ee7a: nop
  0x00007fab7413ee7b: mov    0x2c0(%r15),%rax
  0x00007fab7413ee82: movabs $0x0,%r10
  0x00007fab7413ee8c: mov    %r10,0x2c0(%r15)
  0x00007fab7413ee93: movabs $0x0,%r10
  0x00007fab7413ee9d: mov    %r10,0x2c8(%r15)
  0x00007fab7413eea4: add    $0x30,%rsp
  0x00007fab7413eea8: pop    %rbp
  0x00007fab7413eea9: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7413eeae: hlt    
  0x00007fab7413eeaf: hlt    
  0x00007fab7413eeb0: hlt    
  0x00007fab7413eeb1: hlt    
  0x00007fab7413eeb2: hlt    
  0x00007fab7413eeb3: hlt    
  0x00007fab7413eeb4: hlt    
  0x00007fab7413eeb5: hlt    
  0x00007fab7413eeb6: hlt    
  0x00007fab7413eeb7: hlt    
  0x00007fab7413eeb8: hlt    
  0x00007fab7413eeb9: hlt    
  0x00007fab7413eeba: hlt    
  0x00007fab7413eebb: hlt    
  0x00007fab7413eebc: hlt    
  0x00007fab7413eebd: hlt    
  0x00007fab7413eebe: hlt    
  0x00007fab7413eebf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab7413eec0: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7413eec5: mov    %rsp,-0x28(%rsp)
  0x00007fab7413eeca: sub    $0x80,%rsp
  0x00007fab7413eed1: mov    %rax,0x78(%rsp)
  0x00007fab7413eed6: mov    %rcx,0x70(%rsp)
  0x00007fab7413eedb: mov    %rdx,0x68(%rsp)
  0x00007fab7413eee0: mov    %rbx,0x60(%rsp)
  0x00007fab7413eee5: mov    %rbp,0x50(%rsp)
  0x00007fab7413eeea: mov    %rsi,0x48(%rsp)
  0x00007fab7413eeef: mov    %rdi,0x40(%rsp)
  0x00007fab7413eef4: mov    %r8,0x38(%rsp)
  0x00007fab7413eef9: mov    %r9,0x30(%rsp)
  0x00007fab7413eefe: mov    %r10,0x28(%rsp)
  0x00007fab7413ef03: mov    %r11,0x20(%rsp)
  0x00007fab7413ef08: mov    %r12,0x18(%rsp)
  0x00007fab7413ef0d: mov    %r13,0x10(%rsp)
  0x00007fab7413ef12: mov    %r14,0x8(%rsp)
  0x00007fab7413ef17: mov    %r15,(%rsp)
  0x00007fab7413ef1b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7413ef25: movabs $0x7fab7413eec5,%rsi  ;   {internal_word}
  0x00007fab7413ef2f: mov    %rsp,%rdx
  0x00007fab7413ef32: and    $0xfffffffffffffff0,%rsp
  0x00007fab7413ef36: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7413ef3b: hlt    
[Deopt Handler Code]
  0x00007fab7413ef3c: movabs $0x7fab7413ef3c,%r10  ;   {section_word}
  0x00007fab7413ef46: push   %r10
  0x00007fab7413ef48: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7413ef4d: hlt    
  0x00007fab7413ef4e: hlt    
  0x00007fab7413ef4f: hlt    
<nmethod compile_id='96' compiler='C1' level='3' entry='0x00007fab7413ed80' size='1008' address='0x00007fab7413ec10' relocation_offset='312' insts_offset='368' stub_offset='688' scopes_data_offset='848' scopes_pcs_offset='904' dependencies_offset='1000' metadata_offset='832' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='500' iicount='500' stamp='0.390'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.meta.JavaKind from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<task_queued compile_id='97' method='java/util/concurrent/ConcurrentHashMap addCount (JI)V' bytes='292' count='256' backedge_count='8' iicount='256' level='3' stamp='0.391' comment='tiered' hot_count='256'/>
<task_queued compile_id='98' method='java/lang/String lastIndexOf (I)I' bytes='13' count='384' iicount='384' level='3' stamp='0.391' comment='tiered' hot_count='384'/>
[Loaded jdk.vm.ci.meta.ValueKind from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
----------------------------------------------------------------------
sun/misc/Unsafe.compareAndSwapObject  [0x00007fab7413f660, 0x00007fab7413f888]  552 bytes
[Entry Point]
  # {method} {0x00007fab619227c8} &apos;compareAndSwapObject&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rsi:rsi   = &apos;sun/misc/Unsafe&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = long
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fab7413f660: mov    0x8(%rsi),%r10d
  0x00007fab7413f664: shl    $0x3,%r10
  0x00007fab7413f668: cmp    %r10,%rax
  0x00007fab7413f66b: je     0x00007fab7413f678
  0x00007fab7413f671: jmpq   0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7413f676: xchg   %ax,%ax
[Verified Entry Point]
  0x00007fab7413f678: mov    %eax,-0x14000(%rsp)
  0x00007fab7413f67f: push   %rbp
  0x00007fab7413f680: mov    %rsp,%rbp
  0x00007fab7413f683: sub    $0x40,%rsp
  0x00007fab7413f687: mov    %r9,0x20(%rsp)
  0x00007fab7413f68c: cmp    $0x0,%r9
  0x00007fab7413f690: lea    0x20(%rsp),%r9
  0x00007fab7413f695: cmove  0x20(%rsp),%r9
  0x00007fab7413f69b: mov    %r8,0x18(%rsp)
  0x00007fab7413f6a0: cmp    $0x0,%r8
  0x00007fab7413f6a4: lea    0x18(%rsp),%r8
  0x00007fab7413f6a9: cmove  0x18(%rsp),%r8
  0x00007fab7413f6af: mov    %rdx,0x8(%rsp)
  0x00007fab7413f6b4: cmp    $0x0,%rdx
  0x00007fab7413f6b8: lea    0x8(%rsp),%rdx
  0x00007fab7413f6bd: cmove  0x8(%rsp),%rdx
  0x00007fab7413f6c3: mov    %rsi,(%rsp)
  0x00007fab7413f6c7: cmp    $0x0,%rsi
  0x00007fab7413f6cb: lea    (%rsp),%rsi
  0x00007fab7413f6cf: cmove  (%rsp),%rsi        ; OopMap{[32]=Oop [24]=Oop [8]=Oop [0]=Oop off=116}
  0x00007fab7413f6d4: movabs $0x7fab7413f6d4,%r10  ;   {section_word}
  0x00007fab7413f6de: mov    %r10,0x1c8(%r15)
  0x00007fab7413f6e5: mov    %rsp,0x1c0(%r15)
  0x00007fab7413f6ec: cmpb   $0x0,0x1a8352e1(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab7413f6f3: je     0x00007fab7413f737
  0x00007fab7413f6f9: push   %rsi
  0x00007fab7413f6fa: push   %rdx
  0x00007fab7413f6fb: push   %rcx
  0x00007fab7413f6fc: push   %r8
  0x00007fab7413f6fe: push   %r9
  0x00007fab7413f700: movabs $0x7fab619227c8,%rsi  ;   {metadata({method} {0x00007fab619227c8} &apos;compareAndSwapObject&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00007fab7413f70a: mov    %r15,%rdi
  0x00007fab7413f70d: test   $0xf,%esp
  0x00007fab7413f713: je     0x00007fab7413f72b
  0x00007fab7413f719: sub    $0x8,%rsp
  0x00007fab7413f71d: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab7413f722: add    $0x8,%rsp
  0x00007fab7413f726: jmpq   0x00007fab7413f730
  0x00007fab7413f72b: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab7413f730: pop    %r9
  0x00007fab7413f732: pop    %r8
  0x00007fab7413f734: pop    %rcx
  0x00007fab7413f735: pop    %rdx
  0x00007fab7413f736: pop    %rsi
  0x00007fab7413f737: lea    0x1e0(%r15),%rdi
  0x00007fab7413f73e: movl   $0x4,0x258(%r15)
  0x00007fab7413f749: callq  0x00007fab8e43ab60  ;   {runtime_call}
  0x00007fab7413f74e: vzeroupper 
  0x00007fab7413f751: and    $0xff,%eax
  0x00007fab7413f757: setne  %al
  0x00007fab7413f75a: movl   $0x5,0x258(%r15)
  0x00007fab7413f765: mov    %r15d,%ecx
  0x00007fab7413f768: shr    $0x4,%ecx
  0x00007fab7413f76b: and    $0xffc,%ecx
  0x00007fab7413f771: movabs $0x7fab8f7e1000,%r10  ;   {external_word}
  0x00007fab7413f77b: mov    %ecx,(%r10,%rcx,1)
  0x00007fab7413f77f: cmpl   $0x0,0x1a840233(%rip)        # 0x00007fab8e97f9bc
                                                ;   {external_word}
  0x00007fab7413f789: jne    0x00007fab7413f79d
  0x00007fab7413f78f: cmpl   $0x0,0x30(%r15)
  0x00007fab7413f797: je     0x00007fab7413f7be
  0x00007fab7413f79d: mov    %rax,-0x8(%rbp)
  0x00007fab7413f7a1: mov    %r15,%rdi
  0x00007fab7413f7a4: mov    %rsp,%r12
  0x00007fab7413f7a7: sub    $0x0,%rsp
  0x00007fab7413f7ab: and    $0xfffffffffffffff0,%rsp
  0x00007fab7413f7af: callq  0x00007fab8e40fc20  ;   {runtime_call}
  0x00007fab7413f7b4: mov    %r12,%rsp
  0x00007fab7413f7b7: xor    %r12,%r12
  0x00007fab7413f7ba: mov    -0x8(%rbp),%rax
  0x00007fab7413f7be: movl   $0x8,0x258(%r15)
  0x00007fab7413f7c9: cmpl   $0x1,0x2b0(%r15)
  0x00007fab7413f7d4: je     0x00007fab7413f864
  0x00007fab7413f7da: cmpb   $0x0,0x1a8351f3(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab7413f7e1: je     0x00007fab7413f81f
  0x00007fab7413f7e7: mov    %rax,-0x8(%rbp)
  0x00007fab7413f7eb: movabs $0x7fab619227c8,%rsi  ;   {metadata({method} {0x00007fab619227c8} &apos;compareAndSwapObject&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00007fab7413f7f5: mov    %r15,%rdi
  0x00007fab7413f7f8: test   $0xf,%esp
  0x00007fab7413f7fe: je     0x00007fab7413f816
  0x00007fab7413f804: sub    $0x8,%rsp
  0x00007fab7413f808: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab7413f80d: add    $0x8,%rsp
  0x00007fab7413f811: jmpq   0x00007fab7413f81b
  0x00007fab7413f816: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab7413f81b: mov    -0x8(%rbp),%rax
  0x00007fab7413f81f: movabs $0x0,%r10
  0x00007fab7413f829: mov    %r10,0x1c0(%r15)
  0x00007fab7413f830: movabs $0x0,%r10
  0x00007fab7413f83a: mov    %r10,0x1c8(%r15)
  0x00007fab7413f841: mov    0x38(%r15),%rcx
  0x00007fab7413f845: movl   $0x0,0x100(%rcx)
  0x00007fab7413f84f: leaveq 
  0x00007fab7413f850: cmpq   $0x0,0x8(%r15)
  0x00007fab7413f858: jne    0x00007fab7413f85f
  0x00007fab7413f85e: retq   
  0x00007fab7413f85f: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00007fab7413f864: mov    %rax,-0x8(%rbp)
  0x00007fab7413f868: mov    %rsp,%r12
  0x00007fab7413f86b: sub    $0x0,%rsp
  0x00007fab7413f86f: and    $0xfffffffffffffff0,%rsp
  0x00007fab7413f873: callq  0x00007fab8e372120  ;   {runtime_call}
  0x00007fab7413f878: mov    %r12,%rsp
  0x00007fab7413f87b: xor    %r12,%r12
  0x00007fab7413f87e: mov    -0x8(%rbp),%rax
  0x00007fab7413f882: jmpq   0x00007fab7413f7da
  0x00007fab7413f887: hlt    
<nmethod compile_id='99' compile_kind='c2n' level='0' entry='0x00007fab7413f660' size='952' address='0x00007fab7413f4d0' relocation_offset='312' consts_offset='952' insts_offset='400' method='sun/misc/Unsafe compareAndSwapObject (Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z' bytes='0' count='384' iicount='384' stamp='0.392'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.addCount  [0x00007fab7413fae0, 0x00007fab741404e8]  2568 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx:rdx   = long
  # parm1:    rcx       = int
  #           [sp+0xd0]  (sp of caller)
  0x00007fab7413fae0: mov    0x8(%rsi),%r10d
  0x00007fab7413fae4: shl    $0x3,%r10
  0x00007fab7413fae8: cmp    %rax,%r10
  0x00007fab7413faeb: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7413faf1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7413fafc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7413fb00: mov    %eax,-0x14000(%rsp)
  0x00007fab7413fb07: push   %rbp
  0x00007fab7413fb08: sub    $0xc0,%rsp
  0x00007fab7413fb0f: mov    %rsi,0x98(%rsp)
  0x00007fab7413fb17: mov    %ecx,0x84(%rsp)
  0x00007fab7413fb1e: movabs $0x7fab61b93190,%rax  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413fb28: mov    0xfc(%rax),%ebx
  0x00007fab7413fb2e: add    $0x8,%ebx
  0x00007fab7413fb31: mov    %ebx,0xfc(%rax)
  0x00007fab7413fb37: movabs $0x7fab61a772d8,%rax  ;   {metadata({method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413fb41: and    $0x1ff8,%ebx
  0x00007fab7413fb47: cmp    $0x0,%ebx
  0x00007fab7413fb4a: je     0x00007fab74140333  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@0 (line 2258)

  0x00007fab7413fb50: mov    0x30(%rsi),%edi
  0x00007fab7413fb53: shl    $0x3,%rdi          ;*getfield counterCells {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@1 (line 2258)

  0x00007fab7413fb57: cmp    $0x0,%rdi
  0x00007fab7413fb5b: movabs $0x7fab61b93190,%rax  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413fb65: movabs $0x130,%rbx
  0x00007fab7413fb6f: jne    0x00007fab7413fb7f
  0x00007fab7413fb75: movabs $0x140,%rbx
  0x00007fab7413fb7f: mov    (%rax,%rbx,1),%r8
  0x00007fab7413fb83: lea    0x1(%r8),%r8
  0x00007fab7413fb87: mov    %r8,(%rax,%rbx,1)
  0x00007fab7413fb8b: jne    0x00007fab7413fbf6  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@7 (line 2258)

  0x00007fab7413fb91: vmovsd 0x18(%rsi),%xmm0
  0x00007fab7413fb96: vmovq  %xmm0,%rax         ;*getfield baseCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@18 (line 2258)

  0x00007fab7413fb9b: mov    %rax,%r8
  0x00007fab7413fb9e: add    %rdx,%r8
  0x00007fab7413fba1: mov    %r8,%rbx
  0x00007fab7413fba4: lea    0x18(%rsi),%r9
  0x00007fab7413fba8: lock cmpxchg %rbx,(%r9)
  0x00007fab7413fbad: mov    $0x1,%ebx
  0x00007fab7413fbb2: je     0x00007fab7413fbbd
  0x00007fab7413fbb8: mov    $0x0,%ebx          ;*invokevirtual compareAndSwapLong {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@31 (line 2259)

  0x00007fab7413fbbd: cmp    $0x0,%ebx
  0x00007fab7413fbc0: movabs $0x7fab61b93190,%rbx  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413fbca: movabs $0x1e8,%rax
  0x00007fab7413fbd4: jne    0x00007fab7413fbe4
  0x00007fab7413fbda: movabs $0x1f8,%rax
  0x00007fab7413fbe4: mov    (%rbx,%rax,1),%r9
  0x00007fab7413fbe8: lea    0x1(%r9),%r9
  0x00007fab7413fbec: mov    %r9,(%rbx,%rax,1)
  0x00007fab7413fbf0: jne    0x00007fab7413fe1e  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@34 (line 2259)

  0x00007fab7413fbf6: cmp    $0x0,%rdi
  0x00007fab7413fbfa: movabs $0x7fab61b93190,%rbx  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413fc04: movabs $0x208,%rax
  0x00007fab7413fc0e: je     0x00007fab7413fc1e
  0x00007fab7413fc14: movabs $0x218,%rax
  0x00007fab7413fc1e: mov    (%rbx,%rax,1),%r8
  0x00007fab7413fc22: lea    0x1(%r8),%r8
  0x00007fab7413fc26: mov    %r8,(%rbx,%rax,1)
  0x00007fab7413fc2a: jne    0x00007fab7413fc3a  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@42 (line 2262)

  0x00007fab7413fc30: mov    $0x1,%edi
  0x00007fab7413fc35: jmpq   0x00007fab74140302  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2266)

  0x00007fab7413fc3a: mov    0xc(%rdi),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@47 (line 2262)
                                                ; implicit exception: dispatches to 0x00007fab7414034a
  0x00007fab7413fc3d: dec    %ebx
  0x00007fab7413fc3f: cmp    $0x0,%ebx
  0x00007fab7413fc42: movabs $0x7fab61b93190,%rax  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413fc4c: movabs $0x228,%r8
  0x00007fab7413fc56: jl     0x00007fab7413fc66
  0x00007fab7413fc5c: movabs $0x238,%r8
  0x00007fab7413fc66: mov    (%rax,%r8,1),%r9
  0x00007fab7413fc6a: lea    0x1(%r9),%r9
  0x00007fab7413fc6e: mov    %r9,(%rax,%r8,1)
  0x00007fab7413fc72: jge    0x00007fab7413fc82  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@53 (line 2262)

  0x00007fab7413fc78: mov    $0x1,%edi
  0x00007fab7413fc7d: jmpq   0x00007fab74140302  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2266)

  0x00007fab7413fc82: mov    %ebx,0x80(%rsp)
  0x00007fab7413fc89: mov    %rdi,0x88(%rsp)
  0x00007fab7413fc91: mov    %rdx,0x90(%rsp)
  0x00007fab7413fc99: movabs $0x7fab61b93190,%rax  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413fca3: addq   $0x1,0x248(%rax)
  0x00007fab7413fcab: nop
  0x00007fab7413fcac: nop
  0x00007fab7413fcad: nop
  0x00007fab7413fcae: nop
  0x00007fab7413fcaf: callq  0x00007fab74048160  ; OopMap{[152]=Oop [136]=Oop off=468}
                                                ;*invokestatic getProbe {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@58 (line 2263)
                                                ;   {static_call}
  0x00007fab7413fcb4: and    0x80(%rsp),%eax
  0x00007fab7413fcbb: movslq %eax,%rbx
  0x00007fab7413fcbe: mov    0x88(%rsp),%rdi
  0x00007fab7413fcc6: cmp    0xc(%rdi),%eax
  0x00007fab7413fcc9: jae    0x00007fab7414034f
  0x00007fab7413fccf: mov    0x10(%rdi,%rbx,4),%esi
  0x00007fab7413fcd3: shl    $0x3,%rsi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@64 (line 2263)

  0x00007fab7413fcd7: cmp    $0x0,%rsi
  0x00007fab7413fcdb: movabs $0x7fab61b93190,%rax  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413fce5: movabs $0x258,%rbx
  0x00007fab7413fcef: je     0x00007fab7413fcff
  0x00007fab7413fcf5: movabs $0x268,%rbx
  0x00007fab7413fcff: mov    (%rax,%rbx,1),%rdi
  0x00007fab7413fd03: lea    0x1(%rdi),%rdi
  0x00007fab7413fd07: mov    %rdi,(%rax,%rbx,1)
  0x00007fab7413fd0b: jne    0x00007fab7413fd2b  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@68 (line 2263)

  0x00007fab7413fd11: mov    $0x1,%edi
  0x00007fab7413fd16: mov    0x90(%rsp),%rdx
  0x00007fab7413fd1e: mov    0x98(%rsp),%rsi
  0x00007fab7413fd26: jmpq   0x00007fab74140302  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2266)

  0x00007fab7413fd2b: mov    0x90(%rsp),%rdx
  0x00007fab7413fd33: vmovsd 0x90(%rsi),%xmm0   ; implicit exception: dispatches to 0x00007fab74140358
  0x00007fab7413fd3b: vmovq  %xmm0,%rax         ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@81 (line 2263)

  0x00007fab7413fd40: mov    %rax,%rbx
  0x00007fab7413fd43: add    %rdx,%rbx
  0x00007fab7413fd46: lea    0x90(%rsi),%rsi
  0x00007fab7413fd4d: lock cmpxchg %rbx,(%rsi)
  0x00007fab7413fd52: mov    $0x1,%esi
  0x00007fab7413fd57: je     0x00007fab7413fd62
  0x00007fab7413fd5d: mov    $0x0,%esi          ;*invokevirtual compareAndSwapLong {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@91 (line 2265)

  0x00007fab7413fd62: cmp    $0x0,%esi
  0x00007fab7413fd65: movabs $0x7fab61b93190,%rdi  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413fd6f: movabs $0x310,%rbx
  0x00007fab7413fd79: jne    0x00007fab7413fd89
  0x00007fab7413fd7f: movabs $0x320,%rbx
  0x00007fab7413fd89: mov    (%rdi,%rbx,1),%rax
  0x00007fab7413fd8d: lea    0x1(%rax),%rax
  0x00007fab7413fd91: mov    %rax,(%rdi,%rbx,1)
  0x00007fab7413fd95: jne    0x00007fab7413fdab  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@97 (line 2265)

  0x00007fab7413fd9b: mov    %rsi,%rdi
  0x00007fab7413fd9e: mov    0x98(%rsp),%rsi
  0x00007fab7413fda6: jmpq   0x00007fab74140302  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2266)

  0x00007fab7413fdab: mov    0x84(%rsp),%ecx
  0x00007fab7413fdb2: cmp    $0x1,%ecx
  0x00007fab7413fdb5: movabs $0x7fab61b93190,%rsi  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413fdbf: movabs $0x340,%rdi
  0x00007fab7413fdc9: jg     0x00007fab7413fdd9
  0x00007fab7413fdcf: movabs $0x350,%rdi
  0x00007fab7413fdd9: mov    (%rsi,%rdi,1),%rbx
  0x00007fab7413fddd: lea    0x1(%rbx),%rbx
  0x00007fab7413fde1: mov    %rbx,(%rsi,%rdi,1)
  0x00007fab7413fde5: jle    0x00007fab741402f3  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@110 (line 2269)

  0x00007fab7413fdeb: mov    0x98(%rsp),%rsi
  0x00007fab7413fdf3: movabs $0x7fab61b93190,%rdi  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413fdfd: addq   $0x1,0x360(%rdi)
  0x00007fab7413fe05: mov    0x98(%rsp),%rsi    ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@115 (line 2271)

  0x00007fab7413fe0d: nop
  0x00007fab7413fe0e: nop
  0x00007fab7413fe0f: callq  0x00007fab74047d60  ; OopMap{[152]=Oop off=820}
                                                ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@115 (line 2271)
                                                ;   {optimized virtual_call}
  0x00007fab7413fe14: mov    %rax,%r8           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@120 (line 2273)

  0x00007fab7413fe17: mov    0x84(%rsp),%ecx
  0x00007fab7413fe1e: cmp    $0x0,%ecx
  0x00007fab7413fe21: movabs $0x7fab61b93190,%rsi  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413fe2b: movabs $0x3f8,%rdi
  0x00007fab7413fe35: jl     0x00007fab7413fe45
  0x00007fab7413fe3b: movabs $0x408,%rdi
  0x00007fab7413fe45: mov    (%rsi,%rdi,1),%rbx
  0x00007fab7413fe49: lea    0x1(%rbx),%rbx
  0x00007fab7413fe4d: mov    %rbx,(%rsi,%rdi,1)
  0x00007fab7413fe51: jl     0x00007fab741402e4  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@121 (line 2273)

  0x00007fab7413fe57: nop
  0x00007fab7413fe58: mov    0x98(%rsp),%rsi
  0x00007fab7413fe60: mov    0x14(%rsi),%edi    ;*getfield sizeCtl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@127 (line 2275)

  0x00007fab7413fe63: movslq %edi,%rbx
  0x00007fab7413fe66: cmp    %rbx,%r8
  0x00007fab7413fe69: movabs $0x7fab61b93190,%rbx  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413fe73: movabs $0x428,%rax
  0x00007fab7413fe7d: jge    0x00007fab7413fe8d
  0x00007fab7413fe83: movabs $0x418,%rax
  0x00007fab7413fe8d: mov    (%rbx,%rax,1),%rdx
  0x00007fab7413fe91: lea    0x1(%rdx),%rdx
  0x00007fab7413fe95: mov    %rdx,(%rbx,%rax,1)
  0x00007fab7413fe99: jl     0x00007fab741402e4  ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@134 (line 2275)

  0x00007fab7413fe9f: mov    0x28(%rsi),%ebx
  0x00007fab7413fea2: shl    $0x3,%rbx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@139 (line 2275)

  0x00007fab7413fea6: cmp    $0x0,%rbx
  0x00007fab7413feaa: movabs $0x7fab61b93190,%rax  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413feb4: movabs $0x438,%rdx
  0x00007fab7413febe: je     0x00007fab7413fece
  0x00007fab7413fec4: movabs $0x448,%rdx
  0x00007fab7413fece: mov    (%rax,%rdx,1),%rcx
  0x00007fab7413fed2: lea    0x1(%rcx),%rcx
  0x00007fab7413fed6: mov    %rcx,(%rax,%rdx,1)
  0x00007fab7413feda: je     0x00007fab741402e4  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@145 (line 2275)

  0x00007fab7413fee0: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@150 (line 2275)
                                                ; implicit exception: dispatches to 0x00007fab7414035d
  0x00007fab7413fee3: cmp    $0x40000000,%eax
  0x00007fab7413fee9: movabs $0x7fab61b93190,%rdx  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413fef3: movabs $0x458,%rcx
  0x00007fab7413fefd: jge    0x00007fab7413ff0d
  0x00007fab7413ff03: movabs $0x468,%rcx
  0x00007fab7413ff0d: mov    (%rdx,%rcx,1),%r8
  0x00007fab7413ff11: lea    0x1(%r8),%r8
  0x00007fab7413ff15: mov    %r8,(%rdx,%rcx,1)
  0x00007fab7413ff19: jge    0x00007fab741402e4  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@156 (line 2275)

  0x00007fab7413ff1f: mov    %rbx,0xa8(%rsp)
  0x00007fab7413ff27: mov    %edi,0xa0(%rsp)
  0x00007fab7413ff2e: movabs $0x7fab61b93190,%rdx  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413ff38: addq   $0x1,0x478(%rdx)
  0x00007fab7413ff40: movabs $0x7fab61b93ba0,%rdx  ;   {metadata(method data for {method} {0x00007fab61a76eb8} &apos;resizeStamp&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413ff4a: mov    0xfc(%rdx),%ecx
  0x00007fab7413ff50: add    $0x8,%ecx
  0x00007fab7413ff53: mov    %ecx,0xfc(%rdx)
  0x00007fab7413ff59: movabs $0x7fab61a76eb8,%rdx  ;   {metadata({method} {0x00007fab61a76eb8} &apos;resizeStamp&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413ff63: and    $0x7ffff8,%ecx
  0x00007fab7413ff69: cmp    $0x0,%ecx
  0x00007fab7413ff6c: je     0x00007fab74140362
  0x00007fab7413ff72: movabs $0x7fab61b93ba0,%rdx  ;   {metadata(method data for {method} {0x00007fab61a76eb8} &apos;resizeStamp&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413ff7c: addq   $0x1,0x130(%rdx)
  0x00007fab7413ff84: mov    %rax,%rsi          ;*invokestatic numberOfLeadingZeros {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@1 (line 2217)
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@161 (line 2277)

  0x00007fab7413ff87: callq  0x00007fab74048160  ; OopMap{[152]=Oop [168]=Oop off=1196}
                                                ;*invokestatic numberOfLeadingZeros {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@1 (line 2217)
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@161 (line 2277)
                                                ;   {static_call}
  0x00007fab7413ff8c: movabs $0x670bbe000,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413ff96: mov    0xcc(%rcx),%ecx    ;*getstatic RESIZE_STAMP_BITS {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@5 (line 2217)
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@161 (line 2277)

  0x00007fab7413ff9c: dec    %ecx
  0x00007fab7413ff9e: mov    $0x1,%edx
  0x00007fab7413ffa3: shl    %cl,%edx
  0x00007fab7413ffa5: or     %rdx,%rax
  0x00007fab7413ffa8: mov    0xa0(%rsp),%edi
  0x00007fab7413ffaf: cmp    $0x0,%edi
  0x00007fab7413ffb2: movabs $0x7fab61b93190,%rdx  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413ffbc: movabs $0x488,%rcx
  0x00007fab7413ffc6: jge    0x00007fab7413ffd6
  0x00007fab7413ffcc: movabs $0x498,%rcx
  0x00007fab7413ffd6: mov    (%rdx,%rcx,1),%rsi
  0x00007fab7413ffda: lea    0x1(%rsi),%rsi
  0x00007fab7413ffde: mov    %rsi,(%rdx,%rcx,1)
  0x00007fab7413ffe2: jge    0x00007fab741401c1  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@168 (line 2278)

  0x00007fab7413ffe8: mov    %rdi,%rdx
  0x00007fab7413ffeb: shr    $0x10,%edx
  0x00007fab7413ffee: cmp    %eax,%edx
  0x00007fab7413fff0: movabs $0x7fab61b93190,%rdx  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7413fffa: movabs $0x4a8,%rcx
  0x00007fab74140004: jne    0x00007fab74140014
  0x00007fab7414000a: movabs $0x4b8,%rcx
  0x00007fab74140014: mov    (%rdx,%rcx,1),%rsi
  0x00007fab74140018: lea    0x1(%rsi),%rsi
  0x00007fab7414001c: mov    %rsi,(%rdx,%rcx,1)
  0x00007fab74140020: jne    0x00007fab741402e4  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@179 (line 2279)

  0x00007fab74140026: mov    %rax,%rdx
  0x00007fab74140029: inc    %edx
  0x00007fab7414002b: cmp    %edx,%edi
  0x00007fab7414002d: movabs $0x7fab61b93190,%rdx  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74140037: movabs $0x4c8,%rcx
  0x00007fab74140041: je     0x00007fab74140051
  0x00007fab74140047: movabs $0x4d8,%rcx
  0x00007fab74140051: mov    (%rdx,%rcx,1),%rsi
  0x00007fab74140055: lea    0x1(%rsi),%rsi
  0x00007fab74140059: mov    %rsi,(%rdx,%rcx,1)
  0x00007fab7414005d: je     0x00007fab741402e4  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@188 (line 2279)

  0x00007fab74140063: add    $0xffff,%eax
  0x00007fab74140069: cmp    %eax,%edi
  0x00007fab7414006b: movabs $0x7fab61b93190,%rax  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74140075: movabs $0x4e8,%rdx
  0x00007fab7414007f: je     0x00007fab7414008f
  0x00007fab74140085: movabs $0x4f8,%rdx
  0x00007fab7414008f: mov    (%rax,%rdx,1),%rcx
  0x00007fab74140093: lea    0x1(%rcx),%rcx
  0x00007fab74140097: mov    %rcx,(%rax,%rdx,1)
  0x00007fab7414009b: je     0x00007fab741402e4  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@199 (line 2279)

  0x00007fab741400a1: mov    0x98(%rsp),%rsi
  0x00007fab741400a9: mov    0x2c(%rsi),%ecx
  0x00007fab741400ac: shl    $0x3,%rcx          ;*getfield nextTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@203 (line 2279)

  0x00007fab741400b0: cmp    $0x0,%rcx
  0x00007fab741400b4: movabs $0x7fab61b93190,%rax  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741400be: movabs $0x508,%rdx
  0x00007fab741400c8: je     0x00007fab741400d8
  0x00007fab741400ce: movabs $0x518,%rdx
  0x00007fab741400d8: mov    (%rax,%rdx,1),%rbx
  0x00007fab741400dc: lea    0x1(%rbx),%rbx
  0x00007fab741400e0: mov    %rbx,(%rax,%rdx,1)
  0x00007fab741400e4: je     0x00007fab741402e4  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@209 (line 2279)

  0x00007fab741400ea: mov    0x20(%rsi),%eax    ;*getfield transferIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@213 (line 2279)

  0x00007fab741400ed: cmp    $0x0,%eax
  0x00007fab741400f0: movabs $0x7fab61b93190,%rax  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741400fa: movabs $0x528,%rdx
  0x00007fab74140104: jg     0x00007fab74140114
  0x00007fab7414010a: movabs $0x538,%rdx
  0x00007fab74140114: mov    (%rax,%rdx,1),%rbx
  0x00007fab74140118: lea    0x1(%rbx),%rbx
  0x00007fab7414011c: mov    %rbx,(%rax,%rdx,1)
  0x00007fab74140120: jle    0x00007fab741402d4  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@216 (line 2279)

  0x00007fab74140126: mov    %rdi,%rdx
  0x00007fab74140129: inc    %edx
  0x00007fab7414012b: mov    %rdi,%rax
  0x00007fab7414012e: lea    0x14(%rsi),%rdi
  0x00007fab74140132: lock cmpxchg %edx,(%rdi)
  0x00007fab74140136: mov    $0x1,%edx
  0x00007fab7414013b: je     0x00007fab74140146
  0x00007fab74140141: mov    $0x0,%edx          ;*invokevirtual compareAndSwapInt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@235 (line 2283)

  0x00007fab74140146: cmp    $0x0,%edx
  0x00007fab74140149: movabs $0x7fab61b93190,%rdx  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74140153: movabs $0x5f8,%rdi
  0x00007fab7414015d: je     0x00007fab7414016d
  0x00007fab74140163: movabs $0x608,%rdi
  0x00007fab7414016d: mov    (%rdx,%rdi,1),%rbx
  0x00007fab74140171: lea    0x1(%rbx),%rbx
  0x00007fab74140175: mov    %rbx,(%rdx,%rdi,1)
  0x00007fab74140179: je     0x00007fab7414025c  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@238 (line 2283)

  0x00007fab7414017f: mov    %rsi,%rdx
  0x00007fab74140182: movabs $0x7fab61b93190,%rdi  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7414018c: addq   $0x1,0x618(%rdi)
  0x00007fab74140194: mov    0xa8(%rsp),%rdx
  0x00007fab7414019c: mov    %rsi,%rdi
  0x00007fab7414019f: mov    %rdi,%rsi          ;*invokespecial transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@246 (line 2284)

  0x00007fab741401a2: nop
  0x00007fab741401a3: nop
  0x00007fab741401a4: nop
  0x00007fab741401a5: nop
  0x00007fab741401a6: nop
  0x00007fab741401a7: callq  0x00007fab74047d60  ; OopMap{[152]=Oop off=1740}
                                                ;*invokespecial transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@246 (line 2284)
                                                ;   {optimized virtual_call}
  0x00007fab741401ac: movabs $0x7fab61b93190,%rax  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741401b6: incl   0x628(%rax)
  0x00007fab741401bc: jmpq   0x00007fab7414025c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@249 (line 2284)

  0x00007fab741401c1: mov    0x98(%rsp),%rsi
  0x00007fab741401c9: shl    $0x10,%eax
  0x00007fab741401cc: mov    %rax,%rdx
  0x00007fab741401cf: add    $0x2,%edx
  0x00007fab741401d2: mov    %rdi,%rax
  0x00007fab741401d5: lea    0x14(%rsi),%rcx
  0x00007fab741401d9: lock cmpxchg %edx,(%rcx)
  0x00007fab741401dd: mov    $0x1,%edx
  0x00007fab741401e2: je     0x00007fab741401ed
  0x00007fab741401e8: mov    $0x0,%edx          ;*invokevirtual compareAndSwapInt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@269 (line 2286)

  0x00007fab741401ed: cmp    $0x0,%edx
  0x00007fab741401f0: movabs $0x7fab61b93190,%rdx  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741401fa: movabs $0x6d8,%rcx
  0x00007fab74140204: je     0x00007fab74140214
  0x00007fab7414020a: movabs $0x6e8,%rcx
  0x00007fab74140214: mov    (%rdx,%rcx,1),%rdi
  0x00007fab74140218: lea    0x1(%rdi),%rdi
  0x00007fab7414021c: mov    %rdi,(%rdx,%rcx,1)
  0x00007fab74140220: je     0x00007fab7414025c  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@272 (line 2286)

  0x00007fab74140226: mov    0xa8(%rsp),%rbx
  0x00007fab7414022e: mov    %rsi,%rdx
  0x00007fab74140231: movabs $0x7fab61b93190,%rcx  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7414023b: addq   $0x1,0x6f8(%rcx)
  0x00007fab74140243: mov    %rbx,%rdx
  0x00007fab74140246: movabs $0x0,%rcx          ;   {oop(NULL)}
  0x00007fab74140250: mov    %rsi,%rdi
  0x00007fab74140253: mov    %rdi,%rsi          ;*invokespecial transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@279 (line 2288)

  0x00007fab74140256: nop
  0x00007fab74140257: callq  0x00007fab74047d60  ; OopMap{[152]=Oop off=1916}
                                                ;*invokespecial transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@279 (line 2288)
                                                ;   {optimized virtual_call}
  0x00007fab7414025c: mov    0x98(%rsp),%rsi
  0x00007fab74140264: movabs $0x7fab61b93190,%rdi  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7414026e: addq   $0x1,0x708(%rdi)
  0x00007fab74140276: mov    0x98(%rsp),%rsi    ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@283 (line 2289)

  0x00007fab7414027e: nop
  0x00007fab7414027f: callq  0x00007fab74047d60  ; OopMap{[152]=Oop off=1956}
                                                ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@283 (line 2289)
                                                ;   {optimized virtual_call}
  0x00007fab74140284: movabs $0x7fab61b93190,%rdx  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7414028e: mov    0x100(%rdx),%ecx
  0x00007fab74140294: add    $0x8,%ecx
  0x00007fab74140297: mov    %ecx,0x100(%rdx)
  0x00007fab7414029d: movabs $0x7fab61a772d8,%rdx  ;   {metadata({method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741402a7: and    $0xfff8,%ecx
  0x00007fab741402ad: cmp    $0x0,%ecx
  0x00007fab741402b0: je     0x00007fab74140379  ; OopMap{[152]=Oop off=2006}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@288 (line 2290)

  0x00007fab741402b6: test   %eax,0x1b6a1e44(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab741402bc: movabs $0x7fab61b93190,%rdx  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741402c6: incl   0x7a0(%rdx)
  0x00007fab741402cc: mov    %rax,%r8
  0x00007fab741402cf: jmpq   0x00007fab7413fe58  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@288 (line 2290)

  0x00007fab741402d4: movabs $0x7fab61b93190,%rdx  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741402de: incl   0x548(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@219 (line 2282)

  0x00007fab741402e4: add    $0xc0,%rsp
  0x00007fab741402eb: pop    %rbp
  0x00007fab741402ec: test   %eax,0x1b6a1e0e(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741402f2: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@291 (line 2292)

  0x00007fab741402f3: add    $0xc0,%rsp
  0x00007fab741402fa: pop    %rbp
  0x00007fab741402fb: test   %eax,0x1b6a1dff(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74140301: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@113 (line 2270)

  0x00007fab74140302: mov    %rsi,%rcx
  0x00007fab74140305: movabs $0x7fab61b93190,%rbx  ;   {metadata(method data for {method} {0x00007fab61a772d8} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7414030f: addq   $0x1,0x330(%rbx)
  0x00007fab74140317: mov    %rdi,%rcx          ;*invokespecial fullAddCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@104 (line 2266)

  0x00007fab7414031a: nop
  0x00007fab7414031b: nop
  0x00007fab7414031c: nop
  0x00007fab7414031d: nop
  0x00007fab7414031e: nop
  0x00007fab7414031f: callq  0x00007fab74047d60  ; OopMap{off=2116}
                                                ;*invokespecial fullAddCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@104 (line 2266)
                                                ;   {optimized virtual_call}
  0x00007fab74140324: add    $0xc0,%rsp
  0x00007fab7414032b: pop    %rbp
  0x00007fab7414032c: test   %eax,0x1b6a1dce(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74140332: retq   
  0x00007fab74140333: mov    %rax,0x8(%rsp)
  0x00007fab74140338: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74140340: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [152]=Oop off=2149}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@-1 (line 2258)
                                                ;   {runtime_call}
  0x00007fab74140345: jmpq   0x00007fab7413fb50
  0x00007fab7414034a: callq  0x00007fab740fc000  ; OopMap{rsi=Oop [152]=Oop rdi=Oop off=2159}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@47 (line 2262)
                                                ;   {runtime_call}
  0x00007fab7414034f: mov    %rax,(%rsp)
  0x00007fab74140353: callq  0x00007fab740fb940  ; OopMap{[152]=Oop rdi=Oop off=2168}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@64 (line 2263)
                                                ;   {runtime_call}
  0x00007fab74140358: callq  0x00007fab740fc000  ; OopMap{[152]=Oop rsi=Oop off=2173}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@81 (line 2263)
                                                ;   {runtime_call}
  0x00007fab7414035d: callq  0x00007fab740fc000  ; OopMap{rsi=Oop [152]=Oop rbx=Oop off=2178}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@150 (line 2275)
                                                ;   {runtime_call}
  0x00007fab74140362: mov    %rdx,0x8(%rsp)
  0x00007fab74140367: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7414036f: callq  0x00007fab741005e0  ; OopMap{[168]=Oop [152]=Oop off=2196}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@-1 (line 2217)
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@161 (line 2277)
                                                ;   {runtime_call}
  0x00007fab74140374: jmpq   0x00007fab7413ff72
  0x00007fab74140379: mov    %rdx,0x8(%rsp)
  0x00007fab7414037e: movq   $0x120,(%rsp)
  0x00007fab74140386: callq  0x00007fab741005e0  ; OopMap{[152]=Oop off=2219}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@288 (line 2290)
                                                ;   {runtime_call}
  0x00007fab7414038b: jmpq   0x00007fab741402b6
  0x00007fab74140390: nop
  0x00007fab74140391: nop
  0x00007fab74140392: mov    0x2c0(%r15),%rax
  0x00007fab74140399: movabs $0x0,%r10
  0x00007fab741403a3: mov    %r10,0x2c0(%r15)
  0x00007fab741403aa: movabs $0x0,%r10
  0x00007fab741403b4: mov    %r10,0x2c8(%r15)
  0x00007fab741403bb: add    $0xc0,%rsp
  0x00007fab741403c2: pop    %rbp
  0x00007fab741403c3: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab741403c8: hlt    
  0x00007fab741403c9: hlt    
  0x00007fab741403ca: hlt    
  0x00007fab741403cb: hlt    
  0x00007fab741403cc: hlt    
  0x00007fab741403cd: hlt    
  0x00007fab741403ce: hlt    
  0x00007fab741403cf: hlt    
  0x00007fab741403d0: hlt    
  0x00007fab741403d1: hlt    
  0x00007fab741403d2: hlt    
  0x00007fab741403d3: hlt    
  0x00007fab741403d4: hlt    
  0x00007fab741403d5: hlt    
  0x00007fab741403d6: hlt    
  0x00007fab741403d7: hlt    
  0x00007fab741403d8: hlt    
  0x00007fab741403d9: hlt    
  0x00007fab741403da: hlt    
  0x00007fab741403db: hlt    
  0x00007fab741403dc: hlt    
  0x00007fab741403dd: hlt    
  0x00007fab741403de: hlt    
  0x00007fab741403df: hlt    
[Stub Code]
  0x00007fab741403e0: nop                       ;   {no_reloc}
  0x00007fab741403e1: nop
  0x00007fab741403e2: nop
  0x00007fab741403e3: nop
  0x00007fab741403e4: nop
  0x00007fab741403e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741403ef: jmpq   0x00007fab741403ef  ;   {runtime_call}
  0x00007fab741403f4: nop
  0x00007fab741403f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741403ff: jmpq   0x00007fab741403ff  ;   {runtime_call}
  0x00007fab74140404: nop
  0x00007fab74140405: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414040f: jmpq   0x00007fab7414040f  ;   {runtime_call}
  0x00007fab74140414: nop
  0x00007fab74140415: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414041f: jmpq   0x00007fab7414041f  ;   {runtime_call}
  0x00007fab74140424: nop
  0x00007fab74140425: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414042f: jmpq   0x00007fab7414042f  ;   {runtime_call}
  0x00007fab74140434: nop
  0x00007fab74140435: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414043f: jmpq   0x00007fab7414043f  ;   {runtime_call}
  0x00007fab74140444: nop
  0x00007fab74140445: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414044f: jmpq   0x00007fab7414044f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74140454: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74140459: mov    %rsp,-0x28(%rsp)
  0x00007fab7414045e: sub    $0x80,%rsp
  0x00007fab74140465: mov    %rax,0x78(%rsp)
  0x00007fab7414046a: mov    %rcx,0x70(%rsp)
  0x00007fab7414046f: mov    %rdx,0x68(%rsp)
  0x00007fab74140474: mov    %rbx,0x60(%rsp)
  0x00007fab74140479: mov    %rbp,0x50(%rsp)
  0x00007fab7414047e: mov    %rsi,0x48(%rsp)
  0x00007fab74140483: mov    %rdi,0x40(%rsp)
  0x00007fab74140488: mov    %r8,0x38(%rsp)
  0x00007fab7414048d: mov    %r9,0x30(%rsp)
  0x00007fab74140492: mov    %r10,0x28(%rsp)
  0x00007fab74140497: mov    %r11,0x20(%rsp)
  0x00007fab7414049c: mov    %r12,0x18(%rsp)
  0x00007fab741404a1: mov    %r13,0x10(%rsp)
  0x00007fab741404a6: mov    %r14,0x8(%rsp)
  0x00007fab741404ab: mov    %r15,(%rsp)
  0x00007fab741404af: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741404b9: movabs $0x7fab74140459,%rsi  ;   {internal_word}
  0x00007fab741404c3: mov    %rsp,%rdx
  0x00007fab741404c6: and    $0xfffffffffffffff0,%rsp
  0x00007fab741404ca: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741404cf: hlt    
[Deopt Handler Code]
  0x00007fab741404d0: movabs $0x7fab741404d0,%r10  ;   {section_word}
  0x00007fab741404da: push   %r10
  0x00007fab741404dc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab741404e1: hlt    
  0x00007fab741404e2: hlt    
  0x00007fab741404e3: hlt    
  0x00007fab741404e4: hlt    
  0x00007fab741404e5: hlt    
  0x00007fab741404e6: hlt    
  0x00007fab741404e7: hlt    
<nmethod compile_id='97' compiler='C1' level='3' entry='0x00007fab7413fae0' size='4896' address='0x00007fab7413f8d0' relocation_offset='312' insts_offset='528' stub_offset='2832' scopes_data_offset='3120' scopes_pcs_offset='3768' dependencies_offset='4856' nul_chk_table_offset='4864' metadata_offset='3096' method='java/util/concurrent/ConcurrentHashMap addCount (JI)V' bytes='292' count='265' backedge_count='9' iicount='265' stamp='0.396'/>
<writer thread='140373948942080'/>
<task_queued compile_id='100' method='java/util/concurrent/ConcurrentHashMap casTabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' bytes='20' count='384' iicount='384' level='3' stamp='0.396' comment='tiered' hot_count='384'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.casTabAt  [0x00007fab74140d80, 0x00007fab74140f10]  400 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab61a73068} &apos;casTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rsi:rsi   = &apos;[Ljava/util/concurrent/ConcurrentHashMap$Node;&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;
  # parm3:    r8:r8     = &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fab74140d80: mov    %eax,-0x14000(%rsp)
  0x00007fab74140d87: push   %rbp
  0x00007fab74140d88: sub    $0x40,%rsp
  0x00007fab74140d8c: mov    %rcx,%rax
  0x00007fab74140d8f: movabs $0x7fab61b95740,%rcx  ;   {metadata(method data for {method} {0x00007fab61a73068} &apos;casTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74140d99: mov    0xfc(%rcx),%edi
  0x00007fab74140d9f: add    $0x8,%edi
  0x00007fab74140da2: mov    %edi,0xfc(%rcx)
  0x00007fab74140da8: movabs $0x7fab61a73068,%rcx  ;   {metadata({method} {0x00007fab61a73068} &apos;casTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74140db2: and    $0x1ff8,%edi
  0x00007fab74140db8: cmp    $0x0,%edi
  0x00007fab74140dbb: je     0x00007fab74140e1e  ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@0 (line 760)

  0x00007fab74140dc1: movslq %edx,%rdx
  0x00007fab74140dc4: mov    $0x2,%ecx
  0x00007fab74140dc9: shl    %cl,%rdx
  0x00007fab74140dcc: movabs $0x10,%r10
  0x00007fab74140dd6: add    %r10,%rdx
  0x00007fab74140dd9: lea    (%rsi,%rdx,1),%rsi
  0x00007fab74140ddd: shr    $0x3,%rax
  0x00007fab74140de1: mov    %r8,%r10
  0x00007fab74140de4: shr    $0x3,%r10
  0x00007fab74140de8: lock cmpxchg %r10d,(%rsi)
  0x00007fab74140ded: mov    $0x1,%eax
  0x00007fab74140df2: je     0x00007fab74140dfd
  0x00007fab74140df8: mov    $0x0,%eax
  0x00007fab74140dfd: shr    $0x9,%rsi
  0x00007fab74140e01: movabs $0x7fab701ff000,%rdi
  0x00007fab74140e0b: movb   $0x0,(%rsi,%rdi,1)  ;*invokevirtual compareAndSwapObject {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@16 (line 760)

  0x00007fab74140e0f: and    $0x1,%eax
  0x00007fab74140e12: add    $0x40,%rsp
  0x00007fab74140e16: pop    %rbp
  0x00007fab74140e17: test   %eax,0x1b6a12e3(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74140e1d: retq   
  0x00007fab74140e1e: mov    %rcx,0x8(%rsp)
  0x00007fab74140e23: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74140e2b: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rax=Oop r8=Oop off=176}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@-1 (line 760)
                                                ;   {runtime_call}
  0x00007fab74140e30: jmp    0x00007fab74140dc1
  0x00007fab74140e32: nop
  0x00007fab74140e33: nop
  0x00007fab74140e34: mov    0x2c0(%r15),%rax
  0x00007fab74140e3b: movabs $0x0,%r10
  0x00007fab74140e45: mov    %r10,0x2c0(%r15)
  0x00007fab74140e4c: movabs $0x0,%r10
  0x00007fab74140e56: mov    %r10,0x2c8(%r15)
  0x00007fab74140e5d: add    $0x40,%rsp
  0x00007fab74140e61: pop    %rbp
  0x00007fab74140e62: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74140e67: hlt    
  0x00007fab74140e68: hlt    
  0x00007fab74140e69: hlt    
  0x00007fab74140e6a: hlt    
  0x00007fab74140e6b: hlt    
  0x00007fab74140e6c: hlt    
  0x00007fab74140e6d: hlt    
  0x00007fab74140e6e: hlt    
  0x00007fab74140e6f: hlt    
  0x00007fab74140e70: hlt    
  0x00007fab74140e71: hlt    
  0x00007fab74140e72: hlt    
  0x00007fab74140e73: hlt    
  0x00007fab74140e74: hlt    
  0x00007fab74140e75: hlt    
  0x00007fab74140e76: hlt    
  0x00007fab74140e77: hlt    
  0x00007fab74140e78: hlt    
  0x00007fab74140e79: hlt    
  0x00007fab74140e7a: hlt    
  0x00007fab74140e7b: hlt    
  0x00007fab74140e7c: hlt    
  0x00007fab74140e7d: hlt    
  0x00007fab74140e7e: hlt    
  0x00007fab74140e7f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74140e80: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74140e85: mov    %rsp,-0x28(%rsp)
  0x00007fab74140e8a: sub    $0x80,%rsp
  0x00007fab74140e91: mov    %rax,0x78(%rsp)
  0x00007fab74140e96: mov    %rcx,0x70(%rsp)
  0x00007fab74140e9b: mov    %rdx,0x68(%rsp)
  0x00007fab74140ea0: mov    %rbx,0x60(%rsp)
  0x00007fab74140ea5: mov    %rbp,0x50(%rsp)
  0x00007fab74140eaa: mov    %rsi,0x48(%rsp)
  0x00007fab74140eaf: mov    %rdi,0x40(%rsp)
  0x00007fab74140eb4: mov    %r8,0x38(%rsp)
  0x00007fab74140eb9: mov    %r9,0x30(%rsp)
  0x00007fab74140ebe: mov    %r10,0x28(%rsp)
  0x00007fab74140ec3: mov    %r11,0x20(%rsp)
  0x00007fab74140ec8: mov    %r12,0x18(%rsp)
  0x00007fab74140ecd: mov    %r13,0x10(%rsp)
  0x00007fab74140ed2: mov    %r14,0x8(%rsp)
  0x00007fab74140ed7: mov    %r15,(%rsp)
  0x00007fab74140edb: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74140ee5: movabs $0x7fab74140e85,%rsi  ;   {internal_word}
  0x00007fab74140eef: mov    %rsp,%rdx
  0x00007fab74140ef2: and    $0xfffffffffffffff0,%rsp
  0x00007fab74140ef6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74140efb: hlt    
[Deopt Handler Code]
  0x00007fab74140efc: movabs $0x7fab74140efc,%r10  ;   {section_word}
  0x00007fab74140f06: push   %r10
  0x00007fab74140f08: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74140f0d: hlt    
  0x00007fab74140f0e: hlt    
  0x00007fab74140f0f: hlt    
<nmethod compile_id='100' compiler='C1' level='3' entry='0x00007fab74140d80' size='896' address='0x00007fab74140c10' relocation_offset='312' insts_offset='368' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='808' dependencies_offset='888' metadata_offset='768' method='java/util/concurrent/ConcurrentHashMap casTabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' bytes='20' count='411' iicount='411' stamp='0.397'/>
<writer thread='140373948942080'/>
<task_queued compile_id='101' method='java/util/concurrent/ConcurrentHashMap spread (I)I' bytes='10' count='384' iicount='384' level='3' stamp='0.397' comment='tiered' hot_count='384'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/String.lastIndexOf  [0x00007fab74141140, 0x00007fab741412c8]  392 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61897218} &apos;lastIndexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fab74141140: mov    0x8(%rsi),%r10d
  0x00007fab74141144: shl    $0x3,%r10
  0x00007fab74141148: cmp    %rax,%r10
  0x00007fab7414114b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74141151: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7414115c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74141160: mov    %eax,-0x14000(%rsp)
  0x00007fab74141167: push   %rbp
  0x00007fab74141168: sub    $0x30,%rsp
  0x00007fab7414116c: movabs $0x7fab61b95960,%rcx  ;   {metadata(method data for {method} {0x00007fab61897218} &apos;lastIndexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74141176: mov    0xfc(%rcx),%edi
  0x00007fab7414117c: add    $0x8,%edi
  0x00007fab7414117f: mov    %edi,0xfc(%rcx)
  0x00007fab74141185: movabs $0x7fab61897218,%rcx  ;   {metadata({method} {0x00007fab61897218} &apos;lastIndexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7414118f: and    $0x1ff8,%edi
  0x00007fab74141195: cmp    $0x0,%edi
  0x00007fab74141198: je     0x00007fab741411d0  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@0 (line 1611)

  0x00007fab7414119e: mov    0xc(%rsi),%ecx
  0x00007fab741411a1: shl    $0x3,%rcx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@3 (line 1611)

  0x00007fab741411a5: mov    0xc(%rcx),%ecx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@6 (line 1611)
                                                ; implicit exception: dispatches to 0x00007fab741411e4
  0x00007fab741411a8: mov    %rsi,%rdi
  0x00007fab741411ab: movabs $0x7fab61b95960,%rbx  ;   {metadata(method data for {method} {0x00007fab61897218} &apos;lastIndexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741411b5: addq   $0x1,0x130(%rbx)
  0x00007fab741411bd: dec    %ecx
  0x00007fab741411bf: callq  0x00007fab74047d60  ; OopMap{off=132}
                                                ;*invokevirtual lastIndexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@9 (line 1611)
                                                ;   {optimized virtual_call}
  0x00007fab741411c4: add    $0x30,%rsp
  0x00007fab741411c8: pop    %rbp
  0x00007fab741411c9: test   %eax,0x1b6a0f31(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741411cf: retq   
  0x00007fab741411d0: mov    %rcx,0x8(%rsp)
  0x00007fab741411d5: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741411dd: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=162}
                                                ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1611)
                                                ;   {runtime_call}
  0x00007fab741411e2: jmp    0x00007fab7414119e
  0x00007fab741411e4: callq  0x00007fab740fc000  ; OopMap{rsi=Oop off=169}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@6 (line 1611)
                                                ;   {runtime_call}
  0x00007fab741411e9: nop
  0x00007fab741411ea: nop
  0x00007fab741411eb: mov    0x2c0(%r15),%rax
  0x00007fab741411f2: movabs $0x0,%r10
  0x00007fab741411fc: mov    %r10,0x2c0(%r15)
  0x00007fab74141203: movabs $0x0,%r10
  0x00007fab7414120d: mov    %r10,0x2c8(%r15)
  0x00007fab74141214: add    $0x30,%rsp
  0x00007fab74141218: pop    %rbp
  0x00007fab74141219: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7414121e: hlt    
  0x00007fab7414121f: hlt    
[Stub Code]
  0x00007fab74141220: nop                       ;   {no_reloc}
  0x00007fab74141221: nop
  0x00007fab74141222: nop
  0x00007fab74141223: nop
  0x00007fab74141224: nop
  0x00007fab74141225: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414122f: jmpq   0x00007fab7414122f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74141234: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74141239: mov    %rsp,-0x28(%rsp)
  0x00007fab7414123e: sub    $0x80,%rsp
  0x00007fab74141245: mov    %rax,0x78(%rsp)
  0x00007fab7414124a: mov    %rcx,0x70(%rsp)
  0x00007fab7414124f: mov    %rdx,0x68(%rsp)
  0x00007fab74141254: mov    %rbx,0x60(%rsp)
  0x00007fab74141259: mov    %rbp,0x50(%rsp)
  0x00007fab7414125e: mov    %rsi,0x48(%rsp)
  0x00007fab74141263: mov    %rdi,0x40(%rsp)
  0x00007fab74141268: mov    %r8,0x38(%rsp)
  0x00007fab7414126d: mov    %r9,0x30(%rsp)
  0x00007fab74141272: mov    %r10,0x28(%rsp)
  0x00007fab74141277: mov    %r11,0x20(%rsp)
  0x00007fab7414127c: mov    %r12,0x18(%rsp)
  0x00007fab74141281: mov    %r13,0x10(%rsp)
  0x00007fab74141286: mov    %r14,0x8(%rsp)
  0x00007fab7414128b: mov    %r15,(%rsp)
  0x00007fab7414128f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74141299: movabs $0x7fab74141239,%rsi  ;   {internal_word}
  0x00007fab741412a3: mov    %rsp,%rdx
  0x00007fab741412a6: and    $0xfffffffffffffff0,%rsp
  0x00007fab741412aa: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741412af: hlt    
[Deopt Handler Code]
  0x00007fab741412b0: movabs $0x7fab741412b0,%r10  ;   {section_word}
  0x00007fab741412ba: push   %r10
  0x00007fab741412bc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab741412c1: hlt    
  0x00007fab741412c2: hlt    
  0x00007fab741412c3: hlt    
  0x00007fab741412c4: hlt    
  0x00007fab741412c5: hlt    
  0x00007fab741412c6: hlt    
  0x00007fab741412c7: hlt    
<nmethod compile_id='98' compiler='C1' level='3' entry='0x00007fab74141140' size='968' address='0x00007fab74140fd0' relocation_offset='312' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='816' dependencies_offset='944' nul_chk_table_offset='952' metadata_offset='760' method='java/lang/String lastIndexOf (I)I' bytes='13' count='388' iicount='388' stamp='0.398'/>
<writer thread='140373948942080'/>
<task_queued compile_id='102' method='java/lang/String indexOf (II)I' bytes='70' count='2208' backedge_count='30406' iicount='2208' level='4' stamp='0.398' comment='tiered' hot_count='2208'/>
[Loaded jdk.vm.ci.meta.Value$IllegalValue from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.spread  [0x00007fab74141540, 0x00007fab74141690]  336 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab61a72bb0} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fab74141540: mov    %eax,-0x14000(%rsp)
  0x00007fab74141547: push   %rbp
  0x00007fab74141548: sub    $0x30,%rsp
  0x00007fab7414154c: movabs $0x7fab61b95b70,%rax  ;   {metadata(method data for {method} {0x00007fab61a72bb0} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74141556: mov    0xfc(%rax),%edi
  0x00007fab7414155c: add    $0x8,%edi
  0x00007fab7414155f: mov    %edi,0xfc(%rax)
  0x00007fab74141565: movabs $0x7fab61a72bb0,%rax  ;   {metadata({method} {0x00007fab61a72bb0} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7414156f: and    $0x1ff8,%edi
  0x00007fab74141575: cmp    $0x0,%edi
  0x00007fab74141578: je     0x00007fab74141599  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@0 (line 685)

  0x00007fab7414157e: mov    %rsi,%rax
  0x00007fab74141581: shr    $0x10,%eax
  0x00007fab74141584: xor    %rsi,%rax
  0x00007fab74141587: and    $0x7fffffff,%eax
  0x00007fab7414158d: add    $0x30,%rsp
  0x00007fab74141591: pop    %rbp
  0x00007fab74141592: test   %eax,0x1b6a0b68(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74141598: retq   
  0x00007fab74141599: mov    %rax,0x8(%rsp)
  0x00007fab7414159e: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741415a6: callq  0x00007fab741005e0  ; OopMap{off=107}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 685)
                                                ;   {runtime_call}
  0x00007fab741415ab: jmp    0x00007fab7414157e
  0x00007fab741415ad: nop
  0x00007fab741415ae: nop
  0x00007fab741415af: mov    0x2c0(%r15),%rax
  0x00007fab741415b6: movabs $0x0,%r10
  0x00007fab741415c0: mov    %r10,0x2c0(%r15)
  0x00007fab741415c7: movabs $0x0,%r10
  0x00007fab741415d1: mov    %r10,0x2c8(%r15)
  0x00007fab741415d8: add    $0x30,%rsp
  0x00007fab741415dc: pop    %rbp
  0x00007fab741415dd: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab741415e2: hlt    
  0x00007fab741415e3: hlt    
  0x00007fab741415e4: hlt    
  0x00007fab741415e5: hlt    
  0x00007fab741415e6: hlt    
  0x00007fab741415e7: hlt    
  0x00007fab741415e8: hlt    
  0x00007fab741415e9: hlt    
  0x00007fab741415ea: hlt    
  0x00007fab741415eb: hlt    
  0x00007fab741415ec: hlt    
  0x00007fab741415ed: hlt    
  0x00007fab741415ee: hlt    
  0x00007fab741415ef: hlt    
  0x00007fab741415f0: hlt    
  0x00007fab741415f1: hlt    
  0x00007fab741415f2: hlt    
  0x00007fab741415f3: hlt    
  0x00007fab741415f4: hlt    
  0x00007fab741415f5: hlt    
  0x00007fab741415f6: hlt    
  0x00007fab741415f7: hlt    
  0x00007fab741415f8: hlt    
  0x00007fab741415f9: hlt    
  0x00007fab741415fa: hlt    
  0x00007fab741415fb: hlt    
  0x00007fab741415fc: hlt    
  0x00007fab741415fd: hlt    
  0x00007fab741415fe: hlt    
  0x00007fab741415ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74141600: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74141605: mov    %rsp,-0x28(%rsp)
  0x00007fab7414160a: sub    $0x80,%rsp
  0x00007fab74141611: mov    %rax,0x78(%rsp)
  0x00007fab74141616: mov    %rcx,0x70(%rsp)
  0x00007fab7414161b: mov    %rdx,0x68(%rsp)
  0x00007fab74141620: mov    %rbx,0x60(%rsp)
  0x00007fab74141625: mov    %rbp,0x50(%rsp)
  0x00007fab7414162a: mov    %rsi,0x48(%rsp)
  0x00007fab7414162f: mov    %rdi,0x40(%rsp)
  0x00007fab74141634: mov    %r8,0x38(%rsp)
  0x00007fab74141639: mov    %r9,0x30(%rsp)
  0x00007fab7414163e: mov    %r10,0x28(%rsp)
  0x00007fab74141643: mov    %r11,0x20(%rsp)
  0x00007fab74141648: mov    %r12,0x18(%rsp)
  0x00007fab7414164d: mov    %r13,0x10(%rsp)
  0x00007fab74141652: mov    %r14,0x8(%rsp)
  0x00007fab74141657: mov    %r15,(%rsp)
  0x00007fab7414165b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74141665: movabs $0x7fab74141605,%rsi  ;   {internal_word}
  0x00007fab7414166f: mov    %rsp,%rdx
  0x00007fab74141672: and    $0xfffffffffffffff0,%rsp
  0x00007fab74141676: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7414167b: hlt    
[Deopt Handler Code]
  0x00007fab7414167c: movabs $0x7fab7414167c,%r10  ;   {section_word}
  0x00007fab74141686: push   %r10
  0x00007fab74141688: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7414168d: hlt    
  0x00007fab7414168e: hlt    
  0x00007fab7414168f: hlt    
<nmethod compile_id='101' compiler='C1' level='3' entry='0x00007fab74141540' size='808' address='0x00007fab741413d0' relocation_offset='312' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='736' dependencies_offset='800' metadata_offset='704' method='java/util/concurrent/ConcurrentHashMap spread (I)I' bytes='10' count='385' iicount='385' stamp='0.399'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.meta.ValueKind$IllegalValueKind from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<task_queued compile_id='103' method='java/lang/Character toUpperCase (C)C' bytes='6' count='384' iicount='384' level='3' stamp='0.399' comment='tiered' hot_count='384'/>
<task_queued compile_id='104' method='java/lang/Character toUpperCase (I)I' bytes='9' count='384' iicount='384' level='3' stamp='0.399' comment='tiered' hot_count='384'/>
<task_queued compile_id='105' method='java/lang/CharacterDataLatin1 toUpperCase (I)I' bytes='53' count='384' iicount='384' level='3' stamp='0.399' comment='tiered' hot_count='384'/>
[Loaded jdk.vm.ci.meta.PlatformKind from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.meta.ValueKind$IllegalKind from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
----------------------------------------------------------------------
sun/misc/Unsafe.putLong  [0x00007fab741418a0, 0x00007fab74141a68]  456 bytes
[Entry Point]
  # {method} {0x00007fab619212f0} &apos;putLong&apos; &apos;(JJ)V&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rsi:rsi   = &apos;sun/misc/Unsafe&apos;
  # parm0:    rdx:rdx   = long
  # parm1:    rcx:rcx   = long
  #           [sp+0x50]  (sp of caller)
  0x00007fab741418a0: mov    0x8(%rsi),%r10d
  0x00007fab741418a4: shl    $0x3,%r10
  0x00007fab741418a8: cmp    %r10,%rax
  0x00007fab741418ab: je     0x00007fab741418b8
  0x00007fab741418b1: jmpq   0x00007fab74047b60  ;   {runtime_call}
  0x00007fab741418b6: xchg   %ax,%ax
[Verified Entry Point]
  0x00007fab741418b8: mov    %eax,-0x14000(%rsp)
  0x00007fab741418bf: push   %rbp
  0x00007fab741418c0: mov    %rsp,%rbp
  0x00007fab741418c3: sub    $0x40,%rsp
  0x00007fab741418c7: mov    %rsi,(%rsp)
  0x00007fab741418cb: cmp    $0x0,%rsi
  0x00007fab741418cf: lea    (%rsp),%rsi
  0x00007fab741418d3: cmove  (%rsp),%rsi        ; OopMap{[0]=Oop off=56}
  0x00007fab741418d8: movabs $0x7fab741418d8,%r10  ;   {section_word}
  0x00007fab741418e2: mov    %r10,0x1c8(%r15)
  0x00007fab741418e9: mov    %rsp,0x1c0(%r15)
  0x00007fab741418f0: cmpb   $0x0,0x1a8330dd(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab741418f7: je     0x00007fab74141933
  0x00007fab741418fd: push   %rsi
  0x00007fab741418fe: push   %rdx
  0x00007fab741418ff: push   %rcx
  0x00007fab74141900: movabs $0x7fab619212f0,%rsi  ;   {metadata({method} {0x00007fab619212f0} &apos;putLong&apos; &apos;(JJ)V&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00007fab7414190a: mov    %r15,%rdi
  0x00007fab7414190d: test   $0xf,%esp
  0x00007fab74141913: je     0x00007fab7414192b
  0x00007fab74141919: sub    $0x8,%rsp
  0x00007fab7414191d: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab74141922: add    $0x8,%rsp
  0x00007fab74141926: jmpq   0x00007fab74141930
  0x00007fab7414192b: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab74141930: pop    %rcx
  0x00007fab74141931: pop    %rdx
  0x00007fab74141932: pop    %rsi
  0x00007fab74141933: lea    0x1e0(%r15),%rdi
  0x00007fab7414193a: movl   $0x4,0x258(%r15)
  0x00007fab74141945: callq  0x00007fab8e438f80  ;   {runtime_call}
  0x00007fab7414194a: vzeroupper 
  0x00007fab7414194d: movl   $0x5,0x258(%r15)
  0x00007fab74141958: mov    %r15d,%ecx
  0x00007fab7414195b: shr    $0x4,%ecx
  0x00007fab7414195e: and    $0xffc,%ecx
  0x00007fab74141964: movabs $0x7fab8f7e1000,%r10  ;   {external_word}
  0x00007fab7414196e: mov    %ecx,(%r10,%rcx,1)
  0x00007fab74141972: cmpl   $0x0,0x1a83e040(%rip)        # 0x00007fab8e97f9bc
                                                ;   {external_word}
  0x00007fab7414197c: jne    0x00007fab74141990
  0x00007fab74141982: cmpl   $0x0,0x30(%r15)
  0x00007fab7414198a: je     0x00007fab741419a9
  0x00007fab74141990: mov    %r15,%rdi
  0x00007fab74141993: mov    %rsp,%r12
  0x00007fab74141996: sub    $0x0,%rsp
  0x00007fab7414199a: and    $0xfffffffffffffff0,%rsp
  0x00007fab7414199e: callq  0x00007fab8e40fc20  ;   {runtime_call}
  0x00007fab741419a3: mov    %r12,%rsp
  0x00007fab741419a6: xor    %r12,%r12
  0x00007fab741419a9: movl   $0x8,0x258(%r15)
  0x00007fab741419b4: cmpl   $0x1,0x2b0(%r15)
  0x00007fab741419bf: je     0x00007fab74141a47
  0x00007fab741419c5: cmpb   $0x0,0x1a833008(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab741419cc: je     0x00007fab74141a02
  0x00007fab741419d2: movabs $0x7fab619212f0,%rsi  ;   {metadata({method} {0x00007fab619212f0} &apos;putLong&apos; &apos;(JJ)V&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00007fab741419dc: mov    %r15,%rdi
  0x00007fab741419df: test   $0xf,%esp
  0x00007fab741419e5: je     0x00007fab741419fd
  0x00007fab741419eb: sub    $0x8,%rsp
  0x00007fab741419ef: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab741419f4: add    $0x8,%rsp
  0x00007fab741419f8: jmpq   0x00007fab74141a02
  0x00007fab741419fd: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab74141a02: movabs $0x0,%r10
  0x00007fab74141a0c: mov    %r10,0x1c0(%r15)
  0x00007fab74141a13: movabs $0x0,%r10
  0x00007fab74141a1d: mov    %r10,0x1c8(%r15)
  0x00007fab74141a24: mov    0x38(%r15),%rcx
  0x00007fab74141a28: movl   $0x0,0x100(%rcx)
  0x00007fab74141a32: leaveq 
  0x00007fab74141a33: cmpq   $0x0,0x8(%r15)
  0x00007fab74141a3b: jne    0x00007fab74141a42
  0x00007fab74141a41: retq   
  0x00007fab74141a42: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00007fab74141a47: mov    %rsp,%r12
  0x00007fab74141a4a: sub    $0x0,%rsp
  0x00007fab74141a4e: and    $0xfffffffffffffff0,%rsp
  0x00007fab74141a52: callq  0x00007fab8e372120  ;   {runtime_call}
  0x00007fab74141a57: mov    %r12,%rsp
  0x00007fab74141a5a: xor    %r12,%r12
  0x00007fab74141a5d: jmpq   0x00007fab741419c5
  0x00007fab74141a62: hlt    
  0x00007fab74141a63: hlt    
  0x00007fab74141a64: hlt    
  0x00007fab74141a65: hlt    
  0x00007fab74141a66: hlt    
  0x00007fab74141a67: hlt    
<nmethod compile_id='106' compile_kind='c2n' level='0' entry='0x00007fab741418a0' size='856' address='0x00007fab74141710' relocation_offset='312' consts_offset='856' insts_offset='400' method='sun/misc/Unsafe putLong (JJ)V' bytes='0' count='384' iicount='384' stamp='0.400'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/Character.toUpperCase  [0x00007fab74141c20, 0x00007fab74142018]  1016 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab61941b58} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;
  # parm0:    rsi       = char
  #           [sp+0x50]  (sp of caller)
  0x00007fab74141c20: mov    %eax,-0x14000(%rsp)
  0x00007fab74141c27: push   %rbp
  0x00007fab74141c28: sub    $0x40,%rsp
  0x00007fab74141c2c: movabs $0x7fab61b95cc0,%rdi  ;   {metadata(method data for {method} {0x00007fab61941b58} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab74141c36: mov    0xfc(%rdi),%ebx
  0x00007fab74141c3c: add    $0x8,%ebx
  0x00007fab74141c3f: mov    %ebx,0xfc(%rdi)
  0x00007fab74141c45: movabs $0x7fab61941b58,%rdi  ;   {metadata({method} {0x00007fab61941b58} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab74141c4f: and    $0x1ff8,%ebx
  0x00007fab74141c55: cmp    $0x0,%ebx
  0x00007fab74141c58: je     0x00007fab74141ee4  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@0 (line 6369)

  0x00007fab74141c5e: movabs $0x7fab61b95cc0,%rdi  ;   {metadata(method data for {method} {0x00007fab61941b58} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab74141c68: addq   $0x1,0x130(%rdi)
  0x00007fab74141c70: movabs $0x7fab61b95e40,%rdi  ;   {metadata(method data for {method} {0x00007fab61941c00} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab74141c7a: mov    0xfc(%rdi),%ebx
  0x00007fab74141c80: add    $0x8,%ebx
  0x00007fab74141c83: mov    %ebx,0xfc(%rdi)
  0x00007fab74141c89: movabs $0x7fab61941c00,%rdi  ;   {metadata({method} {0x00007fab61941c00} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab74141c93: and    $0x7ffff8,%ebx
  0x00007fab74141c99: cmp    $0x0,%ebx
  0x00007fab74141c9c: je     0x00007fab74141efb
  0x00007fab74141ca2: movabs $0x7fab61b95e40,%rdi  ;   {metadata(method data for {method} {0x00007fab61941c00} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab74141cac: addq   $0x1,0x130(%rdi)
  0x00007fab74141cb4: mov    %rsi,%rdi
  0x00007fab74141cb7: mov    %rdi,%rsi          ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)

  0x00007fab74141cba: mov    %edi,0x28(%rsp)
  0x00007fab74141cbe: nop
  0x00007fab74141cbf: callq  0x00007fab74048160  ; OopMap{off=164}
                                                ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {static_call}
  0x00007fab74141cc4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00007fab74141f12
  0x00007fab74141cc7: mov    %rax,%rdx
  0x00007fab74141cca: movabs $0x7fab61b95e40,%rsi  ;   {metadata(method data for {method} {0x00007fab61941c00} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab74141cd4: mov    0x8(%rdx),%edx
  0x00007fab74141cd7: shl    $0x3,%rdx
  0x00007fab74141cdb: cmp    0x150(%rsi),%rdx
  0x00007fab74141ce2: jne    0x00007fab74141cf1
  0x00007fab74141ce4: addq   $0x1,0x158(%rsi)
  0x00007fab74141cec: jmpq   0x00007fab74141eb3
  0x00007fab74141cf1: cmp    0x160(%rsi),%rdx
  0x00007fab74141cf8: jne    0x00007fab74141d07
  0x00007fab74141cfa: addq   $0x1,0x168(%rsi)
  0x00007fab74141d02: jmpq   0x00007fab74141eb3
  0x00007fab74141d07: cmp    0x170(%rsi),%rdx
  0x00007fab74141d0e: jne    0x00007fab74141d1d
  0x00007fab74141d10: addq   $0x1,0x178(%rsi)
  0x00007fab74141d18: jmpq   0x00007fab74141eb3
  0x00007fab74141d1d: cmp    0x180(%rsi),%rdx
  0x00007fab74141d24: jne    0x00007fab74141d33
  0x00007fab74141d26: addq   $0x1,0x188(%rsi)
  0x00007fab74141d2e: jmpq   0x00007fab74141eb3
  0x00007fab74141d33: cmp    0x190(%rsi),%rdx
  0x00007fab74141d3a: jne    0x00007fab74141d49
  0x00007fab74141d3c: addq   $0x1,0x198(%rsi)
  0x00007fab74141d44: jmpq   0x00007fab74141eb3
  0x00007fab74141d49: cmp    0x1a0(%rsi),%rdx
  0x00007fab74141d50: jne    0x00007fab74141d5f
  0x00007fab74141d52: addq   $0x1,0x1a8(%rsi)
  0x00007fab74141d5a: jmpq   0x00007fab74141eb3
  0x00007fab74141d5f: cmp    0x1b0(%rsi),%rdx
  0x00007fab74141d66: jne    0x00007fab74141d75
  0x00007fab74141d68: addq   $0x1,0x1b8(%rsi)
  0x00007fab74141d70: jmpq   0x00007fab74141eb3
  0x00007fab74141d75: cmp    0x1c0(%rsi),%rdx
  0x00007fab74141d7c: jne    0x00007fab74141d8b
  0x00007fab74141d7e: addq   $0x1,0x1c8(%rsi)
  0x00007fab74141d86: jmpq   0x00007fab74141eb3
  0x00007fab74141d8b: cmpq   $0x0,0x150(%rsi)
  0x00007fab74141d96: jne    0x00007fab74141daf
  0x00007fab74141d98: mov    %rdx,0x150(%rsi)
  0x00007fab74141d9f: movq   $0x1,0x158(%rsi)
  0x00007fab74141daa: jmpq   0x00007fab74141eb3
  0x00007fab74141daf: cmpq   $0x0,0x160(%rsi)
  0x00007fab74141dba: jne    0x00007fab74141dd3
  0x00007fab74141dbc: mov    %rdx,0x160(%rsi)
  0x00007fab74141dc3: movq   $0x1,0x168(%rsi)
  0x00007fab74141dce: jmpq   0x00007fab74141eb3
  0x00007fab74141dd3: cmpq   $0x0,0x170(%rsi)
  0x00007fab74141dde: jne    0x00007fab74141df7
  0x00007fab74141de0: mov    %rdx,0x170(%rsi)
  0x00007fab74141de7: movq   $0x1,0x178(%rsi)
  0x00007fab74141df2: jmpq   0x00007fab74141eb3
  0x00007fab74141df7: cmpq   $0x0,0x180(%rsi)
  0x00007fab74141e02: jne    0x00007fab74141e1b
  0x00007fab74141e04: mov    %rdx,0x180(%rsi)
  0x00007fab74141e0b: movq   $0x1,0x188(%rsi)
  0x00007fab74141e16: jmpq   0x00007fab74141eb3
  0x00007fab74141e1b: cmpq   $0x0,0x190(%rsi)
  0x00007fab74141e26: jne    0x00007fab74141e3f
  0x00007fab74141e28: mov    %rdx,0x190(%rsi)
  0x00007fab74141e2f: movq   $0x1,0x198(%rsi)
  0x00007fab74141e3a: jmpq   0x00007fab74141eb3
  0x00007fab74141e3f: cmpq   $0x0,0x1a0(%rsi)
  0x00007fab74141e4a: jne    0x00007fab74141e63
  0x00007fab74141e4c: mov    %rdx,0x1a0(%rsi)
  0x00007fab74141e53: movq   $0x1,0x1a8(%rsi)
  0x00007fab74141e5e: jmpq   0x00007fab74141eb3
  0x00007fab74141e63: cmpq   $0x0,0x1b0(%rsi)
  0x00007fab74141e6e: jne    0x00007fab74141e87
  0x00007fab74141e70: mov    %rdx,0x1b0(%rsi)
  0x00007fab74141e77: movq   $0x1,0x1b8(%rsi)
  0x00007fab74141e82: jmpq   0x00007fab74141eb3
  0x00007fab74141e87: cmpq   $0x0,0x1c0(%rsi)
  0x00007fab74141e92: jne    0x00007fab74141eab
  0x00007fab74141e94: mov    %rdx,0x1c0(%rsi)
  0x00007fab74141e9b: movq   $0x1,0x1c8(%rsi)
  0x00007fab74141ea6: jmpq   0x00007fab74141eb3
  0x00007fab74141eab: addq   $0x1,0x140(%rsi)
  0x00007fab74141eb3: mov    0x28(%rsp),%edx
  0x00007fab74141eb7: mov    %rax,%rsi          ;*invokevirtual toUpperCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)

  0x00007fab74141eba: nop
  0x00007fab74141ebb: nop
  0x00007fab74141ebc: nop
  0x00007fab74141ebd: movabs $0xffffffffffffffff,%rax
  0x00007fab74141ec7: callq  0x00007fab74047f60  ; OopMap{off=684}
                                                ;*invokevirtual toUpperCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {virtual_call}
  0x00007fab74141ecc: and    $0xffff,%eax
  0x00007fab74141ed2: and    $0xffff,%eax
  0x00007fab74141ed8: add    $0x40,%rsp
  0x00007fab74141edc: pop    %rbp
  0x00007fab74141edd: test   %eax,0x1b6a021d(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74141ee3: retq   
  0x00007fab74141ee4: mov    %rdi,0x8(%rsp)
  0x00007fab74141ee9: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74141ef1: callq  0x00007fab741005e0  ; OopMap{off=726}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1 (line 6369)
                                                ;   {runtime_call}
  0x00007fab74141ef6: jmpq   0x00007fab74141c5e
  0x00007fab74141efb: mov    %rdi,0x8(%rsp)
  0x00007fab74141f00: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74141f08: callq  0x00007fab741005e0  ; OopMap{off=749}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {runtime_call}
  0x00007fab74141f0d: jmpq   0x00007fab74141ca2
  0x00007fab74141f12: callq  0x00007fab740fc000  ; OopMap{rax=Oop off=759}
                                                ;*invokevirtual toUpperCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {runtime_call}
  0x00007fab74141f17: nop
  0x00007fab74141f18: nop
  0x00007fab74141f19: mov    0x2c0(%r15),%rax
  0x00007fab74141f20: movabs $0x0,%r10
  0x00007fab74141f2a: mov    %r10,0x2c0(%r15)
  0x00007fab74141f31: movabs $0x0,%r10
  0x00007fab74141f3b: mov    %r10,0x2c8(%r15)
  0x00007fab74141f42: add    $0x40,%rsp
  0x00007fab74141f46: pop    %rbp
  0x00007fab74141f47: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74141f4c: hlt    
  0x00007fab74141f4d: hlt    
  0x00007fab74141f4e: hlt    
  0x00007fab74141f4f: hlt    
  0x00007fab74141f50: hlt    
  0x00007fab74141f51: hlt    
  0x00007fab74141f52: hlt    
  0x00007fab74141f53: hlt    
  0x00007fab74141f54: hlt    
  0x00007fab74141f55: hlt    
  0x00007fab74141f56: hlt    
  0x00007fab74141f57: hlt    
  0x00007fab74141f58: hlt    
  0x00007fab74141f59: hlt    
  0x00007fab74141f5a: hlt    
  0x00007fab74141f5b: hlt    
  0x00007fab74141f5c: hlt    
  0x00007fab74141f5d: hlt    
  0x00007fab74141f5e: hlt    
  0x00007fab74141f5f: hlt    
[Stub Code]
  0x00007fab74141f60: nop                       ;   {no_reloc}
  0x00007fab74141f61: nop
  0x00007fab74141f62: nop
  0x00007fab74141f63: nop
  0x00007fab74141f64: nop
  0x00007fab74141f65: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74141f6f: jmpq   0x00007fab74141f6f  ;   {runtime_call}
  0x00007fab74141f74: nop
  0x00007fab74141f75: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74141f7f: jmpq   0x00007fab74141f7f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74141f84: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74141f89: mov    %rsp,-0x28(%rsp)
  0x00007fab74141f8e: sub    $0x80,%rsp
  0x00007fab74141f95: mov    %rax,0x78(%rsp)
  0x00007fab74141f9a: mov    %rcx,0x70(%rsp)
  0x00007fab74141f9f: mov    %rdx,0x68(%rsp)
  0x00007fab74141fa4: mov    %rbx,0x60(%rsp)
  0x00007fab74141fa9: mov    %rbp,0x50(%rsp)
  0x00007fab74141fae: mov    %rsi,0x48(%rsp)
  0x00007fab74141fb3: mov    %rdi,0x40(%rsp)
  0x00007fab74141fb8: mov    %r8,0x38(%rsp)
  0x00007fab74141fbd: mov    %r9,0x30(%rsp)
  0x00007fab74141fc2: mov    %r10,0x28(%rsp)
  0x00007fab74141fc7: mov    %r11,0x20(%rsp)
  0x00007fab74141fcc: mov    %r12,0x18(%rsp)
  0x00007fab74141fd1: mov    %r13,0x10(%rsp)
  0x00007fab74141fd6: mov    %r14,0x8(%rsp)
  0x00007fab74141fdb: mov    %r15,(%rsp)
  0x00007fab74141fdf: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74141fe9: movabs $0x7fab74141f89,%rsi  ;   {internal_word}
  0x00007fab74141ff3: mov    %rsp,%rdx
  0x00007fab74141ff6: and    $0xfffffffffffffff0,%rsp
  0x00007fab74141ffa: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74141fff: hlt    
[Deopt Handler Code]
  0x00007fab74142000: movabs $0x7fab74142000,%r10  ;   {section_word}
  0x00007fab7414200a: push   %r10
  0x00007fab7414200c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74142011: hlt    
  0x00007fab74142012: hlt    
  0x00007fab74142013: hlt    
  0x00007fab74142014: hlt    
  0x00007fab74142015: hlt    
  0x00007fab74142016: hlt    
  0x00007fab74142017: hlt    
<nmethod compile_id='103' compiler='C1' level='3' entry='0x00007fab74141c20' size='1688' address='0x00007fab74141a90' relocation_offset='312' insts_offset='400' stub_offset='1232' scopes_data_offset='1432' scopes_pcs_offset='1504' dependencies_offset='1664' nul_chk_table_offset='1672' metadata_offset='1416' method='java/lang/Character toUpperCase (C)C' bytes='6' count='386' iicount='386' stamp='0.402'/>
<writer thread='140373948942080'/>
<task_queued compile_id='107' method='sun/misc/PerfCounter add (J)V' bytes='18' count='384' iicount='384' level='3' stamp='0.402' comment='tiered' hot_count='384'/>
<task_queued compile_id='108' method='sun/misc/PerfCounter get ()J' bytes='9' count='384' iicount='384' level='3' stamp='0.402' comment='tiered' hot_count='384'/>
<task_queued compile_id='109' method='java/nio/DirectLongBufferU get (I)J' bytes='16' count='384' iicount='384' level='3' stamp='0.402' comment='tiered' hot_count='384'/>
----------------------------------------------------------------------
sun/misc/Unsafe.getLong  [0x00007fab741422e0, 0x00007fab741424b8]  472 bytes
[Entry Point]
  # {method} {0x00007fab61921258} &apos;getLong&apos; &apos;(J)J&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rsi:rsi   = &apos;sun/misc/Unsafe&apos;
  # parm0:    rdx:rdx   = long
  #           [sp+0x50]  (sp of caller)
  0x00007fab741422e0: mov    0x8(%rsi),%r10d
  0x00007fab741422e4: shl    $0x3,%r10
  0x00007fab741422e8: cmp    %r10,%rax
  0x00007fab741422eb: je     0x00007fab741422f8
  0x00007fab741422f1: jmpq   0x00007fab74047b60  ;   {runtime_call}
  0x00007fab741422f6: xchg   %ax,%ax
[Verified Entry Point]
  0x00007fab741422f8: mov    %eax,-0x14000(%rsp)
  0x00007fab741422ff: push   %rbp
  0x00007fab74142300: mov    %rsp,%rbp
  0x00007fab74142303: sub    $0x40,%rsp
  0x00007fab74142307: mov    %rsi,(%rsp)
  0x00007fab7414230b: cmp    $0x0,%rsi
  0x00007fab7414230f: lea    (%rsp),%rsi
  0x00007fab74142313: cmove  (%rsp),%rsi        ; OopMap{[0]=Oop off=56}
  0x00007fab74142318: movabs $0x7fab74142318,%r10  ;   {section_word}
  0x00007fab74142322: mov    %r10,0x1c8(%r15)
  0x00007fab74142329: mov    %rsp,0x1c0(%r15)
  0x00007fab74142330: cmpb   $0x0,0x1a83269d(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab74142337: je     0x00007fab74142371
  0x00007fab7414233d: push   %rsi
  0x00007fab7414233e: push   %rdx
  0x00007fab7414233f: movabs $0x7fab61921258,%rsi  ;   {metadata({method} {0x00007fab61921258} &apos;getLong&apos; &apos;(J)J&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00007fab74142349: mov    %r15,%rdi
  0x00007fab7414234c: test   $0xf,%esp
  0x00007fab74142352: je     0x00007fab7414236a
  0x00007fab74142358: sub    $0x8,%rsp
  0x00007fab7414235c: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab74142361: add    $0x8,%rsp
  0x00007fab74142365: jmpq   0x00007fab7414236f
  0x00007fab7414236a: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab7414236f: pop    %rdx
  0x00007fab74142370: pop    %rsi
  0x00007fab74142371: lea    0x1e0(%r15),%rdi
  0x00007fab74142378: movl   $0x4,0x258(%r15)
  0x00007fab74142383: callq  0x00007fab8e4390f0  ;   {runtime_call}
  0x00007fab74142388: vzeroupper 
  0x00007fab7414238b: movl   $0x5,0x258(%r15)
  0x00007fab74142396: mov    %r15d,%ecx
  0x00007fab74142399: shr    $0x4,%ecx
  0x00007fab7414239c: and    $0xffc,%ecx
  0x00007fab741423a2: movabs $0x7fab8f7e1000,%r10  ;   {external_word}
  0x00007fab741423ac: mov    %ecx,(%r10,%rcx,1)
  0x00007fab741423b0: cmpl   $0x0,0x1a83d602(%rip)        # 0x00007fab8e97f9bc
                                                ;   {external_word}
  0x00007fab741423ba: jne    0x00007fab741423ce
  0x00007fab741423c0: cmpl   $0x0,0x30(%r15)
  0x00007fab741423c8: je     0x00007fab741423ef
  0x00007fab741423ce: mov    %rax,-0x8(%rbp)
  0x00007fab741423d2: mov    %r15,%rdi
  0x00007fab741423d5: mov    %rsp,%r12
  0x00007fab741423d8: sub    $0x0,%rsp
  0x00007fab741423dc: and    $0xfffffffffffffff0,%rsp
  0x00007fab741423e0: callq  0x00007fab8e40fc20  ;   {runtime_call}
  0x00007fab741423e5: mov    %r12,%rsp
  0x00007fab741423e8: xor    %r12,%r12
  0x00007fab741423eb: mov    -0x8(%rbp),%rax
  0x00007fab741423ef: movl   $0x8,0x258(%r15)
  0x00007fab741423fa: cmpl   $0x1,0x2b0(%r15)
  0x00007fab74142405: je     0x00007fab74142495
  0x00007fab7414240b: cmpb   $0x0,0x1a8325c2(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab74142412: je     0x00007fab74142450
  0x00007fab74142418: mov    %rax,-0x8(%rbp)
  0x00007fab7414241c: movabs $0x7fab61921258,%rsi  ;   {metadata({method} {0x00007fab61921258} &apos;getLong&apos; &apos;(J)J&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00007fab74142426: mov    %r15,%rdi
  0x00007fab74142429: test   $0xf,%esp
  0x00007fab7414242f: je     0x00007fab74142447
  0x00007fab74142435: sub    $0x8,%rsp
  0x00007fab74142439: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab7414243e: add    $0x8,%rsp
  0x00007fab74142442: jmpq   0x00007fab7414244c
  0x00007fab74142447: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab7414244c: mov    -0x8(%rbp),%rax
  0x00007fab74142450: movabs $0x0,%r10
  0x00007fab7414245a: mov    %r10,0x1c0(%r15)
  0x00007fab74142461: movabs $0x0,%r10
  0x00007fab7414246b: mov    %r10,0x1c8(%r15)
  0x00007fab74142472: mov    0x38(%r15),%rcx
  0x00007fab74142476: movl   $0x0,0x100(%rcx)
  0x00007fab74142480: leaveq 
  0x00007fab74142481: cmpq   $0x0,0x8(%r15)
  0x00007fab74142489: jne    0x00007fab74142490
  0x00007fab7414248f: retq   
  0x00007fab74142490: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00007fab74142495: mov    %rax,-0x8(%rbp)
  0x00007fab74142499: mov    %rsp,%r12
  0x00007fab7414249c: sub    $0x0,%rsp
  0x00007fab741424a0: and    $0xfffffffffffffff0,%rsp
  0x00007fab741424a4: callq  0x00007fab8e372120  ;   {runtime_call}
  0x00007fab741424a9: mov    %r12,%rsp
  0x00007fab741424ac: xor    %r12,%r12
  0x00007fab741424af: mov    -0x8(%rbp),%rax
  0x00007fab741424b3: jmpq   0x00007fab7414240b
<nmethod compile_id='110' compile_kind='c2n' level='0' entry='0x00007fab741422e0' size='872' address='0x00007fab74142150' relocation_offset='312' consts_offset='872' insts_offset='400' method='sun/misc/Unsafe getLong (J)J' bytes='0' count='384' iicount='384' stamp='0.402'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
sun/misc/PerfCounter.add  [0x00007fab74142680, 0x00007fab74142f98]  2328 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61acd120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;
  # this:     rsi:rsi   = &apos;sun/misc/PerfCounter&apos;
  # parm0:    rdx:rdx   = long
  #           [sp+0x90]  (sp of caller)
  0x00007fab74142680: mov    0x8(%rsi),%r10d
  0x00007fab74142684: shl    $0x3,%r10
  0x00007fab74142688: cmp    %rax,%r10
  0x00007fab7414268b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74142691: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7414269c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab741426a0: mov    %eax,-0x14000(%rsp)
  0x00007fab741426a7: push   %rbp
  0x00007fab741426a8: sub    $0x80,%rsp
  0x00007fab741426af: lea    0x50(%rsp),%rdi
  0x00007fab741426b4: mov    %rsi,0x8(%rdi)
  0x00007fab741426b8: mov    (%rsi),%rax
  0x00007fab741426bb: mov    %rax,%rbx
  0x00007fab741426be: and    $0x7,%rbx
  0x00007fab741426c2: cmp    $0x5,%rbx
  0x00007fab741426c6: jne    0x00007fab7414274d
  0x00007fab741426cc: mov    0x8(%rsi),%ebx
  0x00007fab741426cf: shl    $0x3,%rbx
  0x00007fab741426d3: mov    0xa8(%rbx),%rbx
  0x00007fab741426da: or     %r15,%rbx
  0x00007fab741426dd: xor    %rax,%rbx
  0x00007fab741426e0: and    $0xffffffffffffff87,%rbx
  0x00007fab741426e4: je     0x00007fab74142775
  0x00007fab741426ea: test   $0x7,%rbx
  0x00007fab741426f1: jne    0x00007fab7414273a
  0x00007fab741426f3: test   $0x300,%rbx
  0x00007fab741426fa: jne    0x00007fab74142719
  0x00007fab741426fc: and    $0x37f,%rax
  0x00007fab74142703: mov    %rax,%rbx
  0x00007fab74142706: or     %r15,%rbx
  0x00007fab74142709: lock cmpxchg %rbx,(%rsi)
  0x00007fab7414270e: jne    0x00007fab74142dc3
  0x00007fab74142714: jmpq   0x00007fab74142775
  0x00007fab74142719: mov    0x8(%rsi),%ebx
  0x00007fab7414271c: shl    $0x3,%rbx
  0x00007fab74142720: mov    0xa8(%rbx),%rbx
  0x00007fab74142727: or     %r15,%rbx
  0x00007fab7414272a: lock cmpxchg %rbx,(%rsi)
  0x00007fab7414272f: jne    0x00007fab74142dc3
  0x00007fab74142735: jmpq   0x00007fab74142775
  0x00007fab7414273a: mov    0x8(%rsi),%ebx
  0x00007fab7414273d: shl    $0x3,%rbx
  0x00007fab74142741: mov    0xa8(%rbx),%rbx
  0x00007fab74142748: lock cmpxchg %rbx,(%rsi)
  0x00007fab7414274d: mov    (%rsi),%rax
  0x00007fab74142750: or     $0x1,%rax
  0x00007fab74142754: mov    %rax,(%rdi)
  0x00007fab74142757: lock cmpxchg %rdi,(%rsi)
  0x00007fab7414275c: je     0x00007fab74142775
  0x00007fab74142762: sub    %rsp,%rax
  0x00007fab74142765: and    $0xfffffffffffff007,%rax
  0x00007fab7414276c: mov    %rax,(%rdi)
  0x00007fab7414276f: jne    0x00007fab74142dc3
  0x00007fab74142775: movabs $0x7fab61b96058,%rax  ;   {metadata(method data for {method} {0x00007fab61acd120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007fab7414277f: mov    0xfc(%rax),%edi
  0x00007fab74142785: add    $0x8,%edi
  0x00007fab74142788: mov    %edi,0xfc(%rax)
  0x00007fab7414278e: movabs $0x7fab61acd120,%rax  ;   {metadata({method} {0x00007fab61acd120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007fab74142798: and    $0x1ff8,%edi
  0x00007fab7414279e: cmp    $0x0,%edi
  0x00007fab741427a1: je     0x00007fab74142dd6  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@0 (line 97)

  0x00007fab741427a7: mov    %rdx,0x40(%rsp)
  0x00007fab741427ac: mov    %rsi,%rax
  0x00007fab741427af: movabs $0x7fab61b96058,%rdi  ;   {metadata(method data for {method} {0x00007fab61acd120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007fab741427b9: movabs $0x7c003c418,%r10  ;   {metadata(&apos;sun/misc/PerfCounter&apos;)}
  0x00007fab741427c3: mov    %r10,0x140(%rdi)
  0x00007fab741427ca: addq   $0x1,0x148(%rdi)
  0x00007fab741427d2: lea    0x60(%rsp),%rdi
  0x00007fab741427d7: mov    %rsi,0x8(%rdi)
  0x00007fab741427db: mov    (%rsi),%rax
  0x00007fab741427de: mov    %rax,%rbx
  0x00007fab741427e1: and    $0x7,%rbx
  0x00007fab741427e5: cmp    $0x5,%rbx
  0x00007fab741427e9: jne    0x00007fab74142870
  0x00007fab741427ef: mov    0x8(%rsi),%ebx
  0x00007fab741427f2: shl    $0x3,%rbx
  0x00007fab741427f6: mov    0xa8(%rbx),%rbx
  0x00007fab741427fd: or     %r15,%rbx
  0x00007fab74142800: xor    %rax,%rbx
  0x00007fab74142803: and    $0xffffffffffffff87,%rbx
  0x00007fab74142807: je     0x00007fab74142898
  0x00007fab7414280d: test   $0x7,%rbx
  0x00007fab74142814: jne    0x00007fab7414285d
  0x00007fab74142816: test   $0x300,%rbx
  0x00007fab7414281d: jne    0x00007fab7414283c
  0x00007fab7414281f: and    $0x37f,%rax
  0x00007fab74142826: mov    %rax,%rbx
  0x00007fab74142829: or     %r15,%rbx
  0x00007fab7414282c: lock cmpxchg %rbx,(%rsi)
  0x00007fab74142831: jne    0x00007fab74142ded
  0x00007fab74142837: jmpq   0x00007fab74142898
  0x00007fab7414283c: mov    0x8(%rsi),%ebx
  0x00007fab7414283f: shl    $0x3,%rbx
  0x00007fab74142843: mov    0xa8(%rbx),%rbx
  0x00007fab7414284a: or     %r15,%rbx
  0x00007fab7414284d: lock cmpxchg %rbx,(%rsi)
  0x00007fab74142852: jne    0x00007fab74142ded
  0x00007fab74142858: jmpq   0x00007fab74142898
  0x00007fab7414285d: mov    0x8(%rsi),%ebx
  0x00007fab74142860: shl    $0x3,%rbx
  0x00007fab74142864: mov    0xa8(%rbx),%rbx
  0x00007fab7414286b: lock cmpxchg %rbx,(%rsi)
  0x00007fab74142870: mov    (%rsi),%rax
  0x00007fab74142873: or     $0x1,%rax
  0x00007fab74142877: mov    %rax,(%rdi)
  0x00007fab7414287a: lock cmpxchg %rdi,(%rsi)
  0x00007fab7414287f: je     0x00007fab74142898
  0x00007fab74142885: sub    %rsp,%rax
  0x00007fab74142888: and    $0xfffffffffffff007,%rax
  0x00007fab7414288f: mov    %rax,(%rdi)
  0x00007fab74142892: jne    0x00007fab74142ded  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)

  0x00007fab74142898: movabs $0x7fab61b96308,%rdi  ;   {metadata(method data for {method} {0x00007fab61accfa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007fab741428a2: mov    0xfc(%rdi),%ebx
  0x00007fab741428a8: add    $0x8,%ebx
  0x00007fab741428ab: mov    %ebx,0xfc(%rdi)
  0x00007fab741428b1: movabs $0x7fab61accfa0,%rdi  ;   {metadata({method} {0x00007fab61accfa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007fab741428bb: and    $0x7ffff8,%ebx
  0x00007fab741428c1: cmp    $0x0,%ebx
  0x00007fab741428c4: je     0x00007fab74142e00
  0x00007fab741428ca: mov    0x10(%rsi),%edi
  0x00007fab741428cd: shl    $0x3,%rdi          ;*getfield lb {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)

  0x00007fab741428d1: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x00007fab74142e17
  0x00007fab741428d4: mov    %rdi,%rbx
  0x00007fab741428d7: movabs $0x7fab61b96308,%rax  ;   {metadata(method data for {method} {0x00007fab61accfa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007fab741428e1: mov    0x8(%rbx),%ebx
  0x00007fab741428e4: shl    $0x3,%rbx
  0x00007fab741428e8: cmp    0x140(%rax),%rbx
  0x00007fab741428ef: jne    0x00007fab741428fe
  0x00007fab741428f1: addq   $0x1,0x148(%rax)
  0x00007fab741428f9: jmpq   0x00007fab74142ac0
  0x00007fab741428fe: cmp    0x150(%rax),%rbx
  0x00007fab74142905: jne    0x00007fab74142914
  0x00007fab74142907: addq   $0x1,0x158(%rax)
  0x00007fab7414290f: jmpq   0x00007fab74142ac0
  0x00007fab74142914: cmp    0x160(%rax),%rbx
  0x00007fab7414291b: jne    0x00007fab7414292a
  0x00007fab7414291d: addq   $0x1,0x168(%rax)
  0x00007fab74142925: jmpq   0x00007fab74142ac0
  0x00007fab7414292a: cmp    0x170(%rax),%rbx
  0x00007fab74142931: jne    0x00007fab74142940
  0x00007fab74142933: addq   $0x1,0x178(%rax)
  0x00007fab7414293b: jmpq   0x00007fab74142ac0
  0x00007fab74142940: cmp    0x180(%rax),%rbx
  0x00007fab74142947: jne    0x00007fab74142956
  0x00007fab74142949: addq   $0x1,0x188(%rax)
  0x00007fab74142951: jmpq   0x00007fab74142ac0
  0x00007fab74142956: cmp    0x190(%rax),%rbx
  0x00007fab7414295d: jne    0x00007fab7414296c
  0x00007fab7414295f: addq   $0x1,0x198(%rax)
  0x00007fab74142967: jmpq   0x00007fab74142ac0
  0x00007fab7414296c: cmp    0x1a0(%rax),%rbx
  0x00007fab74142973: jne    0x00007fab74142982
  0x00007fab74142975: addq   $0x1,0x1a8(%rax)
  0x00007fab7414297d: jmpq   0x00007fab74142ac0
  0x00007fab74142982: cmp    0x1b0(%rax),%rbx
  0x00007fab74142989: jne    0x00007fab74142998
  0x00007fab7414298b: addq   $0x1,0x1b8(%rax)
  0x00007fab74142993: jmpq   0x00007fab74142ac0
  0x00007fab74142998: cmpq   $0x0,0x140(%rax)
  0x00007fab741429a3: jne    0x00007fab741429bc
  0x00007fab741429a5: mov    %rbx,0x140(%rax)
  0x00007fab741429ac: movq   $0x1,0x148(%rax)
  0x00007fab741429b7: jmpq   0x00007fab74142ac0
  0x00007fab741429bc: cmpq   $0x0,0x150(%rax)
  0x00007fab741429c7: jne    0x00007fab741429e0
  0x00007fab741429c9: mov    %rbx,0x150(%rax)
  0x00007fab741429d0: movq   $0x1,0x158(%rax)
  0x00007fab741429db: jmpq   0x00007fab74142ac0
  0x00007fab741429e0: cmpq   $0x0,0x160(%rax)
  0x00007fab741429eb: jne    0x00007fab74142a04
  0x00007fab741429ed: mov    %rbx,0x160(%rax)
  0x00007fab741429f4: movq   $0x1,0x168(%rax)
  0x00007fab741429ff: jmpq   0x00007fab74142ac0
  0x00007fab74142a04: cmpq   $0x0,0x170(%rax)
  0x00007fab74142a0f: jne    0x00007fab74142a28
  0x00007fab74142a11: mov    %rbx,0x170(%rax)
  0x00007fab74142a18: movq   $0x1,0x178(%rax)
  0x00007fab74142a23: jmpq   0x00007fab74142ac0
  0x00007fab74142a28: cmpq   $0x0,0x180(%rax)
  0x00007fab74142a33: jne    0x00007fab74142a4c
  0x00007fab74142a35: mov    %rbx,0x180(%rax)
  0x00007fab74142a3c: movq   $0x1,0x188(%rax)
  0x00007fab74142a47: jmpq   0x00007fab74142ac0
  0x00007fab74142a4c: cmpq   $0x0,0x190(%rax)
  0x00007fab74142a57: jne    0x00007fab74142a70
  0x00007fab74142a59: mov    %rbx,0x190(%rax)
  0x00007fab74142a60: movq   $0x1,0x198(%rax)
  0x00007fab74142a6b: jmpq   0x00007fab74142ac0
  0x00007fab74142a70: cmpq   $0x0,0x1a0(%rax)
  0x00007fab74142a7b: jne    0x00007fab74142a94
  0x00007fab74142a7d: mov    %rbx,0x1a0(%rax)
  0x00007fab74142a84: movq   $0x1,0x1a8(%rax)
  0x00007fab74142a8f: jmpq   0x00007fab74142ac0
  0x00007fab74142a94: cmpq   $0x0,0x1b0(%rax)
  0x00007fab74142a9f: jne    0x00007fab74142ab8
  0x00007fab74142aa1: mov    %rbx,0x1b0(%rax)
  0x00007fab74142aa8: movq   $0x1,0x1b8(%rax)
  0x00007fab74142ab3: jmpq   0x00007fab74142ac0
  0x00007fab74142ab8: addq   $0x1,0x130(%rax)
  0x00007fab74142ac0: mov    $0x0,%edx
  0x00007fab74142ac5: mov    %rsi,0x48(%rsp)
  0x00007fab74142aca: mov    %rdi,%rsi          ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)

  0x00007fab74142acd: movabs $0xffffffffffffffff,%rax
  0x00007fab74142ad7: callq  0x00007fab74047f60  ; OopMap{[72]=Oop [88]=Oop [104]=Oop off=1116}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ;   {virtual_call}
  0x00007fab74142adc: mov    %rax,%rdx          ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)

  0x00007fab74142adf: lea    0x60(%rsp),%rax
  0x00007fab74142ae4: mov    0x8(%rax),%rsi
  0x00007fab74142ae8: mov    (%rsi),%rcx
  0x00007fab74142aeb: and    $0x7,%rcx
  0x00007fab74142aef: cmp    $0x5,%rcx
  0x00007fab74142af3: je     0x00007fab74142b10
  0x00007fab74142af9: mov    (%rax),%rcx
  0x00007fab74142afc: test   %rcx,%rcx
  0x00007fab74142aff: je     0x00007fab74142b10
  0x00007fab74142b05: lock cmpxchg %rcx,(%rsi)
  0x00007fab74142b0a: jne    0x00007fab74142e1c  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)

  0x00007fab74142b10: mov    %rdx,%rcx
  0x00007fab74142b13: mov    0x40(%rsp),%rdx
  0x00007fab74142b18: add    %rdx,%rcx
  0x00007fab74142b1b: mov    0x48(%rsp),%rsi
  0x00007fab74142b20: mov    0x10(%rsi),%esi
  0x00007fab74142b23: shl    $0x3,%rsi          ;*getfield lb {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@8 (line 98)

  0x00007fab74142b27: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00007fab74142e2f
  0x00007fab74142b2a: mov    %rsi,%rdx
  0x00007fab74142b2d: movabs $0x7fab61b96058,%rdi  ;   {metadata(method data for {method} {0x00007fab61acd120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007fab74142b37: mov    0x8(%rdx),%edx
  0x00007fab74142b3a: shl    $0x3,%rdx
  0x00007fab74142b3e: cmp    0x1d8(%rdi),%rdx
  0x00007fab74142b45: jne    0x00007fab74142b54
  0x00007fab74142b47: addq   $0x1,0x1e0(%rdi)
  0x00007fab74142b4f: jmpq   0x00007fab74142d16
  0x00007fab74142b54: cmp    0x1e8(%rdi),%rdx
  0x00007fab74142b5b: jne    0x00007fab74142b6a
  0x00007fab74142b5d: addq   $0x1,0x1f0(%rdi)
  0x00007fab74142b65: jmpq   0x00007fab74142d16
  0x00007fab74142b6a: cmp    0x1f8(%rdi),%rdx
  0x00007fab74142b71: jne    0x00007fab74142b80
  0x00007fab74142b73: addq   $0x1,0x200(%rdi)
  0x00007fab74142b7b: jmpq   0x00007fab74142d16
  0x00007fab74142b80: cmp    0x208(%rdi),%rdx
  0x00007fab74142b87: jne    0x00007fab74142b96
  0x00007fab74142b89: addq   $0x1,0x210(%rdi)
  0x00007fab74142b91: jmpq   0x00007fab74142d16
  0x00007fab74142b96: cmp    0x218(%rdi),%rdx
  0x00007fab74142b9d: jne    0x00007fab74142bac
  0x00007fab74142b9f: addq   $0x1,0x220(%rdi)
  0x00007fab74142ba7: jmpq   0x00007fab74142d16
  0x00007fab74142bac: cmp    0x228(%rdi),%rdx
  0x00007fab74142bb3: jne    0x00007fab74142bc2
  0x00007fab74142bb5: addq   $0x1,0x230(%rdi)
  0x00007fab74142bbd: jmpq   0x00007fab74142d16
  0x00007fab74142bc2: cmp    0x238(%rdi),%rdx
  0x00007fab74142bc9: jne    0x00007fab74142bd8
  0x00007fab74142bcb: addq   $0x1,0x240(%rdi)
  0x00007fab74142bd3: jmpq   0x00007fab74142d16
  0x00007fab74142bd8: cmp    0x248(%rdi),%rdx
  0x00007fab74142bdf: jne    0x00007fab74142bee
  0x00007fab74142be1: addq   $0x1,0x250(%rdi)
  0x00007fab74142be9: jmpq   0x00007fab74142d16
  0x00007fab74142bee: cmpq   $0x0,0x1d8(%rdi)
  0x00007fab74142bf9: jne    0x00007fab74142c12
  0x00007fab74142bfb: mov    %rdx,0x1d8(%rdi)
  0x00007fab74142c02: movq   $0x1,0x1e0(%rdi)
  0x00007fab74142c0d: jmpq   0x00007fab74142d16
  0x00007fab74142c12: cmpq   $0x0,0x1e8(%rdi)
  0x00007fab74142c1d: jne    0x00007fab74142c36
  0x00007fab74142c1f: mov    %rdx,0x1e8(%rdi)
  0x00007fab74142c26: movq   $0x1,0x1f0(%rdi)
  0x00007fab74142c31: jmpq   0x00007fab74142d16
  0x00007fab74142c36: cmpq   $0x0,0x1f8(%rdi)
  0x00007fab74142c41: jne    0x00007fab74142c5a
  0x00007fab74142c43: mov    %rdx,0x1f8(%rdi)
  0x00007fab74142c4a: movq   $0x1,0x200(%rdi)
  0x00007fab74142c55: jmpq   0x00007fab74142d16
  0x00007fab74142c5a: cmpq   $0x0,0x208(%rdi)
  0x00007fab74142c65: jne    0x00007fab74142c7e
  0x00007fab74142c67: mov    %rdx,0x208(%rdi)
  0x00007fab74142c6e: movq   $0x1,0x210(%rdi)
  0x00007fab74142c79: jmpq   0x00007fab74142d16
  0x00007fab74142c7e: cmpq   $0x0,0x218(%rdi)
  0x00007fab74142c89: jne    0x00007fab74142ca2
  0x00007fab74142c8b: mov    %rdx,0x218(%rdi)
  0x00007fab74142c92: movq   $0x1,0x220(%rdi)
  0x00007fab74142c9d: jmpq   0x00007fab74142d16
  0x00007fab74142ca2: cmpq   $0x0,0x228(%rdi)
  0x00007fab74142cad: jne    0x00007fab74142cc6
  0x00007fab74142caf: mov    %rdx,0x228(%rdi)
  0x00007fab74142cb6: movq   $0x1,0x230(%rdi)
  0x00007fab74142cc1: jmpq   0x00007fab74142d16
  0x00007fab74142cc6: cmpq   $0x0,0x238(%rdi)
  0x00007fab74142cd1: jne    0x00007fab74142cea
  0x00007fab74142cd3: mov    %rdx,0x238(%rdi)
  0x00007fab74142cda: movq   $0x1,0x240(%rdi)
  0x00007fab74142ce5: jmpq   0x00007fab74142d16
  0x00007fab74142cea: cmpq   $0x0,0x248(%rdi)
  0x00007fab74142cf5: jne    0x00007fab74142d0e
  0x00007fab74142cf7: mov    %rdx,0x248(%rdi)
  0x00007fab74142cfe: movq   $0x1,0x250(%rdi)
  0x00007fab74142d09: jmpq   0x00007fab74142d16
  0x00007fab74142d0e: addq   $0x1,0x1c8(%rdi)
  0x00007fab74142d16: mov    $0x0,%edx          ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@13 (line 98)

  0x00007fab74142d1b: nop
  0x00007fab74142d1c: nop
  0x00007fab74142d1d: movabs $0xffffffffffffffff,%rax
  0x00007fab74142d27: callq  0x00007fab74047f60  ; OopMap{[88]=Oop off=1708}
                                                ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@13 (line 98)
                                                ;   {virtual_call}
  0x00007fab74142d2c: lea    0x50(%rsp),%rax
  0x00007fab74142d31: mov    0x8(%rax),%rdi
  0x00007fab74142d35: mov    (%rdi),%rsi
  0x00007fab74142d38: and    $0x7,%rsi
  0x00007fab74142d3c: cmp    $0x5,%rsi
  0x00007fab74142d40: je     0x00007fab74142d5d
  0x00007fab74142d46: mov    (%rax),%rsi
  0x00007fab74142d49: test   %rsi,%rsi
  0x00007fab74142d4c: je     0x00007fab74142d5d
  0x00007fab74142d52: lock cmpxchg %rsi,(%rdi)
  0x00007fab74142d57: jne    0x00007fab74142e34
  0x00007fab74142d5d: add    $0x80,%rsp
  0x00007fab74142d64: pop    %rbp
  0x00007fab74142d65: test   %eax,0x1b69f395(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74142d6b: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@17 (line 99)

  0x00007fab74142d6c: mov    0x2c0(%r15),%rax
  0x00007fab74142d73: xor    %r10,%r10
  0x00007fab74142d76: mov    %r10,0x2c0(%r15)
  0x00007fab74142d7d: xor    %r10,%r10
  0x00007fab74142d80: mov    %r10,0x2c8(%r15)
  0x00007fab74142d87: mov    %rax,%rsi
  0x00007fab74142d8a: lea    0x60(%rsp),%rax
  0x00007fab74142d8f: mov    0x8(%rax),%rbx
  0x00007fab74142d93: mov    (%rbx),%rdi
  0x00007fab74142d96: and    $0x7,%rdi
  0x00007fab74142d9a: cmp    $0x5,%rdi
  0x00007fab74142d9e: je     0x00007fab74142dbb
  0x00007fab74142da4: mov    (%rax),%rdi
  0x00007fab74142da7: test   %rdi,%rdi
  0x00007fab74142daa: je     0x00007fab74142dbb
  0x00007fab74142db0: lock cmpxchg %rdi,(%rbx)
  0x00007fab74142db5: jne    0x00007fab74142e47  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)

  0x00007fab74142dbb: mov    %rsi,%rax
  0x00007fab74142dbe: jmpq   0x00007fab74142e85
  0x00007fab74142dc3: mov    %rsi,0x8(%rsp)
  0x00007fab74142dc8: mov    %rdi,(%rsp)
  0x00007fab74142dcc: callq  0x00007fab740fea60  ; OopMap{rsi=Oop [88]=Oop off=1873}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ;   {runtime_call}
  0x00007fab74142dd1: jmpq   0x00007fab74142775
  0x00007fab74142dd6: mov    %rax,0x8(%rsp)
  0x00007fab74142ddb: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74142de3: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [88]=Oop off=1896}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ;   {runtime_call}
  0x00007fab74142de8: jmpq   0x00007fab741427a7
  0x00007fab74142ded: mov    %rsi,0x8(%rsp)
  0x00007fab74142df2: mov    %rdi,(%rsp)
  0x00007fab74142df6: callq  0x00007fab740fea60  ; OopMap{rsi=Oop [88]=Oop [104]=Oop off=1915}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ;   {runtime_call}
  0x00007fab74142dfb: jmpq   0x00007fab74142898
  0x00007fab74142e00: mov    %rdi,0x8(%rsp)
  0x00007fab74142e05: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74142e0d: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [88]=Oop [104]=Oop off=1938}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ;   {runtime_call}
  0x00007fab74142e12: jmpq   0x00007fab741428ca
  0x00007fab74142e17: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rdi=Oop [88]=Oop [104]=Oop off=1948}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ;   {runtime_call}
  0x00007fab74142e1c: lea    0x60(%rsp),%rax
  0x00007fab74142e21: mov    %rax,(%rsp)
  0x00007fab74142e25: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab74142e2a: jmpq   0x00007fab74142b10
  0x00007fab74142e2f: callq  0x00007fab740fc000  ; OopMap{rsi=Oop [88]=Oop off=1972}
                                                ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@13 (line 98)
                                                ;   {runtime_call}
  0x00007fab74142e34: lea    0x50(%rsp),%rax
  0x00007fab74142e39: mov    %rax,(%rsp)
  0x00007fab74142e3d: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab74142e42: jmpq   0x00007fab74142d5d
  0x00007fab74142e47: lea    0x60(%rsp),%rax
  0x00007fab74142e4c: mov    %rax,(%rsp)
  0x00007fab74142e50: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab74142e55: jmpq   0x00007fab74142dbb
  0x00007fab74142e5a: nop
  0x00007fab74142e5b: nop
  0x00007fab74142e5c: mov    0x2c0(%r15),%rax
  0x00007fab74142e63: movabs $0x0,%r10
  0x00007fab74142e6d: mov    %r10,0x2c0(%r15)
  0x00007fab74142e74: movabs $0x0,%r10
  0x00007fab74142e7e: mov    %r10,0x2c8(%r15)
  0x00007fab74142e85: mov    %rax,%rbx
  0x00007fab74142e88: lea    0x50(%rsp),%rax
  0x00007fab74142e8d: mov    0x8(%rax),%rsi
  0x00007fab74142e91: mov    (%rsi),%rdi
  0x00007fab74142e94: and    $0x7,%rdi
  0x00007fab74142e98: cmp    $0x5,%rdi
  0x00007fab74142e9c: je     0x00007fab74142eb9
  0x00007fab74142ea2: mov    (%rax),%rdi
  0x00007fab74142ea5: test   %rdi,%rdi
  0x00007fab74142ea8: je     0x00007fab74142eb9
  0x00007fab74142eae: lock cmpxchg %rdi,(%rsi)
  0x00007fab74142eb3: jne    0x00007fab74142ec9
  0x00007fab74142eb9: mov    %rbx,%rax
  0x00007fab74142ebc: add    $0x80,%rsp
  0x00007fab74142ec3: pop    %rbp
  0x00007fab74142ec4: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74142ec9: lea    0x50(%rsp),%rax
  0x00007fab74142ece: mov    %rax,(%rsp)
  0x00007fab74142ed2: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab74142ed7: jmp    0x00007fab74142eb9
  0x00007fab74142ed9: hlt    
  0x00007fab74142eda: hlt    
  0x00007fab74142edb: hlt    
  0x00007fab74142edc: hlt    
  0x00007fab74142edd: hlt    
  0x00007fab74142ede: hlt    
  0x00007fab74142edf: hlt    
[Stub Code]
  0x00007fab74142ee0: nop                       ;   {no_reloc}
  0x00007fab74142ee1: nop
  0x00007fab74142ee2: nop
  0x00007fab74142ee3: nop
  0x00007fab74142ee4: nop
  0x00007fab74142ee5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74142eef: jmpq   0x00007fab74142eef  ;   {runtime_call}
  0x00007fab74142ef4: nop
  0x00007fab74142ef5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74142eff: jmpq   0x00007fab74142eff  ;   {runtime_call}
[Exception Handler]
  0x00007fab74142f04: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74142f09: mov    %rsp,-0x28(%rsp)
  0x00007fab74142f0e: sub    $0x80,%rsp
  0x00007fab74142f15: mov    %rax,0x78(%rsp)
  0x00007fab74142f1a: mov    %rcx,0x70(%rsp)
  0x00007fab74142f1f: mov    %rdx,0x68(%rsp)
  0x00007fab74142f24: mov    %rbx,0x60(%rsp)
  0x00007fab74142f29: mov    %rbp,0x50(%rsp)
  0x00007fab74142f2e: mov    %rsi,0x48(%rsp)
  0x00007fab74142f33: mov    %rdi,0x40(%rsp)
  0x00007fab74142f38: mov    %r8,0x38(%rsp)
  0x00007fab74142f3d: mov    %r9,0x30(%rsp)
  0x00007fab74142f42: mov    %r10,0x28(%rsp)
  0x00007fab74142f47: mov    %r11,0x20(%rsp)
  0x00007fab74142f4c: mov    %r12,0x18(%rsp)
  0x00007fab74142f51: mov    %r13,0x10(%rsp)
  0x00007fab74142f56: mov    %r14,0x8(%rsp)
  0x00007fab74142f5b: mov    %r15,(%rsp)
  0x00007fab74142f5f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74142f69: movabs $0x7fab74142f09,%rsi  ;   {internal_word}
  0x00007fab74142f73: mov    %rsp,%rdx
  0x00007fab74142f76: and    $0xfffffffffffffff0,%rsp
  0x00007fab74142f7a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74142f7f: hlt    
[Deopt Handler Code]
  0x00007fab74142f80: movabs $0x7fab74142f80,%r10  ;   {section_word}
  0x00007fab74142f8a: push   %r10
  0x00007fab74142f8c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74142f91: hlt    
  0x00007fab74142f92: hlt    
  0x00007fab74142f93: hlt    
  0x00007fab74142f94: hlt    
  0x00007fab74142f95: hlt    
  0x00007fab74142f96: hlt    
  0x00007fab74142f97: hlt    
<nmethod compile_id='107' compiler='C1' level='3' entry='0x00007fab74142680' size='3352' address='0x00007fab741424d0' relocation_offset='312' insts_offset='432' stub_offset='2576' scopes_data_offset='2784' scopes_pcs_offset='2952' dependencies_offset='3272' handler_table_offset='3280' nul_chk_table_offset='3328' metadata_offset='2760' method='sun/misc/PerfCounter add (J)V' bytes='18' count='384' iicount='384' stamp='0.406'/>
<writer thread='140373948942080'/>
<task_queued compile_id='111' method='java/nio/DirectLongBufferU put (IJ)Ljava/nio/LongBuffer;' bytes='18' count='384' iicount='384' level='3' stamp='0.406' comment='tiered' hot_count='384'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
sun/misc/PerfCounter.get  [0x00007fab741433a0, 0x00007fab74143888]  1256 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61accfa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fab741433a0: mov    0x8(%rsi),%r10d
  0x00007fab741433a4: shl    $0x3,%r10
  0x00007fab741433a8: cmp    %rax,%r10
  0x00007fab741433ab: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab741433b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab741433bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab741433c0: mov    %eax,-0x14000(%rsp)
  0x00007fab741433c7: push   %rbp
  0x00007fab741433c8: sub    $0x40,%rsp
  0x00007fab741433cc: lea    0x20(%rsp),%rdx
  0x00007fab741433d1: mov    %rsi,0x8(%rdx)
  0x00007fab741433d5: mov    (%rsi),%rax
  0x00007fab741433d8: mov    %rax,%rdi
  0x00007fab741433db: and    $0x7,%rdi
  0x00007fab741433df: cmp    $0x5,%rdi
  0x00007fab741433e3: jne    0x00007fab7414346a
  0x00007fab741433e9: mov    0x8(%rsi),%edi
  0x00007fab741433ec: shl    $0x3,%rdi
  0x00007fab741433f0: mov    0xa8(%rdi),%rdi
  0x00007fab741433f7: or     %r15,%rdi
  0x00007fab741433fa: xor    %rax,%rdi
  0x00007fab741433fd: and    $0xffffffffffffff87,%rdi
  0x00007fab74143401: je     0x00007fab74143492
  0x00007fab74143407: test   $0x7,%rdi
  0x00007fab7414340e: jne    0x00007fab74143457
  0x00007fab74143410: test   $0x300,%rdi
  0x00007fab74143417: jne    0x00007fab74143436
  0x00007fab74143419: and    $0x37f,%rax
  0x00007fab74143420: mov    %rax,%rdi
  0x00007fab74143423: or     %r15,%rdi
  0x00007fab74143426: lock cmpxchg %rdi,(%rsi)
  0x00007fab7414342b: jne    0x00007fab74143717
  0x00007fab74143431: jmpq   0x00007fab74143492
  0x00007fab74143436: mov    0x8(%rsi),%edi
  0x00007fab74143439: shl    $0x3,%rdi
  0x00007fab7414343d: mov    0xa8(%rdi),%rdi
  0x00007fab74143444: or     %r15,%rdi
  0x00007fab74143447: lock cmpxchg %rdi,(%rsi)
  0x00007fab7414344c: jne    0x00007fab74143717
  0x00007fab74143452: jmpq   0x00007fab74143492
  0x00007fab74143457: mov    0x8(%rsi),%edi
  0x00007fab7414345a: shl    $0x3,%rdi
  0x00007fab7414345e: mov    0xa8(%rdi),%rdi
  0x00007fab74143465: lock cmpxchg %rdi,(%rsi)
  0x00007fab7414346a: mov    (%rsi),%rax
  0x00007fab7414346d: or     $0x1,%rax
  0x00007fab74143471: mov    %rax,(%rdx)
  0x00007fab74143474: lock cmpxchg %rdx,(%rsi)
  0x00007fab74143479: je     0x00007fab74143492
  0x00007fab7414347f: sub    %rsp,%rax
  0x00007fab74143482: and    $0xfffffffffffff007,%rax
  0x00007fab74143489: mov    %rax,(%rdx)
  0x00007fab7414348c: jne    0x00007fab74143717
  0x00007fab74143492: movabs $0x7fab61b96308,%rdx  ;   {metadata(method data for {method} {0x00007fab61accfa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007fab7414349c: mov    0xfc(%rdx),%edi
  0x00007fab741434a2: add    $0x8,%edi
  0x00007fab741434a5: mov    %edi,0xfc(%rdx)
  0x00007fab741434ab: movabs $0x7fab61accfa0,%rdx  ;   {metadata({method} {0x00007fab61accfa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007fab741434b5: and    $0x1ff8,%edi
  0x00007fab741434bb: cmp    $0x0,%edi
  0x00007fab741434be: je     0x00007fab7414372a  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@0 (line 83)

  0x00007fab741434c4: mov    0x10(%rsi),%esi
  0x00007fab741434c7: shl    $0x3,%rsi          ;*getfield lb {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@1 (line 83)

  0x00007fab741434cb: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00007fab74143741
  0x00007fab741434ce: mov    %rsi,%rdx
  0x00007fab741434d1: movabs $0x7fab61b96308,%rdi  ;   {metadata(method data for {method} {0x00007fab61accfa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007fab741434db: mov    0x8(%rdx),%edx
  0x00007fab741434de: shl    $0x3,%rdx
  0x00007fab741434e2: cmp    0x140(%rdi),%rdx
  0x00007fab741434e9: jne    0x00007fab741434f8
  0x00007fab741434eb: addq   $0x1,0x148(%rdi)
  0x00007fab741434f3: jmpq   0x00007fab741436ba
  0x00007fab741434f8: cmp    0x150(%rdi),%rdx
  0x00007fab741434ff: jne    0x00007fab7414350e
  0x00007fab74143501: addq   $0x1,0x158(%rdi)
  0x00007fab74143509: jmpq   0x00007fab741436ba
  0x00007fab7414350e: cmp    0x160(%rdi),%rdx
  0x00007fab74143515: jne    0x00007fab74143524
  0x00007fab74143517: addq   $0x1,0x168(%rdi)
  0x00007fab7414351f: jmpq   0x00007fab741436ba
  0x00007fab74143524: cmp    0x170(%rdi),%rdx
  0x00007fab7414352b: jne    0x00007fab7414353a
  0x00007fab7414352d: addq   $0x1,0x178(%rdi)
  0x00007fab74143535: jmpq   0x00007fab741436ba
  0x00007fab7414353a: cmp    0x180(%rdi),%rdx
  0x00007fab74143541: jne    0x00007fab74143550
  0x00007fab74143543: addq   $0x1,0x188(%rdi)
  0x00007fab7414354b: jmpq   0x00007fab741436ba
  0x00007fab74143550: cmp    0x190(%rdi),%rdx
  0x00007fab74143557: jne    0x00007fab74143566
  0x00007fab74143559: addq   $0x1,0x198(%rdi)
  0x00007fab74143561: jmpq   0x00007fab741436ba
  0x00007fab74143566: cmp    0x1a0(%rdi),%rdx
  0x00007fab7414356d: jne    0x00007fab7414357c
  0x00007fab7414356f: addq   $0x1,0x1a8(%rdi)
  0x00007fab74143577: jmpq   0x00007fab741436ba
  0x00007fab7414357c: cmp    0x1b0(%rdi),%rdx
  0x00007fab74143583: jne    0x00007fab74143592
  0x00007fab74143585: addq   $0x1,0x1b8(%rdi)
  0x00007fab7414358d: jmpq   0x00007fab741436ba
  0x00007fab74143592: cmpq   $0x0,0x140(%rdi)
  0x00007fab7414359d: jne    0x00007fab741435b6
  0x00007fab7414359f: mov    %rdx,0x140(%rdi)
  0x00007fab741435a6: movq   $0x1,0x148(%rdi)
  0x00007fab741435b1: jmpq   0x00007fab741436ba
  0x00007fab741435b6: cmpq   $0x0,0x150(%rdi)
  0x00007fab741435c1: jne    0x00007fab741435da
  0x00007fab741435c3: mov    %rdx,0x150(%rdi)
  0x00007fab741435ca: movq   $0x1,0x158(%rdi)
  0x00007fab741435d5: jmpq   0x00007fab741436ba
  0x00007fab741435da: cmpq   $0x0,0x160(%rdi)
  0x00007fab741435e5: jne    0x00007fab741435fe
  0x00007fab741435e7: mov    %rdx,0x160(%rdi)
  0x00007fab741435ee: movq   $0x1,0x168(%rdi)
  0x00007fab741435f9: jmpq   0x00007fab741436ba
  0x00007fab741435fe: cmpq   $0x0,0x170(%rdi)
  0x00007fab74143609: jne    0x00007fab74143622
  0x00007fab7414360b: mov    %rdx,0x170(%rdi)
  0x00007fab74143612: movq   $0x1,0x178(%rdi)
  0x00007fab7414361d: jmpq   0x00007fab741436ba
  0x00007fab74143622: cmpq   $0x0,0x180(%rdi)
  0x00007fab7414362d: jne    0x00007fab74143646
  0x00007fab7414362f: mov    %rdx,0x180(%rdi)
  0x00007fab74143636: movq   $0x1,0x188(%rdi)
  0x00007fab74143641: jmpq   0x00007fab741436ba
  0x00007fab74143646: cmpq   $0x0,0x190(%rdi)
  0x00007fab74143651: jne    0x00007fab7414366a
  0x00007fab74143653: mov    %rdx,0x190(%rdi)
  0x00007fab7414365a: movq   $0x1,0x198(%rdi)
  0x00007fab74143665: jmpq   0x00007fab741436ba
  0x00007fab7414366a: cmpq   $0x0,0x1a0(%rdi)
  0x00007fab74143675: jne    0x00007fab7414368e
  0x00007fab74143677: mov    %rdx,0x1a0(%rdi)
  0x00007fab7414367e: movq   $0x1,0x1a8(%rdi)
  0x00007fab74143689: jmpq   0x00007fab741436ba
  0x00007fab7414368e: cmpq   $0x0,0x1b0(%rdi)
  0x00007fab74143699: jne    0x00007fab741436b2
  0x00007fab7414369b: mov    %rdx,0x1b0(%rdi)
  0x00007fab741436a2: movq   $0x1,0x1b8(%rdi)
  0x00007fab741436ad: jmpq   0x00007fab741436ba
  0x00007fab741436b2: addq   $0x1,0x130(%rdi)
  0x00007fab741436ba: mov    $0x0,%edx          ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)

  0x00007fab741436bf: nop
  0x00007fab741436c0: nop
  0x00007fab741436c1: nop
  0x00007fab741436c2: nop
  0x00007fab741436c3: nop
  0x00007fab741436c4: nop
  0x00007fab741436c5: movabs $0xffffffffffffffff,%rax
  0x00007fab741436cf: callq  0x00007fab74047f60  ; OopMap{[40]=Oop off=820}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ;   {virtual_call}
  0x00007fab741436d4: mov    %rax,%rsi          ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)

  0x00007fab741436d7: lea    0x20(%rsp),%rax
  0x00007fab741436dc: mov    0x8(%rax),%rbx
  0x00007fab741436e0: mov    (%rbx),%rdi
  0x00007fab741436e3: and    $0x7,%rdi
  0x00007fab741436e7: cmp    $0x5,%rdi
  0x00007fab741436eb: je     0x00007fab74143708
  0x00007fab741436f1: mov    (%rax),%rdi
  0x00007fab741436f4: test   %rdi,%rdi
  0x00007fab741436f7: je     0x00007fab74143708
  0x00007fab741436fd: lock cmpxchg %rdi,(%rbx)
  0x00007fab74143702: jne    0x00007fab74143746  ;*lreturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@8 (line 83)

  0x00007fab74143708: mov    %rsi,%rax
  0x00007fab7414370b: add    $0x40,%rsp
  0x00007fab7414370f: pop    %rbp
  0x00007fab74143710: test   %eax,0x1b69e9ea(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74143716: retq   
  0x00007fab74143717: mov    %rsi,0x8(%rsp)
  0x00007fab7414371c: mov    %rdx,(%rsp)
  0x00007fab74143720: callq  0x00007fab740fea60  ; OopMap{rsi=Oop [40]=Oop off=901}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ;   {runtime_call}
  0x00007fab74143725: jmpq   0x00007fab74143492
  0x00007fab7414372a: mov    %rdx,0x8(%rsp)
  0x00007fab7414372f: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74143737: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [40]=Oop off=924}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ;   {runtime_call}
  0x00007fab7414373c: jmpq   0x00007fab741434c4
  0x00007fab74143741: callq  0x00007fab740fc000  ; OopMap{rsi=Oop [40]=Oop off=934}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ;   {runtime_call}
  0x00007fab74143746: lea    0x20(%rsp),%rax
  0x00007fab7414374b: mov    %rax,(%rsp)
  0x00007fab7414374f: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab74143754: jmp    0x00007fab74143708
  0x00007fab74143756: nop
  0x00007fab74143757: nop
  0x00007fab74143758: mov    0x2c0(%r15),%rax
  0x00007fab7414375f: movabs $0x0,%r10
  0x00007fab74143769: mov    %r10,0x2c0(%r15)
  0x00007fab74143770: movabs $0x0,%r10
  0x00007fab7414377a: mov    %r10,0x2c8(%r15)
  0x00007fab74143781: mov    %rax,%rbx
  0x00007fab74143784: lea    0x20(%rsp),%rax
  0x00007fab74143789: mov    0x8(%rax),%rsi
  0x00007fab7414378d: mov    (%rsi),%rdi
  0x00007fab74143790: and    $0x7,%rdi
  0x00007fab74143794: cmp    $0x5,%rdi
  0x00007fab74143798: je     0x00007fab741437b5
  0x00007fab7414379e: mov    (%rax),%rdi
  0x00007fab741437a1: test   %rdi,%rdi
  0x00007fab741437a4: je     0x00007fab741437b5
  0x00007fab741437aa: lock cmpxchg %rdi,(%rsi)
  0x00007fab741437af: jne    0x00007fab741437c2
  0x00007fab741437b5: mov    %rbx,%rax
  0x00007fab741437b8: add    $0x40,%rsp
  0x00007fab741437bc: pop    %rbp
  0x00007fab741437bd: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab741437c2: lea    0x20(%rsp),%rax
  0x00007fab741437c7: mov    %rax,(%rsp)
  0x00007fab741437cb: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab741437d0: jmp    0x00007fab741437b5
  0x00007fab741437d2: hlt    
  0x00007fab741437d3: hlt    
  0x00007fab741437d4: hlt    
  0x00007fab741437d5: hlt    
  0x00007fab741437d6: hlt    
  0x00007fab741437d7: hlt    
  0x00007fab741437d8: hlt    
  0x00007fab741437d9: hlt    
  0x00007fab741437da: hlt    
  0x00007fab741437db: hlt    
  0x00007fab741437dc: hlt    
  0x00007fab741437dd: hlt    
  0x00007fab741437de: hlt    
  0x00007fab741437df: hlt    
[Stub Code]
  0x00007fab741437e0: nop                       ;   {no_reloc}
  0x00007fab741437e1: nop
  0x00007fab741437e2: nop
  0x00007fab741437e3: nop
  0x00007fab741437e4: nop
  0x00007fab741437e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741437ef: jmpq   0x00007fab741437ef  ;   {runtime_call}
[Exception Handler]
  0x00007fab741437f4: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab741437f9: mov    %rsp,-0x28(%rsp)
  0x00007fab741437fe: sub    $0x80,%rsp
  0x00007fab74143805: mov    %rax,0x78(%rsp)
  0x00007fab7414380a: mov    %rcx,0x70(%rsp)
  0x00007fab7414380f: mov    %rdx,0x68(%rsp)
  0x00007fab74143814: mov    %rbx,0x60(%rsp)
  0x00007fab74143819: mov    %rbp,0x50(%rsp)
  0x00007fab7414381e: mov    %rsi,0x48(%rsp)
  0x00007fab74143823: mov    %rdi,0x40(%rsp)
  0x00007fab74143828: mov    %r8,0x38(%rsp)
  0x00007fab7414382d: mov    %r9,0x30(%rsp)
  0x00007fab74143832: mov    %r10,0x28(%rsp)
  0x00007fab74143837: mov    %r11,0x20(%rsp)
  0x00007fab7414383c: mov    %r12,0x18(%rsp)
  0x00007fab74143841: mov    %r13,0x10(%rsp)
  0x00007fab74143846: mov    %r14,0x8(%rsp)
  0x00007fab7414384b: mov    %r15,(%rsp)
  0x00007fab7414384f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74143859: movabs $0x7fab741437f9,%rsi  ;   {internal_word}
  0x00007fab74143863: mov    %rsp,%rdx
  0x00007fab74143866: and    $0xfffffffffffffff0,%rsp
  0x00007fab7414386a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7414386f: hlt    
[Deopt Handler Code]
  0x00007fab74143870: movabs $0x7fab74143870,%r10  ;   {section_word}
  0x00007fab7414387a: push   %r10
  0x00007fab7414387c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74143881: hlt    
  0x00007fab74143882: hlt    
  0x00007fab74143883: hlt    
  0x00007fab74143884: hlt    
  0x00007fab74143885: hlt    
  0x00007fab74143886: hlt    
  0x00007fab74143887: hlt    
<nmethod compile_id='108' compiler='C1' level='3' entry='0x00007fab741433a0' size='1920' address='0x00007fab74143210' relocation_offset='312' insts_offset='400' stub_offset='1488' scopes_data_offset='1664' scopes_pcs_offset='1720' dependencies_offset='1896' nul_chk_table_offset='1904' metadata_offset='1656' method='sun/misc/PerfCounter get ()J' bytes='9' count='385' iicount='385' stamp='0.407'/>
<writer thread='140373948942080'/>
<task_queued compile_id='112' method='sun/misc/URLClassPath$JarLoader ensureOpen ()V' bytes='36' count='506' iicount='506' level='3' stamp='0.407' comment='tiered' hot_count='506'/>
[Loaded jdk.vm.ci.meta.PlatformKind$Key from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.meta.PlatformKind$EnumKey from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
sun/misc/URLClassPath$JarLoader.ensureOpen  [0x00007fab74143b80, 0x00007fab74144358]  2008 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61abb568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;
  #           [sp+0x60]  (sp of caller)
  0x00007fab74143b80: mov    0x8(%rsi),%r10d
  0x00007fab74143b84: shl    $0x3,%r10
  0x00007fab74143b88: cmp    %rax,%r10
  0x00007fab74143b8b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74143b91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74143b9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74143ba0: mov    %eax,-0x14000(%rsp)
  0x00007fab74143ba7: push   %rbp
  0x00007fab74143ba8: sub    $0x50,%rsp
  0x00007fab74143bac: mov    %rsi,%rbx
  0x00007fab74143baf: movabs $0x7fab61b90438,%rdx  ;   {metadata(method data for {method} {0x00007fab61abb568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab74143bb9: mov    0xfc(%rdx),%esi
  0x00007fab74143bbf: add    $0x8,%esi
  0x00007fab74143bc2: mov    %esi,0xfc(%rdx)
  0x00007fab74143bc8: movabs $0x7fab61abb568,%rdx  ;   {metadata({method} {0x00007fab61abb568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab74143bd2: and    $0x1ff8,%esi
  0x00007fab74143bd8: cmp    $0x0,%esi
  0x00007fab74143bdb: je     0x00007fab741441e2  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@0 (line 866)

  0x00007fab74143be1: mov    0x18(%rbx),%edx
  0x00007fab74143be4: shl    $0x3,%rdx          ;*getfield jar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@1 (line 866)

  0x00007fab74143be8: cmp    $0x0,%rdx
  0x00007fab74143bec: movabs $0x7fab61b90438,%rdx  ;   {metadata(method data for {method} {0x00007fab61abb568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab74143bf6: movabs $0x130,%rsi
  0x00007fab74143c00: jne    0x00007fab74143c10
  0x00007fab74143c06: movabs $0x140,%rsi
  0x00007fab74143c10: mov    (%rdx,%rsi,1),%rdi
  0x00007fab74143c14: lea    0x1(%rdi),%rdi
  0x00007fab74143c18: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab74143c1c: jne    0x00007fab74143d44  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@4 (line 866)

  0x00007fab74143c22: movabs $0x7c004dd48,%rdx  ;   {metadata(&apos;sun/misc/URLClassPath$JarLoader$1&apos;)}
  0x00007fab74143c2c: mov    0x60(%r15),%rax
  0x00007fab74143c30: lea    0x10(%rax),%rdi
  0x00007fab74143c34: cmp    0x70(%r15),%rdi
  0x00007fab74143c38: ja     0x00007fab741441f9
  0x00007fab74143c3e: mov    %rdi,0x60(%r15)
  0x00007fab74143c42: mov    0xa8(%rdx),%rcx
  0x00007fab74143c49: mov    %rcx,(%rax)
  0x00007fab74143c4c: mov    %rdx,%rcx
  0x00007fab74143c4f: shr    $0x3,%rcx
  0x00007fab74143c53: mov    %ecx,0x8(%rax)
  0x00007fab74143c56: xor    %rcx,%rcx
  0x00007fab74143c59: mov    %ecx,0xc(%rax)
  0x00007fab74143c5c: xor    %rcx,%rcx          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@7 (line 868)

  0x00007fab74143c5f: mov    %rax,%rsi
  0x00007fab74143c62: movabs $0x7fab61b90438,%rdx  ;   {metadata(method data for {method} {0x00007fab61abb568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab74143c6c: addq   $0x1,0x150(%rdx)
  0x00007fab74143c74: movabs $0x7fab61b96510,%rsi  ;   {metadata(method data for {method} {0x00007fab61b643e8} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath$JarLoader;)V&apos; in &apos;sun/misc/URLClassPath$JarLoader$1&apos;)}
  0x00007fab74143c7e: mov    0xfc(%rsi),%edx
  0x00007fab74143c84: add    $0x8,%edx
  0x00007fab74143c87: mov    %edx,0xfc(%rsi)
  0x00007fab74143c8d: movabs $0x7fab61b643e8,%rsi  ;   {metadata({method} {0x00007fab61b643e8} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath$JarLoader;)V&apos; in &apos;sun/misc/URLClassPath$JarLoader$1&apos;)}
  0x00007fab74143c97: and    $0x7ffff8,%edx
  0x00007fab74143c9d: cmp    $0x0,%edx
  0x00007fab74143ca0: je     0x00007fab74144206
  0x00007fab74143ca6: mov    %rbx,%r10
  0x00007fab74143ca9: shr    $0x3,%r10
  0x00007fab74143cad: mov    %r10d,0xc(%rax)
  0x00007fab74143cb1: mov    %rax,%rsi
  0x00007fab74143cb4: shr    $0x9,%rsi
  0x00007fab74143cb8: movabs $0x7fab701ff000,%rdx
  0x00007fab74143cc2: movb   $0x0,(%rsi,%rdx,1)  ;*putfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader$1::&lt;init&gt;@2 (line 869)
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@12 (line 868)

  0x00007fab74143cc6: mov    %rax,%rsi
  0x00007fab74143cc9: movabs $0x7fab61b96510,%rdx  ;   {metadata(method data for {method} {0x00007fab61b643e8} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath$JarLoader;)V&apos; in &apos;sun/misc/URLClassPath$JarLoader$1&apos;)}
  0x00007fab74143cd3: addq   $0x1,0x130(%rdx)
  0x00007fab74143cdb: movabs $0x7fab61a342a0,%rsi  ;   {metadata(method data for {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab74143ce5: mov    0xfc(%rsi),%edx
  0x00007fab74143ceb: add    $0x8,%edx
  0x00007fab74143cee: mov    %edx,0xfc(%rsi)
  0x00007fab74143cf4: movabs $0x7fab618914d8,%rsi  ;   {metadata({method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab74143cfe: and    $0x7ffff8,%edx
  0x00007fab74143d04: cmp    $0x0,%edx
  0x00007fab74143d07: je     0x00007fab7414421d
  0x00007fab74143d0d: mov    0x30(%rbx),%edx
  0x00007fab74143d10: shl    $0x3,%rdx          ;*getfield acc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@16 (line 868)

  0x00007fab74143d14: movabs $0x7fab61b90438,%rsi  ;   {metadata(method data for {method} {0x00007fab61abb568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab74143d1e: addq   $0x1,0x160(%rsi)
  0x00007fab74143d26: mov    %rax,%rsi          ;*invokestatic doPrivileged {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@19 (line 868)

  0x00007fab74143d29: nop
  0x00007fab74143d2a: nop
  0x00007fab74143d2b: nop
  0x00007fab74143d2c: nop
  0x00007fab74143d2d: nop
  0x00007fab74143d2e: nop
  0x00007fab74143d2f: callq  0x00007fab74048160  ; OopMap{off=436}
                                                ;*invokestatic doPrivileged {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@19 (line 868)
                                                ;   {static_call}
  0x00007fab74143d34: movabs $0x7fab61b90438,%rax  ;   {metadata(method data for {method} {0x00007fab61abb568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab74143d3e: incl   0x170(%rax)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@23 (line 903)

  0x00007fab74143d44: add    $0x50,%rsp
  0x00007fab74143d48: pop    %rbp
  0x00007fab74143d49: test   %eax,0x1b69e3b1(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74143d4f: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@35 (line 905)

  0x00007fab74143d50: mov    0x2c0(%r15),%rax
  0x00007fab74143d57: xor    %r10,%r10
  0x00007fab74143d5a: mov    %r10,0x2c0(%r15)
  0x00007fab74143d61: xor    %r10,%r10
  0x00007fab74143d64: mov    %r10,0x2c8(%r15)
  0x00007fab74143d6b: mov    %rax,%rsi
  0x00007fab74143d6e: movabs $0x7fab61b90438,%rdi  ;   {metadata(method data for {method} {0x00007fab61abb568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab74143d78: mov    0x8(%rsi),%esi
  0x00007fab74143d7b: shl    $0x3,%rsi
  0x00007fab74143d7f: cmp    0x198(%rdi),%rsi
  0x00007fab74143d86: jne    0x00007fab74143d95
  0x00007fab74143d88: addq   $0x1,0x1a0(%rdi)
  0x00007fab74143d90: jmpq   0x00007fab74143f57
  0x00007fab74143d95: cmp    0x1a8(%rdi),%rsi
  0x00007fab74143d9c: jne    0x00007fab74143dab
  0x00007fab74143d9e: addq   $0x1,0x1b0(%rdi)
  0x00007fab74143da6: jmpq   0x00007fab74143f57
  0x00007fab74143dab: cmp    0x1b8(%rdi),%rsi
  0x00007fab74143db2: jne    0x00007fab74143dc1
  0x00007fab74143db4: addq   $0x1,0x1c0(%rdi)
  0x00007fab74143dbc: jmpq   0x00007fab74143f57
  0x00007fab74143dc1: cmp    0x1c8(%rdi),%rsi
  0x00007fab74143dc8: jne    0x00007fab74143dd7
  0x00007fab74143dca: addq   $0x1,0x1d0(%rdi)
  0x00007fab74143dd2: jmpq   0x00007fab74143f57
  0x00007fab74143dd7: cmp    0x1d8(%rdi),%rsi
  0x00007fab74143dde: jne    0x00007fab74143ded
  0x00007fab74143de0: addq   $0x1,0x1e0(%rdi)
  0x00007fab74143de8: jmpq   0x00007fab74143f57
  0x00007fab74143ded: cmp    0x1e8(%rdi),%rsi
  0x00007fab74143df4: jne    0x00007fab74143e03
  0x00007fab74143df6: addq   $0x1,0x1f0(%rdi)
  0x00007fab74143dfe: jmpq   0x00007fab74143f57
  0x00007fab74143e03: cmp    0x1f8(%rdi),%rsi
  0x00007fab74143e0a: jne    0x00007fab74143e19
  0x00007fab74143e0c: addq   $0x1,0x200(%rdi)
  0x00007fab74143e14: jmpq   0x00007fab74143f57
  0x00007fab74143e19: cmp    0x208(%rdi),%rsi
  0x00007fab74143e20: jne    0x00007fab74143e2f
  0x00007fab74143e22: addq   $0x1,0x210(%rdi)
  0x00007fab74143e2a: jmpq   0x00007fab74143f57
  0x00007fab74143e2f: cmpq   $0x0,0x198(%rdi)
  0x00007fab74143e3a: jne    0x00007fab74143e53
  0x00007fab74143e3c: mov    %rsi,0x198(%rdi)
  0x00007fab74143e43: movq   $0x1,0x1a0(%rdi)
  0x00007fab74143e4e: jmpq   0x00007fab74143f57
  0x00007fab74143e53: cmpq   $0x0,0x1a8(%rdi)
  0x00007fab74143e5e: jne    0x00007fab74143e77
  0x00007fab74143e60: mov    %rsi,0x1a8(%rdi)
  0x00007fab74143e67: movq   $0x1,0x1b0(%rdi)
  0x00007fab74143e72: jmpq   0x00007fab74143f57
  0x00007fab74143e77: cmpq   $0x0,0x1b8(%rdi)
  0x00007fab74143e82: jne    0x00007fab74143e9b
  0x00007fab74143e84: mov    %rsi,0x1b8(%rdi)
  0x00007fab74143e8b: movq   $0x1,0x1c0(%rdi)
  0x00007fab74143e96: jmpq   0x00007fab74143f57
  0x00007fab74143e9b: cmpq   $0x0,0x1c8(%rdi)
  0x00007fab74143ea6: jne    0x00007fab74143ebf
  0x00007fab74143ea8: mov    %rsi,0x1c8(%rdi)
  0x00007fab74143eaf: movq   $0x1,0x1d0(%rdi)
  0x00007fab74143eba: jmpq   0x00007fab74143f57
  0x00007fab74143ebf: cmpq   $0x0,0x1d8(%rdi)
  0x00007fab74143eca: jne    0x00007fab74143ee3
  0x00007fab74143ecc: mov    %rsi,0x1d8(%rdi)
  0x00007fab74143ed3: movq   $0x1,0x1e0(%rdi)
  0x00007fab74143ede: jmpq   0x00007fab74143f57
  0x00007fab74143ee3: cmpq   $0x0,0x1e8(%rdi)
  0x00007fab74143eee: jne    0x00007fab74143f07
  0x00007fab74143ef0: mov    %rsi,0x1e8(%rdi)
  0x00007fab74143ef7: movq   $0x1,0x1f0(%rdi)
  0x00007fab74143f02: jmpq   0x00007fab74143f57
  0x00007fab74143f07: cmpq   $0x0,0x1f8(%rdi)
  0x00007fab74143f12: jne    0x00007fab74143f2b
  0x00007fab74143f14: mov    %rsi,0x1f8(%rdi)
  0x00007fab74143f1b: movq   $0x1,0x200(%rdi)
  0x00007fab74143f26: jmpq   0x00007fab74143f57
  0x00007fab74143f2b: cmpq   $0x0,0x208(%rdi)
  0x00007fab74143f36: jne    0x00007fab74143f4f
  0x00007fab74143f38: mov    %rsi,0x208(%rdi)
  0x00007fab74143f3f: movq   $0x1,0x210(%rdi)
  0x00007fab74143f4a: jmpq   0x00007fab74143f57
  0x00007fab74143f4f: addq   $0x1,0x188(%rdi)
  0x00007fab74143f57: mov    %rax,%rsi          ;*invokevirtual getException {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@28 (line 902)

  0x00007fab74143f5a: nop
  0x00007fab74143f5b: nop
  0x00007fab74143f5c: nop
  0x00007fab74143f5d: movabs $0xffffffffffffffff,%rax
  0x00007fab74143f67: callq  0x00007fab74047f60  ; OopMap{off=1004}
                                                ;*invokevirtual getException {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@28 (line 902)
                                                ;   {virtual_call}
  0x00007fab74143f6c: cmp    $0x0,%rax
  0x00007fab74143f70: jne    0x00007fab74143f8b
  0x00007fab74143f72: movabs $0x7fab61b90438,%rbx  ;   {metadata(method data for {method} {0x00007fab61abb568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab74143f7c: orl    $0x100,0x218(%rbx)
  0x00007fab74143f86: jmpq   0x00007fab741441d4
  0x00007fab74143f8b: nopl   0x0(%rax,%rax,1)
  0x00007fab74143f90: jmpq   0x00007fab74144243  ;   {no_reloc}
  0x00007fab74143f95: add    %al,(%rax)
  0x00007fab74143f97: add    %al,(%rax)
  0x00007fab74143f99: add    %cl,-0x3eb7f7a8(%rbx)
  0x00007fab74143f9f: jrcxz  0x00007fab74143fa4
  0x00007fab74143fa1: cmp    %rdx,%rbx
  0x00007fab74143fa4: je     0x00007fab74143fd2
  0x00007fab74143faa: mov    0xc(%rdx),%edi
  0x00007fab74143fad: cmp    (%rbx,%rdi,1),%rdx
  0x00007fab74143fb1: je     0x00007fab74143fd2
  0x00007fab74143fb7: cmp    $0x18,%edi
  0x00007fab74143fba: jne    0x00007fab741441b8
  0x00007fab74143fc0: push   %rbx
  0x00007fab74143fc1: push   %rdx
  0x00007fab74143fc2: callq  0x00007fab740fe720  ;   {runtime_call}
  0x00007fab74143fc7: pop    %rbx
  0x00007fab74143fc8: pop    %rdx
  0x00007fab74143fc9: cmp    $0x0,%edx
  0x00007fab74143fcc: je     0x00007fab741441b8
  0x00007fab74143fd2: movabs $0x7fab61b90438,%rbx  ;   {metadata(method data for {method} {0x00007fab61abb568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab74143fdc: mov    0x8(%rax),%edx
  0x00007fab74143fdf: shl    $0x3,%rdx
  0x00007fab74143fe3: cmp    0x230(%rbx),%rdx
  0x00007fab74143fea: jne    0x00007fab74143ff9
  0x00007fab74143fec: addq   $0x1,0x238(%rbx)
  0x00007fab74143ff4: jmpq   0x00007fab741441d4
  0x00007fab74143ff9: cmp    0x240(%rbx),%rdx
  0x00007fab74144000: jne    0x00007fab7414400f
  0x00007fab74144002: addq   $0x1,0x248(%rbx)
  0x00007fab7414400a: jmpq   0x00007fab741441d4
  0x00007fab7414400f: cmp    0x250(%rbx),%rdx
  0x00007fab74144016: jne    0x00007fab74144025
  0x00007fab74144018: addq   $0x1,0x258(%rbx)
  0x00007fab74144020: jmpq   0x00007fab741441d4
  0x00007fab74144025: cmp    0x260(%rbx),%rdx
  0x00007fab7414402c: jne    0x00007fab7414403b
  0x00007fab7414402e: addq   $0x1,0x268(%rbx)
  0x00007fab74144036: jmpq   0x00007fab741441d4
  0x00007fab7414403b: cmp    0x270(%rbx),%rdx
  0x00007fab74144042: jne    0x00007fab74144051
  0x00007fab74144044: addq   $0x1,0x278(%rbx)
  0x00007fab7414404c: jmpq   0x00007fab741441d4
  0x00007fab74144051: cmp    0x280(%rbx),%rdx
  0x00007fab74144058: jne    0x00007fab74144067
  0x00007fab7414405a: addq   $0x1,0x288(%rbx)
  0x00007fab74144062: jmpq   0x00007fab741441d4
  0x00007fab74144067: cmp    0x290(%rbx),%rdx
  0x00007fab7414406e: jne    0x00007fab7414407d
  0x00007fab74144070: addq   $0x1,0x298(%rbx)
  0x00007fab74144078: jmpq   0x00007fab741441d4
  0x00007fab7414407d: cmp    0x2a0(%rbx),%rdx
  0x00007fab74144084: jne    0x00007fab74144093
  0x00007fab74144086: addq   $0x1,0x2a8(%rbx)
  0x00007fab7414408e: jmpq   0x00007fab741441d4
  0x00007fab74144093: cmpq   $0x0,0x230(%rbx)
  0x00007fab7414409e: jne    0x00007fab741440b7
  0x00007fab741440a0: mov    %rdx,0x230(%rbx)
  0x00007fab741440a7: movq   $0x1,0x238(%rbx)
  0x00007fab741440b2: jmpq   0x00007fab741441d4
  0x00007fab741440b7: cmpq   $0x0,0x240(%rbx)
  0x00007fab741440c2: jne    0x00007fab741440db
  0x00007fab741440c4: mov    %rdx,0x240(%rbx)
  0x00007fab741440cb: movq   $0x1,0x248(%rbx)
  0x00007fab741440d6: jmpq   0x00007fab741441d4
  0x00007fab741440db: cmpq   $0x0,0x250(%rbx)
  0x00007fab741440e6: jne    0x00007fab741440ff
  0x00007fab741440e8: mov    %rdx,0x250(%rbx)
  0x00007fab741440ef: movq   $0x1,0x258(%rbx)
  0x00007fab741440fa: jmpq   0x00007fab741441d4
  0x00007fab741440ff: cmpq   $0x0,0x260(%rbx)
  0x00007fab7414410a: jne    0x00007fab74144123
  0x00007fab7414410c: mov    %rdx,0x260(%rbx)
  0x00007fab74144113: movq   $0x1,0x268(%rbx)
  0x00007fab7414411e: jmpq   0x00007fab741441d4
  0x00007fab74144123: cmpq   $0x0,0x270(%rbx)
  0x00007fab7414412e: jne    0x00007fab74144147
  0x00007fab74144130: mov    %rdx,0x270(%rbx)
  0x00007fab74144137: movq   $0x1,0x278(%rbx)
  0x00007fab74144142: jmpq   0x00007fab741441d4
  0x00007fab74144147: cmpq   $0x0,0x280(%rbx)
  0x00007fab74144152: jne    0x00007fab7414416b
  0x00007fab74144154: mov    %rdx,0x280(%rbx)
  0x00007fab7414415b: movq   $0x1,0x288(%rbx)
  0x00007fab74144166: jmpq   0x00007fab741441d4
  0x00007fab7414416b: cmpq   $0x0,0x290(%rbx)
  0x00007fab74144176: jne    0x00007fab7414418f
  0x00007fab74144178: mov    %rdx,0x290(%rbx)
  0x00007fab7414417f: movq   $0x1,0x298(%rbx)
  0x00007fab7414418a: jmpq   0x00007fab741441d4
  0x00007fab7414418f: cmpq   $0x0,0x2a0(%rbx)
  0x00007fab7414419a: jne    0x00007fab741441b3
  0x00007fab7414419c: mov    %rdx,0x2a0(%rbx)
  0x00007fab741441a3: movq   $0x1,0x2a8(%rbx)
  0x00007fab741441ae: jmpq   0x00007fab741441d4
  0x00007fab741441b3: jmpq   0x00007fab741441d4
  0x00007fab741441b8: movabs $0x7fab61b90438,%rbx  ;   {metadata(method data for {method} {0x00007fab61abb568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007fab741441c2: subq   $0x1,0x220(%rbx)
  0x00007fab741441ca: jmpq   0x00007fab7414424d
  0x00007fab741441cf: jmpq   0x00007fab741441d4
  0x00007fab741441d4: mov    %rax,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@31 (line 902)

  0x00007fab741441d7: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00007fab74144256
  0x00007fab741441da: mov    %rsi,%rax
  0x00007fab741441dd: jmpq   0x00007fab74144286
  0x00007fab741441e2: mov    %rdx,0x8(%rsp)
  0x00007fab741441e7: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741441ef: callq  0x00007fab741005e0  ; OopMap{rbx=Oop off=1652}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@-1 (line 866)
                                                ;   {runtime_call}
  0x00007fab741441f4: jmpq   0x00007fab74143be1
  0x00007fab741441f9: mov    %rdx,%rdx
  0x00007fab741441fc: callq  0x00007fab740fc760  ; OopMap{rbx=Oop off=1665}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@7 (line 868)
                                                ;   {runtime_call}
  0x00007fab74144201: jmpq   0x00007fab74143c5f
  0x00007fab74144206: mov    %rsi,0x8(%rsp)
  0x00007fab7414420b: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74144213: callq  0x00007fab741005e0  ; OopMap{rbx=Oop rax=Oop off=1688}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath$JarLoader$1::&lt;init&gt;@-1 (line 869)
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@12 (line 868)
                                                ;   {runtime_call}
  0x00007fab74144218: jmpq   0x00007fab74143ca6
  0x00007fab7414421d: mov    %rsi,0x8(%rsp)
  0x00007fab74144222: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7414422a: callq  0x00007fab741005e0  ; OopMap{rbx=Oop rax=Oop off=1711}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - sun.misc.URLClassPath$JarLoader$1::&lt;init&gt;@6 (line 869)
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@12 (line 868)
                                                ;   {runtime_call}
  0x00007fab7414422f: jmpq   0x00007fab74143d0d
  0x00007fab74144234: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab7414423e: mov    $0xa050f00,%eax
  0x00007fab74144243: callq  0x00007fab740ff5e0  ; OopMap{rax=Oop off=1736}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@31 (line 902)
                                                ;   {runtime_call}
  0x00007fab74144248: jmpq   0x00007fab74143f90
  0x00007fab7414424d: mov    %rax,(%rsp)
  0x00007fab74144251: callq  0x00007fab740fe2c0  ; OopMap{rax=Oop off=1750}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@31 (line 902)
                                                ;   {runtime_call}
  0x00007fab74144256: callq  0x00007fab740fc000  ; OopMap{rsi=Oop off=1755}
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@34 (line 902)
                                                ;   {runtime_call}
  0x00007fab7414425b: nop
  0x00007fab7414425c: nop
  0x00007fab7414425d: mov    0x2c0(%r15),%rax
  0x00007fab74144264: movabs $0x0,%r10
  0x00007fab7414426e: mov    %r10,0x2c0(%r15)
  0x00007fab74144275: movabs $0x0,%r10
  0x00007fab7414427f: mov    %r10,0x2c8(%r15)
  0x00007fab74144286: add    $0x50,%rsp
  0x00007fab7414428a: pop    %rbp
  0x00007fab7414428b: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74144290: hlt    
  0x00007fab74144291: hlt    
  0x00007fab74144292: hlt    
  0x00007fab74144293: hlt    
  0x00007fab74144294: hlt    
  0x00007fab74144295: hlt    
  0x00007fab74144296: hlt    
  0x00007fab74144297: hlt    
  0x00007fab74144298: hlt    
  0x00007fab74144299: hlt    
  0x00007fab7414429a: hlt    
  0x00007fab7414429b: hlt    
  0x00007fab7414429c: hlt    
  0x00007fab7414429d: hlt    
  0x00007fab7414429e: hlt    
  0x00007fab7414429f: hlt    
[Stub Code]
  0x00007fab741442a0: nop                       ;   {no_reloc}
  0x00007fab741442a1: nop
  0x00007fab741442a2: nop
  0x00007fab741442a3: nop
  0x00007fab741442a4: nop
  0x00007fab741442a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741442af: jmpq   0x00007fab741442af  ;   {runtime_call}
  0x00007fab741442b4: nop
  0x00007fab741442b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741442bf: jmpq   0x00007fab741442bf  ;   {runtime_call}
[Exception Handler]
  0x00007fab741442c4: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab741442c9: mov    %rsp,-0x28(%rsp)
  0x00007fab741442ce: sub    $0x80,%rsp
  0x00007fab741442d5: mov    %rax,0x78(%rsp)
  0x00007fab741442da: mov    %rcx,0x70(%rsp)
  0x00007fab741442df: mov    %rdx,0x68(%rsp)
  0x00007fab741442e4: mov    %rbx,0x60(%rsp)
  0x00007fab741442e9: mov    %rbp,0x50(%rsp)
  0x00007fab741442ee: mov    %rsi,0x48(%rsp)
  0x00007fab741442f3: mov    %rdi,0x40(%rsp)
  0x00007fab741442f8: mov    %r8,0x38(%rsp)
  0x00007fab741442fd: mov    %r9,0x30(%rsp)
  0x00007fab74144302: mov    %r10,0x28(%rsp)
  0x00007fab74144307: mov    %r11,0x20(%rsp)
  0x00007fab7414430c: mov    %r12,0x18(%rsp)
  0x00007fab74144311: mov    %r13,0x10(%rsp)
  0x00007fab74144316: mov    %r14,0x8(%rsp)
  0x00007fab7414431b: mov    %r15,(%rsp)
  0x00007fab7414431f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74144329: movabs $0x7fab741442c9,%rsi  ;   {internal_word}
  0x00007fab74144333: mov    %rsp,%rdx
  0x00007fab74144336: and    $0xfffffffffffffff0,%rsp
  0x00007fab7414433a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7414433f: hlt    
[Deopt Handler Code]
  0x00007fab74144340: movabs $0x7fab74144340,%r10  ;   {section_word}
  0x00007fab7414434a: push   %r10
  0x00007fab7414434c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74144351: hlt    
  0x00007fab74144352: hlt    
  0x00007fab74144353: hlt    
  0x00007fab74144354: hlt    
  0x00007fab74144355: hlt    
  0x00007fab74144356: hlt    
  0x00007fab74144357: hlt    
<nmethod compile_id='112' compiler='C1' level='3' entry='0x00007fab74143b80' size='3048' address='0x00007fab741439d0' relocation_offset='312' insts_offset='432' stub_offset='2256' scopes_data_offset='2464' scopes_pcs_offset='2624' dependencies_offset='2976' handler_table_offset='2984' nul_chk_table_offset='3032' metadata_offset='2440' method='sun/misc/URLClassPath$JarLoader ensureOpen ()V' bytes='36' count='508' iicount='508' stamp='0.410'/>
<writer thread='140373948942080'/>
<task_queued compile_id='113' method='java/util/Arrays copyOf ([CI)[C' bytes='19' count='819' iicount='819' level='3' stamp='0.410' comment='tiered' hot_count='819'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/nio/DirectLongBufferU.get  [0x00007fab74144b80, 0x00007fab74144d70]  496 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61ad8698} &apos;get&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;
  # this:     rsi:rsi   = &apos;java/nio/DirectLongBufferU&apos;
  # parm0:    rdx       = int
  #           [sp+0x70]  (sp of caller)
  0x00007fab74144b80: mov    0x8(%rsi),%r10d
  0x00007fab74144b84: shl    $0x3,%r10
  0x00007fab74144b88: cmp    %rax,%r10
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.HotSpotJVMCIRuntime$DelayedInit from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>
  0x00007fab74144b8b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74144b91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74144b9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74144ba0: mov    %eax,-0x14000(%rsp)
  0x00007fab74144ba7: push   %rbp
  0x00007fab74144ba8: sub    $0x60,%rsp
  0x00007fab74144bac: movabs $0x7fab61b96688,%rax  ;   {metadata(method data for {method} {0x00007fab61ad8698} &apos;get&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007fab74144bb6: mov    0xfc(%rax),%edi
  0x00007fab74144bbc: add    $0x8,%edi
  0x00007fab74144bbf: mov    %edi,0xfc(%rax)
  0x00007fab74144bc5: movabs $0x7fab61ad8698,%rax  ;   {metadata({method} {0x00007fab61ad8698} &apos;get&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007fab74144bcf: and    $0x1ff8,%edi
  0x00007fab74144bd5: cmp    $0x0,%edi
  0x00007fab74144bd8: je     0x00007fab74144c5d  ;*getstatic unsafe {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::get@0 (line 253)

  0x00007fab74144bde: mov    %rsi,%rax
  0x00007fab74144be1: movabs $0x7fab61b96688,%rdi  ;   {metadata(method data for {method} {0x00007fab61ad8698} &apos;get&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007fab74144beb: addq   $0x1,0x130(%rdi)
  0x00007fab74144bf3: cmp    0x1c(%rsi),%edx    ; implicit exception: dispatches to 0x00007fab74144c74
  0x00007fab74144bf6: jae    0x00007fab74144c7e  ;*invokevirtual checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::get@6 (line 253)

  0x00007fab74144bfc: mov    %rsi,%rax
  0x00007fab74144bff: movabs $0x7fab61b96688,%rdi  ;   {metadata(method data for {method} {0x00007fab61ad8698} &apos;get&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007fab74144c09: addq   $0x1,0x1c8(%rdi)
  0x00007fab74144c11: movabs $0x7fab61b83220,%rax  ;   {metadata(method data for {method} {0x00007fab61ad8530} &apos;ix&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007fab74144c1b: mov    0xfc(%rax),%edi
  0x00007fab74144c21: add    $0x8,%edi
  0x00007fab74144c24: mov    %edi,0xfc(%rax)
  0x00007fab74144c2a: movabs $0x7fab61ad8530,%rax  ;   {metadata({method} {0x00007fab61ad8530} &apos;ix&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007fab74144c34: and    $0x7ffff8,%edi
  0x00007fab74144c3a: cmp    $0x0,%edi
  0x00007fab74144c3d: je     0x00007fab74144c87
  0x00007fab74144c43: mov    0x10(%rsi),%rax    ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::ix@1 (line 245)
                                                ; - java.nio.DirectLongBufferU::get@9 (line 253)

  0x00007fab74144c47: movslq %edx,%rdx
  0x00007fab74144c4a: mov    (%rax,%rdx,8),%rsi
  0x00007fab74144c4e: mov    %rsi,%rax
  0x00007fab74144c51: add    $0x60,%rsp
  0x00007fab74144c55: pop    %rbp
  0x00007fab74144c56: test   %eax,0x1b69d4a4(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74144c5c: retq   
  0x00007fab74144c5d: mov    %rax,0x8(%rsp)
  0x00007fab74144c62: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74144c6a: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=239}
                                                ;*synchronization entry
                                                ; - java.nio.DirectLongBufferU::get@-1 (line 253)
                                                ;   {runtime_call}
  0x00007fab74144c6f: jmpq   0x00007fab74144bde
  0x00007fab74144c74: callq  0x00007fab740fc000  ; OopMap{rsi=Oop off=249}
                                                ;*invokevirtual checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::get@6 (line 253)
                                                ;   {runtime_call}
  0x00007fab74144c79: callq  0x00007fab740fc000  ; OopMap{rsi=Oop off=254}
                                                ;*invokevirtual checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::get@6 (line 253)
                                                ;   {runtime_call}
  0x00007fab74144c7e: mov    %rdx,(%rsp)
  0x00007fab74144c82: callq  0x00007fab740fbb80  ; OopMap{rsi=Oop off=263}
                                                ;*invokevirtual checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::get@6 (line 253)
                                                ;   {runtime_call}
  0x00007fab74144c87: mov    %rax,0x8(%rsp)
  0x00007fab74144c8c: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74144c94: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=281}
                                                ;*synchronization entry
                                                ; - java.nio.DirectLongBufferU::ix@-1 (line 245)
                                                ; - java.nio.DirectLongBufferU::get@9 (line 253)
                                                ;   {runtime_call}
  0x00007fab74144c99: jmp    0x00007fab74144c43
  0x00007fab74144c9b: nop
  0x00007fab74144c9c: nop
  0x00007fab74144c9d: mov    0x2c0(%r15),%rax
  0x00007fab74144ca4: movabs $0x0,%r10
  0x00007fab74144cae: mov    %r10,0x2c0(%r15)
  0x00007fab74144cb5: movabs $0x0,%r10
  0x00007fab74144cbf: mov    %r10,0x2c8(%r15)
  0x00007fab74144cc6: add    $0x60,%rsp
  0x00007fab74144cca: pop    %rbp
  0x00007fab74144ccb: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74144cd0: hlt    
  0x00007fab74144cd1: hlt    
  0x00007fab74144cd2: hlt    
  0x00007fab74144cd3: hlt    
  0x00007fab74144cd4: hlt    
  0x00007fab74144cd5: hlt    
  0x00007fab74144cd6: hlt    
  0x00007fab74144cd7: hlt    
  0x00007fab74144cd8: hlt    
  0x00007fab74144cd9: hlt    
  0x00007fab74144cda: hlt    
  0x00007fab74144cdb: hlt    
  0x00007fab74144cdc: hlt    
  0x00007fab74144cdd: hlt    
  0x00007fab74144cde: hlt    
  0x00007fab74144cdf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74144ce0: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74144ce5: mov    %rsp,-0x28(%rsp)
  0x00007fab74144cea: sub    $0x80,%rsp
  0x00007fab74144cf1: mov    %rax,0x78(%rsp)
  0x00007fab74144cf6: mov    %rcx,0x70(%rsp)
  0x00007fab74144cfb: mov    %rdx,0x68(%rsp)
  0x00007fab74144d00: mov    %rbx,0x60(%rsp)
  0x00007fab74144d05: mov    %rbp,0x50(%rsp)
  0x00007fab74144d0a: mov    %rsi,0x48(%rsp)
  0x00007fab74144d0f: mov    %rdi,0x40(%rsp)
  0x00007fab74144d14: mov    %r8,0x38(%rsp)
  0x00007fab74144d19: mov    %r9,0x30(%rsp)
  0x00007fab74144d1e: mov    %r10,0x28(%rsp)
  0x00007fab74144d23: mov    %r11,0x20(%rsp)
  0x00007fab74144d28: mov    %r12,0x18(%rsp)
  0x00007fab74144d2d: mov    %r13,0x10(%rsp)
  0x00007fab74144d32: mov    %r14,0x8(%rsp)
  0x00007fab74144d37: mov    %r15,(%rsp)
  0x00007fab74144d3b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74144d45: movabs $0x7fab74144ce5,%rsi  ;   {internal_word}
  0x00007fab74144d4f: mov    %rsp,%rdx
  0x00007fab74144d52: and    $0xfffffffffffffff0,%rsp
  0x00007fab74144d56: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74144d5b: hlt    
[Deopt Handler Code]
  0x00007fab74144d5c: movabs $0x7fab74144d5c,%r10  ;   {section_word}
  0x00007fab74144d66: push   %r10
  0x00007fab74144d68: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74144d6d: hlt    
  0x00007fab74144d6e: hlt    
  0x00007fab74144d6f: hlt    
<nmethod compile_id='109' compiler='C1' level='3' entry='0x00007fab74144b80' size='1152' address='0x00007fab74144a10' relocation_offset='312' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='960' dependencies_offset='1120' nul_chk_table_offset='1128' oops_offset='864' metadata_offset='872' method='java/nio/DirectLongBufferU get (I)J' bytes='16' count='393' iicount='393' stamp='0.411'/>
<writer thread='140373948942080'/>
<task_queued compile_id='114' method='java/util/concurrent/ConcurrentHashMap putVal (Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' bytes='362' count='384' backedge_count='28' iicount='384' level='3' stamp='0.411' comment='tiered' hot_count='384'/>
<task_queued compile_id='115' method='java/util/zip/ZipFile access$400 (Ljava/util/zip/ZipFile;)J' bytes='5' count='384' iicount='384' level='3' stamp='0.411' comment='tiered' hot_count='384'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/Arrays.copyOf  [0x00007fab74145060, 0x00007fab74145388]  808 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab619ce750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  #           [sp+0x70]  (sp of caller)
  0x00007fab74145060: mov    %eax,-0x14000(%rsp)
  0x00007fab74145067: push   %rbp
  0x00007fab74145068: sub    $0x60,%rsp
  0x00007fab7414506c: mov    %rsi,%r8
  0x00007fab7414506f: mov    %rdx,%r9
  0x00007fab74145072: movabs $0x7fab61af7188,%rbx  ;   {metadata(method data for {method} {0x00007fab619ce750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7414507c: mov    0xfc(%rbx),%edx
  0x00007fab74145082: add    $0x8,%edx
  0x00007fab74145085: mov    %edx,0xfc(%rbx)
  0x00007fab7414508b: movabs $0x7fab619ce750,%rbx  ;   {metadata({method} {0x00007fab619ce750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab74145095: and    $0x1ff8,%edx
  0x00007fab7414509b: cmp    $0x0,%edx
  0x00007fab7414509e: je     0x00007fab7414524a  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@0 (line 3332)

  0x00007fab741450a4: mov    %r9,%rbx
  0x00007fab741450a7: movabs $0x7c00001f8,%rdx  ;   {metadata({type array char})}
  0x00007fab741450b1: movslq %ebx,%rbx
  0x00007fab741450b4: mov    %rbx,%rdi
  0x00007fab741450b7: cmp    $0xffffff,%rbx
  0x00007fab741450be: ja     0x00007fab74145261
  0x00007fab741450c4: movabs $0x17,%rsi
  0x00007fab741450ce: lea    (%rsi,%rbx,2),%rsi
  0x00007fab741450d2: and    $0xfffffffffffffff8,%rsi
  0x00007fab741450d6: mov    0x60(%r15),%rax
  0x00007fab741450da: lea    (%rax,%rsi,1),%rsi
  0x00007fab741450de: cmp    0x70(%r15),%rsi
  0x00007fab741450e2: ja     0x00007fab74145261
  0x00007fab741450e8: mov    %rsi,0x60(%r15)
  0x00007fab741450ec: sub    %rax,%rsi
  0x00007fab741450ef: movq   $0x1,(%rax)
  0x00007fab741450f6: mov    %rdx,%rcx
  0x00007fab741450f9: shr    $0x3,%rcx
  0x00007fab741450fd: mov    %ecx,0x8(%rax)
  0x00007fab74145100: mov    %ebx,0xc(%rax)
  0x00007fab74145103: sub    $0x10,%rsi
  0x00007fab74145107: je     0x00007fab7414511e
  0x00007fab7414510d: xor    %rbx,%rbx
  0x00007fab74145110: shr    $0x3,%rsi
  0x00007fab74145114: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fab74145119: dec    %rsi
  0x00007fab7414511c: jne    0x00007fab74145114  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3332)

  0x00007fab7414511e: mov    0xc(%r8),%esi      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; implicit exception: dispatches to 0x00007fab7414526b
  0x00007fab74145122: movabs $0x7fab61af7188,%rdx  ;   {metadata(method data for {method} {0x00007fab619ce750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab7414512c: addq   $0x1,0x130(%rdx)
  0x00007fab74145134: movabs $0x7fab61a9c058,%rdx  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab7414513e: mov    0xfc(%rdx),%ecx
  0x00007fab74145144: add    $0x8,%ecx
  0x00007fab74145147: mov    %ecx,0xfc(%rdx)
  0x00007fab7414514d: movabs $0x7fab619a58b8,%rdx  ;   {metadata({method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab74145157: and    $0x7ffff8,%ecx
  0x00007fab7414515d: cmp    $0x0,%ecx
  0x00007fab74145160: je     0x00007fab74145270
  0x00007fab74145166: cmp    %r9d,%esi
  0x00007fab74145169: movabs $0x7fab61a9c058,%rdx  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab74145173: movabs $0x130,%rcx
  0x00007fab7414517d: jg     0x00007fab7414518d
  0x00007fab74145183: movabs $0x140,%rcx
  0x00007fab7414518d: mov    (%rdx,%rcx,1),%rdi
  0x00007fab74145191: lea    0x1(%rdi),%rdi
  0x00007fab74145195: mov    %rdi,(%rdx,%rcx,1)
  0x00007fab74145199: jg     0x00007fab741451b2  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)

  0x00007fab7414519f: movabs $0x7fab61a9c058,%rdx  ;   {metadata(method data for {method} {0x00007fab619a58b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fab741451a9: incl   0x150(%rdx)
  0x00007fab741451af: mov    %rsi,%r9           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)

  0x00007fab741451b2: movabs $0x7fab61af7188,%rsi  ;   {metadata(method data for {method} {0x00007fab619ce750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fab741451bc: addq   $0x1,0x140(%rsi)
  0x00007fab741451c4: mov    %r8,%rsi
  0x00007fab741451c7: mov    $0x0,%edx
  0x00007fab741451cc: mov    %rax,%rcx
  0x00007fab741451cf: mov    $0x0,%r8d
  0x00007fab741451d5: mov    %rax,0x50(%rsp)
  0x00007fab741451da: lea    (%rdx,%r9,1),%rdi
  0x00007fab741451de: cmp    0xc(%rsi),%edi
  0x00007fab741451e1: ja     0x00007fab74145287
  0x00007fab741451e7: lea    (%r8,%r9,1),%rdi
  0x00007fab741451eb: cmp    0xc(%rcx),%edi
  0x00007fab741451ee: ja     0x00007fab74145287
  0x00007fab741451f4: test   %r9d,%r9d
  0x00007fab741451f7: jl     0x00007fab74145287
  0x00007fab741451fd: je     0x00007fab74145239
  0x00007fab74145203: movslq %edx,%rdx
  0x00007fab74145206: movslq %r8d,%r8
  0x00007fab74145209: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007fab7414520e: lea    0x10(%rcx,%r8,2),%rsi
  0x00007fab74145213: mov    %r9,%rdx
  0x00007fab74145216: test   $0xf,%esp
  0x00007fab7414521c: je     0x00007fab74145234
  0x00007fab74145222: sub    $0x8,%rsp
  0x00007fab74145226: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007fab7414522b: add    $0x8,%rsp
  0x00007fab7414522f: jmpq   0x00007fab74145239
  0x00007fab74145234: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ;   {runtime_call}
  0x00007fab74145239: mov    0x50(%rsp),%rax
  0x00007fab7414523e: add    $0x60,%rsp
  0x00007fab74145242: pop    %rbp
  0x00007fab74145243: test   %eax,0x1b69ceb7(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74145249: retq   
  0x00007fab7414524a: mov    %rbx,0x8(%rsp)
  0x00007fab7414524f: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74145257: callq  0x00007fab741005e0  ; OopMap{r8=Oop off=508}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ;   {runtime_call}
  0x00007fab7414525c: jmpq   0x00007fab741450a4
  0x00007fab74145261: callq  0x00007fab740fd020  ; OopMap{r8=Oop off=518}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ;   {runtime_call}
  0x00007fab74145266: jmpq   0x00007fab7414511e
  0x00007fab7414526b: callq  0x00007fab740fc000  ; OopMap{r8=Oop rax=Oop off=528}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ;   {runtime_call}
  0x00007fab74145270: mov    %rdx,0x8(%rsp)
  0x00007fab74145275: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7414527d: callq  0x00007fab741005e0  ; OopMap{r8=Oop rax=Oop off=546}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ;   {runtime_call}
  0x00007fab74145282: jmpq   0x00007fab74145166
  0x00007fab74145287: callq  0x00007fab74048160  ; OopMap{[80]=Oop off=556}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ;   {static_call}
  0x00007fab7414528c: jmp    0x00007fab74145239
  0x00007fab7414528e: nop
  0x00007fab7414528f: nop
  0x00007fab74145290: mov    0x2c0(%r15),%rax
  0x00007fab74145297: movabs $0x0,%r10
  0x00007fab741452a1: mov    %r10,0x2c0(%r15)
  0x00007fab741452a8: movabs $0x0,%r10
  0x00007fab741452b2: mov    %r10,0x2c8(%r15)
  0x00007fab741452b9: add    $0x60,%rsp
  0x00007fab741452bd: pop    %rbp
  0x00007fab741452be: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab741452c3: hlt    
  0x00007fab741452c4: hlt    
  0x00007fab741452c5: hlt    
  0x00007fab741452c6: hlt    
  0x00007fab741452c7: hlt    
  0x00007fab741452c8: hlt    
  0x00007fab741452c9: hlt    
  0x00007fab741452ca: hlt    
  0x00007fab741452cb: hlt    
  0x00007fab741452cc: hlt    
  0x00007fab741452cd: hlt    
  0x00007fab741452ce: hlt    
  0x00007fab741452cf: hlt    
  0x00007fab741452d0: hlt    
  0x00007fab741452d1: hlt    
  0x00007fab741452d2: hlt    
  0x00007fab741452d3: hlt    
  0x00007fab741452d4: hlt    
  0x00007fab741452d5: hlt    
  0x00007fab741452d6: hlt    
  0x00007fab741452d7: hlt    
  0x00007fab741452d8: hlt    
  0x00007fab741452d9: hlt    
  0x00007fab741452da: hlt    
  0x00007fab741452db: hlt    
  0x00007fab741452dc: hlt    
  0x00007fab741452dd: hlt    
  0x00007fab741452de: hlt    
  0x00007fab741452df: hlt    
[Stub Code]
  0x00007fab741452e0: nop                       ;   {no_reloc}
  0x00007fab741452e1: nop
  0x00007fab741452e2: nop
  0x00007fab741452e3: nop
  0x00007fab741452e4: nop
  0x00007fab741452e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741452ef: jmpq   0x00007fab741452ef  ;   {runtime_call}
[Exception Handler]
  0x00007fab741452f4: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab741452f9: mov    %rsp,-0x28(%rsp)
  0x00007fab741452fe: sub    $0x80,%rsp
  0x00007fab74145305: mov    %rax,0x78(%rsp)
  0x00007fab7414530a: mov    %rcx,0x70(%rsp)
  0x00007fab7414530f: mov    %rdx,0x68(%rsp)
  0x00007fab74145314: mov    %rbx,0x60(%rsp)
  0x00007fab74145319: mov    %rbp,0x50(%rsp)
  0x00007fab7414531e: mov    %rsi,0x48(%rsp)
  0x00007fab74145323: mov    %rdi,0x40(%rsp)
  0x00007fab74145328: mov    %r8,0x38(%rsp)
  0x00007fab7414532d: mov    %r9,0x30(%rsp)
  0x00007fab74145332: mov    %r10,0x28(%rsp)
  0x00007fab74145337: mov    %r11,0x20(%rsp)
  0x00007fab7414533c: mov    %r12,0x18(%rsp)
  0x00007fab74145341: mov    %r13,0x10(%rsp)
  0x00007fab74145346: mov    %r14,0x8(%rsp)
  0x00007fab7414534b: mov    %r15,(%rsp)
  0x00007fab7414534f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74145359: movabs $0x7fab741452f9,%rsi  ;   {internal_word}
  0x00007fab74145363: mov    %rsp,%rdx
  0x00007fab74145366: and    $0xfffffffffffffff0,%rsp
  0x00007fab7414536a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7414536f: hlt    
[Deopt Handler Code]
  0x00007fab74145370: movabs $0x7fab74145370,%r10  ;   {section_word}
  0x00007fab7414537a: push   %r10
  0x00007fab7414537c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74145381: hlt    
  0x00007fab74145382: hlt    
  0x00007fab74145383: hlt    
  0x00007fab74145384: hlt    
  0x00007fab74145385: hlt    
  0x00007fab74145386: hlt    
  0x00007fab74145387: hlt    
<nmethod compile_id='113' compiler='C1' level='3' entry='0x00007fab74145060' size='1584' address='0x00007fab74144ed0' relocation_offset='312' insts_offset='400' stub_offset='1040' scopes_data_offset='1224' scopes_pcs_offset='1352' dependencies_offset='1560' nul_chk_table_offset='1568' metadata_offset='1208' method='java/util/Arrays copyOf ([CI)[C' bytes='19' count='832' iicount='832' stamp='0.412'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.common.InitTimer from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.hotspot.CompilerToVM from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='116' method='java/lang/String equalsIgnoreCase (Ljava/lang/String;)Z' bytes='48' count='384' iicount='384' level='3' stamp='0.412' comment='tiered' hot_count='384'/>
[Loaded jdk.vm.ci.hotspot.HotSpotVMConfigStore from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.putVal  [0x00007fab74145be0, 0x00007fab74147ed8]  8952 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8        = boolean
  #           [sp+0x110]  (sp of caller)
  0x00007fab74145be0: mov    0x8(%rsi),%r10d
  0x00007fab74145be4: shl    $0x3,%r10
  0x00007fab74145be8: cmp    %rax,%r10
  0x00007fab74145beb: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74145bf1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74145bfc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74145c00: mov    %eax,-0x14000(%rsp)
  0x00007fab74145c07: push   %rbp
  0x00007fab74145c08: sub    $0x100,%rsp
  0x00007fab74145c0f: mov    %rsi,0x88(%rsp)
  0x00007fab74145c17: mov    %rdx,0x90(%rsp)
  0x00007fab74145c1f: mov    %rcx,0x98(%rsp)
  0x00007fab74145c27: mov    %r8d,0xa0(%rsp)
  0x00007fab74145c2f: movabs $0x7fab61b96940,%rdi  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74145c39: mov    0xfc(%rdi),%ebx
  0x00007fab74145c3f: add    $0x8,%ebx
  0x00007fab74145c42: mov    %ebx,0xfc(%rdi)
  0x00007fab74145c48: movabs $0x7fab61a73e58,%rdi  ;   {metadata({method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74145c52: and    $0x1ff8,%ebx
  0x00007fab74145c58: cmp    $0x0,%ebx
  0x00007fab74145c5b: je     0x00007fab74147b8b  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@0 (line 1011)

  0x00007fab74145c61: cmp    $0x0,%rdx
  0x00007fab74145c65: movabs $0x7fab61b96940,%rdi  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74145c6f: movabs $0x130,%rbx
  0x00007fab74145c79: je     0x00007fab74145c89
  0x00007fab74145c7f: movabs $0x140,%rbx
  0x00007fab74145c89: mov    (%rdi,%rbx,1),%rax
  0x00007fab74145c8d: lea    0x1(%rax),%rax
  0x00007fab74145c91: mov    %rax,(%rdi,%rbx,1)
  0x00007fab74145c95: je     0x00007fab74147ab5  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@1 (line 1011)

  0x00007fab74145c9b: cmp    $0x0,%rcx
  0x00007fab74145c9f: movabs $0x7fab61b96940,%rdi  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74145ca9: movabs $0x150,%rbx
  0x00007fab74145cb3: jne    0x00007fab74145cc3
  0x00007fab74145cb9: movabs $0x160,%rbx
  0x00007fab74145cc3: mov    (%rdi,%rbx,1),%rax
  0x00007fab74145cc7: lea    0x1(%rax),%rax
  0x00007fab74145ccb: mov    %rax,(%rdi,%rbx,1)
  0x00007fab74145ccf: je     0x00007fab74147ab5  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@5 (line 1011)

  0x00007fab74145cd5: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00007fab74147ba2
  0x00007fab74145cd8: mov    %rdx,%rdi
  0x00007fab74145cdb: movabs $0x7fab61b96940,%rbx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74145ce5: mov    0x8(%rdi),%edi
  0x00007fab74145ce8: shl    $0x3,%rdi
  0x00007fab74145cec: cmp    0x190(%rbx),%rdi
  0x00007fab74145cf3: jne    0x00007fab74145d02
  0x00007fab74145cf5: addq   $0x1,0x198(%rbx)
  0x00007fab74145cfd: jmpq   0x00007fab74145ec4
  0x00007fab74145d02: cmp    0x1a0(%rbx),%rdi
  0x00007fab74145d09: jne    0x00007fab74145d18
  0x00007fab74145d0b: addq   $0x1,0x1a8(%rbx)
  0x00007fab74145d13: jmpq   0x00007fab74145ec4
  0x00007fab74145d18: cmp    0x1b0(%rbx),%rdi
  0x00007fab74145d1f: jne    0x00007fab74145d2e
  0x00007fab74145d21: addq   $0x1,0x1b8(%rbx)
  0x00007fab74145d29: jmpq   0x00007fab74145ec4
  0x00007fab74145d2e: cmp    0x1c0(%rbx),%rdi
  0x00007fab74145d35: jne    0x00007fab74145d44
  0x00007fab74145d37: addq   $0x1,0x1c8(%rbx)
  0x00007fab74145d3f: jmpq   0x00007fab74145ec4
  0x00007fab74145d44: cmp    0x1d0(%rbx),%rdi
  0x00007fab74145d4b: jne    0x00007fab74145d5a
  0x00007fab74145d4d: addq   $0x1,0x1d8(%rbx)
  0x00007fab74145d55: jmpq   0x00007fab74145ec4
  0x00007fab74145d5a: cmp    0x1e0(%rbx),%rdi
  0x00007fab74145d61: jne    0x00007fab74145d70
  0x00007fab74145d63: addq   $0x1,0x1e8(%rbx)
  0x00007fab74145d6b: jmpq   0x00007fab74145ec4
  0x00007fab74145d70: cmp    0x1f0(%rbx),%rdi
  0x00007fab74145d77: jne    0x00007fab74145d86
  0x00007fab74145d79: addq   $0x1,0x1f8(%rbx)
  0x00007fab74145d81: jmpq   0x00007fab74145ec4
  0x00007fab74145d86: cmp    0x200(%rbx),%rdi
  0x00007fab74145d8d: jne    0x00007fab74145d9c
  0x00007fab74145d8f: addq   $0x1,0x208(%rbx)
  0x00007fab74145d97: jmpq   0x00007fab74145ec4
  0x00007fab74145d9c: cmpq   $0x0,0x190(%rbx)
  0x00007fab74145da7: jne    0x00007fab74145dc0
  0x00007fab74145da9: mov    %rdi,0x190(%rbx)
  0x00007fab74145db0: movq   $0x1,0x198(%rbx)
  0x00007fab74145dbb: jmpq   0x00007fab74145ec4
  0x00007fab74145dc0: cmpq   $0x0,0x1a0(%rbx)
  0x00007fab74145dcb: jne    0x00007fab74145de4
  0x00007fab74145dcd: mov    %rdi,0x1a0(%rbx)
  0x00007fab74145dd4: movq   $0x1,0x1a8(%rbx)
  0x00007fab74145ddf: jmpq   0x00007fab74145ec4
  0x00007fab74145de4: cmpq   $0x0,0x1b0(%rbx)
  0x00007fab74145def: jne    0x00007fab74145e08
  0x00007fab74145df1: mov    %rdi,0x1b0(%rbx)
  0x00007fab74145df8: movq   $0x1,0x1b8(%rbx)
  0x00007fab74145e03: jmpq   0x00007fab74145ec4
  0x00007fab74145e08: cmpq   $0x0,0x1c0(%rbx)
  0x00007fab74145e13: jne    0x00007fab74145e2c
  0x00007fab74145e15: mov    %rdi,0x1c0(%rbx)
  0x00007fab74145e1c: movq   $0x1,0x1c8(%rbx)
  0x00007fab74145e27: jmpq   0x00007fab74145ec4
  0x00007fab74145e2c: cmpq   $0x0,0x1d0(%rbx)
  0x00007fab74145e37: jne    0x00007fab74145e50
  0x00007fab74145e39: mov    %rdi,0x1d0(%rbx)
  0x00007fab74145e40: movq   $0x1,0x1d8(%rbx)
  0x00007fab74145e4b: jmpq   0x00007fab74145ec4
  0x00007fab74145e50: cmpq   $0x0,0x1e0(%rbx)
  0x00007fab74145e5b: jne    0x00007fab74145e74
  0x00007fab74145e5d: mov    %rdi,0x1e0(%rbx)
  0x00007fab74145e64: movq   $0x1,0x1e8(%rbx)
  0x00007fab74145e6f: jmpq   0x00007fab74145ec4
  0x00007fab74145e74: cmpq   $0x0,0x1f0(%rbx)
  0x00007fab74145e7f: jne    0x00007fab74145e98
  0x00007fab74145e81: mov    %rdi,0x1f0(%rbx)
  0x00007fab74145e88: movq   $0x1,0x1f8(%rbx)
  0x00007fab74145e93: jmpq   0x00007fab74145ec4
  0x00007fab74145e98: cmpq   $0x0,0x200(%rbx)
  0x00007fab74145ea3: jne    0x00007fab74145ebc
  0x00007fab74145ea5: mov    %rdi,0x200(%rbx)
  0x00007fab74145eac: movq   $0x1,0x208(%rbx)
  0x00007fab74145eb7: jmpq   0x00007fab74145ec4
  0x00007fab74145ebc: addq   $0x1,0x180(%rbx)
  0x00007fab74145ec4: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)

  0x00007fab74145ec7: nop
  0x00007fab74145ec8: nop
  0x00007fab74145ec9: nop
  0x00007fab74145eca: nop
  0x00007fab74145ecb: nop
  0x00007fab74145ecc: nop
  0x00007fab74145ecd: movabs $0xffffffffffffffff,%rax
  0x00007fab74145ed7: callq  0x00007fab74047f60  ; OopMap{[136]=Oop [152]=Oop [144]=Oop off=764}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)
                                                ;   {virtual_call}
  0x00007fab74145edc: movabs $0x7fab61b96940,%rsi  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74145ee6: addq   $0x1,0x218(%rsi)
  0x00007fab74145eee: movabs $0x7fab61b95b70,%rsi  ;   {metadata(method data for {method} {0x00007fab61a72bb0} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74145ef8: mov    0xfc(%rsi),%edi
  0x00007fab74145efe: add    $0x8,%edi
  0x00007fab74145f01: mov    %edi,0xfc(%rsi)
  0x00007fab74145f07: movabs $0x7fab61a72bb0,%rsi  ;   {metadata({method} {0x00007fab61a72bb0} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74145f11: and    $0x7ffff8,%edi
  0x00007fab74145f17: cmp    $0x0,%edi
  0x00007fab74145f1a: je     0x00007fab74147ba7
  0x00007fab74145f20: mov    %rax,%rsi
  0x00007fab74145f23: shr    $0x10,%esi
  0x00007fab74145f26: xor    %rax,%rsi
  0x00007fab74145f29: and    $0x7fffffff,%esi
  0x00007fab74145f2f: mov    %esi,0xa8(%rsp)
  0x00007fab74145f36: mov    0x88(%rsp),%rdi
  0x00007fab74145f3e: mov    0x28(%rdi),%ebx
  0x00007fab74145f41: shl    $0x3,%rbx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@29 (line 1014)

  0x00007fab74145f45: mov    $0x0,%eax          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@34 (line 1016)

  0x00007fab74145f4a: mov    %eax,0xa4(%rsp)
  0x00007fab74145f51: nopl   0x0(%rax)
  0x00007fab74145f58: cmp    $0x0,%rbx
  0x00007fab74145f5c: movabs $0x7fab61b96940,%r9  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74145f66: movabs $0x228,%r11
  0x00007fab74145f70: je     0x00007fab74145f80
  0x00007fab74145f76: movabs $0x238,%r11
  0x00007fab74145f80: mov    (%r9,%r11,1),%r13
  0x00007fab74145f84: lea    0x1(%r13),%r13
  0x00007fab74145f88: mov    %r13,(%r9,%r11,1)
  0x00007fab74145f8c: je     0x00007fab74145fd0  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@36 (line 1016)

  0x00007fab74145f92: mov    0xc(%rbx),%r9d     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@41 (line 1016)
                                                ; implicit exception: dispatches to 0x00007fab74147bbe
  0x00007fab74145f96: cmp    $0x0,%r9d
  0x00007fab74145f9a: movabs $0x7fab61b96940,%r11  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74145fa4: movabs $0x248,%r13
  0x00007fab74145fae: jne    0x00007fab74145fbe
  0x00007fab74145fb4: movabs $0x258,%r13
  0x00007fab74145fbe: mov    (%r11,%r13,1),%r14
  0x00007fab74145fc2: lea    0x1(%r14),%r14
  0x00007fab74145fc6: mov    %r14,(%r11,%r13,1)
  0x00007fab74145fca: jne    0x00007fab74146020  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@45 (line 1016)

  0x00007fab74145fd0: mov    %rdi,%rbx
  0x00007fab74145fd3: movabs $0x7fab61b96940,%r9  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74145fdd: addq   $0x1,0x268(%r9)
  0x00007fab74145fe5: mov    %rdi,%rsi          ;*invokespecial initTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@49 (line 1017)

  0x00007fab74145fe8: nop
  0x00007fab74145fe9: nop
  0x00007fab74145fea: nop
  0x00007fab74145feb: nop
  0x00007fab74145fec: nop
  0x00007fab74145fed: nop
  0x00007fab74145fee: nop
  0x00007fab74145fef: callq  0x00007fab74047d60  ; OopMap{[152]=Oop [144]=Oop [136]=Oop off=1044}
                                                ;*invokespecial initTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@49 (line 1017)
                                                ;   {optimized virtual_call}
  0x00007fab74145ff4: movabs $0x7fab61b96940,%rcx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74145ffe: incl   0x278(%rcx)
  0x00007fab74146004: mov    0xa4(%rsp),%esi
  0x00007fab7414600b: mov    0xa0(%rsp),%r8d
  0x00007fab74146013: mov    0x98(%rsp),%rcx
  0x00007fab7414601b: jmpq   0x00007fab741478fd  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@54 (line 1017)

  0x00007fab74146020: dec    %r9d
  0x00007fab74146023: and    0xa8(%rsp),%r9d
  0x00007fab7414602b: mov    %r9d,0xc8(%rsp)
  0x00007fab74146033: movabs $0x7fab61b96940,%rcx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7414603d: addq   $0x1,0x290(%rcx)
  0x00007fab74146045: movabs $0x7fab61b827e0,%rcx  ;   {metadata(method data for {method} {0x00007fab61a72f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7414604f: mov    0xfc(%rcx),%edx
  0x00007fab74146055: add    $0x8,%edx
  0x00007fab74146058: mov    %edx,0xfc(%rcx)
  0x00007fab7414605e: movabs $0x7fab61a72f90,%rcx  ;   {metadata({method} {0x00007fab61a72f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146068: and    $0x7ffff8,%edx
  0x00007fab7414606e: cmp    $0x0,%edx
  0x00007fab74146071: je     0x00007fab74147bc3
  0x00007fab74146077: movslq %r9d,%rdx
  0x00007fab7414607a: mov    $0x2,%ecx
  0x00007fab7414607f: shl    %cl,%rdx
  0x00007fab74146082: mov    %rdx,%r8
  0x00007fab74146085: movabs $0x10,%r10
  0x00007fab7414608f: add    %r10,%r8
  0x00007fab74146092: mov    (%rbx,%r8,1),%edx
  0x00007fab74146096: shl    $0x3,%rdx
  0x00007fab7414609a: cmp    $0x0,%rdx
  0x00007fab7414609e: jne    0x00007fab741460b9
  0x00007fab741460a0: movabs $0x7fab61b827e0,%rsi  ;   {metadata(method data for {method} {0x00007fab61a72f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741460aa: orl    $0x100,0x1c0(%rsi)
  0x00007fab741460b4: jmpq   0x00007fab741462d6
  0x00007fab741460b9: movabs $0x7c0033a30,%rax  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fab741460c3: mov    0x8(%rdx),%esi
  0x00007fab741460c6: shl    $0x3,%rsi
  0x00007fab741460ca: cmp    0x30(%rsi),%rax
  0x00007fab741460ce: jne    0x00007fab741462ba
  0x00007fab741460d4: movabs $0x7fab61b827e0,%rsi  ;   {metadata(method data for {method} {0x00007fab61a72f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741460de: mov    0x8(%rdx),%eax
  0x00007fab741460e1: shl    $0x3,%rax
  0x00007fab741460e5: cmp    0x1d8(%rsi),%rax
  0x00007fab741460ec: jne    0x00007fab741460fb
  0x00007fab741460ee: addq   $0x1,0x1e0(%rsi)
  0x00007fab741460f6: jmpq   0x00007fab741462d6
  0x00007fab741460fb: cmp    0x1e8(%rsi),%rax
  0x00007fab74146102: jne    0x00007fab74146111
  0x00007fab74146104: addq   $0x1,0x1f0(%rsi)
  0x00007fab7414610c: jmpq   0x00007fab741462d6
  0x00007fab74146111: cmp    0x1f8(%rsi),%rax
  0x00007fab74146118: jne    0x00007fab74146127
  0x00007fab7414611a: addq   $0x1,0x200(%rsi)
  0x00007fab74146122: jmpq   0x00007fab741462d6
  0x00007fab74146127: cmp    0x208(%rsi),%rax
  0x00007fab7414612e: jne    0x00007fab7414613d
  0x00007fab74146130: addq   $0x1,0x210(%rsi)
  0x00007fab74146138: jmpq   0x00007fab741462d6
  0x00007fab7414613d: cmp    0x218(%rsi),%rax
  0x00007fab74146144: jne    0x00007fab74146153
  0x00007fab74146146: addq   $0x1,0x220(%rsi)
  0x00007fab7414614e: jmpq   0x00007fab741462d6
  0x00007fab74146153: cmp    0x228(%rsi),%rax
  0x00007fab7414615a: jne    0x00007fab74146169
  0x00007fab7414615c: addq   $0x1,0x230(%rsi)
  0x00007fab74146164: jmpq   0x00007fab741462d6
  0x00007fab74146169: cmp    0x238(%rsi),%rax
  0x00007fab74146170: jne    0x00007fab7414617f
  0x00007fab74146172: addq   $0x1,0x240(%rsi)
  0x00007fab7414617a: jmpq   0x00007fab741462d6
  0x00007fab7414617f: cmp    0x248(%rsi),%rax
  0x00007fab74146186: jne    0x00007fab74146195
  0x00007fab74146188: addq   $0x1,0x250(%rsi)
  0x00007fab74146190: jmpq   0x00007fab741462d6
  0x00007fab74146195: cmpq   $0x0,0x1d8(%rsi)
  0x00007fab741461a0: jne    0x00007fab741461b9
  0x00007fab741461a2: mov    %rax,0x1d8(%rsi)
  0x00007fab741461a9: movq   $0x1,0x1e0(%rsi)
  0x00007fab741461b4: jmpq   0x00007fab741462d6
  0x00007fab741461b9: cmpq   $0x0,0x1e8(%rsi)
  0x00007fab741461c4: jne    0x00007fab741461dd
  0x00007fab741461c6: mov    %rax,0x1e8(%rsi)
  0x00007fab741461cd: movq   $0x1,0x1f0(%rsi)
  0x00007fab741461d8: jmpq   0x00007fab741462d6
  0x00007fab741461dd: cmpq   $0x0,0x1f8(%rsi)
  0x00007fab741461e8: jne    0x00007fab74146201
  0x00007fab741461ea: mov    %rax,0x1f8(%rsi)
  0x00007fab741461f1: movq   $0x1,0x200(%rsi)
  0x00007fab741461fc: jmpq   0x00007fab741462d6
  0x00007fab74146201: cmpq   $0x0,0x208(%rsi)
  0x00007fab7414620c: jne    0x00007fab74146225
  0x00007fab7414620e: mov    %rax,0x208(%rsi)
  0x00007fab74146215: movq   $0x1,0x210(%rsi)
  0x00007fab74146220: jmpq   0x00007fab741462d6
  0x00007fab74146225: cmpq   $0x0,0x218(%rsi)
  0x00007fab74146230: jne    0x00007fab74146249
  0x00007fab74146232: mov    %rax,0x218(%rsi)
  0x00007fab74146239: movq   $0x1,0x220(%rsi)
  0x00007fab74146244: jmpq   0x00007fab741462d6
  0x00007fab74146249: cmpq   $0x0,0x228(%rsi)
  0x00007fab74146254: jne    0x00007fab7414626d
  0x00007fab74146256: mov    %rax,0x228(%rsi)
  0x00007fab7414625d: movq   $0x1,0x230(%rsi)
  0x00007fab74146268: jmpq   0x00007fab741462d6
  0x00007fab7414626d: cmpq   $0x0,0x238(%rsi)
  0x00007fab74146278: jne    0x00007fab74146291
  0x00007fab7414627a: mov    %rax,0x238(%rsi)
  0x00007fab74146281: movq   $0x1,0x240(%rsi)
  0x00007fab7414628c: jmpq   0x00007fab741462d6
  0x00007fab74146291: cmpq   $0x0,0x248(%rsi)
  0x00007fab7414629c: jne    0x00007fab741462b5
  0x00007fab7414629e: mov    %rax,0x248(%rsi)
  0x00007fab741462a5: movq   $0x1,0x250(%rsi)
  0x00007fab741462b0: jmpq   0x00007fab741462d6
  0x00007fab741462b5: jmpq   0x00007fab741462d6
  0x00007fab741462ba: movabs $0x7fab61b827e0,%rsi  ;   {metadata(method data for {method} {0x00007fab61a72f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741462c4: subq   $0x1,0x1c8(%rsi)
  0x00007fab741462cc: jmpq   0x00007fab74147bda
  0x00007fab741462d1: jmpq   0x00007fab741462d6
  0x00007fab741462d6: mov    %rdx,%rdi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)

  0x00007fab741462d9: mov    %rdi,0xb8(%rsp)
  0x00007fab741462e1: cmp    $0x0,%rdi
  0x00007fab741462e5: movabs $0x7fab61b96940,%rdx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741462ef: movabs $0x2a0,%rsi
  0x00007fab741462f9: jne    0x00007fab74146309
  0x00007fab741462ff: movabs $0x2b0,%rsi
  0x00007fab74146309: mov    (%rdx,%rsi,1),%rax
  0x00007fab7414630d: lea    0x1(%rax),%rax
  0x00007fab74146311: mov    %rax,(%rdx,%rsi,1)
  0x00007fab74146315: jne    0x00007fab74146520  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@75 (line 1018)

  0x00007fab7414631b: mov    0xa8(%rsp),%esi
  0x00007fab74146322: mov    0x98(%rsp),%rcx
  0x00007fab7414632a: mov    0x90(%rsp),%rdx
  0x00007fab74146332: mov    %rdx,%r11
  0x00007fab74146335: movabs $0x7c0033a30,%rdx  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fab7414633f: mov    %rcx,%r14
  0x00007fab74146342: mov    %rsi,%r13
  0x00007fab74146345: mov    0x60(%r15),%rax
  0x00007fab74146349: lea    0x20(%rax),%rdi
  0x00007fab7414634d: cmp    0x70(%r15),%rdi
  0x00007fab74146351: ja     0x00007fab74147be3
  0x00007fab74146357: mov    %rdi,0x60(%r15)
  0x00007fab7414635b: mov    0xa8(%rdx),%rcx
  0x00007fab74146362: mov    %rcx,(%rax)
  0x00007fab74146365: mov    %rdx,%rcx
  0x00007fab74146368: shr    $0x3,%rcx
  0x00007fab7414636c: mov    %ecx,0x8(%rax)
  0x00007fab7414636f: xor    %rcx,%rcx
  0x00007fab74146372: mov    %ecx,0xc(%rax)
  0x00007fab74146375: xor    %rcx,%rcx
  0x00007fab74146378: mov    %rcx,0x10(%rax)
  0x00007fab7414637c: mov    %rcx,0x18(%rax)
  0x00007fab74146380: mov    %rax,%rdx          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@83 (line 1019)

  0x00007fab74146383: mov    %rdx,%rax
  0x00007fab74146386: movabs $0x7fab61b96940,%rcx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146390: addq   $0x1,0x2c0(%rcx)
  0x00007fab74146398: movabs $0x7fab61b97278,%rax  ;   {metadata(method data for {method} {0x00007fab61a7e828} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fab741463a2: mov    0xfc(%rax),%ecx
  0x00007fab741463a8: add    $0x8,%ecx
  0x00007fab741463ab: mov    %ecx,0xfc(%rax)
  0x00007fab741463b1: movabs $0x7fab61a7e828,%rax  ;   {metadata({method} {0x00007fab61a7e828} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fab741463bb: and    $0x7ffff8,%ecx
  0x00007fab741463c1: cmp    $0x0,%ecx
  0x00007fab741463c4: je     0x00007fab74147bf0
  0x00007fab741463ca: mov    %rdx,%rax
  0x00007fab741463cd: movabs $0x7fab61b97278,%rcx  ;   {metadata(method data for {method} {0x00007fab61a7e828} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fab741463d7: addq   $0x1,0x130(%rcx)
  0x00007fab741463df: movabs $0x7fab61a342a0,%rax  ;   {metadata(method data for {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab741463e9: mov    0xfc(%rax),%ecx
  0x00007fab741463ef: add    $0x8,%ecx
  0x00007fab741463f2: mov    %ecx,0xfc(%rax)
  0x00007fab741463f8: movabs $0x7fab618914d8,%rax  ;   {metadata({method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab74146402: and    $0x7ffff8,%ecx
  0x00007fab74146408: cmp    $0x0,%ecx
  0x00007fab7414640b: je     0x00007fab74147c07
  0x00007fab74146411: mov    %r13d,0xc(%rdx)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@6 (line 626)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@92 (line 1019)

  0x00007fab74146415: mov    %r11,%r10
  0x00007fab74146418: shr    $0x3,%r10
  0x00007fab7414641c: mov    %r10d,0x10(%rdx)
  0x00007fab74146420: mov    %rdx,%rax
  0x00007fab74146423: shr    $0x9,%rax
  0x00007fab74146427: movabs $0x7fab701ff000,%rcx
  0x00007fab74146431: movb   $0x0,(%rax,%rcx,1)
  0x00007fab74146435: mov    %r14,%r10
  0x00007fab74146438: shr    $0x3,%r10
  0x00007fab7414643c: mov    %r10d,0x14(%rdx)
  0x00007fab74146440: mov    %rdx,%rax
  0x00007fab74146443: shr    $0x9,%rax
  0x00007fab74146447: movb   $0x0,(%rax,%rcx,1)
  0x00007fab7414644b: lock addl $0x0,(%rsp)     ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@16 (line 628)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@92 (line 1019)

  0x00007fab74146450: movabs $0x7fab61b96940,%rax  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7414645a: addq   $0x1,0x2d0(%rax)
  0x00007fab74146462: movabs $0x7fab61b95740,%rax  ;   {metadata(method data for {method} {0x00007fab61a73068} &apos;casTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7414646c: mov    0xfc(%rax),%esi
  0x00007fab74146472: add    $0x8,%esi
  0x00007fab74146475: mov    %esi,0xfc(%rax)
  0x00007fab7414647b: movabs $0x7fab61a73068,%rax  ;   {metadata({method} {0x00007fab61a73068} &apos;casTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146485: and    $0x7ffff8,%esi
  0x00007fab7414648b: cmp    $0x0,%esi
  0x00007fab7414648e: je     0x00007fab74147c1e
  0x00007fab74146494: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fab7414649e: lea    (%rbx,%r8,1),%rsi
  0x00007fab741464a2: shr    $0x3,%rax
  0x00007fab741464a6: mov    %rdx,%r10
  0x00007fab741464a9: shr    $0x3,%r10
  0x00007fab741464ad: lock cmpxchg %r10d,(%rsi)
  0x00007fab741464b2: mov    $0x1,%edx
  0x00007fab741464b7: je     0x00007fab741464c2
  0x00007fab741464bd: mov    $0x0,%edx
  0x00007fab741464c2: shr    $0x9,%rsi
  0x00007fab741464c6: movb   $0x0,(%rsi,%rcx,1)  ;*invokevirtual compareAndSwapObject {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@16 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@95 (line 1019)

  0x00007fab741464ca: and    $0x1,%edx
  0x00007fab741464cd: cmp    $0x0,%edx
  0x00007fab741464d0: movabs $0x7fab61b96940,%rdx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741464da: movabs $0x2e0,%rcx
  0x00007fab741464e4: je     0x00007fab741464f4
  0x00007fab741464ea: movabs $0x2f0,%rcx
  0x00007fab741464f4: mov    (%rdx,%rcx,1),%rsi
  0x00007fab741464f8: lea    0x1(%rsi),%rsi
  0x00007fab741464fc: mov    %rsi,(%rdx,%rcx,1)
  0x00007fab74146500: jne    0x00007fab74147a54  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@98 (line 1019)

  0x00007fab74146506: mov    %rbx,%rax
  0x00007fab74146509: mov    0xa4(%rsp),%esi
  0x00007fab74146510: mov    0xa0(%rsp),%r8d
  0x00007fab74146518: mov    %r14,%rcx
  0x00007fab7414651b: jmpq   0x00007fab741478fd  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@350 (line 1069)

  0x00007fab74146520: mov    0xa8(%rsp),%r13d
  0x00007fab74146528: mov    0x98(%rsp),%r14
  0x00007fab74146530: mov    0x90(%rsp),%r11
  0x00007fab74146538: mov    0xc(%rdi),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@106 (line 1023)
                                                ; implicit exception: dispatches to 0x00007fab74147c35
  0x00007fab7414653b: cmp    $0xffffffff,%esi
  0x00007fab7414653e: movabs $0x7fab61b96940,%rdx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146548: movabs $0x318,%rcx
  0x00007fab74146552: jne    0x00007fab74146562
  0x00007fab74146558: movabs $0x328,%rcx
  0x00007fab74146562: mov    (%rdx,%rcx,1),%rax
  0x00007fab74146566: lea    0x1(%rax),%rax
  0x00007fab7414656a: mov    %rax,(%rdx,%rcx,1)
  0x00007fab7414656e: jne    0x00007fab741465d0  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@113 (line 1023)

  0x00007fab74146574: mov    0x88(%rsp),%rax
  0x00007fab7414657c: movabs $0x7fab61b96940,%r8  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146586: addq   $0x1,0x338(%r8)
  0x00007fab7414658e: mov    %rbx,%rdx
  0x00007fab74146591: mov    %rdi,%rcx
  0x00007fab74146594: mov    0x88(%rsp),%rsi    ;*invokevirtual helpTransfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@121 (line 1024)

  0x00007fab7414659c: nop
  0x00007fab7414659d: nop
  0x00007fab7414659e: nop
  0x00007fab7414659f: callq  0x00007fab74047d60  ; OopMap{[136]=Oop [152]=Oop [144]=Oop off=2500}
                                                ;*invokevirtual helpTransfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@121 (line 1024)
                                                ;   {optimized virtual_call}
  0x00007fab741465a4: movabs $0x7fab61b96940,%rdx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741465ae: incl   0x3d0(%rdx)
  0x00007fab741465b4: mov    0xa4(%rsp),%esi
  0x00007fab741465bb: mov    0xa0(%rsp),%r8d
  0x00007fab741465c3: mov    0x98(%rsp),%rcx
  0x00007fab741465cb: jmpq   0x00007fab741478fd  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@126 (line 1024)

  0x00007fab741465d0: lea    0xe0(%rsp),%rdx
  0x00007fab741465d8: mov    %rdi,0x8(%rdx)
  0x00007fab741465dc: mov    (%rdi),%rax
  0x00007fab741465df: mov    %rax,%rcx
  0x00007fab741465e2: and    $0x7,%rcx
  0x00007fab741465e6: cmp    $0x5,%rcx
  0x00007fab741465ea: jne    0x00007fab74146671
  0x00007fab741465f0: mov    0x8(%rdi),%ecx
  0x00007fab741465f3: shl    $0x3,%rcx
  0x00007fab741465f7: mov    0xa8(%rcx),%rcx
  0x00007fab741465fe: or     %r15,%rcx
  0x00007fab74146601: xor    %rax,%rcx
  0x00007fab74146604: and    $0xffffffffffffff87,%rcx
  0x00007fab74146608: je     0x00007fab74146699
  0x00007fab7414660e: test   $0x7,%rcx
  0x00007fab74146615: jne    0x00007fab7414665e
  0x00007fab74146617: test   $0x300,%rcx
  0x00007fab7414661e: jne    0x00007fab7414663d
  0x00007fab74146620: and    $0x37f,%rax
  0x00007fab74146627: mov    %rax,%rcx
  0x00007fab7414662a: or     %r15,%rcx
  0x00007fab7414662d: lock cmpxchg %rcx,(%rdi)
  0x00007fab74146632: jne    0x00007fab74147c3a
  0x00007fab74146638: jmpq   0x00007fab74146699
  0x00007fab7414663d: mov    0x8(%rdi),%ecx
  0x00007fab74146640: shl    $0x3,%rcx
  0x00007fab74146644: mov    0xa8(%rcx),%rcx
  0x00007fab7414664b: or     %r15,%rcx
  0x00007fab7414664e: lock cmpxchg %rcx,(%rdi)
  0x00007fab74146653: jne    0x00007fab74147c3a
  0x00007fab74146659: jmpq   0x00007fab74146699
  0x00007fab7414665e: mov    0x8(%rdi),%ecx
  0x00007fab74146661: shl    $0x3,%rcx
  0x00007fab74146665: mov    0xa8(%rcx),%rcx
  0x00007fab7414666c: lock cmpxchg %rcx,(%rdi)
  0x00007fab74146671: mov    (%rdi),%rax
  0x00007fab74146674: or     $0x1,%rax
  0x00007fab74146678: mov    %rax,(%rdx)
  0x00007fab7414667b: lock cmpxchg %rdx,(%rdi)
  0x00007fab74146680: je     0x00007fab74146699
  0x00007fab74146686: sub    %rsp,%rax
  0x00007fab74146689: and    $0xfffffffffffff007,%rax
  0x00007fab74146690: mov    %rax,(%rdx)
  0x00007fab74146693: jne    0x00007fab74147c3a  ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@137 (line 1027)

  0x00007fab74146699: movabs $0x7fab61b96940,%rdx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741466a3: addq   $0x1,0x3e8(%rdx)
  0x00007fab741466ab: movabs $0x7fab61b827e0,%rdx  ;   {metadata(method data for {method} {0x00007fab61a72f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741466b5: mov    0xfc(%rdx),%eax
  0x00007fab741466bb: add    $0x8,%eax
  0x00007fab741466be: mov    %eax,0xfc(%rdx)
  0x00007fab741466c4: movabs $0x7fab61a72f90,%rdx  ;   {metadata({method} {0x00007fab61a72f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741466ce: and    $0x7ffff8,%eax
  0x00007fab741466d4: cmp    $0x0,%eax
  0x00007fab741466d7: je     0x00007fab74147c4d
  0x00007fab741466dd: mov    (%rbx,%r8,1),%edx
  0x00007fab741466e1: shl    $0x3,%rdx
  0x00007fab741466e5: cmp    $0x0,%rdx
  0x00007fab741466e9: jne    0x00007fab74146704
  0x00007fab741466eb: movabs $0x7fab61b827e0,%rcx  ;   {metadata(method data for {method} {0x00007fab61a72f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741466f5: orl    $0x100,0x1c0(%rcx)
  0x00007fab741466ff: jmpq   0x00007fab74146922
  0x00007fab74146704: movabs $0x7c0033a30,%r8   ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fab7414670e: mov    0x8(%rdx),%ecx
  0x00007fab74146711: shl    $0x3,%rcx
  0x00007fab74146715: cmp    0x30(%rcx),%r8
  0x00007fab74146719: jne    0x00007fab74146906
  0x00007fab7414671f: movabs $0x7fab61b827e0,%rcx  ;   {metadata(method data for {method} {0x00007fab61a72f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146729: mov    0x8(%rdx),%r8d
  0x00007fab7414672d: shl    $0x3,%r8
  0x00007fab74146731: cmp    0x1d8(%rcx),%r8
  0x00007fab74146738: jne    0x00007fab74146747
  0x00007fab7414673a: addq   $0x1,0x1e0(%rcx)
  0x00007fab74146742: jmpq   0x00007fab74146922
  0x00007fab74146747: cmp    0x1e8(%rcx),%r8
  0x00007fab7414674e: jne    0x00007fab7414675d
  0x00007fab74146750: addq   $0x1,0x1f0(%rcx)
  0x00007fab74146758: jmpq   0x00007fab74146922
  0x00007fab7414675d: cmp    0x1f8(%rcx),%r8
  0x00007fab74146764: jne    0x00007fab74146773
  0x00007fab74146766: addq   $0x1,0x200(%rcx)
  0x00007fab7414676e: jmpq   0x00007fab74146922
  0x00007fab74146773: cmp    0x208(%rcx),%r8
  0x00007fab7414677a: jne    0x00007fab74146789
  0x00007fab7414677c: addq   $0x1,0x210(%rcx)
  0x00007fab74146784: jmpq   0x00007fab74146922
  0x00007fab74146789: cmp    0x218(%rcx),%r8
  0x00007fab74146790: jne    0x00007fab7414679f
  0x00007fab74146792: addq   $0x1,0x220(%rcx)
  0x00007fab7414679a: jmpq   0x00007fab74146922
  0x00007fab7414679f: cmp    0x228(%rcx),%r8
  0x00007fab741467a6: jne    0x00007fab741467b5
  0x00007fab741467a8: addq   $0x1,0x230(%rcx)
  0x00007fab741467b0: jmpq   0x00007fab74146922
  0x00007fab741467b5: cmp    0x238(%rcx),%r8
  0x00007fab741467bc: jne    0x00007fab741467cb
  0x00007fab741467be: addq   $0x1,0x240(%rcx)
  0x00007fab741467c6: jmpq   0x00007fab74146922
  0x00007fab741467cb: cmp    0x248(%rcx),%r8
  0x00007fab741467d2: jne    0x00007fab741467e1
  0x00007fab741467d4: addq   $0x1,0x250(%rcx)
  0x00007fab741467dc: jmpq   0x00007fab74146922
  0x00007fab741467e1: cmpq   $0x0,0x1d8(%rcx)
  0x00007fab741467ec: jne    0x00007fab74146805
  0x00007fab741467ee: mov    %r8,0x1d8(%rcx)
  0x00007fab741467f5: movq   $0x1,0x1e0(%rcx)
  0x00007fab74146800: jmpq   0x00007fab74146922
  0x00007fab74146805: cmpq   $0x0,0x1e8(%rcx)
  0x00007fab74146810: jne    0x00007fab74146829
  0x00007fab74146812: mov    %r8,0x1e8(%rcx)
  0x00007fab74146819: movq   $0x1,0x1f0(%rcx)
  0x00007fab74146824: jmpq   0x00007fab74146922
  0x00007fab74146829: cmpq   $0x0,0x1f8(%rcx)
  0x00007fab74146834: jne    0x00007fab7414684d
  0x00007fab74146836: mov    %r8,0x1f8(%rcx)
  0x00007fab7414683d: movq   $0x1,0x200(%rcx)
  0x00007fab74146848: jmpq   0x00007fab74146922
  0x00007fab7414684d: cmpq   $0x0,0x208(%rcx)
  0x00007fab74146858: jne    0x00007fab74146871
  0x00007fab7414685a: mov    %r8,0x208(%rcx)
  0x00007fab74146861: movq   $0x1,0x210(%rcx)
  0x00007fab7414686c: jmpq   0x00007fab74146922
  0x00007fab74146871: cmpq   $0x0,0x218(%rcx)
  0x00007fab7414687c: jne    0x00007fab74146895
  0x00007fab7414687e: mov    %r8,0x218(%rcx)
  0x00007fab74146885: movq   $0x1,0x220(%rcx)
  0x00007fab74146890: jmpq   0x00007fab74146922
  0x00007fab74146895: cmpq   $0x0,0x228(%rcx)
  0x00007fab741468a0: jne    0x00007fab741468b9
  0x00007fab741468a2: mov    %r8,0x228(%rcx)
  0x00007fab741468a9: movq   $0x1,0x230(%rcx)
  0x00007fab741468b4: jmpq   0x00007fab74146922
  0x00007fab741468b9: cmpq   $0x0,0x238(%rcx)
  0x00007fab741468c4: jne    0x00007fab741468dd
  0x00007fab741468c6: mov    %r8,0x238(%rcx)
  0x00007fab741468cd: movq   $0x1,0x240(%rcx)
  0x00007fab741468d8: jmpq   0x00007fab74146922
  0x00007fab741468dd: cmpq   $0x0,0x248(%rcx)
  0x00007fab741468e8: jne    0x00007fab74146901
  0x00007fab741468ea: mov    %r8,0x248(%rcx)
  0x00007fab741468f1: movq   $0x1,0x250(%rcx)
  0x00007fab741468fc: jmpq   0x00007fab74146922
  0x00007fab74146901: jmpq   0x00007fab74146922
  0x00007fab74146906: movabs $0x7fab61b827e0,%rcx  ;   {metadata(method data for {method} {0x00007fab61a72f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146910: subq   $0x1,0x1c8(%rcx)
  0x00007fab74146918: jmpq   0x00007fab74147c64
  0x00007fab7414691d: jmpq   0x00007fab74146922  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@142 (line 1028)

  0x00007fab74146922: cmp    %rdi,%rdx
  0x00007fab74146925: movabs $0x7fab61b96940,%rdx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7414692f: movabs $0x3f8,%rax
  0x00007fab74146939: jne    0x00007fab74146949
  0x00007fab7414693f: movabs $0x408,%rax
  0x00007fab74146949: mov    (%rdx,%rax,1),%rcx
  0x00007fab7414694d: lea    0x1(%rcx),%rcx
  0x00007fab74146951: mov    %rcx,(%rdx,%rax,1)
  0x00007fab74146955: je     0x00007fab74146989  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@147 (line 1028)

  0x00007fab7414695b: mov    0xa4(%rsp),%eax
  0x00007fab74146962: movabs $0x0,%rdi          ;   {oop(NULL)}
  0x00007fab7414696c: mov    %rbx,0xc0(%rsp)
  0x00007fab74146974: mov    0xa0(%rsp),%r8d
  0x00007fab7414697c: mov    0x98(%rsp),%rcx
  0x00007fab74146984: jmpq   0x00007fab74147872  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1060)

  0x00007fab74146989: cmp    $0x0,%esi
  0x00007fab7414698c: movabs $0x7fab61b96940,%rdx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146996: movabs $0x418,%rsi
  0x00007fab741469a0: jl     0x00007fab741469b0
  0x00007fab741469a6: movabs $0x428,%rsi
  0x00007fab741469b0: mov    (%rdx,%rsi,1),%rax
  0x00007fab741469b4: lea    0x1(%rax),%rax
  0x00007fab741469b8: mov    %rax,(%rdx,%rsi,1)
  0x00007fab741469bc: jl     0x00007fab7414700a  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@152 (line 1029)

  0x00007fab741469c2: mov    %rdi,%rax
  0x00007fab741469c5: mov    $0x1,%ecx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@162 (line 1033)

  0x00007fab741469ca: mov    %ecx,0xac(%rsp)
  0x00007fab741469d1: mov    %rbx,0xc0(%rsp)
  0x00007fab741469d9: nopl   0x0(%rax)
  0x00007fab741469e0: mov    0xa8(%rsp),%esi
  0x00007fab741469e7: mov    0x90(%rsp),%rdx
  0x00007fab741469ef: mov    0xc(%rax),%r8d     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@164 (line 1033)
                                                ; implicit exception: dispatches to 0x00007fab74147c6d
  0x00007fab741469f3: cmp    %esi,%r8d
  0x00007fab741469f6: movabs $0x7fab61b96940,%r8  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146a00: movabs $0x438,%r11
  0x00007fab74146a0a: jne    0x00007fab74146a1a
  0x00007fab74146a10: movabs $0x448,%r11
  0x00007fab74146a1a: mov    (%r8,%r11,1),%r13
  0x00007fab74146a1e: lea    0x1(%r13),%r13
  0x00007fab74146a22: mov    %r13,(%r8,%r11,1)
  0x00007fab74146a26: je     0x00007fab74146a34  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@169 (line 1033)

  0x00007fab74146a2c: mov    %rax,%r8
  0x00007fab74146a2f: jmpq   0x00007fab74146d05  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@218 (line 1041)

  0x00007fab74146a34: mov    0x10(%rax),%r8d
  0x00007fab74146a38: shl    $0x3,%r8           ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@174 (line 1033)

  0x00007fab74146a3c: cmp    %rdx,%r8
  0x00007fab74146a3f: movabs $0x7fab61b96940,%r11  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146a49: movabs $0x458,%r13
  0x00007fab74146a53: je     0x00007fab74146a63
  0x00007fab74146a59: movabs $0x468,%r13
  0x00007fab74146a63: mov    (%r11,%r13,1),%r14
  0x00007fab74146a67: lea    0x1(%r14),%r14
  0x00007fab74146a6b: mov    %r14,(%r11,%r13,1)
  0x00007fab74146a6f: je     0x00007fab74146dad  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@181 (line 1033)

  0x00007fab74146a75: cmp    $0x0,%r8
  0x00007fab74146a79: movabs $0x7fab61b96940,%r11  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146a83: movabs $0x478,%r13
  0x00007fab74146a8d: je     0x00007fab74146a9d
  0x00007fab74146a93: movabs $0x488,%r13
  0x00007fab74146a9d: mov    (%r11,%r13,1),%r14
  0x00007fab74146aa1: lea    0x1(%r14),%r14
  0x00007fab74146aa5: mov    %r14,(%r11,%r13,1)
  0x00007fab74146aa9: jne    0x00007fab74146ab7  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@186 (line 1033)

  0x00007fab74146aaf: mov    %rax,%r8
  0x00007fab74146ab2: jmpq   0x00007fab74146d05  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@218 (line 1041)

  0x00007fab74146ab7: mov    %rax,0xb0(%rsp)
  0x00007fab74146abf: mov    %rdx,%r11
  0x00007fab74146ac2: movabs $0x7fab61b96940,%r13  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146acc: mov    0x8(%r11),%r11d
  0x00007fab74146ad0: shl    $0x3,%r11
  0x00007fab74146ad4: cmp    0x4a8(%r13),%r11
  0x00007fab74146adb: jne    0x00007fab74146aea
  0x00007fab74146add: addq   $0x1,0x4b0(%r13)
  0x00007fab74146ae5: jmpq   0x00007fab74146cac
  0x00007fab74146aea: cmp    0x4b8(%r13),%r11
  0x00007fab74146af1: jne    0x00007fab74146b00
  0x00007fab74146af3: addq   $0x1,0x4c0(%r13)
  0x00007fab74146afb: jmpq   0x00007fab74146cac
  0x00007fab74146b00: cmp    0x4c8(%r13),%r11
  0x00007fab74146b07: jne    0x00007fab74146b16
  0x00007fab74146b09: addq   $0x1,0x4d0(%r13)
  0x00007fab74146b11: jmpq   0x00007fab74146cac
  0x00007fab74146b16: cmp    0x4d8(%r13),%r11
  0x00007fab74146b1d: jne    0x00007fab74146b2c
  0x00007fab74146b1f: addq   $0x1,0x4e0(%r13)
  0x00007fab74146b27: jmpq   0x00007fab74146cac
  0x00007fab74146b2c: cmp    0x4e8(%r13),%r11
  0x00007fab74146b33: jne    0x00007fab74146b42
  0x00007fab74146b35: addq   $0x1,0x4f0(%r13)
  0x00007fab74146b3d: jmpq   0x00007fab74146cac
  0x00007fab74146b42: cmp    0x4f8(%r13),%r11
  0x00007fab74146b49: jne    0x00007fab74146b58
  0x00007fab74146b4b: addq   $0x1,0x500(%r13)
  0x00007fab74146b53: jmpq   0x00007fab74146cac
  0x00007fab74146b58: cmp    0x508(%r13),%r11
  0x00007fab74146b5f: jne    0x00007fab74146b6e
  0x00007fab74146b61: addq   $0x1,0x510(%r13)
  0x00007fab74146b69: jmpq   0x00007fab74146cac
  0x00007fab74146b6e: cmp    0x518(%r13),%r11
  0x00007fab74146b75: jne    0x00007fab74146b84
  0x00007fab74146b77: addq   $0x1,0x520(%r13)
  0x00007fab74146b7f: jmpq   0x00007fab74146cac
  0x00007fab74146b84: cmpq   $0x0,0x4a8(%r13)
  0x00007fab74146b8f: jne    0x00007fab74146ba8
  0x00007fab74146b91: mov    %r11,0x4a8(%r13)
  0x00007fab74146b98: movq   $0x1,0x4b0(%r13)
  0x00007fab74146ba3: jmpq   0x00007fab74146cac
  0x00007fab74146ba8: cmpq   $0x0,0x4b8(%r13)
  0x00007fab74146bb3: jne    0x00007fab74146bcc
  0x00007fab74146bb5: mov    %r11,0x4b8(%r13)
  0x00007fab74146bbc: movq   $0x1,0x4c0(%r13)
  0x00007fab74146bc7: jmpq   0x00007fab74146cac
  0x00007fab74146bcc: cmpq   $0x0,0x4c8(%r13)
  0x00007fab74146bd7: jne    0x00007fab74146bf0
  0x00007fab74146bd9: mov    %r11,0x4c8(%r13)
  0x00007fab74146be0: movq   $0x1,0x4d0(%r13)
  0x00007fab74146beb: jmpq   0x00007fab74146cac
  0x00007fab74146bf0: cmpq   $0x0,0x4d8(%r13)
  0x00007fab74146bfb: jne    0x00007fab74146c14
  0x00007fab74146bfd: mov    %r11,0x4d8(%r13)
  0x00007fab74146c04: movq   $0x1,0x4e0(%r13)
  0x00007fab74146c0f: jmpq   0x00007fab74146cac
  0x00007fab74146c14: cmpq   $0x0,0x4e8(%r13)
  0x00007fab74146c1f: jne    0x00007fab74146c38
  0x00007fab74146c21: mov    %r11,0x4e8(%r13)
  0x00007fab74146c28: movq   $0x1,0x4f0(%r13)
  0x00007fab74146c33: jmpq   0x00007fab74146cac
  0x00007fab74146c38: cmpq   $0x0,0x4f8(%r13)
  0x00007fab74146c43: jne    0x00007fab74146c5c
  0x00007fab74146c45: mov    %r11,0x4f8(%r13)
  0x00007fab74146c4c: movq   $0x1,0x500(%r13)
  0x00007fab74146c57: jmpq   0x00007fab74146cac
  0x00007fab74146c5c: cmpq   $0x0,0x508(%r13)
  0x00007fab74146c67: jne    0x00007fab74146c80
  0x00007fab74146c69: mov    %r11,0x508(%r13)
  0x00007fab74146c70: movq   $0x1,0x510(%r13)
  0x00007fab74146c7b: jmpq   0x00007fab74146cac
  0x00007fab74146c80: cmpq   $0x0,0x518(%r13)
  0x00007fab74146c8b: jne    0x00007fab74146ca4
  0x00007fab74146c8d: mov    %r11,0x518(%r13)
  0x00007fab74146c94: movq   $0x1,0x520(%r13)
  0x00007fab74146c9f: jmpq   0x00007fab74146cac
  0x00007fab74146ca4: addq   $0x1,0x498(%r13)
  0x00007fab74146cac: mov    %rdx,%r11
  0x00007fab74146caf: mov    %r8,%rdx
  0x00007fab74146cb2: mov    %r11,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1035)

  0x00007fab74146cb5: movabs $0xffffffffffffffff,%rax
  0x00007fab74146cbf: callq  0x00007fab74047f60  ; OopMap{[136]=Oop [152]=Oop [144]=Oop [192]=Oop [184]=Oop [176]=Oop [232]=Oop off=4324}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1035)
                                                ;   {virtual_call}
  0x00007fab74146cc4: cmp    $0x0,%eax
  0x00007fab74146cc7: movabs $0x7fab61b96940,%rdx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146cd1: movabs $0x530,%rsi
  0x00007fab74146cdb: je     0x00007fab74146ceb
  0x00007fab74146ce1: movabs $0x540,%rsi
  0x00007fab74146ceb: mov    (%rdx,%rsi,1),%rdi
  0x00007fab74146cef: lea    0x1(%rdi),%rdi
  0x00007fab74146cf3: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab74146cf7: mov    0xb0(%rsp),%r8
  0x00007fab74146cff: jne    0x00007fab74146db0  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@195 (line 1035)

  0x00007fab74146d05: mov    0x18(%r8),%edx
  0x00007fab74146d09: shl    $0x3,%rdx          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@224 (line 1042)

  0x00007fab74146d0d: cmp    $0x0,%rdx
  0x00007fab74146d11: movabs $0x7fab61b96940,%rsi  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146d1b: movabs $0x588,%rdi
  0x00007fab74146d25: jne    0x00007fab74146d35
  0x00007fab74146d2b: movabs $0x598,%rdi
  0x00007fab74146d35: mov    (%rsi,%rdi,1),%rax
  0x00007fab74146d39: lea    0x1(%rax),%rax
  0x00007fab74146d3d: mov    %rax,(%rsi,%rdi,1)
  0x00007fab74146d41: je     0x00007fab74146e73  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@230 (line 1042)

  0x00007fab74146d47: mov    0xac(%rsp),%ecx
  0x00007fab74146d4e: inc    %ecx
  0x00007fab74146d50: movabs $0x7fab61b96940,%rsi  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146d5a: mov    0x100(%rsi),%edi
  0x00007fab74146d60: add    $0x8,%edi
  0x00007fab74146d63: mov    %edi,0x100(%rsi)
  0x00007fab74146d69: movabs $0x7fab61a73e58,%rsi  ;   {metadata({method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146d73: and    $0xfff8,%edi
  0x00007fab74146d79: cmp    $0x0,%edi
  0x00007fab74146d7c: je     0x00007fab74147c72  ; OopMap{[136]=Oop [152]=Oop [144]=Oop [192]=Oop [184]=Oop rdx=Oop [232]=Oop off=4514}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@256 (line 1031)

  0x00007fab74146d82: test   %eax,0x1b69b378(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab74146d88: movabs $0x7fab61b96940,%rsi  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146d92: incl   0x5d0(%rsi)
  0x00007fab74146d98: mov    %rdx,%r8
  0x00007fab74146d9b: mov    %rcx,%rbx
  0x00007fab74146d9e: mov    %r8,%rax
  0x00007fab74146da1: mov    %ebx,0xac(%rsp)
  0x00007fab74146da8: jmpq   0x00007fab741469e0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@256 (line 1031)

  0x00007fab74146dad: mov    %rax,%r8
  0x00007fab74146db0: mov    0xac(%rsp),%ebx
  0x00007fab74146db7: mov    0xa0(%rsp),%r9d
  0x00007fab74146dbf: mov    0x14(%r8),%edx
  0x00007fab74146dc3: shl    $0x3,%rdx          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@200 (line 1036)

  0x00007fab74146dc7: cmp    $0x0,%r9d
  0x00007fab74146dcb: movabs $0x7fab61b96940,%rsi  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146dd5: movabs $0x550,%rdi
  0x00007fab74146ddf: jne    0x00007fab74146def
  0x00007fab74146de5: movabs $0x560,%rdi
  0x00007fab74146def: mov    (%rsi,%rdi,1),%rax
  0x00007fab74146df3: lea    0x1(%rax),%rax
  0x00007fab74146df7: mov    %rax,(%rsi,%rdi,1)
  0x00007fab74146dfb: je     0x00007fab74146e1e  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@206 (line 1037)

  0x00007fab74146e01: mov    0xa8(%rsp),%r13d
  0x00007fab74146e09: mov    0x98(%rsp),%r14
  0x00007fab74146e11: mov    0x90(%rsp),%r11
  0x00007fab74146e19: jmpq   0x00007fab74146fe9  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@259 (line 1031)

  0x00007fab74146e1e: mov    0x98(%rsp),%rcx
  0x00007fab74146e26: mov    %rcx,%r10
  0x00007fab74146e29: shr    $0x3,%r10
  0x00007fab74146e2d: mov    %r10d,0x14(%r8)
  0x00007fab74146e31: mov    %r8,%rax
  0x00007fab74146e34: shr    $0x9,%rax
  0x00007fab74146e38: movabs $0x7fab701ff000,%rsi
  0x00007fab74146e42: movb   $0x0,(%rax,%rsi,1)
  0x00007fab74146e46: lock addl $0x0,(%rsp)     ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@212 (line 1038)

  0x00007fab74146e4b: movabs $0x7fab61b96940,%rsi  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146e55: incl   0x570(%rsi)
  0x00007fab74146e5b: mov    0xa8(%rsp),%r13d
  0x00007fab74146e63: mov    %rcx,%r14
  0x00007fab74146e66: mov    0x90(%rsp),%r11
  0x00007fab74146e6e: jmpq   0x00007fab74146fe9  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@215 (line 1038)

  0x00007fab74146e73: mov    0xac(%rsp),%ebx
  0x00007fab74146e7a: mov    0xa8(%rsp),%esi
  0x00007fab74146e81: mov    0xa0(%rsp),%r9d
  0x00007fab74146e89: mov    0x98(%rsp),%rcx
  0x00007fab74146e91: mov    0x90(%rsp),%rdx
  0x00007fab74146e99: mov    %rdx,%r11
  0x00007fab74146e9c: movabs $0x7c0033a30,%rdx  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fab74146ea6: mov    %rcx,%r14
  0x00007fab74146ea9: mov    %rsi,%r13
  0x00007fab74146eac: mov    0x60(%r15),%rax
  0x00007fab74146eb0: lea    0x20(%rax),%rdi
  0x00007fab74146eb4: cmp    0x70(%r15),%rdi
  0x00007fab74146eb8: ja     0x00007fab74147c89
  0x00007fab74146ebe: mov    %rdi,0x60(%r15)
  0x00007fab74146ec2: mov    0xa8(%rdx),%rcx
  0x00007fab74146ec9: mov    %rcx,(%rax)
  0x00007fab74146ecc: mov    %rdx,%rcx
  0x00007fab74146ecf: shr    $0x3,%rcx
  0x00007fab74146ed3: mov    %ecx,0x8(%rax)
  0x00007fab74146ed6: xor    %rcx,%rcx
  0x00007fab74146ed9: mov    %ecx,0xc(%rax)
  0x00007fab74146edc: xor    %rcx,%rcx
  0x00007fab74146edf: mov    %rcx,0x10(%rax)
  0x00007fab74146ee3: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@235 (line 1043)

  0x00007fab74146ee7: mov    %rax,%rdx
  0x00007fab74146eea: movabs $0x7fab61b96940,%rcx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146ef4: addq   $0x1,0x5a8(%rcx)
  0x00007fab74146efc: movabs $0x7fab61b97278,%rdx  ;   {metadata(method data for {method} {0x00007fab61a7e828} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fab74146f06: mov    0xfc(%rdx),%ecx
  0x00007fab74146f0c: add    $0x8,%ecx
  0x00007fab74146f0f: mov    %ecx,0xfc(%rdx)
  0x00007fab74146f15: movabs $0x7fab61a7e828,%rdx  ;   {metadata({method} {0x00007fab61a7e828} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fab74146f1f: and    $0x7ffff8,%ecx
  0x00007fab74146f25: cmp    $0x0,%ecx
  0x00007fab74146f28: je     0x00007fab74147c96
  0x00007fab74146f2e: mov    %rax,%rdx
  0x00007fab74146f31: movabs $0x7fab61b97278,%rcx  ;   {metadata(method data for {method} {0x00007fab61a7e828} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fab74146f3b: addq   $0x1,0x130(%rcx)
  0x00007fab74146f43: movabs $0x7fab61a342a0,%rdx  ;   {metadata(method data for {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab74146f4d: mov    0xfc(%rdx),%ecx
  0x00007fab74146f53: add    $0x8,%ecx
  0x00007fab74146f56: mov    %ecx,0xfc(%rdx)
  0x00007fab74146f5c: movabs $0x7fab618914d8,%rdx  ;   {metadata({method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab74146f66: and    $0x7ffff8,%ecx
  0x00007fab74146f6c: cmp    $0x0,%ecx
  0x00007fab74146f6f: je     0x00007fab74147cad
  0x00007fab74146f75: mov    %r13d,0xc(%rax)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@6 (line 626)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@244 (line 1043)

  0x00007fab74146f79: mov    %r11,%r10
  0x00007fab74146f7c: shr    $0x3,%r10
  0x00007fab74146f80: mov    %r10d,0x10(%rax)
  0x00007fab74146f84: mov    %rax,%rdx
  0x00007fab74146f87: shr    $0x9,%rdx
  0x00007fab74146f8b: movabs $0x7fab701ff000,%rcx
  0x00007fab74146f95: movb   $0x0,(%rdx,%rcx,1)
  0x00007fab74146f99: mov    %r14,%r10
  0x00007fab74146f9c: shr    $0x3,%r10
  0x00007fab74146fa0: mov    %r10d,0x14(%rax)
  0x00007fab74146fa4: mov    %rax,%rdx
  0x00007fab74146fa7: shr    $0x9,%rdx
  0x00007fab74146fab: movb   $0x0,(%rdx,%rcx,1)
  0x00007fab74146faf: lock addl $0x0,(%rsp)
  0x00007fab74146fb4: mov    %rax,%r10
  0x00007fab74146fb7: shr    $0x3,%r10
  0x00007fab74146fbb: mov    %r10d,0x18(%r8)
  0x00007fab74146fbf: mov    %r8,%rax
  0x00007fab74146fc2: shr    $0x9,%rax
  0x00007fab74146fc6: movb   $0x0,(%rax,%rcx,1)
  0x00007fab74146fca: lock addl $0x0,(%rsp)     ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@247 (line 1043)

  0x00007fab74146fcf: movabs $0x7fab61b96940,%rdx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146fd9: incl   0x5b8(%rdx)
  0x00007fab74146fdf: movabs $0x0,%rdx          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@250 (line 1045)
                                                ;   {oop(NULL)}
  0x00007fab74146fe9: movabs $0x7fab61b96940,%rcx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74146ff3: incl   0x5e8(%rcx)
  0x00007fab74146ff9: mov    %rdx,%rdi
  0x00007fab74146ffc: mov    %rbx,%rax
  0x00007fab74146fff: mov    %r9,%r8
  0x00007fab74147002: mov    %r14,%rcx
  0x00007fab74147005: jmpq   0x00007fab74147872  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@259 (line 1031)

  0x00007fab7414700a: mov    %rbx,0xc0(%rsp)
  0x00007fab74147012: mov    0xa8(%rsp),%r13d
  0x00007fab7414701a: mov    0xa0(%rsp),%r9d
  0x00007fab74147022: mov    0x98(%rsp),%r14
  0x00007fab7414702a: mov    0x90(%rsp),%r11
  0x00007fab74147032: cmp    $0x0,%rdi
  0x00007fab74147036: jne    0x00007fab74147052
  0x00007fab74147038: movabs $0x7fab61b96940,%r8  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74147042: orl    $0x100,0x5f8(%r8)
  0x00007fab7414704d: jmpq   0x00007fab7414729f
  0x00007fab74147052: nopw   0x0(%rax,%rax,1)
  0x00007fab74147058: jmpq   0x00007fab74147cd3  ;   {no_reloc}
  0x00007fab7414705d: add    %al,(%rax)
  0x00007fab7414705f: add    %al,(%rax)
  0x00007fab74147061: add    %al,0x47(%rbx,%rcx,4)
  0x00007fab74147065: or     %cl,-0x3f(%rcx)
  0x00007fab74147068: loopne 0x00007fab7414706d
  0x00007fab7414706a: cmp    %rsi,%r8
  0x00007fab7414706d: je     0x00007fab7414709d
  0x00007fab74147073: mov    0xc(%rsi),%ecx
  0x00007fab74147076: cmp    (%r8,%rcx,1),%rsi
  0x00007fab7414707a: je     0x00007fab7414709d
  0x00007fab74147080: cmp    $0x18,%ecx
  0x00007fab74147083: jne    0x00007fab74147283
  0x00007fab74147089: push   %r8
  0x00007fab7414708b: push   %rsi
  0x00007fab7414708c: callq  0x00007fab740fe720  ;   {runtime_call}
  0x00007fab74147091: pop    %r8
  0x00007fab74147093: pop    %rsi
  0x00007fab74147094: cmp    $0x0,%esi
  0x00007fab74147097: je     0x00007fab74147283
  0x00007fab7414709d: movabs $0x7fab61b96940,%r8  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741470a7: mov    0x8(%rdi),%esi
  0x00007fab741470aa: shl    $0x3,%rsi
  0x00007fab741470ae: cmp    0x610(%r8),%rsi
  0x00007fab741470b5: jne    0x00007fab741470c4
  0x00007fab741470b7: addq   $0x1,0x618(%r8)
  0x00007fab741470bf: jmpq   0x00007fab741472a4
  0x00007fab741470c4: cmp    0x620(%r8),%rsi
  0x00007fab741470cb: jne    0x00007fab741470da
  0x00007fab741470cd: addq   $0x1,0x628(%r8)
  0x00007fab741470d5: jmpq   0x00007fab741472a4
  0x00007fab741470da: cmp    0x630(%r8),%rsi
  0x00007fab741470e1: jne    0x00007fab741470f0
  0x00007fab741470e3: addq   $0x1,0x638(%r8)
  0x00007fab741470eb: jmpq   0x00007fab741472a4
  0x00007fab741470f0: cmp    0x640(%r8),%rsi
  0x00007fab741470f7: jne    0x00007fab74147106
  0x00007fab741470f9: addq   $0x1,0x648(%r8)
  0x00007fab74147101: jmpq   0x00007fab741472a4
  0x00007fab74147106: cmp    0x650(%r8),%rsi
  0x00007fab7414710d: jne    0x00007fab7414711c
  0x00007fab7414710f: addq   $0x1,0x658(%r8)
  0x00007fab74147117: jmpq   0x00007fab741472a4
  0x00007fab7414711c: cmp    0x660(%r8),%rsi
  0x00007fab74147123: jne    0x00007fab74147132
  0x00007fab74147125: addq   $0x1,0x668(%r8)
  0x00007fab7414712d: jmpq   0x00007fab741472a4
  0x00007fab74147132: cmp    0x670(%r8),%rsi
  0x00007fab74147139: jne    0x00007fab74147148
  0x00007fab7414713b: addq   $0x1,0x678(%r8)
  0x00007fab74147143: jmpq   0x00007fab741472a4
  0x00007fab74147148: cmp    0x680(%r8),%rsi
  0x00007fab7414714f: jne    0x00007fab7414715e
  0x00007fab74147151: addq   $0x1,0x688(%r8)
  0x00007fab74147159: jmpq   0x00007fab741472a4
  0x00007fab7414715e: cmpq   $0x0,0x610(%r8)
  0x00007fab74147169: jne    0x00007fab74147182
  0x00007fab7414716b: mov    %rsi,0x610(%r8)
  0x00007fab74147172: movq   $0x1,0x618(%r8)
  0x00007fab7414717d: jmpq   0x00007fab741472a4
  0x00007fab74147182: cmpq   $0x0,0x620(%r8)
  0x00007fab7414718d: jne    0x00007fab741471a6
  0x00007fab7414718f: mov    %rsi,0x620(%r8)
  0x00007fab74147196: movq   $0x1,0x628(%r8)
  0x00007fab741471a1: jmpq   0x00007fab741472a4
  0x00007fab741471a6: cmpq   $0x0,0x630(%r8)
  0x00007fab741471b1: jne    0x00007fab741471ca
  0x00007fab741471b3: mov    %rsi,0x630(%r8)
  0x00007fab741471ba: movq   $0x1,0x638(%r8)
  0x00007fab741471c5: jmpq   0x00007fab741472a4
  0x00007fab741471ca: cmpq   $0x0,0x640(%r8)
  0x00007fab741471d5: jne    0x00007fab741471ee
  0x00007fab741471d7: mov    %rsi,0x640(%r8)
  0x00007fab741471de: movq   $0x1,0x648(%r8)
  0x00007fab741471e9: jmpq   0x00007fab741472a4
  0x00007fab741471ee: cmpq   $0x0,0x650(%r8)
  0x00007fab741471f9: jne    0x00007fab74147212
  0x00007fab741471fb: mov    %rsi,0x650(%r8)
  0x00007fab74147202: movq   $0x1,0x658(%r8)
  0x00007fab7414720d: jmpq   0x00007fab741472a4
  0x00007fab74147212: cmpq   $0x0,0x660(%r8)
  0x00007fab7414721d: jne    0x00007fab74147236
  0x00007fab7414721f: mov    %rsi,0x660(%r8)
  0x00007fab74147226: movq   $0x1,0x668(%r8)
  0x00007fab74147231: jmpq   0x00007fab741472a4
  0x00007fab74147236: cmpq   $0x0,0x670(%r8)
  0x00007fab74147241: jne    0x00007fab7414725a
  0x00007fab74147243: mov    %rsi,0x670(%r8)
  0x00007fab7414724a: movq   $0x1,0x678(%r8)
  0x00007fab74147255: jmpq   0x00007fab741472a4
  0x00007fab7414725a: cmpq   $0x0,0x680(%r8)
  0x00007fab74147265: jne    0x00007fab7414727e
  0x00007fab74147267: mov    %rsi,0x680(%r8)
  0x00007fab7414726e: movq   $0x1,0x688(%r8)
  0x00007fab74147279: jmpq   0x00007fab741472a4
  0x00007fab7414727e: jmpq   0x00007fab741472a4
  0x00007fab74147283: movabs $0x7fab61b96940,%r8  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7414728d: subq   $0x1,0x600(%r8)
  0x00007fab74147295: jmpq   0x00007fab7414729f
  0x00007fab7414729a: jmpq   0x00007fab741472a4
  0x00007fab7414729f: xor    %rdx,%rdx
  0x00007fab741472a2: jmp    0x00007fab741472ae
  0x00007fab741472a4: movabs $0x1,%rdx          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@264 (line 1049)

  0x00007fab741472ae: cmp    $0x0,%edx
  0x00007fab741472b1: movabs $0x7fab61b96940,%rdx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741472bb: movabs $0x698,%rcx
  0x00007fab741472c5: je     0x00007fab741472d5
  0x00007fab741472cb: movabs $0x6a8,%rcx
  0x00007fab741472d5: mov    (%rdx,%rcx,1),%r8
  0x00007fab741472d9: lea    0x1(%r8),%r8
  0x00007fab741472dd: mov    %r8,(%rdx,%rcx,1)
  0x00007fab741472e1: jne    0x00007fab74147303  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@267 (line 1049)

  0x00007fab741472e7: mov    0xa4(%rsp),%eax
  0x00007fab741472ee: movabs $0x0,%rdi          ;   {oop(NULL)}
  0x00007fab741472f8: mov    %r9,%r8
  0x00007fab741472fb: mov    %r14,%rcx
  0x00007fab741472fe: jmpq   0x00007fab74147872  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1060)

  0x00007fab74147303: cmp    $0x0,%rdi
  0x00007fab74147307: jne    0x00007fab74147322
  0x00007fab74147309: movabs $0x7fab61b96940,%rcx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74147313: orl    $0x100,0x6b0(%rcx)
  0x00007fab7414731d: jmpq   0x00007fab7414756c
  0x00007fab74147322: nopw   0x0(%rax,%rax,1)
  0x00007fab74147328: jmpq   0x00007fab74147cec  ;   {no_reloc}
  0x00007fab7414732d: add    %al,(%rax)
  0x00007fab7414732f: add    %al,(%rax)
  0x00007fab74147331: add    %cl,-0x3eb7f7b1(%rbx)
  0x00007fab74147337: loope  0x00007fab7414733c
  0x00007fab74147339: cmp    %rbx,%rcx
  0x00007fab7414733c: je     0x00007fab7414736a
  0x00007fab74147342: mov    0xc(%rbx),%edx
  0x00007fab74147345: cmp    (%rcx,%rdx,1),%rbx
  0x00007fab74147349: je     0x00007fab7414736a
  0x00007fab7414734f: cmp    $0x18,%edx
  0x00007fab74147352: jne    0x00007fab74147550
  0x00007fab74147358: push   %rcx
  0x00007fab74147359: push   %rbx
  0x00007fab7414735a: callq  0x00007fab740fe720  ;   {runtime_call}
  0x00007fab7414735f: pop    %rcx
  0x00007fab74147360: pop    %rbx
  0x00007fab74147361: cmp    $0x0,%ebx
  0x00007fab74147364: je     0x00007fab74147550
  0x00007fab7414736a: movabs $0x7fab61b96940,%rcx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74147374: mov    0x8(%rdi),%ebx
  0x00007fab74147377: shl    $0x3,%rbx
  0x00007fab7414737b: cmp    0x6c8(%rcx),%rbx
  0x00007fab74147382: jne    0x00007fab74147391
  0x00007fab74147384: addq   $0x1,0x6d0(%rcx)
  0x00007fab7414738c: jmpq   0x00007fab7414756c
  0x00007fab74147391: cmp    0x6d8(%rcx),%rbx
  0x00007fab74147398: jne    0x00007fab741473a7
  0x00007fab7414739a: addq   $0x1,0x6e0(%rcx)
  0x00007fab741473a2: jmpq   0x00007fab7414756c
  0x00007fab741473a7: cmp    0x6e8(%rcx),%rbx
  0x00007fab741473ae: jne    0x00007fab741473bd
  0x00007fab741473b0: addq   $0x1,0x6f0(%rcx)
  0x00007fab741473b8: jmpq   0x00007fab7414756c
  0x00007fab741473bd: cmp    0x6f8(%rcx),%rbx
  0x00007fab741473c4: jne    0x00007fab741473d3
  0x00007fab741473c6: addq   $0x1,0x700(%rcx)
  0x00007fab741473ce: jmpq   0x00007fab7414756c
  0x00007fab741473d3: cmp    0x708(%rcx),%rbx
  0x00007fab741473da: jne    0x00007fab741473e9
  0x00007fab741473dc: addq   $0x1,0x710(%rcx)
  0x00007fab741473e4: jmpq   0x00007fab7414756c
  0x00007fab741473e9: cmp    0x718(%rcx),%rbx
  0x00007fab741473f0: jne    0x00007fab741473ff
  0x00007fab741473f2: addq   $0x1,0x720(%rcx)
  0x00007fab741473fa: jmpq   0x00007fab7414756c
  0x00007fab741473ff: cmp    0x728(%rcx),%rbx
  0x00007fab74147406: jne    0x00007fab74147415
  0x00007fab74147408: addq   $0x1,0x730(%rcx)
  0x00007fab74147410: jmpq   0x00007fab7414756c
  0x00007fab74147415: cmp    0x738(%rcx),%rbx
  0x00007fab7414741c: jne    0x00007fab7414742b
  0x00007fab7414741e: addq   $0x1,0x740(%rcx)
  0x00007fab74147426: jmpq   0x00007fab7414756c
  0x00007fab7414742b: cmpq   $0x0,0x6c8(%rcx)
  0x00007fab74147436: jne    0x00007fab7414744f
  0x00007fab74147438: mov    %rbx,0x6c8(%rcx)
  0x00007fab7414743f: movq   $0x1,0x6d0(%rcx)
  0x00007fab7414744a: jmpq   0x00007fab7414756c
  0x00007fab7414744f: cmpq   $0x0,0x6d8(%rcx)
  0x00007fab7414745a: jne    0x00007fab74147473
  0x00007fab7414745c: mov    %rbx,0x6d8(%rcx)
  0x00007fab74147463: movq   $0x1,0x6e0(%rcx)
  0x00007fab7414746e: jmpq   0x00007fab7414756c
  0x00007fab74147473: cmpq   $0x0,0x6e8(%rcx)
  0x00007fab7414747e: jne    0x00007fab74147497
  0x00007fab74147480: mov    %rbx,0x6e8(%rcx)
  0x00007fab74147487: movq   $0x1,0x6f0(%rcx)
  0x00007fab74147492: jmpq   0x00007fab7414756c
  0x00007fab74147497: cmpq   $0x0,0x6f8(%rcx)
  0x00007fab741474a2: jne    0x00007fab741474bb
  0x00007fab741474a4: mov    %rbx,0x6f8(%rcx)
  0x00007fab741474ab: movq   $0x1,0x700(%rcx)
  0x00007fab741474b6: jmpq   0x00007fab7414756c
  0x00007fab741474bb: cmpq   $0x0,0x708(%rcx)
  0x00007fab741474c6: jne    0x00007fab741474df
  0x00007fab741474c8: mov    %rbx,0x708(%rcx)
  0x00007fab741474cf: movq   $0x1,0x710(%rcx)
  0x00007fab741474da: jmpq   0x00007fab7414756c
  0x00007fab741474df: cmpq   $0x0,0x718(%rcx)
  0x00007fab741474ea: jne    0x00007fab74147503
  0x00007fab741474ec: mov    %rbx,0x718(%rcx)
  0x00007fab741474f3: movq   $0x1,0x720(%rcx)
  0x00007fab741474fe: jmpq   0x00007fab7414756c
  0x00007fab74147503: cmpq   $0x0,0x728(%rcx)
  0x00007fab7414750e: jne    0x00007fab74147527
  0x00007fab74147510: mov    %rbx,0x728(%rcx)
  0x00007fab74147517: movq   $0x1,0x730(%rcx)
  0x00007fab74147522: jmpq   0x00007fab7414756c
  0x00007fab74147527: cmpq   $0x0,0x738(%rcx)
  0x00007fab74147532: jne    0x00007fab7414754b
  0x00007fab74147534: mov    %rbx,0x738(%rcx)
  0x00007fab7414753b: movq   $0x1,0x740(%rcx)
  0x00007fab74147546: jmpq   0x00007fab7414756c
  0x00007fab7414754b: jmpq   0x00007fab7414756c
  0x00007fab74147550: movabs $0x7fab61b96940,%rcx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7414755a: subq   $0x1,0x6b8(%rcx)
  0x00007fab74147562: jmpq   0x00007fab74147cf6
  0x00007fab74147567: jmpq   0x00007fab7414756c
  0x00007fab7414756c: mov    %rdi,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@275 (line 1052)

  0x00007fab7414756f: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00007fab74147cff
  0x00007fab74147572: mov    %rsi,%rdx
  0x00007fab74147575: movabs $0x7fab61b96940,%rcx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7414757f: mov    0x8(%rdx),%edx
  0x00007fab74147582: shl    $0x3,%rdx
  0x00007fab74147586: cmp    0x760(%rcx),%rdx
  0x00007fab7414758d: jne    0x00007fab7414759c
  0x00007fab7414758f: addq   $0x1,0x768(%rcx)
  0x00007fab74147597: jmpq   0x00007fab7414775e
  0x00007fab7414759c: cmp    0x770(%rcx),%rdx
  0x00007fab741475a3: jne    0x00007fab741475b2
  0x00007fab741475a5: addq   $0x1,0x778(%rcx)
  0x00007fab741475ad: jmpq   0x00007fab7414775e
  0x00007fab741475b2: cmp    0x780(%rcx),%rdx
  0x00007fab741475b9: jne    0x00007fab741475c8
  0x00007fab741475bb: addq   $0x1,0x788(%rcx)
  0x00007fab741475c3: jmpq   0x00007fab7414775e
  0x00007fab741475c8: cmp    0x790(%rcx),%rdx
  0x00007fab741475cf: jne    0x00007fab741475de
  0x00007fab741475d1: addq   $0x1,0x798(%rcx)
  0x00007fab741475d9: jmpq   0x00007fab7414775e
  0x00007fab741475de: cmp    0x7a0(%rcx),%rdx
  0x00007fab741475e5: jne    0x00007fab741475f4
  0x00007fab741475e7: addq   $0x1,0x7a8(%rcx)
  0x00007fab741475ef: jmpq   0x00007fab7414775e
  0x00007fab741475f4: cmp    0x7b0(%rcx),%rdx
  0x00007fab741475fb: jne    0x00007fab7414760a
  0x00007fab741475fd: addq   $0x1,0x7b8(%rcx)
  0x00007fab74147605: jmpq   0x00007fab7414775e
  0x00007fab7414760a: cmp    0x7c0(%rcx),%rdx
  0x00007fab74147611: jne    0x00007fab74147620
  0x00007fab74147613: addq   $0x1,0x7c8(%rcx)
  0x00007fab7414761b: jmpq   0x00007fab7414775e
  0x00007fab74147620: cmp    0x7d0(%rcx),%rdx
  0x00007fab74147627: jne    0x00007fab74147636
  0x00007fab74147629: addq   $0x1,0x7d8(%rcx)
  0x00007fab74147631: jmpq   0x00007fab7414775e
  0x00007fab74147636: cmpq   $0x0,0x760(%rcx)
  0x00007fab74147641: jne    0x00007fab7414765a
  0x00007fab74147643: mov    %rdx,0x760(%rcx)
  0x00007fab7414764a: movq   $0x1,0x768(%rcx)
  0x00007fab74147655: jmpq   0x00007fab7414775e
  0x00007fab7414765a: cmpq   $0x0,0x770(%rcx)
  0x00007fab74147665: jne    0x00007fab7414767e
  0x00007fab74147667: mov    %rdx,0x770(%rcx)
  0x00007fab7414766e: movq   $0x1,0x778(%rcx)
  0x00007fab74147679: jmpq   0x00007fab7414775e
  0x00007fab7414767e: cmpq   $0x0,0x780(%rcx)
  0x00007fab74147689: jne    0x00007fab741476a2
  0x00007fab7414768b: mov    %rdx,0x780(%rcx)
  0x00007fab74147692: movq   $0x1,0x788(%rcx)
  0x00007fab7414769d: jmpq   0x00007fab7414775e
  0x00007fab741476a2: cmpq   $0x0,0x790(%rcx)
  0x00007fab741476ad: jne    0x00007fab741476c6
  0x00007fab741476af: mov    %rdx,0x790(%rcx)
  0x00007fab741476b6: movq   $0x1,0x798(%rcx)
  0x00007fab741476c1: jmpq   0x00007fab7414775e
  0x00007fab741476c6: cmpq   $0x0,0x7a0(%rcx)
  0x00007fab741476d1: jne    0x00007fab741476ea
  0x00007fab741476d3: mov    %rdx,0x7a0(%rcx)
  0x00007fab741476da: movq   $0x1,0x7a8(%rcx)
  0x00007fab741476e5: jmpq   0x00007fab7414775e
  0x00007fab741476ea: cmpq   $0x0,0x7b0(%rcx)
  0x00007fab741476f5: jne    0x00007fab7414770e
  0x00007fab741476f7: mov    %rdx,0x7b0(%rcx)
  0x00007fab741476fe: movq   $0x1,0x7b8(%rcx)
  0x00007fab74147709: jmpq   0x00007fab7414775e
  0x00007fab7414770e: cmpq   $0x0,0x7c0(%rcx)
  0x00007fab74147719: jne    0x00007fab74147732
  0x00007fab7414771b: mov    %rdx,0x7c0(%rcx)
  0x00007fab74147722: movq   $0x1,0x7c8(%rcx)
  0x00007fab7414772d: jmpq   0x00007fab7414775e
  0x00007fab74147732: cmpq   $0x0,0x7d0(%rcx)
  0x00007fab7414773d: jne    0x00007fab74147756
  0x00007fab7414773f: mov    %rdx,0x7d0(%rcx)
  0x00007fab74147746: movq   $0x1,0x7d8(%rcx)
  0x00007fab74147751: jmpq   0x00007fab7414775e
  0x00007fab74147756: addq   $0x1,0x750(%rcx)
  0x00007fab7414775e: mov    %r13,%rdx
  0x00007fab74147761: mov    %r11,%rcx
  0x00007fab74147764: mov    %r14,%r8           ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@282 (line 1052)

  0x00007fab74147767: nop
  0x00007fab74147768: nop
  0x00007fab74147769: nop
  0x00007fab7414776a: nop
  0x00007fab7414776b: nop
  0x00007fab7414776c: nop
  0x00007fab7414776d: movabs $0xffffffffffffffff,%rax
  0x00007fab74147777: callq  0x00007fab74047f60  ; OopMap{[136]=Oop [192]=Oop [184]=Oop [152]=Oop [144]=Oop [232]=Oop off=7068}
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@282 (line 1052)
                                                ;   {virtual_call}
  0x00007fab7414777c: cmp    $0x0,%rax
  0x00007fab74147780: movabs $0x7fab61b96940,%rdx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7414778a: movabs $0x7e8,%rcx
  0x00007fab74147794: je     0x00007fab741477a4
  0x00007fab7414779a: movabs $0x7f8,%rcx
  0x00007fab741477a4: mov    (%rdx,%rcx,1),%rsi
  0x00007fab741477a8: lea    0x1(%rsi),%rsi
  0x00007fab741477ac: mov    %rsi,(%rdx,%rcx,1)
  0x00007fab741477b0: jne    0x00007fab741477da  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@288 (line 1052)

  0x00007fab741477b6: movabs $0x0,%rdi          ;   {oop(NULL)}
  0x00007fab741477c0: mov    $0x2,%eax
  0x00007fab741477c5: mov    0xa0(%rsp),%r8d
  0x00007fab741477cd: mov    0x98(%rsp),%rcx
  0x00007fab741477d5: jmpq   0x00007fab74147872  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1060)

  0x00007fab741477da: mov    0xb8(%rsp),%rdi
  0x00007fab741477e2: mov    0xa0(%rsp),%r8d
  0x00007fab741477ea: mov    0x14(%rax),%edx    ; implicit exception: dispatches to 0x00007fab74147d04
  0x00007fab741477ed: shl    $0x3,%rdx          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1054)

  0x00007fab741477f1: cmp    $0x0,%r8d
  0x00007fab741477f5: movabs $0x7fab61b96940,%rcx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741477ff: movabs $0x808,%rsi
  0x00007fab74147809: jne    0x00007fab74147819
  0x00007fab7414780f: movabs $0x818,%rsi
  0x00007fab74147819: mov    (%rcx,%rsi,1),%rdi
  0x00007fab7414781d: lea    0x1(%rdi),%rdi
  0x00007fab74147821: mov    %rdi,(%rcx,%rsi,1)
  0x00007fab74147825: je     0x00007fab74147840  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@299 (line 1055)

  0x00007fab7414782b: mov    %rdx,%rdi
  0x00007fab7414782e: mov    $0x2,%eax
  0x00007fab74147833: mov    0x98(%rsp),%rcx
  0x00007fab7414783b: jmpq   0x00007fab74147872  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1060)

  0x00007fab74147840: mov    0x98(%rsp),%rcx
  0x00007fab74147848: mov    %rcx,%r10
  0x00007fab7414784b: shr    $0x3,%r10
  0x00007fab7414784f: mov    %r10d,0x14(%rax)
  0x00007fab74147853: shr    $0x9,%rax
  0x00007fab74147857: movabs $0x7fab701ff000,%rsi
  0x00007fab74147861: movb   $0x0,(%rax,%rsi,1)
  0x00007fab74147865: lock addl $0x0,(%rsp)     ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1056)

  0x00007fab7414786a: mov    %rdx,%rdi
  0x00007fab7414786d: mov    $0x2,%eax          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1060)

  0x00007fab74147872: mov    %rax,%rbx
  0x00007fab74147875: lea    0xe0(%rsp),%rax
  0x00007fab7414787d: mov    0x8(%rax),%rsi
  0x00007fab74147881: mov    (%rsi),%rdx
  0x00007fab74147884: and    $0x7,%rdx
  0x00007fab74147888: cmp    $0x5,%rdx
  0x00007fab7414788c: je     0x00007fab741478a9
  0x00007fab74147892: mov    (%rax),%rdx
  0x00007fab74147895: test   %rdx,%rdx
  0x00007fab74147898: je     0x00007fab741478a9
  0x00007fab7414789e: lock cmpxchg %rdx,(%rsi)
  0x00007fab741478a3: jne    0x00007fab74147d09  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@310 (line 1060)

  0x00007fab741478a9: movabs $0x7fab61b96940,%rdx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741478b3: incl   0x828(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@311 (line 1060)

  0x00007fab741478b9: cmp    $0x0,%ebx
  0x00007fab741478bc: movabs $0x7fab61b96940,%rdx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741478c6: movabs $0x840,%rsi
  0x00007fab741478d0: je     0x00007fab741478e0
  0x00007fab741478d6: movabs $0x850,%rsi
  0x00007fab741478e0: mov    (%rdx,%rsi,1),%rax
  0x00007fab741478e4: lea    0x1(%rax),%rax
  0x00007fab741478e8: mov    %rax,(%rdx,%rsi,1)
  0x00007fab741478ec: jne    0x00007fab74147962  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324 (line 1061)

  0x00007fab741478f2: mov    0xc0(%rsp),%rax
  0x00007fab741478fa: mov    %rbx,%rsi          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@350 (line 1069)

  0x00007fab741478fd: movabs $0x7fab61b96940,%rdx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74147907: mov    0x100(%rdx),%edi
  0x00007fab7414790d: add    $0x8,%edi
  0x00007fab74147910: mov    %edi,0x100(%rdx)
  0x00007fab74147916: movabs $0x7fab61a73e58,%rdx  ;   {metadata({method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74147920: and    $0xfff8,%edi
  0x00007fab74147926: cmp    $0x0,%edi
  0x00007fab74147929: je     0x00007fab74147d1f  ; OopMap{[136]=Oop [144]=Oop rcx=Oop [152]=Oop rax=Oop off=7503}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@350 (line 1069)

  0x00007fab7414792f: test   %eax,0x1b69a7cb(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab74147935: movabs $0x7fab61b96940,%rdx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab7414793f: incl   0x8b0(%rdx)
  0x00007fab74147945: mov    %rax,%rdx
  0x00007fab74147948: mov    %rsi,%rax
  0x00007fab7414794b: mov    %rdx,%rbx
  0x00007fab7414794e: mov    %eax,0xa4(%rsp)
  0x00007fab74147955: mov    0x88(%rsp),%rdi
  0x00007fab7414795d: jmpq   0x00007fab74145f58  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@350 (line 1069)

  0x00007fab74147962: mov    0xc0(%rsp),%rdx
  0x00007fab7414796a: cmp    $0x8,%ebx
  0x00007fab7414796d: movabs $0x7fab61b96940,%rcx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74147977: movabs $0x860,%rsi
  0x00007fab74147981: jl     0x00007fab74147991
  0x00007fab74147987: movabs $0x870,%rsi
  0x00007fab74147991: mov    (%rcx,%rsi,1),%rax
  0x00007fab74147995: lea    0x1(%rax),%rax
  0x00007fab74147999: mov    %rax,(%rcx,%rsi,1)
  0x00007fab7414799d: jge    0x00007fab741479af  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@331 (line 1062)

  0x00007fab741479a3: mov    %ebx,0xcc(%rsp)
  0x00007fab741479aa: jmpq   0x00007fab741479fc  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@342 (line 1064)

  0x00007fab741479af: mov    %rdi,0xd0(%rsp)
  0x00007fab741479b7: mov    %ebx,0xcc(%rsp)
  0x00007fab741479be: mov    0xc8(%rsp),%r9d
  0x00007fab741479c6: mov    0x88(%rsp),%rsi
  0x00007fab741479ce: movabs $0x7fab61b96940,%rcx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab741479d8: addq   $0x1,0x880(%rcx)
  0x00007fab741479e0: mov    %r9,%rcx
  0x00007fab741479e3: mov    0x88(%rsp),%rsi    ;*invokespecial treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@339 (line 1063)

  0x00007fab741479eb: nop
  0x00007fab741479ec: nop
  0x00007fab741479ed: nop
  0x00007fab741479ee: nop
  0x00007fab741479ef: callq  0x00007fab74047d60  ; OopMap{[136]=Oop [208]=Oop off=7700}
                                                ;*invokespecial treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@339 (line 1063)
                                                ;   {optimized virtual_call}
  0x00007fab741479f4: mov    0xd0(%rsp),%rdi
  0x00007fab741479fc: cmp    $0x0,%rdi
  0x00007fab74147a00: movabs $0x7fab61b96940,%rax  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74147a0a: movabs $0x890,%rdx
  0x00007fab74147a14: je     0x00007fab74147a24
  0x00007fab74147a1a: movabs $0x8a0,%rdx
  0x00007fab74147a24: mov    (%rax,%rdx,1),%rcx
  0x00007fab74147a28: lea    0x1(%rcx),%rcx
  0x00007fab74147a2c: mov    %rcx,(%rax,%rdx,1)
  0x00007fab74147a30: jne    0x00007fab74147a42  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@344 (line 1064)

  0x00007fab74147a36: mov    0xcc(%rsp),%eax
  0x00007fab74147a3d: jmpq   0x00007fab74147a6b  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@353 (line 1070)

  0x00007fab74147a42: mov    %rdi,%rax
  0x00007fab74147a45: add    $0x100,%rsp
  0x00007fab74147a4c: pop    %rbp
  0x00007fab74147a4d: test   %eax,0x1b69a6ad(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74147a53: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@349 (line 1065)

  0x00007fab74147a54: mov    0xa4(%rsp),%eax
  0x00007fab74147a5b: movabs $0x7fab61b96940,%rdx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74147a65: incl   0x300(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@101 (line 1021)

  0x00007fab74147a6b: mov    0x88(%rsp),%rsi
  0x00007fab74147a73: mov    %rsi,%rdx
  0x00007fab74147a76: movabs $0x7fab61b96940,%rcx  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74147a80: addq   $0x1,0x8c8(%rcx)
  0x00007fab74147a88: movabs $0x1,%rdx
  0x00007fab74147a92: mov    %rax,%rcx          ;*invokespecial addCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357 (line 1070)

  0x00007fab74147a95: nop
  0x00007fab74147a96: nop
  0x00007fab74147a97: callq  0x00007fab74047d60  ; OopMap{off=7868}
                                                ;*invokespecial addCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357 (line 1070)
                                                ;   {optimized virtual_call}
  0x00007fab74147a9c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fab74147aa6: add    $0x100,%rsp
  0x00007fab74147aad: pop    %rbp
  0x00007fab74147aae: test   %eax,0x1b69a64c(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74147ab4: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@361 (line 1071)

  0x00007fab74147ab5: data16 xchg %ax,%ax
  0x00007fab74147ab8: jmpq   0x00007fab74147d45  ;   {no_reloc}
  0x00007fab74147abd: add    %al,(%rax)
  0x00007fab74147abf: add    %al,(%rax)
  0x00007fab74147ac1: add    %cl,-0x75(%rcx)
  0x00007fab74147ac4: rex.RXB (bad) 
  0x00007fab74147ac6: lea    0x20(%rax),%rdi
  0x00007fab74147aca: cmp    0x70(%r15),%rdi
  0x00007fab74147ace: ja     0x00007fab74147d4f
  0x00007fab74147ad4: mov    %rdi,0x60(%r15)
  0x00007fab74147ad8: mov    0xa8(%rdx),%rcx
  0x00007fab74147adf: mov    %rcx,(%rax)
  0x00007fab74147ae2: mov    %rdx,%rcx
  0x00007fab74147ae5: shr    $0x3,%rcx
  0x00007fab74147ae9: mov    %ecx,0x8(%rax)
  0x00007fab74147aec: xor    %rcx,%rcx
  0x00007fab74147aef: mov    %ecx,0xc(%rax)
  0x00007fab74147af2: xor    %rcx,%rcx
  0x00007fab74147af5: mov    %rcx,0x10(%rax)
  0x00007fab74147af9: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)

  0x00007fab74147afd: mov    %rax,%rsi
  0x00007fab74147b00: movabs $0x7fab61b96940,%rdi  ;   {metadata(method data for {method} {0x00007fab61a73e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fab74147b0a: addq   $0x1,0x170(%rdi)
  0x00007fab74147b12: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@12 (line 1011)

  0x00007fab74147b15: mov    %rax,0xd8(%rsp)
  0x00007fab74147b1d: nop
  0x00007fab74147b1e: nop
  0x00007fab74147b1f: callq  0x00007fab74047d60  ; OopMap{[216]=Oop off=8004}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@12 (line 1011)
                                                ;   {optimized virtual_call}
  0x00007fab74147b24: mov    0xd8(%rsp),%rax
  0x00007fab74147b2c: jmpq   0x00007fab74147d9d  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@15 (line 1011)

  0x00007fab74147b31: mov    0x2c0(%r15),%rax
  0x00007fab74147b38: xor    %r10,%r10
  0x00007fab74147b3b: mov    %r10,0x2c0(%r15)
  0x00007fab74147b42: xor    %r10,%r10
  0x00007fab74147b45: mov    %r10,0x2c8(%r15)
  0x00007fab74147b4c: mov    %rax,%rsi
  0x00007fab74147b4f: lea    0xe0(%rsp),%rax
  0x00007fab74147b57: mov    0x8(%rax),%rbx
  0x00007fab74147b5b: mov    (%rbx),%rdi
  0x00007fab74147b5e: and    $0x7,%rdi
  0x00007fab74147b62: cmp    $0x5,%rdi
  0x00007fab74147b66: je     0x00007fab74147b83
  0x00007fab74147b6c: mov    (%rax),%rdi
  0x00007fab74147b6f: test   %rdi,%rdi
  0x00007fab74147b72: je     0x00007fab74147b83
  0x00007fab74147b78: lock cmpxchg %rdi,(%rbx)
  0x00007fab74147b7d: jne    0x00007fab74147d5c  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@318 (line 1060)

  0x00007fab74147b83: mov    %rsi,%rax
  0x00007fab74147b86: jmpq   0x00007fab74147d9d
  0x00007fab74147b8b: mov    %rdi,0x8(%rsp)
  0x00007fab74147b90: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74147b98: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [136]=Oop rdx=Oop [144]=Oop rcx=Oop [152]=Oop off=8125}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@-1 (line 1011)
                                                ;   {runtime_call}
  0x00007fab74147b9d: jmpq   0x00007fab74145c61
  0x00007fab74147ba2: callq  0x00007fab740fc000  ; OopMap{[152]=Oop [136]=Oop rdx=Oop [144]=Oop off=8135}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)
                                                ;   {runtime_call}
  0x00007fab74147ba7: mov    %rsi,0x8(%rsp)
  0x00007fab74147bac: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74147bb4: callq  0x00007fab741005e0  ; OopMap{[136]=Oop [152]=Oop [144]=Oop off=8153}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 685)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@20 (line 1012)
                                                ;   {runtime_call}
  0x00007fab74147bb9: jmpq   0x00007fab74145f20
  0x00007fab74147bbe: callq  0x00007fab740fc000  ; OopMap{rdi=Oop [136]=Oop [152]=Oop [144]=Oop rbx=Oop off=8163}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@41 (line 1016)
                                                ;   {runtime_call}
  0x00007fab74147bc3: mov    %rcx,0x8(%rsp)
  0x00007fab74147bc8: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74147bd0: callq  0x00007fab741005e0  ; OopMap{[152]=Oop [144]=Oop [136]=Oop rbx=Oop off=8181}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 755)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)
                                                ;   {runtime_call}
  0x00007fab74147bd5: jmpq   0x00007fab74146077
  0x00007fab74147bda: mov    %rdx,(%rsp)
  0x00007fab74147bde: callq  0x00007fab740fe2c0  ; OopMap{[152]=Oop [144]=Oop [136]=Oop rbx=Oop off=8195}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)
                                                ;   {runtime_call}
  0x00007fab74147be3: mov    %rdx,%rdx
  0x00007fab74147be6: callq  0x00007fab740fc760  ; OopMap{[136]=Oop rbx=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop off=8203}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@83 (line 1019)
                                                ;   {runtime_call}
  0x00007fab74147beb: jmpq   0x00007fab74146380
  0x00007fab74147bf0: mov    %rax,0x8(%rsp)
  0x00007fab74147bf5: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74147bfd: callq  0x00007fab741005e0  ; OopMap{[136]=Oop rbx=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdx=Oop off=8226}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@-1 (line 625)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@92 (line 1019)
                                                ;   {runtime_call}
  0x00007fab74147c02: jmpq   0x00007fab741463ca
  0x00007fab74147c07: mov    %rax,0x8(%rsp)
  0x00007fab74147c0c: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74147c14: callq  0x00007fab741005e0  ; OopMap{[136]=Oop rbx=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdx=Oop off=8249}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@1 (line 625)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@92 (line 1019)
                                                ;   {runtime_call}
  0x00007fab74147c19: jmpq   0x00007fab74146411
  0x00007fab74147c1e: mov    %rax,0x8(%rsp)
  0x00007fab74147c23: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74147c2b: callq  0x00007fab741005e0  ; OopMap{[136]=Oop rbx=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdx=Oop off=8272}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@-1 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@95 (line 1019)
                                                ;   {runtime_call}
  0x00007fab74147c30: jmpq   0x00007fab74146494
  0x00007fab74147c35: callq  0x00007fab740fc000  ; OopMap{[136]=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdi=Oop [184]=Oop rbx=Oop off=8282}
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@106 (line 1023)
                                                ;   {runtime_call}
  0x00007fab74147c3a: mov    %rdi,0x8(%rsp)
  0x00007fab74147c3f: mov    %rdx,(%rsp)
  0x00007fab74147c43: callq  0x00007fab740fea60  ; OopMap{[136]=Oop [152]=Oop [144]=Oop rbx=Oop rdi=Oop [184]=Oop [232]=Oop off=8296}
                                                ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@137 (line 1027)
                                                ;   {runtime_call}
  0x00007fab74147c48: jmpq   0x00007fab74146699
  0x00007fab74147c4d: mov    %rdx,0x8(%rsp)
  0x00007fab74147c52: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74147c5a: callq  0x00007fab741005e0  ; OopMap{[136]=Oop [152]=Oop [144]=Oop rbx=Oop rdi=Oop [184]=Oop [232]=Oop off=8319}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 755)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@142 (line 1028)
                                                ;   {runtime_call}
  0x00007fab74147c5f: jmpq   0x00007fab741466dd
  0x00007fab74147c64: mov    %rdx,(%rsp)
  0x00007fab74147c68: callq  0x00007fab740fe2c0  ; OopMap{[136]=Oop [152]=Oop [144]=Oop rbx=Oop rdi=Oop [184]=Oop [232]=Oop off=8333}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@142 (line 1028)
                                                ;   {runtime_call}
  0x00007fab74147c6d: callq  0x00007fab740fc000  ; OopMap{[136]=Oop [152]=Oop rax=Oop rdx=Oop [144]=Oop [184]=Oop [192]=Oop [232]=Oop off=8338}
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@164 (line 1033)
                                                ;   {runtime_call}
  0x00007fab74147c72: mov    %rsi,0x8(%rsp)
  0x00007fab74147c77: movq   $0x100,(%rsp)
  0x00007fab74147c7f: callq  0x00007fab741005e0  ; OopMap{[136]=Oop [152]=Oop [144]=Oop [192]=Oop [184]=Oop rdx=Oop [232]=Oop off=8356}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@256 (line 1031)
                                                ;   {runtime_call}
  0x00007fab74147c84: jmpq   0x00007fab74146d82
  0x00007fab74147c89: mov    %rdx,%rdx
  0x00007fab74147c8c: callq  0x00007fab740fc760  ; OopMap{[136]=Oop [192]=Oop [184]=Oop r8=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop [232]=Oop off=8369}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@235 (line 1043)
                                                ;   {runtime_call}
  0x00007fab74147c91: jmpq   0x00007fab74146ee7
  0x00007fab74147c96: mov    %rdx,0x8(%rsp)
  0x00007fab74147c9b: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74147ca3: callq  0x00007fab741005e0  ; OopMap{[136]=Oop [192]=Oop [184]=Oop r8=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rax=Oop [232]=Oop off=8392}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@-1 (line 625)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@244 (line 1043)
                                                ;   {runtime_call}
  0x00007fab74147ca8: jmpq   0x00007fab74146f2e
  0x00007fab74147cad: mov    %rdx,0x8(%rsp)
  0x00007fab74147cb2: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74147cba: callq  0x00007fab741005e0  ; OopMap{[136]=Oop [192]=Oop [184]=Oop r8=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rax=Oop [232]=Oop off=8415}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@1 (line 625)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@244 (line 1043)
                                                ;   {runtime_call}
  0x00007fab74147cbf: jmpq   0x00007fab74146f75
  0x00007fab74147cc4: movabs $0x0,%rsi          ;   {metadata(NULL)}
  0x00007fab74147cce: mov    $0xa050f00,%eax
  0x00007fab74147cd3: callq  0x00007fab740ff5e0  ; OopMap{[136]=Oop [192]=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdi=Oop [184]=Oop [232]=Oop off=8440}
                                                ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@264 (line 1049)
                                                ;   {runtime_call}
  0x00007fab74147cd8: jmpq   0x00007fab74147058
  0x00007fab74147cdd: movabs $0x0,%rbx          ;   {metadata(NULL)}
  0x00007fab74147ce7: mov    $0xa050f00,%eax
  0x00007fab74147cec: callq  0x00007fab740ff5e0  ; OopMap{[136]=Oop [192]=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdi=Oop [184]=Oop [232]=Oop off=8465}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@275 (line 1052)
                                                ;   {runtime_call}
  0x00007fab74147cf1: jmpq   0x00007fab74147328
  0x00007fab74147cf6: mov    %rdi,(%rsp)
  0x00007fab74147cfa: callq  0x00007fab740fe2c0  ; OopMap{[136]=Oop [192]=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdi=Oop [184]=Oop [232]=Oop off=8479}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@275 (line 1052)
                                                ;   {runtime_call}
  0x00007fab74147cff: callq  0x00007fab740fc000  ; OopMap{[136]=Oop [192]=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdi=Oop [184]=Oop rsi=Oop [232]=Oop off=8484}
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@282 (line 1052)
                                                ;   {runtime_call}
  0x00007fab74147d04: callq  0x00007fab740fc000  ; OopMap{[136]=Oop [192]=Oop [152]=Oop [144]=Oop rdi=Oop [184]=Oop rax=Oop [232]=Oop off=8489}
                                                ;*getfield val {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1054)
                                                ;   {runtime_call}
  0x00007fab74147d09: lea    0xe0(%rsp),%rax
  0x00007fab74147d11: mov    %rax,(%rsp)
  0x00007fab74147d15: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab74147d1a: jmpq   0x00007fab741478a9
  0x00007fab74147d1f: mov    %rdx,0x8(%rsp)
  0x00007fab74147d24: movq   $0x15e,(%rsp)
  0x00007fab74147d2c: callq  0x00007fab741005e0  ; OopMap{[136]=Oop [144]=Oop rcx=Oop [152]=Oop rax=Oop off=8529}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@350 (line 1069)
                                                ;   {runtime_call}
  0x00007fab74147d31: jmpq   0x00007fab7414792f
  0x00007fab74147d36: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fab74147d40: mov    $0xa050f00,%eax
  0x00007fab74147d45: callq  0x00007fab740ff5e0  ; OopMap{off=8554}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)
                                                ;   {runtime_call}
  0x00007fab74147d4a: jmpq   0x00007fab74147ab8
  0x00007fab74147d4f: mov    %rdx,%rdx
  0x00007fab74147d52: callq  0x00007fab740fc760  ; OopMap{off=8567}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)
                                                ;   {runtime_call}
  0x00007fab74147d57: jmpq   0x00007fab74147afd
  0x00007fab74147d5c: lea    0xe0(%rsp),%rax
  0x00007fab74147d64: mov    %rax,(%rsp)
  0x00007fab74147d68: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab74147d6d: jmpq   0x00007fab74147b83
  0x00007fab74147d72: nop
  0x00007fab74147d73: nop
  0x00007fab74147d74: mov    0x2c0(%r15),%rax
  0x00007fab74147d7b: movabs $0x0,%r10
  0x00007fab74147d85: mov    %r10,0x2c0(%r15)
  0x00007fab74147d8c: movabs $0x0,%r10
  0x00007fab74147d96: mov    %r10,0x2c8(%r15)
  0x00007fab74147d9d: add    $0x100,%rsp
  0x00007fab74147da4: pop    %rbp
  0x00007fab74147da5: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74147daa: hlt    
  0x00007fab74147dab: hlt    
  0x00007fab74147dac: hlt    
  0x00007fab74147dad: hlt    
  0x00007fab74147dae: hlt    
  0x00007fab74147daf: hlt    
  0x00007fab74147db0: hlt    
  0x00007fab74147db1: hlt    
  0x00007fab74147db2: hlt    
  0x00007fab74147db3: hlt    
  0x00007fab74147db4: hlt    
  0x00007fab74147db5: hlt    
  0x00007fab74147db6: hlt    
  0x00007fab74147db7: hlt    
  0x00007fab74147db8: hlt    
  0x00007fab74147db9: hlt    
  0x00007fab74147dba: hlt    
  0x00007fab74147dbb: hlt    
  0x00007fab74147dbc: hlt    
  0x00007fab74147dbd: hlt    
  0x00007fab74147dbe: hlt    
  0x00007fab74147dbf: hlt    
[Stub Code]
  0x00007fab74147dc0: nop                       ;   {no_reloc}
  0x00007fab74147dc1: nop
  0x00007fab74147dc2: nop
  0x00007fab74147dc3: nop
  0x00007fab74147dc4: nop
  0x00007fab74147dc5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74147dcf: jmpq   0x00007fab74147dcf  ;   {runtime_call}
  0x00007fab74147dd4: nop
  0x00007fab74147dd5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74147ddf: jmpq   0x00007fab74147ddf  ;   {runtime_call}
  0x00007fab74147de4: nop
  0x00007fab74147de5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74147def: jmpq   0x00007fab74147def  ;   {runtime_call}
  0x00007fab74147df4: nop
  0x00007fab74147df5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74147dff: jmpq   0x00007fab74147dff  ;   {runtime_call}
  0x00007fab74147e04: nop
  0x00007fab74147e05: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74147e0f: jmpq   0x00007fab74147e0f  ;   {runtime_call}
  0x00007fab74147e14: nop
  0x00007fab74147e15: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74147e1f: jmpq   0x00007fab74147e1f  ;   {runtime_call}
  0x00007fab74147e24: nop
  0x00007fab74147e25: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74147e2f: jmpq   0x00007fab74147e2f  ;   {runtime_call}
  0x00007fab74147e34: nop
  0x00007fab74147e35: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74147e3f: jmpq   0x00007fab74147e3f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74147e44: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74147e49: mov    %rsp,-0x28(%rsp)
  0x00007fab74147e4e: sub    $0x80,%rsp
  0x00007fab74147e55: mov    %rax,0x78(%rsp)
  0x00007fab74147e5a: mov    %rcx,0x70(%rsp)
  0x00007fab74147e5f: mov    %rdx,0x68(%rsp)
  0x00007fab74147e64: mov    %rbx,0x60(%rsp)
  0x00007fab74147e69: mov    %rbp,0x50(%rsp)
  0x00007fab74147e6e: mov    %rsi,0x48(%rsp)
  0x00007fab74147e73: mov    %rdi,0x40(%rsp)
  0x00007fab74147e78: mov    %r8,0x38(%rsp)
  0x00007fab74147e7d: mov    %r9,0x30(%rsp)
  0x00007fab74147e82: mov    %r10,0x28(%rsp)
  0x00007fab74147e87: mov    %r11,0x20(%rsp)
  0x00007fab74147e8c: mov    %r12,0x18(%rsp)
  0x00007fab74147e91: mov    %r13,0x10(%rsp)
  0x00007fab74147e96: mov    %r14,0x8(%rsp)
  0x00007fab74147e9b: mov    %r15,(%rsp)
  0x00007fab74147e9f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74147ea9: movabs $0x7fab74147e49,%rsi  ;   {internal_word}
  0x00007fab74147eb3: mov    %rsp,%rdx
  0x00007fab74147eb6: and    $0xfffffffffffffff0,%rsp
  0x00007fab74147eba: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74147ebf: hlt    
[Deopt Handler Code]
  0x00007fab74147ec0: movabs $0x7fab74147ec0,%r10  ;   {section_word}
  0x00007fab74147eca: push   %r10
  0x00007fab74147ecc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74147ed1: hlt    
  0x00007fab74147ed2: hlt    
  0x00007fab74147ed3: hlt    
  0x00007fab74147ed4: hlt    
  0x00007fab74147ed5: hlt    
  0x00007fab74147ed6: hlt    
  0x00007fab74147ed7: hlt    
<nmethod compile_id='114' compiler='C1' level='3' entry='0x00007fab74145be0' size='13608' address='0x00007fab74145910' relocation_offset='312' insts_offset='720' stub_offset='9392' scopes_data_offset='9728' scopes_pcs_offset='11384' dependencies_offset='13304' handler_table_offset='13312' nul_chk_table_offset='13552' metadata_offset='9672' method='java/util/concurrent/ConcurrentHashMap putVal (Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' bytes='362' count='395' backedge_count='28' iicount='395' stamp='0.440'/>
----------------------------------------------------------------------
java/nio/DirectLongBufferU.put  [0x00007fab74148fc0, 0x00007fab741491b0]  496 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61ad89b0} &apos;put&apos; &apos;(IJ)Ljava/nio/LongBuffer;&apos; in &apos;java/nio/DirectLongBufferU&apos;
  # this:     rsi:rsi   = &apos;java/nio/DirectLongBufferU&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = long
<writer thread='140373948942080'/>
[Loaded java.util.Arrays$ArrayList from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
  #           [sp+0x80]  (sp of caller)
  0x00007fab74148fc0: mov    0x8(%rsi),%r10d
  0x00007fab74148fc4: shl    $0x3,%r10
  0x00007fab74148fc8: cmp    %rax,%r10
  0x00007fab74148fcb: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74148fd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74148fdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74148fe0: mov    %eax,-0x14000(%rsp)
  0x00007fab74148fe7: push   %rbp
  0x00007fab74148fe8: sub    $0x70,%rsp
  0x00007fab74148fec: movabs $0x7fab61b98170,%rax  ;   {metadata(method data for {method} {0x00007fab61ad89b0} &apos;put&apos; &apos;(IJ)Ljava/nio/LongBuffer;&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007fab74148ff6: mov    0xfc(%rax),%edi
  0x00007fab74148ffc: add    $0x8,%edi
  0x00007fab74148fff: mov    %edi,0xfc(%rax)
  0x00007fab74149005: movabs $0x7fab61ad89b0,%rax  ;   {metadata({method} {0x00007fab61ad89b0} &apos;put&apos; &apos;(IJ)Ljava/nio/LongBuffer;&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007fab7414900f: and    $0x1ff8,%edi
  0x00007fab74149015: cmp    $0x0,%edi
  0x00007fab74149018: je     0x00007fab741490a1  ;*getstatic unsafe {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::put@0 (line 306)

  0x00007fab7414901e: mov    %rsi,%rax
  0x00007fab74149021: movabs $0x7fab61b98170,%rdi  ;   {metadata(method data for {method} {0x00007fab61ad89b0} &apos;put&apos; &apos;(IJ)Ljava/nio/LongBuffer;&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007fab7414902b: addq   $0x1,0x130(%rdi)
  0x00007fab74149033: cmp    0x1c(%rsi),%edx    ; implicit exception: dispatches to 0x00007fab741490b8
  0x00007fab74149036: jae    0x00007fab741490c2  ;*invokevirtual checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::put@6 (line 306)

  0x00007fab7414903c: mov    %rsi,%rax
  0x00007fab7414903f: movabs $0x7fab61b98170,%rdi  ;   {metadata(method data for {method} {0x00007fab61ad89b0} &apos;put&apos; &apos;(IJ)Ljava/nio/LongBuffer;&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007fab74149049: addq   $0x1,0x1c8(%rdi)
  0x00007fab74149051: movabs $0x7fab61b83220,%rax  ;   {metadata(method data for {method} {0x00007fab61ad8530} &apos;ix&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007fab7414905b: mov    0xfc(%rax),%edi
  0x00007fab74149061: add    $0x8,%edi
  0x00007fab74149064: mov    %edi,0xfc(%rax)
  0x00007fab7414906a: movabs $0x7fab61ad8530,%rax  ;   {metadata({method} {0x00007fab61ad8530} &apos;ix&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007fab74149074: and    $0x7ffff8,%edi
  0x00007fab7414907a: cmp    $0x0,%edi
  0x00007fab7414907d: je     0x00007fab741490cb
  0x00007fab74149083: mov    0x10(%rsi),%rax    ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::ix@1 (line 245)
                                                ; - java.nio.DirectLongBufferU::put@9 (line 306)

  0x00007fab74149087: movslq %edx,%rdx
  0x00007fab7414908a: shl    $0x3,%rdx
  0x00007fab7414908e: mov    %rcx,(%rax,%rdx,1)
  0x00007fab74149092: mov    %rsi,%rax
  0x00007fab74149095: add    $0x70,%rsp
  0x00007fab74149099: pop    %rbp
  0x00007fab7414909a: test   %eax,0x1b699060(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741490a0: retq   
  0x00007fab741490a1: mov    %rax,0x8(%rsp)
  0x00007fab741490a6: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741490ae: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=243}
                                                ;*synchronization entry
                                                ; - java.nio.DirectLongBufferU::put@-1 (line 306)
                                                ;   {runtime_call}
  0x00007fab741490b3: jmpq   0x00007fab7414901e
  0x00007fab741490b8: callq  0x00007fab740fc000  ; OopMap{rsi=Oop off=253}
                                                ;*invokevirtual checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::put@6 (line 306)
                                                ;   {runtime_call}
  0x00007fab741490bd: callq  0x00007fab740fc000  ; OopMap{rsi=Oop off=258}
                                                ;*invokevirtual checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::put@6 (line 306)
                                                ;   {runtime_call}
  0x00007fab741490c2: mov    %rdx,(%rsp)
  0x00007fab741490c6: callq  0x00007fab740fbb80  ; OopMap{rsi=Oop off=267}
                                                ;*invokevirtual checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::put@6 (line 306)
                                                ;   {runtime_call}
  0x00007fab741490cb: mov    %rax,0x8(%rsp)
  0x00007fab741490d0: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741490d8: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=285}
                                                ;*synchronization entry
                                                ; - java.nio.DirectLongBufferU::ix@-1 (line 245)
                                                ; - java.nio.DirectLongBufferU::put@9 (line 306)
                                                ;   {runtime_call}
  0x00007fab741490dd: jmp    0x00007fab74149083
  0x00007fab741490df: nop
  0x00007fab741490e0: nop
  0x00007fab741490e1: mov    0x2c0(%r15),%rax
  0x00007fab741490e8: movabs $0x0,%r10
  0x00007fab741490f2: mov    %r10,0x2c0(%r15)
  0x00007fab741490f9: movabs $0x0,%r10
  0x00007fab74149103: mov    %r10,0x2c8(%r15)
  0x00007fab7414910a: add    $0x70,%rsp
  0x00007fab7414910e: pop    %rbp
  0x00007fab7414910f: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74149114: hlt    
  0x00007fab74149115: hlt    
  0x00007fab74149116: hlt    
  0x00007fab74149117: hlt    
  0x00007fab74149118: hlt    
  0x00007fab74149119: hlt    
  0x00007fab7414911a: hlt    
  0x00007fab7414911b: hlt    
  0x00007fab7414911c: hlt    
  0x00007fab7414911d: hlt    
  0x00007fab7414911e: hlt    
  0x00007fab7414911f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74149120: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74149125: mov    %rsp,-0x28(%rsp)
  0x00007fab7414912a: sub    $0x80,%rsp
  0x00007fab74149131: mov    %rax,0x78(%rsp)
  0x00007fab74149136: mov    %rcx,0x70(%rsp)
  0x00007fab7414913b: mov    %rdx,0x68(%rsp)
  0x00007fab74149140: mov    %rbx,0x60(%rsp)
  0x00007fab74149145: mov    %rbp,0x50(%rsp)
  0x00007fab7414914a: mov    %rsi,0x48(%rsp)
  0x00007fab7414914f: mov    %rdi,0x40(%rsp)
  0x00007fab74149154: mov    %r8,0x38(%rsp)
  0x00007fab74149159: mov    %r9,0x30(%rsp)
  0x00007fab7414915e: mov    %r10,0x28(%rsp)
  0x00007fab74149163: mov    %r11,0x20(%rsp)
  0x00007fab74149168: mov    %r12,0x18(%rsp)
  0x00007fab7414916d: mov    %r13,0x10(%rsp)
  0x00007fab74149172: mov    %r14,0x8(%rsp)
  0x00007fab74149177: mov    %r15,(%rsp)
  0x00007fab7414917b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74149185: movabs $0x7fab74149125,%rsi  ;   {internal_word}
  0x00007fab7414918f: mov    %rsp,%rdx
  0x00007fab74149192: and    $0xfffffffffffffff0,%rsp
  0x00007fab74149196: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7414919b: hlt    
[Deopt Handler Code]
  0x00007fab7414919c: movabs $0x7fab7414919c,%r10  ;   {section_word}
  0x00007fab741491a6: push   %r10
  0x00007fab741491a8: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab741491ad: hlt    
  0x00007fab741491ae: hlt    
  0x00007fab741491af: hlt    
<nmethod compile_id='111' compiler='C1' level='3' entry='0x00007fab74148fc0' size='1176' address='0x00007fab74148e50' relocation_offset='312' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='984' dependencies_offset='1144' nul_chk_table_offset='1152' oops_offset='864' metadata_offset='872' method='java/nio/DirectLongBufferU put (IJ)Ljava/nio/LongBuffer;' bytes='18' count='408' iicount='408' stamp='0.441'/>
----------------------------------------------------------------------
java/util/zip/ZipFile.access$400  [0x00007fab74149480, 0x00007fab741495b0]  304 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab61ac2558} &apos;access$400&apos; &apos;(Ljava/util/zip/ZipFile;)J&apos; in &apos;java/util/zip/ZipFile&apos;
  # parm0:    rsi:rsi   = &apos;java/util/zip/ZipFile&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab74149480: mov    %eax,-0x14000(%rsp)
  0x00007fab74149487: push   %rbp
  0x00007fab74149488: sub    $0x30,%rsp
  0x00007fab7414948c: movabs $0x7fab61b99648,%rax  ;   {metadata(method data for {method} {0x00007fab61ac2558} &apos;access$400&apos; &apos;(Ljava/util/zip/ZipFile;)J&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab74149496: mov    0xfc(%rax),%edi
  0x00007fab7414949c: add    $0x8,%edi
  0x00007fab7414949f: mov    %edi,0xfc(%rax)
  0x00007fab741494a5: movabs $0x7fab61ac2558,%rax  ;   {metadata({method} {0x00007fab61ac2558} &apos;access$400&apos; &apos;(Ljava/util/zip/ZipFile;)J&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007fab741494af: and    $0x1ff8,%edi
  0x00007fab741494b5: cmp    $0x0,%edi
  0x00007fab741494b8: je     0x00007fab741494ce  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::access$400@0 (line 60)

  0x00007fab741494be: mov    0x10(%rsi),%rax    ;*getfield jzfile {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::access$400@1 (line 60)
                                                ; implicit exception: dispatches to 0x00007fab741494e2
  0x00007fab741494c2: add    $0x30,%rsp
  0x00007fab741494c6: pop    %rbp
  0x00007fab741494c7: test   %eax,0x1b698c33(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741494cd: retq   
  0x00007fab741494ce: mov    %rax,0x8(%rsp)
  0x00007fab741494d3: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741494db: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=96}
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipFile::access$400@-1 (line 60)
                                                ;   {runtime_call}
  0x00007fab741494e0: jmp    0x00007fab741494be
  0x00007fab741494e2: callq  0x00007fab740fc000  ; OopMap{rsi=Oop off=103}
                                                ;*getfield jzfile {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::access$400@1 (line 60)
                                                ;   {runtime_call}
  0x00007fab741494e7: nop
  0x00007fab741494e8: nop
  0x00007fab741494e9: mov    0x2c0(%r15),%rax
  0x00007fab741494f0: movabs $0x0,%r10
  0x00007fab741494fa: mov    %r10,0x2c0(%r15)
  0x00007fab74149501: movabs $0x0,%r10
  0x00007fab7414950b: mov    %r10,0x2c8(%r15)
  0x00007fab74149512: add    $0x30,%rsp
  0x00007fab74149516: pop    %rbp
  0x00007fab74149517: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7414951c: hlt    
  0x00007fab7414951d: hlt    
  0x00007fab7414951e: hlt    
  0x00007fab7414951f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74149520: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74149525: mov    %rsp,-0x28(%rsp)
  0x00007fab7414952a: sub    $0x80,%rsp
  0x00007fab74149531: mov    %rax,0x78(%rsp)
  0x00007fab74149536: mov    %rcx,0x70(%rsp)
  0x00007fab7414953b: mov    %rdx,0x68(%rsp)
  0x00007fab74149540: mov    %rbx,0x60(%rsp)
  0x00007fab74149545: mov    %rbp,0x50(%rsp)
  0x00007fab7414954a: mov    %rsi,0x48(%rsp)
  0x00007fab7414954f: mov    %rdi,0x40(%rsp)
  0x00007fab74149554: mov    %r8,0x38(%rsp)
  0x00007fab74149559: mov    %r9,0x30(%rsp)
  0x00007fab7414955e: mov    %r10,0x28(%rsp)
  0x00007fab74149563: mov    %r11,0x20(%rsp)
  0x00007fab74149568: mov    %r12,0x18(%rsp)
  0x00007fab7414956d: mov    %r13,0x10(%rsp)
  0x00007fab74149572: mov    %r14,0x8(%rsp)
  0x00007fab74149577: mov    %r15,(%rsp)
  0x00007fab7414957b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74149585: movabs $0x7fab74149525,%rsi  ;   {internal_word}
  0x00007fab7414958f: mov    %rsp,%rdx
  0x00007fab74149592: and    $0xfffffffffffffff0,%rsp
  0x00007fab74149596: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7414959b: hlt    
[Deopt Handler Code]
  0x00007fab7414959c: movabs $0x7fab7414959c,%r10  ;   {section_word}
  0x00007fab741495a6: push   %r10
  0x00007fab741495a8: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab741495ad: hlt    
  0x00007fab741495ae: hlt    
  0x00007fab741495af: hlt    
<nmethod compile_id='115' compiler='C1' level='3' entry='0x00007fab74149480' size='832' address='0x00007fab74149310' relocation_offset='312' insts_offset='368' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='712' dependencies_offset='808' nul_chk_table_offset='816' metadata_offset='672' method='java/util/zip/ZipFile access$400 (Ljava/util/zip/ZipFile;)J' bytes='5' count='396' iicount='396' stamp='0.442'/>
<writer thread='140373948942080'/>
<task_queued compile_id='117' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='392' iicount='392' level='3' stamp='0.442' comment='tiered' hot_count='392'/>
<task_queued compile_id='118' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='392' backedge_count='6' iicount='392' level='3' stamp='0.442' comment='tiered' hot_count='392'/>
<task_queued compile_id='119' method='java/lang/String hashCode ()I' bytes='55' count='1370' backedge_count='24785' iicount='1370' level='4' stamp='0.442' comment='tiered' hot_count='1370'/>
<task_queued compile_id='120' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='384' iicount='384' level='3' stamp='0.442' comment='tiered' hot_count='384'/>
<task_queued compile_id='121' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='512' iicount='512' level='3' stamp='0.442' comment='tiered' hot_count='512'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/HashMap.put  [0x00007fab74149820, 0x00007fab74149cb8]  1176 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61998660} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  #           [sp+0x90]  (sp of caller)
  0x00007fab74149820: mov    0x8(%rsi),%r10d
  0x00007fab74149824: shl    $0x3,%r10
  0x00007fab74149828: cmp    %rax,%r10
  0x00007fab7414982b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74149831: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7414983c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74149840: mov    %eax,-0x14000(%rsp)
  0x00007fab74149847: push   %rbp
  0x00007fab74149848: sub    $0x80,%rsp
  0x00007fab7414984f: movabs $0x7fab61b895e8,%rdi  ;   {metadata(method data for {method} {0x00007fab61998660} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab74149859: mov    0xfc(%rdi),%ebx
  0x00007fab7414985f: add    $0x8,%ebx
  0x00007fab74149862: mov    %ebx,0xfc(%rdi)
  0x00007fab74149868: movabs $0x7fab61998660,%rdi  ;   {metadata({method} {0x00007fab61998660} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab74149872: and    $0x1ff8,%ebx
  0x00007fab74149878: cmp    $0x0,%ebx
  0x00007fab7414987b: je     0x00007fab74149b93  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@0 (line 611)

  0x00007fab74149881: movabs $0x7fab61b895e8,%rdi  ;   {metadata(method data for {method} {0x00007fab61998660} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414988b: addq   $0x1,0x130(%rdi)
  0x00007fab74149893: movabs $0x7fab61b81320,%rdi  ;   {metadata(method data for {method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414989d: mov    0xfc(%rdi),%ebx
  0x00007fab741498a3: add    $0x8,%ebx
  0x00007fab741498a6: mov    %ebx,0xfc(%rdi)
  0x00007fab741498ac: movabs $0x7fab61997920,%rdi  ;   {metadata({method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab741498b6: and    $0x7ffff8,%ebx
  0x00007fab741498bc: cmp    $0x0,%ebx
  0x00007fab741498bf: je     0x00007fab74149baa
  0x00007fab741498c5: cmp    $0x0,%rdx
  0x00007fab741498c9: movabs $0x7fab61b81320,%rdi  ;   {metadata(method data for {method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab741498d3: movabs $0x130,%rbx
  0x00007fab741498dd: jne    0x00007fab741498ed
  0x00007fab741498e3: movabs $0x140,%rbx
  0x00007fab741498ed: mov    (%rdi,%rbx,1),%rax
  0x00007fab741498f1: lea    0x1(%rax),%rax
  0x00007fab741498f5: mov    %rax,(%rdi,%rbx,1)
  0x00007fab741498f9: jne    0x00007fab74149928  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)

  0x00007fab741498ff: movabs $0x7fab61b81320,%rdi  ;   {metadata(method data for {method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab74149909: incl   0x150(%rdi)
  0x00007fab7414990f: mov    $0x0,%edi
  0x00007fab74149914: mov    %rcx,0x68(%rsp)
  0x00007fab74149919: mov    %rdx,0x60(%rsp)
  0x00007fab7414991e: mov    %rsi,0x58(%rsp)
  0x00007fab74149923: jmpq   0x00007fab74149b48  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)

  0x00007fab74149928: mov    %rcx,0x68(%rsp)
  0x00007fab7414992d: mov    %rsi,0x58(%rsp)
  0x00007fab74149932: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00007fab74149bc1
  0x00007fab74149935: mov    %rdx,%rdi
  0x00007fab74149938: movabs $0x7fab61b81320,%rbx  ;   {metadata(method data for {method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab74149942: mov    0x8(%rdi),%edi
  0x00007fab74149945: shl    $0x3,%rdi
  0x00007fab74149949: cmp    0x178(%rbx),%rdi
  0x00007fab74149950: jne    0x00007fab7414995f
  0x00007fab74149952: addq   $0x1,0x180(%rbx)
  0x00007fab7414995a: jmpq   0x00007fab74149b21
  0x00007fab7414995f: cmp    0x188(%rbx),%rdi
  0x00007fab74149966: jne    0x00007fab74149975
  0x00007fab74149968: addq   $0x1,0x190(%rbx)
  0x00007fab74149970: jmpq   0x00007fab74149b21
  0x00007fab74149975: cmp    0x198(%rbx),%rdi
  0x00007fab7414997c: jne    0x00007fab7414998b
  0x00007fab7414997e: addq   $0x1,0x1a0(%rbx)
  0x00007fab74149986: jmpq   0x00007fab74149b21
  0x00007fab7414998b: cmp    0x1a8(%rbx),%rdi
  0x00007fab74149992: jne    0x00007fab741499a1
  0x00007fab74149994: addq   $0x1,0x1b0(%rbx)
  0x00007fab7414999c: jmpq   0x00007fab74149b21
  0x00007fab741499a1: cmp    0x1b8(%rbx),%rdi
  0x00007fab741499a8: jne    0x00007fab741499b7
  0x00007fab741499aa: addq   $0x1,0x1c0(%rbx)
  0x00007fab741499b2: jmpq   0x00007fab74149b21
  0x00007fab741499b7: cmp    0x1c8(%rbx),%rdi
  0x00007fab741499be: jne    0x00007fab741499cd
  0x00007fab741499c0: addq   $0x1,0x1d0(%rbx)
  0x00007fab741499c8: jmpq   0x00007fab74149b21
  0x00007fab741499cd: cmp    0x1d8(%rbx),%rdi
  0x00007fab741499d4: jne    0x00007fab741499e3
  0x00007fab741499d6: addq   $0x1,0x1e0(%rbx)
  0x00007fab741499de: jmpq   0x00007fab74149b21
  0x00007fab741499e3: cmp    0x1e8(%rbx),%rdi
  0x00007fab741499ea: jne    0x00007fab741499f9
  0x00007fab741499ec: addq   $0x1,0x1f0(%rbx)
  0x00007fab741499f4: jmpq   0x00007fab74149b21
  0x00007fab741499f9: cmpq   $0x0,0x178(%rbx)
  0x00007fab74149a04: jne    0x00007fab74149a1d
  0x00007fab74149a06: mov    %rdi,0x178(%rbx)
  0x00007fab74149a0d: movq   $0x1,0x180(%rbx)
  0x00007fab74149a18: jmpq   0x00007fab74149b21
  0x00007fab74149a1d: cmpq   $0x0,0x188(%rbx)
  0x00007fab74149a28: jne    0x00007fab74149a41
  0x00007fab74149a2a: mov    %rdi,0x188(%rbx)
  0x00007fab74149a31: movq   $0x1,0x190(%rbx)
  0x00007fab74149a3c: jmpq   0x00007fab74149b21
  0x00007fab74149a41: cmpq   $0x0,0x198(%rbx)
  0x00007fab74149a4c: jne    0x00007fab74149a65
  0x00007fab74149a4e: mov    %rdi,0x198(%rbx)
  0x00007fab74149a55: movq   $0x1,0x1a0(%rbx)
  0x00007fab74149a60: jmpq   0x00007fab74149b21
  0x00007fab74149a65: cmpq   $0x0,0x1a8(%rbx)
  0x00007fab74149a70: jne    0x00007fab74149a89
  0x00007fab74149a72: mov    %rdi,0x1a8(%rbx)
  0x00007fab74149a79: movq   $0x1,0x1b0(%rbx)
  0x00007fab74149a84: jmpq   0x00007fab74149b21
  0x00007fab74149a89: cmpq   $0x0,0x1b8(%rbx)
  0x00007fab74149a94: jne    0x00007fab74149aad
  0x00007fab74149a96: mov    %rdi,0x1b8(%rbx)
  0x00007fab74149a9d: movq   $0x1,0x1c0(%rbx)
  0x00007fab74149aa8: jmpq   0x00007fab74149b21
  0x00007fab74149aad: cmpq   $0x0,0x1c8(%rbx)
  0x00007fab74149ab8: jne    0x00007fab74149ad1
  0x00007fab74149aba: mov    %rdi,0x1c8(%rbx)
  0x00007fab74149ac1: movq   $0x1,0x1d0(%rbx)
  0x00007fab74149acc: jmpq   0x00007fab74149b21
  0x00007fab74149ad1: cmpq   $0x0,0x1d8(%rbx)
  0x00007fab74149adc: jne    0x00007fab74149af5
  0x00007fab74149ade: mov    %rdi,0x1d8(%rbx)
  0x00007fab74149ae5: movq   $0x1,0x1e0(%rbx)
  0x00007fab74149af0: jmpq   0x00007fab74149b21
  0x00007fab74149af5: cmpq   $0x0,0x1e8(%rbx)
  0x00007fab74149b00: jne    0x00007fab74149b19
  0x00007fab74149b02: mov    %rdi,0x1e8(%rbx)
  0x00007fab74149b09: movq   $0x1,0x1f0(%rbx)
  0x00007fab74149b14: jmpq   0x00007fab74149b21
  0x00007fab74149b19: addq   $0x1,0x168(%rbx)
  0x00007fab74149b21: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)

  0x00007fab74149b24: mov    %rdx,0x60(%rsp)
  0x00007fab74149b29: nop
  0x00007fab74149b2a: nop
  0x00007fab74149b2b: nop
  0x00007fab74149b2c: nop
  0x00007fab74149b2d: movabs $0xffffffffffffffff,%rax
  0x00007fab74149b37: callq  0x00007fab74047f60  ; OopMap{[88]=Oop [104]=Oop [96]=Oop off=796}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ;   {virtual_call}
  0x00007fab74149b3c: mov    %rax,%rdx
  0x00007fab74149b3f: shr    $0x10,%edx
  0x00007fab74149b42: xor    %rax,%rdx
  0x00007fab74149b45: mov    %rdx,%rdi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@19 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)

  0x00007fab74149b48: mov    0x68(%rsp),%r8
  0x00007fab74149b4d: mov    0x60(%rsp),%rcx
  0x00007fab74149b52: mov    0x58(%rsp),%rsi
  0x00007fab74149b57: mov    %rsi,%rdx
  0x00007fab74149b5a: movabs $0x7fab61b895e8,%r9  ;   {metadata(method data for {method} {0x00007fab61998660} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab74149b64: addq   $0x1,0x140(%r9)
  0x00007fab74149b6c: mov    %rdi,%rdx
  0x00007fab74149b6f: mov    $0x0,%r9d
  0x00007fab74149b75: mov    $0x1,%edi          ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@9 (line 611)

  0x00007fab74149b7a: nop
  0x00007fab74149b7b: nop
  0x00007fab74149b7c: nop
  0x00007fab74149b7d: nop
  0x00007fab74149b7e: nop
  0x00007fab74149b7f: callq  0x00007fab74047d60  ; OopMap{off=868}
                                                ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@9 (line 611)
                                                ;   {optimized virtual_call}
  0x00007fab74149b84: add    $0x80,%rsp
  0x00007fab74149b8b: pop    %rbp
  0x00007fab74149b8c: test   %eax,0x1b69856e(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74149b92: retq   
  0x00007fab74149b93: mov    %rdi,0x8(%rsp)
  0x00007fab74149b98: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74149ba0: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop rcx=Oop off=901}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::put@-1 (line 611)
                                                ;   {runtime_call}
  0x00007fab74149ba5: jmpq   0x00007fab74149881
  0x00007fab74149baa: mov    %rdi,0x8(%rsp)
  0x00007fab74149baf: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74149bb7: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop rcx=Oop off=924}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ;   {runtime_call}
  0x00007fab74149bbc: jmpq   0x00007fab741498c5
  0x00007fab74149bc1: callq  0x00007fab740fc000  ; OopMap{rdx=Oop [104]=Oop [88]=Oop off=934}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ;   {runtime_call}
  0x00007fab74149bc6: nop
  0x00007fab74149bc7: nop
  0x00007fab74149bc8: mov    0x2c0(%r15),%rax
  0x00007fab74149bcf: movabs $0x0,%r10
  0x00007fab74149bd9: mov    %r10,0x2c0(%r15)
  0x00007fab74149be0: movabs $0x0,%r10
  0x00007fab74149bea: mov    %r10,0x2c8(%r15)
  0x00007fab74149bf1: add    $0x80,%rsp
  0x00007fab74149bf8: pop    %rbp
  0x00007fab74149bf9: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74149bfe: hlt    
  0x00007fab74149bff: hlt    
[Stub Code]
  0x00007fab74149c00: nop                       ;   {no_reloc}
  0x00007fab74149c01: nop
  0x00007fab74149c02: nop
  0x00007fab74149c03: nop
  0x00007fab74149c04: nop
  0x00007fab74149c05: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74149c0f: jmpq   0x00007fab74149c0f  ;   {runtime_call}
  0x00007fab74149c14: nop
  0x00007fab74149c15: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74149c1f: jmpq   0x00007fab74149c1f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74149c24: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74149c29: mov    %rsp,-0x28(%rsp)
  0x00007fab74149c2e: sub    $0x80,%rsp
  0x00007fab74149c35: mov    %rax,0x78(%rsp)
  0x00007fab74149c3a: mov    %rcx,0x70(%rsp)
  0x00007fab74149c3f: mov    %rdx,0x68(%rsp)
  0x00007fab74149c44: mov    %rbx,0x60(%rsp)
  0x00007fab74149c49: mov    %rbp,0x50(%rsp)
  0x00007fab74149c4e: mov    %rsi,0x48(%rsp)
  0x00007fab74149c53: mov    %rdi,0x40(%rsp)
  0x00007fab74149c58: mov    %r8,0x38(%rsp)
  0x00007fab74149c5d: mov    %r9,0x30(%rsp)
  0x00007fab74149c62: mov    %r10,0x28(%rsp)
  0x00007fab74149c67: mov    %r11,0x20(%rsp)
  0x00007fab74149c6c: mov    %r12,0x18(%rsp)
  0x00007fab74149c71: mov    %r13,0x10(%rsp)
  0x00007fab74149c76: mov    %r14,0x8(%rsp)
  0x00007fab74149c7b: mov    %r15,(%rsp)
  0x00007fab74149c7f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74149c89: movabs $0x7fab74149c29,%rsi  ;   {internal_word}
  0x00007fab74149c93: mov    %rsp,%rdx
  0x00007fab74149c96: and    $0xfffffffffffffff0,%rsp
  0x00007fab74149c9a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74149c9f: hlt    
[Deopt Handler Code]
  0x00007fab74149ca0: movabs $0x7fab74149ca0,%r10  ;   {section_word}
  0x00007fab74149caa: push   %r10
  0x00007fab74149cac: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74149cb1: hlt    
  0x00007fab74149cb2: hlt    
  0x00007fab74149cb3: hlt    
  0x00007fab74149cb4: hlt    
  0x00007fab74149cb5: hlt    
  0x00007fab74149cb6: hlt    
  0x00007fab74149cb7: hlt    
<nmethod compile_id='117' compiler='C1' level='3' entry='0x00007fab74149820' size='1976' address='0x00007fab74149690' relocation_offset='312' insts_offset='400' stub_offset='1392' scopes_data_offset='1592' scopes_pcs_offset='1744' dependencies_offset='1952' nul_chk_table_offset='1960' metadata_offset='1576' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='607' iicount='607' stamp='0.444'/>
<writer thread='140373948942080'/>
<task_queued compile_id='122' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='512' iicount='512' level='3' stamp='0.444' comment='tiered' hot_count='512'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/HashMap.putVal  [0x00007fab7414a100, 0x00007fab7414bfd8]  7896 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9        = boolean
  # parm4:    rdi       = boolean
  #           [sp+0xb0]  (sp of caller)
  0x00007fab7414a100: mov    0x8(%rsi),%r10d
  0x00007fab7414a104: shl    $0x3,%r10
  0x00007fab7414a108: cmp    %rax,%r10
  0x00007fab7414a10b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7414a111: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7414a11c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7414a120: mov    %eax,-0x14000(%rsp)
  0x00007fab7414a127: push   %rbp
  0x00007fab7414a128: sub    $0xa0,%rsp
  0x00007fab7414a12f: mov    %rsi,0x48(%rsp)
  0x00007fab7414a134: mov    %edx,0x40(%rsp)
  0x00007fab7414a138: mov    %rcx,0x50(%rsp)
  0x00007fab7414a13d: movabs $0x7fab61b89810,%rbx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414a147: mov    0xfc(%rbx),%eax
  0x00007fab7414a14d: add    $0x8,%eax
  0x00007fab7414a150: mov    %eax,0xfc(%rbx)
  0x00007fab7414a156: movabs $0x7fab61998918,%rbx  ;   {metadata({method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414a160: and    $0x1ff8,%eax
  0x00007fab7414a166: cmp    $0x0,%eax
  0x00007fab7414a169: je     0x00007fab7414bdd5  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@0 (line 627)

  0x00007fab7414a16f: mov    0x24(%rsi),%ebx
  0x00007fab7414a172: shl    $0x3,%rbx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@1 (line 627)

  0x00007fab7414a176: cmp    $0x0,%rbx
  0x00007fab7414a17a: movabs $0x7fab61b89810,%rax  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414a184: movabs $0x130,%r11
  0x00007fab7414a18e: je     0x00007fab7414a19e
  0x00007fab7414a194: movabs $0x140,%r11
  0x00007fab7414a19e: mov    (%rax,%r11,1),%r13
  0x00007fab7414a1a2: lea    0x1(%r13),%r13
  0x00007fab7414a1a6: mov    %r13,(%rax,%r11,1)
  0x00007fab7414a1aa: je     0x00007fab7414a1ff  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@7 (line 627)

  0x00007fab7414a1b0: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@12 (line 627)
                                                ; implicit exception: dispatches to 0x00007fab7414bdec
  0x00007fab7414a1b3: cmp    $0x0,%eax
  0x00007fab7414a1b6: movabs $0x7fab61b89810,%r11  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414a1c0: movabs $0x150,%r13
  0x00007fab7414a1ca: jne    0x00007fab7414a1da
  0x00007fab7414a1d0: movabs $0x160,%r13
  0x00007fab7414a1da: mov    (%r11,%r13,1),%r14
  0x00007fab7414a1de: lea    0x1(%r14),%r14
  0x00007fab7414a1e2: mov    %r14,(%r11,%r13,1)
  0x00007fab7414a1e6: je     0x00007fab7414a1ff  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@16 (line 627)

  0x00007fab7414a1ec: mov    %edi,0x60(%rsp)
  0x00007fab7414a1f0: mov    %r9d,0x44(%rsp)
  0x00007fab7414a1f5: mov    %r8,0x58(%rsp)
  0x00007fab7414a1fa: jmpq   0x00007fab7414a240  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@29 (line 629)

  0x00007fab7414a1ff: mov    %edi,0x60(%rsp)
  0x00007fab7414a203: mov    %r9d,0x44(%rsp)
  0x00007fab7414a208: mov    %r8,0x58(%rsp)
  0x00007fab7414a20d: mov    %rsi,%rbx
  0x00007fab7414a210: movabs $0x7fab61b89810,%rax  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414a21a: addq   $0x1,0x170(%rax)
  0x00007fab7414a222: mov    %rsi,%rbx
  0x00007fab7414a225: mov    %rbx,%rsi          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 628)

  0x00007fab7414a228: nop
  0x00007fab7414a229: nop
  0x00007fab7414a22a: nop
  0x00007fab7414a22b: nop
  0x00007fab7414a22c: nop
  0x00007fab7414a22d: nop
  0x00007fab7414a22e: nop
  0x00007fab7414a22f: callq  0x00007fab74047d60  ; OopMap{[72]=Oop [88]=Oop [80]=Oop off=308}
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 628)
                                                ;   {optimized virtual_call}
  0x00007fab7414a234: mov    %rax,%rdx          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 628)

  0x00007fab7414a237: mov    0xc(%rdx),%ecx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26 (line 628)
                                                ; implicit exception: dispatches to 0x00007fab7414bdf1
  0x00007fab7414a23a: mov    %rcx,%rax
  0x00007fab7414a23d: mov    %rdx,%rbx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@29 (line 629)

  0x00007fab7414a240: dec    %eax
  0x00007fab7414a242: and    0x40(%rsp),%eax
  0x00007fab7414a246: movslq %eax,%rdx
  0x00007fab7414a249: cmp    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x00007fab7414bdf6
  0x00007fab7414a24c: jae    0x00007fab7414be00
  0x00007fab7414a252: mov    0x10(%rbx,%rdx,4),%edi
  0x00007fab7414a256: shl    $0x3,%rdi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 629)

  0x00007fab7414a25a: cmp    $0x0,%rdi
  0x00007fab7414a25e: movabs $0x7fab61b89810,%rdx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414a268: movabs $0x208,%rcx
  0x00007fab7414a272: jne    0x00007fab7414a282
  0x00007fab7414a278: movabs $0x218,%rcx
  0x00007fab7414a282: mov    (%rdx,%rcx,1),%r8
  0x00007fab7414a286: lea    0x1(%r8),%r8
  0x00007fab7414a28a: mov    %r8,(%rdx,%rcx,1)
  0x00007fab7414a28e: jne    0x00007fab7414a766  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@44 (line 629)

  0x00007fab7414a294: mov    %eax,0x64(%rsp)
  0x00007fab7414a298: mov    %rbx,0x68(%rsp)
  0x00007fab7414a29d: mov    0x48(%rsp),%rsi
  0x00007fab7414a2a2: movabs $0x7fab61b89810,%rdx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414a2ac: mov    0x8(%rsi),%esi
  0x00007fab7414a2af: shl    $0x3,%rsi
  0x00007fab7414a2b3: cmp    0x238(%rdx),%rsi
  0x00007fab7414a2ba: jne    0x00007fab7414a2c9
  0x00007fab7414a2bc: addq   $0x1,0x240(%rdx)
  0x00007fab7414a2c4: jmpq   0x00007fab7414a48b
  0x00007fab7414a2c9: cmp    0x248(%rdx),%rsi
  0x00007fab7414a2d0: jne    0x00007fab7414a2df
  0x00007fab7414a2d2: addq   $0x1,0x250(%rdx)
  0x00007fab7414a2da: jmpq   0x00007fab7414a48b
  0x00007fab7414a2df: cmp    0x258(%rdx),%rsi
  0x00007fab7414a2e6: jne    0x00007fab7414a2f5
  0x00007fab7414a2e8: addq   $0x1,0x260(%rdx)
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.HotSpotVMConfigAccess from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>

  0x00007fab7414a2f0: jmpq   0x00007fab7414a48b
  0x00007fab7414a2f5: cmp    0x268(%rdx),%rsi
  0x00007fab7414a2fc: jne    0x00007fab7414a30b
  0x00007fab7414a2fe: addq   $0x1,0x270(%rdx)
  0x00007fab7414a306: jmpq   0x00007fab7414a48b
  0x00007fab7414a30b: cmp    0x278(%rdx),%rsi
  0x00007fab7414a312: jne    0x00007fab7414a321
  0x00007fab7414a314: addq   $0x1,0x280(%rdx)
  0x00007fab7414a31c: jmpq   0x00007fab7414a48b
  0x00007fab7414a321: cmp    0x288(%rdx),%rsi
  0x00007fab7414a328: jne    0x00007fab7414a337
  0x00007fab7414a32a: addq   $0x1,0x290(%rdx)
  0x00007fab7414a332: jmpq   0x00007fab7414a48b
  0x00007fab7414a337: cmp    0x298(%rdx),%rsi
  0x00007fab7414a33e: jne    0x00007fab7414a34d
  0x00007fab7414a340: addq   $0x1,0x2a0(%rdx)
  0x00007fab7414a348: jmpq   0x00007fab7414a48b
  0x00007fab7414a34d: cmp    0x2a8(%rdx),%rsi
  0x00007fab7414a354: jne    0x00007fab7414a363
  0x00007fab7414a356: addq   $0x1,0x2b0(%rdx)
  0x00007fab7414a35e: jmpq   0x00007fab7414a48b
  0x00007fab7414a363: cmpq   $0x0,0x238(%rdx)
  0x00007fab7414a36e: jne    0x00007fab7414a387
  0x00007fab7414a370: mov    %rsi,0x238(%rdx)
  0x00007fab7414a377: movq   $0x1,0x240(%rdx)
  0x00007fab7414a382: jmpq   0x00007fab7414a48b
  0x00007fab7414a387: cmpq   $0x0,0x248(%rdx)
  0x00007fab7414a392: jne    0x00007fab7414a3ab
  0x00007fab7414a394: mov    %rsi,0x248(%rdx)
  0x00007fab7414a39b: movq   $0x1,0x250(%rdx)
  0x00007fab7414a3a6: jmpq   0x00007fab7414a48b
  0x00007fab7414a3ab: cmpq   $0x0,0x258(%rdx)
  0x00007fab7414a3b6: jne    0x00007fab7414a3cf
  0x00007fab7414a3b8: mov    %rsi,0x258(%rdx)
  0x00007fab7414a3bf: movq   $0x1,0x260(%rdx)
  0x00007fab7414a3ca: jmpq   0x00007fab7414a48b
  0x00007fab7414a3cf: cmpq   $0x0,0x268(%rdx)
  0x00007fab7414a3da: jne    0x00007fab7414a3f3
  0x00007fab7414a3dc: mov    %rsi,0x268(%rdx)
  0x00007fab7414a3e3: movq   $0x1,0x270(%rdx)
  0x00007fab7414a3ee: jmpq   0x00007fab7414a48b
  0x00007fab7414a3f3: cmpq   $0x0,0x278(%rdx)
  0x00007fab7414a3fe: jne    0x00007fab7414a417
  0x00007fab7414a400: mov    %rsi,0x278(%rdx)
  0x00007fab7414a407: movq   $0x1,0x280(%rdx)
  0x00007fab7414a412: jmpq   0x00007fab7414a48b
  0x00007fab7414a417: cmpq   $0x0,0x288(%rdx)
  0x00007fab7414a422: jne    0x00007fab7414a43b
  0x00007fab7414a424: mov    %rsi,0x288(%rdx)
  0x00007fab7414a42b: movq   $0x1,0x290(%rdx)
  0x00007fab7414a436: jmpq   0x00007fab7414a48b
  0x00007fab7414a43b: cmpq   $0x0,0x298(%rdx)
  0x00007fab7414a446: jne    0x00007fab7414a45f
  0x00007fab7414a448: mov    %rsi,0x298(%rdx)
  0x00007fab7414a44f: movq   $0x1,0x2a0(%rdx)
  0x00007fab7414a45a: jmpq   0x00007fab7414a48b
  0x00007fab7414a45f: cmpq   $0x0,0x2a8(%rdx)
  0x00007fab7414a46a: jne    0x00007fab7414a483
  0x00007fab7414a46c: mov    %rsi,0x2a8(%rdx)
  0x00007fab7414a473: movq   $0x1,0x2b0(%rdx)
  0x00007fab7414a47e: jmpq   0x00007fab7414a48b
  0x00007fab7414a483: addq   $0x1,0x228(%rdx)
  0x00007fab7414a48b: mov    0x40(%rsp),%edx
  0x00007fab7414a48f: mov    0x50(%rsp),%rcx
  0x00007fab7414a494: mov    0x58(%rsp),%r8
  0x00007fab7414a499: movabs $0x0,%r9           ;   {oop(NULL)}
  0x00007fab7414a4a3: mov    0x48(%rsp),%rsi    ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56 (line 630)

  0x00007fab7414a4a8: nop
  0x00007fab7414a4a9: nop
  0x00007fab7414a4aa: nop
  0x00007fab7414a4ab: nop
  0x00007fab7414a4ac: nop
  0x00007fab7414a4ad: movabs $0xffffffffffffffff,%rax
  0x00007fab7414a4b7: callq  0x00007fab74047f60  ; OopMap{[72]=Oop [104]=Oop off=956}
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56 (line 630)
                                                ;   {virtual_call}
  0x00007fab7414a4bc: mov    0x64(%rsp),%edx
  0x00007fab7414a4c0: movslq %edx,%rsi
  0x00007fab7414a4c3: mov    0x68(%rsp),%rbx
  0x00007fab7414a4c8: lea    0x10(%rbx,%rsi,4),%rsi
  0x00007fab7414a4cd: cmp    0xc(%rbx),%edx
  0x00007fab7414a4d0: jae    0x00007fab7414be09
  0x00007fab7414a4d6: cmp    $0x0,%rax
  0x00007fab7414a4da: jne    0x00007fab7414a4f5
  0x00007fab7414a4dc: movabs $0x7fab61b89810,%rdi  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414a4e6: orl    $0x100,0x2b8(%rdi)
  0x00007fab7414a4f0: jmpq   0x00007fab7414a735
  0x00007fab7414a4f5: mov    0x8(%rbx),%edx     ; implicit exception: dispatches to 0x00007fab7414be12
  0x00007fab7414a4f8: shl    $0x3,%rdx
  0x00007fab7414a4fc: mov    0x8(%rax),%edi
  0x00007fab7414a4ff: shl    $0x3,%rdi
  0x00007fab7414a503: mov    0xe0(%rdx),%rdx
  0x00007fab7414a50a: cmp    %rdx,%rdi
  0x00007fab7414a50d: je     0x00007fab7414a53b
  0x00007fab7414a513: mov    0xc(%rdx),%ebx
  0x00007fab7414a516: cmp    (%rdi,%rbx,1),%rdx
  0x00007fab7414a51a: je     0x00007fab7414a53b
  0x00007fab7414a520: cmp    $0x18,%ebx
  0x00007fab7414a523: jne    0x00007fab7414a71e
  0x00007fab7414a529: push   %rdi
  0x00007fab7414a52a: push   %rdx
  0x00007fab7414a52b: callq  0x00007fab740fe720  ;   {runtime_call}
  0x00007fab7414a530: pop    %rdi
  0x00007fab7414a531: pop    %rdx
  0x00007fab7414a532: cmp    $0x0,%edx
  0x00007fab7414a535: je     0x00007fab7414a71e
  0x00007fab7414a53b: movabs $0x7fab61b89810,%rdi  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414a545: mov    0x8(%rax),%edx
  0x00007fab7414a548: shl    $0x3,%rdx
  0x00007fab7414a54c: cmp    0x2d0(%rdi),%rdx
  0x00007fab7414a553: jne    0x00007fab7414a562
  0x00007fab7414a555: addq   $0x1,0x2d8(%rdi)
  0x00007fab7414a55d: jmpq   0x00007fab7414a735
  0x00007fab7414a562: cmp    0x2e0(%rdi),%rdx
  0x00007fab7414a569: jne    0x00007fab7414a578
  0x00007fab7414a56b: addq   $0x1,0x2e8(%rdi)
  0x00007fab7414a573: jmpq   0x00007fab7414a735
  0x00007fab7414a578: cmp    0x2f0(%rdi),%rdx
  0x00007fab7414a57f: jne    0x00007fab7414a58e
  0x00007fab7414a581: addq   $0x1,0x2f8(%rdi)
  0x00007fab7414a589: jmpq   0x00007fab7414a735
  0x00007fab7414a58e: cmp    0x300(%rdi),%rdx
  0x00007fab7414a595: jne    0x00007fab7414a5a4
  0x00007fab7414a597: addq   $0x1,0x308(%rdi)
  0x00007fab7414a59f: jmpq   0x00007fab7414a735
  0x00007fab7414a5a4: cmp    0x310(%rdi),%rdx
  0x00007fab7414a5ab: jne    0x00007fab7414a5ba
  0x00007fab7414a5ad: addq   $0x1,0x318(%rdi)
  0x00007fab7414a5b5: jmpq   0x00007fab7414a735
  0x00007fab7414a5ba: cmp    0x320(%rdi),%rdx
  0x00007fab7414a5c1: jne    0x00007fab7414a5d0
  0x00007fab7414a5c3: addq   $0x1,0x328(%rdi)
  0x00007fab7414a5cb: jmpq   0x00007fab7414a735
  0x00007fab7414a5d0: cmp    0x330(%rdi),%rdx
  0x00007fab7414a5d7: jne    0x00007fab7414a5e6
  0x00007fab7414a5d9: addq   $0x1,0x338(%rdi)
  0x00007fab7414a5e1: jmpq   0x00007fab7414a735
  0x00007fab7414a5e6: cmp    0x340(%rdi),%rdx
  0x00007fab7414a5ed: jne    0x00007fab7414a5fc
  0x00007fab7414a5ef: addq   $0x1,0x348(%rdi)
  0x00007fab7414a5f7: jmpq   0x00007fab7414a735
  0x00007fab7414a5fc: cmpq   $0x0,0x2d0(%rdi)
  0x00007fab7414a607: jne    0x00007fab7414a620
  0x00007fab7414a609: mov    %rdx,0x2d0(%rdi)
  0x00007fab7414a610: movq   $0x1,0x2d8(%rdi)
  0x00007fab7414a61b: jmpq   0x00007fab7414a735
  0x00007fab7414a620: cmpq   $0x0,0x2e0(%rdi)
  0x00007fab7414a62b: jne    0x00007fab7414a644
  0x00007fab7414a62d: mov    %rdx,0x2e0(%rdi)
  0x00007fab7414a634: movq   $0x1,0x2e8(%rdi)
  0x00007fab7414a63f: jmpq   0x00007fab7414a735
  0x00007fab7414a644: cmpq   $0x0,0x2f0(%rdi)
  0x00007fab7414a64f: jne    0x00007fab7414a668
  0x00007fab7414a651: mov    %rdx,0x2f0(%rdi)
  0x00007fab7414a658: movq   $0x1,0x2f8(%rdi)
  0x00007fab7414a663: jmpq   0x00007fab7414a735
  0x00007fab7414a668: cmpq   $0x0,0x300(%rdi)
  0x00007fab7414a673: jne    0x00007fab7414a68c
  0x00007fab7414a675: mov    %rdx,0x300(%rdi)
  0x00007fab7414a67c: movq   $0x1,0x308(%rdi)
  0x00007fab7414a687: jmpq   0x00007fab7414a735
  0x00007fab7414a68c: cmpq   $0x0,0x310(%rdi)
  0x00007fab7414a697: jne    0x00007fab7414a6b0
  0x00007fab7414a699: mov    %rdx,0x310(%rdi)
  0x00007fab7414a6a0: movq   $0x1,0x318(%rdi)
  0x00007fab7414a6ab: jmpq   0x00007fab7414a735
  0x00007fab7414a6b0: cmpq   $0x0,0x320(%rdi)
  0x00007fab7414a6bb: jne    0x00007fab7414a6d4
  0x00007fab7414a6bd: mov    %rdx,0x320(%rdi)
  0x00007fab7414a6c4: movq   $0x1,0x328(%rdi)
  0x00007fab7414a6cf: jmpq   0x00007fab7414a735
  0x00007fab7414a6d4: cmpq   $0x0,0x330(%rdi)
  0x00007fab7414a6df: jne    0x00007fab7414a6f8
  0x00007fab7414a6e1: mov    %rdx,0x330(%rdi)
  0x00007fab7414a6e8: movq   $0x1,0x338(%rdi)
  0x00007fab7414a6f3: jmpq   0x00007fab7414a735
  0x00007fab7414a6f8: cmpq   $0x0,0x340(%rdi)
  0x00007fab7414a703: jne    0x00007fab7414a71c
  0x00007fab7414a705: mov    %rdx,0x340(%rdi)
  0x00007fab7414a70c: movq   $0x1,0x348(%rdi)
  0x00007fab7414a717: jmpq   0x00007fab7414a735
  0x00007fab7414a71c: jmp    0x00007fab7414a735
  0x00007fab7414a71e: movabs $0x7fab61b89810,%rdi  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414a728: subq   $0x1,0x2c0(%rdi)
  0x00007fab7414a730: jmpq   0x00007fab7414be17
  0x00007fab7414a735: mov    %rax,%r10
  0x00007fab7414a738: shr    $0x3,%r10
  0x00007fab7414a73c: mov    %r10d,(%rsi)
  0x00007fab7414a73f: shr    $0x9,%rsi
  0x00007fab7414a743: movabs $0x7fab701ff000,%rdx
  0x00007fab7414a74d: movb   $0x0,(%rsi,%rdx,1)  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 630)

  0x00007fab7414a751: movabs $0x7fab61b89810,%rdx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414a75b: incl   0x358(%rdx)
  0x00007fab7414a761: jmpq   0x00007fab7414b86e  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@60 (line 630)

  0x00007fab7414a766: mov    0xc(%rdi),%edx     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@65 (line 633)
                                                ; implicit exception: dispatches to 0x00007fab7414be20
  0x00007fab7414a769: cmp    0x40(%rsp),%edx
  0x00007fab7414a76d: movabs $0x7fab61b89810,%rdx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414a777: movabs $0x370,%rsi
  0x00007fab7414a781: jne    0x00007fab7414a791
  0x00007fab7414a787: movabs $0x380,%rsi
  0x00007fab7414a791: mov    (%rdx,%rsi,1),%rax
  0x00007fab7414a795: lea    0x1(%rax),%rax
  0x00007fab7414a799: mov    %rax,(%rdx,%rsi,1)
  0x00007fab7414a79d: je     0x00007fab7414a7ad  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@69 (line 633)

  0x00007fab7414a7a3: mov    %rbx,0x68(%rsp)
  0x00007fab7414a7a8: jmpq   0x00007fab7414aa82  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@104 (line 636)

  0x00007fab7414a7ad: mov    0x50(%rsp),%rcx
  0x00007fab7414a7b2: mov    0x10(%rdi),%edx
  0x00007fab7414a7b5: shl    $0x3,%rdx          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@74 (line 633)

  0x00007fab7414a7b9: cmp    %rcx,%rdx
  0x00007fab7414a7bc: movabs $0x7fab61b89810,%rsi  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414a7c6: movabs $0x390,%rax
  0x00007fab7414a7d0: je     0x00007fab7414a7e0
  0x00007fab7414a7d6: movabs $0x3a0,%rax
  0x00007fab7414a7e0: mov    (%rsi,%rax,1),%r8
  0x00007fab7414a7e4: lea    0x1(%r8),%r8
  0x00007fab7414a7e8: mov    %r8,(%rsi,%rax,1)
  0x00007fab7414a7ec: je     0x00007fab7414b821  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@81 (line 633)

  0x00007fab7414a7f2: cmp    $0x0,%rcx
  0x00007fab7414a7f6: movabs $0x7fab61b89810,%rsi  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414a800: movabs $0x3b0,%rax
  0x00007fab7414a80a: je     0x00007fab7414a81a
  0x00007fab7414a810: movabs $0x3c0,%rax
  0x00007fab7414a81a: mov    (%rsi,%rax,1),%r8
  0x00007fab7414a81e: lea    0x1(%r8),%r8
  0x00007fab7414a822: mov    %r8,(%rsi,%rax,1)
  0x00007fab7414a826: jne    0x00007fab7414a836  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@85 (line 633)

  0x00007fab7414a82c: mov    %rbx,0x68(%rsp)
  0x00007fab7414a831: jmpq   0x00007fab7414aa82  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@104 (line 636)

  0x00007fab7414a836: mov    %rdi,0x70(%rsp)
  0x00007fab7414a83b: mov    %rbx,0x68(%rsp)
  0x00007fab7414a840: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x00007fab7414be25
  0x00007fab7414a843: mov    %rcx,%rsi
  0x00007fab7414a846: movabs $0x7fab61b89810,%rax  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414a850: mov    0x8(%rsi),%esi
  0x00007fab7414a853: shl    $0x3,%rsi
  0x00007fab7414a857: cmp    0x3e0(%rax),%rsi
  0x00007fab7414a85e: jne    0x00007fab7414a86d
  0x00007fab7414a860: addq   $0x1,0x3e8(%rax)
  0x00007fab7414a868: jmpq   0x00007fab7414aa2f
  0x00007fab7414a86d: cmp    0x3f0(%rax),%rsi
  0x00007fab7414a874: jne    0x00007fab7414a883
  0x00007fab7414a876: addq   $0x1,0x3f8(%rax)
  0x00007fab7414a87e: jmpq   0x00007fab7414aa2f
  0x00007fab7414a883: cmp    0x400(%rax),%rsi
  0x00007fab7414a88a: jne    0x00007fab7414a899
  0x00007fab7414a88c: addq   $0x1,0x408(%rax)
  0x00007fab7414a894: jmpq   0x00007fab7414aa2f
  0x00007fab7414a899: cmp    0x410(%rax),%rsi
  0x00007fab7414a8a0: jne    0x00007fab7414a8af
  0x00007fab7414a8a2: addq   $0x1,0x418(%rax)
  0x00007fab7414a8aa: jmpq   0x00007fab7414aa2f
  0x00007fab7414a8af: cmp    0x420(%rax),%rsi
  0x00007fab7414a8b6: jne    0x00007fab7414a8c5
  0x00007fab7414a8b8: addq   $0x1,0x428(%rax)
  0x00007fab7414a8c0: jmpq   0x00007fab7414aa2f
  0x00007fab7414a8c5: cmp    0x430(%rax),%rsi
  0x00007fab7414a8cc: jne    0x00007fab7414a8db
  0x00007fab7414a8ce: addq   $0x1,0x438(%rax)
  0x00007fab7414a8d6: jmpq   0x00007fab7414aa2f
  0x00007fab7414a8db: cmp    0x440(%rax),%rsi
  0x00007fab7414a8e2: jne    0x00007fab7414a8f1
  0x00007fab7414a8e4: addq   $0x1,0x448(%rax)
  0x00007fab7414a8ec: jmpq   0x00007fab7414aa2f
  0x00007fab7414a8f1: cmp    0x450(%rax),%rsi
  0x00007fab7414a8f8: jne    0x00007fab7414a907
  0x00007fab7414a8fa: addq   $0x1,0x458(%rax)
  0x00007fab7414a902: jmpq   0x00007fab7414aa2f
  0x00007fab7414a907: cmpq   $0x0,0x3e0(%rax)
  0x00007fab7414a912: jne    0x00007fab7414a92b
  0x00007fab7414a914: mov    %rsi,0x3e0(%rax)
  0x00007fab7414a91b: movq   $0x1,0x3e8(%rax)
  0x00007fab7414a926: jmpq   0x00007fab7414aa2f
  0x00007fab7414a92b: cmpq   $0x0,0x3f0(%rax)
  0x00007fab7414a936: jne    0x00007fab7414a94f
  0x00007fab7414a938: mov    %rsi,0x3f0(%rax)
  0x00007fab7414a93f: movq   $0x1,0x3f8(%rax)
  0x00007fab7414a94a: jmpq   0x00007fab7414aa2f
  0x00007fab7414a94f: cmpq   $0x0,0x400(%rax)
  0x00007fab7414a95a: jne    0x00007fab7414a973
  0x00007fab7414a95c: mov    %rsi,0x400(%rax)
  0x00007fab7414a963: movq   $0x1,0x408(%rax)
  0x00007fab7414a96e: jmpq   0x00007fab7414aa2f
  0x00007fab7414a973: cmpq   $0x0,0x410(%rax)
  0x00007fab7414a97e: jne    0x00007fab7414a997
  0x00007fab7414a980: mov    %rsi,0x410(%rax)
  0x00007fab7414a987: movq   $0x1,0x418(%rax)
  0x00007fab7414a992: jmpq   0x00007fab7414aa2f
  0x00007fab7414a997: cmpq   $0x0,0x420(%rax)
  0x00007fab7414a9a2: jne    0x00007fab7414a9bb
  0x00007fab7414a9a4: mov    %rsi,0x420(%rax)
  0x00007fab7414a9ab: movq   $0x1,0x428(%rax)
  0x00007fab7414a9b6: jmpq   0x00007fab7414aa2f
  0x00007fab7414a9bb: cmpq   $0x0,0x430(%rax)
  0x00007fab7414a9c6: jne    0x00007fab7414a9df
  0x00007fab7414a9c8: mov    %rsi,0x430(%rax)
  0x00007fab7414a9cf: movq   $0x1,0x438(%rax)
  0x00007fab7414a9da: jmpq   0x00007fab7414aa2f
  0x00007fab7414a9df: cmpq   $0x0,0x440(%rax)
  0x00007fab7414a9ea: jne    0x00007fab7414aa03
  0x00007fab7414a9ec: mov    %rsi,0x440(%rax)
  0x00007fab7414a9f3: movq   $0x1,0x448(%rax)
  0x00007fab7414a9fe: jmpq   0x00007fab7414aa2f
  0x00007fab7414aa03: cmpq   $0x0,0x450(%rax)
  0x00007fab7414aa0e: jne    0x00007fab7414aa27
  0x00007fab7414aa10: mov    %rsi,0x450(%rax)
  0x00007fab7414aa17: movq   $0x1,0x458(%rax)
  0x00007fab7414aa22: jmpq   0x00007fab7414aa2f
  0x00007fab7414aa27: addq   $0x1,0x3d0(%rax)
  0x00007fab7414aa2f: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91 (line 634)

  0x00007fab7414aa32: nop
  0x00007fab7414aa33: nop
  0x00007fab7414aa34: nop
  0x00007fab7414aa35: movabs $0xffffffffffffffff,%rax
  0x00007fab7414aa3f: callq  0x00007fab74047f60  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [112]=Oop [80]=Oop off=2372}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91 (line 634)
                                                ;   {virtual_call}
  0x00007fab7414aa44: cmp    $0x0,%eax
  0x00007fab7414aa47: movabs $0x7fab61b89810,%rdx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414aa51: movabs $0x468,%rcx
  0x00007fab7414aa5b: je     0x00007fab7414aa6b
  0x00007fab7414aa61: movabs $0x478,%rcx
  0x00007fab7414aa6b: mov    (%rdx,%rcx,1),%r8
  0x00007fab7414aa6f: lea    0x1(%r8),%r8
  0x00007fab7414aa73: mov    %r8,(%rdx,%rcx,1)
  0x00007fab7414aa77: mov    0x70(%rsp),%rdi
  0x00007fab7414aa7c: jne    0x00007fab7414b821  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@94 (line 634)

  0x00007fab7414aa82: cmp    $0x0,%rdi
  0x00007fab7414aa86: jne    0x00007fab7414aaa2
  0x00007fab7414aa88: movabs $0x7fab61b89810,%r8  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414aa92: orl    $0x100,0x498(%r8)
  0x00007fab7414aa9d: jmpq   0x00007fab7414acbf
  0x00007fab7414aaa2: movabs $0x7c0031710,%r9   ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00007fab7414aaac: mov    0x8(%rdi),%ecx
  0x00007fab7414aaaf: shl    $0x3,%rcx
  0x00007fab7414aab3: cmp    %rcx,%r9
  0x00007fab7414aab6: jne    0x00007fab7414aca3
  0x00007fab7414aabc: movabs $0x7fab61b89810,%r8  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414aac6: mov    0x8(%rdi),%r9d
  0x00007fab7414aaca: shl    $0x3,%r9
  0x00007fab7414aace: cmp    0x4b0(%r8),%r9
  0x00007fab7414aad5: jne    0x00007fab7414aae4
  0x00007fab7414aad7: addq   $0x1,0x4b8(%r8)
  0x00007fab7414aadf: jmpq   0x00007fab7414acc4
  0x00007fab7414aae4: cmp    0x4c0(%r8),%r9
  0x00007fab7414aaeb: jne    0x00007fab7414aafa
  0x00007fab7414aaed: addq   $0x1,0x4c8(%r8)
  0x00007fab7414aaf5: jmpq   0x00007fab7414acc4
  0x00007fab7414aafa: cmp    0x4d0(%r8),%r9
  0x00007fab7414ab01: jne    0x00007fab7414ab10
  0x00007fab7414ab03: addq   $0x1,0x4d8(%r8)
  0x00007fab7414ab0b: jmpq   0x00007fab7414acc4
  0x00007fab7414ab10: cmp    0x4e0(%r8),%r9
  0x00007fab7414ab17: jne    0x00007fab7414ab26
  0x00007fab7414ab19: addq   $0x1,0x4e8(%r8)
  0x00007fab7414ab21: jmpq   0x00007fab7414acc4
  0x00007fab7414ab26: cmp    0x4f0(%r8),%r9
  0x00007fab7414ab2d: jne    0x00007fab7414ab3c
  0x00007fab7414ab2f: addq   $0x1,0x4f8(%r8)
  0x00007fab7414ab37: jmpq   0x00007fab7414acc4
  0x00007fab7414ab3c: cmp    0x500(%r8),%r9
  0x00007fab7414ab43: jne    0x00007fab7414ab52
  0x00007fab7414ab45: addq   $0x1,0x508(%r8)
  0x00007fab7414ab4d: jmpq   0x00007fab7414acc4
  0x00007fab7414ab52: cmp    0x510(%r8),%r9
  0x00007fab7414ab59: jne    0x00007fab7414ab68
  0x00007fab7414ab5b: addq   $0x1,0x518(%r8)
  0x00007fab7414ab63: jmpq   0x00007fab7414acc4
  0x00007fab7414ab68: cmp    0x520(%r8),%r9
  0x00007fab7414ab6f: jne    0x00007fab7414ab7e
  0x00007fab7414ab71: addq   $0x1,0x528(%r8)
  0x00007fab7414ab79: jmpq   0x00007fab7414acc4
  0x00007fab7414ab7e: cmpq   $0x0,0x4b0(%r8)
  0x00007fab7414ab89: jne    0x00007fab7414aba2
  0x00007fab7414ab8b: mov    %r9,0x4b0(%r8)
  0x00007fab7414ab92: movq   $0x1,0x4b8(%r8)
  0x00007fab7414ab9d: jmpq   0x00007fab7414acc4
  0x00007fab7414aba2: cmpq   $0x0,0x4c0(%r8)
  0x00007fab7414abad: jne    0x00007fab7414abc6
  0x00007fab7414abaf: mov    %r9,0x4c0(%r8)
  0x00007fab7414abb6: movq   $0x1,0x4c8(%r8)
  0x00007fab7414abc1: jmpq   0x00007fab7414acc4
  0x00007fab7414abc6: cmpq   $0x0,0x4d0(%r8)
  0x00007fab7414abd1: jne    0x00007fab7414abea
  0x00007fab7414abd3: mov    %r9,0x4d0(%r8)
  0x00007fab7414abda: movq   $0x1,0x4d8(%r8)
  0x00007fab7414abe5: jmpq   0x00007fab7414acc4
  0x00007fab7414abea: cmpq   $0x0,0x4e0(%r8)
  0x00007fab7414abf5: jne    0x00007fab7414ac0e
  0x00007fab7414abf7: mov    %r9,0x4e0(%r8)
  0x00007fab7414abfe: movq   $0x1,0x4e8(%r8)
  0x00007fab7414ac09: jmpq   0x00007fab7414acc4
  0x00007fab7414ac0e: cmpq   $0x0,0x4f0(%r8)
  0x00007fab7414ac19: jne    0x00007fab7414ac32
  0x00007fab7414ac1b: mov    %r9,0x4f0(%r8)
  0x00007fab7414ac22: movq   $0x1,0x4f8(%r8)
  0x00007fab7414ac2d: jmpq   0x00007fab7414acc4
  0x00007fab7414ac32: cmpq   $0x0,0x500(%r8)
  0x00007fab7414ac3d: jne    0x00007fab7414ac56
  0x00007fab7414ac3f: mov    %r9,0x500(%r8)
  0x00007fab7414ac46: movq   $0x1,0x508(%r8)
  0x00007fab7414ac51: jmpq   0x00007fab7414acc4
  0x00007fab7414ac56: cmpq   $0x0,0x510(%r8)
  0x00007fab7414ac61: jne    0x00007fab7414ac7a
  0x00007fab7414ac63: mov    %r9,0x510(%r8)
  0x00007fab7414ac6a: movq   $0x1,0x518(%r8)
  0x00007fab7414ac75: jmpq   0x00007fab7414acc4
  0x00007fab7414ac7a: cmpq   $0x0,0x520(%r8)
  0x00007fab7414ac85: jne    0x00007fab7414ac9e
  0x00007fab7414ac87: mov    %r9,0x520(%r8)
  0x00007fab7414ac8e: movq   $0x1,0x528(%r8)
  0x00007fab7414ac99: jmpq   0x00007fab7414acc4
  0x00007fab7414ac9e: jmpq   0x00007fab7414acc4
  0x00007fab7414aca3: movabs $0x7fab61b89810,%r8  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414acad: subq   $0x1,0x4a0(%r8)
  0x00007fab7414acb5: jmpq   0x00007fab7414acbf
  0x00007fab7414acba: jmpq   0x00007fab7414acc4
  0x00007fab7414acbf: xor    %rdx,%rdx
  0x00007fab7414acc2: jmp    0x00007fab7414acce
  0x00007fab7414acc4: movabs $0x1,%rdx          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@106 (line 636)

  0x00007fab7414acce: cmp    $0x0,%edx
  0x00007fab7414acd1: movabs $0x7fab61b89810,%rdx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414acdb: movabs $0x538,%rcx
  0x00007fab7414ace5: je     0x00007fab7414acf5
  0x00007fab7414aceb: movabs $0x548,%rcx
  0x00007fab7414acf5: mov    (%rdx,%rcx,1),%r8
  0x00007fab7414acf9: lea    0x1(%r8),%r8
  0x00007fab7414acfd: mov    %r8,(%rdx,%rcx,1)
  0x00007fab7414ad01: je     0x00007fab7414b169  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@109 (line 636)

  0x00007fab7414ad07: cmp    $0x0,%rdi
  0x00007fab7414ad0b: jne    0x00007fab7414ad26
  0x00007fab7414ad0d: movabs $0x7fab61b89810,%rcx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414ad17: orl    $0x100,0x550(%rcx)
  0x00007fab7414ad21: jmpq   0x00007fab7414af43
  0x00007fab7414ad26: movabs $0x7c0031710,%r8   ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00007fab7414ad30: mov    0x8(%rdi),%edx
  0x00007fab7414ad33: shl    $0x3,%rdx
  0x00007fab7414ad37: cmp    %rdx,%r8
  0x00007fab7414ad3a: jne    0x00007fab7414af27
  0x00007fab7414ad40: movabs $0x7fab61b89810,%rcx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414ad4a: mov    0x8(%rdi),%r8d
  0x00007fab7414ad4e: shl    $0x3,%r8
  0x00007fab7414ad52: cmp    0x568(%rcx),%r8
  0x00007fab7414ad59: jne    0x00007fab7414ad68
  0x00007fab7414ad5b: addq   $0x1,0x570(%rcx)
  0x00007fab7414ad63: jmpq   0x00007fab7414af43
  0x00007fab7414ad68: cmp    0x578(%rcx),%r8
  0x00007fab7414ad6f: jne    0x00007fab7414ad7e
  0x00007fab7414ad71: addq   $0x1,0x580(%rcx)
  0x00007fab7414ad79: jmpq   0x00007fab7414af43
  0x00007fab7414ad7e: cmp    0x588(%rcx),%r8
  0x00007fab7414ad85: jne    0x00007fab7414ad94
  0x00007fab7414ad87: addq   $0x1,0x590(%rcx)
  0x00007fab7414ad8f: jmpq   0x00007fab7414af43
  0x00007fab7414ad94: cmp    0x598(%rcx),%r8
  0x00007fab7414ad9b: jne    0x00007fab7414adaa
  0x00007fab7414ad9d: addq   $0x1,0x5a0(%rcx)
  0x00007fab7414ada5: jmpq   0x00007fab7414af43
  0x00007fab7414adaa: cmp    0x5a8(%rcx),%r8
  0x00007fab7414adb1: jne    0x00007fab7414adc0
  0x00007fab7414adb3: addq   $0x1,0x5b0(%rcx)
  0x00007fab7414adbb: jmpq   0x00007fab7414af43
  0x00007fab7414adc0: cmp    0x5b8(%rcx),%r8
  0x00007fab7414adc7: jne    0x00007fab7414add6
  0x00007fab7414adc9: addq   $0x1,0x5c0(%rcx)
  0x00007fab7414add1: jmpq   0x00007fab7414af43
  0x00007fab7414add6: cmp    0x5c8(%rcx),%r8
  0x00007fab7414addd: jne    0x00007fab7414adec
  0x00007fab7414addf: addq   $0x1,0x5d0(%rcx)
  0x00007fab7414ade7: jmpq   0x00007fab7414af43
  0x00007fab7414adec: cmp    0x5d8(%rcx),%r8
  0x00007fab7414adf3: jne    0x00007fab7414ae02
  0x00007fab7414adf5: addq   $0x1,0x5e0(%rcx)
  0x00007fab7414adfd: jmpq   0x00007fab7414af43
  0x00007fab7414ae02: cmpq   $0x0,0x568(%rcx)
  0x00007fab7414ae0d: jne    0x00007fab7414ae26
  0x00007fab7414ae0f: mov    %r8,0x568(%rcx)
  0x00007fab7414ae16: movq   $0x1,0x570(%rcx)
  0x00007fab7414ae21: jmpq   0x00007fab7414af43
  0x00007fab7414ae26: cmpq   $0x0,0x578(%rcx)
  0x00007fab7414ae31: jne    0x00007fab7414ae4a
  0x00007fab7414ae33: mov    %r8,0x578(%rcx)
  0x00007fab7414ae3a: movq   $0x1,0x580(%rcx)
  0x00007fab7414ae45: jmpq   0x00007fab7414af43
  0x00007fab7414ae4a: cmpq   $0x0,0x588(%rcx)
  0x00007fab7414ae55: jne    0x00007fab7414ae6e
  0x00007fab7414ae57: mov    %r8,0x588(%rcx)
  0x00007fab7414ae5e: movq   $0x1,0x590(%rcx)
  0x00007fab7414ae69: jmpq   0x00007fab7414af43
  0x00007fab7414ae6e: cmpq   $0x0,0x598(%rcx)
  0x00007fab7414ae79: jne    0x00007fab7414ae92
  0x00007fab7414ae7b: mov    %r8,0x598(%rcx)
  0x00007fab7414ae82: movq   $0x1,0x5a0(%rcx)
  0x00007fab7414ae8d: jmpq   0x00007fab7414af43
  0x00007fab7414ae92: cmpq   $0x0,0x5a8(%rcx)
  0x00007fab7414ae9d: jne    0x00007fab7414aeb6
  0x00007fab7414ae9f: mov    %r8,0x5a8(%rcx)
  0x00007fab7414aea6: movq   $0x1,0x5b0(%rcx)
  0x00007fab7414aeb1: jmpq   0x00007fab7414af43
  0x00007fab7414aeb6: cmpq   $0x0,0x5b8(%rcx)
  0x00007fab7414aec1: jne    0x00007fab7414aeda
  0x00007fab7414aec3: mov    %r8,0x5b8(%rcx)
  0x00007fab7414aeca: movq   $0x1,0x5c0(%rcx)
  0x00007fab7414aed5: jmpq   0x00007fab7414af43
  0x00007fab7414aeda: cmpq   $0x0,0x5c8(%rcx)
  0x00007fab7414aee5: jne    0x00007fab7414aefe
  0x00007fab7414aee7: mov    %r8,0x5c8(%rcx)
  0x00007fab7414aeee: movq   $0x1,0x5d0(%rcx)
  0x00007fab7414aef9: jmpq   0x00007fab7414af43
  0x00007fab7414aefe: cmpq   $0x0,0x5d8(%rcx)
  0x00007fab7414af09: jne    0x00007fab7414af22
  0x00007fab7414af0b: mov    %r8,0x5d8(%rcx)
  0x00007fab7414af12: movq   $0x1,0x5e0(%rcx)
  0x00007fab7414af1d: jmpq   0x00007fab7414af43
  0x00007fab7414af22: jmpq   0x00007fab7414af43
  0x00007fab7414af27: movabs $0x7fab61b89810,%rcx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414af31: subq   $0x1,0x558(%rcx)
  0x00007fab7414af39: jmpq   0x00007fab7414be2a
  0x00007fab7414af3e: jmpq   0x00007fab7414af43
  0x00007fab7414af43: mov    %rdi,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@114 (line 637)

  0x00007fab7414af46: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00007fab7414be33
  0x00007fab7414af49: mov    %rsi,%rdx
  0x00007fab7414af4c: movabs $0x7fab61b89810,%rcx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414af56: mov    0x8(%rdx),%edx
  0x00007fab7414af59: shl    $0x3,%rdx
  0x00007fab7414af5d: cmp    0x600(%rcx),%rdx
  0x00007fab7414af64: jne    0x00007fab7414af73
  0x00007fab7414af66: addq   $0x1,0x608(%rcx)
  0x00007fab7414af6e: jmpq   0x00007fab7414b135
  0x00007fab7414af73: cmp    0x610(%rcx),%rdx
  0x00007fab7414af7a: jne    0x00007fab7414af89
  0x00007fab7414af7c: addq   $0x1,0x618(%rcx)
  0x00007fab7414af84: jmpq   0x00007fab7414b135
  0x00007fab7414af89: cmp    0x620(%rcx),%rdx
  0x00007fab7414af90: jne    0x00007fab7414af9f
  0x00007fab7414af92: addq   $0x1,0x628(%rcx)
  0x00007fab7414af9a: jmpq   0x00007fab7414b135
  0x00007fab7414af9f: cmp    0x630(%rcx),%rdx
  0x00007fab7414afa6: jne    0x00007fab7414afb5
  0x00007fab7414afa8: addq   $0x1,0x638(%rcx)
  0x00007fab7414afb0: jmpq   0x00007fab7414b135
  0x00007fab7414afb5: cmp    0x640(%rcx),%rdx
  0x00007fab7414afbc: jne    0x00007fab7414afcb
  0x00007fab7414afbe: addq   $0x1,0x648(%rcx)
  0x00007fab7414afc6: jmpq   0x00007fab7414b135
  0x00007fab7414afcb: cmp    0x650(%rcx),%rdx
  0x00007fab7414afd2: jne    0x00007fab7414afe1
  0x00007fab7414afd4: addq   $0x1,0x658(%rcx)
  0x00007fab7414afdc: jmpq   0x00007fab7414b135
  0x00007fab7414afe1: cmp    0x660(%rcx),%rdx
  0x00007fab7414afe8: jne    0x00007fab7414aff7
  0x00007fab7414afea: addq   $0x1,0x668(%rcx)
  0x00007fab7414aff2: jmpq   0x00007fab7414b135
  0x00007fab7414aff7: cmp    0x670(%rcx),%rdx
  0x00007fab7414affe: jne    0x00007fab7414b00d
  0x00007fab7414b000: addq   $0x1,0x678(%rcx)
  0x00007fab7414b008: jmpq   0x00007fab7414b135
  0x00007fab7414b00d: cmpq   $0x0,0x600(%rcx)
  0x00007fab7414b018: jne    0x00007fab7414b031
  0x00007fab7414b01a: mov    %rdx,0x600(%rcx)
  0x00007fab7414b021: movq   $0x1,0x608(%rcx)
  0x00007fab7414b02c: jmpq   0x00007fab7414b135
  0x00007fab7414b031: cmpq   $0x0,0x610(%rcx)
  0x00007fab7414b03c: jne    0x00007fab7414b055
  0x00007fab7414b03e: mov    %rdx,0x610(%rcx)
  0x00007fab7414b045: movq   $0x1,0x618(%rcx)
  0x00007fab7414b050: jmpq   0x00007fab7414b135
  0x00007fab7414b055: cmpq   $0x0,0x620(%rcx)
  0x00007fab7414b060: jne    0x00007fab7414b079
  0x00007fab7414b062: mov    %rdx,0x620(%rcx)
  0x00007fab7414b069: movq   $0x1,0x628(%rcx)
  0x00007fab7414b074: jmpq   0x00007fab7414b135
  0x00007fab7414b079: cmpq   $0x0,0x630(%rcx)
  0x00007fab7414b084: jne    0x00007fab7414b09d
  0x00007fab7414b086: mov    %rdx,0x630(%rcx)
  0x00007fab7414b08d: movq   $0x1,0x638(%rcx)
  0x00007fab7414b098: jmpq   0x00007fab7414b135
  0x00007fab7414b09d: cmpq   $0x0,0x640(%rcx)
  0x00007fab7414b0a8: jne    0x00007fab7414b0c1
  0x00007fab7414b0aa: mov    %rdx,0x640(%rcx)
  0x00007fab7414b0b1: movq   $0x1,0x648(%rcx)
  0x00007fab7414b0bc: jmpq   0x00007fab7414b135
  0x00007fab7414b0c1: cmpq   $0x0,0x650(%rcx)
  0x00007fab7414b0cc: jne    0x00007fab7414b0e5
  0x00007fab7414b0ce: mov    %rdx,0x650(%rcx)
  0x00007fab7414b0d5: movq   $0x1,0x658(%rcx)
  0x00007fab7414b0e0: jmpq   0x00007fab7414b135
  0x00007fab7414b0e5: cmpq   $0x0,0x660(%rcx)
  0x00007fab7414b0f0: jne    0x00007fab7414b109
  0x00007fab7414b0f2: mov    %rdx,0x660(%rcx)
  0x00007fab7414b0f9: movq   $0x1,0x668(%rcx)
  0x00007fab7414b104: jmpq   0x00007fab7414b135
  0x00007fab7414b109: cmpq   $0x0,0x670(%rcx)
  0x00007fab7414b114: jne    0x00007fab7414b12d
  0x00007fab7414b116: mov    %rdx,0x670(%rcx)
  0x00007fab7414b11d: movq   $0x1,0x678(%rcx)
  0x00007fab7414b128: jmpq   0x00007fab7414b135
  0x00007fab7414b12d: addq   $0x1,0x5f0(%rcx)
  0x00007fab7414b135: mov    0x48(%rsp),%rdx
  0x00007fab7414b13a: mov    0x68(%rsp),%rcx
  0x00007fab7414b13f: mov    0x40(%rsp),%r8d
  0x00007fab7414b144: mov    0x50(%rsp),%r9
  0x00007fab7414b149: mov    0x58(%rsp),%rdi    ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123 (line 637)

  0x00007fab7414b14e: nop
  0x00007fab7414b14f: callq  0x00007fab74047d60  ; OopMap{[72]=Oop [88]=Oop off=4180}
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123 (line 637)
                                                ;   {optimized virtual_call}
  0x00007fab7414b154: movabs $0x7fab61b89810,%rdx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414b15e: incl   0x688(%rdx)
  0x00007fab7414b164: jmpq   0x00007fab7414b834  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@128 (line 637)

  0x00007fab7414b169: mov    $0x0,%ebx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@134 (line 640)

  0x00007fab7414b16e: xchg   %ax,%ax
  0x00007fab7414b170: mov    %ebx,0x78(%rsp)
  0x00007fab7414b174: mov    0x50(%rsp),%rcx
  0x00007fab7414b179: mov    0x40(%rsp),%edx
  0x00007fab7414b17d: mov    0x18(%rdi),%eax    ; implicit exception: dispatches to 0x00007fab7414be38
  0x00007fab7414b180: shl    $0x3,%rax          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136 (line 640)

  0x00007fab7414b184: mov    %rax,0x80(%rsp)
  0x00007fab7414b18c: cmp    $0x0,%rax
  0x00007fab7414b190: movabs $0x7fab61b89810,%rsi  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414b19a: movabs $0x6a0,%r8
  0x00007fab7414b1a4: jne    0x00007fab7414b1b4
  0x00007fab7414b1aa: movabs $0x6b0,%r8
  0x00007fab7414b1b4: mov    (%rsi,%r8,1),%r9
  0x00007fab7414b1b8: lea    0x1(%r9),%r9
  0x00007fab7414b1bc: mov    %r9,(%rsi,%r8,1)
  0x00007fab7414b1c0: je     0x00007fab7414b542  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@142 (line 640)

  0x00007fab7414b1c6: mov    0xc(%rax),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@177 (line 646)
                                                ; implicit exception: dispatches to 0x00007fab7414be3d
  0x00007fab7414b1c9: cmp    %edx,%esi
  0x00007fab7414b1cb: movabs $0x7fab61b89810,%rsi  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414b1d5: movabs $0x828,%rdi
  0x00007fab7414b1df: jne    0x00007fab7414b1ef
  0x00007fab7414b1e5: movabs $0x838,%rdi
  0x00007fab7414b1ef: mov    (%rsi,%rdi,1),%r8
  0x00007fab7414b1f3: lea    0x1(%r8),%r8
  0x00007fab7414b1f7: mov    %r8,(%rsi,%rdi,1)
  0x00007fab7414b1fb: jne    0x00007fab7414b4bd  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@181 (line 646)

  0x00007fab7414b201: mov    0x10(%rax),%esi
  0x00007fab7414b204: shl    $0x3,%rsi          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@186 (line 646)

  0x00007fab7414b208: cmp    %rcx,%rsi
  0x00007fab7414b20b: movabs $0x7fab61b89810,%rdi  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414b215: movabs $0x848,%r8
  0x00007fab7414b21f: je     0x00007fab7414b22f
  0x00007fab7414b225: movabs $0x858,%r8
  0x00007fab7414b22f: mov    (%rdi,%r8,1),%r9
  0x00007fab7414b233: lea    0x1(%r9),%r9
  0x00007fab7414b237: mov    %r9,(%rdi,%r8,1)
  0x00007fab7414b23b: je     0x00007fab7414b518  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@193 (line 646)

  0x00007fab7414b241: cmp    $0x0,%rcx
  0x00007fab7414b245: movabs $0x7fab61b89810,%rdi  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414b24f: movabs $0x868,%r8
  0x00007fab7414b259: je     0x00007fab7414b269
  0x00007fab7414b25f: movabs $0x878,%r8
  0x00007fab7414b269: mov    (%rdi,%r8,1),%r9
  0x00007fab7414b26d: lea    0x1(%r9),%r9
  0x00007fab7414b271: mov    %r9,(%rdi,%r8,1)
  0x00007fab7414b275: je     0x00007fab7414b4bd  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@197 (line 646)

  0x00007fab7414b27b: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x00007fab7414be42
  0x00007fab7414b27e: mov    %rcx,%rdi
  0x00007fab7414b281: movabs $0x7fab61b89810,%r8  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414b28b: mov    0x8(%rdi),%edi
  0x00007fab7414b28e: shl    $0x3,%rdi
  0x00007fab7414b292: cmp    0x898(%r8),%rdi
  0x00007fab7414b299: jne    0x00007fab7414b2a8
  0x00007fab7414b29b: addq   $0x1,0x8a0(%r8)
  0x00007fab7414b2a3: jmpq   0x00007fab7414b46a
  0x00007fab7414b2a8: cmp    0x8a8(%r8),%rdi
  0x00007fab7414b2af: jne    0x00007fab7414b2be
  0x00007fab7414b2b1: addq   $0x1,0x8b0(%r8)
  0x00007fab7414b2b9: jmpq   0x00007fab7414b46a
  0x00007fab7414b2be: cmp    0x8b8(%r8),%rdi
  0x00007fab7414b2c5: jne    0x00007fab7414b2d4
  0x00007fab7414b2c7: addq   $0x1,0x8c0(%r8)
  0x00007fab7414b2cf: jmpq   0x00007fab7414b46a
  0x00007fab7414b2d4: cmp    0x8c8(%r8),%rdi
  0x00007fab7414b2db: jne    0x00007fab7414b2ea
  0x00007fab7414b2dd: addq   $0x1,0x8d0(%r8)
  0x00007fab7414b2e5: jmpq   0x00007fab7414b46a
  0x00007fab7414b2ea: cmp    0x8d8(%r8),%rdi
  0x00007fab7414b2f1: jne    0x00007fab7414b300
  0x00007fab7414b2f3: addq   $0x1,0x8e0(%r8)
  0x00007fab7414b2fb: jmpq   0x00007fab7414b46a
  0x00007fab7414b300: cmp    0x8e8(%r8),%rdi
  0x00007fab7414b307: jne    0x00007fab7414b316
  0x00007fab7414b309: addq   $0x1,0x8f0(%r8)
  0x00007fab7414b311: jmpq   0x00007fab7414b46a
  0x00007fab7414b316: cmp    0x8f8(%r8),%rdi
  0x00007fab7414b31d: jne    0x00007fab7414b32c
  0x00007fab7414b31f: addq   $0x1,0x900(%r8)
  0x00007fab7414b327: jmpq   0x00007fab7414b46a
  0x00007fab7414b32c: cmp    0x908(%r8),%rdi
  0x00007fab7414b333: jne    0x00007fab7414b342
  0x00007fab7414b335: addq   $0x1,0x910(%r8)
  0x00007fab7414b33d: jmpq   0x00007fab7414b46a
  0x00007fab7414b342: cmpq   $0x0,0x898(%r8)
  0x00007fab7414b34d: jne    0x00007fab7414b366
  0x00007fab7414b34f: mov    %rdi,0x898(%r8)
  0x00007fab7414b356: movq   $0x1,0x8a0(%r8)
  0x00007fab7414b361: jmpq   0x00007fab7414b46a
  0x00007fab7414b366: cmpq   $0x0,0x8a8(%r8)
  0x00007fab7414b371: jne    0x00007fab7414b38a
  0x00007fab7414b373: mov    %rdi,0x8a8(%r8)
  0x00007fab7414b37a: movq   $0x1,0x8b0(%r8)
  0x00007fab7414b385: jmpq   0x00007fab7414b46a
  0x00007fab7414b38a: cmpq   $0x0,0x8b8(%r8)
  0x00007fab7414b395: jne    0x00007fab7414b3ae
  0x00007fab7414b397: mov    %rdi,0x8b8(%r8)
  0x00007fab7414b39e: movq   $0x1,0x8c0(%r8)
  0x00007fab7414b3a9: jmpq   0x00007fab7414b46a
  0x00007fab7414b3ae: cmpq   $0x0,0x8c8(%r8)
  0x00007fab7414b3b9: jne    0x00007fab7414b3d2
  0x00007fab7414b3bb: mov    %rdi,0x8c8(%r8)
  0x00007fab7414b3c2: movq   $0x1,0x8d0(%r8)
  0x00007fab7414b3cd: jmpq   0x00007fab7414b46a
  0x00007fab7414b3d2: cmpq   $0x0,0x8d8(%r8)
  0x00007fab7414b3dd: jne    0x00007fab7414b3f6
  0x00007fab7414b3df: mov    %rdi,0x8d8(%r8)
  0x00007fab7414b3e6: movq   $0x1,0x8e0(%r8)
  0x00007fab7414b3f1: jmpq   0x00007fab7414b46a
  0x00007fab7414b3f6: cmpq   $0x0,0x8e8(%r8)
  0x00007fab7414b401: jne    0x00007fab7414b41a
  0x00007fab7414b403: mov    %rdi,0x8e8(%r8)
  0x00007fab7414b40a: movq   $0x1,0x8f0(%r8)
  0x00007fab7414b415: jmpq   0x00007fab7414b46a
  0x00007fab7414b41a: cmpq   $0x0,0x8f8(%r8)
  0x00007fab7414b425: jne    0x00007fab7414b43e
  0x00007fab7414b427: mov    %rdi,0x8f8(%r8)
  0x00007fab7414b42e: movq   $0x1,0x900(%r8)
  0x00007fab7414b439: jmpq   0x00007fab7414b46a
  0x00007fab7414b43e: cmpq   $0x0,0x908(%r8)
  0x00007fab7414b449: jne    0x00007fab7414b462
  0x00007fab7414b44b: mov    %rdi,0x908(%r8)
  0x00007fab7414b452: movq   $0x1,0x910(%r8)
  0x00007fab7414b45d: jmpq   0x00007fab7414b46a
  0x00007fab7414b462: addq   $0x1,0x888(%r8)
  0x00007fab7414b46a: mov    %rsi,%rdx
  0x00007fab7414b46d: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203 (line 647)

  0x00007fab7414b470: nop
  0x00007fab7414b471: nop
  0x00007fab7414b472: nop
  0x00007fab7414b473: nop
  0x00007fab7414b474: nop
  0x00007fab7414b475: movabs $0xffffffffffffffff,%rax
  0x00007fab7414b47f: callq  0x00007fab74047f60  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [128]=Oop [80]=Oop off=4996}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203 (line 647)
                                                ;   {virtual_call}
  0x00007fab7414b484: cmp    $0x0,%eax
  0x00007fab7414b487: movabs $0x7fab61b89810,%rdx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414b491: movabs $0x920,%rcx
  0x00007fab7414b49b: je     0x00007fab7414b4ab
  0x00007fab7414b4a1: movabs $0x930,%rcx
  0x00007fab7414b4ab: mov    (%rdx,%rcx,1),%r8
  0x00007fab7414b4af: lea    0x1(%r8),%r8
  0x00007fab7414b4b3: mov    %r8,(%rdx,%rcx,1)
  0x00007fab7414b4b7: jne    0x00007fab7414b525  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@206 (line 647)

  0x00007fab7414b4bd: mov    0x78(%rsp),%ebx
  0x00007fab7414b4c1: inc    %ebx
  0x00007fab7414b4c3: movabs $0x7fab61b89810,%rdx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414b4cd: mov    0x100(%rdx),%ecx
  0x00007fab7414b4d3: add    $0x8,%ecx
  0x00007fab7414b4d6: mov    %ecx,0x100(%rdx)
  0x00007fab7414b4dc: movabs $0x7fab61998918,%rdx  ;   {metadata({method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414b4e6: and    $0xfff8,%ecx
  0x00007fab7414b4ec: cmp    $0x0,%ecx
  0x00007fab7414b4ef: je     0x00007fab7414be47  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [128]=Oop [80]=Oop off=5109}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 639)

  0x00007fab7414b4f5: test   %eax,0x1b696c05(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab7414b4fb: movabs $0x7fab61b89810,%rdx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414b505: incl   0x958(%rdx)
  0x00007fab7414b50b: mov    0x80(%rsp),%rdi
  0x00007fab7414b513: jmpq   0x00007fab7414b170  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 639)

  0x00007fab7414b518: mov    0x80(%rsp),%rax
  0x00007fab7414b520: jmpq   0x00007fab7414b834  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@222 (line 652)

  0x00007fab7414b525: movabs $0x7fab61b89810,%rdx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414b52f: incl   0x940(%rdx)
  0x00007fab7414b535: mov    0x80(%rsp),%rax
  0x00007fab7414b53d: jmpq   0x00007fab7414b834  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@209 (line 648)

  0x00007fab7414b542: mov    %rdi,0x88(%rsp)
  0x00007fab7414b54a: mov    0x48(%rsp),%rsi
  0x00007fab7414b54f: movabs $0x7fab61b89810,%rdx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414b559: mov    0x8(%rsi),%esi
  0x00007fab7414b55c: shl    $0x3,%rsi
  0x00007fab7414b560: cmp    0x6d0(%rdx),%rsi
  0x00007fab7414b567: jne    0x00007fab7414b576
  0x00007fab7414b569: addq   $0x1,0x6d8(%rdx)
  0x00007fab7414b571: jmpq   0x00007fab7414b738
  0x00007fab7414b576: cmp    0x6e0(%rdx),%rsi
  0x00007fab7414b57d: jne    0x00007fab7414b58c
  0x00007fab7414b57f: addq   $0x1,0x6e8(%rdx)
  0x00007fab7414b587: jmpq   0x00007fab7414b738
  0x00007fab7414b58c: cmp    0x6f0(%rdx),%rsi
  0x00007fab7414b593: jne    0x00007fab7414b5a2
  0x00007fab7414b595: addq   $0x1,0x6f8(%rdx)
  0x00007fab7414b59d: jmpq   0x00007fab7414b738
  0x00007fab7414b5a2: cmp    0x700(%rdx),%rsi
  0x00007fab7414b5a9: jne    0x00007fab7414b5b8
  0x00007fab7414b5ab: addq   $0x1,0x708(%rdx)
  0x00007fab7414b5b3: jmpq   0x00007fab7414b738
  0x00007fab7414b5b8: cmp    0x710(%rdx),%rsi
  0x00007fab7414b5bf: jne    0x00007fab7414b5ce
  0x00007fab7414b5c1: addq   $0x1,0x718(%rdx)
  0x00007fab7414b5c9: jmpq   0x00007fab7414b738
  0x00007fab7414b5ce: cmp    0x720(%rdx),%rsi
  0x00007fab7414b5d5: jne    0x00007fab7414b5e4
  0x00007fab7414b5d7: addq   $0x1,0x728(%rdx)
  0x00007fab7414b5df: jmpq   0x00007fab7414b738
  0x00007fab7414b5e4: cmp    0x730(%rdx),%rsi
  0x00007fab7414b5eb: jne    0x00007fab7414b5fa
  0x00007fab7414b5ed: addq   $0x1,0x738(%rdx)
  0x00007fab7414b5f5: jmpq   0x00007fab7414b738
  0x00007fab7414b5fa: cmp    0x740(%rdx),%rsi
  0x00007fab7414b601: jne    0x00007fab7414b610
  0x00007fab7414b603: addq   $0x1,0x748(%rdx)
  0x00007fab7414b60b: jmpq   0x00007fab7414b738
  0x00007fab7414b610: cmpq   $0x0,0x6d0(%rdx)
  0x00007fab7414b61b: jne    0x00007fab7414b634
  0x00007fab7414b61d: mov    %rsi,0x6d0(%rdx)
  0x00007fab7414b624: movq   $0x1,0x6d8(%rdx)
  0x00007fab7414b62f: jmpq   0x00007fab7414b738
  0x00007fab7414b634: cmpq   $0x0,0x6e0(%rdx)
  0x00007fab7414b63f: jne    0x00007fab7414b658
  0x00007fab7414b641: mov    %rsi,0x6e0(%rdx)
  0x00007fab7414b648: movq   $0x1,0x6e8(%rdx)
  0x00007fab7414b653: jmpq   0x00007fab7414b738
  0x00007fab7414b658: cmpq   $0x0,0x6f0(%rdx)
  0x00007fab7414b663: jne    0x00007fab7414b67c
  0x00007fab7414b665: mov    %rsi,0x6f0(%rdx)
  0x00007fab7414b66c: movq   $0x1,0x6f8(%rdx)
  0x00007fab7414b677: jmpq   0x00007fab7414b738
  0x00007fab7414b67c: cmpq   $0x0,0x700(%rdx)
  0x00007fab7414b687: jne    0x00007fab7414b6a0
  0x00007fab7414b689: mov    %rsi,0x700(%rdx)
  0x00007fab7414b690: movq   $0x1,0x708(%rdx)
  0x00007fab7414b69b: jmpq   0x00007fab7414b738
  0x00007fab7414b6a0: cmpq   $0x0,0x710(%rdx)
  0x00007fab7414b6ab: jne    0x00007fab7414b6c4
  0x00007fab7414b6ad: mov    %rsi,0x710(%rdx)
  0x00007fab7414b6b4: movq   $0x1,0x718(%rdx)
  0x00007fab7414b6bf: jmpq   0x00007fab7414b738
  0x00007fab7414b6c4: cmpq   $0x0,0x720(%rdx)
  0x00007fab7414b6cf: jne    0x00007fab7414b6e8
  0x00007fab7414b6d1: mov    %rsi,0x720(%rdx)
  0x00007fab7414b6d8: movq   $0x1,0x728(%rdx)
  0x00007fab7414b6e3: jmpq   0x00007fab7414b738
  0x00007fab7414b6e8: cmpq   $0x0,0x730(%rdx)
  0x00007fab7414b6f3: jne    0x00007fab7414b70c
  0x00007fab7414b6f5: mov    %rsi,0x730(%rdx)
  0x00007fab7414b6fc: movq   $0x1,0x738(%rdx)
  0x00007fab7414b707: jmpq   0x00007fab7414b738
  0x00007fab7414b70c: cmpq   $0x0,0x740(%rdx)
  0x00007fab7414b717: jne    0x00007fab7414b730
  0x00007fab7414b719: mov    %rsi,0x740(%rdx)
  0x00007fab7414b720: movq   $0x1,0x748(%rdx)
  0x00007fab7414b72b: jmpq   0x00007fab7414b738
  0x00007fab7414b730: addq   $0x1,0x6c0(%rdx)
  0x00007fab7414b738: mov    0x40(%rsp),%edx
  0x00007fab7414b73c: mov    0x58(%rsp),%r8
  0x00007fab7414b741: movabs $0x0,%r9           ;   {oop(NULL)}
  0x00007fab7414b74b: mov    0x48(%rsp),%rsi    ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@152 (line 641)

  0x00007fab7414b750: nop
  0x00007fab7414b751: nop
  0x00007fab7414b752: nop
  0x00007fab7414b753: nop
  0x00007fab7414b754: nop
  0x00007fab7414b755: movabs $0xffffffffffffffff,%rax
  0x00007fab7414b75f: callq  0x00007fab74047f60  ; OopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop off=5732}
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@152 (line 641)
                                                ;   {virtual_call}
  0x00007fab7414b764: mov    0x88(%rsp),%rdi
  0x00007fab7414b76c: mov    %rax,%r10
  0x00007fab7414b76f: shr    $0x3,%r10
  0x00007fab7414b773: mov    %r10d,0x18(%rdi)
  0x00007fab7414b777: shr    $0x9,%rdi
  0x00007fab7414b77b: movabs $0x7fab701ff000,%rdx
  0x00007fab7414b785: movb   $0x0,(%rdi,%rdx,1)  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@155 (line 641)

  0x00007fab7414b789: mov    0x78(%rsp),%ebx
  0x00007fab7414b78d: cmp    $0x7,%ebx
  0x00007fab7414b790: movabs $0x7fab61b89810,%rdx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414b79a: movabs $0x758,%rcx
  0x00007fab7414b7a4: jl     0x00007fab7414b7b4
  0x00007fab7414b7aa: movabs $0x768,%rcx
  0x00007fab7414b7b4: mov    (%rdx,%rcx,1),%rsi
  0x00007fab7414b7b8: lea    0x1(%rsi),%rsi
  0x00007fab7414b7bc: mov    %rsi,(%rdx,%rcx,1)
  0x00007fab7414b7c0: jge    0x00007fab7414b7d3  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@162 (line 642)

  0x00007fab7414b7c6: mov    0x80(%rsp),%rax
  0x00007fab7414b7ce: jmpq   0x00007fab7414b834  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@222 (line 652)

  0x00007fab7414b7d3: mov    0x68(%rsp),%rbx
  0x00007fab7414b7d8: mov    0x40(%rsp),%ecx
  0x00007fab7414b7dc: mov    0x48(%rsp),%rsi
  0x00007fab7414b7e1: movabs $0x7fab61b89810,%rdx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414b7eb: addq   $0x1,0x778(%rdx)
  0x00007fab7414b7f3: mov    %rbx,%rdx
  0x00007fab7414b7f6: mov    0x48(%rsp),%rsi    ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@169 (line 643)

  0x00007fab7414b7fb: nop
  0x00007fab7414b7fc: nop
  0x00007fab7414b7fd: nop
  0x00007fab7414b7fe: nop
  0x00007fab7414b7ff: callq  0x00007fab74047d60  ; OopMap{[72]=Oop [88]=Oop [128]=Oop off=5892}
                                                ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@169 (line 643)
                                                ;   {optimized virtual_call}
  0x00007fab7414b804: movabs $0x7fab61b89810,%rdx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414b80e: incl   0x810(%rdx)
  0x00007fab7414b814: mov    0x80(%rsp),%rax
  0x00007fab7414b81c: jmpq   0x00007fab7414b834  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@172 (line 643)

  0x00007fab7414b821: movabs $0x7fab61b89810,%rdx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414b82b: incl   0x488(%rdx)
  0x00007fab7414b831: mov    %rdi,%rax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@101 (line 635)

  0x00007fab7414b834: cmp    $0x0,%rax
  0x00007fab7414b838: movabs $0x7fab61b89810,%rdx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414b842: movabs $0x970,%rsi
  0x00007fab7414b84c: je     0x00007fab7414b85c
  0x00007fab7414b852: movabs $0x980,%rsi
  0x00007fab7414b85c: mov    (%rdx,%rsi,1),%rdi
  0x00007fab7414b860: lea    0x1(%rdi),%rdi
  0x00007fab7414b864: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab7414b868: jne    0x00007fab7414b8c7  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@224 (line 652)

  0x00007fab7414b86e: mov    0x48(%rsp),%rsi
  0x00007fab7414b873: mov    0x18(%rsi),%edx    ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@261 (line 660)

  0x00007fab7414b876: inc    %edx
  0x00007fab7414b878: mov    %edx,0x18(%rsi)    ;*putfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@266 (line 660)

  0x00007fab7414b87b: mov    0x14(%rsi),%edx    ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@271 (line 661)

  0x00007fab7414b87e: inc    %edx
  0x00007fab7414b880: mov    %edx,0x14(%rsi)    ;*putfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@277 (line 661)

  0x00007fab7414b883: mov    0x1c(%rsi),%edi    ;*getfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@281 (line 661)

  0x00007fab7414b886: cmp    %edi,%edx
  0x00007fab7414b888: movabs $0x7fab61b89810,%rdx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414b892: movabs $0xa68,%rdi
  0x00007fab7414b89c: jle    0x00007fab7414b8ac
  0x00007fab7414b8a2: movabs $0xa78,%rdi
  0x00007fab7414b8ac: mov    (%rdx,%rdi,1),%rbx
  0x00007fab7414b8b0: lea    0x1(%rbx),%rbx
  0x00007fab7414b8b4: mov    %rbx,(%rdx,%rdi,1)
  0x00007fab7414b8b8: jg     0x00007fab7414bb93  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@284 (line 661)

  0x00007fab7414b8be: mov    0x60(%rsp),%edi
  0x00007fab7414b8c2: jmpq   0x00007fab7414bbbd  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@292 (line 663)

  0x00007fab7414b8c7: mov    0x44(%rsp),%r9d
  0x00007fab7414b8cc: mov    0x48(%rsp),%rsi
  0x00007fab7414b8d1: mov    0x14(%rax),%edi    ; implicit exception: dispatches to 0x00007fab7414be5e
  0x00007fab7414b8d4: shl    $0x3,%rdi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@229 (line 653)

  0x00007fab7414b8d8: cmp    $0x0,%r9d
  0x00007fab7414b8dc: movabs $0x7fab61b89810,%rdx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414b8e6: movabs $0x990,%rbx
  0x00007fab7414b8f0: je     0x00007fab7414b900
  0x00007fab7414b8f6: movabs $0x9a0,%rbx
  0x00007fab7414b900: mov    (%rdx,%rbx,1),%rcx
  0x00007fab7414b904: lea    0x1(%rcx),%rcx
  0x00007fab7414b908: mov    %rcx,(%rdx,%rbx,1)
  0x00007fab7414b90c: je     0x00007fab7414b94c  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@236 (line 654)

  0x00007fab7414b912: cmp    $0x0,%rdi
  0x00007fab7414b916: movabs $0x7fab61b89810,%rdx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414b920: movabs $0x9b0,%rbx
  0x00007fab7414b92a: jne    0x00007fab7414b93a
  0x00007fab7414b930: movabs $0x9c0,%rbx
  0x00007fab7414b93a: mov    (%rdx,%rbx,1),%rcx
  0x00007fab7414b93e: lea    0x1(%rcx),%rcx
  0x00007fab7414b942: mov    %rcx,(%rdx,%rbx,1)
  0x00007fab7414b946: jne    0x00007fab7414b971  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@241 (line 654)

  0x00007fab7414b94c: mov    0x58(%rsp),%r8
  0x00007fab7414b951: mov    %r8,%r10
  0x00007fab7414b954: shr    $0x3,%r10
  0x00007fab7414b958: mov    %r10d,0x14(%rax)
  0x00007fab7414b95c: mov    %rax,%rdx
  0x00007fab7414b95f: shr    $0x9,%rdx
  0x00007fab7414b963: movabs $0x7fab701ff000,%rbx
  0x00007fab7414b96d: movb   $0x0,(%rdx,%rbx,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@247 (line 655)

  0x00007fab7414b971: mov    %rdi,0x90(%rsp)
  0x00007fab7414b979: mov    %rsi,%rdx
  0x00007fab7414b97c: movabs $0x7fab61b89810,%rbx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414b986: mov    0x8(%rdx),%edx
  0x00007fab7414b989: shl    $0x3,%rdx
  0x00007fab7414b98d: cmp    0x9e0(%rbx),%rdx
  0x00007fab7414b994: jne    0x00007fab7414b9a3
  0x00007fab7414b996: addq   $0x1,0x9e8(%rbx)
  0x00007fab7414b99e: jmpq   0x00007fab7414bb65
  0x00007fab7414b9a3: cmp    0x9f0(%rbx),%rdx
  0x00007fab7414b9aa: jne    0x00007fab7414b9b9
  0x00007fab7414b9ac: addq   $0x1,0x9f8(%rbx)
  0x00007fab7414b9b4: jmpq   0x00007fab7414bb65
  0x00007fab7414b9b9: cmp    0xa00(%rbx),%rdx
  0x00007fab7414b9c0: jne    0x00007fab7414b9cf
  0x00007fab7414b9c2: addq   $0x1,0xa08(%rbx)
  0x00007fab7414b9ca: jmpq   0x00007fab7414bb65
  0x00007fab7414b9cf: cmp    0xa10(%rbx),%rdx
  0x00007fab7414b9d6: jne    0x00007fab7414b9e5
  0x00007fab7414b9d8: addq   $0x1,0xa18(%rbx)
  0x00007fab7414b9e0: jmpq   0x00007fab7414bb65
  0x00007fab7414b9e5: cmp    0xa20(%rbx),%rdx
  0x00007fab7414b9ec: jne    0x00007fab7414b9fb
  0x00007fab7414b9ee: addq   $0x1,0xa28(%rbx)
  0x00007fab7414b9f6: jmpq   0x00007fab7414bb65
  0x00007fab7414b9fb: cmp    0xa30(%rbx),%rdx
  0x00007fab7414ba02: jne    0x00007fab7414ba11
  0x00007fab7414ba04: addq   $0x1,0xa38(%rbx)
  0x00007fab7414ba0c: jmpq   0x00007fab7414bb65
  0x00007fab7414ba11: cmp    0xa40(%rbx),%rdx
  0x00007fab7414ba18: jne    0x00007fab7414ba27
  0x00007fab7414ba1a: addq   $0x1,0xa48(%rbx)
  0x00007fab7414ba22: jmpq   0x00007fab7414bb65
  0x00007fab7414ba27: cmp    0xa50(%rbx),%rdx
  0x00007fab7414ba2e: jne    0x00007fab7414ba3d
  0x00007fab7414ba30: addq   $0x1,0xa58(%rbx)
  0x00007fab7414ba38: jmpq   0x00007fab7414bb65
  0x00007fab7414ba3d: cmpq   $0x0,0x9e0(%rbx)
  0x00007fab7414ba48: jne    0x00007fab7414ba61
  0x00007fab7414ba4a: mov    %rdx,0x9e0(%rbx)
  0x00007fab7414ba51: movq   $0x1,0x9e8(%rbx)
  0x00007fab7414ba5c: jmpq   0x00007fab7414bb65
  0x00007fab7414ba61: cmpq   $0x0,0x9f0(%rbx)
  0x00007fab7414ba6c: jne    0x00007fab7414ba85
  0x00007fab7414ba6e: mov    %rdx,0x9f0(%rbx)
  0x00007fab7414ba75: movq   $0x1,0x9f8(%rbx)
  0x00007fab7414ba80: jmpq   0x00007fab7414bb65
  0x00007fab7414ba85: cmpq   $0x0,0xa00(%rbx)
  0x00007fab7414ba90: jne    0x00007fab7414baa9
  0x00007fab7414ba92: mov    %rdx,0xa00(%rbx)
  0x00007fab7414ba99: movq   $0x1,0xa08(%rbx)
  0x00007fab7414baa4: jmpq   0x00007fab7414bb65
  0x00007fab7414baa9: cmpq   $0x0,0xa10(%rbx)
  0x00007fab7414bab4: jne    0x00007fab7414bacd
  0x00007fab7414bab6: mov    %rdx,0xa10(%rbx)
  0x00007fab7414babd: movq   $0x1,0xa18(%rbx)
  0x00007fab7414bac8: jmpq   0x00007fab7414bb65
  0x00007fab7414bacd: cmpq   $0x0,0xa20(%rbx)
  0x00007fab7414bad8: jne    0x00007fab7414baf1
  0x00007fab7414bada: mov    %rdx,0xa20(%rbx)
  0x00007fab7414bae1: movq   $0x1,0xa28(%rbx)
  0x00007fab7414baec: jmpq   0x00007fab7414bb65
  0x00007fab7414baf1: cmpq   $0x0,0xa30(%rbx)
  0x00007fab7414bafc: jne    0x00007fab7414bb15
  0x00007fab7414bafe: mov    %rdx,0xa30(%rbx)
  0x00007fab7414bb05: movq   $0x1,0xa38(%rbx)
  0x00007fab7414bb10: jmpq   0x00007fab7414bb65
  0x00007fab7414bb15: cmpq   $0x0,0xa40(%rbx)
  0x00007fab7414bb20: jne    0x00007fab7414bb39
  0x00007fab7414bb22: mov    %rdx,0xa40(%rbx)
  0x00007fab7414bb29: movq   $0x1,0xa48(%rbx)
  0x00007fab7414bb34: jmpq   0x00007fab7414bb65
  0x00007fab7414bb39: cmpq   $0x0,0xa50(%rbx)
  0x00007fab7414bb44: jne    0x00007fab7414bb5d
  0x00007fab7414bb46: mov    %rdx,0xa50(%rbx)
  0x00007fab7414bb4d: movq   $0x1,0xa58(%rbx)
  0x00007fab7414bb58: jmpq   0x00007fab7414bb65
  0x00007fab7414bb5d: addq   $0x1,0x9d0(%rbx)
  0x00007fab7414bb65: mov    %rax,%rdx          ;*invokevirtual afterNodeAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@253 (line 656)

  0x00007fab7414bb68: nop
  0x00007fab7414bb69: nop
  0x00007fab7414bb6a: nop
  0x00007fab7414bb6b: nop
  0x00007fab7414bb6c: nop
  0x00007fab7414bb6d: movabs $0xffffffffffffffff,%rax
  0x00007fab7414bb77: callq  0x00007fab74047f60  ; OopMap{[144]=Oop off=6780}
                                                ;*invokevirtual afterNodeAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@253 (line 656)
                                                ;   {virtual_call}
  0x00007fab7414bb7c: mov    0x90(%rsp),%rax
  0x00007fab7414bb84: add    $0xa0,%rsp
  0x00007fab7414bb8b: pop    %rbp
  0x00007fab7414bb8c: test   %eax,0x1b69656e(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7414bb92: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@258 (line 657)

  0x00007fab7414bb93: mov    %rsi,%rdi
  0x00007fab7414bb96: movabs $0x7fab61b89810,%rbx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414bba0: addq   $0x1,0xa88(%rbx)
  0x00007fab7414bba8: mov    %rsi,%rdi
  0x00007fab7414bbab: mov    %rdi,%rsi          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@288 (line 662)

  0x00007fab7414bbae: nop
  0x00007fab7414bbaf: callq  0x00007fab74047d60  ; OopMap{[72]=Oop off=6836}
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@288 (line 662)
                                                ;   {optimized virtual_call}
  0x00007fab7414bbb4: mov    0x60(%rsp),%edi
  0x00007fab7414bbb8: mov    0x48(%rsp),%rsi
  0x00007fab7414bbbd: mov    %rsi,%rdx
  0x00007fab7414bbc0: movabs $0x7fab61b89810,%rbx  ;   {metadata(method data for {method} {0x00007fab61998918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414bbca: mov    0x8(%rdx),%edx
  0x00007fab7414bbcd: shl    $0x3,%rdx
  0x00007fab7414bbd1: cmp    0xb30(%rbx),%rdx
  0x00007fab7414bbd8: jne    0x00007fab7414bbe7
  0x00007fab7414bbda: addq   $0x1,0xb38(%rbx)
  0x00007fab7414bbe2: jmpq   0x00007fab7414bda9
  0x00007fab7414bbe7: cmp    0xb40(%rbx),%rdx
  0x00007fab7414bbee: jne    0x00007fab7414bbfd
  0x00007fab7414bbf0: addq   $0x1,0xb48(%rbx)
  0x00007fab7414bbf8: jmpq   0x00007fab7414bda9
  0x00007fab7414bbfd: cmp    0xb50(%rbx),%rdx
  0x00007fab7414bc04: jne    0x00007fab7414bc13
  0x00007fab7414bc06: addq   $0x1,0xb58(%rbx)
  0x00007fab7414bc0e: jmpq   0x00007fab7414bda9
  0x00007fab7414bc13: cmp    0xb60(%rbx),%rdx
  0x00007fab7414bc1a: jne    0x00007fab7414bc29
  0x00007fab7414bc1c: addq   $0x1,0xb68(%rbx)
  0x00007fab7414bc24: jmpq   0x00007fab7414bda9
  0x00007fab7414bc29: cmp    0xb70(%rbx),%rdx
  0x00007fab7414bc30: jne    0x00007fab7414bc3f
  0x00007fab7414bc32: addq   $0x1,0xb78(%rbx)
  0x00007fab7414bc3a: jmpq   0x00007fab7414bda9
  0x00007fab7414bc3f: cmp    0xb80(%rbx),%rdx
  0x00007fab7414bc46: jne    0x00007fab7414bc55
  0x00007fab7414bc48: addq   $0x1,0xb88(%rbx)
  0x00007fab7414bc50: jmpq   0x00007fab7414bda9
  0x00007fab7414bc55: cmp    0xb90(%rbx),%rdx
  0x00007fab7414bc5c: jne    0x00007fab7414bc6b
  0x00007fab7414bc5e: addq   $0x1,0xb98(%rbx)
  0x00007fab7414bc66: jmpq   0x00007fab7414bda9
  0x00007fab7414bc6b: cmp    0xba0(%rbx),%rdx
  0x00007fab7414bc72: jne    0x00007fab7414bc81
  0x00007fab7414bc74: addq   $0x1,0xba8(%rbx)
  0x00007fab7414bc7c: jmpq   0x00007fab7414bda9
  0x00007fab7414bc81: cmpq   $0x0,0xb30(%rbx)
  0x00007fab7414bc8c: jne    0x00007fab7414bca5
  0x00007fab7414bc8e: mov    %rdx,0xb30(%rbx)
  0x00007fab7414bc95: movq   $0x1,0xb38(%rbx)
  0x00007fab7414bca0: jmpq   0x00007fab7414bda9
  0x00007fab7414bca5: cmpq   $0x0,0xb40(%rbx)
  0x00007fab7414bcb0: jne    0x00007fab7414bcc9
  0x00007fab7414bcb2: mov    %rdx,0xb40(%rbx)
  0x00007fab7414bcb9: movq   $0x1,0xb48(%rbx)
  0x00007fab7414bcc4: jmpq   0x00007fab7414bda9
  0x00007fab7414bcc9: cmpq   $0x0,0xb50(%rbx)
  0x00007fab7414bcd4: jne    0x00007fab7414bced
  0x00007fab7414bcd6: mov    %rdx,0xb50(%rbx)
  0x00007fab7414bcdd: movq   $0x1,0xb58(%rbx)
  0x00007fab7414bce8: jmpq   0x00007fab7414bda9
  0x00007fab7414bced: cmpq   $0x0,0xb60(%rbx)
  0x00007fab7414bcf8: jne    0x00007fab7414bd11
  0x00007fab7414bcfa: mov    %rdx,0xb60(%rbx)
  0x00007fab7414bd01: movq   $0x1,0xb68(%rbx)
  0x00007fab7414bd0c: jmpq   0x00007fab7414bda9
  0x00007fab7414bd11: cmpq   $0x0,0xb70(%rbx)
  0x00007fab7414bd1c: jne    0x00007fab7414bd35
  0x00007fab7414bd1e: mov    %rdx,0xb70(%rbx)
  0x00007fab7414bd25: movq   $0x1,0xb78(%rbx)
  0x00007fab7414bd30: jmpq   0x00007fab7414bda9
  0x00007fab7414bd35: cmpq   $0x0,0xb80(%rbx)
  0x00007fab7414bd40: jne    0x00007fab7414bd59
  0x00007fab7414bd42: mov    %rdx,0xb80(%rbx)
  0x00007fab7414bd49: movq   $0x1,0xb88(%rbx)
  0x00007fab7414bd54: jmpq   0x00007fab7414bda9
  0x00007fab7414bd59: cmpq   $0x0,0xb90(%rbx)
  0x00007fab7414bd64: jne    0x00007fab7414bd7d
  0x00007fab7414bd66: mov    %rdx,0xb90(%rbx)
  0x00007fab7414bd6d: movq   $0x1,0xb98(%rbx)
  0x00007fab7414bd78: jmpq   0x00007fab7414bda9
  0x00007fab7414bd7d: cmpq   $0x0,0xba0(%rbx)
  0x00007fab7414bd88: jne    0x00007fab7414bda1
  0x00007fab7414bd8a: mov    %rdx,0xba0(%rbx)
  0x00007fab7414bd91: movq   $0x1,0xba8(%rbx)
  0x00007fab7414bd9c: jmpq   0x00007fab7414bda9
  0x00007fab7414bda1: addq   $0x1,0xb20(%rbx)
  0x00007fab7414bda9: mov    %rdi,%rdx          ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295 (line 663)

  0x00007fab7414bdac: nop
  0x00007fab7414bdad: movabs $0xffffffffffffffff,%rax
  0x00007fab7414bdb7: callq  0x00007fab74047f60  ; OopMap{off=7356}
                                                ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295 (line 663)
                                                ;   {virtual_call}
  0x00007fab7414bdbc: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fab7414bdc6: add    $0xa0,%rsp
  0x00007fab7414bdcd: pop    %rbp
  0x00007fab7414bdce: test   %eax,0x1b69632c(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7414bdd4: retq   
  0x00007fab7414bdd5: mov    %rbx,0x8(%rsp)
  0x00007fab7414bdda: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7414bde2: callq  0x00007fab741005e0  ; OopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop off=7399}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1 (line 627)
                                                ;   {runtime_call}
  0x00007fab7414bde7: jmpq   0x00007fab7414a16f
  0x00007fab7414bdec: callq  0x00007fab740fc000  ; OopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop rbx=Oop off=7409}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@12 (line 627)
                                                ;   {runtime_call}
  0x00007fab7414bdf1: callq  0x00007fab740fc000  ; OopMap{[72]=Oop [88]=Oop [80]=Oop rdx=Oop off=7414}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26 (line 628)
                                                ;   {runtime_call}
  0x00007fab7414bdf6: callq  0x00007fab740fc000  ; OopMap{[72]=Oop [88]=Oop [80]=Oop rbx=Oop off=7419}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 629)
                                                ;   {runtime_call}
  0x00007fab7414bdfb: callq  0x00007fab740fc000  ; OopMap{[72]=Oop [88]=Oop [80]=Oop rbx=Oop off=7424}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 629)
                                                ;   {runtime_call}
  0x00007fab7414be00: mov    %rax,(%rsp)
  0x00007fab7414be04: callq  0x00007fab740fb940  ; OopMap{[72]=Oop [88]=Oop [80]=Oop rbx=Oop off=7433}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 629)
                                                ;   {runtime_call}
  0x00007fab7414be09: mov    %rdx,(%rsp)
  0x00007fab7414be0d: callq  0x00007fab740fb940  ; OopMap{[72]=Oop rax=Oop rbx=Oop off=7442}
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 630)
                                                ;   {runtime_call}
  0x00007fab7414be12: callq  0x00007fab740fc000  ; OopMap{[72]=Oop rax=Oop off=7447}
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 630)
                                                ;   {runtime_call}
  0x00007fab7414be17: mov    %rax,(%rsp)
  0x00007fab7414be1b: callq  0x00007fab740fe080  ; OopMap{[72]=Oop rax=Oop off=7456}
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 630)
                                                ;   {runtime_call}
  0x00007fab7414be20: callq  0x00007fab740fc000  ; OopMap{[72]=Oop rdi=Oop [88]=Oop [80]=Oop rbx=Oop off=7461}
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@65 (line 633)
                                                ;   {runtime_call}
  0x00007fab7414be25: callq  0x00007fab740fc000  ; OopMap{[72]=Oop [88]=Oop rcx=Oop [80]=Oop [104]=Oop [112]=Oop rdx=Oop off=7466}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91 (line 634)
                                                ;   {runtime_call}
  0x00007fab7414be2a: mov    %rdi,(%rsp)
  0x00007fab7414be2e: callq  0x00007fab740fe2c0  ; OopMap{[72]=Oop [88]=Oop [80]=Oop [104]=Oop off=7475}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@114 (line 637)
                                                ;   {runtime_call}
  0x00007fab7414be33: callq  0x00007fab740fc000  ; OopMap{[72]=Oop [88]=Oop [80]=Oop [104]=Oop rsi=Oop off=7480}
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123 (line 637)
                                                ;   {runtime_call}
  0x00007fab7414be38: callq  0x00007fab740fc000  ; OopMap{[72]=Oop [88]=Oop [104]=Oop rdi=Oop rcx=Oop [80]=Oop off=7485}
                                                ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136 (line 640)
                                                ;   {runtime_call}
  0x00007fab7414be3d: callq  0x00007fab740fc000  ; OopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop rax=Oop [128]=Oop off=7490}
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@177 (line 646)
                                                ;   {runtime_call}
  0x00007fab7414be42: callq  0x00007fab740fc000  ; OopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop [128]=Oop rsi=Oop off=7495}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203 (line 647)
                                                ;   {runtime_call}
  0x00007fab7414be47: mov    %rdx,0x8(%rsp)
  0x00007fab7414be4c: movq   $0xdb,(%rsp)
  0x00007fab7414be54: callq  0x00007fab741005e0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [128]=Oop [80]=Oop off=7513}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 639)
                                                ;   {runtime_call}
  0x00007fab7414be59: jmpq   0x00007fab7414b4f5
  0x00007fab7414be5e: callq  0x00007fab740fc000  ; OopMap{rsi=Oop [72]=Oop [88]=Oop rax=Oop off=7523}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@229 (line 653)
                                                ;   {runtime_call}
  0x00007fab7414be63: nop
  0x00007fab7414be64: nop
  0x00007fab7414be65: mov    0x2c0(%r15),%rax
  0x00007fab7414be6c: movabs $0x0,%r10
  0x00007fab7414be76: mov    %r10,0x2c0(%r15)
  0x00007fab7414be7d: movabs $0x0,%r10
  0x00007fab7414be87: mov    %r10,0x2c8(%r15)
  0x00007fab7414be8e: add    $0xa0,%rsp
  0x00007fab7414be95: pop    %rbp
  0x00007fab7414be96: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7414be9b: hlt    
  0x00007fab7414be9c: hlt    
  0x00007fab7414be9d: hlt    
  0x00007fab7414be9e: hlt    
  0x00007fab7414be9f: hlt    
[Stub Code]
  0x00007fab7414bea0: nop                       ;   {no_reloc}
  0x00007fab7414bea1: nop
  0x00007fab7414bea2: nop
  0x00007fab7414bea3: nop
  0x00007fab7414bea4: nop
  0x00007fab7414bea5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414beaf: jmpq   0x00007fab7414beaf  ;   {runtime_call}
  0x00007fab7414beb4: nop
  0x00007fab7414beb5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414bebf: jmpq   0x00007fab7414bebf  ;   {runtime_call}
  0x00007fab7414bec4: nop
  0x00007fab7414bec5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414becf: jmpq   0x00007fab7414becf  ;   {runtime_call}
  0x00007fab7414bed4: nop
  0x00007fab7414bed5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414bedf: jmpq   0x00007fab7414bedf  ;   {runtime_call}
  0x00007fab7414bee4: nop
  0x00007fab7414bee5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414beef: jmpq   0x00007fab7414beef  ;   {runtime_call}
  0x00007fab7414bef4: nop
  0x00007fab7414bef5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414beff: jmpq   0x00007fab7414beff  ;   {runtime_call}
  0x00007fab7414bf04: nop
  0x00007fab7414bf05: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414bf0f: jmpq   0x00007fab7414bf0f  ;   {runtime_call}
  0x00007fab7414bf14: nop
  0x00007fab7414bf15: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414bf1f: jmpq   0x00007fab7414bf1f  ;   {runtime_call}
  0x00007fab7414bf24: nop
  0x00007fab7414bf25: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414bf2f: jmpq   0x00007fab7414bf2f  ;   {runtime_call}
  0x00007fab7414bf34: nop
  0x00007fab7414bf35: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414bf3f: jmpq   0x00007fab7414bf3f  ;   {runtime_call}
[Exception Handler]
  0x00007fab7414bf44: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab7414bf49: mov    %rsp,-0x28(%rsp)
  0x00007fab7414bf4e: sub    $0x80,%rsp
  0x00007fab7414bf55: mov    %rax,0x78(%rsp)
  0x00007fab7414bf5a: mov    %rcx,0x70(%rsp)
  0x00007fab7414bf5f: mov    %rdx,0x68(%rsp)
  0x00007fab7414bf64: mov    %rbx,0x60(%rsp)
  0x00007fab7414bf69: mov    %rbp,0x50(%rsp)
  0x00007fab7414bf6e: mov    %rsi,0x48(%rsp)
  0x00007fab7414bf73: mov    %rdi,0x40(%rsp)
  0x00007fab7414bf78: mov    %r8,0x38(%rsp)
  0x00007fab7414bf7d: mov    %r9,0x30(%rsp)
  0x00007fab7414bf82: mov    %r10,0x28(%rsp)
  0x00007fab7414bf87: mov    %r11,0x20(%rsp)
  0x00007fab7414bf8c: mov    %r12,0x18(%rsp)
  0x00007fab7414bf91: mov    %r13,0x10(%rsp)
  0x00007fab7414bf96: mov    %r14,0x8(%rsp)
  0x00007fab7414bf9b: mov    %r15,(%rsp)
  0x00007fab7414bf9f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7414bfa9: movabs $0x7fab7414bf49,%rsi  ;   {internal_word}
  0x00007fab7414bfb3: mov    %rsp,%rdx
  0x00007fab7414bfb6: and    $0xfffffffffffffff0,%rsp
  0x00007fab7414bfba: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7414bfbf: hlt    
[Deopt Handler Code]
  0x00007fab7414bfc0: movabs $0x7fab7414bfc0,%r10  ;   {section_word}
  0x00007fab7414bfca: push   %r10
  0x00007fab7414bfcc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7414bfd1: hlt    
  0x00007fab7414bfd2: hlt    
  0x00007fab7414bfd3: hlt    
  0x00007fab7414bfd4: hlt    
  0x00007fab7414bfd5: hlt    
  0x00007fab7414bfd6: hlt    
  0x00007fab7414bfd7: hlt    
<nmethod compile_id='118' compiler='C1' level='3' entry='0x00007fab7414a100' size='11104' address='0x00007fab74149e90' relocation_offset='312' insts_offset='624' stub_offset='8208' scopes_data_offset='8528' scopes_pcs_offset='9456' dependencies_offset='10992' nul_chk_table_offset='11000' metadata_offset='8520' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='1532' backedge_count='68' iicount='1532' stamp='0.468'/>
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.HotSpotVMConfig from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/HashMap$Node.&lt;init&gt;  [0x00007fab7414cb80, 0x00007fab7414cd70]  496 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab6199d650} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap$Node&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab7414cb80: mov    0x8(%rsi),%r10d
  0x00007fab7414cb84: shl    $0x3,%r10
  0x00007fab7414cb88: cmp    %rax,%r10
  0x00007fab7414cb8b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7414cb91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7414cb9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7414cba0: mov    %eax,-0x14000(%rsp)
  0x00007fab7414cba7: push   %rbp
  0x00007fab7414cba8: sub    $0x30,%rsp
  0x00007fab7414cbac: movabs $0x7fab61b997c0,%rdi  ;   {metadata(method data for {method} {0x00007fab6199d650} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00007fab7414cbb6: mov    0xfc(%rdi),%ebx
  0x00007fab7414cbbc: add    $0x8,%ebx
  0x00007fab7414cbbf: mov    %ebx,0xfc(%rdi)
  0x00007fab7414cbc5: movabs $0x7fab6199d650,%rdi  ;   {metadata({method} {0x00007fab6199d650} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00007fab7414cbcf: and    $0x1ff8,%ebx
  0x00007fab7414cbd5: cmp    $0x0,%ebx
  0x00007fab7414cbd8: je     0x00007fab7414cc7d  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@0 (line 284)

  0x00007fab7414cbde: mov    %rsi,%rdi
  0x00007fab7414cbe1: movabs $0x7fab61b997c0,%rbx  ;   {metadata(method data for {method} {0x00007fab6199d650} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00007fab7414cbeb: addq   $0x1,0x130(%rbx)
  0x00007fab7414cbf3: movabs $0x7fab61a342a0,%rdi  ;   {metadata(method data for {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7414cbfd: mov    0xfc(%rdi),%ebx
  0x00007fab7414cc03: add    $0x8,%ebx
  0x00007fab7414cc06: mov    %ebx,0xfc(%rdi)
  0x00007fab7414cc0c: movabs $0x7fab618914d8,%rdi  ;   {metadata({method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7414cc16: and    $0x7ffff8,%ebx
  0x00007fab7414cc1c: cmp    $0x0,%ebx
  0x00007fab7414cc1f: je     0x00007fab7414cc94
  0x00007fab7414cc25: mov    %edx,0xc(%rsi)     ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 285)

  0x00007fab7414cc28: mov    %rcx,%r10
  0x00007fab7414cc2b: shr    $0x3,%r10
  0x00007fab7414cc2f: mov    %r10d,0x10(%rsi)
  0x00007fab7414cc33: mov    %rsi,%rdi
  0x00007fab7414cc36: shr    $0x9,%rdi
  0x00007fab7414cc3a: movabs $0x7fab701ff000,%rbx
  0x00007fab7414cc44: movb   $0x0,(%rdi,%rbx,1)  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 286)

  0x00007fab7414cc48: mov    %r8,%r10
  0x00007fab7414cc4b: shr    $0x3,%r10
  0x00007fab7414cc4f: mov    %r10d,0x14(%rsi)
  0x00007fab7414cc53: mov    %rsi,%rdi
  0x00007fab7414cc56: shr    $0x9,%rdi
  0x00007fab7414cc5a: movb   $0x0,(%rdi,%rbx,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 287)

  0x00007fab7414cc5e: mov    %r9,%r10
  0x00007fab7414cc61: shr    $0x3,%r10
  0x00007fab7414cc65: mov    %r10d,0x18(%rsi)
  0x00007fab7414cc69: shr    $0x9,%rsi
  0x00007fab7414cc6d: movb   $0x0,(%rsi,%rbx,1)  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 288)

  0x00007fab7414cc71: add    $0x30,%rsp
  0x00007fab7414cc75: pop    %rbp
  0x00007fab7414cc76: test   %eax,0x1b695484(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7414cc7c: retq   
  0x00007fab7414cc7d: mov    %rdi,0x8(%rsp)
  0x00007fab7414cc82: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7414cc8a: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop off=271}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 284)
                                                ;   {runtime_call}
  0x00007fab7414cc8f: jmpq   0x00007fab7414cbde
  0x00007fab7414cc94: mov    %rdi,0x8(%rsp)
  0x00007fab7414cc99: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7414cca1: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop off=294}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 284)
                                                ;   {runtime_call}
  0x00007fab7414cca6: jmpq   0x00007fab7414cc25
  0x00007fab7414ccab: nop
  0x00007fab7414ccac: nop
  0x00007fab7414ccad: mov    0x2c0(%r15),%rax
  0x00007fab7414ccb4: movabs $0x0,%r10
  0x00007fab7414ccbe: mov    %r10,0x2c0(%r15)
  0x00007fab7414ccc5: movabs $0x0,%r10
  0x00007fab7414cccf: mov    %r10,0x2c8(%r15)
  0x00007fab7414ccd6: add    $0x30,%rsp
  0x00007fab7414ccda: pop    %rbp
  0x00007fab7414ccdb: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x00007fab7414cce0: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7414cce5: mov    %rsp,-0x28(%rsp)
  0x00007fab7414ccea: sub    $0x80,%rsp
  0x00007fab7414ccf1: mov    %rax,0x78(%rsp)
  0x00007fab7414ccf6: mov    %rcx,0x70(%rsp)
  0x00007fab7414ccfb: mov    %rdx,0x68(%rsp)
  0x00007fab7414cd00: mov    %rbx,0x60(%rsp)
  0x00007fab7414cd05: mov    %rbp,0x50(%rsp)
  0x00007fab7414cd0a: mov    %rsi,0x48(%rsp)
  0x00007fab7414cd0f: mov    %rdi,0x40(%rsp)
  0x00007fab7414cd14: mov    %r8,0x38(%rsp)
  0x00007fab7414cd19: mov    %r9,0x30(%rsp)
  0x00007fab7414cd1e: mov    %r10,0x28(%rsp)
  0x00007fab7414cd23: mov    %r11,0x20(%rsp)
  0x00007fab7414cd28: mov    %r12,0x18(%rsp)
  0x00007fab7414cd2d: mov    %r13,0x10(%rsp)
  0x00007fab7414cd32: mov    %r14,0x8(%rsp)
  0x00007fab7414cd37: mov    %r15,(%rsp)
  0x00007fab7414cd3b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7414cd45: movabs $0x7fab7414cce5,%rsi  ;   {internal_word}
  0x00007fab7414cd4f: mov    %rsp,%rdx
  0x00007fab7414cd52: and    $0xfffffffffffffff0,%rsp
  0x00007fab7414cd56: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7414cd5b: hlt    
[Deopt Handler Code]
  0x00007fab7414cd5c: movabs $0x7fab7414cd5c,%r10  ;   {section_word}
  0x00007fab7414cd66: push   %r10
  0x00007fab7414cd68: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7414cd6d: hlt    
  0x00007fab7414cd6e: hlt    
  0x00007fab7414cd6f: hlt    
<nmethod compile_id='120' compiler='C1' level='3' entry='0x00007fab7414cb80' size='1112' address='0x00007fab7414ca10' relocation_offset='312' insts_offset='368' stub_offset='720' scopes_data_offset='888' scopes_pcs_offset='960' dependencies_offset='1104' metadata_offset='864' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='1467' iicount='1467' stamp='0.470'/>
<writer thread='140373948942080'/>
[Loaded java.lang.Long$LongCache from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/HashMap.newNode  [0x00007fab7414d020, 0x00007fab7414d2d0]  688 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab6199ad30} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x70]  (sp of caller)
  0x00007fab7414d020: mov    0x8(%rsi),%r10d
  0x00007fab7414d024: shl    $0x3,%r10
  0x00007fab7414d028: cmp    %rax,%r10
  0x00007fab7414d02b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7414d031: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7414d03c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7414d040: mov    %eax,-0x14000(%rsp)
  0x00007fab7414d047: push   %rbp
  0x00007fab7414d048: sub    $0x60,%rsp
  0x00007fab7414d04c: mov    %rdx,%rbx
  0x00007fab7414d04f: mov    %rcx,%r11
  0x00007fab7414d052: movabs $0x7fab61b99950,%rdx  ;   {metadata(method data for {method} {0x00007fab6199ad30} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414d05c: mov    0xfc(%rdx),%edi
  0x00007fab7414d062: add    $0x8,%edi
  0x00007fab7414d065: mov    %edi,0xfc(%rdx)
  0x00007fab7414d06b: movabs $0x7fab6199ad30,%rdx  ;   {metadata({method} {0x00007fab6199ad30} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414d075: and    $0x1ff8,%edi
  0x00007fab7414d07b: cmp    $0x0,%edi
  0x00007fab7414d07e: je     0x00007fab7414d1b2
  0x00007fab7414d084: movabs $0x7c001b798,%rdx  ;   {metadata(&apos;java/util/HashMap$Node&apos;)}
  0x00007fab7414d08e: mov    0x60(%r15),%rax
  0x00007fab7414d092: lea    0x20(%rax),%rdi
  0x00007fab7414d096: cmp    0x70(%r15),%rdi
  0x00007fab7414d09a: ja     0x00007fab7414d1c9
  0x00007fab7414d0a0: mov    %rdi,0x60(%r15)
  0x00007fab7414d0a4: mov    0xa8(%rdx),%rcx
  0x00007fab7414d0ab: mov    %rcx,(%rax)
  0x00007fab7414d0ae: mov    %rdx,%rcx
  0x00007fab7414d0b1: shr    $0x3,%rcx
  0x00007fab7414d0b5: mov    %ecx,0x8(%rax)
  0x00007fab7414d0b8: xor    %rcx,%rcx
  0x00007fab7414d0bb: mov    %ecx,0xc(%rax)
  0x00007fab7414d0be: xor    %rcx,%rcx
  0x00007fab7414d0c1: mov    %rcx,0x10(%rax)
  0x00007fab7414d0c5: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0 (line 1742)

  0x00007fab7414d0c9: mov    %rax,%rsi
  0x00007fab7414d0cc: movabs $0x7fab61b99950,%rdi  ;   {metadata(method data for {method} {0x00007fab6199ad30} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414d0d6: addq   $0x1,0x130(%rdi)
  0x00007fab7414d0de: movabs $0x7fab61b997c0,%rsi  ;   {metadata(method data for {method} {0x00007fab6199d650} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00007fab7414d0e8: mov    0xfc(%rsi),%edi
  0x00007fab7414d0ee: add    $0x8,%edi
  0x00007fab7414d0f1: mov    %edi,0xfc(%rsi)
  0x00007fab7414d0f7: movabs $0x7fab6199d650,%rsi  ;   {metadata({method} {0x00007fab6199d650} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00007fab7414d101: and    $0x7ffff8,%edi
  0x00007fab7414d107: cmp    $0x0,%edi
  0x00007fab7414d10a: je     0x00007fab7414d1d6
  0x00007fab7414d110: mov    %rax,%rsi
  0x00007fab7414d113: movabs $0x7fab61b997c0,%rdi  ;   {metadata(method data for {method} {0x00007fab6199d650} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00007fab7414d11d: addq   $0x1,0x130(%rdi)
  0x00007fab7414d125: movabs $0x7fab61a342a0,%rsi  ;   {metadata(method data for {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7414d12f: mov    0xfc(%rsi),%edi
  0x00007fab7414d135: add    $0x8,%edi
  0x00007fab7414d138: mov    %edi,0xfc(%rsi)
  0x00007fab7414d13e: movabs $0x7fab618914d8,%rsi  ;   {metadata({method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7414d148: and    $0x7ffff8,%edi
  0x00007fab7414d14e: cmp    $0x0,%edi
  0x00007fab7414d151: je     0x00007fab7414d1ed
  0x00007fab7414d157: mov    %ebx,0xc(%rax)     ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 285)
                                                ; - java.util.HashMap::newNode@9 (line 1742)

  0x00007fab7414d15a: mov    %r11,%r10
  0x00007fab7414d15d: shr    $0x3,%r10
  0x00007fab7414d161: mov    %r10d,0x10(%rax)
  0x00007fab7414d165: mov    %rax,%rsi
  0x00007fab7414d168: shr    $0x9,%rsi
  0x00007fab7414d16c: movabs $0x7fab701ff000,%rdi
  0x00007fab7414d176: movb   $0x0,(%rsi,%rdi,1)  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 286)
                                                ; - java.util.HashMap::newNode@9 (line 1742)

  0x00007fab7414d17a: mov    %r8,%r10
  0x00007fab7414d17d: shr    $0x3,%r10
  0x00007fab7414d181: mov    %r10d,0x14(%rax)
  0x00007fab7414d185: mov    %rax,%rsi
  0x00007fab7414d188: shr    $0x9,%rsi
  0x00007fab7414d18c: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1742)

  0x00007fab7414d190: mov    %r9,%r10
  0x00007fab7414d193: shr    $0x3,%r10
  0x00007fab7414d197: mov    %r10d,0x18(%rax)
  0x00007fab7414d19b: mov    %rax,%rsi
  0x00007fab7414d19e: shr    $0x9,%rsi
  0x00007fab7414d1a2: movb   $0x0,(%rsi,%rdi,1)  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1742)

  0x00007fab7414d1a6: add    $0x60,%rsp
  0x00007fab7414d1aa: pop    %rbp
  0x00007fab7414d1ab: test   %eax,0x1b694f4f(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7414d1b1: retq   
  0x00007fab7414d1b2: mov    %rdx,0x8(%rsp)
  0x00007fab7414d1b7: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7414d1bf: callq  0x00007fab741005e0  ; OopMap{rsi=Oop r11=Oop r8=Oop r9=Oop off=420}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::newNode@-1 (line 1742)
                                                ;   {runtime_call}
  0x00007fab7414d1c4: jmpq   0x00007fab7414d084
  0x00007fab7414d1c9: mov    %rdx,%rdx
  0x00007fab7414d1cc: callq  0x00007fab740fc760  ; OopMap{r11=Oop r8=Oop r9=Oop off=433}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0 (line 1742)
                                                ;   {runtime_call}
  0x00007fab7414d1d1: jmpq   0x00007fab7414d0c9
  0x00007fab7414d1d6: mov    %rsi,0x8(%rsp)
  0x00007fab7414d1db: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7414d1e3: callq  0x00007fab741005e0  ; OopMap{r11=Oop r8=Oop r9=Oop rax=Oop off=456}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 284)
                                                ; - java.util.HashMap::newNode@9 (line 1742)
                                                ;   {runtime_call}
  0x00007fab7414d1e8: jmpq   0x00007fab7414d110
  0x00007fab7414d1ed: mov    %rsi,0x8(%rsp)
  0x00007fab7414d1f2: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7414d1fa: callq  0x00007fab741005e0  ; OopMap{r11=Oop r8=Oop r9=Oop rax=Oop off=479}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 284)
                                                ; - java.util.HashMap::newNode@9 (line 1742)
                                                ;   {runtime_call}
  0x00007fab7414d1ff: jmpq   0x00007fab7414d157
  0x00007fab7414d204: nop
  0x00007fab7414d205: nop
  0x00007fab7414d206: mov    0x2c0(%r15),%rax
  0x00007fab7414d20d: movabs $0x0,%r10
  0x00007fab7414d217: mov    %r10,0x2c0(%r15)
  0x00007fab7414d21e: movabs $0x0,%r10
  0x00007fab7414d228: mov    %r10,0x2c8(%r15)
  0x00007fab7414d22f: add    $0x60,%rsp
  0x00007fab7414d233: pop    %rbp
  0x00007fab7414d234: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7414d239: hlt    
  0x00007fab7414d23a: hlt    
  0x00007fab7414d23b: hlt    
  0x00007fab7414d23c: hlt    
  0x00007fab7414d23d: hlt    
  0x00007fab7414d23e: hlt    
  0x00007fab7414d23f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab7414d240: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7414d245: mov    %rsp,-0x28(%rsp)
  0x00007fab7414d24a: sub    $0x80,%rsp
  0x00007fab7414d251: mov    %rax,0x78(%rsp)
  0x00007fab7414d256: mov    %rcx,0x70(%rsp)
  0x00007fab7414d25b: mov    %rdx,0x68(%rsp)
  0x00007fab7414d260: mov    %rbx,0x60(%rsp)
  0x00007fab7414d265: mov    %rbp,0x50(%rsp)
  0x00007fab7414d26a: mov    %rsi,0x48(%rsp)
  0x00007fab7414d26f: mov    %rdi,0x40(%rsp)
  0x00007fab7414d274: mov    %r8,0x38(%rsp)
  0x00007fab7414d279: mov    %r9,0x30(%rsp)
  0x00007fab7414d27e: mov    %r10,0x28(%rsp)
  0x00007fab7414d283: mov    %r11,0x20(%rsp)
  0x00007fab7414d288: mov    %r12,0x18(%rsp)
  0x00007fab7414d28d: mov    %r13,0x10(%rsp)
  0x00007fab7414d292: mov    %r14,0x8(%rsp)
  0x00007fab7414d297: mov    %r15,(%rsp)
  0x00007fab7414d29b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7414d2a5: movabs $0x7fab7414d245,%rsi  ;   {internal_word}
  0x00007fab7414d2af: mov    %rsp,%rdx
  0x00007fab7414d2b2: and    $0xfffffffffffffff0,%rsp
  0x00007fab7414d2b6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7414d2bb: hlt    
[Deopt Handler Code]
  0x00007fab7414d2bc: movabs $0x7fab7414d2bc,%r10  ;   {section_word}
  0x00007fab7414d2c6: push   %r10
  0x00007fab7414d2c8: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7414d2cd: hlt    
  0x00007fab7414d2ce: hlt    
  0x00007fab7414d2cf: hlt    
<nmethod compile_id='121' compiler='C1' level='3' entry='0x00007fab7414d020' size='1432' address='0x00007fab7414ce90' relocation_offset='312' insts_offset='400' stub_offset='944' scopes_data_offset='1112' scopes_pcs_offset='1248' dependencies_offset='1424' metadata_offset='1088' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='1437' iicount='1437' stamp='0.471'/>
----------------------------------------------------------------------
java/util/HashMap.afterNodeInsertion  [0x00007fab7414d5c0, 0x00007fab7414d710]  336 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab6199b1d0} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = boolean
  #           [sp+0x40]  (sp of caller)
  0x00007fab7414d5c0: mov    0x8(%rsi),%r10d
  0x00007fab7414d5c4: shl    $0x3,%r10
  0x00007fab7414d5c8: cmp    %rax,%r10
  0x00007fab7414d5cb: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7414d5d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7414d5dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7414d5e0: mov    %eax,-0x14000(%rsp)
  0x00007fab7414d5e7: push   %rbp
  0x00007fab7414d5e8: sub    $0x30,%rsp
  0x00007fab7414d5ec: movabs $0x7fab61b99ad0,%rdi  ;   {metadata(method data for {method} {0x00007fab6199b1d0} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414d5f6: mov    0xfc(%rdi),%ebx
  0x00007fab7414d5fc: add    $0x8,%ebx
  0x00007fab7414d5ff: mov    %ebx,0xfc(%rdi)
  0x00007fab7414d605: movabs $0x7fab6199b1d0,%rdi  ;   {metadata({method} {0x00007fab6199b1d0} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414d60f: and    $0x1ff8,%ebx
  0x00007fab7414d615: cmp    $0x0,%ebx
  0x00007fab7414d618: je     0x00007fab7414d62a  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::afterNodeInsertion@0 (line 1775)

  0x00007fab7414d61e: add    $0x30,%rsp
  0x00007fab7414d622: pop    %rbp
  0x00007fab7414d623: test   %eax,0x1b694ad7(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7414d629: retq   
  0x00007fab7414d62a: mov    %rdi,0x8(%rsp)
  0x00007fab7414d62f: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7414d637: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=124}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::afterNodeInsertion@-1 (line 1775)
                                                ;   {runtime_call}
  0x00007fab7414d63c: jmp    0x00007fab7414d61e
  0x00007fab7414d63e: nop
  0x00007fab7414d63f: nop
  0x00007fab7414d640: mov    0x2c0(%r15),%rax
  0x00007fab7414d647: movabs $0x0,%r10
  0x00007fab7414d651: mov    %r10,0x2c0(%r15)
  0x00007fab7414d658: movabs $0x0,%r10
  0x00007fab7414d662: mov    %r10,0x2c8(%r15)
  0x00007fab7414d669: add    $0x30,%rsp
  0x00007fab7414d66d: pop    %rbp
  0x00007fab7414d66e: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7414d673: hlt    
  0x00007fab7414d674: hlt    
  0x00007fab7414d675: hlt    
  0x00007fab7414d676: hlt    
  0x00007fab7414d677: hlt    
  0x00007fab7414d678: hlt    
  0x00007fab7414d679: hlt    
  0x00007fab7414d67a: hlt    
  0x00007fab7414d67b: hlt    
  0x00007fab7414d67c: hlt    
  0x00007fab7414d67d: hlt    
  0x00007fab7414d67e: hlt    
  0x00007fab7414d67f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab7414d680: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7414d685: mov    %rsp,-0x28(%rsp)
  0x00007fab7414d68a: sub    $0x80,%rsp
  0x00007fab7414d691: mov    %rax,0x78(%rsp)
  0x00007fab7414d696: mov    %rcx,0x70(%rsp)
  0x00007fab7414d69b: mov    %rdx,0x68(%rsp)
  0x00007fab7414d6a0: mov    %rbx,0x60(%rsp)
  0x00007fab7414d6a5: mov    %rbp,0x50(%rsp)
  0x00007fab7414d6aa: mov    %rsi,0x48(%rsp)
  0x00007fab7414d6af: mov    %rdi,0x40(%rsp)
  0x00007fab7414d6b4: mov    %r8,0x38(%rsp)
  0x00007fab7414d6b9: mov    %r9,0x30(%rsp)
  0x00007fab7414d6be: mov    %r10,0x28(%rsp)
  0x00007fab7414d6c3: mov    %r11,0x20(%rsp)
  0x00007fab7414d6c8: mov    %r12,0x18(%rsp)
  0x00007fab7414d6cd: mov    %r13,0x10(%rsp)
  0x00007fab7414d6d2: mov    %r14,0x8(%rsp)
  0x00007fab7414d6d7: mov    %r15,(%rsp)
  0x00007fab7414d6db: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7414d6e5: movabs $0x7fab7414d685,%rsi  ;   {internal_word}
  0x00007fab7414d6ef: mov    %rsp,%rdx
  0x00007fab7414d6f2: and    $0xfffffffffffffff0,%rsp
  0x00007fab7414d6f6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7414d6fb: hlt    
[Deopt Handler Code]
  0x00007fab7414d6fc: movabs $0x7fab7414d6fc,%r10  ;   {section_word}
  0x00007fab7414d706: push   %r10
  0x00007fab7414d708: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7414d70d: hlt    
  0x00007fab7414d70e: hlt    
  0x00007fab7414d70f: hlt    
<nmethod compile_id='122' compiler='C1' level='3' entry='0x00007fab7414d5c0' size='808' address='0x00007fab7414d450' relocation_offset='312' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='736' dependencies_offset='800' metadata_offset='704' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='1437' iicount='1437' stamp='0.472'/>
<writer thread='140373948942080'/>
<task_queued compile_id='123' method='java/lang/Number &lt;init&gt; ()V' bytes='5' count='384' iicount='384' level='3' stamp='0.472' comment='tiered' hot_count='384'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/Character.toUpperCase  [0x00007fab7414d920, 0x00007fab7414dcb8]  920 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab61941c00} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fab7414d920: mov    %eax,-0x14000(%rsp)
  0x00007fab7414d927: push   %rbp
  0x00007fab7414d928: sub    $0x30,%rsp
  0x00007fab7414d92c: movabs $0x7fab61b95e40,%rdi  ;   {metadata(method data for {method} {0x00007fab61941c00} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab7414d936: mov    0xfc(%rdi),%ebx
  0x00007fab7414d93c: add    $0x8,%ebx
  0x00007fab7414d93f: mov    %ebx,0xfc(%rdi)
  0x00007fab7414d945: movabs $0x7fab61941c00,%rdi  ;   {metadata({method} {0x00007fab61941c00} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab7414d94f: and    $0x1ff8,%ebx
  0x00007fab7414d955: cmp    $0x0,%ebx
  0x00007fab7414d958: je     0x00007fab7414db98  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@0 (line 6398)

  0x00007fab7414d95e: movabs $0x7fab61b95e40,%rdi  ;   {metadata(method data for {method} {0x00007fab61941c00} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab7414d968: addq   $0x1,0x130(%rdi)
  0x00007fab7414d970: mov    %rsi,%rdi
  0x00007fab7414d973: mov    %rdi,%rsi          ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)

  0x00007fab7414d976: mov    %edi,0x20(%rsp)
  0x00007fab7414d97a: nop
  0x00007fab7414d97b: nop
  0x00007fab7414d97c: nop
  0x00007fab7414d97d: nop
  0x00007fab7414d97e: nop
  0x00007fab7414d97f: callq  0x00007fab74048160  ; OopMap{off=100}
                                                ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)
                                                ;   {static_call}
  0x00007fab7414d984: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00007fab7414dbaf
  0x00007fab7414d987: mov    %rax,%rdx
  0x00007fab7414d98a: movabs $0x7fab61b95e40,%rsi  ;   {metadata(method data for {method} {0x00007fab61941c00} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007fab7414d994: mov    0x8(%rdx),%edx
  0x00007fab7414d997: shl    $0x3,%rdx
  0x00007fab7414d99b: cmp    0x150(%rsi),%rdx
  0x00007fab7414d9a2: jne    0x00007fab7414d9b1
  0x00007fab7414d9a4: addq   $0x1,0x158(%rsi)
  0x00007fab7414d9ac: jmpq   0x00007fab7414db73
  0x00007fab7414d9b1: cmp    0x160(%rsi),%rdx
  0x00007fab7414d9b8: jne    0x00007fab7414d9c7
  0x00007fab7414d9ba: addq   $0x1,0x168(%rsi)
  0x00007fab7414d9c2: jmpq   0x00007fab7414db73
  0x00007fab7414d9c7: cmp    0x170(%rsi),%rdx
  0x00007fab7414d9ce: jne    0x00007fab7414d9dd
  0x00007fab7414d9d0: addq   $0x1,0x178(%rsi)
  0x00007fab7414d9d8: jmpq   0x00007fab7414db73
  0x00007fab7414d9dd: cmp    0x180(%rsi),%rdx
  0x00007fab7414d9e4: jne    0x00007fab7414d9f3
  0x00007fab7414d9e6: addq   $0x1,0x188(%rsi)
  0x00007fab7414d9ee: jmpq   0x00007fab7414db73
  0x00007fab7414d9f3: cmp    0x190(%rsi),%rdx
  0x00007fab7414d9fa: jne    0x00007fab7414da09
  0x00007fab7414d9fc: addq   $0x1,0x198(%rsi)
  0x00007fab7414da04: jmpq   0x00007fab7414db73
  0x00007fab7414da09: cmp    0x1a0(%rsi),%rdx
  0x00007fab7414da10: jne    0x00007fab7414da1f
  0x00007fab7414da12: addq   $0x1,0x1a8(%rsi)
  0x00007fab7414da1a: jmpq   0x00007fab7414db73
  0x00007fab7414da1f: cmp    0x1b0(%rsi),%rdx
  0x00007fab7414da26: jne    0x00007fab7414da35
  0x00007fab7414da28: addq   $0x1,0x1b8(%rsi)
  0x00007fab7414da30: jmpq   0x00007fab7414db73
  0x00007fab7414da35: cmp    0x1c0(%rsi),%rdx
  0x00007fab7414da3c: jne    0x00007fab7414da4b
  0x00007fab7414da3e: addq   $0x1,0x1c8(%rsi)
  0x00007fab7414da46: jmpq   0x00007fab7414db73
  0x00007fab7414da4b: cmpq   $0x0,0x150(%rsi)
  0x00007fab7414da56: jne    0x00007fab7414da6f
  0x00007fab7414da58: mov    %rdx,0x150(%rsi)
  0x00007fab7414da5f: movq   $0x1,0x158(%rsi)
  0x00007fab7414da6a: jmpq   0x00007fab7414db73
  0x00007fab7414da6f: cmpq   $0x0,0x160(%rsi)
  0x00007fab7414da7a: jne    0x00007fab7414da93
  0x00007fab7414da7c: mov    %rdx,0x160(%rsi)
  0x00007fab7414da83: movq   $0x1,0x168(%rsi)
  0x00007fab7414da8e: jmpq   0x00007fab7414db73
  0x00007fab7414da93: cmpq   $0x0,0x170(%rsi)
  0x00007fab7414da9e: jne    0x00007fab7414dab7
  0x00007fab7414daa0: mov    %rdx,0x170(%rsi)
  0x00007fab7414daa7: movq   $0x1,0x178(%rsi)
  0x00007fab7414dab2: jmpq   0x00007fab7414db73
  0x00007fab7414dab7: cmpq   $0x0,0x180(%rsi)
  0x00007fab7414dac2: jne    0x00007fab7414dadb
  0x00007fab7414dac4: mov    %rdx,0x180(%rsi)
  0x00007fab7414dacb: movq   $0x1,0x188(%rsi)
  0x00007fab7414dad6: jmpq   0x00007fab7414db73
  0x00007fab7414dadb: cmpq   $0x0,0x190(%rsi)
  0x00007fab7414dae6: jne    0x00007fab7414daff
  0x00007fab7414dae8: mov    %rdx,0x190(%rsi)
  0x00007fab7414daef: movq   $0x1,0x198(%rsi)
  0x00007fab7414dafa: jmpq   0x00007fab7414db73
  0x00007fab7414daff: cmpq   $0x0,0x1a0(%rsi)
  0x00007fab7414db0a: jne    0x00007fab7414db23
  0x00007fab7414db0c: mov    %rdx,0x1a0(%rsi)
  0x00007fab7414db13: movq   $0x1,0x1a8(%rsi)
  0x00007fab7414db1e: jmpq   0x00007fab7414db73
  0x00007fab7414db23: cmpq   $0x0,0x1b0(%rsi)
  0x00007fab7414db2e: jne    0x00007fab7414db47
  0x00007fab7414db30: mov    %rdx,0x1b0(%rsi)
  0x00007fab7414db37: movq   $0x1,0x1b8(%rsi)
  0x00007fab7414db42: jmpq   0x00007fab7414db73
  0x00007fab7414db47: cmpq   $0x0,0x1c0(%rsi)
  0x00007fab7414db52: jne    0x00007fab7414db6b
  0x00007fab7414db54: mov    %rdx,0x1c0(%rsi)
  0x00007fab7414db5b: movq   $0x1,0x1c8(%rsi)
  0x00007fab7414db66: jmpq   0x00007fab7414db73
  0x00007fab7414db6b: addq   $0x1,0x140(%rsi)
  0x00007fab7414db73: mov    0x20(%rsp),%edx
  0x00007fab7414db77: mov    %rax,%rsi          ;*invokevirtual toUpperCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)

  0x00007fab7414db7a: nop
  0x00007fab7414db7b: nop
  0x00007fab7414db7c: nop
  0x00007fab7414db7d: movabs $0xffffffffffffffff,%rax
  0x00007fab7414db87: callq  0x00007fab74047f60  ; OopMap{off=620}
                                                ;*invokevirtual toUpperCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ;   {virtual_call}
  0x00007fab7414db8c: add    $0x30,%rsp
  0x00007fab7414db90: pop    %rbp
  0x00007fab7414db91: test   %eax,0x1b694569(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7414db97: retq   
  0x00007fab7414db98: mov    %rdi,0x8(%rsp)
  0x00007fab7414db9d: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7414dba5: callq  0x00007fab741005e0  ; OopMap{off=650}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1 (line 6398)
                                                ;   {runtime_call}
  0x00007fab7414dbaa: jmpq   0x00007fab7414d95e
  0x00007fab7414dbaf: callq  0x00007fab740fc000  ; OopMap{rax=Oop off=660}
                                                ;*invokevirtual toUpperCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ;   {runtime_call}
  0x00007fab7414dbb4: nop
  0x00007fab7414dbb5: nop
  0x00007fab7414dbb6: mov    0x2c0(%r15),%rax
  0x00007fab7414dbbd: movabs $0x0,%r10
  0x00007fab7414dbc7: mov    %r10,0x2c0(%r15)
  0x00007fab7414dbce: movabs $0x0,%r10
  0x00007fab7414dbd8: mov    %r10,0x2c8(%r15)
  0x00007fab7414dbdf: add    $0x30,%rsp
  0x00007fab7414dbe3: pop    %rbp
  0x00007fab7414dbe4: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7414dbe9: hlt    
  0x00007fab7414dbea: hlt    
  0x00007fab7414dbeb: hlt    
  0x00007fab7414dbec: hlt    
  0x00007fab7414dbed: hlt    
  0x00007fab7414dbee: hlt    
  0x00007fab7414dbef: hlt    
  0x00007fab7414dbf0: hlt    
  0x00007fab7414dbf1: hlt    
  0x00007fab7414dbf2: hlt    
  0x00007fab7414dbf3: hlt    
  0x00007fab7414dbf4: hlt    
  0x00007fab7414dbf5: hlt    
  0x00007fab7414dbf6: hlt    
  0x00007fab7414dbf7: hlt    
  0x00007fab7414dbf8: hlt    
  0x00007fab7414dbf9: hlt    
  0x00007fab7414dbfa: hlt    
  0x00007fab7414dbfb: hlt    
  0x00007fab7414dbfc: hlt    
  0x00007fab7414dbfd: hlt    
  0x00007fab7414dbfe: hlt    
  0x00007fab7414dbff: hlt    
[Stub Code]
  0x00007fab7414dc00: nop                       ;   {no_reloc}
  0x00007fab7414dc01: nop
  0x00007fab7414dc02: nop
  0x00007fab7414dc03: nop
  0x00007fab7414dc04: nop
  0x00007fab7414dc05: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414dc0f: jmpq   0x00007fab7414dc0f  ;   {runtime_call}
  0x00007fab7414dc14: nop
  0x00007fab7414dc15: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414dc1f: jmpq   0x00007fab7414dc1f  ;   {runtime_call}
[Exception Handler]
  0x00007fab7414dc24: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab7414dc29: mov    %rsp,-0x28(%rsp)
  0x00007fab7414dc2e: sub    $0x80,%rsp
  0x00007fab7414dc35: mov    %rax,0x78(%rsp)
  0x00007fab7414dc3a: mov    %rcx,0x70(%rsp)
  0x00007fab7414dc3f: mov    %rdx,0x68(%rsp)
  0x00007fab7414dc44: mov    %rbx,0x60(%rsp)
  0x00007fab7414dc49: mov    %rbp,0x50(%rsp)
  0x00007fab7414dc4e: mov    %rsi,0x48(%rsp)
  0x00007fab7414dc53: mov    %rdi,0x40(%rsp)
  0x00007fab7414dc58: mov    %r8,0x38(%rsp)
  0x00007fab7414dc5d: mov    %r9,0x30(%rsp)
  0x00007fab7414dc62: mov    %r10,0x28(%rsp)
  0x00007fab7414dc67: mov    %r11,0x20(%rsp)
  0x00007fab7414dc6c: mov    %r12,0x18(%rsp)
  0x00007fab7414dc71: mov    %r13,0x10(%rsp)
  0x00007fab7414dc76: mov    %r14,0x8(%rsp)
  0x00007fab7414dc7b: mov    %r15,(%rsp)
  0x00007fab7414dc7f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7414dc89: movabs $0x7fab7414dc29,%rsi  ;   {internal_word}
  0x00007fab7414dc93: mov    %rsp,%rdx
  0x00007fab7414dc96: and    $0xfffffffffffffff0,%rsp
  0x00007fab7414dc9a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7414dc9f: hlt    
[Deopt Handler Code]
  0x00007fab7414dca0: movabs $0x7fab7414dca0,%r10  ;   {section_word}
  0x00007fab7414dcaa: push   %r10
  0x00007fab7414dcac: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7414dcb1: hlt    
  0x00007fab7414dcb2: hlt    
  0x00007fab7414dcb3: hlt    
  0x00007fab7414dcb4: hlt    
  0x00007fab7414dcb5: hlt    
  0x00007fab7414dcb6: hlt    
  0x00007fab7414dcb7: hlt    
<nmethod compile_id='104' compiler='C1' level='3' entry='0x00007fab7414d920' size='1544' address='0x00007fab7414d790' relocation_offset='312' insts_offset='400' stub_offset='1136' scopes_data_offset='1328' scopes_pcs_offset='1376' dependencies_offset='1520' nul_chk_table_offset='1528' metadata_offset='1320' method='java/lang/Character toUpperCase (I)I' bytes='9' count='418' iicount='418' stamp='0.473'/>
<writer thread='140373948942080'/>
<task_queued compile_id='124' method='java/util/HashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='23' count='384' iicount='384' level='3' stamp='0.473' comment='tiered' hot_count='384'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/Number.&lt;init&gt;  [0x00007fab7414df40, 0x00007fab7414e0f0]  432 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61945248} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Number&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab7414df40: mov    0x8(%rsi),%r10d
  0x00007fab7414df44: shl    $0x3,%r10
  0x00007fab7414df48: cmp    %rax,%r10
  0x00007fab7414df4b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7414df51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7414df5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7414df60: mov    %eax,-0x14000(%rsp)
  0x00007fab7414df67: push   %rbp
  0x00007fab7414df68: sub    $0x30,%rsp
  0x00007fab7414df6c: movabs $0x7fab61b9af28,%rdi  ;   {metadata(method data for {method} {0x00007fab61945248} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Number&apos;)}
  0x00007fab7414df76: mov    0xfc(%rdi),%ebx
  0x00007fab7414df7c: add    $0x8,%ebx
  0x00007fab7414df7f: mov    %ebx,0xfc(%rdi)
  0x00007fab7414df85: movabs $0x7fab61945248,%rdi  ;   {metadata({method} {0x00007fab61945248} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Number&apos;)}
  0x00007fab7414df8f: and    $0x1ff8,%ebx
  0x00007fab7414df95: cmp    $0x0,%ebx
  0x00007fab7414df98: je     0x00007fab7414dff1  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Number::&lt;init&gt;@0 (line 55)

  0x00007fab7414df9e: mov    %rsi,%rdi
  0x00007fab7414dfa1: movabs $0x7fab61b9af28,%rbx  ;   {metadata(method data for {method} {0x00007fab61945248} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Number&apos;)}
  0x00007fab7414dfab: addq   $0x1,0x130(%rbx)
  0x00007fab7414dfb3: movabs $0x7fab61a342a0,%rdi  ;   {metadata(method data for {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7414dfbd: mov    0xfc(%rdi),%ebx
  0x00007fab7414dfc3: add    $0x8,%ebx
  0x00007fab7414dfc6: mov    %ebx,0xfc(%rdi)
  0x00007fab7414dfcc: movabs $0x7fab618914d8,%rdi  ;   {metadata({method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab7414dfd6: and    $0x7ffff8,%ebx
  0x00007fab7414dfdc: cmp    $0x0,%ebx
  0x00007fab7414dfdf: je     0x00007fab7414e005
  0x00007fab7414dfe5: add    $0x30,%rsp
  0x00007fab7414dfe9: pop    %rbp
  0x00007fab7414dfea: test   %eax,0x1b694110(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7414dff0: retq   
  0x00007fab7414dff1: mov    %rdi,0x8(%rsp)
  0x00007fab7414dff6: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7414dffe: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=195}
                                                ;*synchronization entry
                                                ; - java.lang.Number::&lt;init&gt;@-1 (line 55)
                                                ;   {runtime_call}
  0x00007fab7414e003: jmp    0x00007fab7414df9e
  0x00007fab7414e005: mov    %rdi,0x8(%rsp)
  0x00007fab7414e00a: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7414e012: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=215}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.Number::&lt;init&gt;@1 (line 55)
                                                ;   {runtime_call}
  0x00007fab7414e017: jmp    0x00007fab7414dfe5
  0x00007fab7414e019: nop
  0x00007fab7414e01a: nop
  0x00007fab7414e01b: mov    0x2c0(%r15),%rax
  0x00007fab7414e022: movabs $0x0,%r10
  0x00007fab7414e02c: mov    %r10,0x2c0(%r15)
  0x00007fab7414e033: movabs $0x0,%r10
  0x00007fab7414e03d: mov    %r10,0x2c8(%r15)
  0x00007fab7414e044: add    $0x30,%rsp
  0x00007fab7414e048: pop    %rbp
  0x00007fab7414e049: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7414e04e: hlt    
  0x00007fab7414e04f: hlt    
  0x00007fab7414e050: hlt    
  0x00007fab7414e051: hlt    
  0x00007fab7414e052: hlt    
  0x00007fab7414e053: hlt    
  0x00007fab7414e054: hlt    
  0x00007fab7414e055: hlt    
  0x00007fab7414e056: hlt    
  0x00007fab7414e057: hlt    
  0x00007fab7414e058: hlt    
  0x00007fab7414e059: hlt    
  0x00007fab7414e05a: hlt    
  0x00007fab7414e05b: hlt    
  0x00007fab7414e05c: hlt    
  0x00007fab7414e05d: hlt    
  0x00007fab7414e05e: hlt    
  0x00007fab7414e05f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab7414e060: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab7414e065: mov    %rsp,-0x28(%rsp)
  0x00007fab7414e06a: sub    $0x80,%rsp
  0x00007fab7414e071: mov    %rax,0x78(%rsp)
  0x00007fab7414e076: mov    %rcx,0x70(%rsp)
  0x00007fab7414e07b: mov    %rdx,0x68(%rsp)
  0x00007fab7414e080: mov    %rbx,0x60(%rsp)
  0x00007fab7414e085: mov    %rbp,0x50(%rsp)
  0x00007fab7414e08a: mov    %rsi,0x48(%rsp)
  0x00007fab7414e08f: mov    %rdi,0x40(%rsp)
  0x00007fab7414e094: mov    %r8,0x38(%rsp)
  0x00007fab7414e099: mov    %r9,0x30(%rsp)
  0x00007fab7414e09e: mov    %r10,0x28(%rsp)
  0x00007fab7414e0a3: mov    %r11,0x20(%rsp)
  0x00007fab7414e0a8: mov    %r12,0x18(%rsp)
  0x00007fab7414e0ad: mov    %r13,0x10(%rsp)
  0x00007fab7414e0b2: mov    %r14,0x8(%rsp)
  0x00007fab7414e0b7: mov    %r15,(%rsp)
  0x00007fab7414e0bb: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7414e0c5: movabs $0x7fab7414e065,%rsi  ;   {internal_word}
  0x00007fab7414e0cf: mov    %rsp,%rdx
  0x00007fab7414e0d2: and    $0xfffffffffffffff0,%rsp
  0x00007fab7414e0d6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7414e0db: hlt    
[Deopt Handler Code]
  0x00007fab7414e0dc: movabs $0x7fab7414e0dc,%r10  ;   {section_word}
  0x00007fab7414e0e6: push   %r10
  0x00007fab7414e0e8: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7414e0ed: hlt    
  0x00007fab7414e0ee: hlt    
  0x00007fab7414e0ef: hlt    
<nmethod compile_id='123' compiler='C1' level='3' entry='0x00007fab7414df40' size='944' address='0x00007fab7414ddd0' relocation_offset='312' insts_offset='368' stub_offset='656' scopes_data_offset='824' scopes_pcs_offset='856' dependencies_offset='936' metadata_offset='800' method='java/lang/Number &lt;init&gt; ()V' bytes='5' count='562' iicount='562' stamp='0.474'/>
<writer thread='140373948942080'/>
<task_queued compile_id='125' method='java/lang/Integer intValue ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.474' comment='tiered' hot_count='128'/>
<task_queued compile_id='126' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='504' backedge_count='3' iicount='504' level='3' stamp='0.474' comment='tiered' hot_count='504'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/HashMap.get  [0x00007fab7414e340, 0x00007fab7414e838]  1272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61998338} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x70]  (sp of caller)
  0x00007fab7414e340: mov    0x8(%rsi),%r10d
  0x00007fab7414e344: shl    $0x3,%r10
  0x00007fab7414e348: cmp    %rax,%r10
  0x00007fab7414e34b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7414e351: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7414e35c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7414e360: mov    %eax,-0x14000(%rsp)
  0x00007fab7414e367: push   %rbp
  0x00007fab7414e368: sub    $0x60,%rsp
  0x00007fab7414e36c: movabs $0x7fab61b9b088,%rdi  ;   {metadata(method data for {method} {0x00007fab61998338} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414e376: mov    0xfc(%rdi),%ebx
  0x00007fab7414e37c: add    $0x8,%ebx
  0x00007fab7414e37f: mov    %ebx,0xfc(%rdi)
  0x00007fab7414e385: movabs $0x7fab61998338,%rdi  ;   {metadata({method} {0x00007fab61998338} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414e38f: and    $0x1ff8,%ebx
  0x00007fab7414e395: cmp    $0x0,%ebx
  0x00007fab7414e398: je     0x00007fab7414e6f7  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@0 (line 556)

  0x00007fab7414e39e: movabs $0x7fab61b9b088,%rdi  ;   {metadata(method data for {method} {0x00007fab61998338} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414e3a8: addq   $0x1,0x130(%rdi)
  0x00007fab7414e3b0: movabs $0x7fab61b81320,%rdi  ;   {metadata(method data for {method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414e3ba: mov    0xfc(%rdi),%ebx
  0x00007fab7414e3c0: add    $0x8,%ebx
  0x00007fab7414e3c3: mov    %ebx,0xfc(%rdi)
  0x00007fab7414e3c9: movabs $0x7fab61997920,%rdi  ;   {metadata({method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414e3d3: and    $0x7ffff8,%ebx
  0x00007fab7414e3d9: cmp    $0x0,%ebx
  0x00007fab7414e3dc: je     0x00007fab7414e70e
  0x00007fab7414e3e2: cmp    $0x0,%rdx
  0x00007fab7414e3e6: movabs $0x7fab61b81320,%rdi  ;   {metadata(method data for {method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414e3f0: movabs $0x130,%rbx
  0x00007fab7414e3fa: jne    0x00007fab7414e40a
  0x00007fab7414e400: movabs $0x140,%rbx
  0x00007fab7414e40a: mov    (%rdi,%rbx,1),%rax
  0x00007fab7414e40e: lea    0x1(%rax),%rax
  0x00007fab7414e412: mov    %rax,(%rdi,%rbx,1)
  0x00007fab7414e416: jne    0x00007fab7414e440  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 338)
                                                ; - java.util.HashMap::get@2 (line 556)

  0x00007fab7414e41c: movabs $0x7fab61b81320,%rdi  ;   {metadata(method data for {method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414e426: incl   0x150(%rdi)
  0x00007fab7414e42c: mov    $0x0,%edi
  0x00007fab7414e431: mov    %rdx,0x48(%rsp)
  0x00007fab7414e436: mov    %rsi,0x40(%rsp)
  0x00007fab7414e43b: jmpq   0x00007fab7414e658  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 338)
                                                ; - java.util.HashMap::get@2 (line 556)

  0x00007fab7414e440: mov    %rsi,0x40(%rsp)
  0x00007fab7414e445: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00007fab7414e725
  0x00007fab7414e448: mov    %rdx,%rdi
  0x00007fab7414e44b: movabs $0x7fab61b81320,%rbx  ;   {metadata(method data for {method} {0x00007fab61997920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414e455: mov    0x8(%rdi),%edi
  0x00007fab7414e458: shl    $0x3,%rdi
  0x00007fab7414e45c: cmp    0x178(%rbx),%rdi
  0x00007fab7414e463: jne    0x00007fab7414e472
  0x00007fab7414e465: addq   $0x1,0x180(%rbx)
  0x00007fab7414e46d: jmpq   0x00007fab7414e634
  0x00007fab7414e472: cmp    0x188(%rbx),%rdi
  0x00007fab7414e479: jne    0x00007fab7414e488
  0x00007fab7414e47b: addq   $0x1,0x190(%rbx)
  0x00007fab7414e483: jmpq   0x00007fab7414e634
  0x00007fab7414e488: cmp    0x198(%rbx),%rdi
  0x00007fab7414e48f: jne    0x00007fab7414e49e
  0x00007fab7414e491: addq   $0x1,0x1a0(%rbx)
  0x00007fab7414e499: jmpq   0x00007fab7414e634
  0x00007fab7414e49e: cmp    0x1a8(%rbx),%rdi
  0x00007fab7414e4a5: jne    0x00007fab7414e4b4
  0x00007fab7414e4a7: addq   $0x1,0x1b0(%rbx)
  0x00007fab7414e4af: jmpq   0x00007fab7414e634
  0x00007fab7414e4b4: cmp    0x1b8(%rbx),%rdi
  0x00007fab7414e4bb: jne    0x00007fab7414e4ca
  0x00007fab7414e4bd: addq   $0x1,0x1c0(%rbx)
  0x00007fab7414e4c5: jmpq   0x00007fab7414e634
  0x00007fab7414e4ca: cmp    0x1c8(%rbx),%rdi
  0x00007fab7414e4d1: jne    0x00007fab7414e4e0
  0x00007fab7414e4d3: addq   $0x1,0x1d0(%rbx)
  0x00007fab7414e4db: jmpq   0x00007fab7414e634
  0x00007fab7414e4e0: cmp    0x1d8(%rbx),%rdi
  0x00007fab7414e4e7: jne    0x00007fab7414e4f6
  0x00007fab7414e4e9: addq   $0x1,0x1e0(%rbx)
  0x00007fab7414e4f1: jmpq   0x00007fab7414e634
  0x00007fab7414e4f6: cmp    0x1e8(%rbx),%rdi
  0x00007fab7414e4fd: jne    0x00007fab7414e50c
  0x00007fab7414e4ff: addq   $0x1,0x1f0(%rbx)
  0x00007fab7414e507: jmpq   0x00007fab7414e634
  0x00007fab7414e50c: cmpq   $0x0,0x178(%rbx)
  0x00007fab7414e517: jne    0x00007fab7414e530
  0x00007fab7414e519: mov    %rdi,0x178(%rbx)
  0x00007fab7414e520: movq   $0x1,0x180(%rbx)
  0x00007fab7414e52b: jmpq   0x00007fab7414e634
  0x00007fab7414e530: cmpq   $0x0,0x188(%rbx)
  0x00007fab7414e53b: jne    0x00007fab7414e554
  0x00007fab7414e53d: mov    %rdi,0x188(%rbx)
  0x00007fab7414e544: movq   $0x1,0x190(%rbx)
  0x00007fab7414e54f: jmpq   0x00007fab7414e634
  0x00007fab7414e554: cmpq   $0x0,0x198(%rbx)
  0x00007fab7414e55f: jne    0x00007fab7414e578
  0x00007fab7414e561: mov    %rdi,0x198(%rbx)
  0x00007fab7414e568: movq   $0x1,0x1a0(%rbx)
  0x00007fab7414e573: jmpq   0x00007fab7414e634
  0x00007fab7414e578: cmpq   $0x0,0x1a8(%rbx)
  0x00007fab7414e583: jne    0x00007fab7414e59c
  0x00007fab7414e585: mov    %rdi,0x1a8(%rbx)
  0x00007fab7414e58c: movq   $0x1,0x1b0(%rbx)
  0x00007fab7414e597: jmpq   0x00007fab7414e634
  0x00007fab7414e59c: cmpq   $0x0,0x1b8(%rbx)
  0x00007fab7414e5a7: jne    0x00007fab7414e5c0
  0x00007fab7414e5a9: mov    %rdi,0x1b8(%rbx)
  0x00007fab7414e5b0: movq   $0x1,0x1c0(%rbx)
  0x00007fab7414e5bb: jmpq   0x00007fab7414e634
  0x00007fab7414e5c0: cmpq   $0x0,0x1c8(%rbx)
  0x00007fab7414e5cb: jne    0x00007fab7414e5e4
  0x00007fab7414e5cd: mov    %rdi,0x1c8(%rbx)
  0x00007fab7414e5d4: movq   $0x1,0x1d0(%rbx)
  0x00007fab7414e5df: jmpq   0x00007fab7414e634
  0x00007fab7414e5e4: cmpq   $0x0,0x1d8(%rbx)
  0x00007fab7414e5ef: jne    0x00007fab7414e608
  0x00007fab7414e5f1: mov    %rdi,0x1d8(%rbx)
  0x00007fab7414e5f8: movq   $0x1,0x1e0(%rbx)
  0x00007fab7414e603: jmpq   0x00007fab7414e634
  0x00007fab7414e608: cmpq   $0x0,0x1e8(%rbx)
  0x00007fab7414e613: jne    0x00007fab7414e62c
  0x00007fab7414e615: mov    %rdi,0x1e8(%rbx)
  0x00007fab7414e61c: movq   $0x1,0x1f0(%rbx)
  0x00007fab7414e627: jmpq   0x00007fab7414e634
  0x00007fab7414e62c: addq   $0x1,0x168(%rbx)
  0x00007fab7414e634: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::get@2 (line 556)

  0x00007fab7414e637: mov    %rdx,0x48(%rsp)
  0x00007fab7414e63c: nop
  0x00007fab7414e63d: movabs $0xffffffffffffffff,%rax
  0x00007fab7414e647: callq  0x00007fab74047f60  ; OopMap{[64]=Oop [72]=Oop off=780}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::get@2 (line 556)
                                                ;   {virtual_call}
  0x00007fab7414e64c: mov    %rax,%rdx
  0x00007fab7414e64f: shr    $0x10,%edx
  0x00007fab7414e652: xor    %rax,%rdx
  0x00007fab7414e655: mov    %rdx,%rdi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@19 (line 338)
                                                ; - java.util.HashMap::get@2 (line 556)

  0x00007fab7414e658: mov    0x48(%rsp),%rcx
  0x00007fab7414e65d: mov    0x40(%rsp),%rsi
  0x00007fab7414e662: mov    %rsi,%rdx
  0x00007fab7414e665: movabs $0x7fab61b9b088,%rbx  ;   {metadata(method data for {method} {0x00007fab61998338} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414e66f: addq   $0x1,0x140(%rbx)
  0x00007fab7414e677: mov    %rdi,%rdx          ;*invokevirtual getNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@6 (line 556)

  0x00007fab7414e67a: nop
  0x00007fab7414e67b: nop
  0x00007fab7414e67c: nop
  0x00007fab7414e67d: nop
  0x00007fab7414e67e: nop
  0x00007fab7414e67f: callq  0x00007fab74047d60  ; OopMap{off=836}
                                                ;*invokevirtual getNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@6 (line 556)
                                                ;   {optimized virtual_call}
  0x00007fab7414e684: cmp    $0x0,%rax
  0x00007fab7414e688: movabs $0x7fab61b9b088,%rsi  ;   {metadata(method data for {method} {0x00007fab61998338} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414e692: movabs $0x1d8,%rdi
  0x00007fab7414e69c: jne    0x00007fab7414e6ac
  0x00007fab7414e6a2: movabs $0x1e8,%rdi
  0x00007fab7414e6ac: mov    (%rsi,%rdi,1),%rbx
  0x00007fab7414e6b0: lea    0x1(%rbx),%rbx
  0x00007fab7414e6b4: mov    %rbx,(%rsi,%rdi,1)
  0x00007fab7414e6b8: jne    0x00007fab7414e6e4  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@11 (line 556)

  0x00007fab7414e6be: movabs $0x7fab61b9b088,%rax  ;   {metadata(method data for {method} {0x00007fab61998338} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414e6c8: incl   0x1f8(%rax)
  0x00007fab7414e6ce: movabs $0x0,%rax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@15 (line 556)
                                                ;   {oop(NULL)}
  0x00007fab7414e6d8: add    $0x60,%rsp
  0x00007fab7414e6dc: pop    %rbp
  0x00007fab7414e6dd: test   %eax,0x1b693a1d(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7414e6e3: retq   
  0x00007fab7414e6e4: mov    0x14(%rax),%eax    ; implicit exception: dispatches to 0x00007fab7414e72a
  0x00007fab7414e6e7: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@19 (line 556)

  0x00007fab7414e6eb: add    $0x60,%rsp
  0x00007fab7414e6ef: pop    %rbp
  0x00007fab7414e6f0: test   %eax,0x1b693a0a(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7414e6f6: retq   
  0x00007fab7414e6f7: mov    %rdi,0x8(%rsp)
  0x00007fab7414e6fc: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7414e704: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop off=969}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::get@-1 (line 556)
                                                ;   {runtime_call}
  0x00007fab7414e709: jmpq   0x00007fab7414e39e
  0x00007fab7414e70e: mov    %rdi,0x8(%rsp)
  0x00007fab7414e713: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7414e71b: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop off=992}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ; - java.util.HashMap::get@2 (line 556)
                                                ;   {runtime_call}
  0x00007fab7414e720: jmpq   0x00007fab7414e3e2
  0x00007fab7414e725: callq  0x00007fab740fc000  ; OopMap{rdx=Oop [64]=Oop off=1002}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::get@2 (line 556)
                                                ;   {runtime_call}
  0x00007fab7414e72a: callq  0x00007fab740fc000  ; OopMap{off=1007}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@19 (line 556)
                                                ;   {runtime_call}
  0x00007fab7414e72f: nop
  0x00007fab7414e730: nop
  0x00007fab7414e731: mov    0x2c0(%r15),%rax
  0x00007fab7414e738: movabs $0x0,%r10
  0x00007fab7414e742: mov    %r10,0x2c0(%r15)
  0x00007fab7414e749: movabs $0x0,%r10
  0x00007fab7414e753: mov    %r10,0x2c8(%r15)
  0x00007fab7414e75a: add    $0x60,%rsp
  0x00007fab7414e75e: pop    %rbp
  0x00007fab7414e75f: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7414e764: hlt    
  0x00007fab7414e765: hlt    
  0x00007fab7414e766: hlt    
  0x00007fab7414e767: hlt    
  0x00007fab7414e768: hlt    
  0x00007fab7414e769: hlt    
  0x00007fab7414e76a: hlt    
  0x00007fab7414e76b: hlt    
  0x00007fab7414e76c: hlt    
  0x00007fab7414e76d: hlt    
  0x00007fab7414e76e: hlt    
  0x00007fab7414e76f: hlt    
  0x00007fab7414e770: hlt    
  0x00007fab7414e771: hlt    
  0x00007fab7414e772: hlt    
  0x00007fab7414e773: hlt    
  0x00007fab7414e774: hlt    
  0x00007fab7414e775: hlt    
  0x00007fab7414e776: hlt    
  0x00007fab7414e777: hlt    
  0x00007fab7414e778: hlt    
  0x00007fab7414e779: hlt    
  0x00007fab7414e77a: hlt    
  0x00007fab7414e77b: hlt    
  0x00007fab7414e77c: hlt    
  0x00007fab7414e77d: hlt    
  0x00007fab7414e77e: hlt    
  0x00007fab7414e77f: hlt    
[Stub Code]
  0x00007fab7414e780: nop                       ;   {no_reloc}
  0x00007fab7414e781: nop
  0x00007fab7414e782: nop
  0x00007fab7414e783: nop
  0x00007fab7414e784: nop
  0x00007fab7414e785: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414e78f: jmpq   0x00007fab7414e78f  ;   {runtime_call}
  0x00007fab7414e794: nop
  0x00007fab7414e795: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414e79f: jmpq   0x00007fab7414e79f  ;   {runtime_call}
[Exception Handler]
  0x00007fab7414e7a4: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab7414e7a9: mov    %rsp,-0x28(%rsp)
  0x00007fab7414e7ae: sub    $0x80,%rsp
  0x00007fab7414e7b5: mov    %rax,0x78(%rsp)
  0x00007fab7414e7ba: mov    %rcx,0x70(%rsp)
  0x00007fab7414e7bf: mov    %rdx,0x68(%rsp)
  0x00007fab7414e7c4: mov    %rbx,0x60(%rsp)
  0x00007fab7414e7c9: mov    %rbp,0x50(%rsp)
  0x00007fab7414e7ce: mov    %rsi,0x48(%rsp)
  0x00007fab7414e7d3: mov    %rdi,0x40(%rsp)
  0x00007fab7414e7d8: mov    %r8,0x38(%rsp)
  0x00007fab7414e7dd: mov    %r9,0x30(%rsp)
  0x00007fab7414e7e2: mov    %r10,0x28(%rsp)
  0x00007fab7414e7e7: mov    %r11,0x20(%rsp)
  0x00007fab7414e7ec: mov    %r12,0x18(%rsp)
  0x00007fab7414e7f1: mov    %r13,0x10(%rsp)
  0x00007fab7414e7f6: mov    %r14,0x8(%rsp)
  0x00007fab7414e7fb: mov    %r15,(%rsp)
  0x00007fab7414e7ff: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7414e809: movabs $0x7fab7414e7a9,%rsi  ;   {internal_word}
  0x00007fab7414e813: mov    %rsp,%rdx
  0x00007fab7414e816: and    $0xfffffffffffffff0,%rsp
  0x00007fab7414e81a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7414e81f: hlt    
[Deopt Handler Code]
  0x00007fab7414e820: movabs $0x7fab7414e820,%r10  ;   {section_word}
  0x00007fab7414e82a: push   %r10
  0x00007fab7414e82c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7414e831: hlt    
  0x00007fab7414e832: hlt    
  0x00007fab7414e833: hlt    
  0x00007fab7414e834: hlt    
  0x00007fab7414e835: hlt    
  0x00007fab7414e836: hlt    
  0x00007fab7414e837: hlt    
<nmethod compile_id='124' compiler='C1' level='3' entry='0x00007fab7414e340' size='2192' address='0x00007fab7414e190' relocation_offset='312' insts_offset='432' stub_offset='1520' scopes_data_offset='1720' scopes_pcs_offset='1888' dependencies_offset='2160' nul_chk_table_offset='2168' metadata_offset='1704' method='java/util/HashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='23' count='477' iicount='477' stamp='0.475'/>
<writer thread='140373948942080'/>
<task_queued compile_id='127' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='384' iicount='384' level='3' stamp='0.475' comment='tiered' hot_count='384'/>
[Loaded jdk.vm.ci.hotspot.HotSpotJVMCIBackendFactory from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.services.Services from /home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci-services.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/util/HashMap.getNode  [0x00007fab7414ec40, 0x00007fab7414fca8]  4200 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(IL
<writer thread='140373948942080'/>
[Loaded java.util.HashMap$EntrySet from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
java/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x00007fab7414ec40: mov    0x8(%rsi),%r10d
  0x00007fab7414ec44: shl    $0x3,%r10
  0x00007fab7414ec48: cmp    %rax,%r10
  0x00007fab7414ec4b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab7414ec51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7414ec5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab7414ec60: mov    %eax,-0x14000(%rsp)
  0x00007fab7414ec67: push   %rbp
  0x00007fab7414ec68: sub    $0x50,%rsp
  0x00007fab7414ec6c: mov    %edx,0x28(%rsp)
  0x00007fab7414ec70: mov    %rcx,0x30(%rsp)
  0x00007fab7414ec75: movabs $0x7fab61b87a38,%rdi  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414ec7f: mov    0xfc(%rdi),%ebx
  0x00007fab7414ec85: add    $0x8,%ebx
  0x00007fab7414ec88: mov    %ebx,0xfc(%rdi)
  0x00007fab7414ec8e: movabs $0x7fab619984d8,%rdi  ;   {metadata({method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414ec98: and    $0x1ff8,%ebx
  0x00007fab7414ec9e: cmp    $0x0,%ebx
  0x00007fab7414eca1: je     0x00007fab7414fb47  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@0 (line 568)

  0x00007fab7414eca7: mov    0x24(%rsi),%esi
  0x00007fab7414ecaa: shl    $0x3,%rsi          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@1 (line 568)

  0x00007fab7414ecae: cmp    $0x0,%rsi
  0x00007fab7414ecb2: movabs $0x7fab61b87a38,%rdi  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414ecbc: movabs $0x130,%rbx
  0x00007fab7414ecc6: je     0x00007fab7414ecd6
  0x00007fab7414eccc: movabs $0x140,%rbx
  0x00007fab7414ecd6: mov    (%rdi,%rbx,1),%rax
  0x00007fab7414ecda: lea    0x1(%rax),%rax
  0x00007fab7414ecde: mov    %rax,(%rdi,%rbx,1)
  0x00007fab7414ece2: je     0x00007fab7414f6da  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@6 (line 568)

  0x00007fab7414ece8: mov    0xc(%rsi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@10 (line 568)
                                                ; implicit exception: dispatches to 0x00007fab7414fb5e
  0x00007fab7414eceb: cmp    $0x0,%edi
  0x00007fab7414ecee: movabs $0x7fab61b87a38,%rbx  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414ecf8: movabs $0x150,%rax
  0x00007fab7414ed02: jle    0x00007fab7414ed12
  0x00007fab7414ed08: movabs $0x160,%rax
  0x00007fab7414ed12: mov    (%rbx,%rax,1),%r8
  0x00007fab7414ed16: lea    0x1(%r8),%r8
  0x00007fab7414ed1a: mov    %r8,(%rbx,%rax,1)
  0x00007fab7414ed1e: jle    0x00007fab7414f6da  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@14 (line 568)

  0x00007fab7414ed24: dec    %edi
  0x00007fab7414ed26: and    %rdx,%rdi
  0x00007fab7414ed29: movslq %edi,%rbx
  0x00007fab7414ed2c: cmp    0xc(%rsi),%edi
  0x00007fab7414ed2f: jae    0x00007fab7414fb63
  0x00007fab7414ed35: mov    0x10(%rsi,%rbx,4),%edi
  0x00007fab7414ed39: shl    $0x3,%rdi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@24 (line 568)

  0x00007fab7414ed3d: cmp    $0x0,%rdi
  0x00007fab7414ed41: movabs $0x7fab61b87a38,%rsi  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414ed4b: movabs $0x170,%rbx
  0x00007fab7414ed55: je     0x00007fab7414ed65
  0x00007fab7414ed5b: movabs $0x180,%rbx
  0x00007fab7414ed65: mov    (%rsi,%rbx,1),%rax
  0x00007fab7414ed69: lea    0x1(%rax),%rax
  0x00007fab7414ed6d: mov    %rax,(%rsi,%rbx,1)
  0x00007fab7414ed71: je     0x00007fab7414f6da  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@28 (line 568)

  0x00007fab7414ed77: mov    0xc(%rdi),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@33 (line 570)
                                                ; implicit exception: dispatches to 0x00007fab7414fb6c
  0x00007fab7414ed7a: cmp    %edx,%esi
  0x00007fab7414ed7c: movabs $0x7fab61b87a38,%rsi  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414ed86: movabs $0x190,%rbx
  0x00007fab7414ed90: jne    0x00007fab7414eda0
  0x00007fab7414ed96: movabs $0x1a0,%rbx
  0x00007fab7414eda0: mov    (%rsi,%rbx,1),%rax
  0x00007fab7414eda4: lea    0x1(%rax),%rax
  0x00007fab7414eda8: mov    %rax,(%rsi,%rbx,1)
  0x00007fab7414edac: jne    0x00007fab7414f07a  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@37 (line 570)

  0x00007fab7414edb2: mov    0x10(%rdi),%esi
  0x00007fab7414edb5: shl    $0x3,%rsi          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@42 (line 570)

  0x00007fab7414edb9: cmp    %rcx,%rsi
  0x00007fab7414edbc: movabs $0x7fab61b87a38,%rbx  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414edc6: movabs $0x1b0,%rax
  0x00007fab7414edd0: je     0x00007fab7414ede0
  0x00007fab7414edd6: movabs $0x1c0,%rax
  0x00007fab7414ede0: mov    (%rbx,%rax,1),%r8
  0x00007fab7414ede4: lea    0x1(%r8),%r8
  0x00007fab7414ede8: mov    %r8,(%rbx,%rax,1)
  0x00007fab7414edec: je     0x00007fab7414fb38  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@49 (line 570)

  0x00007fab7414edf2: cmp    $0x0,%rcx
  0x00007fab7414edf6: movabs $0x7fab61b87a38,%rbx  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414ee00: movabs $0x1d0,%rax
  0x00007fab7414ee0a: je     0x00007fab7414ee1a
  0x00007fab7414ee10: movabs $0x1e0,%rax
  0x00007fab7414ee1a: mov    (%rbx,%rax,1),%r8
  0x00007fab7414ee1e: lea    0x1(%r8),%r8
  0x00007fab7414ee22: mov    %r8,(%rbx,%rax,1)
  0x00007fab7414ee26: je     0x00007fab7414f07a  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@53 (line 570)

  0x00007fab7414ee2c: mov    %rdi,0x20(%rsp)
  0x00007fab7414ee31: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x00007fab7414fb71
  0x00007fab7414ee34: mov    %rcx,%rbx
  0x00007fab7414ee37: movabs $0x7fab61b87a38,%rax  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414ee41: mov    0x8(%rbx),%ebx
  0x00007fab7414ee44: shl    $0x3,%rbx
  0x00007fab7414ee48: cmp    0x200(%rax),%rbx
  0x00007fab7414ee4f: jne    0x00007fab7414ee5e
  0x00007fab7414ee51: addq   $0x1,0x208(%rax)
  0x00007fab7414ee59: jmpq   0x00007fab7414f020
  0x00007fab7414ee5e: cmp    0x210(%rax),%rbx
  0x00007fab7414ee65: jne    0x00007fab7414ee74
  0x00007fab7414ee67: addq   $0x1,0x218(%rax)
  0x00007fab7414ee6f: jmpq   0x00007fab7414f020
  0x00007fab7414ee74: cmp    0x220(%rax),%rbx
  0x00007fab7414ee7b: jne    0x00007fab7414ee8a
  0x00007fab7414ee7d: addq   $0x1,0x228(%rax)
  0x00007fab7414ee85: jmpq   0x00007fab7414f020
  0x00007fab7414ee8a: cmp    0x230(%rax),%rbx
  0x00007fab7414ee91: jne    0x00007fab7414eea0
  0x00007fab7414ee93: addq   $0x1,0x238(%rax)
  0x00007fab7414ee9b: jmpq   0x00007fab7414f020
  0x00007fab7414eea0: cmp    0x240(%rax),%rbx
  0x00007fab7414eea7: jne    0x00007fab7414eeb6
  0x00007fab7414eea9: addq   $0x1,0x248(%rax)
  0x00007fab7414eeb1: jmpq   0x00007fab7414f020
  0x00007fab7414eeb6: cmp    0x250(%rax),%rbx
  0x00007fab7414eebd: jne    0x00007fab7414eecc
  0x00007fab7414eebf: addq   $0x1,0x258(%rax)
  0x00007fab7414eec7: jmpq   0x00007fab7414f020
  0x00007fab7414eecc: cmp    0x260(%rax),%rbx
  0x00007fab7414eed3: jne    0x00007fab7414eee2
  0x00007fab7414eed5: addq   $0x1,0x268(%rax)
  0x00007fab7414eedd: jmpq   0x00007fab7414f020
  0x00007fab7414eee2: cmp    0x270(%rax),%rbx
  0x00007fab7414eee9: jne    0x00007fab7414eef8
  0x00007fab7414eeeb: addq   $0x1,0x278(%rax)
  0x00007fab7414eef3: jmpq   0x00007fab7414f020
  0x00007fab7414eef8: cmpq   $0x0,0x200(%rax)
  0x00007fab7414ef03: jne    0x00007fab7414ef1c
  0x00007fab7414ef05: mov    %rbx,0x200(%rax)
  0x00007fab7414ef0c: movq   $0x1,0x208(%rax)
  0x00007fab7414ef17: jmpq   0x00007fab7414f020
  0x00007fab7414ef1c: cmpq   $0x0,0x210(%rax)
  0x00007fab7414ef27: jne    0x00007fab7414ef40
  0x00007fab7414ef29: mov    %rbx,0x210(%rax)
  0x00007fab7414ef30: movq   $0x1,0x218(%rax)
  0x00007fab7414ef3b: jmpq   0x00007fab7414f020
  0x00007fab7414ef40: cmpq   $0x0,0x220(%rax)
  0x00007fab7414ef4b: jne    0x00007fab7414ef64
  0x00007fab7414ef4d: mov    %rbx,0x220(%rax)
  0x00007fab7414ef54: movq   $0x1,0x228(%rax)
  0x00007fab7414ef5f: jmpq   0x00007fab7414f020
  0x00007fab7414ef64: cmpq   $0x0,0x230(%rax)
  0x00007fab7414ef6f: jne    0x00007fab7414ef88
  0x00007fab7414ef71: mov    %rbx,0x230(%rax)
  0x00007fab7414ef78: movq   $0x1,0x238(%rax)
  0x00007fab7414ef83: jmpq   0x00007fab7414f020
  0x00007fab7414ef88: cmpq   $0x0,0x240(%rax)
  0x00007fab7414ef93: jne    0x00007fab7414efac
  0x00007fab7414ef95: mov    %rbx,0x240(%rax)
  0x00007fab7414ef9c: movq   $0x1,0x248(%rax)
  0x00007fab7414efa7: jmpq   0x00007fab7414f020
  0x00007fab7414efac: cmpq   $0x0,0x250(%rax)
  0x00007fab7414efb7: jne    0x00007fab7414efd0
  0x00007fab7414efb9: mov    %rbx,0x250(%rax)
  0x00007fab7414efc0: movq   $0x1,0x258(%rax)
  0x00007fab7414efcb: jmpq   0x00007fab7414f020
  0x00007fab7414efd0: cmpq   $0x0,0x260(%rax)
  0x00007fab7414efdb: jne    0x00007fab7414eff4
  0x00007fab7414efdd: mov    %rbx,0x260(%rax)
  0x00007fab7414efe4: movq   $0x1,0x268(%rax)
  0x00007fab7414efef: jmpq   0x00007fab7414f020
  0x00007fab7414eff4: cmpq   $0x0,0x270(%rax)
  0x00007fab7414efff: jne    0x00007fab7414f018
  0x00007fab7414f001: mov    %rbx,0x270(%rax)
  0x00007fab7414f008: movq   $0x1,0x278(%rax)
  0x00007fab7414f013: jmpq   0x00007fab7414f020
  0x00007fab7414f018: addq   $0x1,0x1f0(%rax)
  0x00007fab7414f020: mov    %rsi,%rdx
  0x00007fab7414f023: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@59 (line 571)

  0x00007fab7414f026: nop
  0x00007fab7414f027: nop
  0x00007fab7414f028: nop
  0x00007fab7414f029: nop
  0x00007fab7414f02a: nop
  0x00007fab7414f02b: nop
  0x00007fab7414f02c: nop
  0x00007fab7414f02d: movabs $0xffffffffffffffff,%rax
  0x00007fab7414f037: callq  0x00007fab74047f60  ; OopMap{[32]=Oop [48]=Oop off=1020}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@59 (line 571)
                                                ;   {virtual_call}
  0x00007fab7414f03c: cmp    $0x0,%eax
  0x00007fab7414f03f: movabs $0x7fab61b87a38,%rdx  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414f049: movabs $0x288,%rsi
  0x00007fab7414f053: je     0x00007fab7414f063
  0x00007fab7414f059: movabs $0x298,%rsi
  0x00007fab7414f063: mov    (%rdx,%rsi,1),%rdi
  0x00007fab7414f067: lea    0x1(%rdi),%rdi
  0x00007fab7414f06b: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab7414f06f: mov    0x20(%rsp),%rdi
  0x00007fab7414f074: jne    0x00007fab7414fb38  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@62 (line 571)

  0x00007fab7414f07a: mov    0x18(%rdi),%edx
  0x00007fab7414f07d: shl    $0x3,%rdx          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@70 (line 573)

  0x00007fab7414f081: cmp    $0x0,%rdx
  0x00007fab7414f085: movabs $0x7fab61b87a38,%rsi  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414f08f: movabs $0x2a8,%rbx
  0x00007fab7414f099: je     0x00007fab7414f0a9
  0x00007fab7414f09f: movabs $0x2b8,%rbx
  0x00007fab7414f0a9: mov    (%rsi,%rbx,1),%rax
  0x00007fab7414f0ad: lea    0x1(%rax),%rax
  0x00007fab7414f0b1: mov    %rax,(%rsi,%rbx,1)
  0x00007fab7414f0b5: je     0x00007fab7414f6da  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@76 (line 573)

  0x00007fab7414f0bb: cmp    $0x0,%rdi
  0x00007fab7414f0bf: jne    0x00007fab7414f0da
  0x00007fab7414f0c1: movabs $0x7fab61b87a38,%rax  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414f0cb: orl    $0x100,0x2c0(%rax)
  0x00007fab7414f0d5: jmpq   0x00007fab7414f2f6
  0x00007fab7414f0da: movabs $0x7c0031710,%rcx  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00007fab7414f0e4: mov    0x8(%rdi),%ebx
  0x00007fab7414f0e7: shl    $0x3,%rbx
  0x00007fab7414f0eb: cmp    %rbx,%rcx
  0x00007fab7414f0ee: jne    0x00007fab7414f2da
  0x00007fab7414f0f4: movabs $0x7fab61b87a38,%rax  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414f0fe: mov    0x8(%rdi),%ecx
  0x00007fab7414f101: shl    $0x3,%rcx
  0x00007fab7414f105: cmp    0x2d8(%rax),%rcx
  0x00007fab7414f10c: jne    0x00007fab7414f11b
  0x00007fab7414f10e: addq   $0x1,0x2e0(%rax)
  0x00007fab7414f116: jmpq   0x00007fab7414f2fb
  0x00007fab7414f11b: cmp    0x2e8(%rax),%rcx
  0x00007fab7414f122: jne    0x00007fab7414f131
  0x00007fab7414f124: addq   $0x1,0x2f0(%rax)
  0x00007fab7414f12c: jmpq   0x00007fab7414f2fb
  0x00007fab7414f131: cmp    0x2f8(%rax),%rcx
  0x00007fab7414f138: jne    0x00007fab7414f147
  0x00007fab7414f13a: addq   $0x1,0x300(%rax)
  0x00007fab7414f142: jmpq   0x00007fab7414f2fb
  0x00007fab7414f147: cmp    0x308(%rax),%rcx
  0x00007fab7414f14e: jne    0x00007fab7414f15d
  0x00007fab7414f150: addq   $0x1,0x310(%rax)
  0x00007fab7414f158: jmpq   0x00007fab7414f2fb
  0x00007fab7414f15d: cmp    0x318(%rax),%rcx
  0x00007fab7414f164: jne    0x00007fab7414f173
  0x00007fab7414f166: addq   $0x1,0x320(%rax)
  0x00007fab7414f16e: jmpq   0x00007fab7414f2fb
  0x00007fab7414f173: cmp    0x328(%rax),%rcx
  0x00007fab7414f17a: jne    0x00007fab7414f189
  0x00007fab7414f17c: addq   $0x1,0x330(%rax)
  0x00007fab7414f184: jmpq   0x00007fab7414f2fb
  0x00007fab7414f189: cmp    0x338(%rax),%rcx
  0x00007fab7414f190: jne    0x00007fab7414f19f
  0x00007fab7414f192: addq   $0x1,0x340(%rax)
  0x00007fab7414f19a: jmpq   0x00007fab7414f2fb
  0x00007fab7414f19f: cmp    0x348(%rax),%rcx
  0x00007fab7414f1a6: jne    0x00007fab7414f1b5
  0x00007fab7414f1a8: addq   $0x1,0x350(%rax)
  0x00007fab7414f1b0: jmpq   0x00007fab7414f2fb
  0x00007fab7414f1b5: cmpq   $0x0,0x2d8(%rax)
  0x00007fab7414f1c0: jne    0x00007fab7414f1d9
  0x00007fab7414f1c2: mov    %rcx,0x2d8(%rax)
  0x00007fab7414f1c9: movq   $0x1,0x2e0(%rax)
  0x00007fab7414f1d4: jmpq   0x00007fab7414f2fb
  0x00007fab7414f1d9: cmpq   $0x0,0x2e8(%rax)
  0x00007fab7414f1e4: jne    0x00007fab7414f1fd
  0x00007fab7414f1e6: mov    %rcx,0x2e8(%rax)
  0x00007fab7414f1ed: movq   $0x1,0x2f0(%rax)
  0x00007fab7414f1f8: jmpq   0x00007fab7414f2fb
  0x00007fab7414f1fd: cmpq   $0x0,0x2f8(%rax)
  0x00007fab7414f208: jne    0x00007fab7414f221
  0x00007fab7414f20a: mov    %rcx,0x2f8(%rax)
  0x00007fab7414f211: movq   $0x1,0x300(%rax)
  0x00007fab7414f21c: jmpq   0x00007fab7414f2fb
  0x00007fab7414f221: cmpq   $0x0,0x308(%rax)
  0x00007fab7414f22c: jne    0x00007fab7414f245
  0x00007fab7414f22e: mov    %rcx,0x308(%rax)
  0x00007fab7414f235: movq   $0x1,0x310(%rax)
  0x00007fab7414f240: jmpq   0x00007fab7414f2fb
  0x00007fab7414f245: cmpq   $0x0,0x318(%rax)
  0x00007fab7414f250: jne    0x00007fab7414f269
  0x00007fab7414f252: mov    %rcx,0x318(%rax)
  0x00007fab7414f259: movq   $0x1,0x320(%rax)
  0x00007fab7414f264: jmpq   0x00007fab7414f2fb
  0x00007fab7414f269: cmpq   $0x0,0x328(%rax)
  0x00007fab7414f274: jne    0x00007fab7414f28d
  0x00007fab7414f276: mov    %rcx,0x328(%rax)
  0x00007fab7414f27d: movq   $0x1,0x330(%rax)
  0x00007fab7414f288: jmpq   0x00007fab7414f2fb
  0x00007fab7414f28d: cmpq   $0x0,0x338(%rax)
  0x00007fab7414f298: jne    0x00007fab7414f2b1
  0x00007fab7414f29a: mov    %rcx,0x338(%rax)
  0x00007fab7414f2a1: movq   $0x1,0x340(%rax)
  0x00007fab7414f2ac: jmpq   0x00007fab7414f2fb
  0x00007fab7414f2b1: cmpq   $0x0,0x348(%rax)
  0x00007fab7414f2bc: jne    0x00007fab7414f2d5
  0x00007fab7414f2be: mov    %rcx,0x348(%rax)
  0x00007fab7414f2c5: movq   $0x1,0x350(%rax)
  0x00007fab7414f2d0: jmpq   0x00007fab7414f2fb
  0x00007fab7414f2d5: jmpq   0x00007fab7414f2fb
  0x00007fab7414f2da: movabs $0x7fab61b87a38,%rax  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414f2e4: subq   $0x1,0x2c8(%rax)
  0x00007fab7414f2ec: jmpq   0x00007fab7414f2f6
  0x00007fab7414f2f1: jmpq   0x00007fab7414f2fb
  0x00007fab7414f2f6: xor    %rsi,%rsi
  0x00007fab7414f2f9: jmp    0x00007fab7414f305
  0x00007fab7414f2fb: movabs $0x1,%rsi          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@81 (line 574)

  0x00007fab7414f305: cmp    $0x0,%esi
  0x00007fab7414f308: movabs $0x7fab61b87a38,%rsi  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414f312: movabs $0x360,%rbx
  0x00007fab7414f31c: je     0x00007fab7414f32c
  0x00007fab7414f322: movabs $0x370,%rbx
  0x00007fab7414f32c: mov    (%rsi,%rbx,1),%rax
  0x00007fab7414f330: lea    0x1(%rax),%rax
  0x00007fab7414f334: mov    %rax,(%rsi,%rbx,1)
  0x00007fab7414f338: jne    0x00007fab7414f6f0  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@84 (line 574)

  0x00007fab7414f33e: xchg   %ax,%ax
  0x00007fab7414f340: mov    0x30(%rsp),%rcx
  0x00007fab7414f345: mov    0x28(%rsp),%edi
  0x00007fab7414f349: mov    0xc(%rdx),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@100 (line 577)
                                                ; implicit exception: dispatches to 0x00007fab7414fb76
  0x00007fab7414f34c: cmp    %edi,%esi
  0x00007fab7414f34e: movabs $0x7fab61b87a38,%rsi  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414f358: movabs $0x4b0,%rbx
  0x00007fab7414f362: jne    0x00007fab7414f372
  0x00007fab7414f368: movabs $0x4c0,%rbx
  0x00007fab7414f372: mov    (%rsi,%rbx,1),%rax
  0x00007fab7414f376: lea    0x1(%rax),%rax
  0x00007fab7414f37a: mov    %rax,(%rsi,%rbx,1)
  0x00007fab7414f37e: jne    0x00007fab7414f64a  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@104 (line 577)

  0x00007fab7414f384: mov    0x10(%rdx),%esi
  0x00007fab7414f387: shl    $0x3,%rsi          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@109 (line 577)

  0x00007fab7414f38b: cmp    %rcx,%rsi
  0x00007fab7414f38e: movabs $0x7fab61b87a38,%rbx  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414f398: movabs $0x4d0,%rax
  0x00007fab7414f3a2: je     0x00007fab7414f3b2
  0x00007fab7414f3a8: movabs $0x4e0,%rax
  0x00007fab7414f3b2: mov    (%rbx,%rax,1),%r8
  0x00007fab7414f3b6: lea    0x1(%r8),%r8
  0x00007fab7414f3ba: mov    %r8,(%rbx,%rax,1)
  0x00007fab7414f3be: je     0x00007fab7414f6cb  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@116 (line 577)

  0x00007fab7414f3c4: cmp    $0x0,%rcx
  0x00007fab7414f3c8: movabs $0x7fab61b87a38,%rbx  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414f3d2: movabs $0x4f0,%rax
  0x00007fab7414f3dc: je     0x00007fab7414f3ec
  0x00007fab7414f3e2: movabs $0x500,%rax
  0x00007fab7414f3ec: mov    (%rbx,%rax,1),%r8
  0x00007fab7414f3f0: lea    0x1(%r8),%r8
  0x00007fab7414f3f4: mov    %r8,(%rbx,%rax,1)
  0x00007fab7414f3f8: je     0x00007fab7414f64a  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@120 (line 577)

  0x00007fab7414f3fe: mov    %rdx,0x38(%rsp)
  0x00007fab7414f403: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x00007fab7414fb7b
  0x00007fab7414f406: mov    %rcx,%rbx
  0x00007fab7414f409: movabs $0x7fab61b87a38,%rax  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414f413: mov    0x8(%rbx),%ebx
  0x00007fab7414f416: shl    $0x3,%rbx
  0x00007fab7414f41a: cmp    0x520(%rax),%rbx
  0x00007fab7414f421: jne    0x00007fab7414f430
  0x00007fab7414f423: addq   $0x1,0x528(%rax)
  0x00007fab7414f42b: jmpq   0x00007fab7414f5f2
  0x00007fab7414f430: cmp    0x530(%rax),%rbx
  0x00007fab7414f437: jne    0x00007fab7414f446
  0x00007fab7414f439: addq   $0x1,0x538(%rax)
  0x00007fab7414f441: jmpq   0x00007fab7414f5f2
  0x00007fab7414f446: cmp    0x540(%rax),%rbx
  0x00007fab7414f44d: jne    0x00007fab7414f45c
  0x00007fab7414f44f: addq   $0x1,0x548(%rax)
  0x00007fab7414f457: jmpq   0x00007fab7414f5f2
  0x00007fab7414f45c: cmp    0x550(%rax),%rbx
  0x00007fab7414f463: jne    0x00007fab7414f472
  0x00007fab7414f465: addq   $0x1,0x558(%rax)
  0x00007fab7414f46d: jmpq   0x00007fab7414f5f2
  0x00007fab7414f472: cmp    0x560(%rax),%rbx
  0x00007fab7414f479: jne    0x00007fab7414f488
  0x00007fab7414f47b: addq   $0x1,0x568(%rax)
  0x00007fab7414f483: jmpq   0x00007fab7414f5f2
  0x00007fab7414f488: cmp    0x570(%rax),%rbx
  0x00007fab7414f48f: jne    0x00007fab7414f49e
  0x00007fab7414f491: addq   $0x1,0x578(%rax)
  0x00007fab7414f499: jmpq   0x00007fab7414f5f2
  0x00007fab7414f49e: cmp    0x580(%rax),%rbx
  0x00007fab7414f4a5: jne    0x00007fab7414f4b4
  0x00007fab7414f4a7: addq   $0x1,0x588(%rax)
  0x00007fab7414f4af: jmpq   0x00007fab7414f5f2
  0x00007fab7414f4b4: cmp    0x590(%rax),%rbx
  0x00007fab7414f4bb: jne    0x00007fab7414f4ca
  0x00007fab7414f4bd: addq   $0x1,0x598(%rax)
  0x00007fab7414f4c5: jmpq   0x00007fab7414f5f2
  0x00007fab7414f4ca: cmpq   $0x0,0x520(%rax)
  0x00007fab7414f4d5: jne    0x00007fab7414f4ee
  0x00007fab7414f4d7: mov    %rbx,0x520(%rax)
  0x00007fab7414f4de: movq   $0x1,0x528(%rax)
  0x00007fab7414f4e9: jmpq   0x00007fab7414f5f2
  0x00007fab7414f4ee: cmpq   $0x0,0x530(%rax)
  0x00007fab7414f4f9: jne    0x00007fab7414f512
  0x00007fab7414f4fb: mov    %rbx,0x530(%rax)
  0x00007fab7414f502: movq   $0x1,0x538(%rax)
  0x00007fab7414f50d: jmpq   0x00007fab7414f5f2
  0x00007fab7414f512: cmpq   $0x0,0x540(%rax)
  0x00007fab7414f51d: jne    0x00007fab7414f536
  0x00007fab7414f51f: mov    %rbx,0x540(%rax)
  0x00007fab7414f526: movq   $0x1,0x548(%rax)
  0x00007fab7414f531: jmpq   0x00007fab7414f5f2
  0x00007fab7414f536: cmpq   $0x0,0x550(%rax)
  0x00007fab7414f541: jne    0x00007fab7414f55a
  0x00007fab7414f543: mov    %rbx,0x550(%rax)
  0x00007fab7414f54a: movq   $0x1,0x558(%rax)
  0x00007fab7414f555: jmpq   0x00007fab7414f5f2
  0x00007fab7414f55a: cmpq   $0x0,0x560(%rax)
  0x00007fab7414f565: jne    0x00007fab7414f57e
  0x00007fab7414f567: mov    %rbx,0x560(%rax)
  0x00007fab7414f56e: movq   $0x1,0x568(%rax)
  0x00007fab7414f579: jmpq   0x00007fab7414f5f2
  0x00007fab7414f57e: cmpq   $0x0,0x570(%rax)
  0x00007fab7414f589: jne    0x00007fab7414f5a2
  0x00007fab7414f58b: mov    %rbx,0x570(%rax)
  0x00007fab7414f592: movq   $0x1,0x578(%rax)
  0x00007fab7414f59d: jmpq   0x00007fab7414f5f2
  0x00007fab7414f5a2: cmpq   $0x0,0x580(%rax)
  0x00007fab7414f5ad: jne    0x00007fab7414f5c6
  0x00007fab7414f5af: mov    %rbx,0x580(%rax)
  0x00007fab7414f5b6: movq   $0x1,0x588(%rax)
  0x00007fab7414f5c1: jmpq   0x00007fab7414f5f2
  0x00007fab7414f5c6: cmpq   $0x0,0x590(%rax)
  0x00007fab7414f5d1: jne    0x00007fab7414f5ea
  0x00007fab7414f5d3: mov    %rbx,0x590(%rax)
  0x00007fab7414f5da: movq   $0x1,0x598(%rax)
  0x00007fab7414f5e5: jmpq   0x00007fab7414f5f2
  0x00007fab7414f5ea: addq   $0x1,0x510(%rax)
  0x00007fab7414f5f2: mov    %rsi,%rdx
  0x00007fab7414f5f5: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@126 (line 578)

  0x00007fab7414f5f8: nop
  0x00007fab7414f5f9: nop
  0x00007fab7414f5fa: nop
  0x00007fab7414f5fb: nop
  0x00007fab7414f5fc: nop
  0x00007fab7414f5fd: movabs $0xffffffffffffffff,%rax
  0x00007fab7414f607: callq  0x00007fab74047f60  ; OopMap{[56]=Oop [48]=Oop off=2508}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@126 (line 578)
                                                ;   {virtual_call}
  0x00007fab7414f60c: cmp    $0x0,%eax
  0x00007fab7414f60f: movabs $0x7fab61b87a38,%rax  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414f619: movabs $0x5a8,%rdx
  0x00007fab7414f623: je     0x00007fab7414f633
  0x00007fab7414f629: movabs $0x5b8,%rdx
  0x00007fab7414f633: mov    (%rax,%rdx,1),%rcx
  0x00007fab7414f637: lea    0x1(%rcx),%rcx
  0x00007fab7414f63b: mov    %rcx,(%rax,%rdx,1)
  0x00007fab7414f63f: mov    0x38(%rsp),%rdx
  0x00007fab7414f644: jne    0x00007fab7414f6cb  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@129 (line 578)

  0x00007fab7414f64a: mov    0x18(%rdx),%eax
  0x00007fab7414f64d: shl    $0x3,%rax          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@137 (line 580)

  0x00007fab7414f651: movabs $0x7fab61b87a38,%rdx  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414f65b: mov    0x100(%rdx),%ecx
  0x00007fab7414f661: add    $0x8,%ecx
  0x00007fab7414f664: mov    %ecx,0x100(%rdx)
  0x00007fab7414f66a: movabs $0x7fab619984d8,%rdx  ;   {metadata({method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414f674: and    $0xfff8,%ecx
  0x00007fab7414f67a: cmp    $0x0,%ecx
  0x00007fab7414f67d: je     0x00007fab7414fb80  ; OopMap{[48]=Oop rax=Oop off=2627}
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 580)

  0x00007fab7414f683: test   %eax,0x1b692a77(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab7414f689: cmp    $0x0,%rax
  0x00007fab7414f68d: movabs $0x7fab61b87a38,%rdx  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414f697: movabs $0x5c8,%rcx
  0x00007fab7414f6a1: jne    0x00007fab7414f6b1
  0x00007fab7414f6a7: movabs $0x5d8,%rcx
  0x00007fab7414f6b1: mov    (%rdx,%rcx,1),%rsi
  0x00007fab7414f6b5: lea    0x1(%rsi),%rsi
  0x00007fab7414f6b9: mov    %rsi,(%rdx,%rcx,1)
  0x00007fab7414f6bd: je     0x00007fab7414f6da  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 580)

  0x00007fab7414f6c3: mov    %rax,%rdx
  0x00007fab7414f6c6: jmpq   0x00007fab7414f340  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@98 (line 577)

  0x00007fab7414f6cb: mov    %rdx,%rax
  0x00007fab7414f6ce: add    $0x50,%rsp
  0x00007fab7414f6d2: pop    %rbp
  0x00007fab7414f6d3: test   %eax,0x1b692a27(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7414f6d9: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@134 (line 579)

  0x00007fab7414f6da: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fab7414f6e4: add    $0x50,%rsp
  0x00007fab7414f6e8: pop    %rbp
  0x00007fab7414f6e9: test   %eax,0x1b692a11(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7414f6ef: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@147 (line 583)

  0x00007fab7414f6f0: mov    0x30(%rsp),%rcx
  0x00007fab7414f6f5: mov    0x28(%rsp),%edx
  0x00007fab7414f6f9: cmp    $0x0,%rdi
  0x00007fab7414f6fd: jne    0x00007fab7414f718
  0x00007fab7414f6ff: movabs $0x7fab61b87a38,%rbx  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414f709: orl    $0x100,0x378(%rbx)
  0x00007fab7414f713: jmpq   0x00007fab7414f934
  0x00007fab7414f718: movabs $0x7c0031710,%rax  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00007fab7414f722: mov    0x8(%rdi),%esi
  0x00007fab7414f725: shl    $0x3,%rsi
  0x00007fab7414f729: cmp    %rsi,%rax
  0x00007fab7414f72c: jne    0x00007fab7414f918
  0x00007fab7414f732: movabs $0x7fab61b87a38,%rbx  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414f73c: mov    0x8(%rdi),%eax
  0x00007fab7414f73f: shl    $0x3,%rax
  0x00007fab7414f743: cmp    0x390(%rbx),%rax
  0x00007fab7414f74a: jne    0x00007fab7414f759
  0x00007fab7414f74c: addq   $0x1,0x398(%rbx)
  0x00007fab7414f754: jmpq   0x00007fab7414f934
  0x00007fab7414f759: cmp    0x3a0(%rbx),%rax
  0x00007fab7414f760: jne    0x00007fab7414f76f
  0x00007fab7414f762: addq   $0x1,0x3a8(%rbx)
  0x00007fab7414f76a: jmpq   0x00007fab7414f934
  0x00007fab7414f76f: cmp    0x3b0(%rbx),%rax
  0x00007fab7414f776: jne    0x00007fab7414f785
  0x00007fab7414f778: addq   $0x1,0x3b8(%rbx)
  0x00007fab7414f780: jmpq   0x00007fab7414f934
  0x00007fab7414f785: cmp    0x3c0(%rbx),%rax
  0x00007fab7414f78c: jne    0x00007fab7414f79b
  0x00007fab7414f78e: addq   $0x1,0x3c8(%rbx)
  0x00007fab7414f796: jmpq   0x00007fab7414f934
  0x00007fab7414f79b: cmp    0x3d0(%rbx),%rax
  0x00007fab7414f7a2: jne    0x00007fab7414f7b1
  0x00007fab7414f7a4: addq   $0x1,0x3d8(%rbx)
  0x00007fab7414f7ac: jmpq   0x00007fab7414f934
  0x00007fab7414f7b1: cmp    0x3e0(%rbx),%rax
  0x00007fab7414f7b8: jne    0x00007fab7414f7c7
  0x00007fab7414f7ba: addq   $0x1,0x3e8(%rbx)
  0x00007fab7414f7c2: jmpq   0x00007fab7414f934
  0x00007fab7414f7c7: cmp    0x3f0(%rbx),%rax
  0x00007fab7414f7ce: jne    0x00007fab7414f7dd
  0x00007fab7414f7d0: addq   $0x1,0x3f8(%rbx)
  0x00007fab7414f7d8: jmpq   0x00007fab7414f934
  0x00007fab7414f7dd: cmp    0x400(%rbx),%rax
  0x00007fab7414f7e4: jne    0x00007fab7414f7f3
  0x00007fab7414f7e6: addq   $0x1,0x408(%rbx)
  0x00007fab7414f7ee: jmpq   0x00007fab7414f934
  0x00007fab7414f7f3: cmpq   $0x0,0x390(%rbx)
  0x00007fab7414f7fe: jne    0x00007fab7414f817
  0x00007fab7414f800: mov    %rax,0x390(%rbx)
  0x00007fab7414f807: movq   $0x1,0x398(%rbx)
  0x00007fab7414f812: jmpq   0x00007fab7414f934
  0x00007fab7414f817: cmpq   $0x0,0x3a0(%rbx)
  0x00007fab7414f822: jne    0x00007fab7414f83b
  0x00007fab7414f824: mov    %rax,0x3a0(%rbx)
  0x00007fab7414f82b: movq   $0x1,0x3a8(%rbx)
  0x00007fab7414f836: jmpq   0x00007fab7414f934
  0x00007fab7414f83b: cmpq   $0x0,0x3b0(%rbx)
  0x00007fab7414f846: jne    0x00007fab7414f85f
  0x00007fab7414f848: mov    %rax,0x3b0(%rbx)
  0x00007fab7414f84f: movq   $0x1,0x3b8(%rbx)
  0x00007fab7414f85a: jmpq   0x00007fab7414f934
  0x00007fab7414f85f: cmpq   $0x0,0x3c0(%rbx)
  0x00007fab7414f86a: jne    0x00007fab7414f883
  0x00007fab7414f86c: mov    %rax,0x3c0(%rbx)
  0x00007fab7414f873: movq   $0x1,0x3c8(%rbx)
  0x00007fab7414f87e: jmpq   0x00007fab7414f934
  0x00007fab7414f883: cmpq   $0x0,0x3d0(%rbx)
  0x00007fab7414f88e: jne    0x00007fab7414f8a7
  0x00007fab7414f890: mov    %rax,0x3d0(%rbx)
  0x00007fab7414f897: movq   $0x1,0x3d8(%rbx)
  0x00007fab7414f8a2: jmpq   0x00007fab7414f934
  0x00007fab7414f8a7: cmpq   $0x0,0x3e0(%rbx)
  0x00007fab7414f8b2: jne    0x00007fab7414f8cb
  0x00007fab7414f8b4: mov    %rax,0x3e0(%rbx)
  0x00007fab7414f8bb: movq   $0x1,0x3e8(%rbx)
  0x00007fab7414f8c6: jmpq   0x00007fab7414f934
  0x00007fab7414f8cb: cmpq   $0x0,0x3f0(%rbx)
  0x00007fab7414f8d6: jne    0x00007fab7414f8ef
  0x00007fab7414f8d8: mov    %rax,0x3f0(%rbx)
  0x00007fab7414f8df: movq   $0x1,0x3f8(%rbx)
  0x00007fab7414f8ea: jmpq   0x00007fab7414f934
  0x00007fab7414f8ef: cmpq   $0x0,0x400(%rbx)
  0x00007fab7414f8fa: jne    0x00007fab7414f913
  0x00007fab7414f8fc: mov    %rax,0x400(%rbx)
  0x00007fab7414f903: movq   $0x1,0x408(%rbx)
  0x00007fab7414f90e: jmpq   0x00007fab7414f934
  0x00007fab7414f913: jmpq   0x00007fab7414f934
  0x00007fab7414f918: movabs $0x7fab61b87a38,%rbx  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414f922: subq   $0x1,0x380(%rbx)
  0x00007fab7414f92a: jmpq   0x00007fab7414fb97
  0x00007fab7414f92f: jmpq   0x00007fab7414f934
  0x00007fab7414f934: mov    %rdi,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@89 (line 575)

  0x00007fab7414f937: cmp    (%rsi),%rax        ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@94 (line 575)
                                                ; implicit exception: dispatches to 0x00007fab7414fba0
  0x00007fab7414f93a: mov    %rsi,%rdi
  0x00007fab7414f93d: movabs $0x7fab61b87a38,%rbx  ;   {metadata(method data for {method} {0x00007fab619984d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fab7414f947: mov    0x8(%rdi),%edi
  0x00007fab7414f94a: shl    $0x3,%rdi
  0x00007fab7414f94e: cmp    0x428(%rbx),%rdi
  0x00007fab7414f955: jne    0x00007fab7414f964
  0x00007fab7414f957: addq   $0x1,0x430(%rbx)
  0x00007fab7414f95f: jmpq   0x00007fab7414fb26
  0x00007fab7414f964: cmp    0x438(%rbx),%rdi
  0x00007fab7414f96b: jne    0x00007fab7414f97a
  0x00007fab7414f96d: addq   $0x1,0x440(%rbx)
  0x00007fab7414f975: jmpq   0x00007fab7414fb26
  0x00007fab7414f97a: cmp    0x448(%rbx),%rdi
  0x00007fab7414f981: jne    0x00007fab7414f990
  0x00007fab7414f983: addq   $0x1,0x450(%rbx)
  0x00007fab7414f98b: jmpq   0x00007fab7414fb26
  0x00007fab7414f990: cmp    0x458(%rbx),%rdi
  0x00007fab7414f997: jne    0x00007fab7414f9a6
  0x00007fab7414f999: addq   $0x1,0x460(%rbx)
  0x00007fab7414f9a1: jmpq   0x00007fab7414fb26
  0x00007fab7414f9a6: cmp    0x468(%rbx),%rdi
  0x00007fab7414f9ad: jne    0x00007fab7414f9bc
  0x00007fab7414f9af: addq   $0x1,0x470(%rbx)
  0x00007fab7414f9b7: jmpq   0x00007fab7414fb26
  0x00007fab7414f9bc: cmp    0x478(%rbx),%rdi
  0x00007fab7414f9c3: jne    0x00007fab7414f9d2
  0x00007fab7414f9c5: addq   $0x1,0x480(%rbx)
  0x00007fab7414f9cd: jmpq   0x00007fab7414fb26
  0x00007fab7414f9d2: cmp    0x488(%rbx),%rdi
  0x00007fab7414f9d9: jne    0x00007fab7414f9e8
  0x00007fab7414f9db: addq   $0x1,0x490(%rbx)
  0x00007fab7414f9e3: jmpq   0x00007fab7414fb26
  0x00007fab7414f9e8: cmp    0x498(%rbx),%rdi
  0x00007fab7414f9ef: jne    0x00007fab7414f9fe
  0x00007fab7414f9f1: addq   $0x1,0x4a0(%rbx)
  0x00007fab7414f9f9: jmpq   0x00007fab7414fb26
  0x00007fab7414f9fe: cmpq   $0x0,0x428(%rbx)
  0x00007fab7414fa09: jne    0x00007fab7414fa22
  0x00007fab7414fa0b: mov    %rdi,0x428(%rbx)
  0x00007fab7414fa12: movq   $0x1,0x430(%rbx)
  0x00007fab7414fa1d: jmpq   0x00007fab7414fb26
  0x00007fab7414fa22: cmpq   $0x0,0x438(%rbx)
  0x00007fab7414fa2d: jne    0x00007fab7414fa46
  0x00007fab7414fa2f: mov    %rdi,0x438(%rbx)
  0x00007fab7414fa36: movq   $0x1,0x440(%rbx)
  0x00007fab7414fa41: jmpq   0x00007fab7414fb26
  0x00007fab7414fa46: cmpq   $0x0,0x448(%rbx)
  0x00007fab7414fa51: jne    0x00007fab7414fa6a
  0x00007fab7414fa53: mov    %rdi,0x448(%rbx)
  0x00007fab7414fa5a: movq   $0x1,0x450(%rbx)
  0x00007fab7414fa65: jmpq   0x00007fab7414fb26
  0x00007fab7414fa6a: cmpq   $0x0,0x458(%rbx)
  0x00007fab7414fa75: jne    0x00007fab7414fa8e
  0x00007fab7414fa77: mov    %rdi,0x458(%rbx)
  0x00007fab7414fa7e: movq   $0x1,0x460(%rbx)
  0x00007fab7414fa89: jmpq   0x00007fab7414fb26
  0x00007fab7414fa8e: cmpq   $0x0,0x468(%rbx)
  0x00007fab7414fa99: jne    0x00007fab7414fab2
  0x00007fab7414fa9b: mov    %rdi,0x468(%rbx)
  0x00007fab7414faa2: movq   $0x1,0x470(%rbx)
  0x00007fab7414faad: jmpq   0x00007fab7414fb26
  0x00007fab7414fab2: cmpq   $0x0,0x478(%rbx)
  0x00007fab7414fabd: jne    0x00007fab7414fad6
  0x00007fab7414fabf: mov    %rdi,0x478(%rbx)
  0x00007fab7414fac6: movq   $0x1,0x480(%rbx)
  0x00007fab7414fad1: jmpq   0x00007fab7414fb26
  0x00007fab7414fad6: cmpq   $0x0,0x488(%rbx)
  0x00007fab7414fae1: jne    0x00007fab7414fafa
  0x00007fab7414fae3: mov    %rdi,0x488(%rbx)
  0x00007fab7414faea: movq   $0x1,0x490(%rbx)
  0x00007fab7414faf5: jmpq   0x00007fab7414fb26
  0x00007fab7414fafa: cmpq   $0x0,0x498(%rbx)
  0x00007fab7414fb05: jne    0x00007fab7414fb1e
  0x00007fab7414fb07: mov    %rdi,0x498(%rbx)
  0x00007fab7414fb0e: movq   $0x1,0x4a0(%rbx)
  0x00007fab7414fb19: jmpq   0x00007fab7414fb26
  0x00007fab7414fb1e: addq   $0x1,0x418(%rbx)
  0x00007fab7414fb26: nop
  0x00007fab7414fb27: callq  0x00007fab74047d60  ; OopMap{off=3820}
                                                ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@94 (line 575)
                                                ;   {optimized virtual_call}
  0x00007fab7414fb2c: add    $0x50,%rsp
  0x00007fab7414fb30: pop    %rbp
  0x00007fab7414fb31: test   %eax,0x1b6925c9(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7414fb37: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@97 (line 575)

  0x00007fab7414fb38: mov    %rdi,%rax
  0x00007fab7414fb3b: add    $0x50,%rsp
  0x00007fab7414fb3f: pop    %rbp
  0x00007fab7414fb40: test   %eax,0x1b6925ba(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7414fb46: retq   
  0x00007fab7414fb47: mov    %rdi,0x8(%rsp)
  0x00007fab7414fb4c: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7414fb54: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rcx=Oop [48]=Oop off=3865}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::getNode@-1 (line 568)
                                                ;   {runtime_call}
  0x00007fab7414fb59: jmpq   0x00007fab7414eca7
  0x00007fab7414fb5e: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rcx=Oop [48]=Oop off=3875}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@10 (line 568)
                                                ;   {runtime_call}
  0x00007fab7414fb63: mov    %rdi,(%rsp)
  0x00007fab7414fb67: callq  0x00007fab740fb940  ; OopMap{rcx=Oop [48]=Oop rsi=Oop off=3884}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@24 (line 568)
                                                ;   {runtime_call}
  0x00007fab7414fb6c: callq  0x00007fab740fc000  ; OopMap{rdi=Oop rcx=Oop [48]=Oop off=3889}
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@33 (line 570)
                                                ;   {runtime_call}
  0x00007fab7414fb71: callq  0x00007fab740fc000  ; OopMap{rcx=Oop [48]=Oop [32]=Oop rsi=Oop off=3894}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@59 (line 571)
                                                ;   {runtime_call}
  0x00007fab7414fb76: callq  0x00007fab740fc000  ; OopMap{rdx=Oop rcx=Oop [48]=Oop off=3899}
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@100 (line 577)
                                                ;   {runtime_call}
  0x00007fab7414fb7b: callq  0x00007fab740fc000  ; OopMap{rcx=Oop [48]=Oop [56]=Oop rsi=Oop off=3904}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@126 (line 578)
                                                ;   {runtime_call}
  0x00007fab7414fb80: mov    %rdx,0x8(%rsp)
  0x00007fab7414fb85: movq   $0x8f,(%rsp)
  0x00007fab7414fb8d: callq  0x00007fab741005e0  ; OopMap{[48]=Oop rax=Oop off=3922}
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 580)
                                                ;   {runtime_call}
  0x00007fab7414fb92: jmpq   0x00007fab7414f683
  0x00007fab7414fb97: mov    %rdi,(%rsp)
  0x00007fab7414fb9b: callq  0x00007fab740fe2c0  ; OopMap{rcx=Oop [48]=Oop off=3936}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@89 (line 575)
                                                ;   {runtime_call}
  0x00007fab7414fba0: callq  0x00007fab740fc000  ; OopMap{rcx=Oop [48]=Oop rsi=Oop off=3941}
                                                ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@94 (line 575)
                                                ;   {runtime_call}
  0x00007fab7414fba5: nop
  0x00007fab7414fba6: nop
  0x00007fab7414fba7: mov    0x2c0(%r15),%rax
  0x00007fab7414fbae: movabs $0x0,%r10
  0x00007fab7414fbb8: mov    %r10,0x2c0(%r15)
  0x00007fab7414fbbf: movabs $0x0,%r10
  0x00007fab7414fbc9: mov    %r10,0x2c8(%r15)
  0x00007fab7414fbd0: add    $0x50,%rsp
  0x00007fab7414fbd4: pop    %rbp
  0x00007fab7414fbd5: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7414fbda: hlt    
  0x00007fab7414fbdb: hlt    
  0x00007fab7414fbdc: hlt    
  0x00007fab7414fbdd: hlt    
  0x00007fab7414fbde: hlt    
  0x00007fab7414fbdf: hlt    
[Stub Code]
  0x00007fab7414fbe0: nop                       ;   {no_reloc}
  0x00007fab7414fbe1: nop
  0x00007fab7414fbe2: nop
  0x00007fab7414fbe3: nop
  0x00007fab7414fbe4: nop
  0x00007fab7414fbe5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414fbef: jmpq   0x00007fab7414fbef  ;   {runtime_call}
  0x00007fab7414fbf4: nop
  0x00007fab7414fbf5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414fbff: jmpq   0x00007fab7414fbff  ;   {runtime_call}
  0x00007fab7414fc04: nop
  0x00007fab7414fc05: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7414fc0f: jmpq   0x00007fab7414fc0f  ;   {runtime_call}
[Exception Handler]
  0x00007fab7414fc14: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab7414fc19: mov    %rsp,-0x28(%rsp)
  0x00007fab7414fc1e: sub    $0x80,%rsp
  0x00007fab7414fc25: mov    %rax,0x78(%rsp)
  0x00007fab7414fc2a: mov    %rcx,0x70(%rsp)
  0x00007fab7414fc2f: mov    %rdx,0x68(%rsp)
  0x00007fab7414fc34: mov    %rbx,0x60(%rsp)
  0x00007fab7414fc39: mov    %rbp,0x50(%rsp)
  0x00007fab7414fc3e: mov    %rsi,0x48(%rsp)
  0x00007fab7414fc43: mov    %rdi,0x40(%rsp)
  0x00007fab7414fc48: mov    %r8,0x38(%rsp)
  0x00007fab7414fc4d: mov    %r9,0x30(%rsp)
  0x00007fab7414fc52: mov    %r10,0x28(%rsp)
  0x00007fab7414fc57: mov    %r11,0x20(%rsp)
  0x00007fab7414fc5c: mov    %r12,0x18(%rsp)
  0x00007fab7414fc61: mov    %r13,0x10(%rsp)
  0x00007fab7414fc66: mov    %r14,0x8(%rsp)
  0x00007fab7414fc6b: mov    %r15,(%rsp)
  0x00007fab7414fc6f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab7414fc79: movabs $0x7fab7414fc19,%rsi  ;   {internal_word}
  0x00007fab7414fc83: mov    %rsp,%rdx
  0x00007fab7414fc86: and    $0xfffffffffffffff0,%rsp
  0x00007fab7414fc8a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7414fc8f: hlt    
[Deopt Handler Code]
  0x00007fab7414fc90: movabs $0x7fab7414fc90,%r10  ;   {section_word}
  0x00007fab7414fc9a: push   %r10
  0x00007fab7414fc9c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7414fca1: hlt    
  0x00007fab7414fca2: hlt    
  0x00007fab7414fca3: hlt    
  0x00007fab7414fca4: hlt    
  0x00007fab7414fca5: hlt    
  0x00007fab7414fca6: hlt    
  0x00007fab7414fca7: hlt    
<nmethod compile_id='126' compiler='C1' level='3' entry='0x00007fab7414ec40' size='5936' address='0x00007fab7414ea50' relocation_offset='312' insts_offset='496' stub_offset='4496' scopes_data_offset='4704' scopes_pcs_offset='5088' dependencies_offset='5872' nul_chk_table_offset='5880' metadata_offset='4696' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='584' backedge_count='3' iicount='584' stamp='0.500'/>
<writer thread='140373948942080'/>
[Loaded java.util.HashMap$EntryIterator from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/Integer.intValue  [0x00007fab74150300, 0x00007fab74150410]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab6194cf00} &apos;intValue&apos; &apos;()I&apos; in &apos;java/lang/Integer&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab74150300: mov    0x8(%rsi),%r10d
  0x00007fab74150304: shl    $0x3,%r10
  0x00007fab74150308: cmp    %rax,%r10
  0x00007fab7415030b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74150311: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7415031c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74150320: mov    %eax,-0x14000(%rsp)
  0x00007fab74150327: push   %rbp
  0x00007fab74150328: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::intValue@0 (line 893)

  0x00007fab7415032c: mov    0xc(%rsi),%eax     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::intValue@1 (line 893)

  0x00007fab7415032f: add    $0x30,%rsp
  0x00007fab74150333: pop    %rbp
  0x00007fab74150334: test   %eax,0x1b691dc6(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7415033a: retq   
  0x00007fab7415033b: nop
  0x00007fab7415033c: nop
  0x00007fab7415033d: 
<writer thread='140373948942080'/>
[Loaded java.util.ServiceLoader from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
mov    0x2c0(%r15),%rax
  0x00007fab74150344: movabs $0x0,%r10
  0x00007fab7415034e: mov    %r10,0x2c0(%r15)
  0x00007fab74150355: movabs $0x0,%r10
  0x00007fab7415035f: mov    %r10,0x2c8(%r15)
  0x00007fab74150366: add    $0x30,%rsp
  0x00007fab7415036a: pop    %rbp
  0x00007fab7415036b: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74150370: hlt    
  0x00007fab74150371: hlt    
  0x00007fab74150372: hlt    
  0x00007fab74150373: hlt    
  0x00007fab74150374: hlt    
  0x00007fab74150375: hlt    
  0x00007fab74150376: hlt    
  0x00007fab74150377: hlt    
  0x00007fab74150378: hlt    
  0x00007fab74150379: hlt    
  0x00007fab7415037a: hlt    
  0x00007fab7415037b: hlt    
  0x00007fab7415037c: hlt    
  0x00007fab7415037d: hlt    
  0x00007fab7415037e: hlt    
  0x00007fab7415037f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74150380: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74150385: mov    %rsp,-0x28(%rsp)
  0x00007fab7415038a: sub    $0x80,%rsp
  0x00007fab74150391: mov    %rax,0x78(%rsp)
  0x00007fab74150396: mov    %rcx,0x70(%rsp)
  0x00007fab7415039b: mov    %rdx,0x68(%rsp)
  0x00007fab741503a0: mov    %rbx,0x60(%rsp)
  0x00007fab741503a5: mov    %rbp,0x50(%rsp)
  0x00007fab741503aa: mov    %rsi,0x48(%rsp)
  0x00007fab741503af: mov    %rdi,0x40(%rsp)
  0x00007fab741503b4: mov    %r8,0x38(%rsp)
  0x00007fab741503b9: mov    %r9,0x30(%rsp)
  0x00007fab741503be: mov    %r10,0x28(%rsp)
  0x00007fab741503c3: mov    %r11,0x20(%rsp)
  0x00007fab741503c8: mov    %r12,0x18(%rsp)
  0x00007fab741503cd: mov    %r13,0x10(%rsp)
  0x00007fab741503d2: mov    %r14,0x8(%rsp)
  0x00007fab741503d7: mov    %r15,(%rsp)
  0x00007fab741503db: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741503e5: movabs $0x7fab74150385,%rsi  ;   {internal_word}
  0x00007fab741503ef: mov    %rsp,%rdx
  0x00007fab741503f2: and    $0xfffffffffffffff0,%rsp
  0x00007fab741503f6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741503fb: hlt    
[Deopt Handler Code]
  0x00007fab741503fc: movabs $0x7fab741503fc,%r10  ;   {section_word}
  0x00007fab74150406: push   %r10
  0x00007fab74150408: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7415040d: hlt    
  0x00007fab7415040e: hlt    
  0x00007fab7415040f: hlt    
<nmethod compile_id='125' compiler='C1' level='1' entry='0x00007fab74150300' size='736' address='0x00007fab74150190' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/lang/Integer intValue ()I' bytes='5' count='206' iicount='206' stamp='0.501'/>
<writer thread='140373948942080'/>
[Loaded java.util.ServiceLoader$LazyIterator from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.ServiceLoader$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/CharacterDataLatin1.toUpperCase  [0x00007fab74150620, 0x00007fab741508f0]  720 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61a8c8b8} &apos;
<writer thread='140373948942080'/>
[Loaded java.util.LinkedHashMap$LinkedEntrySet from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rsi:rsi   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x00007fab74150620: mov    0x8(%rsi),%r10d
  0x00007fab74150624: shl    $0x3,%r10
  0x00007fab74150628: cmp    %rax,%r10
  0x00007fab7415062b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74150631: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7415063c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74150640: mov    %eax,-0x14000(%rsp)
  0x00007fab74150647: push   %rbp
  0x00007fab74150648: sub    $0x40,%rsp
  0x00007fab7415064c: movabs $0x7fab61ba0500,%rax  ;   {metadata(method data for {method} {0x00007fab61a8c8b8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab74150656: mov    0xfc(%rax),%edi
  0x00007fab7415065c: add    $0x8,%edi
  0x00007fab7415065f: mov    %edi,0xfc(%rax)
  0x00007fab74150665: movabs $0x7fab61a8c8b8,%rax  ;   {metadata({method} {0x00007fab61a8c8b8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab7415066f: and    $0x1ff8,%edi
  0x00007fab74150675: cmp    $0x0,%edi
  0x00007fab74150678: je     0x00007fab741507ea  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@0 (line 145)

  0x00007fab7415067e: movabs $0x7fab61ba0500,%rax  ;   {metadata(method data for {method} {0x00007fab61a8c8b8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab74150688: movabs $0x7c0035d98,%r10  ;   {metadata(&apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab74150692: mov    %r10,0x140(%rax)
  0x00007fab74150699: addq   $0x1,0x148(%rax)
  0x00007fab741506a1: movabs $0x7fab61b69628,%rax  ;   {metadata(method data for {method} {0x00007fab61a8be08} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab741506ab: mov    0xfc(%rax),%esi
  0x00007fab741506b1: add    $0x8,%esi
  0x00007fab741506b4: mov    %esi,0xfc(%rax)
  0x00007fab741506ba: movabs $0x7fab61a8be08,%rax  ;   {metadata({method} {0x00007fab61a8be08} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab741506c4: and    $0x7ffff8,%esi
  0x00007fab741506ca: cmp    $0x0,%esi
  0x00007fab741506cd: je     0x00007fab74150801
  0x00007fab741506d3: mov    %rdx,%rax
  0x00007fab741506d6: and    $0xffff,%eax
  0x00007fab741506dc: movabs $0x670bc4928,%rsi  ;   {oop([I)}
  0x00007fab741506e6: movslq %eax,%rdi
  0x00007fab741506e9: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x00007fab74150818
  0x00007fab741506ec: jae    0x00007fab74150822
  0x00007fab741506f2: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)

  0x00007fab741506f6: mov    %rax,%rsi
  0x00007fab741506f9: and    $0x10000,%esi
  0x00007fab741506ff: cmp    $0x0,%esi
  0x00007fab74150702: movabs $0x7fab61ba0500,%rsi  ;   {metadata(method data for {method} {0x00007fab61a8c8b8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab7415070c: movabs $0x1c8,%rdi
  0x00007fab74150716: je     0x00007fab74150726
  0x00007fab7415071c: movabs $0x1d8,%rdi
  0x00007fab74150726: mov    (%rsi,%rdi,1),%rbx
  0x00007fab7415072a: lea    0x1(%rbx),%rbx
  0x00007fab7415072e: mov    %rbx,(%rsi,%rdi,1)
  0x00007fab74150732: je     0x00007fab741507db  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@12 (line 148)

  0x00007fab74150738: mov    %rax,%rsi
  0x00007fab7415073b: and    $0x7fc0000,%esi
  0x00007fab74150741: cmp    $0x7fc0000,%esi
  0x00007fab74150747: movabs $0x7fab61ba0500,%rsi  ;   {metadata(method data for {method} {0x00007fab61a8c8b8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab74150751: movabs $0x1e8,%rdi
  0x00007fab7415075b: je     0x00007fab7415076b
  0x00007fab74150761: movabs $0x1f8,%rdi
  0x00007fab7415076b: mov    (%rsi,%rdi,1),%rbx
  0x00007fab7415076f: lea    0x1(%rbx),%rbx
  0x00007fab74150773: mov    %rbx,(%rsi,%rdi,1)
  0x00007fab74150777: jne    0x00007fab741507c3  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@21 (line 149)

  0x00007fab7415077d: cmp    $0xb5,%edx
  0x00007fab74150783: movabs $0x7fab61ba0500,%rax  ;   {metadata(method data for {method} {0x00007fab61a8c8b8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab7415078d: movabs $0x220,%rsi
  0x00007fab74150797: jne    0x00007fab741507a7
  0x00007fab7415079d: movabs $0x230,%rsi
  0x00007fab741507a7: mov    (%rax,%rsi,1),%rdi
  0x00007fab741507ab: lea    0x1(%rdi),%rdi
  0x00007fab741507af: mov    %rdi,(%rax,%rsi,1)
  0x00007fab741507b3: jne    0x00007fab741507db  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@44 (line 152)

  0x00007fab741507b9: mov    $0x39c,%edx
  0x00007fab741507be: jmpq   0x00007fab741507db  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@51 (line 156)

  0x00007fab741507c3: shl    $0x5,%eax
  0x00007fab741507c6: sar    $0x17,%eax
  0x00007fab741507c9: sub    %eax,%edx
  0x00007fab741507cb: movabs $0x7fab61ba0500,%rax  ;   {metadata(method data for {method} {0x00007fab61a8c8b8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fab741507d5: incl   0x208(%rax)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@37 (line 152)

  0x00007fab741507db: mov    %rdx,%rax
  0x00007fab741507de: add    $0x40,%rsp
  0x00007fab741507e2: pop    %rbp
  0x00007fab741507e3: test   %eax,0x1b691917(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741507e9: retq   
  0x00007fab741507ea: mov    %rax,0x8(%rsp)
  0x00007fab741507ef: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741507f7: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=476}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@-1 (line 145)
                                                ;   {runtime_call}
  0x00007fab741507fc: jmpq   0x00007fab7415067e
  0x00007fab74150801: mov    %rax,0x8(%rsp)
  0x00007fab74150806: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7415080e: callq  0x00007fab741005e0  ; OopMap{off=499}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x00007fab74150813: jmpq   0x00007fab741506d3
  0x00007fab74150818: callq  0x00007fab740fc000  ; OopMap{rsi=Oop off=509}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x00007fab7415081d: callq  0x00007fab740fc000  ; OopMap{rsi=Oop off=514}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x00007fab74150822: mov    %rax,(%rsp)
  0x00007fab74150826: callq  0x00007fab740fb940  ; OopMap{rsi=Oop off=523}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x00007fab7415082b: nop
  0x00007fab7415082c: nop
  0x00007fab7415082d: mov    0x2c0(%r15),%rax
  0x00007fab74150834: movabs $0x0,%r10
  0x00007fab7415083e: mov    %r10,0x2c0(%r15)
  0x00007fab74150845: movabs $0x0,%r10
  0x00007fab7415084f: mov    %r10,0x2c8(%r15)
  0x00007fab74150856: add    $0x40,%rsp
  0x00007fab7415085a: pop    %rbp
  0x00007fab7415085b: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x00007fab74150860: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74150865: mov    %rsp,-0x28(%rsp)
  0x00007fab7415086a: sub    $0x80,%rsp
  0x00007fab74150871: mov    %rax,0x78(%rsp)
  0x00007fab74150876: mov    %rcx,0x70(%rsp)
  0x00007fab7415087b: mov    %rdx,0x68(%rsp)
  0x00007fab74150880: mov    %rbx,0x60(%rsp)
  0x00007fab74150885: mov    %rbp,0x50(%rsp)
  0x00007fab7415088a: mov    %rsi,0x48(%rsp)
  0x00007fab7415088f: mov    %rdi,0x40(%rsp)
  0x00007fab74150894: mov    %r8,0x38(%rsp)
  0x00007fab74150899: mov    %r9,0x30(%rsp)
  0x00007fab7415089e: mov    %r10,0x28(%rsp)
  0x00007fab741508a3: mov    %r11,0x20(%rsp)
  0x00007fab741508a8: mov    %r12,0x18(%rsp)
  0x00007fab741508ad: mov    %r13,0x10(%rsp)
  0x00007fab741508b2: mov    %r14,0x8(%rsp)
  0x00007fab741508b7: mov    %r15,(%rsp)
  0x00007fab741508bb: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741508c5: movabs $0x7fab74150865,%rsi  ;   {internal_word}
  0x00007fab741508cf: mov    %rsp,%rdx
  0x00007fab741508d2: and    $0xfffffffffffffff0,%rsp
  0x00007fab741508d6: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741508db: hlt    
[Deopt Handler Code]
  0x00007fab741508dc: movabs $0x7fab741508dc,%r10  ;   {section_word}
  0x00007fab741508e6: push   %r10
  0x00007fab741508e8: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab741508ed: hlt    
  0x00007fab741508ee: hlt    
  0x00007fab741508ef: hlt    
<nmethod compile_id='105' compiler='C1' level='3' entry='0x00007fab74150620' size='1520' address='0x00007fab74150490' relocation_offset='312' insts_offset='400' stub_offset='976' scopes_data_offset='1144' scopes_pcs_offset='1264' dependencies_offset='1488' nul_chk_table_offset='1496' metadata_offset='1120' method='java/lang/CharacterDataLatin1 toUpperCase (I)I' bytes='53' count='422' iicount='422' stamp='0.502'/>
<writer thread='140373948942080'/>
[Loaded java.util.LinkedHashMap$LinkedHashIterator from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$LinkedEntryIterator from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$BootClassPathHolder from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/String.equalsIgnoreCase
<writer thread='140373948942080'/>
[Loaded sun.misc.Launcher$BootClassPathHolder$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
  [0x00007fab74150c20, 0x00007fab74150f08]  744 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61896518} &apos;equalsIgnoreCase&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fab74150c20: mov    0x8(%rsi),%r10d
  0x00007fab74150c24: shl    $0x3,%r10
  0x00007fab74150c28: cmp    %rax,%r10
  0x00007fab74150c2b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74150c31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74150c3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74150c40: mov    %eax,-0x14000(%rsp)
  0x00007fab74150c47: push   %rbp
  0x00007fab74150c48: sub    $0x40,%rsp
  0x00007fab74150c4c: mov    %rdx,%r8
  0x00007fab74150c4f: movabs $0x7fab61ba3758,%rdx  ;   {metadata(method data for {method} {0x00007fab61896518} &apos;equalsIgnoreCase&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74150c59: mov    0xfc(%rdx),%ecx
  0x00007fab74150c5f: add    $0x8,%ecx
  0x00007fab74150c62: mov    %ecx,0xfc(%rdx)
  0x00007fab74150c68: movabs $0x7fab61896518,%rdx  ;   {metadata({method} {0x00007fab61896518} &apos;equalsIgnoreCase&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74150c72: and    $0x1ff8,%ecx
  0x00007fab74150c78: cmp    $0x0,%ecx
  0x00007fab74150c7b: je     0x00007fab74150ded  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@0 (line 1106)

  0x00007fab74150c81: cmp    %r8,%rsi
  0x00007fab74150c84: movabs $0x7fab61ba3758,%rdx  ;   {metadata(method data for {method} {0x00007fab61896518} &apos;equalsIgnoreCase&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74150c8e: movabs $0x130,%rcx
  0x00007fab74150c98: jne    0x00007fab74150ca8
  0x00007fab74150c9e: movabs $0x140,%rcx
  0x00007fab74150ca8: mov    (%rdx,%rcx,1),%r9
  0x00007fab74150cac: lea    0x1(%r9),%r9
  0x00007fab74150cb0: mov    %r9,(%rdx,%rcx,1)
  0x00007fab74150cb4: je     0x00007fab74150dc9  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@2 (line 1106)

  0x00007fab74150cba: cmp    $0x0,%r8
  0x00007fab74150cbe: movabs $0x7fab61ba3758,%rdx  ;   {metadata(method data for {method} {0x00007fab61896518} &apos;equalsIgnoreCase&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74150cc8: movabs $0x168,%rcx
  0x00007fab74150cd2: je     0x00007fab74150ce2
  0x00007fab74150cd8: movabs $0x178,%rcx
  0x00007fab74150ce2: mov    (%rdx,%rcx,1),%r9
  0x00007fab74150ce6: lea    0x1(%r9),%r9
  0x00007fab74150cea: mov    %r9,(%rdx,%rcx,1)
  0x00007fab74150cee: je     0x00007fab74150da5  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@10 (line 1106)

  0x00007fab74150cf4: mov    0xc(%r8),%edx      ; implicit exception: dispatches to 0x00007fab74150e04
  0x00007fab74150cf8: shl    $0x3,%rdx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@14 (line 1106)

  0x00007fab74150cfc: mov    0xc(%rdx),%edx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@17 (line 1106)
                                                ; implicit exception: dispatches to 0x00007fab74150e09
  0x00007fab74150cff: mov    0xc(%rsi),%ecx
  0x00007fab74150d02: shl    $0x3,%rcx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@19 (line 1106)

  0x00007fab74150d06: mov    0xc(%rcx),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@22 (line 1106)
                                                ; implicit exception: dispatches to 0x00007fab74150e0e
  0x00007fab74150d09: cmp    %edi,%edx
  0x00007fab74150d0b: movabs $0x7fab61ba3758,%rdx  ;   {metadata(method data for {method} {0x00007fab61896518} &apos;equalsIgnoreCase&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74150d15: movabs $0x188,%rcx
  0x00007fab74150d1f: jne    0x00007fab74150d2f
  0x00007fab74150d25: movabs $0x198,%rcx
  0x00007fab74150d2f: mov    (%rdx,%rcx,1),%r9
  0x00007fab74150d33: lea    0x1(%r9),%r9
  0x00007fab74150d37: mov    %r9,(%rdx,%rcx,1)
  0x00007fab74150d3b: jne    0x00007fab74150da5  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@23 (line 1106)

  0x00007fab74150d41: mov    %rsi,%rdx
  0x00007fab74150d44: movabs $0x7fab61ba3758,%rcx  ;   {metadata(method data for {method} {0x00007fab61896518} &apos;equalsIgnoreCase&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74150d4e: addq   $0x1,0x1a8(%rcx)
  0x00007fab74150d56: mov    $0x1,%edx
  0x00007fab74150d5b: mov    $0x0,%ecx
  0x00007fab74150d60: mov    $0x0,%r9d          ;*invokevirtual regionMatches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@36 (line 1109)

  0x00007fab74150d66: nop
  0x00007fab74150d67: callq  0x00007fab74047d60  ; OopMap{off=332}
                                                ;*invokevirtual regionMatches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@36 (line 1109)
                                                ;   {optimized virtual_call}
  0x00007fab74150d6c: cmp    $0x0,%eax
  0x00007fab74150d6f: movabs $0x7fab61ba3758,%rax  ;   {metadata(method data for {method} {0x00007fab61896518} &apos;equalsIgnoreCase&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74150d79: movabs $0x240,%rsi
  0x00007fab74150d83: je     0x00007fab74150d93
  0x00007fab74150d89: movabs $0x250,%rsi
  0x00007fab74150d93: mov    (%rax,%rsi,1),%rdi
  0x00007fab74150d97: lea    0x1(%rdi),%rdi
  0x00007fab74150d9b: mov    %rdi,(%rax,%rsi,1)
  0x00007fab74150d9f: jne    0x00007fab74150daf  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@39 (line 1109)

  0x00007fab74150da5: mov    $0x0,%eax
  0x00007fab74150daa: jmpq   0x00007fab74150dde  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@47 (line 1106)

  0x00007fab74150daf: movabs $0x7fab61ba3758,%rax  ;   {metadata(method data for {method} {0x00007fab61896518} &apos;equalsIgnoreCase&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74150db9: incl   0x260(%rax)
  0x00007fab74150dbf: mov    $0x1,%eax
  0x00007fab74150dc4: jmpq   0x00007fab74150dde  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@43 (line 1109)

  0x00007fab74150dc9: movabs $0x7fab61ba3758,%rax  ;   {metadata(method data for {method} {0x00007fab61896518} &apos;equalsIgnoreCase&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74150dd3: incl   0x150(%rax)
  0x00007fab74150dd9: mov    $0x1,%eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@6 (line 1106)

  0x00007fab74150dde: and    $0x1,%eax
  0x00007fab74150de1: add    $0x40,%rsp
  0x00007fab74150de5: pop    %rbp
  0x00007fab74150de6: test   %eax,0x1b691314(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74150dec: retq   
  0x00007fab74150ded: mov    %rdx,0x8(%rsp)
  0x00007fab74150df2: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74150dfa: callq  0x00007fab741005e0  ; OopMap{rsi=Oop r8=Oop off=479}
                                                ;*synchronization entry
                                                ; - java.lang.String::equalsIgnoreCase@-1 (line 1106)
                                                ;   {runtime_call}
  0x00007fab74150dff: jmpq   0x00007fab74150c81
  0x00007fab74150e04: callq  0x00007fab740fc000  ; OopMap{r8=Oop rsi=Oop off=489}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@14 (line 1106)
                                                ;   {runtime_call}
  0x00007fab74150e09: callq  0x00007fab740fc000  ; OopMap{r8=Oop rsi=Oop off=494}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@17 (line 1106)
                                                ;   {runtime_call}
  0x00007fab74150e0e: callq  0x00007fab740fc000  ; OopMap{r8=Oop rsi=Oop off=499}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@22 (line 1106)
                                                ;   {runtime_call}
  0x00007fab74150e13: nop
  0x00007fab74150e14: nop
  0x00007fab74150e15: mov    0x2c0(%r15),%rax
  0x00007fab74150e1c: movabs $0x0,%r10
  0x00007fab74150e26: mov    %r10,0x2c0(%r15)
  0x00007fab74150e2d: movabs $0x0,%r10
  0x00007fab74150e37: mov    %r10,0x2c8(%r15)
  0x00007fab74150e3e: add    $0x40,%rsp
  0x00007fab74150e42: pop    %rbp
  0x00007fab74150e43: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74150e48: hlt    
  0x00007fab74150e49: hlt    
  0x00007fab74150e4a: hlt    
  0x00007fab74150e4b: hlt    
  0x00007fab74150e4c: hlt    
  0x00007fab74150e4d: hlt    
  0x00007fab74150e4e: hlt    
  0x00007fab74150e4f: hlt    
  0x00007fab74150e50: hlt    
  0x00007fab74150e51: hlt    
  0x00007fab74150e52: hlt    
  0x00007fab74150e53: hlt    
  0x00007fab74150e54: hlt    
  0x00007fab74150e55: hlt    
  0x00007fab74150e56: hlt    
  0x00007fab74150e57: hlt    
  0x00007fab74150e58: hlt    
  0x00007fab74150e59: hlt    
  0x00007fab74150e5a: hlt    
  0x00007fab74150e5b: hlt    
  0x00007fab74150e5c: hlt    
  0x00007fab74150e5d: hlt    
  0x00007fab74150e5e: hlt    
  0x00007fab74150e5f: hlt    
[Stub Code]
  0x00007fab74150e60: nop                       ;   {no_reloc}
  0x00007fab74150e61: nop
  0x00007fab74150e62: nop
  0x00007fab74150e63: nop
  0x00007fab74150e64: nop
  0x00007fab74150e65: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74150e6f: jmpq   0x00007fab74150e6f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74150e74: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74150e79: mov    %rsp,-0x28(%rsp)
  0x00007fab74150e7e: sub    $0x80,%rsp
  0x00007fab74150e85: mov    %rax,0x78(%rsp)
  0x00007fab74150e8a: mov    %rcx,0x70(%rsp)
  0x00007fab74150e8f: mov    %rdx,0x68(%rsp)
  0x00007fab74150e94: mov    %rbx,0x60(%rsp)
  0x00007fab74150e99: mov    %rbp,0x50(%rsp)
  0x00007fab74150e9e: mov    %rsi,0x48(%rsp)
  0x00007fab74150ea3: mov    %rdi,0x40(%rsp)
  0x00007fab74150ea8: mov    %r8,0x38(%rsp)
  0x00007fab74150ead: mov    %r9,0x30(%rsp)
  0x00007fab74150eb2: mov    %r10,0x28(%rsp)
  0x00007fab74150eb7: mov    %r11,0x20(%rsp)
  0x00007fab74150ebc: mov    %r12,0x18(%rsp)
  0x00007fab74150ec1: mov    %r13,0x10(%rsp)
  0x00007fab74150ec6: mov    %r14,0x8(%rsp)
  0x00007fab74150ecb: mov    %r15,(%rsp)
  0x00007fab74150ecf: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74150ed9: movabs $0x7fab74150e79,%rsi  ;   {internal_word}
  0x00007fab74150ee3: mov    %rsp,%rdx
  0x00007fab74150ee6: and    $0xfffffffffffffff0,%rsp
  0x00007fab74150eea: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74150eef: hlt    
[Deopt Handler Code]
  0x00007fab74150ef0: movabs $0x7fab74150ef0,%r10  ;   {section_word}
  0x00007fab74150efa: push   %r10
  0x00007fab74150efc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74150f01: hlt    
  0x00007fab74150f02: hlt    
  0x00007fab74150f03: hlt    
  0x00007fab74150f04: hlt    
  0x00007fab74150f05: hlt    
  0x00007fab74150f06: hlt    
  0x00007fab74150f07: hlt    
<nmethod compile_id='116' compiler='C1' level='3' entry='0x00007fab74150c20' size='1640' address='0x00007fab74150a90' relocation_offset='312' insts_offset='400' stub_offset='976' scopes_data_offset='1152' scopes_pcs_offset='1280' dependencies_offset='1600' nul_chk_table_offset='1608' metadata_offset='1144' method='java/lang/String equalsIgnoreCase (Ljava/lang/String;)Z' bytes='48' count='397' iicount='397' stamp='0.504'/>
<writer thread='140373948942080'/>
<task_queued compile_id='128' method='java/lang/String indexOf (Ljava/lang/String;I)I' bytes='25' count='256' iicount='256' level='3' stamp='0.504' comment='tiered' hot_count='256'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/String.startsWith  [0x00007fab74151280, 0x00007fab74151408]  392 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61896c80} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab74151280: mov    0x8(%rsi),%r10d
  0x00007fab74151284: shl    $0x3,%r10
  0x00007fab74151288: cmp    %rax,%r10
  0x00007fab7415128b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74151291: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7415129c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab741512a0: mov    %eax,-0x14000(%rsp)
  0x00007fab741512a7: push   %rbp
  0x00007fab741512a8: sub    $0x30,%rsp
  0x00007fab741512ac: movabs $0x7fab61ba5af8,%rcx  ;   {metadata(method data for {method} {0x00007fab61896c80} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741512b6: mov    0xfc(%rcx),%edi
  0x00007fab741512bc: add    $0x8,%edi
  0x00007fab741512bf: mov    %edi,0xfc(%rcx)
  0x00007fab741512c5: movabs $0x7fab61896c80,%rcx  ;   {metadata({method} {0x00007fab61896c80} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741512cf: and    $0x1ff8,%edi
  0x00007fab741512d5: cmp    $0x0,%edi
  0x00007fab741512d8: je     0x00007fab74151313  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@0 (line 1434)

  0x00007fab741512de: mov    %rsi,%rcx
  0x00007fab741512e1: movabs $0x7fab61ba5af8,%rdi  ;   {metadata(method data for {method} {0x00007fab61896c80} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741512eb: addq   $0x1,0x130(%rdi)
  0x00007fab741512f3: mov    $0x0,%ecx          ;*invokevirtual startsWith {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@3 (line 1434)

  0x00007fab741512f8: nop
  0x00007fab741512f9: nop
  0x00007fab741512fa: nop
  0x00007fab741512fb: nop
  0x00007fab741512fc: nop
  0x00007fab741512fd: nop
  0x00007fab741512fe: nop
  0x00007fab741512ff: callq  0x00007fab74047d60  ; OopMap{off=132}
                                                ;*invokevirtual startsWith {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@3 (line 1434)
                                                ;   {optimized virtual_call}
  0x00007fab74151304: and    $0x1,%eax
  0x00007fab74151307: add    $0x30,%rsp
  0x00007fab7415130b: pop    %rbp
  0x00007fab7415130c: test   %eax,0x1b690dee(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74151312: retq   
  0x00007fab74151313: mov    %rcx,0x8(%rsp)
  0x00007fab74151318: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74151320: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop off=165}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1434)
                                                ;   {runtime_call}
  0x00007fab74151325: jmp    0x00007fab741512de
  0x00007fab74151327: nop
  0x00007fab74151328: nop
  0x00007fab74151329: mov    0x2c0(%r15),%rax
  0x00007fab74151330: movabs $0x0,%r10
  0x00007fab7415133a: mov    %r10,0x2c0(%r15)
  0x00007fab74151341: movabs $0x0,%r10
  0x00007fab7415134b: mov    %r10,0x2c8(%r15)
  0x00007fab74151352: add    $0x30,%rsp
  0x00007fab74151356: pop    %rbp
  0x00007fab74151357: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7415135c: hlt    
  0x00007fab7415135d: hlt    
  0x00007fab7415135e: hlt    
  0x00007fab7415135f: hlt    
[Stub Code]
  0x00007fab74151360: nop                       ;   {no_reloc}
  0x00007fab74151361: nop
  0x00007fab74151362: nop
  0x00007fab74151363: nop
  0x00007fab74151364: nop
  0x00007fab74151365: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7415136f: jmpq   0x00007fab7415136f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74151374: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74151379: mov    %rsp,-0x28(%rsp)
  0x00007fab7415137e: sub    $0x80,%rsp
  0x00007fab74151385: mov    %rax,0x78(%rsp)
  0x00007fab7415138a: mov    %rcx,0x70(%rsp)
  0x00007fab7415138f: mov    %rdx,0x68(%rsp)
  0x00007fab74151394: mov    %rbx,0x60(%rsp)
  0x00007fab74151399: mov    %rbp,0x50(%rsp)
  0x00007fab7415139e: mov    %rsi,0x48(%rsp)
  0x00007fab741513a3: mov    %rdi,0x40(%rsp)
  0x00007fab741513a8: mov    %r8,0x38(%rsp)
  0x00007fab741513ad: mov    %r9,0x30(%rsp)
  0x00007fab741513b2: mov    %r10,0x28(%rsp)
  0x00007fab741513b7: mov    %r11,0x20(%rsp)
  0x00007fab741513bc: mov    %r12,0x18(%rsp)
  0x00007fab741513c1: mov    %r13,0x10(%rsp)
  0x00007fab741513c6: mov    %r14,0x8(%rsp)
  0x00007fab741513cb: mov    %r15,(%rsp)
  0x00007fab741513cf: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741513d9: movabs $0x7fab74151379,%rsi  ;   {internal_word}
  0x00007fab741513e3: mov    %rsp,%rdx
  0x00007fab741513e6: and    $0xfffffffffffffff0,%rsp
  0x00007fab741513ea: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741513ef: hlt    
[Deopt Handler Code]
  0x00007fab741513f0: movabs $0x7fab741513f0,%r10  ;   {section_word}
  0x00007fab741513fa: push   %r10
  0x00007fab741513fc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74151401: hlt    
  0x00007fab74151402: hlt    
  0x00007fab74151403: hlt    
  0x00007fab74151404: hlt    
  0x00007fab74151405: hlt    
  0x00007fab74151406: hlt    
  0x00007fab74151407: hlt    
<nmethod compile_id='127' compiler='C1' level='3' entry='0x00007fab74151280' size='912' address='0x00007fab74151110' relocation_offset='312' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='808' dependencies_offset='904' metadata_offset='760' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='386' iicount='386' stamp='0.531'/>
<writer thread='140373948942080'/>
----------------------------------------------------------------------
java/lang/Thread.currentThread  [0x00007fab74151660, 0x00007fab74151848]  488 bytes
[Entry Point]
  # {method} {0x00007fab618c40b8} &apos;currentThread&apos; &apos;()Ljava/lang/Thread;&apos; in &apos;java/lang/Thread&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fab74151660: mov    0x8(%rsi),%r10d
  0x00007fab74151664: shl    $0x3,%r10
  0x00007fab74151668: cmp    %r10,%rax
  0x00007fab7415166b: je     0x00007fab74151678
  0x00007fab74151671: jmpq   0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74151676: xchg   %ax,%ax
[Verified Entry Point]
  0x00007fab74151678: mov    %eax,-0x14000(%rsp)
  0x00007fab7415167f: push   %rbp
  0x00007fab74151680: mov    %rsp,%rbp
  0x00007fab74151683: sub    $0x40,%rsp
  0x00007fab74151687: movabs $0x670b81c08,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/Thread&apos;)}
  0x00007fab74151691: mov    %r14,0x30(%rsp)
  0x00007fab74151696: lea    0x30(%rsp),%r14
  0x00007fab7415169b: mov    %r14,%rsi          ; OopMap{[48]=Oop off=62}
  0x00007fab7415169e: movabs $0x7fab7415169e,%r10  ;   {section_word}
  0x00007fab741516a8: mov    %r10,0x1c8(%r15)
  0x00007fab741516af: mov    %rsp,0x1c0(%r15)
  0x00007fab741516b6: cmpb   $0x0,0x1a823317(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab741516bd: je     0x00007fab741516f5
  0x00007fab741516c3: push   %rsi
  0x00007fab741516c4: movabs $0x7fab618c40b8,%rsi  ;   {metadata({method} {0x00007fab618c40b8} &apos;currentThread&apos; &apos;()Ljava/lang/Thread;&apos; in &apos;java/lang/Thread&apos;)}
  0x00007fab741516ce: mov    %r15,%rdi
  0x00007fab741516d1: test   $0xf,%esp
  0x00007fab741516d7: je     0x00007fab741516ef
  0x00007fab741516dd: sub    $0x8,%rsp
  0x00007fab741516e1: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab741516e6: add    $0x8,%rsp
  0x00007fab741516ea: jmpq   0x00007fab741516f4
  0x00007fab741516ef: callq  0x00007fab8e369e60  ;   {runtime_call}
  0x00007fab741516f4: pop    %rsi
  0x00007fab741516f5: lea    0x1e0(%r15),%rdi
  0x00007fab741516fc: movl   $0x4,0x258(%r15)
  0x00007fab74151707: callq  0x00007fab8e07e630  ;   {runtime_call}
  0x00007fab7415170c: vzeroupper 
  0x00007fab7415170f: movl   $0x5,0x258(%r15)
  0x00007fab7415171a: mov    %r15d,%ecx
  0x00007fab7415171d: shr    $0x4,%ecx
  0x00007fab74151720: and    $0xffc,%ecx
  0x00007fab74151726: movabs $0x7fab8f7e1000,%r10  ;   {external_word}
  0x00007fab74151730: mov    %ecx,(%r10,%rcx,1)
  0x00007fab74151734: cmpl   $0x0,0x1a82e27e(%rip)        # 0x00007fab8e97f9bc
                                                ;   {external_word}
  0x00007fab7415173e: jne    0x00007fab74151752
  0x00007fab74151744: cmpl   $0x0,0x30(%r15)
  0x00007fab7415174c: je     0x00007fab74151773
  0x00007fab74151752: mov    %rax,-0x8(%rbp)
  0x00007fab74151756: mov    %r15,%rdi
  0x00007fab74151759: mov    %rsp,%r12
  0x00007fab7415175c: sub    $0x0,%rsp
  0x00007fab74151760: and    $0xfffffffffffffff0,%rsp
  0x00007fab74151764: callq  0x00007fab8e40fc20  ;   {runtime_call}
  0x00007fab74151769: mov    %r12,%rsp
  0x00007fab7415176c: xor    %r12,%r12
  0x00007fab7415176f: mov    -0x8(%rbp),%rax
  0x00007fab74151773: movl   $0x8,0x258(%r15)
  0x00007fab7415177e: cmpl   $0x1,0x2b0(%r15)
  0x00007fab74151789: je     0x00007fab74151825
  0x00007fab7415178f: cmpb   $0x0,0x1a82323e(%rip)        # 0x00007fab8e9749d4
                                                ;   {external_word}
  0x00007fab74151796: je     0x00007fab741517d4
  0x00007fab7415179c: mov    %rax,-0x8(%rbp)
  0x00007fab741517a0: movabs $0x7fab618c40b8,%rsi  ;   {metadata({method} {0x00007fab618c40b8} &apos;currentThread&apos; &apos;()Ljava/lang/Thread;&apos; in &apos;java/lang/Thread&apos;)}
  0x00007fab741517aa: mov    %r15,%rdi
  0x00007fab741517ad: test   $0xf,%esp
  0x00007fab741517b3: je     0x00007fab741517cb
  0x00007fab741517b9: sub    $0x8,%rsp
  0x00007fab741517bd: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab741517c2: add    $0x8,%rsp
  0x00007fab741517c6: jmpq   0x00007fab741517d0
  0x00007fab741517cb: callq  0x00007fab8e369e70  ;   {runtime_call}
  0x00007fab741517d0: mov    -0x8(%rbp),%rax
  0x00007fab741517d4: movabs $0x0,%r10
  0x00007fab741517de: mov    %r10,0x1c0(%r15)
  0x00007fab741517e5: movabs $0x0,%r10
  0x00007fab741517ef: mov    %r10,0x1c8(%r15)
  0x00007fab741517f6: test   %rax,%rax
  0x00007fab741517f9: je     0x00007fab74151802
  0x00007fab741517ff: mov    (%rax),%rax
  0x00007fab74151802: mov    0x38(%r15),%rcx
  0x00007fab74151806: movl   $0x0,0x100(%rcx)
  0x00007fab74151810: leaveq 
  0x00007fab74151811: cmpq   $0x0,0x8(%r15)
  0x00007fab74151819: jne    0x00007fab74151820
  0x00007fab7415181f: retq   
  0x00007fab74151820: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00007fab74151825: mov    %rax,-0x8(%rbp)
  0x00007fab74151829: mov    %rsp,%r12
  0x00007fab7415182c: sub    $0x0,%rsp
  0x00007fab74151830: and    $0xfffffffffffffff0,%rsp
  0x00007fab74151834: callq  0x00007fab8e372120  ;   {runtime_call}
  0x00007fab74151839: mov    %r12,%rsp
  0x00007fab7415183c: xor    %r12,%r12
  0x00007fab7415183f: mov    -0x8(%rbp),%rax
  0x00007fab74151843: jmpq   0x00007fab7415178f
<nmethod compile_id='129' compile_kind='c2n' level='0' entry='0x00007fab74151660' size='888' address='0x00007fab741514d0' relocation_offset='312' consts_offset='888' insts_offset='400' method='java/lang/Thread currentThread ()Ljava/lang/Thread;' bytes='0' count='384' iicount='384' stamp='0.532'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/String.indexOf  [0x00007fab74151a20, 0x00007fab74151be8]  456 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab618975e0} &apos;indexOf&apos; &apos;(Ljava/lang/String;I)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  # parm1:    rcx       = int
  #           [sp+0x60]  (sp of caller)
  0x00007fab74151a20: mov    0x8(%rsi),%r10d
  0x00007fab74151a24: shl    $0x3,%r10
  0x00007fab74151a28: cmp    %rax,%r10
  0x00007fab74151a2b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74151a31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74151a3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74151a40: mov    %eax,-0x14000(%rsp)
  0x00007fab74151a47: push   %rbp
  0x00007fab74151a48: sub    $0x50,%rsp
  0x00007fab74151a4c: mov    %rcx,%rbx
  0x00007fab74151a4f: movabs $0x7fab61ba5d48,%rcx  ;   {metadata(method data for {method} {0x00007fab618975e0} &apos;indexOf&apos; &apos;(Ljava/lang/String;I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74151a59: mov    0xfc(%rcx),%r8d
  0x00007fab74151a60: add    $0x8,%r8d
  0x00007fab74151a64: mov    %r8d,0xfc(%rcx)
  0x00007fab74151a6b: movabs $0x7fab618975e0,%rcx  ;   {metadata({method} {0x00007fab618975e0} &apos;indexOf&apos; &apos;(Ljava/lang/String;I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74151a75: and    $0x1ff8,%r8d
  0x00007fab74151a7c: cmp    $0x0,%r8d
  0x00007fab74151a80: je     0x00007fab74151ad0  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@0 (line 1718)

  0x00007fab74151a86: mov    0xc(%rsi),%esi
  0x00007fab74151a89: shl    $0x3,%rsi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@1 (line 1718)

  0x00007fab74151a8d: mov    0xc(%rsi),%ecx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@9 (line 1718)
                                                ; implicit exception: dispatches to 0x00007fab74151ae4
  0x00007fab74151a90: mov    0xc(%rdx),%r8d     ; implicit exception: dispatches to 0x00007fab74151ae9
  0x00007fab74151a94: shl    $0x3,%r8           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@11 (line 1718)

  0x00007fab74151a98: mov    0xc(%r8),%edi      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@19 (line 1718)
                                                ; implicit exception: dispatches to 0x00007fab74151aee
  0x00007fab74151a9c: movabs $0x7fab61ba5d48,%rdx  ;   {metadata(method data for {method} {0x00007fab618975e0} &apos;indexOf&apos; &apos;(Ljava/lang/String;I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74151aa6: addq   $0x1,0x130(%rdx)
  0x00007fab74151aae: mov    $0x0,%edx
  0x00007fab74151ab3: mov    $0x0,%r9d
  0x00007fab74151ab9: mov    %ebx,(%rsp)        ;*invokestatic indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@21 (line 1718)

  0x00007fab74151abc: nop
  0x00007fab74151abd: nop
  0x00007fab74151abe: nop
  0x00007fab74151abf: callq  0x00007fab74048160  ; OopMap{off=164}
                                                ;*invokestatic indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@21 (line 1718)
                                                ;   {static_call}
  0x00007fab74151ac4: add    $0x50,%rsp
  0x00007fab74151ac8: pop    %rbp
  0x00007fab74151ac9: test   %eax,0x1b690631(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74151acf: retq   
  0x00007fab74151ad0: mov    %rcx,0x8(%rsp)
  0x00007fab74151ad5: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74151add: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop off=194}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1718)
                                                ;   {runtime_call}
  0x00007fab74151ae2: jmp    0x00007fab74151a86
  0x00007fab74151ae4: callq  0x00007fab740fc000  ; OopMap{rdx=Oop rsi=Oop off=201}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@9 (line 1718)
                                                ;   {runtime_call}
  0x00007fab74151ae9: callq  0x00007fab740fc000  ; OopMap{rsi=Oop off=206}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@11 (line 1718)
                                                ;   {runtime_call}
  0x00007fab74151aee: callq  0x00007fab740fc000  ; OopMap{rsi=Oop r8=Oop off=211}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@19 (line 1718)
                                                ;   {runtime_call}
  0x00007fab74151af3: nop
  0x00007fab74151af4: nop
  0x00007fab74151af5: mov    0x2c0(%r15),%rax
  0x00007fab74151afc: movabs $0x0,%r10
  0x00007fab74151b06: mov    %r10,0x2c0(%r15)
  0x00007fab74151b0d: movabs $0x0,%r10
  0x00007fab74151b17: mov    %r10,0x2c8(%r15)
  0x00007fab74151b1e: add    $0x50,%rsp
  0x00007fab74151b22: pop    %rbp
  0x00007fab74151b23: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74151b28: hlt    
  0x00007fab74151b29: hlt    
  0x00007fab74151b2a: hlt    
  0x00007fab74151b2b: hlt    
  0x00007fab74151b2c: hlt    
  0x00007fab74151b2d: hlt    
  0x00007fab74151b2e: hlt    
  0x00007fab74151b2f: hlt    
  0x00007fab74151b30: hlt    
  0x00007fab74151b31: hlt    
  0x00007fab74151b32: hlt    
  0x00007fab74151b33: hlt    
  0x00007fab74151b34: hlt    
  0x00007fab74151b35: hlt    
  0x00007fab74151b36: hlt    
  0x00007fab74151b37: hlt    
  0x00007fab74151b38: hlt    
  0x00007fab74151b39: hlt    
  0x00007fab74151b3a: hlt    
  0x00007fab74151b3b: hlt    
  0x00007fab74151b3c: hlt    
  0x00007fab74151b3d: hlt    
  0x00007fab74151b3e: hlt    
  0x00007fab74151b3f: hlt    
[Stub Code]
  0x00007fab74151b40: nop                       ;   {no_reloc}
  0x00007fab74151b41: nop
  0x00007fab74151b42: nop
  0x00007fab74151b43: nop
  0x00007fab74151b44: nop
  0x00007fab74151b45: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74151b4f: jmpq   0x00007fab74151b4f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74151b54: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74151b59: mov    %rsp,-0x28(%rsp)
  0x00007fab74151b5e: sub    $0x80,%rsp
  0x00007fab74151b65: mov    %rax,0x78(%rsp)
  0x00007fab74151b6a: mov    %rcx,0x70(%rsp)
  0x00007fab74151b6f: mov    %rdx,0x68(%rsp)
  0x00007fab74151b74: mov    %rbx,0x60(%rsp)
  0x00007fab74151b79: mov    %rbp,0x50(%rsp)
  0x00007fab74151b7e: mov    %rsi,0x48(%rsp)
  0x00007fab74151b83: mov    %rdi,0x40(%rsp)
  0x00007fab74151b88: mov    %r8,0x38(%rsp)
  0x00007fab74151b8d: mov    %r9,0x30(%rsp)
  0x00007fab74151b92: mov    %r10,0x28(%rsp)
  0x00007fab74151b97: mov    %r11,0x20(%rsp)
  0x00007fab74151b9c: mov    %r12,0x18(%rsp)
  0x00007fab74151ba1: mov    %r13,0x10(%rsp)
  0x00007fab74151ba6: mov    %r14,0x8(%rsp)
  0x00007fab74151bab: mov    %r15,(%rsp)
  0x00007fab74151baf: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74151bb9: movabs $0x7fab74151b59,%rsi  ;   {internal_word}
  0x00007fab74151bc3: mov    %rsp,%rdx
  0x00007fab74151bc6: and    $0xfffffffffffffff0,%rsp
  0x00007fab74151bca: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74151bcf: hlt    
[Deopt Handler Code]
  0x00007fab74151bd0: movabs $0x7fab74151bd0,%r10  ;   {section_word}
  0x00007fab74151bda: push   %r10
  0x00007fab74151bdc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74151be1: hlt    
  0x00007fab74151be2: hlt    
  0x00007fab74151be3: hlt    
  0x00007fab74151be4: hlt    
  0x00007fab74151be5: hlt    
  0x00007fab74151be6: hlt    
  0x00007fab74151be7: hlt    
<nmethod compile_id='128' compiler='C1' level='3' entry='0x00007fab74151a20' size='1200' address='0x00007fab74151890' relocation_offset='312' insts_offset='400' stub_offset='688' scopes_data_offset='864' scopes_pcs_offset='952' dependencies_offset='1160' nul_chk_table_offset='1168' metadata_offset='856' method='java/lang/String indexOf (Ljava/lang/String;I)I' bytes='25' count='269' iicount='269' stamp='0.533'/>
<writer thread='140373948942080'/>
<task_queued compile_id='130' method='java/lang/ThreadLocal get ()Ljava/lang/Object;' bytes='38' count='256' iicount='256' level='3' stamp='0.533' comment='tiered' hot_count='256'/>
<task_queued compile_id='131' method='java/lang/ThreadLocal$ThreadLocalMap access$000 (Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;' bytes='6' count='256' iicount='256' level='3' stamp='0.533' comment='tiered' hot_count='256'/>
<task_queued compile_id='132' method='java/lang/ThreadLocal$ThreadLocalMap getEntry (Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;' bytes='42' count='256' iicount='256' level='3' stamp='0.533' comment='tiered' hot_count='256'/>
<task_queued compile_id='133' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.533' comment='tiered' hot_count='128'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/ThreadLocal.get  [0x00007fab74151f00, 0x00007fab74152418]  1304 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab619b5130} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ThreadLocal&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fab74151f00: mov    0x8(%rsi),%r10d
  0x00007fab74151f04: shl    $0x3,%r10
  0x00007fab74151f08: cmp    %rax,%r10
  0x00007fab74151f0b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74151f11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74151f1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74151f20: mov    %eax,-0x14000(%rsp)
  0x00007fab74151f27: push   %rbp
  0x00007fab74151f28: sub    $0x40,%rsp
  0x00007fab74151f2c: movabs $0x7fab61ba5ed8,%rdx  ;   {metadata(method data for {method} {0x00007fab619b5130} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00007fab74151f36: mov    0xfc(%rdx),%edi
  0x00007fab74151f3c: add    $0x8,%edi
  0x00007fab74151f3f: mov    %edi,0xfc(%rdx)
  0x00007fab74151f45: movabs $0x7fab619b5130,%rdx  ;   {metadata({method} {0x00007fab619b5130} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00007fab74151f4f: and    $0x1ff8,%edi
  0x00007fab74151f55: cmp    $0x0,%edi
  0x00007fab74151f58: je     0x00007fab741522c3
  0x00007fab74151f5e: movabs $0x7fab61ba5ed8,%rdx  ;   {metadata(method data for {method} {0x00007fab619b5130} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00007fab74151f68: addq   $0x1,0x130(%rdx)
  0x00007fab74151f70: mov    0x1b8(%r15),%rdx   ;*invokestatic currentThread {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal::get@0 (line 160)

  0x00007fab74151f77: mov    %rsi,%rdi
  0x00007fab74151f7a: movabs $0x7fab61ba5ed8,%rbx  ;   {metadata(method data for {method} {0x00007fab619b5130} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00007fab74151f84: mov    0x8(%rdi),%edi
  0x00007fab74151f87: shl    $0x3,%rdi
  0x00007fab74151f8b: cmp    0x150(%rbx),%rdi
  0x00007fab74151f92: jne    0x00007fab74151fa1
  0x00007fab74151f94: addq   $0x1,0x158(%rbx)
  0x00007fab74151f9c: jmpq   0x00007fab74152163
  0x00007fab74151fa1: cmp    0x160(%rbx),%rdi
  0x00007fab74151fa8: jne    0x00007fab74151fb7
  0x00007fab74151faa: addq   $0x1,0x168(%rbx)
  0x00007fab74151fb2: jmpq   0x00007fab74152163
  0x00007fab74151fb7: cmp    0x170(%rbx),%rdi
  0x00007fab74151fbe: jne    0x00007fab74151fcd
  0x00007fab74151fc0: addq   $0x1,0x178(%rbx)
  0x00007fab74151fc8: jmpq   0x00007fab74152163
  0x00007fab74151fcd: cmp    0x180(%rbx),%rdi
  0x00007fab74151fd4: jne    0x00007fab74151fe3
  0x00007fab74151fd6: addq   $0x1,0x188(%rbx)
  0x00007fab74151fde: jmpq   0x00007fab74152163
  0x00007fab74151fe3: cmp    0x190(%rbx),%rdi
  0x00007fab74151fea: jne    0x00007fab74151ff9
  0x00007fab74151fec: addq   $0x1,0x198(%rbx)
  0x00007fab74151ff4: jmpq   0x00007fab74152163
  0x00007fab74151ff9: cmp    0x1a0(%rbx),%rdi
  0x00007fab74152000: jne    0x00007fab7415200f
  0x00007fab74152002: addq   $0x1,0x1a8(%rbx)
  0x00007fab7415200a: jmpq   0x00007fab74152163
  0x00007fab7415200f: cmp    0x1b0(%rbx),%rdi
  0x00007fab74152016: jne    0x00007fab74152025
  0x00007fab74152018: addq   $0x1,0x1b8(%rbx)
  0x00007fab74152020: jmpq   0x00007fab74152163
  0x00007fab74152025: cmp    0x1c0(%rbx),%rdi
  0x00007fab7415202c: jne    0x00007fab7415203b
  0x00007fab7415202e: addq   $0x1,0x1c8(%rbx)
  0x00007fab74152036: jmpq   0x00007fab74152163
  0x00007fab7415203b: cmpq   $0x0,0x150(%rbx)
  0x00007fab74152046: jne    0x00007fab7415205f
  0x00007fab74152048: mov    %rdi,0x150(%rbx)
  0x00007fab7415204f: movq   $0x1,0x158(%rbx)
  0x00007fab7415205a: jmpq   0x00007fab74152163
  0x00007fab7415205f: cmpq   $0x0,0x160(%rbx)
  0x00007fab7415206a: jne    0x00007fab74152083
  0x00007fab7415206c: mov    %rdi,0x160(%rbx)
  0x00007fab74152073: movq   $0x1,0x168(%rbx)
  0x00007fab7415207e: jmpq   0x00007fab74152163
  0x00007fab74152083: cmpq   $0x0,0x170(%rbx)
  0x00007fab7415208e: jne    0x00007fab741520a7
  0x00007fab74152090: mov    %rdi,0x170(%rbx)
  0x00007fab74152097: movq   $0x1,0x178(%rbx)
  0x00007fab741520a2: jmpq   0x00007fab74152163
  0x00007fab741520a7: cmpq   $0x0,0x180(%rbx)
  0x00007fab741520b2: jne    0x00007fab741520cb
  0x00007fab741520b4: mov    %rdi,0x180(%rbx)
  0x00007fab741520bb: movq   $0x1,0x188(%rbx)
  0x00007fab741520c6: jmpq   0x00007fab74152163
  0x00007fab741520cb: cmpq   $0x0,0x190(%rbx)
  0x00007fab741520d6: jne    0x00007fab741520ef
  0x00007fab741520d8: mov    %rdi,0x190(%rbx)
  0x00007fab741520df: movq   $0x1,0x198(%rbx)
  0x00007fab741520ea: jmpq   0x00007fab74152163
  0x00007fab741520ef: cmpq   $0x0,0x1a0(%rbx)
  0x00007fab741520fa: jne    0x00007fab74152113
  0x00007fab741520fc: mov    %rdi,0x1a0(%rbx)
  0x00007fab74152103: movq   $0x1,0x1a8(%rbx)
  0x00007fab7415210e: jmpq   0x00007fab74152163
  0x00007fab74152113: cmpq   $0x0,0x1b0(%rbx)
  0x00007fab7415211e: jne    0x00007fab74152137
  0x00007fab74152120: mov    %rdi,0x1b0(%rbx)
  0x00007fab74152127: movq   $0x1,0x1b8(%rbx)
  0x00007fab74152132: jmpq   0x00007fab74152163
  0x00007fab74152137: cmpq   $0x0,0x1c0(%rbx)
  0x00007fab74152142: jne    0x00007fab7415215b
  0x00007fab74152144: mov    %rdi,0x1c0(%rbx)
  0x00007fab7415214b: movq   $0x1,0x1c8(%rbx)
  0x00007fab74152156: jmpq   0x00007fab74152163
  0x00007fab7415215b: addq   $0x1,0x140(%rbx)
  0x00007fab74152163: movabs $0x7fab61b811c8,%rdi  ;   {metadata(method data for {method} {0x00007fab619b5478} &apos;getMap&apos; &apos;(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap;&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00007fab7415216d: mov    0xfc(%rdi),%ebx
  0x00007fab74152173: add    $0x8,%ebx
  0x00007fab74152176: mov    %ebx,0xfc(%rdi)
  0x00007fab7415217c: movabs $0x7fab619b5478,%rdi  ;   {metadata({method} {0x00007fab619b5478} &apos;getMap&apos; &apos;(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap;&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00007fab74152186: and    $0x7ffff8,%ebx
  0x00007fab7415218c: cmp    $0x0,%ebx
  0x00007fab7415218f: je     0x00007fab741522da
  0x00007fab74152195: mov    0x50(%rdx),%edi    ; implicit exception: dispatches to 0x00007fab741522f1
  0x00007fab74152198: shl    $0x3,%rdi          ;*getfield threadLocals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal::getMap@1 (line 233)
                                                ; - java.lang.ThreadLocal::get@6 (line 161)

  0x00007fab7415219c: cmp    $0x0,%rdi
  0x00007fab741521a0: movabs $0x7fab61ba5ed8,%rdx  ;   {metadata(method data for {method} {0x00007fab619b5130} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00007fab741521aa: movabs $0x1d8,%rbx
  0x00007fab741521b4: je     0x00007fab741521c4
  0x00007fab741521ba: movabs $0x1e8,%rbx
  0x00007fab741521c4: mov    (%rdx,%rbx,1),%rax
  0x00007fab741521c8: lea    0x1(%rax),%rax
  0x00007fab741521cc: mov    %rax,(%rdx,%rbx,1)
  0x00007fab741521d0: je     0x00007fab74152283  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal::get@11 (line 162)

  0x00007fab741521d6: movabs $0x7fab61ba5ed8,%rdx  ;   {metadata(method data for {method} {0x00007fab619b5130} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00007fab741521e0: addq   $0x1,0x1f8(%rdx)
  0x00007fab741521e8: movabs $0x7fab61ba6150,%rdx  ;   {metadata(method data for {method} {0x00007fab619dd638} &apos;access$000&apos; &apos;(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;&apos; in &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;)}
  0x00007fab741521f2: mov    0xfc(%rdx),%ebx
  0x00007fab741521f8: add    $0x8,%ebx
  0x00007fab741521fb: mov    %ebx,0xfc(%rdx)
  0x00007fab74152201: movabs $0x7fab619dd638,%rdx  ;   {metadata({method} {0x00007fab619dd638} &apos;access$000&apos; &apos;(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;&apos; in &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;)}
  0x00007fab7415220b: and    $0x7ffff8,%ebx
  0x00007fab74152211: cmp    $0x0,%ebx
  0x00007fab74152214: je     0x00007fab741522f6
  0x00007fab7415221a: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x00007fab7415230d
  0x00007fab7415221d: mov    %rdi,%rdx
  0x00007fab74152220: movabs $0x7fab61ba6150,%rbx  ;   {metadata(method data for {method} {0x00007fab619dd638} &apos;access$000&apos; &apos;(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;&apos; in &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;)}
  0x00007fab7415222a: addq   $0x1,0x130(%rbx)
  0x00007fab74152232: mov    %rsi,%rdx
  0x00007fab74152235: mov    %rsi,0x30(%rsp)
  0x00007fab7415223a: mov    %rdi,%rsi          ;*invokespecial getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::access$000@2 (line 298)
                                                ; - java.lang.ThreadLocal::get@16 (line 163)

  0x00007fab7415223d: nop
  0x00007fab7415223e: nop
  0x00007fab7415223f: callq  0x00007fab74047d60  ; OopMap{[48]=Oop off=836}
                                                ;*invokespecial getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::access$000@2 (line 298)
                                                ; - java.lang.ThreadLocal::get@16 (line 163)
                                                ;   {optimized virtual_call}
  0x00007fab74152244: cmp    $0x0,%rax
  0x00007fab74152248: movabs $0x7fab61ba5ed8,%rsi  ;   {metadata(method data for {method} {0x00007fab619b5130} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00007fab74152252: movabs $0x208,%rdi
  0x00007fab7415225c: je     0x00007fab7415226c
  0x00007fab74152262: movabs $0x218,%rdi
  0x00007fab7415226c: mov    (%rsi,%rdi,1),%rbx
  0x00007fab74152270: lea    0x1(%rbx),%rbx
  0x00007fab74152274: mov    %rbx,(%rsi,%rdi,1)
  0x00007fab74152278: jne    0x00007fab741522b0  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal::get@21 (line 164)

  0x00007fab7415227e: mov    0x30(%rsp),%rsi
  0x00007fab74152283: mov    %rsi,%rdi
  0x00007fab74152286: movabs $0x7fab61ba5ed8,%rbx  ;   {metadata(method data for {method} {0x00007fab619b5130} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00007fab74152290: addq   $0x1,0x228(%rbx)
  0x00007fab74152298: nop
  0x00007fab74152299: nop
  0x00007fab7415229a: nop
  0x00007fab7415229b: nop
  0x00007fab7415229c: nop
  0x00007fab7415229d: nop
  0x00007fab7415229e: nop
  0x00007fab7415229f: callq  0x00007fab74047d60  ; OopMap{off=932}
                                                ;*invokespecial setInitialValue {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal::get@34 (line 170)
                                                ;   {optimized virtual_call}
  0x00007fab741522a4: add    $0x40,%rsp
  0x00007fab741522a8: pop    %rbp
  0x00007fab741522a9: test   %eax,0x1b68fe51(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741522af: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal::get@37 (line 170)

  0x00007fab741522b0: mov    0x1c(%rax),%eax    ; implicit exception: dispatches to 0x00007fab74152312
  0x00007fab741522b3: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal::get@25 (line 166)

  0x00007fab741522b7: add    $0x40,%rsp
  0x00007fab741522bb: pop    %rbp
  0x00007fab741522bc: test   %eax,0x1b68fe3e(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741522c2: retq   
  0x00007fab741522c3: mov    %rdx,0x8(%rsp)
  0x00007fab741522c8: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741522d0: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=981}
                                                ;*synchronization entry
                                                ; - java.lang.ThreadLocal::get@-1 (line 160)
                                                ;   {runtime_call}
  0x00007fab741522d5: jmpq   0x00007fab74151f5e
  0x00007fab741522da: mov    %rdi,0x8(%rsp)
  0x00007fab741522df: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741522e7: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop off=1004}
                                                ;*synchronization entry
                                                ; - java.lang.ThreadLocal::getMap@-1 (line 233)
                                                ; - java.lang.ThreadLocal::get@6 (line 161)
                                                ;   {runtime_call}
  0x00007fab741522ec: jmpq   0x00007fab74152195
  0x00007fab741522f1: callq  0x00007fab740fc000  ; OopMap{rsi=Oop off=1014}
                                                ;*getfield threadLocals {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal::getMap@1 (line 233)
                                                ; - java.lang.ThreadLocal::get@6 (line 161)
                                                ;   {runtime_call}
  0x00007fab741522f6: mov    %rdx,0x8(%rsp)
  0x00007fab741522fb: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74152303: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdi=Oop off=1032}
                                                ;*synchronization entry
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::access$000@-1 (line 298)
                                                ; - java.lang.ThreadLocal::get@16 (line 163)
                                                ;   {runtime_call}
  0x00007fab74152308: jmpq   0x00007fab7415221a
  0x00007fab7415230d: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rdi=Oop off=1042}
                                                ;*invokespecial getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::access$000@2 (line 298)
                                                ; - java.lang.ThreadLocal::get@16 (line 163)
                                                ;   {runtime_call}
  0x00007fab74152312: callq  0x00007fab740fc000  ; OopMap{off=1047}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal::get@25 (line 166)
                                                ;   {runtime_call}
  0x00007fab74152317: nop
  0x00007fab74152318: nop
  0x00007fab74152319: mov    0x2c0(%r15),%rax
  0x00007fab74152320: movabs $0x0,%r10
  0x00007fab7415232a: mov    %r10,0x2c0(%r15)
  0x00007fab74152331: movabs $0x0,%r10
  0x00007fab7415233b: mov    %r10,0x2c8(%r15)
  0x00007fab74152342: add    $0x40,%rsp
  0x00007fab74152346: pop    %rbp
  0x00007fab74152347: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7415234c: hlt    
  0x00007fab7415234d: hlt    
  0x00007fab7415234e: hlt    
  0x00007fab7415234f: hlt    
  0x00007fab74152350: hlt    
  0x00007fab74152351: hlt    
  0x00007fab74152352: hlt    
  0x00007fab74152353: hlt    
  0x00007fab74152354: hlt    
  0x00007fab74152355: hlt    
  0x00007fab74152356: hlt    
  0x00007fab74152357: hlt    
  0x00007fab74152358: hlt    
  0x00007fab74152359: hlt    
  0x00007fab7415235a: hlt    
  0x00007fab7415235b: hlt    
  0x00007fab7415235c: hlt    
  0x00007fab7415235d: hlt    
  0x00007fab7415235e: hlt    
  0x00007fab7415235f: hlt    
[Stub Code]
  0x00007fab74152360: nop                       ;   {no_reloc}
  0x00007fab74152361: nop
  0x00007fab74152362: nop
  0x00007fab74152363: nop
  0x00007fab74152364: nop
  0x00007fab74152365: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7415236f: jmpq   0x00007fab7415236f  ;   {runtime_call}
  0x00007fab74152374: nop
  0x00007fab74152375: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7415237f: jmpq   0x00007fab7415237f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74152384: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74152389: mov    %rsp,-0x28(%rsp)
  0x00007fab7415238e: sub    $0x80,%rsp
  0x00007fab74152395: mov    %rax,0x78(%rsp)
  0x00007fab7415239a: mov    %rcx,0x70(%rsp)
  0x00007fab7415239f: mov    %rdx,0x68(%rsp)
  0x00007fab741523a4: mov    %rbx,0x60(%rsp)
  0x00007fab741523a9: mov    %rbp,0x50(%rsp)
  0x00007fab741523ae: mov    %rsi,0x48(%rsp)
  0x00007fab741523b3: mov    %rdi,0x40(%rsp)
  0x00007fab741523b8: mov    %r8,0x38(%rsp)
  0x00007fab741523bd: mov    %r9,0x30(%rsp)
  0x00007fab741523c2: mov    %r10,0x28(%rsp)
  0x00007fab741523c7: mov    %r11,0x20(%rsp)
  0x00007fab741523cc: mov    %r12,0x18(%rsp)
  0x00007fab741523d1: mov    %r13,0x10(%rsp)
  0x00007fab741523d6: mov    %r14,0x8(%rsp)
  0x00007fab741523db: mov    %r15,(%rsp)
  0x00007fab741523df: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741523e9: movabs $0x7fab74152389,%rsi  ;   {internal_word}
  0x00007fab741523f3: mov    %rsp,%rdx
  0x00007fab741523f6: and    $0xfffffffffffffff0,%rsp
  0x00007fab741523fa: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab741523ff: hlt    
[Deopt Handler Code]
  0x00007fab74152400: movabs $0x7fab74152400,%r10  ;   {section_word}
  0x00007fab7415240a: push   %r10
  0x00007fab7415240c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74152411: hlt    
  0x00007fab74152412: hlt    
  0x00007fab74152413: hlt    
  0x00007fab74152414: hlt    
  0x00007fab74152415: hlt    
  0x00007fab74152416: hlt    
  0x00007fab74152417: hlt    
<nmethod compile_id='130' compiler='C1' level='3' entry='0x00007fab74151f00' size='2256' address='0x00007fab74151d50' relocation_offset='312' insts_offset='432' stub_offset='1552' scopes_data_offset='1768' scopes_pcs_offset='1944' dependencies_offset='2216' nul_chk_table_offset='2224' metadata_offset='1736' method='java/lang/ThreadLocal get ()Ljava/lang/Object;' bytes='38' count='285' iicount='285' stamp='0.535'/>
<writer thread='140373948942080'/>
<task_queued compile_id='134' method='java/lang/StringCoding$StringEncoder requestedCharsetName ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.535' comment='tiered' hot_count='128'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/ThreadLocal$ThreadLocalMap.access$000  [0x00007fab741527c0, 0x00007fab74152928]  360 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab619dd638} &apos;access$000&apos; &apos;(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava
<writer thread='140373948942080'/>
[Loaded sun.misc.URLClassPath$2 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
/lang/ThreadLocal$ThreadLocalMap$Entry;&apos; in &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/ThreadLocal&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab741527c0: mov    %eax,-0x14000(%rsp)
  0x00007fab741527c7: push   %rbp
  0x00007fab741527c8: sub    $0x30,%rsp
  0x00007fab741527cc: movabs $0x7fab61ba6150,%rdi  ;   {metadata(method data for {method} {0x00007fab619dd638} &apos;access$000&apos; &apos;(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;&apos; in &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;)}
  0x00007fab741527d6: mov    0xfc(%rdi),%ebx
  0x00007fab741527dc: add    $0x8,%ebx
  0x00007fab741527df: mov    %ebx,0xfc(%rdi)
  0x00007fab741527e5: movabs $0x7fab619dd638,%rdi  ;   {metadata({method} {0x00007fab619dd638} &apos;access$000&apos; &apos;(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;&apos; in &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;)}
  0x00007fab741527ef: and    $0x1ff8,%ebx
  0x00007fab741527f5: cmp    $0x0,%ebx
  0x00007fab741527f8: je     0x00007fab74152828  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::access$000@0 (line 298)

  0x00007fab741527fe: cmp    (%rsi),%rax        ;*invokespecial getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::access$000@2 (line 298)
                                                ; implicit exception: dispatches to 0x00007fab7415283c
  0x00007fab74152801: mov    %rsi,%rdi
  0x00007fab74152804: movabs $0x7fab61ba6150,%rbx  ;   {metadata(method data for {method} {0x00007fab619dd638} &apos;access$000&apos; &apos;(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;&apos; in &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;)}
  0x00007fab7415280e: addq   $0x1,0x130(%rbx)
  0x00007fab74152816: nop
  0x00007fab74152817: callq  0x00007fab74047d60  ; OopMap{off=92}
                                                ;*invokespecial getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::access$000@2 (line 298)
                                                ;   {optimized virtual_call}
  0x00007fab7415281c: add    $0x30,%rsp
  0x00007fab74152820: pop    %rbp
  0x00007fab74152821: test   %eax,0x1b68f8d9(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74152827: retq   
  0x00007fab74152828: mov    %rdi,0x8(%rsp)
  0x00007fab7415282d: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74152835: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop off=122}
                                                ;*synchronization entry
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::access$000@-1 (line 298)
                                                ;   {runtime_call}
  0x00007fab7415283a: jmp    0x00007fab741527fe
  0x00007fab7415283c: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rdx=Oop off=129}
                                                ;*invokespecial getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::access$000@2 (line 298)
                                                ;   {runtime_call}
  0x00007fab74152841: nop
  0x00007fab74152842: nop
  0x00007fab74152843: mov    0x2c0(%r15),%rax
  0x00007fab7415284a: movabs $0x0,%r10
  0x00007fab74152854: mov    %r10,0x2c0(%r15)
  0x00007fab7415285b: movabs $0x0,%r10
  0x00007fab74152865: mov    %r10,0x2c8(%r15)
  0x00007fab7415286c: add    $0x30,%rsp
  0x00007fab74152870: pop    %rbp
  0x00007fab74152871: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74152876: hlt    
  0x00007fab74152877: hlt    
  0x00007fab74152878: hlt    
  0x00007fab74152879: hlt    
  0x00007fab7415287a: hlt    
  0x00007fab7415287b: hlt    
  0x00007fab7415287c: hlt    
  0x00007fab7415287d: hlt    
  0x00007fab7415287e: hlt    
  0x00007fab7415287f: hlt    
[Stub Code]
  0x00007fab74152880: nop                       ;   {no_reloc}
  0x00007fab74152881: nop
  0x00007fab74152882: nop
  0x00007fab74152883: nop
  0x00007fab74152884: nop
  0x00007fab74152885: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7415288f: jmpq   0x00007fab7415288f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74152894: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74152899: mov    %rsp,-0x28(%rsp)
  0x00007fab7415289e: sub    $0x80,%rsp
  0x00007fab741528a5: mov    %rax,0x78(%rsp)
  0x00007fab741528aa: mov    %rcx,0x70(%rsp)
  0x00007fab741528af: mov    %rdx,0x68(%rsp)
  0x00007fab741528b4: mov    %rbx,0x60(%rsp)
  0x00007fab741528b9: mov    %rbp,0x50(%rsp)
  0x00007fab741528be: mov    %rsi,0x48(%rsp)
  0x00007fab741528c3: mov    %rdi,0x40(%rsp)
  0x00007fab741528c8: mov    %r8,0x38(%rsp)
  0x00007fab741528cd: mov    %r9,0x30(%rsp)
  0x00007fab741528d2: mov    %r10,0x28(%rsp)
  0x00007fab741528d7: mov    %r11,0x20(%rsp)
  0x00007fab741528dc: mov    %r12,0x18(%rsp)
  0x00007fab741528e1: mov    %r13,0x10(%rsp)
  0x00007fab741528e6: mov    %r14,0x8(%rsp)
  0x00007fab741528eb: mov    %r15,(%rsp)
  0x00007fab741528ef: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741528f9: movabs $0x7fab74152899,%rsi  ;   {internal_word}
  0x00007fab74152903: mov    %rsp,%rdx
  0x00007fab74152906: and    $0xfffffffffffffff0,%rsp
  0x00007fab7415290a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7415290f: hlt    
[Deopt Handler Code]
  0x00007fab74152910: movabs $0x7fab74152910,%r10  ;   {section_word}
  0x00007fab7415291a: push   %r10
  0x00007fab7415291c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74152921: hlt    
  0x00007fab74152922: hlt    
  0x00007fab74152923: hlt    
  0x00007fab74152924: hlt    
  0x00007fab74152925: hlt    
  0x00007fab74152926: hlt    
  0x00007fab74152927: hlt    
<nmethod compile_id='131' compiler='C1' level='3' entry='0x00007fab741527c0' size='920' address='0x00007fab74152650' relocation_offset='312' insts_offset='368' stub_offset='560' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' nul_chk_table_offset='904' metadata_offset='728' method='java/lang/ThreadLocal$ThreadLocalMap access$000 (Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;' bytes='6' count='284' iicount='284' stamp='0.536'/>
<writer thread='140373948942080'/>
[Loaded java.lang.ClassLoader$2 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader$3 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
<writer thread='140373948942080'/>
[Loaded sun.misc.CompoundEnumeration from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
java/lang/ThreadLocal$ThreadLocalMap.getEntry  [0x00007fab74152ba0, 0x00007fab74153008]  1128 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab619dc950} &apos;getEntry&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;&apos; in &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;
  # this:     rsi:rsi   = &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/ThreadLocal&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fab74152ba0: mov    0x8(%rsi),%r10d
  0x00007fab74152ba4: shl    $0x3,%r10
  0x00007fab74152ba8: cmp    %rax,%r10
  0x00007fab74152bab: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74152bb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74152bbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74152bc0: mov    %eax,-0x14000(%rsp)
  0x00007fab74152bc7: push   %rbp
  0x00007fab74152bc8: sub    $0x40,%rsp
  0x00007fab74152bcc: movabs $0x7fab61ba62b8,%rcx  ;   {metadata(method data for {method} {0x00007fab619dc950} &apos;getEntry&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;&apos; in &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;)}
  0x00007fab74152bd6: mov    0xfc(%rcx),%r8d
  0x00007fab74152bdd: add    $0x8,%r8d
  0x00007fab74152be1: mov    %r8d,0xfc(%rcx)
  0x00007fab74152be8: movabs $0x7fab619dc950,%rcx  ;   {metadata({method} {0x00007fab619dc950} &apos;getEntry&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;&apos; in &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;)}
  0x00007fab74152bf2: and    $0x1ff8,%r8d
  0x00007fab74152bf9: cmp    $0x0,%r8d
  0x00007fab74152bfd: je     0x00007fab74152ee7  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::getEntry@0 (line 414)

  0x00007fab74152c03: movabs $0x7fab61ba62b8,%rcx  ;   {metadata(method data for {method} {0x00007fab619dc950} &apos;getEntry&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;&apos; in &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;)}
  0x00007fab74152c0d: addq   $0x1,0x130(%rcx)
  0x00007fab74152c15: mov    0xc(%rdx),%ecx     ;*getfield threadLocalHashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal::access$400@1 (line 74)
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::getEntry@1 (line 414)
                                                ; implicit exception: dispatches to 0x00007fab74152efe
  0x00007fab74152c18: mov    0x14(%rsi),%r8d
  0x00007fab74152c1c: shl    $0x3,%r8           ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::getEntry@5 (line 414)

  0x00007fab74152c20: mov    0xc(%r8),%edi      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::getEntry@8 (line 414)
                                                ; implicit exception: dispatches to 0x00007fab74152f03
  0x00007fab74152c24: dec    %edi
  0x00007fab74152c26: and    %rdi,%rcx
  0x00007fab74152c29: movslq %ecx,%rdi
  0x00007fab74152c2c: cmp    0xc(%r8),%ecx
  0x00007fab74152c30: jae    0x00007fab74152f08
  0x00007fab74152c36: mov    0x10(%r8,%rdi,4),%edi
  0x00007fab74152c3b: shl    $0x3,%rdi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::getEntry@18 (line 415)

  0x00007fab74152c3f: cmp    $0x0,%rdi
  0x00007fab74152c43: movabs $0x7fab61ba62b8,%r8  ;   {metadata(method data for {method} {0x00007fab619dc950} &apos;getEntry&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;&apos; in &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;)}
  0x00007fab74152c4d: movabs $0x140,%rbx
  0x00007fab74152c57: je     0x00007fab74152c67
  0x00007fab74152c5d: movabs $0x150,%rbx
  0x00007fab74152c67: mov    (%r8,%rbx,1),%rax
  0x00007fab74152c6b: lea    0x1(%rax),%rax
  0x00007fab74152c6f: mov    %rax,(%r8,%rbx,1)
  0x00007fab74152c73: je     0x00007fab74152eaa  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::getEntry@21 (line 416)

  0x00007fab74152c79: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x00007fab74152f11
  0x00007fab74152c7c: mov    %rdi,%r8
  0x00007fab74152c7f: movabs $0x7fab61ba62b8,%rbx  ;   {metadata(method data for {method} {0x00007fab619dc950} &apos;getEntry&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;&apos; in &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;)}
  0x00007fab74152c89: mov    0x8(%r8),%r8d
  0x00007fab74152c8d: shl    $0x3,%r8
  0x00007fab74152c91: cmp    0x170(%rbx),%r8
  0x00007fab74152c98: jne    0x00007fab74152ca7
  0x00007fab74152c9a: addq   $0x1,0x178(%rbx)
  0x00007fab74152ca2: jmpq   0x00007fab74152e69
  0x00007fab74152ca7: cmp    0x180(%rbx),%r8
  0x00007fab74152cae: jne    0x00007fab74152cbd
  0x00007fab74152cb0: addq   $0x1,0x188(%rbx)
  0x00007fab74152cb8: jmpq   0x00007fab74152e69
  0x00007fab74152cbd: cmp    0x190(%rbx),%r8
  0x00007fab74152cc4: jne    0x00007fab74152cd3
  0x00007fab74152cc6: addq   $0x1,0x198(%rbx)
  0x00007fab74152cce: jmpq   0x00007fab74152e69
  0x00007fab74152cd3: cmp    0x1a0(%rbx),%r8
  0x00007fab74152cda: jne    0x00007fab74152ce9
  0x00007fab74152cdc: addq   $0x1,0x1a8(%rbx)
  0x00007fab74152ce4: jmpq   0x00007fab74152e69
  0x00007fab74152ce9: cmp    0x1b0(%rbx),%r8
  0x00007fab74152cf0: jne    0x00007fab74152cff
  0x00007fab74152cf2: addq   $0x1,0x1b8(%rbx)
  0x00007fab74152cfa: jmpq   0x00007fab74152e69
  0x00007fab74152cff: cmp    0x1c0(%rbx),%r8
  0x00007fab74152d06: jne    0x00007fab74152d15
  0x00007fab74152d08: addq   $0x1,0x1c8(%rbx)
  0x00007fab74152d10: jmpq   0x00007fab74152e69
  0x00007fab74152d15: cmp    0x1d0(%rbx),%r8
  0x00007fab74152d1c: jne    0x00007fab74152d2b
  0x00007fab74152d1e: addq   $0x1,0x1d8(%rbx)
  0x00007fab74152d26: jmpq   0x00007fab74152e69
  0x00007fab74152d2b: cmp    0x1e0(%rbx),%r8
  0x00007fab74152d32: jne    0x00007fab74152d41
  0x00007fab74152d34: addq   $0x1,0x1e8(%rbx)
  0x00007fab74152d3c: jmpq   0x00007fab74152e69
  0x00007fab74152d41: cmpq   $0x0,0x170(%rbx)
  0x00007fab74152d4c: jne    0x00007fab74152d65
  0x00007fab74152d4e: mov    %r8,0x170(%rbx)
  0x00007fab74152d55: movq   $0x1,0x178(%rbx)
  0x00007fab74152d60: jmpq   0x00007fab74152e69
  0x00007fab74152d65: cmpq   $0x0,0x180(%rbx)
  0x00007fab74152d70: jne    0x00007fab74152d89
  0x00007fab74152d72: mov    %r8,0x180(%rbx)
  0x00007fab74152d79: movq   $0x1,0x188(%rbx)
  0x00007fab74152d84: jmpq   0x00007fab74152e69
  0x00007fab74152d89: cmpq   $0x0,0x190(%rbx)
  0x00007fab74152d94: jne    0x00007fab74152dad
  0x00007fab74152d96: mov    %r8,0x190(%rbx)
  0x00007fab74152d9d: movq   $0x1,0x198(%rbx)
  0x00007fab74152da8: jmpq   0x00007fab74152e69
  0x00007fab74152dad: cmpq   $0x0,0x1a0(%rbx)
  0x00007fab74152db8: jne    0x00007fab74152dd1
  0x00007fab74152dba: mov    %r8,0x1a0(%rbx)
  0x00007fab74152dc1: movq   $0x1,0x1a8(%rbx)
  0x00007fab74152dcc: jmpq   0x00007fab74152e69
  0x00007fab74152dd1: cmpq   $0x0,0x1b0(%rbx)
  0x00007fab74152ddc: jne    0x00007fab74152df5
  0x00007fab74152dde: mov    %r8,0x1b0(%rbx)
  0x00007fab74152de5: movq   $0x1,0x1b8(%rbx)
  0x00007fab74152df0: jmpq   0x00007fab74152e69
  0x00007fab74152df5: cmpq   $0x0,0x1c0(%rbx)
  0x00007fab74152e00: jne    0x00007fab74152e19
  0x00007fab74152e02: mov    %r8,0x1c0(%rbx)
  0x00007fab74152e09: movq   $0x1,0x1c8(%rbx)
  0x00007fab74152e14: jmpq   0x00007fab74152e69
  0x00007fab74152e19: cmpq   $0x0,0x1d0(%rbx)
  0x00007fab74152e24: jne    0x00007fab74152e3d
  0x00007fab74152e26: mov    %r8,0x1d0(%rbx)
  0x00007fab74152e2d: movq   $0x1,0x1d8(%rbx)
  0x00007fab74152e38: jmpq   0x00007fab74152e69
  0x00007fab74152e3d: cmpq   $0x0,0x1e0(%rbx)
  0x00007fab74152e48: jne    0x00007fab74152e61
  0x00007fab74152e4a: mov    %r8,0x1e0(%rbx)
  0x00007fab74152e51: movq   $0x1,0x1e8(%rbx)
  0x00007fab74152e5c: jmpq   0x00007fab74152e69
  0x00007fab74152e61: addq   $0x1,0x160(%rbx)
  0x00007fab74152e69: mov    0xc(%rdi),%r8d
  0x00007fab74152e6d: shl    $0x3,%r8           ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::getEntry@25 (line 416)

  0x00007fab74152e71: cmp    %rdx,%r8
  0x00007fab74152e74: movabs $0x7fab61ba62b8,%r8  ;   {metadata(method data for {method} {0x00007fab619dc950} &apos;getEntry&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;&apos; in &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;)}
  0x00007fab74152e7e: movabs $0x1f8,%rbx
  0x00007fab74152e88: jne    0x00007fab74152e98
  0x00007fab74152e8e: movabs $0x208,%rbx
  0x00007fab74152e98: mov    (%r8,%rbx,1),%rax
  0x00007fab74152e9c: lea    0x1(%rax),%rax
  0x00007fab74152ea0: mov    %rax,(%r8,%rbx,1)
  0x00007fab74152ea4: je     0x00007fab74152ed8  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::getEntry@29 (line 416)

  0x00007fab74152eaa: mov    %rsi,%r8
  0x00007fab74152ead: movabs $0x7fab61ba62b8,%rbx  ;   {metadata(method data for {method} {0x00007fab619dc950} &apos;getEntry&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;&apos; in &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;)}
  0x00007fab74152eb7: addq   $0x1,0x218(%rbx)
  0x00007fab74152ebf: mov    %rdi,%r8           ;*invokespecial getEntryAfterMiss {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::getEntry@38 (line 419)

  0x00007fab74152ec2: nop
  0x00007fab74152ec3: nop
  0x00007fab74152ec4: nop
  0x00007fab74152ec5: nop
  0x00007fab74152ec6: nop
  0x00007fab74152ec7: callq  0x00007fab74047d60  ; OopMap{off=812}
                                                ;*invokespecial getEntryAfterMiss {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::getEntry@38 (line 419)
                                                ;   {optimized virtual_call}
  0x00007fab74152ecc: add    $0x40,%rsp
  0x00007fab74152ed0: pop    %rbp
  0x00007fab74152ed1: test   %eax,0x1b68f229(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74152ed7: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::getEntry@41 (line 419)

  0x00007fab74152ed8: mov    %rdi,%rax
  0x00007fab74152edb: add    $0x40,%rsp
  0x00007fab74152edf: pop    %rbp
  0x00007fab74152ee0: test   %eax,0x1b68f21a(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74152ee6: retq   
  0x00007fab74152ee7: mov    %rcx,0x8(%rsp)
  0x00007fab74152eec: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74152ef4: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop off=857}
                                                ;*synchronization entry
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::getEntry@-1 (line 414)
                                                ;   {runtime_call}
  0x00007fab74152ef9: jmpq   0x00007fab74152c03
  0x00007fab74152efe: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rdx=Oop off=867}
                                                ;*getfield threadLocalHashCode {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal::access$400@1 (line 74)
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::getEntry@1 (line 414)
                                                ;   {runtime_call}
  0x00007fab74152f03: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rdx=Oop r8=Oop off=872}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::getEntry@8 (line 414)
                                                ;   {runtime_call}
  0x00007fab74152f08: mov    %rcx,(%rsp)
  0x00007fab74152f0c: callq  0x00007fab740fb940  ; OopMap{rsi=Oop rdx=Oop r8=Oop off=881}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::getEntry@18 (line 415)
                                                ;   {runtime_call}
  0x00007fab74152f11: callq  0x00007fab740fc000  ; OopMap{rsi=Oop rdx=Oop rdi=Oop off=886}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::getEntry@25 (line 416)
                                                ;   {runtime_call}
  0x00007fab74152f16: nop
  0x00007fab74152f17: nop
  0x00007fab74152f18: mov    0x2c0(%r15),%rax
  0x00007fab74152f1f: movabs $0x0,%r10
  0x00007fab74152f29: mov    %r10,0x2c0(%r15)
  0x00007fab74152f30: movabs $0x0,%r10
  0x00007fab74152f3a: mov    %r10,0x2c8(%r15)
  0x00007fab74152f41: add    $0x40,%rsp
  0x00007fab74152f45: pop    %rbp
  0x00007fab74152f46: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74152f4b: hlt    
  0x00007fab74152f4c: hlt    
  0x00007fab74152f4d: hlt    
  0x00007fab74152f4e: hlt    
  0x00007fab74152f4f: hlt    
  0x00007fab74152f50: hlt    
  0x00007fab74152f51: hlt    
  0x00007fab74152f52: hlt    
  0x00007fab74152f53: hlt    
  0x00007fab74152f54: hlt    
  0x00007fab74152f55: hlt    
  0x00007fab74152f56: hlt    
  0x00007fab74152f57: hlt    
  0x00007fab74152f58: hlt    
  0x00007fab74152f59: hlt    
  0x00007fab74152f5a: hlt    
  0x00007fab74152f5b: hlt    
  0x00007fab74152f5c: hlt    
  0x00007fab74152f5d: hlt    
  0x00007fab74152f5e: hlt    
  0x00007fab74152f5f: hlt    
[Stub Code]
  0x00007fab74152f60: nop                       ;   {no_reloc}
  0x00007fab74152f61: nop
  0x00007fab74152f62: nop
  0x00007fab74152f63: nop
  0x00007fab74152f64: nop
  0x00007fab74152f65: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab74152f6f: jmpq   0x00007fab74152f6f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74152f74: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74152f79: mov    %rsp,-0x28(%rsp)
  0x00007fab74152f7e: sub    $0x80,%rsp
  0x00007fab74152f85: mov    %rax,0x78(%rsp)
  0x00007fab74152f8a: mov    %rcx,0x70(%rsp)
  0x00007fab74152f8f: mov    %rdx,0x68(%rsp)
  0x00007fab74152f94: mov    %rbx,0x60(%rsp)
  0x00007fab74152f99: mov    %rbp,0x50(%rsp)
  0x00007fab74152f9e: mov    %rsi,0x48(%rsp)
  0x00007fab74152fa3: mov    %rdi,0x40(%rsp)
  0x00007fab74152fa8: mov    %r8,0x38(%rsp)
  0x00007fab74152fad: mov    %r9,0x30(%rsp)
  0x00007fab74152fb2: mov    %r10,0x28(%rsp)
  0x00007fab74152fb7: mov    %r11,0x20(%rsp)
  0x00007fab74152fbc: mov    %r12,0x18(%rsp)
  0x00007fab74152fc1: mov    %r13,0x10(%rsp)
  0x00007fab74152fc6: mov    %r14,0x8(%rsp)
  0x00007fab74152fcb: mov    %r15,(%rsp)
  0x00007fab74152fcf: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74152fd9: movabs $0x7fab74152f79,%rsi  ;   {internal_word}
  0x00007fab74152fe3: mov    %rsp,%rdx
  0x00007fab74152fe6: and    $0xfffffffffffffff0,%rsp
  0x00007fab74152fea: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74152fef: hlt    
[Deopt Handler Code]
  0x00007fab74152ff0: movabs $0x7fab74152ff0,%r10  ;   {section_word}
  0x00007fab74152ffa: push   %r10
  0x00007fab74152ffc: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74153001: hlt    
  0x00007fab74153002: hlt    
  0x00007fab74153003: hlt    
  0x00007fab74153004: hlt    
  0x00007fab74153005: hlt    
  0x00007fab74153006: hlt    
  0x00007fab74153007: hlt    
<nmethod compile_id='132' compiler='C1' level='3' entry='0x00007fab74152ba0' size='2024' address='0x00007fab74152a10' relocation_offset='312' insts_offset='400' stub_offset='1360' scopes_data_offset='1560' scopes_pcs_offset='1696' dependencies_offset='1984' nul_chk_table_offset='1992' metadata_offset='1528' method='java/lang/ThreadLocal$ThreadLocalMap getEntry (Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;' bytes='42' count='284' iicount='284' stamp='0.538'/>
----------------------------------------------------------------------
java/io/File.getPath  [0x00007fab74153380, 0x00007fab74153490]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61927fc0} &apos;getPath&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/io/File&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab74153380: mov    0x8(%rsi),%r10d
  0x00007fab74153384: shl    $0x3,%r10
  0x00007fab74153388: cmp    %rax,%r10
  0x00007fab7415338b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74153391: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7415339c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab741533a0: mov    %eax,-0x14000(%rsp)
  0x00007fab741533a7: push   %rbp
  0x00007fab741533a8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.io.File::getPath@0 (line 512)

  0x00007fab741533ac: mov    0x10(%rsi),%eax
  0x00007fab741533af: shl    $0x3,%rax          ;*getfield path {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.io.File::getPath@1 (line 512)

  0x00007fab741533b3: add    $0x30,%rsp
  0x00007fab741533b7: pop    %rbp
  0x00007fab741533b8: test   %eax,0x1b68ed42(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741533be: retq   
  0x00007fab741533bf: nop
  0x00007fab741533c0: nop
  0x00007fab741533c1: mov    0x2c0(%r15),%rax
  0x00007fab741533c8: movabs $0x0,%r10
  0x00007fab741533d2: mov    %r10,0x2c0(%r15)
  0x00007fab741533d9: 
<writer thread='140373948942080'/>
[Loaded java.io.IOException from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
movabs $0x0,%r10
  0x00007fab741533e3: mov    %r10,0x2c8(%r15)
  0x00007fab741533ea: add    $0x30,%rsp
  0x00007fab741533ee: pop    %rbp
  0x00007fab741533ef: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab741533f4: hlt    
  0x00007fab741533f5: hlt    
  0x00007fab741533f6: hlt    
  0x00007fab741533f7: hlt    
  0x00007fab741533f8: hlt    
  0x00007fab741533f9: hlt    
  0x00007fab741533fa: hlt    
  0x00007fab741533fb: hlt    
  0x00007fab741533fc: hlt    
  0x00007fab741533fd: hlt    
  0x00007fab741533fe: hlt    
  0x00007fab741533ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74153400: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74153405: mov    %rsp,-0x28(%rsp)
  0x00007fab7415340a: sub    $0x80,%rsp
  0x00007fab74153411: mov    %rax,0x78(%rsp)
  0x00007fab74153416: mov    %rcx,0x70(%rsp)
  0x00007fab7415341b: mov    %rdx,0x68(%rsp)
  0x00007fab74153420: mov    %rbx,0x60(%rsp)
  0x00007fab74153425: mov    %rbp,0x50(%rsp)
  0x00007fab7415342a: mov    %rsi,0x48(%rsp)
  0x00007fab7415342f: mov    %rdi,0x40(%rsp)
  0x00007fab74153434: mov    %r8,0x38(%rsp)
  0x00007fab74153439: mov    %r9,0x30(%rsp)
  0x00007fab7415343e: mov    %r10,0x28(%rsp)
  0x00007fab74153443: mov    %r11,0x20(%rsp)
  0x00007fab74153448: mov    %r12,0x18(%rsp)
  0x00007fab7415344d: mov    %r13,0x10(%rsp)
  0x00007fab74153452: mov    %r14,0x8(%rsp)
  0x00007fab74153457: mov    %r15,(%rsp)
  0x00007fab7415345b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74153465: movabs $0x7fab74153405,%rsi  ;   {internal_word}
  0x00007fab7415346f: mov    %rsp,%rdx
  0x00007fab74153472: and    $0xfffffffffffffff0,%rsp
  0x00007fab74153476: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7415347b: hlt    
[Deopt Handler Code]
  0x00007fab7415347c: movabs $0x7fab7415347c,%r10  ;   {section_word}
  0x00007fab74153486: push   %r10
  0x00007fab74153488: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7415348d: hlt    
  0x00007fab7415348e: hlt    
  0x00007fab7415348f: hlt    
<nmethod compile_id='133' compiler='C1' level='1' entry='0x00007fab74153380' size='736' address='0x00007fab74153210' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='165' iicount='165' stamp='0.539'/>
<writer thread='140373948942080'/>
[Loaded java.io.FileNotFoundException from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/StringCoding$StringEncoder.requestedCharsetName  [0x00007fab74153680, 0x00007fab74153790]  272 bytes
<writer thread='140373948942080'/>
[Loaded java.security.PrivilegedActionException from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
[Entry Point]
[Constants]
  # {method} {0x00007fab61a2df28} &apos;requestedCharsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab74153680: mov    0x8(%rsi),%r10d
  0x00007fab74153684: shl    $0x3,%r10
  0x00007fab74153688: cmp    %rax,%r10
  0x00007fab7415368b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74153691: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7415369c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab741536a0: mov    %eax,-0x14000(%rsp)
  0x00007fab741536a7: push   %rbp
  0x00007fab741536a8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding$StringEncoder::requestedCharsetName@0 (line 295)

  0x00007fab741536ac: mov    0x18(%rsi),%eax
  0x00007fab741536af: shl    $0x3,%rax          ;*getfield requestedCharsetName {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding$StringEncoder::requestedCharsetName@1 (line 295)

  0x00007fab741536b3: add    $0x30,%rsp
  0x00007fab741536b7: pop    %rbp
  0x00007fab741536b8: test   %eax,0x1b68ea42(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741536be: retq   
  0x00007fab741536bf: nop
  0x00007fab741536c0: nop
  0x00007fab741536c1: mov    0x2c0(%r15),%rax
  0x00007fab741536c8: movabs $0x0,%r10
  0x00007fab741536d2: mov    %r10,0x2c0(%r15)
  0x00007fab741536d9: movabs $0x0,%r10
  0x00007fab741536e3: mov    %r10,0x2c8(%r15)
  0x00007fab741536ea: add    $0x30,%rsp
  0x00007fab741536ee: pop    %rbp
  0x00007fab741536ef: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab741536f4: hlt    
  0x00007fab741536f5: hlt    
  0x00007fab741536f6: hlt    
  0x00007fab741536f7: hlt    
  0x00007fab741536f8: hlt    
  0x00007fab741536f9: hlt    
  0x00007fab741536fa: hlt    
  0x00007fab741536fb: hlt    
  0x00007fab741536fc: hlt    
  0x00007fab741536fd: hlt    
  0x00007fab741536fe: hlt    
  0x00007fab741536ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74153700: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74153705: mov    %rsp,-0x28(%rsp)
  0x00007fab7415370a: sub    $0x80,%rsp
  0x00007fab74153711: mov    %rax,0x78(%rsp)
  0x00007fab74153716: mov    %rcx,0x70(%rsp)
  0x00007fab7415371b: mov    %rdx,0x68(%rsp)
  0x00007fab74153720: mov    %rbx,0x60(%rsp)
  0x00007fab74153725: mov    %rbp,0x50(%rsp)
  0x00007fab7415372a: mov    %rsi,0x48(%rsp)
  0x00007fab7415372f: mov    %rdi,0x40(%rsp)
  0x00007fab74153734: mov    %r8,0x38(%rsp)
  0x00007fab74153739: mov    %r9,0x30(%rsp)
  0x00007fab7415373e: mov    %r10,0x28(%rsp)
  0x00007fab74153743: mov    %r11,0x20(%rsp)
  0x00007fab74153748: mov    %r12,0x18(%rsp)
  0x00007fab7415374d: mov    %r13,0x10(%rsp)
  0x00007fab74153752: mov    %r14,0x8(%rsp)
  0x00007fab74153757: mov    %r15,(%rsp)
  0x00007fab7415375b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74153765: movabs $0x7fab74153705,%rsi  ;   {internal_word}
  0x00007fab7415376f: mov    %rsp,%rdx
  0x00007fab74153772: and    $0xfffffffffffffff0,%rsp
  0x00007fab74153776: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7415377b: hlt    
[Deopt Handler Code]
  0x00007fab7415377c: movabs $0x7fab7415377c,%r10  ;   {section_word}
  0x00007fab74153786: push   %r10
  0x00007fab74153788: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab7415378d: hlt    
  0x00007fab7415378e: hlt    
  0x00007fab7415378f: hlt    
<nmethod compile_id='134' compiler='C1' level='1' entry='0x00007fab74153680' size='736' address='0x00007fab74153510' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/lang/StringCoding$StringEncoder requestedCharsetName ()Ljava/lang/String;' bytes='5' count='132' iicount='132' stamp='0.539'/>
<writer thread='140373948942080'/>
<task_queued compile_id='135' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='404' iicount='404' level='3' stamp='0.540' comment='tiered' hot_count='404'/>
<task_queued compile_id='136' method='java/lang/StringBuffer append (Ljava/lang/String;)Ljava/lang/StringBuffer;' bytes='13' count='384' iicount='384' level='3' stamp='0.540' comment='tiered' hot_count='384'/>
<task_queued compile_id='137' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='411' iicount='411' level='3' stamp='0.540' comment='tiered' hot_count='411'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/StringBuilder.&lt;init&gt;  [0x00007fab741539a0, 0x00007fab74153c50]  688 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61919fd0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fab741539a0: mov    0x8(%rsi),%r10d
  0x00007fab741539a4: shl    $0x3,%r10
  0x00007fab741539a8: cmp    %rax,%r10
  0x00007fab741539ab: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab741539b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab741539bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
<writer thread='140373948942080'/>
[Loaded java.net.URLClassLoader$3$1 from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
  0x00007fab741539c0: mov    %eax,-0x14000(%rsp)
  0x00007fab741539c7: push   %rbp
  0x00007fab741539c8: sub    $0x40,%rsp
  0x00007fab741539cc: mov    %rsi,%r8
  0x00007fab741539cf: movabs $0x7fab61b7aa30,%rbx  ;   {metadata(method data for {method} {0x00007fab61919fd0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab741539d9: mov    0xfc(%rbx),%edx
  0x00007fab741539df: add    $0x8,%edx
  0x00007fab741539e2: mov    %edx,0xfc(%rbx)
  0x00007fab741539e8: movabs $0x7fab61919fd0,%rbx  ;   {metadata({method} {0x00007fab61919fd0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab741539f2: and    $0x1ff8,%edx
  0x00007fab741539f8: cmp    $0x0,%edx
  0x00007fab741539fb: je     0x00007fab74153b35  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::&lt;init&gt;@0 (line 89)

  0x00007fab74153a01: mov    %r8,%rbx
  0x00007fab74153a04: movabs $0x7fab61b7aa30,%rdx  ;   {metadata(method data for {method} {0x00007fab61919fd0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab74153a0e: addq   $0x1,0x130(%rdx)
  0x00007fab74153a16: movabs $0x7fab61b7ab90,%rbx  ;   {metadata(method data for {method} {0x00007fab61915920} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab74153a20: mov    0xfc(%rbx),%edx
  0x00007fab74153a26: add    $0x8,%edx
  0x00007fab74153a29: mov    %edx,0xfc(%rbx)
  0x00007fab74153a2f: movabs $0x7fab61915920,%rbx  ;   {metadata({method} {0x00007fab61915920} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab74153a39: and    $0x7ffff8,%edx
  0x00007fab74153a3f: cmp    $0x0,%edx
  0x00007fab74153a42: je     0x00007fab74153b4c
  0x00007fab74153a48: mov    %r8,%rbx
  0x00007fab74153a4b: movabs $0x7fab61b7ab90,%rdx  ;   {metadata(method data for {method} {0x00007fab61915920} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fab74153a55: addq   $0x1,0x130(%rdx)
  0x00007fab74153a5d: movabs $0x7fab61a342a0,%rbx  ;   {metadata(method data for {method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab74153a67: mov    0xfc(%rbx),%edx
  0x00007fab74153a6d: add    $0x8,%edx
  0x00007fab74153a70: mov    %edx,0xfc(%rbx)
  0x00007fab74153a76: movabs $0x7fab618914d8,%rbx  ;   {metadata({method} {0x00007fab618914d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fab74153a80: and    $0x7ffff8,%edx
  0x00007fab74153a86: cmp    $0x0,%edx
  0x00007fab74153a89: je     0x00007fab74153b63
  0x00007fab74153a8f: mov    $0x10,%ebx
  0x00007fab74153a94: movabs $0x7c00001f8,%rdx  ;   {metadata({type array char})}
  0x00007fab74153a9e: movslq %ebx,%rbx
  0x00007fab74153aa1: mov    %rbx,%rdi
  0x00007fab74153aa4: cmp    $0xffffff,%rbx
  0x00007fab74153aab: ja     0x00007fab74153b7a
  0x00007fab74153ab1: movabs $0x17,%rsi
  0x00007fab74153abb: lea    (%rsi,%rbx,2),%rsi
  0x00007fab74153abf: and    $0xfffffffffffffff8,%rsi
  0x00007fab74153ac3: mov    0x60(%r15),%rax
  0x00007fab74153ac7: lea    (%rax,%rsi,1),%rsi
  0x00007fab74153acb: cmp    0x70(%r15),%rsi
  0x00007fab74153acf: ja     0x00007fab74153b7a
  0x00007fab74153ad5: mov    %rsi,0x60(%r15)
  0x00007fab74153ad9: sub    %rax,%rsi
  0x00007fab74153adc: movq   $0x1,(%rax)
  0x00007fab74153ae3: mov    %rdx,%rcx
  0x00007fab74153ae6: shr    $0x3,%rcx
  0x00007fab74153aea: mov    %ecx,0x8(%rax)
  0x00007fab74153aed: mov    %ebx,0xc(%rax)
  0x00007fab74153af0: sub    $0x10,%rsi
  0x00007fab74153af4: je     0x00007fab74153b0b
  0x00007fab74153afa: xor    %rbx,%rbx
  0x00007fab74153afd: shr    $0x3,%rsi
  0x00007fab74153b01: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fab74153b06: dec    %rsi
  0x00007fab74153b09: jne    0x00007fab74153b01  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)

  0x00007fab74153b0b: mov    %rax,%r10
  0x00007fab74153b0e: shr    $0x3,%r10
  0x00007fab74153b12: mov    %r10d,0x10(%r8)
  0x00007fab74153b16: shr    $0x9,%r8
  0x00007fab74153b1a: movabs $0x7fab701ff000,%rsi
  0x00007fab74153b24: movb   $0x0,(%r8,%rsi,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)

  0x00007fab74153b29: add    $0x40,%rsp
  0x00007fab74153b2d: pop    %rbp
  0x00007fab74153b2e: test   %eax,0x1b68e5cc(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74153b34: retq   
  0x00007fab74153b35: mov    %rbx,0x8(%rsp)
  0x00007fab74153b3a: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74153b42: callq  0x00007fab741005e0  ; OopMap{r8=Oop off=423}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ;   {runtime_call}
  0x00007fab74153b47: jmpq   0x00007fab74153a01
  0x00007fab74153b4c: mov    %rbx,0x8(%rsp)
  0x00007fab74153b51: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74153b59: callq  0x00007fab741005e0  ; OopMap{r8=Oop off=446}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x00007fab74153b5e: jmpq   0x00007fab74153a48
  0x00007fab74153b63: mov    %rbx,0x8(%rsp)
  0x00007fab74153b68: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74153b70: callq  0x00007fab741005e0  ; OopMap{r8=Oop off=469}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x00007fab74153b75: jmpq   0x00007fab74153a8f
  0x00007fab74153b7a: callq  0x00007fab740fd020  ; OopMap{r8=Oop off=479}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x00007fab74153b7f: jmp    0x00007fab74153b0b
  0x00007fab74153b81: nop
  0x00007fab74153b82: nop
  0x00007fab74153b83: mov    0x2c0(%r15),%rax
  0x00007fab74153b8a: movabs $0x0,%r10
  0x00007fab74153b94: mov    %r10,0x2c0(%r15)
  0x00007fab74153b9b: movabs $0x0,%r10
  0x00007fab74153ba5: mov    %r10,0x2c8(%r15)
  0x00007fab74153bac: add    $0x40,%rsp
  0x00007fab74153bb0: pop    %rbp
  0x00007fab74153bb1: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74153bb6: hlt    
  0x00007fab74153bb7: hlt    
  0x00007fab74153bb8: hlt    
  0x00007fab74153bb9: hlt    
  0x00007fab74153bba: hlt    
  0x00007fab74153bbb: hlt    
  0x00007fab74153bbc: hlt    
  0x00007fab74153bbd: hlt    
  0x00007fab74153bbe: hlt    
  0x00007fab74153bbf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fab74153bc0: callq  0x00007fab740fdf60  ;   {no_reloc}
  0x00007fab74153bc5: mov    %rsp,-0x28(%rsp)
  0x00007fab74153bca: sub    $0x80,%rsp
  0x00007fab74153bd1: mov    %rax,0x78(%rsp)
  0x00007fab74153bd6: mov    %rcx,0x70(%rsp)
  0x00007fab74153bdb: mov    %rdx,0x68(%rsp)
  0x00007fab74153be0: mov    %rbx,0x60(%rsp)
  0x00007fab74153be5: mov    %rbp,0x50(%rsp)
  0x00007fab74153bea: mov    %rsi,0x48(%rsp)
  0x00007fab74153bef: mov    %rdi,0x40(%rsp)
  0x00007fab74153bf4: mov    %r8,0x38(%rsp)
  0x00007fab74153bf9: mov    %r9,0x30(%rsp)
  0x00007fab74153bfe: mov    %r10,0x28(%rsp)
  0x00007fab74153c03: mov    %r11,0x20(%rsp)
  0x00007fab74153c08: mov    %r12,0x18(%rsp)
  0x00007fab74153c0d: mov    %r13,0x10(%rsp)
  0x00007fab74153c12: mov    %r14,0x8(%rsp)
  0x00007fab74153c17: mov    %r15,(%rsp)
  0x00007fab74153c1b: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74153c25: movabs $0x7fab74153bc5,%rsi  ;   {internal_word}
  0x00007fab74153c2f: mov    %rsp,%rdx
  0x00007fab74153c32: and    $0xfffffffffffffff0,%rsp
  0x00007fab74153c36: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74153c3b: hlt    
[Deopt Handler Code]
  0x00007fab74153c3c: movabs $0x7fab74153c3c,%r10  ;   {section_word}
  0x00007fab74153c46: push   %r10
  0x00007fab74153c48: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74153c4d: hlt    
  0x00007fab74153c4e: hlt    
  0x00007fab74153c4f: hlt    
<nmethod compile_id='135' compiler='C1' level='3' entry='0x00007fab741539a0' size='1344' address='0x00007fab74153810' relocation_offset='312' insts_offset='400' stub_offset='944' scopes_data_offset='1112' scopes_pcs_offset='1192' dependencies_offset='1336' metadata_offset='1088' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='408' iicount='408' stamp='0.541'/>
<writer thread='140373948942080'/>
<task_queued compile_id='138' method='sun/net/www/ParseUtil encodePath (Ljava/lang/String;Z)Ljava/lang/String;' bytes='336' count='134' backedge_count='6144' iicount='134' level='3' stamp='0.541' comment='tiered' hot_count='134'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/StringBuffer.append  [0x00007fab74153f20, 0x00007fab74154248]  808 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61911098} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;
  # this:     rsi:rsi   = &apos;java/lang/StringBuffer&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fab74153f20: mov    0x8(%rsi),%r10d
  0x00007fab74153f24: shl    $0x3,%r10
  0x00007fab74153f28: cmp    %rax,%r10
  0x00007fab74153f2b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74153f31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab74153f3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74153f40: mov    %eax,-0x14000(%rsp)
  0x00007fab74153f47: push   %rbp
  0x00007fab74153f48: sub    $0x40,%rsp
  0x00007fab74153f4c: lea    0x28(%rsp),%rdi
  0x00007fab74153f51: mov    %rsi,
<writer thread='140373948942080'/>
[Loaded java.net.JarURLConnection from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
0x8(%rdi)
  0x00007fab74153f55: mov    (%rsi),%rax
  0x00007fab74153f58: mov    %rax,%rbx
  0x00007fab74153f5b: and    $0x7,%rbx
  0x00007fab74153f5f: cmp    $0x5,%rbx
  0x00007fab74153f63: jne    0x00007fab74153fea
  0x00007fab74153f69: mov    0x8(%rsi),%ebx
  0x00007fab74153f6c: shl    $0x3,%rbx
  0x00007fab74153f70: mov    0xa8(%rbx),%rbx
  0x00007fab74153f77: or     %r15,%rbx
  0x00007fab74153f7a: xor    %rax,%rbx
  0x00007fab74153f7d: and    $0xffffffffffffff87,%rbx
  0x00007fab74153f81: je     0x00007fab74154012
  0x00007fab74153f87: test   $0x7,%rbx
  0x00007fab74153f8e: jne    0x00007fab74153fd7
  0x00007fab74153f90: test   $0x300,%rbx
  0x00007fab74153f97: jne    0x00007fab74153fb6
  0x00007fab74153f99: and    $0x37f,%rax
  0x00007fab74153fa0: mov    %rax,%rbx
  0x00007fab74153fa3: or     %r15,%rbx
  0x00007fab74153fa6: lock cmpxchg %rbx,(%rsi)
  0x00007fab74153fab: jne    0x00007fab741540ce
  0x00007fab74153fb1: jmpq   0x00007fab74154012
  0x00007fab74153fb6: mov    0x8(%rsi),%ebx
  0x00007fab74153fb9: shl    $0x3,%rbx
  0x00007fab74153fbd: mov    0xa8(%rbx),%rbx
  0x00007fab74153fc4: or     %r15,%rbx
  0x00007fab74153fc7: lock cmpxchg %rbx,(%rsi)
  0x00007fab74153fcc: jne    0x00007fab741540ce
  0x00007fab74153fd2: jmpq   0x00007fab74154012
  0x00007fab74153fd7: mov    0x8(%rsi),%ebx
  0x00007fab74153fda: shl    $0x3,%rbx
  0x00007fab74153fde: mov    0xa8(%rbx),%rbx
  0x00007fab74153fe5: lock cmpxchg %rbx,(%rsi)
  0x00007fab74153fea: mov    (%rsi),%rax
  0x00007fab74153fed: or     $0x1,%rax
  0x00007fab74153ff1: mov    %rax,(%rdi)
  0x00007fab74153ff4: lock cmpxchg %rdi,(%rsi)
  0x00007fab74153ff9: je     0x00007fab74154012
  0x00007fab74153fff: sub    %rsp,%rax
  0x00007fab74154002: and    $0xfffffffffffff007,%rax
  0x00007fab74154009: mov    %rax,(%rdi)
  0x00007fab7415400c: jne    0x00007fab741540ce
  0x00007fab74154012: movabs $0x7fab61baaf00,%rdi  ;   {metadata(method data for {method} {0x00007fab61911098} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00007fab7415401c: mov    0xfc(%rdi),%ebx
  0x00007fab74154022: add    $0x8,%ebx
  0x00007fab74154025: mov    %ebx,0xfc(%rdi)
  0x00007fab7415402b: movabs $0x7fab61911098,%rdi  ;   {metadata({method} {0x00007fab61911098} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00007fab74154035: and    $0x1ff8,%ebx
  0x00007fab7415403b: cmp    $0x0,%ebx
  0x00007fab7415403e: je     0x00007fab741540e1  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuffer::append@0 (line 269)

  0x00007fab74154044: movl   $0x0,0x14(%rsi)
  0x00007fab7415404b: mov    %rsi,%rdi
  0x00007fab7415404e: shr    $0x9,%rdi
  0x00007fab74154052: movabs $0x7fab701ff000,%rbx
  0x00007fab7415405c: movb   $0x0,(%rdi,%rbx,1)  ;*putfield toStringCache {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuffer::append@2 (line 269)

  0x00007fab74154060: mov    %rsi,%rdi
  0x00007fab74154063: movabs $0x7fab61baaf00,%rbx  ;   {metadata(method data for {method} {0x00007fab61911098} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00007fab7415406d: addq   $0x1,0x130(%rbx)
  0x00007fab74154075: mov    %rsi,%rdi
  0x00007fab74154078: mov    %rdi,%rsi          ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuffer::append@7 (line 270)

  0x00007fab7415407b: mov    %rdi,0x20(%rsp)
  0x00007fab74154080: nop
  0x00007fab74154081: nop
  0x00007fab74154082: nop
  0x00007fab74154083: nop
  0x00007fab74154084: nop
  0x00007fab74154085: nop
  0x00007fab74154086: nop
  0x00007fab74154087: callq  0x00007fab74047d60  ; OopMap{[32]=Oop [48]=Oop off=364}
                                                ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuffer::append@7 (line 270)
                                                ;   {optimized virtual_call}
  0x00007fab7415408c: lea    0x28(%rsp),%rax
  0x00007fab74154091: mov    0x8(%rax),%rdi
  0x00007fab74154095: mov    (%rdi),%rsi
  0x00007fab74154098: and    $0x7,%rsi
  0x00007fab7415409c: cmp    $0x5,%rsi
  0x00007fab741540a0: je     0x00007fab741540bd
  0x00007fab741540a6: mov    (%rax),%rsi
  0x00007fab741540a9: test   %rsi,%rsi
  0x00007fab741540ac: je     0x00007fab741540bd
  0x00007fab741540b2: lock cmpxchg %rsi,(%rdi)
  0x00007fab741540b7: jne    0x00007fab741540f8  ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuffer::append@12 (line 271)

  0x00007fab741540bd: mov    0x20(%rsp),%rax
  0x00007fab741540c2: add    $0x40,%rsp
  0x00007fab741540c6: pop    %rbp
  0x00007fab741540c7: test   %eax,0x1b68e033(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741540cd: retq   
  0x00007fab741540ce: mov    %rsi,0x8(%rsp)
  0x00007fab741540d3: mov    %rdi,(%rsp)
  0x00007fab741540d7: callq  0x00007fab740fea60  ; OopMap{rsi=Oop rdx=Oop [48]=Oop off=444}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 269)
                                                ;   {runtime_call}
  0x00007fab741540dc: jmpq   0x00007fab74154012
  0x00007fab741540e1: mov    %rdi,0x8(%rsp)
  0x00007fab741540e6: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741540ee: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop [48]=Oop off=467}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 269)
                                                ;   {runtime_call}
  0x00007fab741540f3: jmpq   0x00007fab74154044
  0x00007fab741540f8: lea    0x28(%rsp),%rax
  0x00007fab741540fd: mov    %rax,(%rsp)
  0x00007fab74154101: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab74154106: jmp    0x00007fab741540bd
  0x00007fab74154108: nop
  0x00007fab74154109: nop
  0x00007fab7415410a: mov    0x2c0(%r15),%rax
  0x00007fab74154111: movabs $0x0,%r10
  0x00007fab7415411b: mov    %r10,0x2c0(%r15)
  0x00007fab74154122: movabs $0x0,%r10
  0x00007fab7415412c: mov    %r10,0x2c8(%r15)
  0x00007fab74154133: mov    %rax,%rbx
  0x00007fab74154136: lea    0x28(%rsp),%rax
  0x00007fab7415413b: mov    0x8(%rax),%rsi
  0x00007fab7415413f: mov    (%rsi),%rdi
  0x00007fab74154142: and    $0x7,%rdi
  0x00007fab74154146: cmp    $0x5,%rdi
  0x00007fab7415414a: je     0x00007fab74154167
  0x00007fab74154150: mov    (%rax),%rdi
  0x00007fab74154153: test   %rdi,%rdi
  0x00007fab74154156: je     0x00007fab74154167
  0x00007fab7415415c: lock cmpxchg %rdi,(%rsi)
  0x00007fab74154161: jne    0x00007fab74154174
  0x00007fab74154167: mov    %rbx,%rax
  0x00007fab7415416a: add    $0x40,%rsp
  0x00007fab7415416e: pop    %rbp
  0x00007fab7415416f: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74154174: lea    0x28(%rsp),%rax
  0x00007fab74154179: mov    %rax,(%rsp)
  0x00007fab7415417d: callq  0x00007fab740fee20  ;   {runtime_call}
  0x00007fab74154182: jmp    0x00007fab74154167
  0x00007fab74154184: hlt    
  0x00007fab74154185: hlt    
  0x00007fab74154186: hlt    
  0x00007fab74154187: hlt    
  0x00007fab74154188: hlt    
  0x00007fab74154189: hlt    
  0x00007fab7415418a: hlt    
  0x00007fab7415418b: hlt    
  0x00007fab7415418c: hlt    
  0x00007fab7415418d: hlt    
  0x00007fab7415418e: hlt    
  0x00007fab7415418f: hlt    
  0x00007fab74154190: hlt    
  0x00007fab74154191: hlt    
  0x00007fab74154192: hlt    
  0x00007fab74154193: hlt    
  0x00007fab74154194: hlt    
  0x00007fab74154195: hlt    
  0x00007fab74154196: hlt    
  0x00007fab74154197: hlt    
  0x00007fab74154198: hlt    
  0x00007fab74154199: hlt    
  0x00007fab7415419a: hlt    
  0x00007fab7415419b: hlt    
  0x00007fab7415419c: hlt    
  0x00007fab7415419d: hlt    
  0x00007fab7415419e: hlt    
  0x00007fab7415419f: hlt    
[Stub Code]
  0x00007fab741541a0: nop                       ;   {no_reloc}
  0x00007fab741541a1: nop
  0x00007fab741541a2: nop
  0x00007fab741541a3: nop
  0x00007fab741541a4: nop
  0x00007fab741541a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741541af: jmpq   0x00007fab741541af  ;   {runtime_call}
[Exception Handler]
  0x00007fab741541b4: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab741541b9: mov    %rsp,-0x28(%rsp)
  0x00007fab741541be: sub    $0x80,%rsp
  0x00007fab741541c5: mov    %rax,0x78(%rsp)
  0x00007fab741541ca: mov    %rcx,0x70(%rsp)
  0x00007fab741541cf: mov    %rdx,0x68(%rsp)
  0x00007fab741541d4: mov    %rbx,0x60(%rsp)
  0x00007fab741541d9: mov    %rbp,0x50(%rsp)
  0x00007fab741541de: mov    %rsi,0x48(%rsp)
  0x00007fab741541e3: mov    %rdi,0x40(%rsp)
  0x00007fab741541e8: mov    %r8,0x38(%rsp)
  0x00007fab741541ed: mov    %r9,0x30(%rsp)
  0x00007fab741541f2: mov    %r10,0x28(%rsp)
  0x00007fab741541f7: mov    %r11,0x20(%rsp)
  0x00007fab741541fc: mov    %r12,0x18(%rsp)
  0x00007fab74154201: mov    %r13,0x10(%rsp)
  0x00007fab74154206: mov    %r14,0x8(%rsp)
  0x00007fab7415420b: mov    %r15,(%rsp)
  0x00007fab7415420f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74154219: movabs $0x7fab741541b9,%rsi  ;   {internal_word}
  0x00007fab74154223: mov    %rsp,%rdx
  0x00007fab74154226: and    $0xfffffffffffffff0,%rsp
  0x00007fab7415422a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7415422f: hlt    
[Deopt Handler Code]
  0x00007fab74154230: movabs $0x7fab74154230,%r10  ;   {section_word}
  0x00007fab7415423a: push   %r10
  0x00007fab7415423c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74154241: hlt    
  0x00007fab74154242: hlt    
  0x00007fab74154243: hlt    
  0x00007fab74154244: hlt    
  0x00007fab74154245: hlt    
  0x00007fab74154246: hlt    
  0x00007fab74154247: hlt    
<nmethod compile_id='136' compiler='C1' level='3' entry='0x00007fab74153f20' size='1424' address='0x00007fab74153d90' relocation_offset='312' insts_offset='400' stub_offset='1040' scopes_data_offset='1216' scopes_pcs_offset='1272' dependencies_offset='1416' metadata_offset='1208' method='java/lang/StringBuffer append (Ljava/lang/String;)Ljava/lang/StringBuffer;' bytes='13' count='390' iicount='390' stamp='0.543'/>
<writer thread='140373948942080'/>
[Loaded sun.net.www.protocol.jar.JarURLConnection from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.jar.URLJarFile$URLJarFileCloseController from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.jar.JarFileFactory from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.jar.URLJarFile from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<dependency_failed type='leaf_type' ctxk='java/util/jar/JarFile' witness='sun/net/www/protocol/jar/URLJarFile' stamp='0.543'/>
<dependency_failed type='leaf_type' ctxk='java/util/jar/JarFile' witness='sun/net/www/protocol/jar/URLJarFile' stamp='0.543'/>
<writer thread='140373956478720'/>
<make_not_entrant thread='140373956478720' compile_id='84' compiler='C1' level='3' stamp='0.543'/>
<make_not_entrant thread='140373956478720' compile_id='89' compiler='C1' level='3' stamp='0.543'/>
<writer thread='140373948942080'/>
<task_queued compile_id='139' method='java/lang/StringCoding deref (Ljava/lang/ThreadLocal;)Ljava/lang/Object;' bytes='19' count='256' iicount='256' level='3' stamp='0.543' comment='tiered' hot_count='256'/>
[Loaded sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.jar.JarURLConnection$JarURLInputStream from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
----------------------------------------------------------------------
sun/net/www/ParseUtil.encodePath  [0x00007fab741545c0, 0x00007fab74155458]  3736 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/String&apos;
  # parm1:    rdx       = boolean
  #           [sp+0xc0]  (sp of caller)
  0x00007fab741545c0: mov    %eax,-0x14000(%rsp)
  0x00007fab741545c7: push   %rbp
  0x00007fab741545c8: sub    $0xb0,%rsp
  0x00007fab741545cf: mov    %edx,0x78(%rsp)
  0x00007fab741545d3: movabs $0x7fab61badd00,%rbx  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab741545dd: mov    0xfc(%rbx),%edi
  0x00007fab741545e3: add    $0x8,%edi
  0x00007fab741545e6: mov    %edi,0xfc(%rbx)
  0x00007fab741545ec: movabs $0x7fab61a5a388,%rbx  ;   {metadata({method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab741545f6: and    $0x1ff8,%edi
  0x00007fab741545fc: cmp    $0x0,%edi
  0x00007fab741545ff: je     0x00007fab741551c3  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@0 (line 105)

  0x00007fab74154605: cmp    (%rsi),%rax        ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@1 (line 105)
                                
<writer thread='140373948942080'/>
[Loaded java.util.ArrayList$Itr from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
                ; implicit exception: dispatches to 0x00007fab741551da
  0x00007fab74154608: mov    %rsi,%rbx
  0x00007fab7415460b: movabs $0x7fab61badd00,%rdi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154615: addq   $0x1,0x130(%rdi)
  0x00007fab7415461d: movabs $0x7fab61ab9630,%rbx  ;   {metadata(method data for {method} {0x00007fab61895538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74154627: mov    0xfc(%rbx),%edi
  0x00007fab7415462d: add    $0x8,%edi
  0x00007fab74154630: mov    %edi,0xfc(%rbx)
  0x00007fab74154636: movabs $0x7fab61895538,%rbx  ;   {metadata({method} {0x00007fab61895538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74154640: and    $0x7ffff8,%edi
  0x00007fab74154646: cmp    $0x0,%edi
  0x00007fab74154649: je     0x00007fab741551df
  0x00007fab7415464f: mov    0xc(%rsi),%r8d
  0x00007fab74154653: shl    $0x3,%r8           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@1 (line 105)

  0x00007fab74154657: mov    0xc(%r8),%r9d      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@1 (line 105)
                                                ; implicit exception: dispatches to 0x00007fab741551f6
  0x00007fab7415465b: mov    %r9,%rbx
  0x00007fab7415465e: shl    %ebx
  0x00007fab74154660: add    $0x10,%ebx
  0x00007fab74154663: movabs $0x7c00001f8,%rdx  ;   {metadata({type array char})}
  0x00007fab7415466d: mov    %rsi,%r13
  0x00007fab74154670: movslq %ebx,%rbx
  0x00007fab74154673: mov    %rbx,%rdi
  0x00007fab74154676: cmp    $0xffffff,%rbx
  0x00007fab7415467d: ja     0x00007fab741551fb
  0x00007fab74154683: movabs $0x17,%rsi
  0x00007fab7415468d: lea    (%rsi,%rbx,2),%rsi
  0x00007fab74154691: and    $0xfffffffffffffff8,%rsi
  0x00007fab74154695: mov    0x60(%r15),%rax
  0x00007fab74154699: lea    (%rax,%rsi,1),%rsi
  0x00007fab7415469d: cmp    0x70(%r15),%rsi
  0x00007fab741546a1: ja     0x00007fab741551fb
  0x00007fab741546a7: mov    %rsi,0x60(%r15)
  0x00007fab741546ab: sub    %rax,%rsi
  0x00007fab741546ae: movq   $0x1,(%rax)
  0x00007fab741546b5: mov    %rdx,%rcx
  0x00007fab741546b8: shr    $0x3,%rcx
  0x00007fab741546bc: mov    %ecx,0x8(%rax)
  0x00007fab741546bf: mov    %ebx,0xc(%rax)
  0x00007fab741546c2: sub    $0x10,%rsi
  0x00007fab741546c6: je     0x00007fab741546dd
  0x00007fab741546cc: xor    %rbx,%rbx
  0x00007fab741546cf: shr    $0x3,%rsi
  0x00007fab741546d3: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fab741546d8: dec    %rsi
  0x00007fab741546db: jne    0x00007fab741546d3  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@9 (line 105)

  0x00007fab741546dd: mov    %r13,%rsi
  0x00007fab741546e0: movabs $0x7fab61badd00,%rbx  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab741546ea: addq   $0x1,0x1c8(%rbx)
  0x00007fab741546f2: movabs $0x7fab61b82a88,%rbx  ;   {metadata(method data for {method} {0x00007fab61899640} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741546fc: mov    0xfc(%rbx),%edx
  0x00007fab74154702: add    $0x8,%edx
  0x00007fab74154705: mov    %edx,0xfc(%rbx)
  0x00007fab7415470b: movabs $0x7fab61899640,%rbx  ;   {metadata({method} {0x00007fab61899640} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74154715: and    $0x7ffff8,%edx
  0x00007fab7415471b: cmp    $0x0,%edx
  0x00007fab7415471e: je     0x00007fab74155205
  0x00007fab74154724: mov    %r9,%rbx
  0x00007fab74154727: movabs $0x7c00001f8,%rdx  ;   {metadata({type array char})}
  0x00007fab74154731: mov    %rax,0x68(%rsp)
  0x00007fab74154736: movslq %ebx,%rbx
  0x00007fab74154739: mov    %rbx,%rdi
  0x00007fab7415473c: cmp    $0xffffff,%rbx
  0x00007fab74154743: ja     0x00007fab7415521c
  0x00007fab74154749: movabs $0x17,%rsi
  0x00007fab74154753: lea    (%rsi,%rbx,2),%rsi
  0x00007fab74154757: and    $0xfffffffffffffff8,%rsi
  0x00007fab7415475b: mov    0x60(%r15),%rax
  0x00007fab7415475f: lea    (%rax,%rsi,1),%rsi
  0x00007fab74154763: cmp    0x70(%r15),%rsi
  0x00007fab74154767: ja     0x00007fab7415521c
  0x00007fab7415476d: mov    %rsi,0x60(%r15)
  0x00007fab74154771: sub    %rax,%rsi
  0x00007fab74154774: movq   $0x1,(%rax)
  0x00007fab7415477b: mov    %rdx,%rcx
  0x00007fab7415477e: shr    $0x3,%rcx
  0x00007fab74154782: mov    %ecx,0x8(%rax)
  0x00007fab74154785: mov    %ebx,0xc(%rax)
  0x00007fab74154788: sub    $0x10,%rsi
  0x00007fab7415478c: je     0x00007fab741547a3
  0x00007fab74154792: xor    %rbx,%rbx
  0x00007fab74154795: shr    $0x3,%rsi
  0x00007fab74154799: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fab7415479e: dec    %rsi
  0x00007fab741547a1: jne    0x00007fab74154799  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@5 (line 2899)
                                                ; - sun.net.www.ParseUtil::encodePath@15 (line 107)

  0x00007fab741547a3: mov    %rax,0x70(%rsp)
  0x00007fab741547a8: movabs $0x7fab61b82a88,%rsi  ;   {metadata(method data for {method} {0x00007fab61899640} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x00007fab741547b2: addq   $0x1,0x130(%rsi)
  0x00007fab741547ba: mov    %r8,%rsi
  0x00007fab741547bd: mov    $0x0,%edx
  0x00007fab741547c2: mov    %rax,%rcx
  0x00007fab741547c5: mov    $0x0,%r8d
  0x00007fab741547cb: mov    %r13,0x60(%rsp)
  0x00007fab741547d0: lea    (%r8,%r9,1),%rdi
  0x00007fab741547d4: cmp    0xc(%rcx),%edi
  0x00007fab741547d7: ja     0x00007fab74155226
  0x00007fab741547dd: movslq %edx,%rdx
  0x00007fab741547e0: movslq %r8d,%r8
  0x00007fab741547e3: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007fab741547e8: lea    0x10(%rcx,%r8,2),%rsi
  0x00007fab741547ed: mov    %r9,%rdx
  0x00007fab741547f0: test   $0xf,%esp
  0x00007fab741547f6: je     0x00007fab7415480e
  0x00007fab741547fc: sub    $0x8,%rsp
  0x00007fab74154800: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007fab74154805: add    $0x8,%rsp
  0x00007fab74154809: jmpq   0x00007fab74154813
  0x00007fab7415480e: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@20 (line 2900)
                                                ; - sun.net.www.ParseUtil::encodePath@15 (line 107)
                                                ;   {runtime_call}
  0x00007fab74154813: mov    0x60(%rsp),%rsi
  0x00007fab74154818: movabs $0x7fab61badd00,%rdx  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154822: addq   $0x1,0x260(%rdx)
  0x00007fab7415482a: movabs $0x7fab61ab9630,%rdx  ;   {metadata(method data for {method} {0x00007fab61895538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab74154834: mov    0xfc(%rdx),%esi
  0x00007fab7415483a: add    $0x8,%esi
  0x00007fab7415483d: mov    %esi,0xfc(%rdx)
  0x00007fab74154843: movabs $0x7fab61895538,%rdx  ;   {metadata({method} {0x00007fab61895538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fab7415484d: and    $0x7ffff8,%esi
  0x00007fab74154853: cmp    $0x0,%esi
  0x00007fab74154856: je     0x00007fab74155231
  0x00007fab7415485c: mov    0x60(%rsp),%rsi
  0x00007fab74154861: mov    0xc(%rsi),%edx
  0x00007fab74154864: shl    $0x3,%rdx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@21 (line 109)

  0x00007fab74154868: mov    0xc(%rdx),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@21 (line 109)
                                                ; implicit exception: dispatches to 0x00007fab74155248
  0x00007fab7415486b: mov    %edi,0x90(%rsp)
  0x00007fab74154872: mov    0x68(%rsp),%rax
  0x00007fab74154877: mov    $0x0,%ebx
  0x00007fab7415487c: mov    $0x0,%ecx          ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@29 (line 110)

  0x00007fab74154881: mov    %ecx,0x88(%rsp)
  0x00007fab74154888: mov    %rax,0x80(%rsp)
  0x00007fab74154890: mov    0x70(%rsp),%rax
  0x00007fab74154895: data16 xchg %ax,%ax
  0x00007fab74154898: mov    0x78(%rsp),%edx
  0x00007fab7415489c: cmp    %edi,%ebx
  0x00007fab7415489e: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab741548a8: movabs $0x2f8,%r9
  0x00007fab741548b2: jge    0x00007fab741548c2
  0x00007fab741548b8: movabs $0x308,%r9
  0x00007fab741548c2: mov    (%rsi,%r9,1),%r11
  0x00007fab741548c6: lea    0x1(%r11),%r11
  0x00007fab741548ca: mov    %r11,(%rsi,%r9,1)
  0x00007fab741548ce: jge    0x00007fab7415512b  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@33 (line 110)

  0x00007fab741548d4: movslq %ebx,%rsi
  0x00007fab741548d7: cmp    0xc(%rax),%ebx
  0x00007fab741548da: jae    0x00007fab7415524d
  0x00007fab741548e0: movzwl 0x10(%rax,%rsi,2),%r9d  ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@40 (line 111)

  0x00007fab741548e6: mov    %r9d,0x7c(%rsp)
  0x00007fab741548eb: cmp    $0x0,%edx
  0x00007fab741548ee: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab741548f8: movabs $0x318,%r11
  0x00007fab74154902: jne    0x00007fab74154912
  0x00007fab74154908: movabs $0x328,%r11
  0x00007fab74154912: mov    (%rsi,%r11,1),%r13
  0x00007fab74154916: lea    0x1(%r13),%r13
  0x00007fab7415491a: mov    %r13,(%rsi,%r11,1)
  0x00007fab7415491e: jne    0x00007fab7415495e  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@44 (line 112)

  0x00007fab74154924: cmp    $0x2f,%r9d
  0x00007fab74154928: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154932: movabs $0x338,%r11
  0x00007fab7415493c: je     0x00007fab7415494c
  0x00007fab74154942: movabs $0x348,%r11
  0x00007fab7415494c: mov    (%rsi,%r11,1),%r13
  0x00007fab74154950: lea    0x1(%r13),%r13
  0x00007fab74154954: mov    %r13,(%rsi,%r11,1)
  0x00007fab74154958: je     0x00007fab74154e89  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@51 (line 112)

  0x00007fab7415495e: cmp    $0x0,%edx
  0x00007fab74154961: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab7415496b: movabs $0x358,%r11
  0x00007fab74154975: je     0x00007fab74154985
  0x00007fab7415497b: movabs $0x368,%r11
  0x00007fab74154985: mov    (%rsi,%r11,1),%r13
  0x00007fab74154989: lea    0x1(%r13),%r13
  0x00007fab7415498d: mov    %r13,(%rsi,%r11,1)
  0x00007fab74154991: je     0x00007fab741549d1  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@55 (line 112)

  0x00007fab74154997: cmp    $0x2f,%r9d
  0x00007fab7415499b: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab741549a5: movabs $0x378,%r11
  0x00007fab741549af: jne    0x00007fab741549bf
  0x00007fab741549b5: movabs $0x388,%r11
  0x00007fab741549bf: mov    (%rsi,%r11,1),%r13
  0x00007fab741549c3: lea    0x1(%r13),%r13
  0x00007fab741549c7: mov    %r13,(%rsi,%r11,1)
  0x00007fab741549cb: je     0x00007fab74154e89  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@63 (line 112)

  0x00007fab741549d1: cmp    $0x7f,%r9d
  0x00007fab741549d5: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab741549df: movabs $0x3b0,%r11
  0x00007fab741549e9: jg     0x00007fab741549f9
  0x00007fab741549ef: movabs $0x3c0,%r11
  0x00007fab741549f9: mov    (%rsi,%r11,1),%r13
  0x00007fab741549fd: lea    0x1(%r13),%r13
  0x00007fab74154a01: mov    %r13,(%rsi,%r11,1)
  0x00007fab74154a05: jg     0x00007fab74154cca  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@81 (line 115)

  0x00007fab74154a0b: cmp    $0x61,%r9d
  0x00007fab74154a0f: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154a19: movabs $0x3d0,%r11
  0x00007fab74154a23: jl     0x00007fab74154a33
  0x00007fab74154a29: movabs $0x3e0,%r11
  0x00007fab74154a33: mov    (%rsi,%r11,1),%r13
  0x00007fab74154a37: lea    0x1(%r13),%r13
  0x00007fab74154a3b: mov    %r13,(%rsi,%r11,1)
  0x00007fab74154a3f: jl     0x00007fab74154a7f  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@88 (line 116)

  0x00007fab74154a45: cmp    $0x7a,%r9d
  0x00007fab74154a49: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154a53: movabs $0x3f0,%r11
  0x00007fab74154a5d: jle    0x00007fab74154a6d
  0x00007fab74154a63: movabs $0x400,%r11
  0x00007fab74154a6d: mov    (%rsi,%r11,1),%r13
  0x00007fab74154a71: lea    0x1(%r13),%r13
  0x00007fab74154a75: mov    %r13,(%rsi,%r11,1)
  0x00007fab74154a79: jle    0x00007fab74154c82  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@95 (line 116)

  0x00007fab74154a7f: cmp    $0x41,%r9d
  0x00007fab74154a83: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154a8d: movabs $0x410,%r11
  0x00007fab74154a97: jl     0x00007fab74154aa7
  0x00007fab74154a9d: movabs $0x420,%r11
  0x00007fab74154aa7: mov    (%rsi,%r11,1),%r13
  0x00007fab74154aab: lea    0x1(%r13),%r13
  0x00007fab74154aaf: mov    %r13,(%rsi,%r11,1)
  0x00007fab74154ab3: jl     0x00007fab74154af3  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@102 (line 116)

  0x00007fab74154ab9: cmp    $0x5a,%r9d
  0x00007fab74154abd: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154ac7: movabs $0x430,%r11
  0x00007fab74154ad1: jle    0x00007fab74154ae1
  0x00007fab74154ad7: movabs $0x440,%r11
  0x00007fab74154ae1: mov    (%rsi,%r11,1),%r13
  0x00007fab74154ae5: lea    0x1(%r13),%r13
  0x00007fab74154ae9: mov    %r13,(%rsi,%r11,1)
  0x00007fab74154aed: jle    0x00007fab74154c82  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@109 (line 116)

  0x00007fab74154af3: cmp    $0x30,%r9d
  0x00007fab74154af7: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154b01: movabs $0x450,%r11
  0x00007fab74154b0b: jl     0x00007fab74154b1b
  0x00007fab74154b11: movabs $0x460,%r11
  0x00007fab74154b1b: mov    (%rsi,%r11,1),%r13
  0x00007fab74154b1f: lea    0x1(%r13),%r13
  0x00007fab74154b23: mov    %r13,(%rsi,%r11,1)
  0x00007fab74154b27: jl     0x00007fab74154b67  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@116 (line 116)

  0x00007fab74154b2d: cmp    $0x39,%r9d
  0x00007fab74154b31: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154b3b: movabs $0x470,%r11
  0x00007fab74154b45: jg     0x00007fab74154b55
  0x00007fab74154b4b: movabs $0x480,%r11
  0x00007fab74154b55: mov    (%rsi,%r11,1),%r13
  0x00007fab74154b59: lea    0x1(%r13),%r13
  0x00007fab74154b5d: mov    %r13,(%rsi,%r11,1)
  0x00007fab74154b61: jle    0x00007fab74154c82  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@123 (line 116)

  0x00007fab74154b67: mov    %ebx,0x8c(%rsp)
  0x00007fab74154b6e: movabs $0x670bbc170,%rsi  ;   {oop(a &apos;java/lang/Class&apos; = &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154b78: mov    0x68(%rsi),%esi
  0x00007fab74154b7b: shl    $0x3,%rsi          ;*getstatic encodedInPath {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@137 (line 121)

  0x00007fab74154b7f: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00007fab74155256
  0x00007fab74154b82: mov    %rsi,%r11
  0x00007fab74154b85: movabs $0x7fab61badd00,%r13  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154b8f: movabs $0x7c0031d40,%r10  ;   {metadata(&apos;java/util/BitSet&apos;)}
  0x00007fab74154b99: mov    %r10,0x4b8(%r13)
  0x00007fab74154ba0: addq   $0x1,0x4c0(%r13)
  0x00007fab74154ba8: mov    %r9,%rdx           ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@142 (line 121)

  0x00007fab74154bab: nop
  0x00007fab74154bac: nop
  0x00007fab74154bad: nop
  0x00007fab74154bae: nop
  0x00007fab74154baf: callq  0x00007fab74047d60  ; OopMap{[112]=Oop [128]=Oop off=1524}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@142 (line 121)
                                                ;   {optimized virtual_call}
  0x00007fab74154bb4: cmp    $0x0,%eax
  0x00007fab74154bb7: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154bc1: movabs $0x540,%rdx
  0x00007fab74154bcb: je     0x00007fab74154bdb
  0x00007fab74154bd1: movabs $0x550,%rdx
  0x00007fab74154bdb: mov    (%rsi,%rdx,1),%rcx
  0x00007fab74154bdf: lea    0x1(%rcx),%rcx
  0x00007fab74154be3: mov    %rcx,(%rsi,%rdx,1)
  0x00007fab74154be7: je     0x00007fab74154c39  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@145 (line 121)

  0x00007fab74154bed: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154bf7: addq   $0x1,0x560(%rsi)
  0x00007fab74154bff: mov    0x80(%rsp),%rsi
  0x00007fab74154c07: mov    0x7c(%rsp),%edx
  0x00007fab74154c0b: mov    0x88(%rsp),%ecx    ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@152 (line 122)

  0x00007fab74154c12: nop
  0x00007fab74154c13: nop
  0x00007fab74154c14: nop
  0x00007fab74154c15: nop
  0x00007fab74154c16: nop
  0x00007fab74154c17: callq  0x00007fab74048160  ; OopMap{[112]=Oop [128]=Oop off=1628}
                                                ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@152 (line 122)
                                                ;   {static_call}
  0x00007fab74154c1c: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154c26: incl   0x570(%rsi)
  0x00007fab74154c2c: mov    0x80(%rsp),%r8
  0x00007fab74154c34: jmpq   0x00007fab74154ecf  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@156 (line 122)

  0x00007fab74154c39: mov    0x7c(%rsp),%r9d
  0x00007fab74154c3e: mov    0x88(%rsp),%ebx
  0x00007fab74154c45: mov    0x80(%rsp),%rax
  0x00007fab74154c4d: mov    %rbx,%rcx
  0x00007fab74154c50: inc    %ecx
  0x00007fab74154c52: movslq %ebx,%rsi
  0x00007fab74154c55: cmp    0xc(%rax),%ebx     ; implicit exception: dispatches to 0x00007fab7415525b
  0x00007fab74154c58: jae    0x00007fab74155265
  0x00007fab74154c5e: mov    %r9w,0x10(%rax,%rsi,2)  ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@166 (line 124)

  0x00007fab74154c64: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154c6e: incl   0x588(%rsi)
  0x00007fab74154c74: mov    %rax,%rdi
  0x00007fab74154c77: mov    %rcx,%rax
  0x00007fab74154c7a: mov    %rdi,%r8
  0x00007fab74154c7d: jmpq   0x00007fab74154ecf  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@167 (line 124)

  0x00007fab74154c82: mov    %ebx,0x8c(%rsp)
  0x00007fab74154c89: mov    0x88(%rsp),%ebx
  0x00007fab74154c90: mov    0x80(%rsp),%rdi
  0x00007fab74154c98: mov    %rbx,%rcx
  0x00007fab74154c9b: inc    %ecx
  0x00007fab74154c9d: movslq %ebx,%rsi
  0x00007fab74154ca0: cmp    0xc(%rdi),%ebx     ; implicit exception: dispatches to 0x00007fab7415526e
  0x00007fab74154ca3: jae    0x00007fab74155278
  0x00007fab74154ca9: mov    %r9w,0x10(%rdi,%rsi,2)  ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@133 (line 119)

  0x00007fab74154caf: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154cb9: incl   0x490(%rsi)
  0x00007fab74154cbf: mov    %rcx,%rax
  0x00007fab74154cc2: mov    %rdi,%r8
  0x00007fab74154cc5: jmpq   0x00007fab74154ecf  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@134 (line 119)

  0x00007fab74154cca: mov    %ebx,0x8c(%rsp)
  0x00007fab74154cd1: mov    0x88(%rsp),%ebx
  0x00007fab74154cd8: mov    0x80(%rsp),%rdi
  0x00007fab74154ce0: cmp    $0x7ff,%r9d
  0x00007fab74154ce7: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154cf1: movabs $0x5a0,%rdx
  0x00007fab74154cfb: jle    0x00007fab74154d0b
  0x00007fab74154d01: movabs $0x5b0,%rdx
  0x00007fab74154d0b: mov    (%rsi,%rdx,1),%rcx
  0x00007fab74154d0f: lea    0x1(%rcx),%rcx
  0x00007fab74154d13: mov    %rcx,(%rsi,%rdx,1)
  0x00007fab74154d17: jle    0x00007fab74154df9  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@175 (line 125)

  0x00007fab74154d1d: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154d27: addq   $0x1,0x5c0(%rsi)
  0x00007fab74154d2f: mov    %r9,%rsi
  0x00007fab74154d32: sar    $0xc,%esi
  0x00007fab74154d35: and    $0xf,%esi
  0x00007fab74154d38: or     $0xe0,%esi
  0x00007fab74154d3e: mov    %rsi,%rdx
  0x00007fab74154d41: and    $0xffff,%edx
  0x00007fab74154d47: mov    %rdi,%rsi
  0x00007fab74154d4a: mov    %rbx,%rcx          ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@193 (line 126)

  0x00007fab74154d4d: mov    %rdi,0x80(%rsp)
  0x00007fab74154d55: nop
  0x00007fab74154d56: nop
  0x00007fab74154d57: callq  0x00007fab74048160  ; OopMap{[112]=Oop [128]=Oop off=1948}
                                                ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@193 (line 126)
                                                ;   {static_call}
  0x00007fab74154d5c: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154d66: addq   $0x1,0x5d0(%rsi)
  0x00007fab74154d6e: mov    0x7c(%rsp),%r9d
  0x00007fab74154d73: sar    $0x6,%r9d
  0x00007fab74154d77: and    $0x3f,%r9d
  0x00007fab74154d7b: or     $0x80,%r9d
  0x00007fab74154d82: and    $0xffff,%r9d
  0x00007fab74154d89: mov    0x80(%rsp),%rsi
  0x00007fab74154d91: mov    %r9,%rdx
  0x00007fab74154d94: mov    %rax,%rcx          ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@212 (line 127)

  0x00007fab74154d97: callq  0x00007fab74048160  ; OopMap{[112]=Oop [128]=Oop off=2012}
                                                ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@212 (line 127)
                                                ;   {static_call}
  0x00007fab74154d9c: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154da6: addq   $0x1,0x5e0(%rsi)
  0x00007fab74154dae: mov    0x7c(%rsp),%r9d
  0x00007fab74154db3: and    $0x3f,%r9d
  0x00007fab74154db7: or     $0x80,%r9d
  0x00007fab74154dbe: and    $0xffff,%r9d
  0x00007fab74154dc5: mov    0x80(%rsp),%rsi
  0x00007fab74154dcd: mov    %r9,%rdx
  0x00007fab74154dd0: mov    %rax,%rcx          ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@230 (line 128)

  0x00007fab74154dd3: nop
  0x00007fab74154dd4: nop
  0x00007fab74154dd5: nop
  0x00007fab74154dd6: nop
  0x00007fab74154dd7: callq  0x00007fab74048160  ; OopMap{[112]=Oop [128]=Oop off=2076}
                                                ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@230 (line 128)
                                                ;   {static_call}
  0x00007fab74154ddc: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154de6: incl   0x5f0(%rsi)
  0x00007fab74154dec: mov    0x80(%rsp),%r8
  0x00007fab74154df4: jmpq   0x00007fab74154ecf  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@234 (line 128)

  0x00007fab74154df9: mov    %rdi,0x80(%rsp)
  0x00007fab74154e01: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154e0b: addq   $0x1,0x608(%rsi)
  0x00007fab74154e13: mov    %r9,%rsi
  0x00007fab74154e16: sar    $0x6,%esi
  0x00007fab74154e19: and    $0x1f,%esi
  0x00007fab74154e1c: or     $0xc0,%esi
  0x00007fab74154e22: mov    %rsi,%rdx
  0x00007fab74154e25: and    $0xffff,%edx
  0x00007fab74154e2b: mov    0x80(%rsp),%rsi
  0x00007fab74154e33: mov    %rbx,%rcx          ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@252 (line 130)

  0x00007fab74154e36: nop
  0x00007fab74154e37: callq  0x00007fab74048160  ; OopMap{[112]=Oop [128]=Oop off=2172}
                                                ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@252 (line 130)
                                                ;   {static_call}
  0x00007fab74154e3c: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154e46: addq   $0x1,0x618(%rsi)
  0x00007fab74154e4e: mov    0x7c(%rsp),%r9d
  0x00007fab74154e53: and    $0x3f,%r9d
  0x00007fab74154e57: or     $0x80,%r9d
  0x00007fab74154e5e: and    $0xffff,%r9d
  0x00007fab74154e65: mov    0x80(%rsp),%rsi
  0x00007fab74154e6d: mov    %r9,%rdx
  0x00007fab74154e70: mov    %rax,%rcx          ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@270 (line 131)

  0x00007fab74154e73: nop
  0x00007fab74154e74: nop
  0x00007fab74154e75: nop
  0x00007fab74154e76: nop
  0x00007fab74154e77: callq  0x00007fab74048160  ; OopMap{[112]=Oop [128]=Oop off=2236}
                                                ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@270 (line 131)
                                                ;   {static_call}
  0x00007fab74154e7c: mov    0x80(%rsp),%r8
  0x00007fab74154e84: jmpq   0x00007fab74154ecf  ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@274 (line 136)

  0x00007fab74154e89: mov    %ebx,0x8c(%rsp)
  0x00007fab74154e90: mov    0x88(%rsp),%ebx
  0x00007fab74154e97: mov    0x80(%rsp),%r8
  0x00007fab74154e9f: mov    %rbx,%rcx
  0x00007fab74154ea2: inc    %ecx
  0x00007fab74154ea4: mov    $0x2f,%edx
  0x00007fab74154ea9: movslq %ebx,%rsi
  0x00007fab74154eac: cmp    0xc(%r8),%ebx      ; implicit exception: dispatches to 0x00007fab74155281
  0x00007fab74154eb0: jae    0x00007fab7415528b
  0x00007fab74154eb6: mov    %dx,0x10(%r8,%rsi,2)  ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@73 (line 113)

  0x00007fab74154ebc: movabs $0x7fab61badd00,%rbx  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154ec6: incl   0x398(%rbx)
  0x00007fab74154ecc: mov    %rcx,%rax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@74 (line 113)

  0x00007fab74154ecf: mov    0xc(%r8),%ebx      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@279 (line 136)
                                                ; implicit exception: dispatches to 0x00007fab74155294
  0x00007fab74154ed3: mov    %rax,%rdx
  0x00007fab74154ed6: add    $0x9,%edx
  0x00007fab74154ed9: cmp    %ebx,%edx
  0x00007fab74154edb: movabs $0x7fab61badd00,%rdx  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154ee5: movabs $0x628,%rsi
  0x00007fab74154eef: jle    0x00007fab74154eff
  0x00007fab74154ef5: movabs $0x638,%rsi
  0x00007fab74154eff: mov    (%rdx,%rsi,1),%rdi
  0x00007fab74154f03: lea    0x1(%rdi),%rdi
  0x00007fab74154f07: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab74154f0b: jg     0x00007fab74154f19  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@280 (line 136)

  0x00007fab74154f11: mov    %r8,%rsi
  0x00007fab74154f14: jmpq   0x00007fab741550ae  ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@319 (line 110)

  0x00007fab74154f19: shl    %ebx
  0x00007fab74154f1b: add    $0x10,%ebx
  0x00007fab74154f1e: cmp    $0x0,%ebx
  0x00007fab74154f21: movabs $0x7fab61badd00,%rdx  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154f2b: movabs $0x648,%rsi
  0x00007fab74154f35: jge    0x00007fab74154f45
  0x00007fab74154f3b: movabs $0x658,%rsi
  0x00007fab74154f45: mov    (%rdx,%rsi,1),%rdi
  0x00007fab74154f49: lea    0x1(%rdi),%rdi
  0x00007fab74154f4d: mov    %rdi,(%rdx,%rsi,1)
  0x00007fab74154f51: jge    0x00007fab74154f5c  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@294 (line 138)

  0x00007fab74154f57: mov    $0x7fffffff,%ebx   ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@301 (line 141)

  0x00007fab74154f5c: movabs $0x7c00001f8,%rdx  ;   {metadata({type array char})}
  0x00007fab74154f66: mov    %rax,%r11
  0x00007fab74154f69: movslq %ebx,%rbx
  0x00007fab74154f6c: mov    %rbx,%rdi
  0x00007fab74154f6f: cmp    $0xffffff,%rbx
  0x00007fab74154f76: ja     0x00007fab74155299
  0x00007fab74154f7c: movabs $0x17,%rsi
  0x00007fab74154f86: lea    (%rsi,%rbx,2),%rsi
  0x00007fab74154f8a: and    $0xfffffffffffffff8,%rsi
  0x00007fab74154f8e: mov    0x60(%r15),%rax
  0x00007fab74154f92: lea    (%rax,%rsi,1),%rsi
  0x00007fab74154f96: cmp    0x70(%r15),%rsi
  0x00007fab74154f9a: ja     0x00007fab74155299
  0x00007fab74154fa0: mov    %rsi,0x60(%r15)
  0x00007fab74154fa4: sub    %rax,%rsi
  0x00007fab74154fa7: movq   $0x1,(%rax)
  0x00007fab74154fae: mov    %rdx,%rcx
  0x00007fab74154fb1: shr    $0x3,%rcx
  0x00007fab74154fb5: mov    %ecx,0x8(%rax)
  0x00007fab74154fb8: mov    %ebx,0xc(%rax)
  0x00007fab74154fbb: sub    $0x10,%rsi
  0x00007fab74154fbf: je     0x00007fab74154fd6
  0x00007fab74154fc5: xor    %rbx,%rbx
  0x00007fab74154fc8: shr    $0x3,%rsi
  0x00007fab74154fcc: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fab74154fd1: dec    %rsi
  0x00007fab74154fd4: jne    0x00007fab74154fcc  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@303 (line 141)

  0x00007fab74154fd6: movabs $0x7fab61badd00,%rsi  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74154fe0: addq   $0x1,0x668(%rsi)
  0x00007fab74154fe8: mov    %r8,%rsi
  0x00007fab74154feb: mov    $0x0,%edx
  0x00007fab74154ff0: mov    %rax,%rcx
  0x00007fab74154ff3: mov    $0x0,%r8d
  0x00007fab74154ff9: mov    %r11,%r9
  0x00007fab74154ffc: mov    %r11d,0x94(%rsp)
  0x00007fab74155004: mov    %rax,0x98(%rsp)
  0x00007fab7415500c: mov    0x8(%rcx),%edi
  0x00007fab7415500f: shl    $0x3,%rdi
  0x00007fab74155013: cmpl   $0x0,0x8(%rdi)
  0x00007fab7415501a: jge    0x00007fab741552a3
  0x00007fab74155020: mov    0x8(%rsi),%edi
  0x00007fab74155023: shl    $0x3,%rdi
  0x00007fab74155027: cmpl   $0x0,0x8(%rdi)
  0x00007fab7415502e: jge    0x00007fab741552a3
  0x00007fab74155034: lea    (%rdx,%r9,1),%rdi
  0x00007fab74155038: cmp    0xc(%rsi),%edi
  0x00007fab7415503b: ja     0x00007fab741552a3
  0x00007fab74155041: lea    (%r8,%r9,1),%rdi
  0x00007fab74155045: cmp    0xc(%rcx),%edi
  0x00007fab74155048: ja     0x00007fab741552a3
  0x00007fab7415504e: test   %r9d,%r9d
  0x00007fab74155051: jl     0x00007fab741552a3
  0x00007fab74155057: je     0x00007fab7415509f
  0x00007fab7415505d: movslq %edx,%rdx
  0x00007fab74155060: movslq %r8d,%r8
  0x00007fab74155063: mov    0x8(%rsi),%edi
  0x00007fab74155066: cmp    0x8(%rcx),%edi
  0x00007fab74155069: jne    0x00007fab741552a3
  0x00007fab7415506f: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007fab74155074: lea    0x10(%rcx,%r8,2),%rsi
  0x00007fab74155079: mov    %r9,%rdx
  0x00007fab7415507c: test   $0xf,%esp
  0x00007fab74155082: je     0x00007fab7415509a
  0x00007fab74155088: sub    $0x8,%rsp
  0x00007fab7415508c: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007fab74155091: add    $0x8,%rsp
  0x00007fab74155095: jmpq   0x00007fab7415509f
  0x00007fab7415509a: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@313 (line 142)
                                                ;   {runtime_call}
  0x00007fab7415509f: mov    0x98(%rsp),%rsi    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@319 (line 110)

  0x00007fab741550a7: mov    0x94(%rsp),%eax
  0x00007fab741550ae: mov    0x8c(%rsp),%ebx
  0x00007fab741550b5: inc    %ebx
  0x00007fab741550b7: movabs $0x7fab61badd00,%rdx  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab741550c1: mov    0x100(%rdx),%edi
  0x00007fab741550c7: add    $0x8,%edi
  0x00007fab741550ca: mov    %edi,0x100(%rdx)
  0x00007fab741550d0: movabs $0x7fab61a5a388,%rdx  ;   {metadata({method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab741550da: and    $0xfff8,%edi
  0x00007fab741550e0: cmp    $0x0,%edi
  0x00007fab741550e3: je     0x00007fab741552b1  ; OopMap{[112]=Oop rsi=Oop off=2857}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@322 (line 110)

  0x00007fab741550e9: test   %eax,0x1b68d011(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll}
  0x00007fab741550ef: movabs $0x7fab61badd00,%rdx  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab741550f9: incl   0x678(%rdx)
  0x00007fab741550ff: mov    %rbx,%rdx
  0x00007fab74155102: mov    %rax,%rbx
  0x00007fab74155105: mov    %rsi,%r8
  0x00007fab74155108: mov    %ebx,0x88(%rsp)
  0x00007fab7415510f: mov    %r8,0x80(%rsp)
  0x00007fab74155117: mov    0x90(%rsp),%edi
  0x00007fab7415511e: mov    0x70(%rsp),%rax
  0x00007fab74155123: mov    %rdx,%rbx
  0x00007fab74155126: jmpq   0x00007fab74154898  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@322 (line 110)

  0x00007fab7415512b: mov    0x88(%rsp),%ebx
  0x00007fab74155132: mov    0x80(%rsp),%r8
  0x00007fab7415513a: movabs $0x7c0001610,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007fab74155144: mov    0x60(%r15),%rax
  0x00007fab74155148: lea    0x18(%rax),%rdi
  0x00007fab7415514c: cmp    0x70(%r15),%rdi
  0x00007fab74155150: ja     0x00007fab741552c8
  0x00007fab74155156: mov    %rdi,0x60(%r15)
  0x00007fab7415515a: mov    0xa8(%rdx),%rcx
  0x00007fab74155161: mov    %rcx,(%rax)
  0x00007fab74155164: mov    %rdx,%rcx
  0x00007fab74155167: shr    $0x3,%rcx
  0x00007fab7415516b: mov    %ecx,0x8(%rax)
  0x00007fab7415516e: xor    %rcx,%rcx
  0x00007fab74155171: mov    %ecx,0xc(%rax)
  0x00007fab74155174: xor    %rcx,%rcx
  0x00007fab74155177: mov    %rcx,0x10(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@325 (line 146)

  0x00007fab7415517b: mov    %rax,%rdx
  0x00007fab7415517e: movabs $0x7fab61badd00,%rcx  ;   {metadata(method data for {method} {0x00007fab61a5a388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007fab74155188: addq   $0x1,0x690(%rcx)
  0x00007fab74155190: mov    %r8,%rdx
  0x00007fab74155193: mov    $0x0,%ecx
  0x00007fab74155198: mov    %rbx,%r8
  0x00007fab7415519b: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@332 (line 146)

  0x00007fab7415519e: mov    %rax,0xa0(%rsp)
  0x00007fab741551a6: nop
  0x00007fab741551a7: callq  0x00007fab74047d60  ; OopMap{[160]=Oop off=3052}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@332 (line 146)
                                                ;   {optimized virtual_call}
  0x00007fab741551ac: mov    0xa0(%rsp),%rax
  0x00007fab741551b4: add    $0xb0,%rsp
  0x00007fab741551bb: pop    %rbp
  0x00007fab741551bc: test   %eax,0x1b68cf3e(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab741551c2: retq   
  0x00007fab741551c3: mov    %rbx,0x8(%rsp)
  0x00007fab741551c8: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741551d0: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=3093}
                                                ;*synchronization entry
                                                ; - sun.net.www.ParseUtil::encodePath@-1 (line 105)
                                                ;   {runtime_call}
  0x00007fab741551d5: jmpq   0x00007fab74154605
  0x00007fab741551da: callq  0x00007fab740fc000  ; OopMap{rsi=Oop off=3103}
                                                ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@1 (line 105)
                                                ;   {runtime_call}
  0x00007fab741551df: mov    %rbx,0x8(%rsp)
  0x00007fab741551e4: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab741551ec: callq  0x00007fab741005e0  ; OopMap{rsi=Oop off=3121}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@1 (line 105)
                                                ;   {runtime_call}
  0x00007fab741551f1: jmpq   0x00007fab7415464f
  0x00007fab741551f6: callq  0x00007fab740fc000  ; OopMap{rsi=Oop r8=Oop off=3131}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@1 (line 105)
                                                ;   {runtime_call}
  0x00007fab741551fb: callq  0x00007fab740fd020  ; OopMap{r8=Oop r13=Oop off=3136}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@9 (line 105)
                                                ;   {runtime_call}
  0x00007fab74155200: jmpq   0x00007fab741546dd
  0x00007fab74155205: mov    %rbx,0x8(%rsp)
  0x00007fab7415520a: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74155212: callq  0x00007fab741005e0  ; OopMap{r8=Oop r13=Oop rax=Oop off=3159}
                                                ;*synchronization entry
                                                ; - java.lang.String::toCharArray@-1 (line 2899)
                                                ; - sun.net.www.ParseUtil::encodePath@15 (line 107)
                                                ;   {runtime_call}
  0x00007fab74155217: jmpq   0x00007fab74154724
  0x00007fab7415521c: callq  0x00007fab740fd020  ; OopMap{r8=Oop r13=Oop [104]=Oop off=3169}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@5 (line 2899)
                                                ; - sun.net.www.ParseUtil::encodePath@15 (line 107)
                                                ;   {runtime_call}
  0x00007fab74155221: jmpq   0x00007fab741547a3
  0x00007fab74155226: nop
  0x00007fab74155227: callq  0x00007fab74048160  ; OopMap{[112]=Oop [104]=Oop [96]=Oop off=3180}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@20 (line 2900)
                                                ; - sun.net.www.ParseUtil::encodePath@15 (line 107)
                                                ;   {static_call}
  0x00007fab7415522c: jmpq   0x00007fab74154813
  0x00007fab74155231: mov    %rdx,0x8(%rsp)
  0x00007fab74155236: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7415523e: callq  0x00007fab741005e0  ; OopMap{[112]=Oop [104]=Oop [96]=Oop off=3203}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@21 (line 109)
                                                ;   {runtime_call}
  0x00007fab74155243: jmpq   0x00007fab7415485c
  0x00007fab74155248: callq  0x00007fab740fc000  ; OopMap{[112]=Oop [104]=Oop off=3213}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@21 (line 109)
                                                ;   {runtime_call}
  0x00007fab7415524d: mov    %rbx,(%rsp)
  0x00007fab74155251: callq  0x00007fab740fb940  ; OopMap{[128]=Oop rax=Oop [112]=Oop off=3222}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@40 (line 111)
                                                ;   {runtime_call}
  0x00007fab74155256: callq  0x00007fab740fc000  ; OopMap{[128]=Oop [112]=Oop rsi=Oop off=3227}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@142 (line 121)
                                                ;   {runtime_call}
  0x00007fab7415525b: callq  0x00007fab740fc000  ; OopMap{[112]=Oop rax=Oop off=3232}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@166 (line 124)
                                                ;   {runtime_call}
  0x00007fab74155260: callq  0x00007fab740fc000  ; OopMap{[112]=Oop rax=Oop off=3237}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@166 (line 124)
                                                ;   {runtime_call}
  0x00007fab74155265: mov    %rbx,(%rsp)
  0x00007fab74155269: callq  0x00007fab740fb940  ; OopMap{[112]=Oop rax=Oop off=3246}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@166 (line 124)
                                                ;   {runtime_call}
  0x00007fab7415526e: callq  0x00007fab740fc000  ; OopMap{[112]=Oop rdi=Oop off=3251}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@133 (line 119)
                                                ;   {runtime_call}
  0x00007fab74155273: callq  0x00007fab740fc000  ; OopMap{[112]=Oop rdi=Oop off=3256}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@133 (line 119)
                                                ;   {runtime_call}
  0x00007fab74155278: mov    %rbx,(%rsp)
  0x00007fab7415527c: callq  0x00007fab740fb940  ; OopMap{[112]=Oop rdi=Oop off=3265}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@133 (line 119)
                                                ;   {runtime_call}
  0x00007fab74155281: callq  0x00007fab740fc000  ; OopMap{[112]=Oop r8=Oop off=3270}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@73 (line 113)
                                                ;   {runtime_call}
  0x00007fab74155286: callq  0x00007fab740fc000  ; OopMap{[112]=Oop r8=Oop off=3275}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@73 (line 113)
                                                ;   {runtime_call}
  0x00007fab7415528b: mov    %rbx,(%rsp)
  0x00007fab7415528f: callq  0x00007fab740fb940  ; OopMap{[112]=Oop r8=Oop off=3284}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@73 (line 113)
                                                ;   {runtime_call}
  0x00007fab74155294: callq  0x00007fab740fc000  ; OopMap{[112]=Oop r8=Oop off=3289}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@279 (line 136)
                                                ;   {runtime_call}
  0x00007fab74155299: callq  0x00007fab740fd020  ; OopMap{[112]=Oop r8=Oop off=3294}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@303 (line 141)
                                                ;   {runtime_call}
  0x00007fab7415529e: jmpq   0x00007fab74154fd6
  0x00007fab741552a3: nop
  0x00007fab741552a4: nop
  0x00007fab741552a5: nop
  0x00007fab741552a6: nop
  0x00007fab741552a7: callq  0x00007fab74048160  ; OopMap{[112]=Oop [152]=Oop off=3308}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@313 (line 142)
                                                ;   {static_call}
  0x00007fab741552ac: jmpq   0x00007fab7415509f
  0x00007fab741552b1: mov    %rdx,0x8(%rsp)
  0x00007fab741552b6: movq   $0x142,(%rsp)
  0x00007fab741552be: callq  0x00007fab741005e0  ; OopMap{[112]=Oop rsi=Oop off=3331}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@322 (line 110)
                                                ;   {runtime_call}
  0x00007fab741552c3: jmpq   0x00007fab741550e9
  0x00007fab741552c8: mov    %rdx,%rdx
  0x00007fab741552cb: callq  0x00007fab740fc760  ; OopMap{r8=Oop off=3344}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@325 (line 146)
                                                ;   {runtime_call}
  0x00007fab741552d0: jmpq   0x00007fab7415517b
  0x00007fab741552d5: nop
  0x00007fab741552d6: nop
  0x00007fab741552d7: mov    0x2c0(%r15),%rax
  0x00007fab741552de: movabs $0x0,%r10
  0x00007fab741552e8: mov    %r10,0x2c0(%r15)
  0x00007fab741552ef: movabs $0x0,%r10
  0x00007fab741552f9: mov    %r10,0x2c8(%r15)
  0x00007fab74155300: add    $0xb0,%rsp
  0x00007fab74155307: pop    %rbp
  0x00007fab74155308: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab7415530d: hlt    
  0x00007fab7415530e: hlt    
  0x00007fab7415530f: hlt    
  0x00007fab74155310: hlt    
  0x00007fab74155311: hlt    
  0x00007fab74155312: hlt    
  0x00007fab74155313: hlt    
  0x00007fab74155314: hlt    
  0x00007fab74155315: hlt    
  0x00007fab74155316: hlt    
  0x00007fab74155317: hlt    
  0x00007fab74155318: hlt    
  0x00007fab74155319: hlt    
  0x00007fab7415531a: hlt    
  0x00007fab7415531b: hlt    
  0x00007fab7415531c: hlt    
  0x00007fab7415531d: hlt    
  0x00007fab7415531e: hlt    
  0x00007fab7415531f: hlt    
[Stub Code]
  0x00007fab74155320: nop                       ;   {no_reloc}
  0x00007fab74155321: nop
  0x00007fab74155322: nop
  0x00007fab74155323: nop
  0x00007fab74155324: nop
  0x00007fab74155325: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7415532f: jmpq   0x00007fab7415532f  ;   {runtime_call}
  0x00007fab74155334: nop
  0x00007fab74155335: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7415533f: jmpq   0x00007fab7415533f  ;   {runtime_call}
  0x00007fab74155344: nop
  0x00007fab74155345: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7415534f: jmpq   0x00007fab7415534f  ;   {runtime_call}
  0x00007fab74155354: nop
  0x00007fab74155355: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7415535f: jmpq   0x00007fab7415535f  ;   {runtime_call}
  0x00007fab74155364: nop
  0x00007fab74155365: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7415536f: jmpq   0x00007fab7415536f  ;   {runtime_call}
  0x00007fab74155374: nop
  0x00007fab74155375: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7415537f: jmpq   0x00007fab7415537f  ;   {runtime_call}
  0x00007fab74155384: nop
  0x00007fab74155385: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7415538f: jmpq   0x00007fab7415538f  ;   {runtime_call}
  0x00007fab74155394: nop
  0x00007fab74155395: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7415539f: jmpq   0x00007fab7415539f  ;   {runtime_call}
  0x00007fab741553a4: nop
  0x00007fab741553a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741553af: jmpq   0x00007fab741553af  ;   {runtime_call}
  0x00007fab741553b4: nop
  0x00007fab741553b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741553bf: jmpq   0x00007fab741553bf  ;   {runtime_call}
[Exception Handler]
  0x00007fab741553c4: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab741553c9: mov    %rsp,-0x28(%rsp)
  0x00007fab741553ce: sub    $0x80,%rsp
  0x00007fab741553d5: mov    %rax,0x78(%rsp)
  0x00007fab741553da: mov    %rcx,0x70(%rsp)
  0x00007fab741553df: mov    %rdx,0x68(%rsp)
  0x00007fab741553e4: mov    %rbx,0x60(%rsp)
  0x00007fab741553e9: mov    %rbp,0x50(%rsp)
  0x00007fab741553ee: mov    %rsi,0x48(%rsp)
  0x00007fab741553f3: mov    %rdi,0x40(%rsp)
  0x00007fab741553f8: mov    %r8,0x38(%rsp)
  0x00007fab741553fd: mov    %r9,0x30(%rsp)
  0x00007fab74155402: mov    %r10,0x28(%rsp)
  0x00007fab74155407: mov    %r11,0x20(%rsp)
  0x00007fab7415540c: mov    %r12,0x18(%rsp)
  0x00007fab74155411: mov    %r13,0x10(%rsp)
  0x00007fab74155416: mov    %r14,0x8(%rsp)
  0x00007fab7415541b: mov    %r15,(%rsp)
  0x00007fab7415541f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74155429: movabs $0x7fab741553c9,%rsi  ;   {internal_word}
  0x00007fab74155433: mov    %rsp,%rdx
  0x00007fab74155436: and    $0xfffffffffffffff0,%rsp
  0x00007fab7415543a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7415543f: hlt    
[Deopt Handler Code]
  0x00007fab74155440: movabs $0x7fab74155440,%r10  ;   {section_word}
  0x00007fab7415544a: push   %r10
  0x00007fab7415544c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74155451: hlt    
  0x00007fab74155452: hlt    
  0x00007fab74155453: hlt    
  0x00007fab74155454: hlt    
  0x00007fab74155455: hlt    
  0x00007fab74155456: hlt    
  0x00007fab74155457: hlt    
<nmethod compile_id='138' compiler='C1' level='3' entry='0x00007fab741545c0' size='6928' address='0x00007fab74154350' relocation_offset='312' insts_offset='624' stub_offset='4048' scopes_data_offset='4392' scopes_pcs_offset='5384' dependencies_offset='6824' nul_chk_table_offset='6832' metadata_offset='4360' method='sun/net/www/ParseUtil encodePath (Ljava/lang/String;Z)Ljava/lang/String;' bytes='336' count='134' backedge_count='6167' iicount='134' stamp='0.548'/>
<writer thread='140373948942080'/>
<task_queued compile_id='140' method='java/util/jar/JarFile getJarEntry (Ljava/lang/String;)Ljava/util/jar/JarEntry;' bytes='9' count='665' iicount='665' level='3' stamp='0.548' comment='tiered' hot_count='665'/>
<task_queued compile_id='141' method='java/util/jar/JarFile getEntry (Ljava/lang/String;)Ljava/util/zip/ZipEntry;' bytes='22' count='669' iicount='669' level='3' stamp='0.548' comment='tiered' hot_count='669'/>
<writer thread='140373945784064'/>
----------------------------------------------------------------------
java/lang/StringBuilder.toString  [0x00007fab74156020, 0x00007fab74156228]  520 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab6191bb88} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fab74156020: mov    0x8(%rsi),%r10d
  0x00007fab74156024: shl    $0x3,%r10
  0x00007fab74156028: cmp    %rax,%r10
  0x00007fab7415602b: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab74156031: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab7415603c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab74156040: mov    %eax,-0x14000(%rsp)
  0x00007fab74156047: push   %rbp
  0x00007fab74156048: sub    $0x40,%rsp
  0x00007fab7415604c: mov    %rsi,%r8
  0x00007fab7415604f: movabs $0x7fab61b7b290,%rdx  ;   {metadata(method data for {method} {0x00007fab6191bb88} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab74156059: mov    0xfc(%rdx),%esi
  0x00007fab7415605f: add    $0x8,%esi
  0x00007fab74156062: mov    %esi,0xfc(%rdx)
  0x00007fab74156068: movabs $0x7fab6191bb88,%rdx  ;   {metadata({method} {0x00007fab6191bb88} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab74156072: and    $0x1ff8,%esi
  0x00007fab74156078: cmp    $0x0,%esi
  0x00007fab7415607b: je     0x00007fab7415610d
  0x00007fab74156081: movabs $0x7c0001610,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007fab7415608b: mov    0x60(%r15),%rax
  0x00007fab7415608f: lea    0x18(%rax),%rdi
  0x00007fab74156093: cmp    0x70(%r15),%rdi
  0x00007fab74156097: ja     0x00007fab74156124
  0x00007fab7415609d: mov    %rdi,0x60(%r15)
  0x00007fab741560a1: mov    0xa8(%rdx),%rcx
  0x00007fab741560a8: mov    %rcx,(%rax)
  0x00007fab741560ab: mov    %rdx,%rcx
  0x00007fab741560ae: shr    $0x3,%rcx
  0x00007fab741560b2: mov    %ecx,0x8(%rax)
  0x00007fab741560b5: xor    %rcx,%rcx
  0x00007fab741560b8: mov    %ecx,0xc(%rax)
  0x00007fab741560bb: xor    %rcx,%rcx
  0x00007fab741560be: mov    %rcx,0x10(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@0 (line 407)

  0x00007fab741560c2: mov    0x10(%r8),%edx
  0x00007fab741560c6: shl    $0x3,%rdx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@5 (line 407)

  0x00007fab741560ca: mov    0xc(%r8),%r8d      ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@10 (line 407)

  0x00007fab741560ce: mov    %rax,%rcx
  0x00007fab741560d1: movabs $0x7fab61b7b290,%rsi  ;   {metadata(method data for {method} {0x00007fab6191bb88} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fab741560db: addq   $0x1,0x130(%rsi)
  0x00007fab741560e3: mov    $0x0,%ecx
  0x00007fab741560e8: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@13 (line 407)

  0x00007fab741560eb: mov    %rax,0x30(%rsp)
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.amd64.AMD64HotSpotJVMCIBackendFactory from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>

  0x00007fab741560f0: nop
  0x00007fab741560f1: nop
  0x00007fab741560f2: nop
  0x00007fab741560f3: nop
  0x00007fab741560f4: nop
  0x00007fab741560f5: nop
  0x00007fab741560f6: nop
  0x00007fab741560f7: callq  0x00007fab74047d60  ; OopMap{[48]=Oop off=220}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ;   {optimized virtual_call}
  0x00007fab741560fc: mov    0x30(%rsp),%rax
  0x00007fab74156101: add    $0x40,%rsp
  0x00007fab74156105: pop    %rbp
  0x00007fab74156106: test   %eax,0x1b68bff4(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab7415610c: retq   
  0x00007fab7415610d: mov    %rdx,0x8(%rsp)
  0x00007fab74156112: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab7415611a: callq  0x00007fab741005e0  ; OopMap{r8=Oop off=255}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ;   {runtime_call}
  0x00007fab7415611f: jmpq   0x00007fab74156081
  0x00007fab74156124: mov    %rdx,%rdx
  0x00007fab74156127: callq  0x00007fab740fc760  ; OopMap{r8=Oop off=268}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ;   {runtime_call}
  0x00007fab7415612c: jmp    0x00007fab741560c2
  0x00007fab7415612e: nop
  0x00007fab7415612f: nop
  0x00007fab74156130: mov    0x2c0(%r15),%rax
  0x00007fab74156137: movabs $0x0,%r10
  0x00007fab74156141: mov    %r10,0x2c0(%r15)
  0x00007fab74156148: movabs $0x0,%r10
  0x00007fab74156152: mov    %r10,0x2c8(%r15)
  0x00007fab74156159: add    $0x40,%rsp
  0x00007fab7415615d: pop    %rbp
  0x00007fab7415615e: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74156163: hlt    
  0x00007fab74156164: hlt    
  0x00007fab74156165: hlt    
  0x00007fab74156166: hlt    
  0x00007fab74156167: hlt    
  0x00007fab74156168: hlt    
  0x00007fab74156169: hlt    
  0x00007fab7415616a: hlt    
  0x00007fab7415616b: hlt    
  0x00007fab7415616c: hlt    
  0x00007fab7415616d: hlt    
  0x00007fab7415616e: hlt    
  0x00007fab7415616f: hlt    
  0x00007fab74156170: hlt    
  0x00007fab74156171: hlt    
  0x00007fab74156172: hlt    
  0x00007fab74156173: hlt    
  0x00007fab74156174: hlt    
  0x00007fab74156175: hlt    
  0x00007fab74156176: hlt    
  0x00007fab74156177: hlt    
  0x00007fab74156178: hlt    
  0x00007fab74156179: hlt    
  0x00007fab7415617a: hlt    
  0x00007fab7415617b: hlt    
  0x00007fab7415617c: hlt    
  0x00007fab7415617d: hlt    
  0x00007fab7415617e: hlt    
  0x00007fab7415617f: hlt    
[Stub Code]
  0x00007fab74156180: nop                       ;   {no_reloc}
  0x00007fab74156181: nop
  0x00007fab74156182: nop
  0x00007fab74156183: nop
  0x00007fab74156184: nop
  0x00007fab74156185: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab7415618f: jmpq   0x00007fab7415618f  ;   {runtime_call}
[Exception Handler]
  0x00007fab74156194: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab74156199: mov    %rsp,-0x28(%rsp)
  0x00007fab7415619e: sub    $0x80,%rsp
  0x00007fab741561a5: mov    %rax,0x78(%rsp)
  0x00007fab741561aa: mov    %rcx,0x70(%rsp)
  0x00007fab741561af: mov    %rdx,0x68(%rsp)
  0x00007fab741561b4: mov    %rbx,0x60(%rsp)
  0x00007fab741561b9: mov    %rbp,0x50(%rsp)
  0x00007fab741561be: mov    %rsi,0x48(%rsp)
  0x00007fab741561c3: mov    %rdi,0x40(%rsp)
  0x00007fab741561c8: mov    %r8,0x38(%rsp)
  0x00007fab741561cd: mov    %r9,0x30(%rsp)
  0x00007fab741561d2: mov    %r10,0x28(%rsp)
  0x00007fab741561d7: mov    %r11,0x20(%rsp)
  0x00007fab741561dc: mov    %r12,0x18(%rsp)
  0x00007fab741561e1: mov    %r13,0x10(%rsp)
  0x00007fab741561e6: mov    %r14,0x8(%rsp)
  0x00007fab741561eb: mov    %r15,(%rsp)
  0x00007fab741561ef: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab741561f9: movabs $0x7fab74156199,%rsi  ;   {internal_word}
  0x00007fab74156203: mov    %rsp,%rdx
  0x00007fab74156206: and    $0xfffffffffffffff0,%rsp
  0x00007fab7415620a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab7415620f: hlt    
[Deopt Handler Code]
  0x00007fab74156210: movabs $0x7fab74156210,%r10  ;   {section_word}
  0x00007fab7415621a: push   %r10
  0x00007fab7415621c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74156221: hlt    
  0x00007fab74156222: hlt    
  0x00007fab74156223: hlt    
  0x00007fab74156224: hlt    
  0x00007fab74156225: hlt    
  0x00007fab74156226: hlt    
  0x00007fab74156227: hlt    
<nmethod compile_id='137' compiler='C1' level='3' entry='0x00007fab74156020' size='1136' address='0x00007fab74155e90' relocation_offset='312' insts_offset='400' stub_offset='752' scopes_data_offset='928' scopes_pcs_offset='984' dependencies_offset='1128' metadata_offset='920' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='422' iicount='422' stamp='0.549'/>
----------------------------------------------------------------------
java/util/jar/JarFile.getJarEntry  [0x00007fab741564a0, 0x00007fab74156a48]  1448 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fab61b66fe8} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;
  # this:     rsi:rsi   = &apos;java/util/jar/JarFile&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fab741564a0: mov    0x8(%rsi),%r10d
  0x00007fab741564a4: shl    $0x3,%r10
  0x00007fab741564a8: cmp    %rax,%r10
  0x00007fab741564ab: jne    0x00007fab74047b60  ;   {runtime_call}
  0x00007fab741564b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fab741564bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fab741564c0: mov    %eax,-0x14000(%rsp)
  0x00007fab741564c7: push   %rbp
  0x00007fab741564c8: sub    $0x30,%rsp
  0x00007fab741564cc: movabs $0x7fab61b8f078,%rdi  ;   {metadata(method data for {method} {0x00007fab61b66fe8} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab741564d6: mov    0xfc(%rdi),%ebx
  0x00007fab741564dc: add    $0x8,%ebx
  0x00007fab741564df: mov    %ebx,0xfc(%rdi)
  0x00007fab741564e5: movabs $0x7fab61b66fe8,%rdi  ;   {metadata({method} {0x00007fab61b66fe8} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab741564ef: and    $0x1ff8,%ebx
  0x00007fab741564f5: cmp    $0x0,%ebx
  0x00007fab741564f8: je     0x00007fab74156944  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@0 (line 223)

  0x00007fab741564fe: mov    %rsi,%rdi
  0x00007fab74156501: movabs $0x7fab61b8f078,%rbx  ;   {metadata(method data for {method} {0x00007fab61b66fe8} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab7415650b: mov    0x8(%rdi),%edi
<writer thread='140373948942080'/>
[Loaded jdk.vm.ci.hotspot.amd64.AMD64HotSpotVMConfig from file:/home/marschall/bin/java/graalvm-0.27/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='140373945784064'/>

  0x00007fab7415650e: shl    $0x3,%rdi
  0x00007fab74156512: cmp    0x140(%rbx),%rdi
  0x00007fab74156519: jne    0x00007fab74156528
  0x00007fab7415651b: addq   $0x1,0x148(%rbx)
  0x00007fab74156523: jmpq   0x00007fab741566ea
  0x00007fab74156528: cmp    0x150(%rbx),%rdi
  0x00007fab7415652f: jne    0x00007fab7415653e
  0x00007fab74156531: addq   $0x1,0x158(%rbx)
  0x00007fab74156539: jmpq   0x00007fab741566ea
  0x00007fab7415653e: cmp    0x160(%rbx),%rdi
  0x00007fab74156545: jne    0x00007fab74156554
  0x00007fab74156547: addq   $0x1,0x168(%rbx)
  0x00007fab7415654f: jmpq   0x00007fab741566ea
  0x00007fab74156554: cmp    0x170(%rbx),%rdi
  0x00007fab7415655b: jne    0x00007fab7415656a
  0x00007fab7415655d: addq   $0x1,0x178(%rbx)
  0x00007fab74156565: jmpq   0x00007fab741566ea
  0x00007fab7415656a: cmp    0x180(%rbx),%rdi
  0x00007fab74156571: jne    0x00007fab74156580
  0x00007fab74156573: addq   $0x1,0x188(%rbx)
  0x00007fab7415657b: jmpq   0x00007fab741566ea
  0x00007fab74156580: cmp    0x190(%rbx),%rdi
  0x00007fab74156587: jne    0x00007fab74156596
  0x00007fab74156589: addq   $0x1,0x198(%rbx)
  0x00007fab74156591: jmpq   0x00007fab741566ea
  0x00007fab74156596: cmp    0x1a0(%rbx),%rdi
  0x00007fab7415659d: jne    0x00007fab741565ac
  0x00007fab7415659f: addq   $0x1,0x1a8(%rbx)
  0x00007fab741565a7: jmpq   0x00007fab741566ea
  0x00007fab741565ac: cmp    0x1b0(%rbx),%rdi
  0x00007fab741565b3: jne    0x00007fab741565c2
  0x00007fab741565b5: addq   $0x1,0x1b8(%rbx)
  0x00007fab741565bd: jmpq   0x00007fab741566ea
  0x00007fab741565c2: cmpq   $0x0,0x140(%rbx)
  0x00007fab741565cd: jne    0x00007fab741565e6
  0x00007fab741565cf: 
<writer thread='140374823413504'/>
[Loaded java.lang.Shutdown from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373945784064'/>
mov    %rdi,0x140(%rbx)
  0x00007fab741565d6: movq   $0x1,0x148(%rbx)
  0x00007fab741565e1: jmpq   0x00007fab741566ea
  0x00007fab741565e6: cmpq   $0x0,0x150(%rbx)
  0x00007fab741565f1: jne    0x00007fab7415660a
  0x00007fab741565f3: mov    %rdi,0x150(%rbx)
  0x00007fab741565fa: movq   $0x1,0x158(%rbx)
  0x00007fab74156605: jmpq   0x00007fab741566ea
  0x00007fab7415660a: cmpq   $0x0,0x160(%rbx)
  0x00007fab74156615: jne    0x00007fab7415662e
  0x00007fab74156617: mov    %rdi,0x160(%rbx)
  0x00007fab7415661e: movq   $0x1,0x168(%rbx)
  0x00007fab74156629: jmpq   0x00007fab741566ea
  0x00007fab7415662e: cmpq   $0x0,0x170(%rbx)
  0x00007fab74156639: jne    0x00007fab74156652
  0x00007fab7415663b: mov    %rdi,0x170(%rbx)
  0x00007fab74156642: movq   $0x1,0x178(%rbx)
  0x00007fab7415664d: jmpq   0x00007fab741566ea
  0x00007fab74156652: cmpq   $0x0,0x180(%rbx)
  0x00007fab7415665d: jne    0x00007fab74156676
  0x00007fab7415665f: mov    %rdi,0x180(%rbx)
  0x00007fab74156666: movq   $0x1,0x188(%rbx)
  0x00007fab74156671: jmpq   0x00007fab741566ea
  0x00007fab74156676: cmpq   $0x0,0x190(%rbx)
  0x00007fab74156681: jne    0x00007fab7415669a
  0x00007fab74156683: mov    %rdi,0x190(%rbx)
  0x00007fab7415668a: movq   $0x1,0x198(%rbx)
  0x00007fab74156695: jmpq   0x00007fab741566ea
  0x00007fab7415669a: cmpq   $0x0,0x1a0(%rbx)
  0x00007fab741566a5: jne    0x00007fab741566be
  0x00007fab741566a7: mov    %rdi,0x1a0(%rbx)
  0x00007fab741566ae: movq   $0x1,0x1a8(%rbx)
  0x00007fab741566b9: jmpq   0x00007fab741566ea
  0x00007fab741566be: cmpq   $0x0,0x1b0(%rbx)
  0x00007fab741566c9: jne    0x00007fab741566e2
  0x00007fab741566cb: mov    %rdi,0x1b0(%rbx)
  0x00007fab741566d2: movq   $0x1,0x1b8(%rbx)
  0x00007fab741566dd: jmpq   0x00007fab741566ea
  0x00007fab741566e2: addq   $0x1,0x130(%rbx)
  0x00007fab741566ea: nop
  0x00007fab741566eb: nop
  0x00007fab741566ec: nop
  0x00007fab741566ed: movabs $0xffffffffffffffff,%rax
  0x00007fab741566f7: callq  0x00007fab74047f60  ; OopMap{off=604}
                                                ;*invokevirtual getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ;   {virtual_call}
  0x00007fab741566fc: cmp    $0x0,%rax
  0x00007fab74156700: jne    0x00007fab7415671b
  0x00007fab74156702: movabs $0x7fab61b8f078,%rdi  ;   {metadata(method data for {method} {0x00007fab61b66fe8} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab7415670c: orl    $0x100,0x1c0(%rdi)
  0x00007fab74156716: jmpq   0x00007fab74156938
  0x00007fab7415671b: movabs $0x7c00508e8,%rbx  ;   {metadata(&apos;java/util/jar/JarEntry&apos;)}
  0x00007fab74156725: mov    0x8(%rax),%edi
  0x00007fab74156728: shl    $0x3,%rdi
  0x00007fab7415672c: cmp    0x38(%rdi),%rbx
  0x00007fab74156730: jne    0x00007fab7415691c
  0x00007fab74156736: movabs $0x7fab61b8f078,%rdi  ;   {metadata(method data for {method} {0x00007fab61b66fe8} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab74156740: mov    0x8(%rax),%ebx
  0x00007fab74156743: shl    $0x3,%rbx
  0x00007fab74156747: cmp    0x1d8(%rdi),%rbx
  0x00007fab7415674e: jne    0x00007fab7415675d
  0x00007fab74156750: addq   $0x1,0x1e0(%rdi)
  0x00007fab74156758: jmpq   0x00007fab74156938
  0x00007fab7415675d: cmp    0x1e8(%rdi),%rbx
  0x00007fab74156764: jne    0x00007fab74156773
  0x00007fab74156766: addq   $0x1,0x1f0(%rdi)
  0x00007fab7415676e: jmpq   0x00007fab74156938
  0x00007fab74156773: cmp    0x1f8(%rdi),%rbx
  0x00007fab7415677a: jne    0x00007fab74156789
  0x00007fab7415677c: addq   $0x1,0x200(%rdi)
  0x00007fab74156784: jmpq   0x00007fab74156938
  0x00007fab74156789: cmp    0x208(%rdi),%rbx
  0x00007fab74156790: jne    0x00007fab7415679f
  0x00007fab74156792: addq   $0x1,0x210(%rdi)
  0x00007fab7415679a: jmpq   0x00007fab74156938
  0x00007fab7415679f: cmp    0x218(%rdi),%rbx
  0x00007fab741567a6: jne    0x00007fab741567b5
  0x00007fab741567a8: addq   $0x1,0x220(%rdi)
  0x00007fab741567b0: jmpq   0x00007fab74156938
  0x00007fab741567b5: cmp    0x228(%rdi),%rbx
  0x00007fab741567bc: jne    0x00007fab741567cb
  0x00007fab741567be: addq   $0x1,0x230(%rdi)
  0x00007fab741567c6: jmpq   0x00007fab74156938
  0x00007fab741567cb: cmp    0x238(%rdi),%rbx
  0x00007fab741567d2: jne    0x00007fab741567e1
  0x00007fab741567d4: addq   $0x1,0x240(%rdi)
  0x00007fab741567dc: jmpq   0x00007fab74156938
  0x00007fab741567e1: cmp    0x248(%rdi),%rbx
  0x00007fab741567e8: jne    0x00007fab741567f7
  0x00007fab741567ea: addq   $0x1,0x250(%rdi)
  0x00007fab741567f2: jmpq   0x00007fab74156938
  0x00007fab741567f7: cmpq   $0x0,0x1d8(%rdi)
  0x00007fab74156802: jne    0x00007fab7415681b
  0x00007fab74156804: mov    %rbx,0x1d8(%rdi)
  0x00007fab7415680b: movq   $0x1,0x1e0(%rdi)
  0x00007fab74156816: jmpq   0x00007fab74156938
  0x00007fab7415681b: cmpq   $0x0,0x1e8(%rdi)
  0x00007fab74156826: jne    0x00007fab7415683f
  0x00007fab74156828: mov    %rbx,0x1e8(%rdi)
  0x00007fab7415682f: movq   $0x1,0x1f0(%rdi)
  0x00007fab7415683a: jmpq   0x00007fab74156938
  0x00007fab7415683f: cmpq   $0x0,0x1f8(%rdi)
  0x00007fab7415684a: jne    0x00007fab74156863
  0x00007fab7415684c: mov    %rbx,0x1f8(%rdi)
  0x00007fab74156853: movq   $0x1,0x200(%rdi)
  0x00007fab7415685e: jmpq   0x00007fab74156938
  0x00007fab74156863: cmpq   $0x0,0x208(%rdi)
  0x00007fab7415686e: jne    0x00007fab74156887
  0x00007fab74156870: mov    %rbx,0x208(%rdi)
  0x00007fab74156877: movq   $0x1,0x210(%rdi)
  0x00007fab74156882: jmpq   0x00007fab74156938
  0x00007fab74156887: cmpq   $0x0,0x218(%rdi)
  0x00007fab74156892: jne    0x00007fab741568ab
  0x00007fab74156894: mov    %rbx,0x218(%rdi)
  0x00007fab7415689b: movq   $0x1,0x220(%rdi)
  0x00007fab741568a6: jmpq   0x00007fab74156938
  0x00007fab741568ab: cmpq   $0x0,0x228(%rdi)
  0x00007fab741568b6: jne    0x00007fab741568cf
  0x00007fab741568b8: mov    %rbx,0x228(%rdi)
  0x00007fab741568bf: movq   $0x1,0x230(%rdi)
  0x00007fab741568ca: jmpq   0x00007fab74156938
  0x00007fab741568cf: cmpq   $0x0,0x238(%rdi)
  0x00007fab741568da: jne    0x00007fab741568f3
  0x00007fab741568dc: mov    %rbx,0x238(%rdi)
  0x00007fab741568e3: movq   $0x1,0x240(%rdi)
  0x00007fab741568ee: jmpq   0x00007fab74156938
  0x00007fab741568f3: cmpq   $0x0,0x248(%rdi)
  0x00007fab741568fe: jne    0x00007fab74156917
  0x00007fab74156900: mov    %rbx,0x248(%rdi)
  0x00007fab74156907: movq   $0x1,0x250(%rdi)
  0x00007fab74156912: jmpq   0x00007fab74156938
  0x00007fab74156917: jmpq   0x00007fab74156938
  0x00007fab7415691c: movabs $0x7fab61b8f078,%rdi  ;   {metadata(method data for {method} {0x00007fab61b66fe8} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007fab74156926: subq   $0x1,0x1c8(%rdi)
  0x00007fab7415692e: jmpq   0x00007fab7415695b
  0x00007fab74156933: jmpq   0x00007fab74156938  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@5 (line 223)

  0x00007fab74156938: add    $0x30,%rsp
  0x00007fab7415693c: pop    %rbp
  0x00007fab7415693d: test   %eax,0x1b68b7bd(%rip)        # 0x00007fab8f7e2100
                                                ;   {poll_return}
  0x00007fab74156943: retq   
  0x00007fab74156944: mov    %rdi,0x8(%rsp)
  0x00007fab74156949: movq   $0xffffffffffffffff,(%rsp)
  0x00007fab74156951: callq  0x00007fab741005e0  ; OopMap{rsi=Oop rdx=Oop off=1206}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarFile::getJarEntry@-1 (line 223)
                                                ;   {runtime_call}
  0x00007fab74156956: jmpq   0x00007fab741564fe
  0x00007fab7415695b: mov    %rax,(%rsp)
  0x00007fab7415695f: callq  0x00007fab740fe2c0  ; OopMap{off=1220}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@5 (line 223)
                                                ;   {runtime_call}
  0x00007fab74156964: nop
  0x00007fab74156965: nop
  0x00007fab74156966: mov    0x2c0(%r15),%rax
  0x00007fab7415696d: movabs $0x0,%r10
  0x00007fab74156977: mov    %r10,0x2c0(%r15)
  0x00007fab7415697e: movabs $0x0,%r10
  0x00007fab74156988: mov    %r10,0x2c8(%r15)
  0x00007fab7415698f: add    $0x30,%rsp
  0x00007fab74156993: pop    %rbp
  0x00007fab74156994: jmpq   0x00007fab740fb5a0  ;   {runtime_call}
  0x00007fab74156999: hlt    
  0x00007fab7415699a: hlt    
  0x00007fab7415699b: hlt    
  0x00007fab7415699c: hlt    
  0x00007fab7415699d: hlt    
  0x00007fab7415699e: hlt    
  0x00007fab7415699f: hlt    
[Stub Code]
  0x00007fab741569a0: nop                       ;   {no_reloc}
  0x00007fab741569a1: nop
  0x00007fab741569a2: nop
  0x00007fab741569a3: nop
  0x00007fab741569a4: nop
  0x00007fab741569a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fab741569af: jmpq   0x00007fab741569af  ;   {runtime_call}
[Exception Handler]
  0x00007fab741569b4: callq  0x00007fab740fdf60  ;   {runtime_call}
  0x00007fab741569b9: mov    %rsp,-0x28(%rsp)
  0x00007fab741569be: sub    $0x80,%rsp
  0x00007fab741569c5: mov    %rax,0x78(%rsp)
  0x00007fab741569ca: mov    %rcx,0x70(%rsp)
  0x00007fab741569cf: mov    %rdx,0x68(%rsp)
  0x00007fab741569d4: mov    %rbx,0x60(%rsp)
  0x00007fab741569d9: mov    %rbp,0x50(%rsp)
  0x00007fab741569de: mov    %rsi,0x48(%rsp)
  0x00007fab741569e3: mov    %rdi,0x40(%rsp)
  0x00007fab741569e8: mov    %r8,0x38(%rsp)
  0x00007fab741569ed: mov    %r9,0x30(%rsp)
  0x00007fab741569f2: mov    %r10,0x28(%rsp)
  0x00007fab741569f7: mov    %r11,0x20(%rsp)
  0x00007fab741569fc: mov    %r12,0x18(%rsp)
  0x00007fab74156a01: mov    %r13,0x10(%rsp)
  0x00007fab74156a06: mov    %r14,0x8(%rsp)
  0x00007fab74156a0b: mov    %r15,(%rsp)
  0x00007fab74156a0f: movabs $0x7fab8e4b4266,%rdi  ;   {external_word}
  0x00007fab74156a19: movabs $0x7fab741569b9,%rsi  ;   {internal_word}
  0x00007fab74156a23: mov    %rsp,%rdx
  0x00007fab74156a26: and    $0xfffffffffffffff0,%rsp
  0x00007fab74156a2a: callq  0x00007fab8e1dff70  ;   {runtime_call}
  0x00007fab74156a2f: hlt    
[Deopt Handler Code]
  0x00007fab74156a30: movabs $0x7fab74156a30,%r10  ;   {section_word}
  0x00007fab74156a3a: push   %r10
  0x00007fab74156a3c: jmpq   0x00007fab74049100  ;   {runtime_call}
  0x00007fab74156a41: hlt    
  0x00007fab74156a42: hlt    
  0x00007fab74156a43: hlt    
  0x00007fab74156a44: hlt    
  0x00007fab74156a45: hlt    
  0x00007fab74156a46: hlt    
  0x00007fab74156a47: hlt    
<nmethod compile_id='140' compiler='C1' level='3' entry='0x00007fab741564a0' size='2024' address='0x00007fab74156310' relocation_offset='312' insts_offset='400' stub_offset='1680' scopes_data_offset='1856' scopes_pcs_offset='1904' dependencies_offset='2016' metadata_offset='1848' method='java/util/jar/JarFile getJarEntry (Ljava/lang/String;)Ljava/util/jar/JarEntry;' bytes='9' count='678' iicount='678' stamp='0.567'/>
<writer thread='140374823413504'/>
[Loaded java.lang.Shutdown$Lock from /home/marschall/bin/java/graalvm-0.27/jre/lib/rt.jar]
<writer thread='140373956478720'/>
<destroy_vm stamp='0.567'/>
<tty_done stamp='0.567'/>
</tty>
<compilation_log thread='140373945784064'>
<start_compile_thread name='C1 CompilerThread3' thread='140373945784064' process='8213' stamp='0.041'/>
<task compile_id='1' method='java/lang/String hashCode ()I' bytes='55' count='420' backedge_count='6307' iicount='420' level='3' stamp='0.042'>
<phase name='buildIR' stamp='0.042'>
<type id='789' name='int'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='hashCode' return='789' flags='1' bytes='55' iicount='420'/>
<parse method='899'  stamp='0.042'>
<parse_done stamp='0.042'/>
</parse>
<phase name='optimize_blocks' stamp='0.042'>
<phase_done name='optimize_blocks' stamp='0.042'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.042'>
<phase_done name='rangeCheckElimination' stamp='0.042'/>
</phase>
<phase name='optimize_null_checks' stamp='0.042'>
<phase_done name='optimize_null_checks' stamp='0.042'/>
</phase>
<phase_done name='buildIR' stamp='0.042'/>
</phase>
<phase name='emit_lir' stamp='0.042'>
<phase name='lirGeneration' stamp='0.042'>
<phase_done name='lirGeneration' stamp='0.042'/>
</phase>
<phase name='linearScan' stamp='0.042'>
<phase_done name='linearScan' stamp='0.042'/>
</phase>
<phase_done name='emit_lir' stamp='0.042'/>
</phase>
<phase name='codeemit' stamp='0.042'>
<phase_done name='codeemit' stamp='0.042'/>
</phase>
<phase name='codeinstall' stamp='0.042'>
<phase_done name='codeinstall' stamp='0.044'/>
</phase>
<code_cache total_blobs='205' nmethods='1' adapters='135' free_code_cache='334454144'/>
<task_done success='1' nmsize='656' count='435' backedge_count='6567' stamp='0.044'/>
</task>
<task compile_id='2' method='java/lang/String length ()I' bytes='6' count='386' iicount='386' level='3' stamp='0.044'>
<phase name='buildIR' stamp='0.044'>
<type id='789' name='int'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='length' return='789' flags='1' bytes='6' iicount='386'/>
<parse method='899'  stamp='0.044'>
<parse_done stamp='0.044'/>
</parse>
<phase name='optimize_blocks' stamp='0.044'>
<phase_done name='optimize_blocks' stamp='0.044'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.044'>
<phase_done name='rangeCheckElimination' stamp='0.044'/>
</phase>
<phase name='optimize_null_checks' stamp='0.044'>
<phase_done name='optimize_null_checks' stamp='0.044'/>
</phase>
<phase_done name='buildIR' stamp='0.044'/>
</phase>
<phase name='emit_lir' stamp='0.044'>
<phase name='lirGeneration' stamp='0.044'>
<phase_done name='lirGeneration' stamp='0.044'/>
</phase>
<phase name='linearScan' stamp='0.044'>
<phase_done name='linearScan' stamp='0.044'/>
</phase>
<phase_done name='emit_lir' stamp='0.044'/>
</phase>
<phase name='codeemit' stamp='0.044'>
<phase_done name='codeemit' stamp='0.044'/>
</phase>
<phase name='codeinstall' stamp='0.044'>
<phase_done name='codeinstall' stamp='0.045'/>
</phase>
<code_cache total_blobs='208' nmethods='2' adapters='137' free_code_cache='334452096'/>
<task_done success='1' nmsize='368' count='386' stamp='0.045'/>
</task>
<task compile_id='3' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='384' backedge_count='1323' iicount='384' level='3' stamp='0.045'>
<phase name='buildIR' stamp='0.046'>
<type id='783' name='boolean'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='equals' return='783' arguments='796' flags='1' bytes='81' iicount='384'/>
<parse method='899'  stamp='0.046'>
<parse_done stamp='0.046'/>
</parse>
<phase name='optimize_blocks' stamp='0.046'>
<phase_done name='optimize_blocks' stamp='0.046'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.046'>
<phase_done name='rangeCheckElimination' stamp='0.046'/>
</phase>
<phase name='optimize_null_checks' stamp='0.046'>
<phase_done name='optimize_null_checks' stamp='0.046'/>
</phase>
<phase_done name='buildIR' stamp='0.046'/>
</phase>
<phase name='emit_lir' stamp='0.046'>
<phase name='lirGeneration' stamp='0.046'>
<phase_done name='lirGeneration' stamp='0.046'/>
</phase>
<phase name='linearScan' stamp='0.046'>
<phase_done name='linearScan' stamp='0.046'/>
</phase>
<phase_done name='emit_lir' stamp='0.046'/>
</phase>
<phase name='codeemit' stamp='0.046'>
<phase_done name='codeemit' stamp='0.046'/>
</phase>
<phase name='codeinstall' stamp='0.046'>
<phase_done name='codeinstall' stamp='0.049'/>
</phase>
<code_cache total_blobs='211' nmethods='3' adapters='139' free_code_cache='334447744'/>
<task_done success='1' nmsize='2064' count='394' backedge_count='1323' stamp='0.049'/>
</task>
<task compile_id='6' method='java/lang/String indexOf (II)I' bytes='70' count='177' backedge_count='5830' iicount='177' level='3' stamp='0.049'>
<phase name='buildIR' stamp='0.049'>
<type id='789' name='int'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='indexOf' return='789' arguments='789 789' flags='1' bytes='70' iicount='177'/>
<parse method='899'  stamp='0.049'>
<bc code='183' bci='66'/>
<method id='901' holder='797' name='indexOfSupplementary' return='789' arguments='789 789' flags='2' bytes='71' iicount='1'/>
<call method='901' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.049'/>
</parse>
<phase name='optimize_blocks' stamp='0.049'>
<phase_done name='optimize_blocks' stamp='0.049'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.049'>
<phase_done name='rangeCheckElimination' stamp='0.049'/>
</phase>
<phase name='optimize_null_checks' stamp='0.049'>
<phase_done name='optimize_null_checks' stamp='0.049'/>
</phase>
<phase_done name='buildIR' stamp='0.049'/>
</phase>
<phase name='emit_lir' stamp='0.049'>
<phase name='lirGeneration' stamp='0.049'>
<phase_done name='lirGeneration' stamp='0.049'/>
</phase>
<phase name='linearScan' stamp='0.049'>
<phase_done name='linearScan' stamp='0.049'/>
</phase>
<phase_done name='emit_lir' stamp='0.049'/>
</phase>
<phase name='codeemit' stamp='0.049'>
<phase_done name='codeemit' stamp='0.049'/>
</phase>
<phase name='codeinstall' stamp='0.049'>
<phase_done name='codeinstall' stamp='0.051'/>
</phase>
<code_cache total_blobs='213' nmethods='5' adapters='139' free_code_cache='334444864'/>
<task_done success='1' nmsize='904' count='189' backedge_count='6397' stamp='0.051'/>
</task>
<task compile_id='5' method='java/lang/String charAt (I)C' bytes='29' count='2799' iicount='2799' level='3' stamp='0.051'>
<phase name='buildIR' stamp='0.051'>
<type id='784' name='char'/>
<type id='789' name='int'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='charAt' return='784' arguments='789' flags='1' bytes='29' iicount='2799'/>
<parse method='899'  stamp='0.051'>
<bc code='183' bci='18'/>
<type id='791' name='void'/>
<klass id='901' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='902' holder='901' name='&lt;init&gt;' return='791' arguments='789' unloaded='1'/>
<call method='902' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.051'/>
</parse>
<phase name='optimize_blocks' stamp='0.051'>
<phase_done name='optimize_blocks' stamp='0.051'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.051'>
<phase_done name='rangeCheckElimination' stamp='0.051'/>
</phase>
<phase name='optimize_null_checks' stamp='0.051'>
<phase_done name='optimize_null_checks' stamp='0.051'/>
</phase>
<phase_done name='buildIR' stamp='0.051'/>
</phase>
<phase name='emit_lir' stamp='0.051'>
<phase name='lirGeneration' stamp='0.051'>
<phase_done name='lirGeneration' stamp='0.051'/>
</phase>
<phase name='linearScan' stamp='0.051'>
<phase_done name='linearScan' stamp='0.051'/>
</phase>
<phase_done name='emit_lir' stamp='0.051'/>
</phase>
<phase name='codeemit' stamp='0.051'>
<phase_done name='codeemit' stamp='0.051'/>
</phase>
<phase name='codeinstall' stamp='0.051'>
<phase_done name='codeinstall' stamp='0.052'/>
</phase>
<code_cache total_blobs='214' nmethods='6' adapters='139' free_code_cache='334443392'/>
<task_done success='1' nmsize='616' count='2936' stamp='0.052'/>
</task>
<task compile_id='4' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1667' iicount='1667' level='3' stamp='0.052'>
<phase name='buildIR' stamp='0.052'>
<type id='791' name='void'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='899' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' iicount='1667'/>
<parse method='899'  stamp='0.052'>
<parse_done stamp='0.052'/>
</parse>
<phase name='optimize_blocks' stamp='0.052'>
<phase_done name='optimize_blocks' stamp='0.052'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.052'>
<phase_done name='rangeCheckElimination' stamp='0.052'/>
</phase>
<phase name='optimize_null_checks' stamp='0.052'>
<phase_done name='optimize_null_checks' stamp='0.052'/>
</phase>
<phase_done name='buildIR' stamp='0.052'/>
</phase>
<phase name='emit_lir' stamp='0.052'>
<phase name='lirGeneration' stamp='0.052'>
<phase_done name='lirGeneration' stamp='0.052'/>
</phase>
<phase name='linearScan' stamp='0.052'>
<phase_done name='linearScan' stamp='0.052'/>
</phase>
<phase_done name='emit_lir' stamp='0.052'/>
</phase>
<phase name='codeemit' stamp='0.052'>
<phase_done name='codeemit' stamp='0.052'/>
</phase>
<phase name='codeinstall' stamp='0.052'>
<phase_done name='codeinstall' stamp='0.053'/>
</phase>
<code_cache total_blobs='215' nmethods='7' adapters='139' free_code_cache='334442496'/>
<task_done success='1' nmsize='336' count='1669' stamp='0.053'/>
</task>
<task compile_id='7' method='java/lang/Math min (II)I' bytes='11' count='722' iicount='722' level='3' stamp='0.053'>
<phase name='buildIR' stamp='0.053'>
<type id='789' name='int'/>
<klass id='899' name='java/lang/Math' flags='17'/>
<method id='900' holder='899' name='min' return='789' arguments='789 789' flags='9' bytes='11' iicount='722'/>
<parse method='900'  stamp='0.053'>
<parse_done stamp='0.053'/>
</parse>
<phase name='optimize_blocks' stamp='0.053'>
<phase_done name='optimize_blocks' stamp='0.053'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.053'>
<phase_done name='rangeCheckElimination' stamp='0.053'/>
</phase>
<phase name='optimize_null_checks' stamp='0.053'>
<phase_done name='optimize_null_checks' stamp='0.053'/>
</phase>
<phase_done name='buildIR' stamp='0.053'/>
</phase>
<phase name='emit_lir' stamp='0.053'>
<phase name='lirGeneration' stamp='0.053'>
<phase_done name='lirGeneration' stamp='0.053'/>
</phase>
<phase name='linearScan' stamp='0.053'>
<phase_done name='linearScan' stamp='0.053'/>
</phase>
<phase_done name='emit_lir' stamp='0.053'/>
</phase>
<phase name='codeemit' stamp='0.053'>
<phase_done name='codeemit' stamp='0.053'/>
</phase>
<phase name='codeinstall' stamp='0.053'>
<phase_done name='codeinstall' stamp='0.054'/>
</phase>
<code_cache total_blobs='216' nmethods='8' adapters='139' free_code_cache='334441536'/>
<task_done success='1' nmsize='400' count='726' stamp='0.054'/>
</task>
<task compile_id='9' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='256' iicount='256' level='3' stamp='0.055'>
<phase name='buildIR' stamp='0.055'>
<type id='791' name='void'/>
<klass id='888' name='[C' flags='1041'/>
<type id='789' name='int'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='&lt;init&gt;' return='791' arguments='888 789 789' flags='1' bytes='82' iicount='256'/>
<parse method='899'  stamp='0.055'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='901' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='4' compiler='C1' level='3' iicount='1723'/>
<call method='901' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<parse_done stamp='0.055'/>
</parse>
<bc code='183' bci='13'/>
<klass id='903' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='904' holder='903' name='&lt;init&gt;' return='791' arguments='789' unloaded='1'/>
<call method='904' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='30'/>
<call method='904' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='65'/>
<call method='904' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='75'/>
<klass id='906' name='java/util/Arrays' flags='1'/>
<method id='907' holder='906' name='copyOfRange' return='888' arguments='888 789 789' flags='9' bytes='63' iicount='267'/>
<call method='907' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.055'/>
</parse>
<phase name='optimize_blocks' stamp='0.055'>
<phase_done name='optimize_blocks' stamp='0.055'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.055'>
<phase_done name='rangeCheckElimination' stamp='0.055'/>
</phase>
<phase name='optimize_null_checks' stamp='0.055'>
<phase_done name='optimize_null_checks' stamp='0.055'/>
</phase>
<phase_done name='buildIR' stamp='0.055'/>
</phase>
<phase name='emit_lir' stamp='0.055'>
<phase name='lirGeneration' stamp='0.055'>
<phase_done name='lirGeneration' stamp='0.055'/>
</phase>
<phase name='linearScan' stamp='0.055'>
<phase_done name='linearScan' stamp='0.055'/>
</phase>
<phase_done name='emit_lir' stamp='0.055'/>
</phase>
<phase name='codeemit' stamp='0.055'>
<phase_done name='codeemit' stamp='0.055'/>
</phase>
<phase name='codeinstall' stamp='0.055'>
<phase_done name='codeinstall' stamp='0.058'/>
</phase>
<code_cache total_blobs='221' nmethods='9' adapters='143' free_code_cache='334436608'/>
<task_done success='1' nmsize='1272' count='256' inlined_bytes='1' stamp='0.058'/>
</task>
<task compile_id='10' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='259' iicount='259' level='3' stamp='0.059'>
<phase name='buildIR' stamp='0.059'>
<klass id='860' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='860' name='append' return='860' arguments='797' flags='1' bytes='50' iicount='259'/>
<parse method='899'  stamp='0.059'>
<bc code='183' bci='5'/>
<method id='901' holder='860' name='appendNull' return='860' flags='2' bytes='56' iicount='1'/>
<call method='901' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<type id='789' name='int'/>
<method id='903' holder='797' name='length' return='789' flags='1' bytes='6' compile_id='2' compiler='C1' level='3' iicount='694'/>
<call method='903' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<parse_done stamp='0.059'/>
</parse>
<bc code='183' bci='21'/>
<type id='791' name='void'/>
<method id='905' holder='860' name='ensureCapacityInternal' return='791' arguments='789' flags='2' bytes='27' iicount='349'/>
<call method='905' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='905'>
<bc code='183' bci='17'/>
<method id='907' holder='860' name='newCapacity' return='789' arguments='789' flags='2' bytes='39' iicount='172'/>
<call method='907' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='888' name='[C' flags='1041'/>
<klass id='909' name='java/util/Arrays' flags='1'/>
<method id='910' holder='909' name='copyOf' return='888' arguments='888 789' flags='9' bytes='19' iicount='179'/>
<call method='910' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='910'>
<bc code='184' bci='11'/>
<klass id='912' name='java/lang/Math' flags='17'/>
<method id='913' holder='912' name='min' return='789' arguments='789 789' flags='9' bytes='11' compile_id='7' compiler='C1' level='3' iicount='841'/>
<call method='913' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='913'>
<parse_done stamp='0.060'/>
</parse>
<bc code='184' bci='14'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='915' holder='802' name='arraycopy' return='791' arguments='796 789 796 789 789' flags='265' bytes='0' compile_id='8' compile_kind='c2n' level='0' iicount='640'/>
<call method='915' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.060'/>
</parse>
<parse_done stamp='0.060'/>
</parse>
<bc code='182' bci='35'/>
<method id='917' holder='797' name='getChars' return='791' arguments='789 789 888 789' flags='1' bytes='62' iicount='262'/>
<call method='917' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.060'/>
</parse>
<phase name='optimize_blocks' stamp='0.060'>
<phase_done name='optimize_blocks' stamp='0.060'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.060'>
<phase_done name='rangeCheckElimination' stamp='0.060'/>
</phase>
<phase name='optimize_null_checks' stamp='0.060'>
<phase_done name='optimize_null_checks' stamp='0.060'/>
</phase>
<phase_done name='buildIR' stamp='0.060'/>
</phase>
<phase name='emit_lir' stamp='0.060'>
<phase name='lirGeneration' stamp='0.060'>
<phase_done name='lirGeneration' stamp='0.060'/>
</phase>
<phase name='linearScan' stamp='0.060'>
<phase_done name='linearScan' stamp='0.060'/>
</phase>
<phase_done name='emit_lir' stamp='0.060'/>
</phase>
<phase name='codeemit' stamp='0.060'>
<phase_done name='codeemit' stamp='0.060'/>
</phase>
<phase name='codeinstall' stamp='0.060'>
<phase_done name='codeinstall' stamp='0.062'/>
</phase>
<code_cache total_blobs='222' nmethods='10' adapters='143' free_code_cache='334433344'/>
<task_done success='1' nmsize='1624' count='262' inlined_bytes='63' stamp='0.062'/>
</task>
<task compile_id='11' method='java/lang/String getChars (II[CI)V' bytes='62' count='262' iicount='262' level='3' stamp='0.062'>
<phase name='buildIR' stamp='0.062'>
<type id='791' name='void'/>
<type id='789' name='int'/>
<klass id='888' name='[C' flags='1041'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='getChars' return='791' arguments='789 789 888 789' flags='1' bytes='62' iicount='262'/>
<parse method='899'  stamp='0.062'>
<bc code='183' bci='9'/>
<klass id='901' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='902' holder='901' name='&lt;init&gt;' return='791' arguments='789' unloaded='1'/>
<call method='902' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='902' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='43'/>
<call method='902' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='58'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='903' holder='802' name='arraycopy' return='791' arguments='796 789 796 789 789' flags='265' bytes='0' compile_id='8' compile_kind='c2n' level='0' iicount='640'/>
<call method='903' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.062'/>
</parse>
<phase name='optimize_blocks' stamp='0.062'>
<phase_done name='optimize_blocks' stamp='0.062'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.062'>
<phase_done name='rangeCheckElimination' stamp='0.062'/>
</phase>
<phase name='optimize_null_checks' stamp='0.062'>
<phase_done name='optimize_null_checks' stamp='0.062'/>
</phase>
<phase_done name='buildIR' stamp='0.062'/>
</phase>
<phase name='emit_lir' stamp='0.062'>
<phase name='lirGeneration' stamp='0.062'>
<phase_done name='lirGeneration' stamp='0.062'/>
</phase>
<phase name='linearScan' stamp='0.062'>
<phase_done name='linearScan' stamp='0.062'/>
</phase>
<phase_done name='emit_lir' stamp='0.062'/>
</phase>
<phase name='codeemit' stamp='0.062'>
<phase_done name='codeemit' stamp='0.062'/>
</phase>
<phase name='codeinstall' stamp='0.062'>
<phase_done name='codeinstall' stamp='0.064'/>
</phase>
<code_cache total_blobs='223' nmethods='11' adapters='143' free_code_cache='334431040'/>
<task_done success='1' nmsize='1080' count='262' stamp='0.064'/>
</task>
<task compile_id='12' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='59' count='504' iicount='506' level='3' stamp='0.064'>
<phase name='buildIR' stamp='0.064'>
<type id='789' name='int'/>
<type id='784' name='char'/>
<klass id='899' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='900' holder='899' name='hexDigit' return='789' arguments='784' flags='8' bytes='59' iicount='519'/>
<parse method='900'  stamp='0.064'>
<bc code='183' bci='55'/>
<type id='791' name='void'/>
<klass id='902' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='903' holder='902' name='&lt;init&gt;' return='791' flags='1' bytes='5' iicount='1'/>
<call method='903' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.064'/>
</parse>
<phase name='optimize_blocks' stamp='0.064'>
<phase_done name='optimize_blocks' stamp='0.064'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.064'>
<phase_done name='rangeCheckElimination' stamp='0.064'/>
</phase>
<phase name='optimize_null_checks' stamp='0.064'>
<phase_done name='optimize_null_checks' stamp='0.064'/>
</phase>
<phase_done name='buildIR' stamp='0.064'/>
</phase>
<phase name='emit_lir' stamp='0.064'>
<phase name='lirGeneration' stamp='0.064'>
<phase_done name='lirGeneration' stamp='0.064'/>
</phase>
<phase name='linearScan' stamp='0.064'>
<phase_done name='linearScan' stamp='0.064'/>
</phase>
<phase_done name='emit_lir' stamp='0.064'/>
</phase>
<phase name='codeemit' stamp='0.064'>
<phase_done name='codeemit' stamp='0.064'/>
</phase>
<phase name='codeinstall' stamp='0.064'>
<phase_done name='codeinstall' stamp='0.065'/>
</phase>
<code_cache total_blobs='224' nmethods='12' adapters='143' free_code_cache='334429312'/>
<task_done success='1' nmsize='872' count='4064' stamp='0.065'/>
</task>
<task compile_id='14' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='276' count='132' backedge_count='4201' iicount='132' level='3' stamp='0.065'>
<phase name='buildIR' stamp='0.065'>
<klass id='901' name='java/util/UUID' flags='17'/>
<klass id='900' name='java/lang/CharSequence' flags='1537'/>
<klass id='899' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='902' holder='899' name='uuidFromCharSequence' return='901' arguments='900' flags='9' bytes='276' iicount='138'/>
<parse method='902'  stamp='0.065'>
<bc code='185' bci='1'/>
<type id='789' name='int'/>
<method id='904' holder='900' name='length' return='789' flags='1025' bytes='0' iicount='1'/>
<call method='904' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='12'/>
<klass id='905' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='906' holder='899' name='invalidUuid' return='905' arguments='900' flags='10' bytes='24' iicount='1'/>
<call method='906' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='906'>
<bc code='183' bci='10'/>
<type id='791' name='void'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='908' name='java/lang/StringBuilder' unloaded='1'/>
<method id='910' holder='908' name='&lt;init&gt;' return='791' arguments='797' unloaded='1'/>
<call method='910' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='14'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='911' holder='908' name='append' return='908' arguments='796' unloaded='1'/>
<call method='911' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='17'/>
<method id='912' holder='908' name='toString' return='797' unloaded='1'/>
<call method='912' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='20'/>
<method id='913' holder='905' name='&lt;init&gt;' return='791' arguments='797' flags='1' bytes='6' iicount='1'/>
<call method='913' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.066'/>
</parse>
<bc code='185' bci='19'/>
<type id='784' name='char'/>
<method id='915' holder='900' name='charAt' return='784' arguments='789' flags='1025' bytes='0' iicount='1'/>
<call method='915' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='185' bci='32'/>
<call method='915' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='185' bci='45'/>
<call method='915' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='185' bci='58'/>
<call method='915' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='272'/>
<type id='790' name='long'/>
<method id='916' holder='901' name='&lt;init&gt;' return='791' arguments='790 790' flags='1' bytes='15' iicount='278'/>
<call method='916' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='916'>
<bc code='183' bci='1'/>
<method id='918' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='4' compiler='C1' level='3' iicount='2219'/>
<call method='918' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='918'>
<parse_done stamp='0.066'/>
</parse>
<parse_done stamp='0.066'/>
</parse>
<bc code='185' bci='238'/>
<call method='915' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='243'/>
<method id='920' holder='899' name='hexDigit' return='789' arguments='784' flags='8' bytes='59' compile_id='12' compiler='C1' level='3' iicount='9600'/>
<call method='920' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='185' bci='200'/>
<call method='915' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='205'/>
<call method='920' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='185' bci='162'/>
<call method='915' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='167'/>
<call method='920' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='185' bci='124'/>
<call method='915' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='129'/>
<call method='920' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='185' bci='86'/>
<call method='915' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='91'/>
<call method='920' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='69'/>
<call method='906' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='906'>
<bc code='183' bci='10'/>
<call method='910' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='14'/>
<call method='911' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='17'/>
<call method='912' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='20'/>
<call method='913' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.066'/>
</parse>
<parse_done stamp='0.066'/>
</parse>
<phase name='optimize_blocks' stamp='0.066'>
<phase_done name='optimize_blocks' stamp='0.066'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.066'>
<phase_done name='rangeCheckElimination' stamp='0.066'/>
</phase>
<phase name='optimize_null_checks' stamp='0.066'>
<phase_done name='optimize_null_checks' stamp='0.066'/>
</phase>
<phase_done name='buildIR' stamp='0.066'/>
</phase>
<phase name='emit_lir' stamp='0.066'>
<phase name='lirGeneration' stamp='0.066'>
<phase_done name='lirGeneration' stamp='0.066'/>
</phase>
<phase name='linearScan' stamp='0.066'>
<phase_done name='linearScan' stamp='0.066'/>
</phase>
<phase_done name='emit_lir' stamp='0.066'/>
</phase>
<phase name='codeemit' stamp='0.066'>
<phase_done name='codeemit' stamp='0.066'/>
</phase>
<phase name='codeinstall' stamp='0.066'>
<phase_done name='codeinstall' stamp='0.076'/>
</phase>
<code_cache total_blobs='226' nmethods='14' adapters='143' free_code_cache='334413952'/>
<task_done success='1' nmsize='10632' count='627' backedge_count='20064' inlined_bytes='64' stamp='0.076'/>
</task>
<task compile_id='19' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='2560' iicount='2560' level='1' stamp='0.076'>
<phase name='buildIR' stamp='0.076'>
<type id='791' name='void'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='899' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='4' compiler='C1' level='3' iicount='2560'/>
<parse method='899'  stamp='0.076'>
<parse_done stamp='0.076'/>
</parse>
<phase name='optimize_blocks' stamp='0.076'>
<phase_done name='optimize_blocks' stamp='0.076'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.076'>
<phase_done name='rangeCheckElimination' stamp='0.076'/>
</phase>
<phase name='optimize_null_checks' stamp='0.076'>
<phase_done name='optimize_null_checks' stamp='0.076'/>
</phase>
<phase_done name='buildIR' stamp='0.076'/>
</phase>
<phase name='emit_lir' stamp='0.076'>
<phase name='lirGeneration' stamp='0.076'>
<phase_done name='lirGeneration' stamp='0.076'/>
</phase>
<phase name='linearScan' stamp='0.076'>
<phase_done name='linearScan' stamp='0.076'/>
</phase>
<phase_done name='emit_lir' stamp='0.076'/>
</phase>
<phase name='codeemit' stamp='0.076'>
<phase_done name='codeemit' stamp='0.076'/>
</phase>
<phase name='codeinstall' stamp='0.076'>
<phase_done name='codeinstall' stamp='0.077'/>
</phase>
<code_cache total_blobs='227' nmethods='15' adapters='143' free_code_cache='334413184'/>
<task_done success='1' nmsize='272' count='2816' stamp='0.077'/>
</task>
<task compile_id='20' method='java/lang/String length ()I' bytes='6' count='1606' iicount='1606' level='1' stamp='0.077'>
<phase name='buildIR' stamp='0.077'>
<type id='789' name='int'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='length' return='789' flags='1' bytes='6' compile_id='2' compiler='C1' level='3' iicount='1620'/>
<parse method='899'  stamp='0.077'>
<parse_done stamp='0.077'/>
</parse>
<phase name='optimize_blocks' stamp='0.077'>
<phase_done name='optimize_blocks' stamp='0.077'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.077'>
<phase_done name='rangeCheckElimination' stamp='0.077'/>
</phase>
<phase name='optimize_null_checks' stamp='0.077'>
<phase_done name='optimize_null_checks' stamp='0.077'/>
</phase>
<phase_done name='buildIR' stamp='0.077'/>
</phase>
<phase name='emit_lir' stamp='0.077'>
<phase name='lirGeneration' stamp='0.077'>
<phase_done name='lirGeneration' stamp='0.077'/>
</phase>
<phase name='linearScan' stamp='0.077'>
<phase_done name='linearScan' stamp='0.077'/>
</phase>
<phase_done name='emit_lir' stamp='0.077'/>
</phase>
<phase name='codeemit' stamp='0.077'>
<phase_done name='codeemit' stamp='0.077'/>
</phase>
<phase name='codeinstall' stamp='0.077'>
<phase_done name='codeinstall' stamp='0.077'/>
</phase>
<code_cache total_blobs='228' nmethods='16' adapters='143' free_code_cache='334412352'/>
<task_done success='1' nmsize='272' count='2371' stamp='0.077'/>
</task>
<task compile_id='16' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='1652' iicount='1652' level='3' stamp='0.077'>
<phase name='buildIR' stamp='0.077'>
<klass id='900' name='java/util/UUID' flags='17'/>
<klass id='899' name='com/github/marschall/charsequences/ParseUuidCompilation' flags='1'/>
<method id='901' holder='899' name='parse' return='900' flags='0' bytes='6' iicount='1668'/>
<parse method='901'  stamp='0.077'>
<bc code='184' bci='2'/>
<klass id='905' name='java/lang/CharSequence' flags='1537'/>
<klass id='904' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='906' holder='904' name='uuidFromCharSequence' return='900' arguments='905' flags='9' bytes='276' compile_id='14' compiler='C1' level='3' iicount='1710'/>
<call method='906' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.077'/>
</parse>
<phase name='optimize_blocks' stamp='0.077'>
<phase_done name='optimize_blocks' stamp='0.077'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.077'>
<phase_done name='rangeCheckElimination' stamp='0.077'/>
</phase>
<phase name='optimize_null_checks' stamp='0.077'>
<phase_done name='optimize_null_checks' stamp='0.077'/>
</phase>
<phase_done name='buildIR' stamp='0.077'/>
</phase>
<phase name='emit_lir' stamp='0.077'>
<phase name='lirGeneration' stamp='0.077'>
<phase_done name='lirGeneration' stamp='0.077'/>
</phase>
<phase name='linearScan' stamp='0.077'>
<phase_done name='linearScan' stamp='0.077'/>
</phase>
<phase_done name='emit_lir' stamp='0.077'/>
</phase>
<phase name='codeemit' stamp='0.077'>
<phase_done name='codeemit' stamp='0.077'/>
</phase>
<phase name='codeinstall' stamp='0.077'>
<phase_done name='codeinstall' stamp='0.078'/>
</phase>
<code_cache total_blobs='229' nmethods='17' adapters='143' free_code_cache='334411392'/>
<task_done success='1' nmsize='392' count='2721' stamp='0.078'/>
</task>
<task compile_id='17' method='java/util/UUID &lt;init&gt; (JJ)V' bytes='15' count='2720' iicount='2720' level='3' stamp='0.078'>
<phase name='buildIR' stamp='0.078'>
<type id='791' name='void'/>
<type id='790' name='long'/>
<klass id='899' name='java/util/UUID' flags='17'/>
<method id='900' holder='899' name='&lt;init&gt;' return='791' arguments='790 790' flags='1' bytes='15' iicount='2720'/>
<parse method='900'  stamp='0.078'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='902' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='4659'/>
<call method='902' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<parse_done stamp='0.078'/>
</parse>
<parse_done stamp='0.078'/>
</parse>
<phase name='optimize_blocks' stamp='0.078'>
<phase_done name='optimize_blocks' stamp='0.078'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.078'>
<phase_done name='rangeCheckElimination' stamp='0.078'/>
</phase>
<phase name='optimize_null_checks' stamp='0.078'>
<phase_done name='optimize_null_checks' stamp='0.078'/>
</phase>
<phase_done name='buildIR' stamp='0.078'/>
</phase>
<phase name='emit_lir' stamp='0.078'>
<phase name='lirGeneration' stamp='0.078'>
<phase_done name='lirGeneration' stamp='0.078'/>
</phase>
<phase name='linearScan' stamp='0.078'>
<phase_done name='linearScan' stamp='0.078'/>
</phase>
<phase_done name='emit_lir' stamp='0.078'/>
</phase>
<phase name='codeemit' stamp='0.078'>
<phase_done name='codeemit' stamp='0.078'/>
</phase>
<phase name='codeinstall' stamp='0.078'>
<phase_done name='codeinstall' stamp='0.078'/>
</phase>
<code_cache total_blobs='230' nmethods='18' adapters='143' free_code_cache='334410368'/>
<task_done success='1' nmsize='432' count='3905' inlined_bytes='1' stamp='0.078'/>
</task>
<task compile_id='23' method='java/lang/String indexOf (I)I' bytes='7' count='263' iicount='263' level='3' stamp='0.080'>
<phase name='buildIR' stamp='0.080'>
<type id='789' name='int'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='indexOf' return='789' arguments='789' flags='1' bytes='7' iicount='263'/>
<parse method='899'  stamp='0.080'>
<bc code='182' bci='3'/>
<method id='901' holder='797' name='indexOf' return='789' arguments='789 789' flags='1' bytes='70' compile_id='6' compiler='C1' level='3' iicount='273'/>
<call method='901' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.080'/>
</parse>
<phase name='optimize_blocks' stamp='0.080'>
<phase_done name='optimize_blocks' stamp='0.080'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.080'>
<phase_done name='rangeCheckElimination' stamp='0.080'/>
</phase>
<phase name='optimize_null_checks' stamp='0.080'>
<phase_done name='optimize_null_checks' stamp='0.080'/>
</phase>
<phase_done name='buildIR' stamp='0.080'/>
</phase>
<phase name='emit_lir' stamp='0.080'>
<phase name='lirGeneration' stamp='0.080'>
<phase_done name='lirGeneration' stamp='0.080'/>
</phase>
<phase name='linearScan' stamp='0.080'>
<phase_done name='linearScan' stamp='0.080'/>
</phase>
<phase_done name='emit_lir' stamp='0.080'/>
</phase>
<phase name='codeemit' stamp='0.080'>
<phase_done name='codeemit' stamp='0.080'/>
</phase>
<phase name='codeinstall' stamp='0.080'>
<phase_done name='codeinstall' stamp='0.080'/>
</phase>
<code_cache total_blobs='246' nmethods='19' adapters='158' free_code_cache='334401344'/>
<task_done success='1' nmsize='392' count='268' stamp='0.080'/>
</task>
<task compile_id='24' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='497' iicount='497' level='3' stamp='0.081'>
<phase name='buildIR' stamp='0.081'>
<type id='791' name='void'/>
<type id='789' name='int'/>
<klass id='860' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='899' holder='860' name='ensureCapacityInternal' return='791' arguments='789' flags='2' bytes='27' iicount='497'/>
<parse method='899'  stamp='0.081'>
<bc code='183' bci='17'/>
<method id='901' holder='860' name='newCapacity' return='789' arguments='789' flags='2' bytes='39' iicount='184'/>
<call method='901' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='888' name='[C' flags='1041'/>
<klass id='903' name='java/util/Arrays' flags='1'/>
<method id='904' holder='903' name='copyOf' return='888' arguments='888 789' flags='9' bytes='19' iicount='191'/>
<call method='904' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='904'>
<bc code='184' bci='11'/>
<klass id='906' name='java/lang/Math' flags='17'/>
<method id='907' holder='906' name='min' return='789' arguments='789 789' flags='9' bytes='11' compile_id='7' compiler='C1' level='3' iicount='934'/>
<call method='907' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='907'>
<parse_done stamp='0.081'/>
</parse>
<bc code='184' bci='14'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='909' holder='802' name='arraycopy' return='791' arguments='796 789 796 789 789' flags='265' bytes='0' compile_id='8' compile_kind='c2n' level='0' iicount='640'/>
<call method='909' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.081'/>
</parse>
<parse_done stamp='0.081'/>
</parse>
<phase name='optimize_blocks' stamp='0.081'>
<phase_done name='optimize_blocks' stamp='0.081'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.082'>
<phase_done name='rangeCheckElimination' stamp='0.082'/>
</phase>
<phase name='optimize_null_checks' stamp='0.082'>
<phase_done name='optimize_null_checks' stamp='0.082'/>
</phase>
<phase_done name='buildIR' stamp='0.082'/>
</phase>
<phase name='emit_lir' stamp='0.082'>
<phase name='lirGeneration' stamp='0.082'>
<phase_done name='lirGeneration' stamp='0.082'/>
</phase>
<phase name='linearScan' stamp='0.082'>
<phase_done name='linearScan' stamp='0.082'/>
</phase>
<phase_done name='emit_lir' stamp='0.082'/>
</phase>
<phase name='codeemit' stamp='0.082'>
<phase_done name='codeemit' stamp='0.082'/>
</phase>
<phase name='codeinstall' stamp='0.082'>
<phase_done name='codeinstall' stamp='0.144'/>
</phase>
<code_cache total_blobs='247' nmethods='20' adapters='158' free_code_cache='334399168'/>
<task_done success='1' nmsize='1144' count='630' inlined_bytes='30' stamp='0.144'/>
</task>
<task compile_id='27' compile_kind='osr' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='84992' iicount='1' osr_bci='9' level='3' stamp='0.144'>
<phase name='buildIR' stamp='0.144'>
<type id='791' name='void'/>
<klass id='899' name='com/github/marschall/charsequences/ParseUuidCompilation' flags='1'/>
<method id='900' holder='899' name='&lt;init&gt;' return='791' flags='1' bytes='40' iicount='1'/>
<parse method='900'  stamp='0.144'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='902' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='87093'/>
<call method='902' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<bc code='177' bci='0'/>
<dependency type='leaf_type' ctxk='899'/>
<parse_done stamp='0.144'/>
</parse>
<bc code='182' bci='10'/>
<klass id='904' name='java/util/UUID' flags='17'/>
<method id='905' holder='899' name='parse' return='904' flags='0' bytes='6' compile_id='16' compiler='C1' level='3' iicount='85235'/>
<call method='905' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='899' x='905'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='899'/>
<parse method='905'>
<bc code='184' bci='2'/>
<klass id='909' name='java/lang/CharSequence' flags='1537'/>
<klass id='908' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='910' holder='908' name='uuidFromCharSequence' return='904' arguments='909' flags='9' bytes='276' compile_id='14' compiler='C1' level='3' iicount='85275'/>
<call method='910' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.144'/>
</parse>
<bc code='184' bci='15'/>
<type id='789' name='int'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='912' holder='802' name='identityHashCode' return='789' arguments='796' flags='265' bytes='0' compile_id='18' compile_kind='c2n' level='0' iicount='384'/>
<call method='912' instr='invokestatic'/>
<inline_fail reason='native method'/>
<bc code='182' bci='27'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='913' name='java/io/PrintStream' unloaded='1'/>
<method id='916' holder='913' name='println' return='791' arguments='797' unloaded='1'/>
<call method='916' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.144'/>
</parse>
<phase name='optimize_blocks' stamp='0.144'>
<phase_done name='optimize_blocks' stamp='0.144'/>
</phase>
<phase name='optimize_null_checks' stamp='0.144'>
<phase_done name='optimize_null_checks' stamp='0.144'/>
</phase>
<phase_done name='buildIR' stamp='0.144'/>
</phase>
<phase name='emit_lir' stamp='0.144'>
<phase name='lirGeneration' stamp='0.144'>
<phase_done name='lirGeneration' stamp='0.144'/>
</phase>
<phase name='linearScan' stamp='0.144'>
<phase_done name='linearScan' stamp='0.144'/>
</phase>
<phase_done name='emit_lir' stamp='0.144'/>
</phase>
<phase name='codeemit' stamp='0.144'>
<phase_done name='codeemit' stamp='0.144'/>
</phase>
<phase name='codeinstall' stamp='0.144'>
<dependency type='leaf_type' ctxk='899'/>
<dependency type='unique_concrete_method' ctxk='899' x='905'/>
<phase_done name='codeinstall' stamp='0.146'/>
</phase>
<code_cache total_blobs='249' nmethods='21' adapters='159' free_code_cache='334395968'/>
<task_done success='1' nmsize='1544' count='1' backedge_count='89914' inlined_bytes='7' stamp='0.146'/>
</task>
<task compile_id='25' method='java/net/URI$Parser charAt (I)C' bytes='9' count='606' iicount='606' level='3' stamp='0.146'>
<phase name='buildIR' stamp='0.146'>
<type id='784' name='char'/>
<type id='789' name='int'/>
<klass id='899' name='java/net/URI$Parser' flags='2'/>
<method id='900' holder='899' name='charAt' return='784' arguments='789' flags='2' bytes='9' iicount='606'/>
<parse method='900'  stamp='0.146'>
<bc code='182' bci='5'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='902' holder='797' name='charAt' return='784' arguments='789' flags='1' bytes='29' compile_id='5' compiler='C1' level='3' iicount='3242150'/>
<call method='902' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<bc code='183' bci='18'/>
<type id='791' name='void'/>
<klass id='904' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='905' holder='904' name='&lt;init&gt;' return='791' arguments='789' unloaded='1'/>
<call method='905' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.146'/>
</parse>
<parse_done stamp='0.146'/>
</parse>
<phase name='optimize_blocks' stamp='0.146'>
<phase_done name='optimize_blocks' stamp='0.146'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.146'>
<phase_done name='rangeCheckElimination' stamp='0.146'/>
</phase>
<phase name='optimize_null_checks' stamp='0.146'>
<phase_done name='optimize_null_checks' stamp='0.146'/>
</phase>
<phase_done name='buildIR' stamp='0.146'/>
</phase>
<phase name='emit_lir' stamp='0.146'>
<phase name='lirGeneration' stamp='0.146'>
<phase_done name='lirGeneration' stamp='0.146'/>
</phase>
<phase name='linearScan' stamp='0.146'>
<phase_done name='linearScan' stamp='0.146'/>
</phase>
<phase_done name='emit_lir' stamp='0.146'/>
</phase>
<phase name='codeemit' stamp='0.146'>
<phase_done name='codeemit' stamp='0.146'/>
</phase>
<phase name='codeinstall' stamp='0.146'>
<phase_done name='codeinstall' stamp='0.147'/>
</phase>
<code_cache total_blobs='250' nmethods='22' adapters='159' free_code_cache='334394304'/>
<task_done success='1' nmsize='744' count='606' inlined_bytes='29' stamp='0.147'/>
</task>
<task compile_id='30' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='90175' iicount='1' level='3' stamp='0.147'>
<phase name='buildIR' stamp='0.147'>
<type id='791' name='void'/>
<klass id='899' name='com/github/marschall/charsequences/ParseUuidCompilation' flags='1'/>
<method id='900' holder='899' name='&lt;init&gt;' return='791' flags='1' bytes='40' iicount='1'/>
<parse method='900'  stamp='0.147'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='902' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='92191'/>
<call method='902' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<bc code='177' bci='0'/>
<dependency type='leaf_type' ctxk='899'/>
<parse_done stamp='0.147'/>
</parse>
<bc code='182' bci='10'/>
<klass id='904' name='java/util/UUID' flags='17'/>
<method id='905' holder='899' name='parse' return='904' flags='0' bytes='6' compile_id='16' compiler='C1' level='3' iicount='90260'/>
<call method='905' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='899'/>
<parse method='905'>
<bc code='184' bci='2'/>
<klass id='909' name='java/lang/CharSequence' flags='1537'/>
<klass id='908' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='910' holder='908' name='uuidFromCharSequence' return='904' arguments='909' flags='9' bytes='276' compile_id='14' compiler='C1' level='3' iicount='90282'/>
<call method='910' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.147'/>
</parse>
<bc code='184' bci='15'/>
<type id='789' name='int'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='912' holder='802' name='identityHashCode' return='789' arguments='796' flags='265' bytes='0' compile_id='18' compile_kind='c2n' level='0' iicount='384'/>
<call method='912' instr='invokestatic'/>
<inline_fail reason='native method'/>
<bc code='182' bci='27'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='913' name='java/io/PrintStream' flags='1'/>
<method id='916' holder='913' name='println' return='791' arguments='797' unloaded='1'/>
<call method='916' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.148'/>
</parse>
<phase name='optimize_blocks' stamp='0.148'>
<phase_done name='optimize_blocks' stamp='0.148'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.148'>
<phase_done name='rangeCheckElimination' stamp='0.148'/>
</phase>
<phase name='optimize_null_checks' stamp='0.148'>
<phase_done name='optimize_null_checks' stamp='0.148'/>
</phase>
<phase_done name='buildIR' stamp='0.148'/>
</phase>
<phase name='emit_lir' stamp='0.148'>
<phase name='lirGeneration' stamp='0.148'>
<phase_done name='lirGeneration' stamp='0.148'/>
</phase>
<phase name='linearScan' stamp='0.148'>
<phase_done name='linearScan' stamp='0.148'/>
</phase>
<phase_done name='emit_lir' stamp='0.148'/>
</phase>
<phase name='codeemit' stamp='0.148'>
<phase_done name='codeemit' stamp='0.148'/>
</phase>
<phase name='codeinstall' stamp='0.148'>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.149'/>
</phase>
<code_cache total_blobs='251' nmethods='23' adapters='159' free_code_cache='334391808'/>
<task_done success='1' nmsize='1448' count='1' backedge_count='92347' inlined_bytes='7' stamp='0.149'/>
</task>
<task compile_id='26' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='355' iicount='355' level='3' stamp='0.149'>
<phase name='buildIR' stamp='0.149'>
<klass id='862' name='java/lang/StringBuilder' flags='17'/>
<type id='784' name='char'/>
<method id='899' holder='862' name='append' return='862' arguments='784' flags='1' bytes='8' iicount='355'/>
<parse method='899'  stamp='0.149'>
<bc code='183' bci='2'/>
<klass id='860' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='901' holder='860' name='append' return='860' arguments='784' flags='1' bytes='29' iicount='355'/>
<call method='901' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<bc code='183' bci='7'/>
<type id='791' name='void'/>
<type id='789' name='int'/>
<method id='903' holder='860' name='ensureCapacityInternal' return='791' arguments='789' flags='2' bytes='27' compile_id='24' compiler='C1' level='3' iicount='630'/>
<call method='903' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<bc code='183' bci='17'/>
<method id='905' holder='860' name='newCapacity' return='789' arguments='789' flags='2' bytes='39' iicount='188'/>
<call method='905' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='888' name='[C' flags='1041'/>
<klass id='907' name='java/util/Arrays' flags='1'/>
<method id='908' holder='907' name='copyOf' return='888' arguments='888 789' flags='9' bytes='19' iicount='195'/>
<call method='908' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='908'>
<bc code='184' bci='11'/>
<klass id='910' name='java/lang/Math' flags='17'/>
<method id='911' holder='910' name='min' return='789' arguments='789 789' flags='9' bytes='11' compile_id='7' compiler='C1' level='3' iicount='957'/>
<call method='911' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='911'>
<parse_done stamp='0.149'/>
</parse>
<bc code='184' bci='14'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='913' holder='802' name='arraycopy' return='791' arguments='796 789 796 789 789' flags='265' bytes='0' compile_id='8' compile_kind='c2n' level='0' iicount='640'/>
<call method='913' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.149'/>
</parse>
<parse_done stamp='0.149'/>
</parse>
<parse_done stamp='0.149'/>
</parse>
<parse_done stamp='0.149'/>
</parse>
<phase name='optimize_blocks' stamp='0.149'>
<phase_done name='optimize_blocks' stamp='0.149'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.149'>
<phase_done name='rangeCheckElimination' stamp='0.149'/>
</phase>
<phase name='optimize_null_checks' stamp='0.149'>
<phase_done name='optimize_null_checks' stamp='0.149'/>
</phase>
<phase_done name='buildIR' stamp='0.149'/>
</phase>
<phase name='emit_lir' stamp='0.149'>
<phase name='lirGeneration' stamp='0.150'>
<phase_done name='lirGeneration' stamp='0.150'/>
</phase>
<phase name='linearScan' stamp='0.150'>
<phase_done name='linearScan' stamp='0.150'/>
</phase>
<phase_done name='emit_lir' stamp='0.150'/>
</phase>
<phase name='codeemit' stamp='0.150'>
<phase_done name='codeemit' stamp='0.150'/>
</phase>
<phase name='codeinstall' stamp='0.150'>
<phase_done name='codeinstall' stamp='0.152'/>
</phase>
<code_cache total_blobs='257' nmethods='24' adapters='164' free_code_cache='334386304'/>
<task_done success='1' nmsize='1432' count='355' inlined_bytes='86' stamp='0.152'/>
</task>
<task compile_id='29' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='384' iicount='384' level='1' stamp='0.152'>
<phase name='buildIR' stamp='0.152'>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='822' name='java/lang/ref/Reference' flags='1025'/>
<method id='899' holder='822' name='get' return='796' flags='1' bytes='5' iicount='384'/>
<parse method='899'  stamp='0.152'>
<parse_done stamp='0.152'/>
</parse>
<phase name='optimize_blocks' stamp='0.152'>
<phase_done name='optimize_blocks' stamp='0.152'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.152'>
<phase_done name='rangeCheckElimination' stamp='0.152'/>
</phase>
<phase name='optimize_null_checks' stamp='0.152'>
<phase_done name='optimize_null_checks' stamp='0.152'/>
</phase>
<phase_done name='buildIR' stamp='0.152'/>
</phase>
<phase name='emit_lir' stamp='0.152'>
<phase name='lirGeneration' stamp='0.152'>
<phase_done name='lirGeneration' stamp='0.152'/>
</phase>
<phase name='linearScan' stamp='0.152'>
<phase_done name='linearScan' stamp='0.152'/>
</phase>
<phase_done name='emit_lir' stamp='0.152'/>
</phase>
<phase name='codeemit' stamp='0.152'>
<phase_done name='codeemit' stamp='0.152'/>
</phase>
<phase name='codeinstall' stamp='0.152'>
<phase_done name='codeinstall' stamp='0.152'/>
</phase>
<code_cache total_blobs='258' nmethods='25' adapters='164' free_code_cache='334385536'/>
<task_done success='1' nmsize='272' count='384' stamp='0.152'/>
</task>
<task compile_id='28' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='258' iicount='258' level='3' stamp='0.152'>
<phase name='buildIR' stamp='0.152'>
<klass id='808' name='java/lang/SecurityManager' flags='1'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='899' holder='802' name='getSecurityManager' return='808' flags='9' bytes='4' iicount='258'/>
<parse method='899'  stamp='0.152'>
<parse_done stamp='0.152'/>
</parse>
<phase name='optimize_blocks' stamp='0.152'>
<phase_done name='optimize_blocks' stamp='0.152'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.152'>
<phase_done name='rangeCheckElimination' stamp='0.152'/>
</phase>
<phase name='optimize_null_checks' stamp='0.152'>
<phase_done name='optimize_null_checks' stamp='0.152'/>
</phase>
<phase_done name='buildIR' stamp='0.152'/>
</phase>
<phase name='emit_lir' stamp='0.152'>
<phase name='lirGeneration' stamp='0.152'>
<phase_done name='lirGeneration' stamp='0.152'/>
</phase>
<phase name='linearScan' stamp='0.152'>
<phase_done name='linearScan' stamp='0.152'/>
</phase>
<phase_done name='emit_lir' stamp='0.152'/>
</phase>
<phase name='codeemit' stamp='0.152'>
<phase_done name='codeemit' stamp='0.152'/>
</phase>
<phase name='codeinstall' stamp='0.152'>
<phase_done name='codeinstall' stamp='0.153'/>
</phase>
<code_cache total_blobs='259' nmethods='26' adapters='164' free_code_cache='334384704'/>
<task_done success='1' nmsize='336' count='263' stamp='0.153'/>
</task>
<task compile_id='31' method='sun/nio/fs/UnixUriUtils match (CJJ)Z' bytes='50' count='416' iicount='416' level='3' stamp='0.154'>
<phase name='buildIR' stamp='0.154'>
<type id='783' name='boolean'/>
<type id='784' name='char'/>
<type id='790' name='long'/>
<klass id='899' name='sun/nio/fs/UnixUriUtils' flags='0'/>
<method id='900' holder='899' name='match' return='783' arguments='784 790 790' flags='10' bytes='50' iicount='416'/>
<parse method='900'  stamp='0.154'>
<parse_done stamp='0.154'/>
</parse>
<phase name='optimize_blocks' stamp='0.154'>
<phase_done name='optimize_blocks' stamp='0.154'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.154'>
<phase_done name='rangeCheckElimination' stamp='0.154'/>
</phase>
<phase name='optimize_null_checks' stamp='0.154'>
<phase_done name='optimize_null_checks' stamp='0.154'/>
</phase>
<phase_done name='buildIR' stamp='0.154'/>
</phase>
<phase name='emit_lir' stamp='0.154'>
<phase name='lirGeneration' stamp='0.154'>
<phase_done name='lirGeneration' stamp='0.154'/>
</phase>
<phase name='linearScan' stamp='0.154'>
<phase_done name='linearScan' stamp='0.154'/>
</phase>
<phase_done name='emit_lir' stamp='0.154'/>
</phase>
<phase name='codeemit' stamp='0.154'>
<phase_done name='codeemit' stamp='0.154'/>
</phase>
<phase name='codeinstall' stamp='0.154'>
<phase_done name='codeinstall' stamp='0.155'/>
</phase>
<code_cache total_blobs='267' nmethods='27' adapters='171' free_code_cache='334379520'/>
<task_done success='1' nmsize='720' count='566' stamp='0.155'/>
</task>
<task compile_id='32' method='java/net/URI access$300 (CJJ)Z' bytes='7' count='611' iicount='611' level='3' stamp='0.155'>
<phase name='buildIR' stamp='0.155'>
<type id='783' name='boolean'/>
<type id='784' name='char'/>
<type id='790' name='long'/>
<klass id='899' name='java/net/URI' flags='17'/>
<method id='900' holder='899' name='access$300' return='783' arguments='784 790 790' flags='4104' bytes='7' iicount='611'/>
<parse method='900'  stamp='0.155'>
<bc code='184' bci='3'/>
<method id='902' holder='899' name='match' return='783' arguments='784 790 790' flags='10' bytes='56' iicount='611'/>
<call method='902' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.155'/>
</parse>
<phase name='optimize_blocks' stamp='0.155'>
<phase_done name='optimize_blocks' stamp='0.155'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.155'>
<phase_done name='rangeCheckElimination' stamp='0.155'/>
</phase>
<phase name='optimize_null_checks' stamp='0.155'>
<phase_done name='optimize_null_checks' stamp='0.155'/>
</phase>
<phase_done name='buildIR' stamp='0.155'/>
</phase>
<phase name='emit_lir' stamp='0.155'>
<phase name='lirGeneration' stamp='0.155'>
<phase_done name='lirGeneration' stamp='0.155'/>
</phase>
<phase name='linearScan' stamp='0.155'>
<phase_done name='linearScan' stamp='0.155'/>
</phase>
<phase_done name='emit_lir' stamp='0.155'/>
</phase>
<phase name='codeemit' stamp='0.155'>
<phase_done name='codeemit' stamp='0.155'/>
</phase>
<phase name='codeinstall' stamp='0.155'>
<phase_done name='codeinstall' stamp='0.156'/>
</phase>
<code_cache total_blobs='268' nmethods='28' adapters='171' free_code_cache='334378624'/>
<task_done success='1' nmsize='360' count='611' stamp='0.156'/>
</task>
<task compile_id='33' method='java/net/URI match (CJJ)Z' bytes='56' count='611' iicount='611' level='3' stamp='0.156'>
<phase name='buildIR' stamp='0.156'>
<type id='783' name='boolean'/>
<type id='784' name='char'/>
<type id='790' name='long'/>
<klass id='899' name='java/net/URI' flags='17'/>
<method id='900' holder='899' name='match' return='783' arguments='784 790 790' flags='10' bytes='56' iicount='611'/>
<parse method='900'  stamp='0.156'>
<parse_done stamp='0.156'/>
</parse>
<phase name='optimize_blocks' stamp='0.156'>
<phase_done name='optimize_blocks' stamp='0.156'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.156'>
<phase_done name='rangeCheckElimination' stamp='0.156'/>
</phase>
<phase name='optimize_null_checks' stamp='0.156'>
<phase_done name='optimize_null_checks' stamp='0.156'/>
</phase>
<phase_done name='buildIR' stamp='0.156'/>
</phase>
<phase name='emit_lir' stamp='0.156'>
<phase name='lirGeneration' stamp='0.156'>
<phase_done name='lirGeneration' stamp='0.156'/>
</phase>
<phase name='linearScan' stamp='0.156'>
<phase_done name='linearScan' stamp='0.156'/>
</phase>
<phase_done name='emit_lir' stamp='0.156'/>
</phase>
<phase name='codeemit' stamp='0.156'>
<phase_done name='codeemit' stamp='0.156'/>
</phase>
<phase name='codeinstall' stamp='0.156'>
<phase_done name='codeinstall' stamp='0.156'/>
</phase>
<code_cache total_blobs='269' nmethods='29' adapters='171' free_code_cache='334377024'/>
<task_done success='1' nmsize='784' count='611' stamp='0.156'/>
</task>
<task compile_id='34' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='262' iicount='262' level='3' stamp='0.156'>
<phase name='buildIR' stamp='0.156'>
<klass id='899' name='java/lang/CharacterData' flags='1024'/>
<type id='789' name='int'/>
<method id='900' holder='899' name='of' return='899' arguments='789' flags='24' bytes='120' iicount='262'/>
<parse method='900'  stamp='0.156'>
<parse_done stamp='0.157'/>
</parse>
<phase name='optimize_blocks' stamp='0.157'>
<phase_done name='optimize_blocks' stamp='0.157'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.157'>
<phase_done name='rangeCheckElimination' stamp='0.157'/>
</phase>
<phase name='optimize_null_checks' stamp='0.157'>
<phase_done name='optimize_null_checks' stamp='0.157'/>
</phase>
<phase_done name='buildIR' stamp='0.157'/>
</phase>
<phase name='emit_lir' stamp='0.157'>
<phase name='lirGeneration' stamp='0.157'>
<phase_done name='lirGeneration' stamp='0.157'/>
</phase>
<phase name='linearScan' stamp='0.157'>
<phase_done name='linearScan' stamp='0.157'/>
</phase>
<phase_done name='emit_lir' stamp='0.157'/>
</phase>
<phase name='codeemit' stamp='0.157'>
<phase_done name='codeemit' stamp='0.157'/>
</phase>
<phase name='codeinstall' stamp='0.157'>
<phase_done name='codeinstall' stamp='0.178'/>
</phase>
<code_cache total_blobs='270' nmethods='30' adapters='171' free_code_cache='334374336'/>
<task_done success='1' nmsize='1392' count='262' stamp='0.178'/>
</task>
<task compile_id='35' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='262' iicount='262' level='3' stamp='0.178'>
<phase name='buildIR' stamp='0.178'>
<type id='789' name='int'/>
<klass id='899' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='900' holder='899' name='getProperties' return='789' arguments='789' flags='0' bytes='11' iicount='262'/>
<parse method='900'  stamp='0.178'>
<parse_done stamp='0.178'/>
</parse>
<phase name='optimize_blocks' stamp='0.178'>
<phase_done name='optimize_blocks' stamp='0.178'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.178'>
<phase_done name='rangeCheckElimination' stamp='0.178'/>
</phase>
<phase name='optimize_null_checks' stamp='0.178'>
<phase_done name='optimize_null_checks' stamp='0.178'/>
</phase>
<phase_done name='buildIR' stamp='0.178'/>
</phase>
<phase name='emit_lir' stamp='0.178'>
<phase name='lirGeneration' stamp='0.178'>
<phase_done name='lirGeneration' stamp='0.178'/>
</phase>
<phase name='linearScan' stamp='0.178'>
<phase_done name='linearScan' stamp='0.178'/>
</phase>
<phase_done name='emit_lir' stamp='0.178'/>
</phase>
<phase name='codeemit' stamp='0.178'>
<phase_done name='codeemit' stamp='0.178'/>
</phase>
<phase name='codeinstall' stamp='0.178'>
<phase_done name='codeinstall' stamp='0.179'/>
</phase>
<code_cache total_blobs='271' nmethods='31' adapters='171' free_code_cache='334373312'/>
<task_done success='1' nmsize='400' count='262' stamp='0.179'/>
</task>
<task compile_id='37' method='java/lang/String lastIndexOf (II)I' bytes='52' count='111' backedge_count='3072' iicount='111' level='3' stamp='0.180'>
<phase name='buildIR' stamp='0.180'>
<type id='789' name='int'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='lastIndexOf' return='789' arguments='789 789' flags='1' bytes='52' iicount='111'/>
<parse method='899'  stamp='0.180'>
<bc code='184' bci='16'/>
<klass id='901' name='java/lang/Math' flags='17'/>
<method id='902' holder='901' name='min' return='789' arguments='789 789' flags='9' bytes='11' compile_id='7' compiler='C1' level='3' iicount='1075'/>
<call method='902' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<parse_done stamp='0.180'/>
</parse>
<bc code='183' bci='48'/>
<method id='904' holder='797' name='lastIndexOfSupplementary' return='789' arguments='789 789' flags='2' bytes='70' iicount='1'/>
<call method='904' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.180'/>
</parse>
<phase name='optimize_blocks' stamp='0.180'>
<phase_done name='optimize_blocks' stamp='0.180'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.180'>
<phase_done name='rangeCheckElimination' stamp='0.180'/>
</phase>
<phase name='optimize_null_checks' stamp='0.180'>
<phase_done name='optimize_null_checks' stamp='0.180'/>
</phase>
<phase_done name='buildIR' stamp='0.180'/>
</phase>
<phase name='emit_lir' stamp='0.180'>
<phase name='lirGeneration' stamp='0.180'>
<phase_done name='lirGeneration' stamp='0.180'/>
</phase>
<phase name='linearScan' stamp='0.180'>
<phase_done name='linearScan' stamp='0.180'/>
</phase>
<phase_done name='emit_lir' stamp='0.180'/>
</phase>
<phase name='codeemit' stamp='0.180'>
<phase_done name='codeemit' stamp='0.180'/>
</phase>
<phase name='codeinstall' stamp='0.180'>
<phase_done name='codeinstall' stamp='0.182'/>
</phase>
<code_cache total_blobs='272' nmethods='32' adapters='171' free_code_cache='334371328'/>
<task_done success='1' nmsize='904' count='113' backedge_count='3097' inlined_bytes='11' stamp='0.182'/>
</task>
<task compile_id='38' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='397' iicount='397' level='3' stamp='0.183'>
<phase name='buildIR' stamp='0.183'>
<klass id='888' name='[C' flags='1041'/>
<type id='789' name='int'/>
<klass id='899' name='java/util/Arrays' flags='1'/>
<method id='900' holder='899' name='copyOfRange' return='888' arguments='888 789 789' flags='9' bytes='63' iicount='397'/>
<parse method='900'  stamp='0.183'>
<bc code='183' bci='16'/>
<type id='791' name='void'/>
<klass id='862' name='java/lang/StringBuilder' flags='17'/>
<method id='903' holder='862' name='&lt;init&gt;' return='791' flags='1' bytes='7' iicount='148'/>
<call method='903' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<bc code='183' bci='3'/>
<klass id='860' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='905' holder='860' name='&lt;init&gt;' return='791' arguments='789' flags='0' bytes='12' iicount='174'/>
<call method='905' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='905'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='907' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='143506'/>
<call method='907' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='907'>
<parse_done stamp='0.183'/>
</parse>
<parse_done stamp='0.183'/>
</parse>
<parse_done stamp='0.183'/>
</parse>
<bc code='182' bci='20'/>
<method id='909' holder='862' name='append' return='862' arguments='789' flags='1' bytes='8' iicount='1'/>
<call method='909' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='909'>
<bc code='183' bci='2'/>
<method id='911' holder='860' name='append' return='860' arguments='789' flags='1' bytes='62' iicount='1'/>
<call method='911' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.183'/>
</parse>
<bc code='182' bci='25'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='914' holder='862' name='append' return='862' arguments='797' flags='1' bytes='8' iicount='292'/>
<call method='914' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='914'>
<bc code='183' bci='2'/>
<method id='916' holder='860' name='append' return='860' arguments='797' flags='1' bytes='50' compile_id='10' compiler='C1' level='3' iicount='334'/>
<call method='916' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.183'/>
</parse>
<bc code='182' bci='29'/>
<call method='909' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='909'>
<bc code='183' bci='2'/>
<call method='911' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.183'/>
</parse>
<bc code='182' bci='32'/>
<method id='918' holder='862' name='toString' return='797' flags='1' bytes='17' iicount='155'/>
<call method='918' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='918'>
<bc code='183' bci='13'/>
<method id='920' holder='797' name='&lt;init&gt;' return='791' arguments='888 789 789' flags='1' bytes='82' compile_id='9' compiler='C1' level='3' iicount='398'/>
<call method='920' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.183'/>
</parse>
<bc code='183' bci='35'/>
<klass id='902' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='922' holder='902' name='&lt;init&gt;' return='791' arguments='797' flags='1' bytes='6' iicount='1'/>
<call method='922' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='924' name='java/lang/Math' flags='17'/>
<method id='925' holder='924' name='min' return='789' arguments='789 789' flags='9' bytes='11' compile_id='7' compiler='C1' level='3' iicount='1111'/>
<call method='925' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='925'>
<parse_done stamp='0.183'/>
</parse>
<bc code='184' bci='57'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='927' holder='802' name='arraycopy' return='791' arguments='796 789 796 789 789' flags='265' bytes='0' compile_id='8' compile_kind='c2n' level='0' iicount='640'/>
<call method='927' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.183'/>
</parse>
<phase name='optimize_blocks' stamp='0.183'>
<phase_done name='optimize_blocks' stamp='0.183'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.183'>
<phase_done name='rangeCheckElimination' stamp='0.183'/>
</phase>
<phase name='optimize_null_checks' stamp='0.183'>
<phase_done name='optimize_null_checks' stamp='0.183'/>
</phase>
<phase_done name='buildIR' stamp='0.183'/>
</phase>
<phase name='emit_lir' stamp='0.183'>
<phase name='lirGeneration' stamp='0.183'>
<phase_done name='lirGeneration' stamp='0.183'/>
</phase>
<phase name='linearScan' stamp='0.183'>
<phase_done name='linearScan' stamp='0.183'/>
</phase>
<phase_done name='emit_lir' stamp='0.183'/>
</phase>
<phase name='codeemit' stamp='0.183'>
<phase_done name='codeemit' stamp='0.183'/>
</phase>
<phase name='codeinstall' stamp='0.183'>
<phase_done name='codeinstall' stamp='0.186'/>
</phase>
<code_cache total_blobs='273' nmethods='33' adapters='171' free_code_cache='334366912'/>
<task_done success='1' nmsize='2360' count='430' inlined_bytes='72' stamp='0.186'/>
</task>
<task compile_id='39' method='java/lang/Character toUpperCaseEx (I)I' bytes='30' count='761' iicount='761' level='3' stamp='0.186'>
<phase name='buildIR' stamp='0.186'>
<type id='789' name='int'/>
<klass id='877' name='java/lang/Character' flags='17'/>
<method id='899' holder='877' name='toUpperCaseEx' return='789' arguments='789' flags='8' bytes='30' iicount='761'/>
<parse method='899'  stamp='0.186'>
<bc code='184' bci='22'/>
<klass id='903' name='java/lang/CharacterData' flags='1024'/>
<method id='904' holder='903' name='of' return='903' arguments='789' flags='24' bytes='120' compile_id='34' compiler='C1' level='3' iicount='1051'/>
<call method='904' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='26'/>
<method id='906' holder='903' name='toUpperCaseEx' return='789' arguments='789' flags='0' bytes='6' iicount='1'/>
<call method='906' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.186'/>
</parse>
<phase name='optimize_blocks' stamp='0.186'>
<phase_done name='optimize_blocks' stamp='0.186'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.186'>
<phase_done name='rangeCheckElimination' stamp='0.186'/>
</phase>
<phase name='optimize_null_checks' stamp='0.186'>
<phase_done name='optimize_null_checks' stamp='0.186'/>
</phase>
<phase_done name='buildIR' stamp='0.186'/>
</phase>
<phase name='emit_lir' stamp='0.186'>
<phase name='lirGeneration' stamp='0.186'>
<phase_done name='lirGeneration' stamp='0.186'/>
</phase>
<phase name='linearScan' stamp='0.186'>
<phase_done name='linearScan' stamp='0.186'/>
</phase>
<phase_done name='emit_lir' stamp='0.186'/>
</phase>
<phase name='codeemit' stamp='0.186'>
<phase_done name='codeemit' stamp='0.186'/>
</phase>
<phase name='codeinstall' stamp='0.186'>
<phase_done name='codeinstall' stamp='0.187'/>
</phase>
<code_cache total_blobs='274' nmethods='34' adapters='171' free_code_cache='334365312'/>
<task_done success='1' nmsize='920' count='761' stamp='0.187'/>
</task>
<task compile_id='40' method='java/lang/CharacterDataLatin1 toUpperCaseEx (I)I' bytes='71' count='761' iicount='761' level='3' stamp='0.187'>
<phase name='buildIR' stamp='0.187'>
<type id='789' name='int'/>
<klass id='899' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='900' holder='899' name='toUpperCaseEx' return='789' arguments='789' flags='0' bytes='71' iicount='761'/>
<parse method='900'  stamp='0.187'>
<bc code='182' bci='4'/>
<method id='902' holder='899' name='getProperties' return='789' arguments='789' flags='0' bytes='11' compile_id='35' compiler='C1' level='3' iicount='1051'/>
<call method='902' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='899'/>
<parse method='902'>
<parse_done stamp='0.187'/>
</parse>
<parse_done stamp='0.187'/>
</parse>
<phase name='optimize_blocks' stamp='0.187'>
<phase_done name='optimize_blocks' stamp='0.187'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.187'>
<phase_done name='rangeCheckElimination' stamp='0.187'/>
</phase>
<phase name='optimize_null_checks' stamp='0.187'>
<phase_done name='optimize_null_checks' stamp='0.187'/>
</phase>
<phase_done name='buildIR' stamp='0.187'/>
</phase>
<phase name='emit_lir' stamp='0.187'>
<phase name='lirGeneration' stamp='0.187'>
<phase_done name='lirGeneration' stamp='0.188'/>
</phase>
<phase name='linearScan' stamp='0.188'>
<phase_done name='linearScan' stamp='0.188'/>
</phase>
<phase_done name='emit_lir' stamp='0.188'/>
</phase>
<phase name='codeemit' stamp='0.188'>
<phase_done name='codeemit' stamp='0.188'/>
</phase>
<phase name='codeinstall' stamp='0.188'>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.188'/>
</phase>
<code_cache total_blobs='275' nmethods='35' adapters='171' free_code_cache='334363776'/>
<task_done success='1' nmsize='688' count='761' inlined_bytes='11' stamp='0.188'/>
</task>
<task compile_id='41' method='java/lang/ThreadLocal getMap (Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap;' bytes='5' count='258' iicount='258' level='3' stamp='0.189'>
<phase name='buildIR' stamp='0.189'>
<klass id='900' name='java/lang/ThreadLocal$ThreadLocalMap' flags='8'/>
<klass id='829' name='java/lang/Thread' flags='1'/>
<klass id='899' name='java/lang/ThreadLocal' flags='1'/>
<method id='901' holder='899' name='getMap' return='900' arguments='829' flags='0' bytes='5' iicount='258'/>
<parse method='901'  stamp='0.189'>
<parse_done stamp='0.189'/>
</parse>
<phase name='optimize_blocks' stamp='0.189'>
<phase_done name='optimize_blocks' stamp='0.189'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.189'>
<phase_done name='rangeCheckElimination' stamp='0.189'/>
</phase>
<phase name='optimize_null_checks' stamp='0.189'>
<phase_done name='optimize_null_checks' stamp='0.189'/>
</phase>
<phase_done name='buildIR' stamp='0.189'/>
</phase>
<phase name='emit_lir' stamp='0.189'>
<phase name='lirGeneration' stamp='0.189'>
<phase_done name='lirGeneration' stamp='0.189'/>
</phase>
<phase name='linearScan' stamp='0.189'>
<phase_done name='linearScan' stamp='0.189'/>
</phase>
<phase_done name='emit_lir' stamp='0.189'/>
</phase>
<phase name='codeemit' stamp='0.189'>
<phase_done name='codeemit' stamp='0.189'/>
</phase>
<phase name='codeinstall' stamp='0.189'>
<phase_done name='codeinstall' stamp='0.190'/>
</phase>
<code_cache total_blobs='276' nmethods='36' adapters='171' free_code_cache='334362880'/>
<task_done success='1' nmsize='336' count='258' stamp='0.190'/>
</task>
<task compile_id='43' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='256' iicount='256' level='3' stamp='0.190'>
<phase name='buildIR' stamp='0.190'>
<type id='789' name='int'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='899' name='java/util/HashMap' flags='1'/>
<method id='900' holder='899' name='hash' return='789' arguments='796' flags='24' bytes='20' iicount='257'/>
<parse method='900'  stamp='0.190'>
<bc code='182' bci='9'/>
<method id='902' holder='796' name='hashCode' return='789' flags='257' bytes='0' iicount='60'/>
<call method='902' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.190'/>
</parse>
<phase name='optimize_blocks' stamp='0.190'>
<phase_done name='optimize_blocks' stamp='0.190'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.190'>
<phase_done name='rangeCheckElimination' stamp='0.190'/>
</phase>
<phase name='optimize_null_checks' stamp='0.190'>
<phase_done name='optimize_null_checks' stamp='0.190'/>
</phase>
<phase_done name='buildIR' stamp='0.190'/>
</phase>
<phase name='emit_lir' stamp='0.190'>
<phase name='lirGeneration' stamp='0.190'>
<phase_done name='lirGeneration' stamp='0.190'/>
</phase>
<phase name='linearScan' stamp='0.190'>
<phase_done name='linearScan' stamp='0.190'/>
</phase>
<phase_done name='emit_lir' stamp='0.190'/>
</phase>
<phase name='codeemit' stamp='0.190'>
<phase_done name='codeemit' stamp='0.190'/>
</phase>
<phase name='codeinstall' stamp='0.190'>
<phase_done name='codeinstall' stamp='0.191'/>
</phase>
<code_cache total_blobs='277' nmethods='37' adapters='171' free_code_cache='334361280'/>
<task_done success='1' nmsize='936' count='265' stamp='0.191'/>
</task>
<task compile_id='44' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='129' backedge_count='7334' iicount='129' level='3' stamp='0.191'>
<phase name='buildIR' stamp='0.191'>
<type id='789' name='int'/>
<klass id='888' name='[C' flags='1041'/>
<klass id='891' name='[B' flags='1041'/>
<klass id='899' name='sun/nio/cs/UTF_8$Encoder' flags='26'/>
<method id='900' holder='899' name='encode' return='789' arguments='888 789 789 891' flags='1' bytes='359' iicount='129'/>
<parse method='900'  stamp='0.191'>
<bc code='184' bci='14'/>
<klass id='902' name='java/lang/Math' flags='17'/>
<method id='903' holder='902' name='min' return='789' arguments='789 789' flags='9' bytes='11' compile_id='7' compiler='C1' level='3' iicount='1362'/>
<call method='903' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<parse_done stamp='0.191'/>
</parse>
<bc code='184' bci='139'/>
<type id='783' name='boolean'/>
<type id='784' name='char'/>
<klass id='877' name='java/lang/Character' flags='17'/>
<method id='905' holder='877' name='isSurrogate' return='783' arguments='784' flags='9' bytes='18' iicount='1'/>
<call method='905' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='905'>
<parse_done stamp='0.191'/>
</parse>
<bc code='183' bci='157'/>
<type id='791' name='void'/>
<klass id='907' name='sun/nio/cs/Surrogate$Parser' unloaded='1'/>
<method id='908' holder='907' name='&lt;init&gt;' return='791' unloaded='1'/>
<call method='908' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='175'/>
<method id='909' holder='907' name='parse' return='789' arguments='784 888 789 789' unloaded='1'/>
<call method='909' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='186'/>
<klass id='911' name='java/nio/charset/CodingErrorAction' flags='1'/>
<klass id='910' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<method id='912' holder='910' name='malformedInputAction' return='911' flags='1' bytes='5' iicount='1'/>
<call method='912' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='912'>
<parse_done stamp='0.191'/>
</parse>
<parse_done stamp='0.191'/>
</parse>
<phase name='optimize_blocks' stamp='0.191'>
<phase_done name='optimize_blocks' stamp='0.191'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.191'>
<phase_done name='rangeCheckElimination' stamp='0.191'/>
</phase>
<phase name='optimize_null_checks' stamp='0.191'>
<phase_done name='optimize_null_checks' stamp='0.191'/>
</phase>
<phase_done name='buildIR' stamp='0.191'/>
</phase>
<phase name='emit_lir' stamp='0.191'>
<phase name='lirGeneration' stamp='0.191'>
<phase_done name='lirGeneration' stamp='0.191'/>
</phase>
<phase name='linearScan' stamp='0.191'>
<phase_done name='linearScan' stamp='0.191'/>
</phase>
<phase_done name='emit_lir' stamp='0.191'/>
</phase>
<phase name='codeemit' stamp='0.191'>
<phase_done name='codeemit' stamp='0.191'/>
</phase>
<phase name='codeinstall' stamp='0.191'>
<phase_done name='codeinstall' stamp='0.195'/>
</phase>
<code_cache total_blobs='279' nmethods='38' adapters='171' free_code_cache='334353088'/>
<task_done success='1' nmsize='3576' count='160' backedge_count='8627' inlined_bytes='34' stamp='0.195'/>
</task>
<task compile_id='45' method='java/lang/Character toLowerCase (C)C' bytes='6' count='271' iicount='271' level='3' stamp='0.195'>
<phase name='buildIR' stamp='0.195'>
<type id='784' name='char'/>
<klass id='877' name='java/lang/Character' flags='17'/>
<method id='899' holder='877' name='toLowerCase' return='784' arguments='784' flags='9' bytes='6' iicount='271'/>
<parse method='899'  stamp='0.195'>
<bc code='184' bci='1'/>
<type id='789' name='int'/>
<method id='901' holder='877' name='toLowerCase' return='789' arguments='789' flags='9' bytes='9' iicount='271'/>
<call method='901' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<bc code='184' bci='1'/>
<klass id='903' name='java/lang/CharacterData' flags='1024'/>
<method id='904' holder='903' name='of' return='903' arguments='789' flags='24' bytes='120' compile_id='34' compiler='C1' level='3' iicount='1492'/>
<call method='904' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='906' holder='903' name='toLowerCase' return='789' arguments='789' flags='1024' bytes='0' iicount='1'/>
<call method='906' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.195'/>
</parse>
<parse_done stamp='0.195'/>
</parse>
<phase name='optimize_blocks' stamp='0.195'>
<phase_done name='optimize_blocks' stamp='0.195'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.195'>
<phase_done name='rangeCheckElimination' stamp='0.195'/>
</phase>
<phase name='optimize_null_checks' stamp='0.195'>
<phase_done name='optimize_null_checks' stamp='0.195'/>
</phase>
<phase_done name='buildIR' stamp='0.195'/>
</phase>
<phase name='emit_lir' stamp='0.195'>
<phase name='lirGeneration' stamp='0.195'>
<phase_done name='lirGeneration' stamp='0.195'/>
</phase>
<phase name='linearScan' stamp='0.195'>
<phase_done name='linearScan' stamp='0.195'/>
</phase>
<phase_done name='emit_lir' stamp='0.195'/>
</phase>
<phase name='codeemit' stamp='0.195'>
<phase_done name='codeemit' stamp='0.195'/>
</phase>
<phase name='codeinstall' stamp='0.195'>
<phase_done name='codeinstall' stamp='0.218'/>
</phase>
<code_cache total_blobs='280' nmethods='39' adapters='171' free_code_cache='334351360'/>
<task_done success='1' nmsize='1016' count='279' inlined_bytes='9' stamp='0.218'/>
</task>
<task compile_id='42' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='256' iicount='256' level='1' stamp='0.218'>
<phase name='buildIR' stamp='0.218'>
<type id='789' name='int'/>
<klass id='899' name='java/lang/ThreadLocal' flags='1'/>
<method id='900' holder='899' name='access$400' return='789' arguments='899' flags='4104' bytes='5' iicount='256'/>
<parse method='900'  stamp='0.218'>
<parse_done stamp='0.218'/>
</parse>
<phase name='optimize_blocks' stamp='0.218'>
<phase_done name='optimize_blocks' stamp='0.218'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.218'>
<phase_done name='rangeCheckElimination' stamp='0.218'/>
</phase>
<phase name='optimize_null_checks' stamp='0.218'>
<phase_done name='optimize_null_checks' stamp='0.218'/>
</phase>
<phase_done name='buildIR' stamp='0.218'/>
</phase>
<phase name='emit_lir' stamp='0.218'>
<phase name='lirGeneration' stamp='0.218'>
<phase_done name='lirGeneration' stamp='0.218'/>
</phase>
<phase name='linearScan' stamp='0.218'>
<phase_done name='linearScan' stamp='0.218'/>
</phase>
<phase_done name='emit_lir' stamp='0.218'/>
</phase>
<phase name='codeemit' stamp='0.218'>
<phase_done name='codeemit' stamp='0.218'/>
</phase>
<phase name='codeinstall' stamp='0.218'>
<phase_done name='codeinstall' stamp='0.218'/>
</phase>
<code_cache total_blobs='281' nmethods='40' adapters='171' free_code_cache='334350592'/>
<task_done success='1' nmsize='240' count='256' stamp='0.218'/>
</task>
<task compile_id='47' method='java/util/ArrayList size ()I' bytes='5' count='134' iicount='134' level='1' stamp='0.219'>
<phase name='buildIR' stamp='0.219'>
<type id='789' name='int'/>
<klass id='899' name='java/util/ArrayList' flags='1'/>
<method id='900' holder='899' name='size' return='789' flags='1' bytes='5' iicount='134'/>
<parse method='900'  stamp='0.219'>
<parse_done stamp='0.219'/>
</parse>
<phase name='optimize_blocks' stamp='0.219'>
<phase_done name='optimize_blocks' stamp='0.219'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.219'>
<phase_done name='rangeCheckElimination' stamp='0.219'/>
</phase>
<phase name='optimize_null_checks' stamp='0.219'>
<phase_done name='optimize_null_checks' stamp='0.219'/>
</phase>
<phase_done name='buildIR' stamp='0.219'/>
</phase>
<phase name='emit_lir' stamp='0.219'>
<phase name='lirGeneration' stamp='0.219'>
<phase_done name='lirGeneration' stamp='0.219'/>
</phase>
<phase name='linearScan' stamp='0.219'>
<phase_done name='linearScan' stamp='0.219'/>
</phase>
<phase_done name='emit_lir' stamp='0.219'/>
</phase>
<phase name='codeemit' stamp='0.219'>
<phase_done name='codeemit' stamp='0.219'/>
</phase>
<phase name='codeinstall' stamp='0.219'>
<phase_done name='codeinstall' stamp='0.219'/>
</phase>
<code_cache total_blobs='282' nmethods='41' adapters='171' free_code_cache='334349824'/>
<task_done success='1' nmsize='272' count='140' stamp='0.219'/>
</task>
<task compile_id='46' method='java/net/URL getProtocol ()Ljava/lang/String;' bytes='5' count='159' iicount='159' level='1' stamp='0.219'>
<phase name='buildIR' stamp='0.219'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='868' name='java/net/URL' flags='17'/>
<method id='899' holder='868' name='getProtocol' return='797' flags='1' bytes='5' iicount='159'/>
<parse method='899'  stamp='0.219'>
<parse_done stamp='0.219'/>
</parse>
<phase name='optimize_blocks' stamp='0.219'>
<phase_done name='optimize_blocks' stamp='0.219'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.219'>
<phase_done name='rangeCheckElimination' stamp='0.219'/>
</phase>
<phase name='optimize_null_checks' stamp='0.219'>
<phase_done name='optimize_null_checks' stamp='0.219'/>
</phase>
<phase_done name='buildIR' stamp='0.219'/>
</phase>
<phase name='emit_lir' stamp='0.219'>
<phase name='lirGeneration' stamp='0.219'>
<phase_done name='lirGeneration' stamp='0.219'/>
</phase>
<phase name='linearScan' stamp='0.219'>
<phase_done name='linearScan' stamp='0.219'/>
</phase>
<phase_done name='emit_lir' stamp='0.219'/>
</phase>
<phase name='codeemit' stamp='0.219'>
<phase_done name='codeemit' stamp='0.219'/>
</phase>
<phase name='codeinstall' stamp='0.219'>
<phase_done name='codeinstall' stamp='0.219'/>
</phase>
<code_cache total_blobs='283' nmethods='42' adapters='171' free_code_cache='334349056'/>
<task_done success='1' nmsize='272' count='162' stamp='0.219'/>
</task>
<task compile_id='48' method='java/net/URL getPath ()Ljava/lang/String;' bytes='5' count='134' iicount='134' level='1' stamp='0.219'>
<phase name='buildIR' stamp='0.219'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='868' name='java/net/URL' flags='17'/>
<method id='899' holder='868' name='getPath' return='797' flags='1' bytes='5' iicount='134'/>
<parse method='899'  stamp='0.219'>
<parse_done stamp='0.219'/>
</parse>
<phase name='optimize_blocks' stamp='0.219'>
<phase_done name='optimize_blocks' stamp='0.219'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.219'>
<phase_done name='rangeCheckElimination' stamp='0.219'/>
</phase>
<phase name='optimize_null_checks' stamp='0.219'>
<phase_done name='optimize_null_checks' stamp='0.219'/>
</phase>
<phase_done name='buildIR' stamp='0.219'/>
</phase>
<phase name='emit_lir' stamp='0.219'>
<phase name='lirGeneration' stamp='0.219'>
<phase_done name='lirGeneration' stamp='0.219'/>
</phase>
<phase name='linearScan' stamp='0.219'>
<phase_done name='linearScan' stamp='0.219'/>
</phase>
<phase_done name='emit_lir' stamp='0.219'/>
</phase>
<phase name='codeemit' stamp='0.219'>
<phase_done name='codeemit' stamp='0.219'/>
</phase>
<phase name='codeinstall' stamp='0.219'>
<phase_done name='codeinstall' stamp='0.220'/>
</phase>
<code_cache total_blobs='284' nmethods='43' adapters='171' free_code_cache='334348288'/>
<task_done success='1' nmsize='272' count='138' stamp='0.220'/>
</task>
<task compile_id='49' method='java/net/URL getHost ()Ljava/lang/String;' bytes='5' count='129' iicount='129' level='1' stamp='0.220'>
<phase name='buildIR' stamp='0.220'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='868' name='java/net/URL' flags='17'/>
<method id='899' holder='868' name='getHost' return='797' flags='1' bytes='5' iicount='129'/>
<parse method='899'  stamp='0.220'>
<parse_done stamp='0.220'/>
</parse>
<phase name='optimize_blocks' stamp='0.220'>
<phase_done name='optimize_blocks' stamp='0.220'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.220'>
<phase_done name='rangeCheckElimination' stamp='0.220'/>
</phase>
<phase name='optimize_null_checks' stamp='0.220'>
<phase_done name='optimize_null_checks' stamp='0.220'/>
</phase>
<phase_done name='buildIR' stamp='0.220'/>
</phase>
<phase name='emit_lir' stamp='0.220'>
<phase name='lirGeneration' stamp='0.220'>
<phase_done name='lirGeneration' stamp='0.220'/>
</phase>
<phase name='linearScan' stamp='0.220'>
<phase_done name='linearScan' stamp='0.220'/>
</phase>
<phase_done name='emit_lir' stamp='0.220'/>
</phase>
<phase name='codeemit' stamp='0.220'>
<phase_done name='codeemit' stamp='0.220'/>
</phase>
<phase name='codeinstall' stamp='0.220'>
<phase_done name='codeinstall' stamp='0.220'/>
</phase>
<code_cache total_blobs='285' nmethods='44' adapters='171' free_code_cache='334347520'/>
<task_done success='1' nmsize='272' count='129' stamp='0.220'/>
</task>
<task compile_id='51' method='java/util/Arrays copyOf ([BI)[B' bytes='19' count='256' iicount='256' level='3' stamp='0.221'>
<phase name='buildIR' stamp='0.221'>
<klass id='891' name='[B' flags='1041'/>
<type id='789' name='int'/>
<klass id='899' name='java/util/Arrays' flags='1'/>
<method id='900' holder='899' name='copyOf' return='891' arguments='891 789' flags='9' bytes='19' iicount='258'/>
<parse method='900'  stamp='0.221'>
<bc code='184' bci='11'/>
<klass id='902' name='java/lang/Math' flags='17'/>
<method id='903' holder='902' name='min' return='789' arguments='789 789' flags='9' bytes='11' compile_id='7' compiler='C1' level='3' iicount='1755'/>
<call method='903' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<parse_done stamp='0.221'/>
</parse>
<bc code='184' bci='14'/>
<type id='791' name='void'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='905' holder='802' name='arraycopy' return='791' arguments='796 789 796 789 789' flags='265' bytes='0' compile_id='8' compile_kind='c2n' level='0' iicount='640'/>
<call method='905' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.221'/>
</parse>
<phase name='optimize_blocks' stamp='0.221'>
<phase_done name='optimize_blocks' stamp='0.221'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.221'>
<phase_done name='rangeCheckElimination' stamp='0.221'/>
</phase>
<phase name='optimize_null_checks' stamp='0.221'>
<phase_done name='optimize_null_checks' stamp='0.221'/>
</phase>
<phase_done name='buildIR' stamp='0.221'/>
</phase>
<phase name='emit_lir' stamp='0.221'>
<phase name='lirGeneration' stamp='0.221'>
<phase_done name='lirGeneration' stamp='0.221'/>
</phase>
<phase name='linearScan' stamp='0.221'>
<phase_done name='linearScan' stamp='0.221'/>
</phase>
<phase_done name='emit_lir' stamp='0.221'/>
</phase>
<phase name='codeemit' stamp='0.221'>
<phase_done name='codeemit' stamp='0.221'/>
</phase>
<phase name='codeinstall' stamp='0.221'>
<phase_done name='codeinstall' stamp='0.222'/>
</phase>
<code_cache total_blobs='286' nmethods='45' adapters='171' free_code_cache='334345920'/>
<task_done success='1' nmsize='808' count='289' inlined_bytes='11' stamp='0.222'/>
</task>
<task compile_id='50' method='java/net/URL getAuthority ()Ljava/lang/String;' bytes='5' count='146' iicount='146' level='1' stamp='0.222'>
<phase name='buildIR' stamp='0.222'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='868' name='java/net/URL' flags='17'/>
<method id='899' holder='868' name='getAuthority' return='797' flags='1' bytes='5' iicount='146'/>
<parse method='899'  stamp='0.222'>
<parse_done stamp='0.222'/>
</parse>
<phase name='optimize_blocks' stamp='0.222'>
<phase_done name='optimize_blocks' stamp='0.222'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.222'>
<phase_done name='rangeCheckElimination' stamp='0.222'/>
</phase>
<phase name='optimize_null_checks' stamp='0.222'>
<phase_done name='optimize_null_checks' stamp='0.222'/>
</phase>
<phase_done name='buildIR' stamp='0.222'/>
</phase>
<phase name='emit_lir' stamp='0.222'>
<phase name='lirGeneration' stamp='0.222'>
<phase_done name='lirGeneration' stamp='0.222'/>
</phase>
<phase name='linearScan' stamp='0.222'>
<phase_done name='linearScan' stamp='0.222'/>
</phase>
<phase_done name='emit_lir' stamp='0.222'/>
</phase>
<phase name='codeemit' stamp='0.222'>
<phase_done name='codeemit' stamp='0.222'/>
</phase>
<phase name='codeinstall' stamp='0.222'>
<phase_done name='codeinstall' stamp='0.223'/>
</phase>
<code_cache total_blobs='287' nmethods='46' adapters='171' free_code_cache='334345152'/>
<task_done success='1' nmsize='272' count='146' stamp='0.223'/>
</task>
<task compile_id='52' method='java/lang/AbstractStringBuilder newCapacity (I)I' bytes='39' count='301' iicount='301' level='3' stamp='0.223'>
<phase name='buildIR' stamp='0.223'>
<type id='789' name='int'/>
<klass id='860' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='899' holder='860' name='newCapacity' return='789' arguments='789' flags='2' bytes='39' iicount='303'/>
<parse method='899'  stamp='0.223'>
<bc code='183' bci='31'/>
<method id='901' holder='860' name='hugeCapacity' return='789' arguments='789' flags='2' bytes='28' iicount='1'/>
<call method='901' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<bc code='183' bci='11'/>
<type id='791' name='void'/>
<klass id='819' name='java/lang/OutOfMemoryError' flags='1'/>
<method id='903' holder='819' name='&lt;init&gt;' return='791' flags='1' bytes='5' iicount='1'/>
<call method='903' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.223'/>
</parse>
<parse_done stamp='0.223'/>
</parse>
<phase name='optimize_blocks' stamp='0.223'>
<phase_done name='optimize_blocks' stamp='0.223'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.223'>
<phase_done name='rangeCheckElimination' stamp='0.223'/>
</phase>
<phase name='optimize_null_checks' stamp='0.223'>
<phase_done name='optimize_null_checks' stamp='0.223'/>
</phase>
<phase_done name='buildIR' stamp='0.223'/>
</phase>
<phase name='emit_lir' stamp='0.223'>
<phase name='lirGeneration' stamp='0.223'>
<phase_done name='lirGeneration' stamp='0.223'/>
</phase>
<phase name='linearScan' stamp='0.223'>
<phase_done name='linearScan' stamp='0.223'/>
</phase>
<phase_done name='emit_lir' stamp='0.223'/>
</phase>
<phase name='codeemit' stamp='0.223'>
<phase_done name='codeemit' stamp='0.223'/>
</phase>
<phase name='codeinstall' stamp='0.223'>
<phase_done name='codeinstall' stamp='0.225'/>
</phase>
<code_cache total_blobs='288' nmethods='47' adapters='171' free_code_cache='334343104'/>
<task_done success='1' nmsize='1000' count='303' inlined_bytes='28' stamp='0.225'/>
</task>
<task compile_id='53' method='java/nio/charset/CharsetEncoder maxBytesPerChar ()F' bytes='5' count='257' iicount='257' level='3' stamp='0.225'>
<phase name='buildIR' stamp='0.225'>
<type id='785' name='float'/>
<klass id='899' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<method id='900' holder='899' name='maxBytesPerChar' return='785' flags='17' bytes='5' iicount='258'/>
<parse method='900'  stamp='0.225'>
<parse_done stamp='0.225'/>
</parse>
<phase name='optimize_blocks' stamp='0.225'>
<phase_done name='optimize_blocks' stamp='0.225'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.225'>
<phase_done name='rangeCheckElimination' stamp='0.225'/>
</phase>
<phase name='optimize_null_checks' stamp='0.225'>
<phase_done name='optimize_null_checks' stamp='0.225'/>
</phase>
<phase_done name='buildIR' stamp='0.225'/>
</phase>
<phase name='emit_lir' stamp='0.225'>
<phase name='lirGeneration' stamp='0.225'>
<phase_done name='lirGeneration' stamp='0.225'/>
</phase>
<phase name='linearScan' stamp='0.225'>
<phase_done name='linearScan' stamp='0.225'/>
</phase>
<phase_done name='emit_lir' stamp='0.225'/>
</phase>
<phase name='codeemit' stamp='0.225'>
<phase_done name='codeemit' stamp='0.225'/>
</phase>
<phase name='codeinstall' stamp='0.225'>
<phase_done name='codeinstall' stamp='0.226'/>
</phase>
<code_cache total_blobs='289' nmethods='48' adapters='171' free_code_cache='334342208'/>
<task_done success='1' nmsize='336' count='262' stamp='0.226'/>
</task>
<task compile_id='54' method='java/net/URL getRef ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.226'>
<phase name='buildIR' stamp='0.226'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='868' name='java/net/URL' flags='17'/>
<method id='899' holder='868' name='getRef' return='797' flags='1' bytes='5' iicount='128'/>
<parse method='899'  stamp='0.226'>
<parse_done stamp='0.226'/>
</parse>
<phase name='optimize_blocks' stamp='0.226'>
<phase_done name='optimize_blocks' stamp='0.226'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.226'>
<phase_done name='rangeCheckElimination' stamp='0.226'/>
</phase>
<phase name='optimize_null_checks' stamp='0.226'>
<phase_done name='optimize_null_checks' stamp='0.226'/>
</phase>
<phase_done name='buildIR' stamp='0.226'/>
</phase>
<phase name='emit_lir' stamp='0.226'>
<phase name='lirGeneration' stamp='0.226'>
<phase_done name='lirGeneration' stamp='0.226'/>
</phase>
<phase name='linearScan' stamp='0.226'>
<phase_done name='linearScan' stamp='0.226'/>
</phase>
<phase_done name='emit_lir' stamp='0.226'/>
</phase>
<phase name='codeemit' stamp='0.226'>
<phase_done name='codeemit' stamp='0.226'/>
</phase>
<phase name='codeinstall' stamp='0.226'>
<phase_done name='codeinstall' stamp='0.227'/>
</phase>
<code_cache total_blobs='290' nmethods='49' adapters='171' free_code_cache='334341440'/>
<task_done success='1' nmsize='272' count='128' stamp='0.227'/>
</task>
<task compile_id='55' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='384' iicount='384' level='3' stamp='0.227'>
<phase name='buildIR' stamp='0.227'>
<klass id='900' name='java/util/concurrent/ConcurrentHashMap$Node' flags='8'/>
<klass id='901' name='[Ljava/util/concurrent/ConcurrentHashMap$Node;' flags='1040'/>
<type id='789' name='int'/>
<klass id='899' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='902' holder='899' name='tabAt' return='900' arguments='901 789' flags='24' bytes='21' iicount='384'/>
<parse method='902'  stamp='0.227'>
<bc code='182' bci='14'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<type id='790' name='long'/>
<klass id='863' name='sun/misc/Unsafe' flags='17'/>
<method id='906' holder='863' name='getObjectVolatile' return='796' arguments='796 790' flags='257' bytes='0' iicount='384'/>
<call method='906' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.227'/>
</parse>
<phase name='optimize_blocks' stamp='0.227'>
<phase_done name='optimize_blocks' stamp='0.227'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.227'>
<phase_done name='rangeCheckElimination' stamp='0.227'/>
</phase>
<phase name='optimize_null_checks' stamp='0.227'>
<phase_done name='optimize_null_checks' stamp='0.227'/>
</phase>
<phase_done name='buildIR' stamp='0.227'/>
</phase>
<phase name='emit_lir' stamp='0.227'>
<phase name='lirGeneration' stamp='0.227'>
<phase_done name='lirGeneration' stamp='0.227'/>
</phase>
<phase name='linearScan' stamp='0.227'>
<phase_done name='linearScan' stamp='0.227'/>
</phase>
<phase_done name='emit_lir' stamp='0.227'/>
</phase>
<phase name='codeemit' stamp='0.227'>
<phase_done name='codeemit' stamp='0.227'/>
</phase>
<phase name='codeinstall' stamp='0.227'>
<phase_done name='codeinstall' stamp='0.229'/>
</phase>
<code_cache total_blobs='292' nmethods='51' adapters='171' free_code_cache='334339008'/>
<task_done success='1' nmsize='912' count='539' stamp='0.229'/>
</task>
<task compile_id='57' method='java/net/URL getFile ()Ljava/lang/String;' bytes='5' count='129' iicount='129' level='1' stamp='0.229'>
<phase name='buildIR' stamp='0.229'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='868' name='java/net/URL' flags='17'/>
<method id='899' holder='868' name='getFile' return='797' flags='1' bytes='5' iicount='129'/>
<parse method='899'  stamp='0.229'>
<parse_done stamp='0.229'/>
</parse>
<phase name='optimize_blocks' stamp='0.229'>
<phase_done name='optimize_blocks' stamp='0.229'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.229'>
<phase_done name='rangeCheckElimination' stamp='0.229'/>
</phase>
<phase name='optimize_null_checks' stamp='0.229'>
<phase_done name='optimize_null_checks' stamp='0.229'/>
</phase>
<phase_done name='buildIR' stamp='0.229'/>
</phase>
<phase name='emit_lir' stamp='0.229'>
<phase name='lirGeneration' stamp='0.229'>
<phase_done name='lirGeneration' stamp='0.229'/>
</phase>
<phase name='linearScan' stamp='0.229'>
<phase_done name='linearScan' stamp='0.229'/>
</phase>
<phase_done name='emit_lir' stamp='0.229'/>
</phase>
<phase name='codeemit' stamp='0.229'>
<phase_done name='codeemit' stamp='0.229'/>
</phase>
<phase name='codeinstall' stamp='0.229'>
<phase_done name='codeinstall' stamp='0.230'/>
</phase>
<code_cache total_blobs='293' nmethods='52' adapters='171' free_code_cache='334338240'/>
<task_done success='1' nmsize='272' count='132' stamp='0.230'/>
</task>
<task compile_id='58' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='420' iicount='420' level='3' stamp='0.230'>
<phase name='buildIR' stamp='0.230'>
<klass id='862' name='java/lang/StringBuilder' flags='17'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='862' name='append' return='862' arguments='797' flags='1' bytes='8' iicount='422'/>
<parse method='899'  stamp='0.230'>
<bc code='183' bci='2'/>
<klass id='860' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='901' holder='860' name='append' return='860' arguments='797' flags='1' bytes='50' compile_id='10' compiler='C1' level='3' iicount='548'/>
<call method='901' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.230'/>
</parse>
<phase name='optimize_blocks' stamp='0.230'>
<phase_done name='optimize_blocks' stamp='0.230'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.230'>
<phase_done name='rangeCheckElimination' stamp='0.230'/>
</phase>
<phase name='optimize_null_checks' stamp='0.230'>
<phase_done name='optimize_null_checks' stamp='0.230'/>
</phase>
<phase_done name='buildIR' stamp='0.230'/>
</phase>
<phase name='emit_lir' stamp='0.230'>
<phase name='lirGeneration' stamp='0.230'>
<phase_done name='lirGeneration' stamp='0.230'/>
</phase>
<phase name='linearScan' stamp='0.230'>
<phase_done name='linearScan' stamp='0.230'/>
</phase>
<phase_done name='emit_lir' stamp='0.230'/>
</phase>
<phase name='codeemit' stamp='0.230'>
<phase_done name='codeemit' stamp='0.230'/>
</phase>
<phase name='codeinstall' stamp='0.230'>
<phase_done name='codeinstall' stamp='0.231'/>
</phase>
<code_cache total_blobs='294' nmethods='53' adapters='171' free_code_cache='334337280'/>
<task_done success='1' nmsize='392' count='422' stamp='0.231'/>
</task>
<task compile_id='59' method='java/lang/String toCharArray ()[C' bytes='25' count='256' iicount='256' level='3' stamp='0.231'>
<phase name='buildIR' stamp='0.231'>
<klass id='888' name='[C' flags='1041'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='toCharArray' return='888' flags='1' bytes='25' iicount='258'/>
<parse method='899'  stamp='0.231'>
<bc code='184' bci='20'/>
<type id='791' name='void'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<type id='789' name='int'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='901' holder='802' name='arraycopy' return='791' arguments='796 789 796 789 789' flags='265' bytes='0' compile_id='8' compile_kind='c2n' level='0' iicount='640'/>
<call method='901' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.231'/>
</parse>
<phase name='optimize_blocks' stamp='0.231'>
<phase_done name='optimize_blocks' stamp='0.231'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.231'>
<phase_done name='rangeCheckElimination' stamp='0.231'/>
</phase>
<phase name='optimize_null_checks' stamp='0.231'>
<phase_done name='optimize_null_checks' stamp='0.231'/>
</phase>
<phase_done name='buildIR' stamp='0.231'/>
</phase>
<phase name='emit_lir' stamp='0.231'>
<phase name='lirGeneration' stamp='0.231'>
<phase_done name='lirGeneration' stamp='0.231'/>
</phase>
<phase name='linearScan' stamp='0.231'>
<phase_done name='linearScan' stamp='0.231'/>
</phase>
<phase_done name='emit_lir' stamp='0.231'/>
</phase>
<phase name='codeemit' stamp='0.231'>
<phase_done name='codeemit' stamp='0.231'/>
</phase>
<phase name='codeinstall' stamp='0.231'>
<phase_done name='codeinstall' stamp='0.232'/>
</phase>
<code_cache total_blobs='295' nmethods='54' adapters='171' free_code_cache='334335936'/>
<task_done success='1' nmsize='648' count='263' stamp='0.232'/>
</task>
<task compile_id='60' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='257' iicount='257' level='3' stamp='0.232'>
<phase name='buildIR' stamp='0.232'>
<klass id='797' name='java/lang/String' flags='17'/>
<type id='789' name='int'/>
<method id='899' holder='797' name='substring' return='797' arguments='789 789' flags='1' bytes='79' iicount='257'/>
<parse method='899'  stamp='0.232'>
<bc code='183' bci='9'/>
<type id='791' name='void'/>
<klass id='901' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='902' holder='901' name='&lt;init&gt;' return='791' arguments='789' unloaded='1'/>
<call method='902' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='902' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='44'/>
<call method='902' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='75'/>
<klass id='888' name='[C' flags='1041'/>
<method id='903' holder='797' name='&lt;init&gt;' return='791' arguments='888 789 789' flags='1' bytes='82' compile_id='9' compiler='C1' level='3' iicount='644'/>
<call method='903' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.232'/>
</parse>
<phase name='optimize_blocks' stamp='0.232'>
<phase_done name='optimize_blocks' stamp='0.232'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.232'>
<phase_done name='rangeCheckElimination' stamp='0.232'/>
</phase>
<phase name='optimize_null_checks' stamp='0.232'>
<phase_done name='optimize_null_checks' stamp='0.232'/>
</phase>
<phase_done name='buildIR' stamp='0.232'/>
</phase>
<phase name='emit_lir' stamp='0.232'>
<phase name='lirGeneration' stamp='0.232'>
<phase_done name='lirGeneration' stamp='0.232'/>
</phase>
<phase name='linearScan' stamp='0.232'>
<phase_done name='linearScan' stamp='0.232'/>
</phase>
<phase_done name='emit_lir' stamp='0.232'/>
</phase>
<phase name='codeemit' stamp='0.232'>
<phase_done name='codeemit' stamp='0.232'/>
</phase>
<phase name='codeinstall' stamp='0.232'>
<phase_done name='codeinstall' stamp='0.234'/>
</phase>
<code_cache total_blobs='296' nmethods='55' adapters='171' free_code_cache='334333376'/>
<task_done success='1' nmsize='1208' count='257' stamp='0.234'/>
</task>
<task compile_id='61' method='java/util/Vector size ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.234'>
<phase name='buildIR' stamp='0.234'>
<type id='789' name='int'/>
<klass id='899' name='java/util/Vector' flags='1'/>
<method id='900' holder='899' name='size' return='789' flags='33' bytes='5' iicount='128'/>
<parse method='900'  stamp='0.234'>
<parse_done stamp='0.234'/>
</parse>
<phase name='optimize_blocks' stamp='0.234'>
<phase_done name='optimize_blocks' stamp='0.234'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.234'>
<phase_done name='rangeCheckElimination' stamp='0.234'/>
</phase>
<phase name='optimize_null_checks' stamp='0.234'>
<phase_done name='optimize_null_checks' stamp='0.234'/>
</phase>
<phase_done name='buildIR' stamp='0.234'/>
</phase>
<phase name='emit_lir' stamp='0.234'>
<phase name='lirGeneration' stamp='0.234'>
<phase_done name='lirGeneration' stamp='0.234'/>
</phase>
<phase name='linearScan' stamp='0.234'>
<phase_done name='linearScan' stamp='0.234'/>
</phase>
<phase_done name='emit_lir' stamp='0.234'/>
</phase>
<phase name='codeemit' stamp='0.234'>
<phase_done name='codeemit' stamp='0.234'/>
</phase>
<phase name='codeinstall' stamp='0.234'>
<phase_done name='codeinstall' stamp='0.234'/>
</phase>
<code_cache total_blobs='297' nmethods='56' adapters='171' free_code_cache='334332160'/>
<task_done success='1' nmsize='624' count='130' stamp='0.234'/>
</task>
<task compile_id='62' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='401' backedge_count='891' iicount='401' level='3' stamp='0.234'>
<phase name='buildIR' stamp='0.234'>
<type id='783' name='boolean'/>
<klass id='797' name='java/lang/String' flags='17'/>
<type id='789' name='int'/>
<method id='899' holder='797' name='startsWith' return='783' arguments='797 789' flags='1' bytes='72' iicount='401'/>
<parse method='899'  stamp='0.234'>
<parse_done stamp='0.234'/>
</parse>
<phase name='optimize_blocks' stamp='0.234'>
<phase_done name='optimize_blocks' stamp='0.234'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.234'>
<phase_done name='rangeCheckElimination' stamp='0.234'/>
</phase>
<phase name='optimize_null_checks' stamp='0.234'>
<phase_done name='optimize_null_checks' stamp='0.234'/>
</phase>
<phase_done name='buildIR' stamp='0.234'/>
</phase>
<phase name='emit_lir' stamp='0.234'>
<phase name='lirGeneration' stamp='0.234'>
<phase_done name='lirGeneration' stamp='0.234'/>
</phase>
<phase name='linearScan' stamp='0.234'>
<phase_done name='linearScan' stamp='0.235'/>
</phase>
<phase_done name='emit_lir' stamp='0.235'/>
</phase>
<phase name='codeemit' stamp='0.235'>
<phase_done name='codeemit' stamp='0.235'/>
</phase>
<phase name='codeinstall' stamp='0.235'>
<phase_done name='codeinstall' stamp='0.236'/>
</phase>
<code_cache total_blobs='298' nmethods='57' adapters='171' free_code_cache='334330240'/>
<task_done success='1' nmsize='816' count='406' backedge_count='892' stamp='0.236'/>
</task>
<task compile_id='64' method='java/nio/Buffer checkIndex (I)I' bytes='22' count='260' iicount='260' level='3' stamp='0.238'>
<phase name='buildIR' stamp='0.238'>
<type id='789' name='int'/>
<klass id='875' name='java/nio/Buffer' flags='1025'/>
<method id='899' holder='875' name='checkIndex' return='789' arguments='789' flags='16' bytes='22' iicount='260'/>
<parse method='899'  stamp='0.238'>
<bc code='183' bci='16'/>
<type id='791' name='void'/>
<klass id='901' name='java/lang/IndexOutOfBoundsException' flags='1'/>
<method id='902' holder='901' name='&lt;init&gt;' return='791' flags='1' bytes='5' iicount='1'/>
<call method='902' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.238'/>
</parse>
<phase name='optimize_blocks' stamp='0.238'>
<phase_done name='optimize_blocks' stamp='0.238'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.238'>
<phase_done name='rangeCheckElimination' stamp='0.238'/>
</phase>
<phase name='optimize_null_checks' stamp='0.238'>
<phase_done name='optimize_null_checks' stamp='0.238'/>
</phase>
<phase_done name='buildIR' stamp='0.238'/>
</phase>
<phase name='emit_lir' stamp='0.238'>
<phase name='lirGeneration' stamp='0.238'>
<phase_done name='lirGeneration' stamp='0.238'/>
</phase>
<phase name='linearScan' stamp='0.238'>
<phase_done name='linearScan' stamp='0.238'/>
</phase>
<phase_done name='emit_lir' stamp='0.238'/>
</phase>
<phase name='codeemit' stamp='0.238'>
<phase_done name='codeemit' stamp='0.238'/>
</phase>
<phase name='codeinstall' stamp='0.238'>
<phase_done name='codeinstall' stamp='0.258'/>
</phase>
<code_cache total_blobs='300' nmethods='59' adapters='171' free_code_cache='334327936'/>
<task_done success='1' nmsize='648' count='268' stamp='0.258'/>
</task>
<task compile_id='65' method='java/nio/DirectLongBufferU ix (I)J' bytes='10' count='274' iicount='274' level='3' stamp='0.258'>
<phase name='buildIR' stamp='0.258'>
<type id='790' name='long'/>
<type id='789' name='int'/>
<klass id='899' name='java/nio/DirectLongBufferU' flags='0'/>
<method id='900' holder='899' name='ix' return='790' arguments='789' flags='2' bytes='10' iicount='274'/>
<parse method='900'  stamp='0.258'>
<parse_done stamp='0.258'/>
</parse>
<phase name='optimize_blocks' stamp='0.258'>
<phase_done name='optimize_blocks' stamp='0.258'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.258'>
<phase_done name='rangeCheckElimination' stamp='0.258'/>
</phase>
<phase name='optimize_null_checks' stamp='0.258'>
<phase_done name='optimize_null_checks' stamp='0.258'/>
</phase>
<phase_done name='buildIR' stamp='0.258'/>
</phase>
<phase name='emit_lir' stamp='0.258'>
<phase name='lirGeneration' stamp='0.258'>
<phase_done name='lirGeneration' stamp='0.258'/>
</phase>
<phase name='linearScan' stamp='0.258'>
<phase_done name='linearScan' stamp='0.258'/>
</phase>
<phase_done name='emit_lir' stamp='0.258'/>
</phase>
<phase name='codeemit' stamp='0.258'>
<phase_done name='codeemit' stamp='0.258'/>
</phase>
<phase name='codeinstall' stamp='0.258'>
<phase_done name='codeinstall' stamp='0.259'/>
</phase>
<code_cache total_blobs='301' nmethods='60' adapters='171' free_code_cache='334327040'/>
<task_done success='1' nmsize='368' count='280' stamp='0.259'/>
</task>
<task compile_id='67' method='java/nio/charset/CharsetEncoder reset ()Ljava/nio/charset/CharsetEncoder;' bytes='11' count='256' iicount='256' level='3' stamp='0.259'>
<phase name='buildIR' stamp='0.259'>
<klass id='899' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<method id='900' holder='899' name='reset' return='899' flags='17' bytes='11' iicount='257'/>
<parse method='900'  stamp='0.259'>
<bc code='182' bci='1'/>
<type id='791' name='void'/>
<method id='902' holder='899' name='implReset' return='791' flags='4' bytes='1' iicount='257'/>
<call method='902' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='899' x='902'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<parse_done stamp='0.259'/>
</parse>
<parse_done stamp='0.259'/>
</parse>
<phase name='optimize_blocks' stamp='0.259'>
<phase_done name='optimize_blocks' stamp='0.259'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.259'>
<phase_done name='rangeCheckElimination' stamp='0.259'/>
</phase>
<phase name='optimize_null_checks' stamp='0.259'>
<phase_done name='optimize_null_checks' stamp='0.259'/>
</phase>
<phase_done name='buildIR' stamp='0.259'/>
</phase>
<phase name='emit_lir' stamp='0.259'>
<phase name='lirGeneration' stamp='0.259'>
<phase_done name='lirGeneration' stamp='0.259'/>
</phase>
<phase name='linearScan' stamp='0.259'>
<phase_done name='linearScan' stamp='0.259'/>
</phase>
<phase_done name='emit_lir' stamp='0.259'/>
</phase>
<phase name='codeemit' stamp='0.259'>
<phase_done name='codeemit' stamp='0.259'/>
</phase>
<phase name='codeinstall' stamp='0.259'>
<dependency type='unique_concrete_method' ctxk='899' x='902'/>
<phase_done name='codeinstall' stamp='0.260'/>
</phase>
<code_cache total_blobs='302' nmethods='61' adapters='171' free_code_cache='334325568'/>
<task_done success='1' nmsize='912' count='274' inlined_bytes='1' stamp='0.260'/>
</task>
<task compile_id='68' method='java/nio/charset/CharsetEncoder implReset ()V' bytes='1' count='274' iicount='274' level='3' stamp='0.260'>
<phase name='buildIR' stamp='0.260'>
<type id='791' name='void'/>
<klass id='899' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<method id='900' holder='899' name='implReset' return='791' flags='4' bytes='1' iicount='274'/>
<parse method='900'  stamp='0.260'>
<parse_done stamp='0.260'/>
</parse>
<phase name='optimize_blocks' stamp='0.260'>
<phase_done name='optimize_blocks' stamp='0.260'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.260'>
<phase_done name='rangeCheckElimination' stamp='0.260'/>
</phase>
<phase name='optimize_null_checks' stamp='0.260'>
<phase_done name='optimize_null_checks' stamp='0.260'/>
</phase>
<phase_done name='buildIR' stamp='0.260'/>
</phase>
<phase name='emit_lir' stamp='0.260'>
<phase name='lirGeneration' stamp='0.260'>
<phase_done name='lirGeneration' stamp='0.260'/>
</phase>
<phase name='linearScan' stamp='0.260'>
<phase_done name='linearScan' stamp='0.260'/>
</phase>
<phase_done name='emit_lir' stamp='0.260'/>
</phase>
<phase name='codeemit' stamp='0.260'>
<phase_done name='codeemit' stamp='0.260'/>
</phase>
<phase name='codeinstall' stamp='0.260'>
<phase_done name='codeinstall' stamp='0.261'/>
</phase>
<code_cache total_blobs='303' nmethods='62' adapters='171' free_code_cache='334324736'/>
<task_done success='1' nmsize='336' count='274' stamp='0.261'/>
</task>
<task compile_id='66' method='java/security/ProtectionDomain getCodeSource ()Ljava/security/CodeSource;' bytes='5' count='138' iicount='138' level='1' stamp='0.261'>
<phase name='buildIR' stamp='0.261'>
<klass id='873' name='java/security/CodeSource' flags='1'/>
<klass id='809' name='java/security/ProtectionDomain' flags='1'/>
<method id='899' holder='809' name='getCodeSource' return='873' flags='17' bytes='5' iicount='138'/>
<parse method='899'  stamp='0.261'>
<parse_done stamp='0.261'/>
</parse>
<phase name='optimize_blocks' stamp='0.261'>
<phase_done name='optimize_blocks' stamp='0.261'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.261'>
<phase_done name='rangeCheckElimination' stamp='0.261'/>
</phase>
<phase name='optimize_null_checks' stamp='0.261'>
<phase_done name='optimize_null_checks' stamp='0.261'/>
</phase>
<phase_done name='buildIR' stamp='0.261'/>
</phase>
<phase name='emit_lir' stamp='0.261'>
<phase name='lirGeneration' stamp='0.261'>
<phase_done name='lirGeneration' stamp='0.261'/>
</phase>
<phase name='linearScan' stamp='0.261'>
<phase_done name='linearScan' stamp='0.261'/>
</phase>
<phase_done name='emit_lir' stamp='0.261'/>
</phase>
<phase name='codeemit' stamp='0.261'>
<phase_done name='codeemit' stamp='0.261'/>
</phase>
<phase name='codeinstall' stamp='0.261'>
<phase_done name='codeinstall' stamp='0.261'/>
</phase>
<code_cache total_blobs='304' nmethods='63' adapters='171' free_code_cache='334323968'/>
<task_done success='1' nmsize='272' count='138' stamp='0.261'/>
</task>
<task compile_id='69' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='115' backedge_count='5165' iicount='115' level='3' stamp='0.261'>
<phase name='buildIR' stamp='0.261'>
<type id='789' name='int'/>
<klass id='888' name='[C' flags='1041'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='indexOf' return='789' arguments='888 789 789 888 789 789 789' flags='8' bytes='166' iicount='115'/>
<parse method='899'  stamp='0.261'>
<parse_done stamp='0.261'/>
</parse>
<phase name='optimize_blocks' stamp='0.261'>
<phase_done name='optimize_blocks' stamp='0.261'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.261'>
<phase_done name='rangeCheckElimination' stamp='0.261'/>
</phase>
<phase name='optimize_null_checks' stamp='0.261'>
<phase_done name='optimize_null_checks' stamp='0.261'/>
</phase>
<phase_done name='buildIR' stamp='0.261'/>
</phase>
<phase name='emit_lir' stamp='0.261'>
<phase name='lirGeneration' stamp='0.261'>
<phase_done name='lirGeneration' stamp='0.261'/>
</phase>
<phase name='linearScan' stamp='0.261'>
<phase_done name='linearScan' stamp='0.261'/>
</phase>
<phase_done name='emit_lir' stamp='0.261'/>
</phase>
<phase name='codeemit' stamp='0.261'>
<phase_done name='codeemit' stamp='0.261'/>
</phase>
<phase name='codeinstall' stamp='0.261'>
<phase_done name='codeinstall' stamp='0.264'/>
</phase>
<code_cache total_blobs='305' nmethods='64' adapters='171' free_code_cache='334320704'/>
<task_done success='1' nmsize='1616' count='117' backedge_count='5250' stamp='0.264'/>
</task>
<task compile_id='70' method='sun/misc/URLClassPath getNextLoader ([II)Lsun/misc/URLClassPath$Loader;' bytes='88' count='256' iicount='256' level='3' stamp='0.264'>
<phase name='buildIR' stamp='0.264'>
<klass id='900' name='sun/misc/URLClassPath$Loader' flags='10'/>
<klass id='893' name='[I' flags='1041'/>
<type id='789' name='int'/>
<klass id='899' name='sun/misc/URLClassPath' flags='1'/>
<method id='901' holder='899' name='getNextLoader' return='900' arguments='893 789' flags='34' bytes='88' iicount='256'/>
<parse method='901'  stamp='0.264'>
<bc code='182' bci='26'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='903' name='java/util/ArrayList' flags='1'/>
<method id='904' holder='903' name='get' return='796' arguments='789' flags='1' bytes='11' iicount='224'/>
<call method='904' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='903'/>
<parse method='904'>
<bc code='183' bci='2'/>
<type id='791' name='void'/>
<method id='906' holder='903' name='rangeCheck' return='791' arguments='789' flags='2' bytes='22' iicount='224'/>
<call method='906' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<parse method='906'>
<bc code='183' bci='14'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='909' holder='903' name='outOfBoundsMsg' return='797' arguments='789' flags='2' bytes='32' iicount='1'/>
<call method='909' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='17'/>
<klass id='908' name='java/lang/IndexOutOfBoundsException' flags='1'/>
<method id='911' holder='908' name='&lt;init&gt;' return='791' arguments='797' flags='1' bytes='6' iicount='1'/>
<call method='911' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.264'/>
</parse>
<bc code='182' bci='7'/>
<method id='912' holder='903' name='elementData' return='796' arguments='789' flags='0' bytes='7' iicount='224'/>
<call method='912' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='903'/>
<parse method='912'>
<parse_done stamp='0.264'/>
</parse>
<parse_done stamp='0.264'/>
</parse>
<bc code='183' bci='84'/>
<method id='916' holder='899' name='getLoader' return='900' arguments='789' flags='34' bytes='243' iicount='261'/>
<call method='916' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.264'/>
</parse>
<phase name='optimize_blocks' stamp='0.264'>
<phase_done name='optimize_blocks' stamp='0.264'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.264'>
<phase_done name='rangeCheckElimination' stamp='0.264'/>
</phase>
<phase name='optimize_null_checks' stamp='0.264'>
<phase_done name='optimize_null_checks' stamp='0.264'/>
</phase>
<phase_done name='buildIR' stamp='0.264'/>
</phase>
<phase name='emit_lir' stamp='0.264'>
<phase name='lirGeneration' stamp='0.264'>
<phase_done name='lirGeneration' stamp='0.264'/>
</phase>
<phase name='linearScan' stamp='0.264'>
<phase_done name='linearScan' stamp='0.264'/>
</phase>
<phase_done name='emit_lir' stamp='0.264'/>
</phase>
<phase name='codeemit' stamp='0.264'>
<phase_done name='codeemit' stamp='0.264'/>
</phase>
<phase name='codeinstall' stamp='0.264'>
<dependency type='leaf_type' ctxk='903'/>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.267'/>
</phase>
<code_cache total_blobs='306' nmethods='65' adapters='171' free_code_cache='334316416'/>
<task_done success='1' nmsize='2600' count='280' inlined_bytes='40' stamp='0.267'/>
</task>
<task compile_id='71' method='sun/misc/URLClassPath getLoader (I)Lsun/misc/URLClassPath$Loader;' bytes='243' count='280' backedge_count='17' iicount='280' level='3' stamp='0.267'>
<phase name='buildIR' stamp='0.267'>
<klass id='900' name='sun/misc/URLClassPath$Loader' flags='10'/>
<type id='789' name='int'/>
<klass id='899' name='sun/misc/URLClassPath' flags='1'/>
<method id='901' holder='899' name='getLoader' return='900' arguments='789' flags='34' bytes='243' iicount='280'/>
<parse method='901'  stamp='0.267'>
<bc code='182' bci='13'/>
<klass id='903' name='java/util/ArrayList' flags='1'/>
<method id='906' holder='903' name='size' return='789' flags='1' bytes='5' compile_id='47' compiler='C1' level='1' iicount='140'/>
<call method='906' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='903'/>
<parse method='906'>
<parse_done stamp='0.267'/>
</parse>
<bc code='182' bci='33'/>
<type id='783' name='boolean'/>
<klass id='904' name='java/util/Stack' flags='1'/>
<method id='908' holder='904' name='empty' return='783' flags='1' bytes='13' iicount='58'/>
<call method='908' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='904'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='904'/>
<parse method='908'>
<bc code='182' bci='1'/>
<klass id='910' name='java/util/Vector' flags='1'/>
<method id='911' holder='910' name='size' return='789' flags='33' bytes='5' compile_id='61' compiler='C1' level='1' iicount='130'/>
<call method='911' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='904'/>
<inline_success reason='receiver is statically known'/>
<parse method='911'>
<parse_done stamp='0.267'/>
</parse>
<parse_done stamp='0.267'/>
</parse>
<bc code='182' bci='47'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='913' holder='904' name='pop' return='796' flags='33' bytes='19' iicount='20'/>
<call method='913' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='904'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='904'/>
<parse method='913'>
<bc code='182' bci='1'/>
<call method='911' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='904'/>
<inline_success reason='receiver is statically known'/>
<parse method='911'>
<parse_done stamp='0.267'/>
</parse>
<bc code='182' bci='6'/>
<method id='915' holder='904' name='peek' return='796' flags='33' bytes='25' iicount='22'/>
<call method='915' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='904'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='904'/>
<parse method='915'>
<bc code='182' bci='1'/>
<call method='911' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='904'/>
<inline_success reason='receiver is statically known'/>
<parse method='911'>
<parse_done stamp='0.267'/>
</parse>
<bc code='183' bci='13'/>
<type id='791' name='void'/>
<klass id='917' name='java/util/EmptyStackException' unloaded='1'/>
<method id='918' holder='917' name='&lt;init&gt;' return='791' unloaded='1'/>
<call method='918' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='21'/>
<method id='919' holder='910' name='elementAt' return='796' arguments='789' flags='33' bytes='48' iicount='71'/>
<call method='919' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='904'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.267'/>
</parse>
<bc code='182' bci='14'/>
<method id='921' holder='910' name='removeElementAt' return='791' arguments='789' flags='33' bytes='115' iicount='20'/>
<call method='921' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='904'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.267'/>
</parse>
<bc code='184' bci='67'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='868' name='java/net/URL' flags='17'/>
<klass id='923' name='sun/net/util/URLUtil' flags='1'/>
<method id='924' holder='923' name='urlNoFragString' return='797' arguments='868' flags='9' bytes='114' iicount='17'/>
<call method='924' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='76'/>
<klass id='926' name='java/util/HashMap' flags='1'/>
<method id='927' holder='926' name='containsKey' return='783' arguments='796' flags='1' bytes='18' iicount='17'/>
<call method='927' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='926' x='927'/>
<inline_success reason='receiver is statically known'/>
<parse method='927'>
<bc code='184' bci='2'/>
<method id='929' holder='926' name='hash' return='789' arguments='796' flags='24' bytes='20' compile_id='43' compiler='C1' level='3' iicount='384'/>
<call method='929' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='929'>
<bc code='182' bci='9'/>
<method id='931' holder='796' name='hashCode' return='789' flags='257' bytes='0' iicount='169'/>
<call method='931' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.267'/>
</parse>
<bc code='182' bci='6'/>
<klass id='934' name='java/util/HashMap$Node' flags='8'/>
<method id='935' holder='926' name='getNode' return='934' arguments='789 796' flags='16' bytes='148' iicount='248'/>
<call method='935' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.267'/>
</parse>
<bc code='183' bci='87'/>
<method id='937' holder='899' name='getLoader' return='900' arguments='868' flags='2' bytes='29' iicount='17'/>
<call method='937' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<parse method='937'>
<bc code='183' bci='6'/>
<klass id='939' name='sun/misc/URLClassPath$3' flags='0'/>
<method id='940' holder='939' name='&lt;init&gt;' return='791' arguments='899 868' flags='0' bytes='15' iicount='17'/>
<call method='940' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='940'>
<bc code='183' bci='11'/>
<method id='942' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='329035'/>
<call method='942' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='942'>
<parse_done stamp='0.267'/>
</parse>
<parse_done stamp='0.267'/>
</parse>
<bc code='184' bci='13'/>
<klass id='945' name='java/security/PrivilegedExceptionAction' flags='1537'/>
<klass id='810' name='java/security/AccessControlContext' flags='17'/>
<klass id='944' name='java/security/AccessController' flags='17'/>
<method id='946' holder='944' name='doPrivileged' return='796' arguments='945 810' flags='265' bytes='0' iicount='108'/>
<call method='946' instr='invokestatic'/>
<inline_fail reason='native method'/>
<bc code='182' bci='22'/>
<klass id='806' name='java/lang/Exception' flags='1'/>
<klass id='947' name='java/security/PrivilegedActionException' unloaded='1'/>
<method id='948' holder='947' name='getException' return='806' unloaded='1'/>
<call method='948' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.268'/>
</parse>
<bc code='182' bci='94'/>
<klass id='950' name='[Ljava/net/URL;' flags='1041'/>
<method id='951' holder='900' name='getClassPath' return='950' flags='0' bytes='2' iicount='2'/>
<call method='951' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='107'/>
<method id='952' holder='899' name='push' return='791' arguments='950' flags='2' bytes='46' iicount='4'/>
<call method='952' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='169'/>
<call method='906' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='903'/>
<parse method='906'>
<parse_done stamp='0.268'/>
</parse>
<bc code='183' bci='173'/>
<method id='955' holder='899' name='validateLookupCache' return='791' arguments='789 797' flags='34' bytes='80' iicount='17'/>
<call method='955' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='182'/>
<method id='957' holder='903' name='add' return='783' arguments='796' flags='1' bytes='29' iicount='71'/>
<call method='957' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='903'/>
<parse method='957'>
<bc code='183' bci='7'/>
<method id='959' holder='903' name='ensureCapacityInternal' return='791' arguments='789' flags='2' bytes='23' iicount='71'/>
<call method='959' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<parse method='959'>
<bc code='184' bci='13'/>
<klass id='964' name='java/lang/Math' flags='17'/>
<method id='965' holder='964' name='max' return='789' arguments='789 789' flags='9' bytes='11' iicount='40'/>
<call method='965' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='965'>
<parse_done stamp='0.268'/>
</parse>
<bc code='183' bci='19'/>
<method id='967' holder='903' name='ensureExplicitCapacity' return='791' arguments='789' flags='2' bytes='26' iicount='71'/>
<call method='967' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<parse method='967'>
<bc code='183' bci='22'/>
<method id='970' holder='903' name='grow' return='791' arguments='789' flags='2' bytes='45' iicount='14'/>
<call method='970' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.268'/>
</parse>
<parse_done stamp='0.268'/>
</parse>
<parse_done stamp='0.268'/>
</parse>
<bc code='182' bci='193'/>
<method id='972' holder='926' name='put' return='796' arguments='796 796' flags='1' bytes='13' iicount='136'/>
<call method='972' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='926' x='972'/>
<inline_success reason='receiver is statically known'/>
<parse method='972'>
<bc code='184' bci='2'/>
<call method='929' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='929'>
<bc code='182' bci='9'/>
<call method='931' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.268'/>
</parse>
<bc code='182' bci='9'/>
<method id='974' holder='926' name='putVal' return='796' arguments='789 796 796 783 783' flags='16' bytes='300' iicount='136'/>
<call method='974' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.268'/>
</parse>
<bc code='182' bci='236'/>
<method id='976' holder='903' name='get' return='796' arguments='789' flags='1' bytes='11' iicount='252'/>
<call method='976' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='903'/>
<parse method='976'>
<bc code='183' bci='2'/>
<method id='978' holder='903' name='rangeCheck' return='791' arguments='789' flags='2' bytes='22' iicount='253'/>
<call method='978' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<parse method='978'>
<bc code='183' bci='14'/>
<method id='981' holder='903' name='outOfBoundsMsg' return='797' arguments='789' flags='2' bytes='32' iicount='1'/>
<call method='981' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='17'/>
<klass id='980' name='java/lang/IndexOutOfBoundsException' flags='1'/>
<method id='983' holder='980' name='&lt;init&gt;' return='791' arguments='797' flags='1' bytes='6' iicount='1'/>
<call method='983' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.268'/>
</parse>
<bc code='182' bci='7'/>
<method id='984' holder='903' name='elementData' return='796' arguments='789' flags='0' bytes='7' iicount='258'/>
<call method='984' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='903'/>
<parse method='984'>
<parse_done stamp='0.268'/>
</parse>
<parse_done stamp='0.268'/>
</parse>
<parse_done stamp='0.268'/>
</parse>
<phase name='optimize_blocks' stamp='0.268'>
<phase_done name='optimize_blocks' stamp='0.268'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.268'>
<phase_done name='rangeCheckElimination' stamp='0.268'/>
</phase>
<phase name='optimize_null_checks' stamp='0.268'>
<phase_done name='optimize_null_checks' stamp='0.268'/>
</phase>
<phase_done name='buildIR' stamp='0.268'/>
</phase>
<phase name='emit_lir' stamp='0.268'>
<phase name='lirGeneration' stamp='0.268'>
<phase_done name='lirGeneration' stamp='0.268'/>
</phase>
<phase name='linearScan' stamp='0.268'>
<phase_done name='linearScan' stamp='0.269'/>
</phase>
<phase_done name='emit_lir' stamp='0.269'/>
</phase>
<phase name='codeemit' stamp='0.269'>
<phase_done name='codeemit' stamp='0.269'/>
</phase>
<phase name='codeinstall' stamp='0.269'>
<dependency type='leaf_type' ctxk='903'/>
<dependency type='leaf_type' ctxk='904'/>
<dependency type='leaf_type' ctxk='899'/>
<dependency type='unique_concrete_method' ctxk='926' x='927'/>
<dependency type='unique_concrete_method' ctxk='926' x='972'/>
<phase_done name='codeinstall' stamp='0.308'/>
</phase>
<code_cache total_blobs='308' nmethods='67' adapters='171' free_code_cache='334291584'/>
<task_done success='1' nmsize='16088' count='320' backedge_count='17' inlined_bytes='327' stamp='0.308'/>
</task>
<task compile_id='75' method='java/util/concurrent/ConcurrentHashMap setTabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V' bytes='19' count='426' iicount='426' level='3' stamp='0.308'>
<phase name='buildIR' stamp='0.308'>
<type id='791' name='void'/>
<klass id='901' name='[Ljava/util/concurrent/ConcurrentHashMap$Node;' flags='1040'/>
<type id='789' name='int'/>
<klass id='900' name='java/util/concurrent/ConcurrentHashMap$Node' flags='8'/>
<klass id='899' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='902' holder='899' name='setTabAt' return='791' arguments='901 789 900' flags='24' bytes='19' iicount='426'/>
<parse method='902'  stamp='0.308'>
<bc code='182' bci='15'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<type id='790' name='long'/>
<klass id='863' name='sun/misc/Unsafe' flags='17'/>
<method id='906' holder='863' name='putObjectVolatile' return='791' arguments='796 790 796' flags='257' bytes='0' compile_id='76' compile_kind='c2n' level='0' iicount='384'/>
<call method='906' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.308'/>
</parse>
<phase name='optimize_blocks' stamp='0.308'>
<phase_done name='optimize_blocks' stamp='0.308'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.308'>
<phase_done name='rangeCheckElimination' stamp='0.308'/>
</phase>
<phase name='optimize_null_checks' stamp='0.308'>
<phase_done name='optimize_null_checks' stamp='0.308'/>
</phase>
<phase_done name='buildIR' stamp='0.308'/>
</phase>
<phase name='emit_lir' stamp='0.308'>
<phase name='lirGeneration' stamp='0.308'>
<phase_done name='lirGeneration' stamp='0.308'/>
</phase>
<phase name='linearScan' stamp='0.308'>
<phase_done name='linearScan' stamp='0.308'/>
</phase>
<phase_done name='emit_lir' stamp='0.308'/>
</phase>
<phase name='codeemit' stamp='0.308'>
<phase_done name='codeemit' stamp='0.308'/>
</phase>
<phase name='codeinstall' stamp='0.308'>
<phase_done name='codeinstall' stamp='0.329'/>
</phase>
<code_cache total_blobs='309' nmethods='68' adapters='171' free_code_cache='334290688'/>
<task_done success='1' nmsize='368' count='426' stamp='0.329'/>
</task>
<task compile_id='72' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='431' iicount='431' level='3' stamp='0.329'>
<phase name='buildIR' stamp='0.329'>
<type id='789' name='int'/>
<klass id='899' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='900' holder='899' name='toLowerCase' return='789' arguments='789' flags='0' bytes='39' iicount='431'/>
<parse method='900'  stamp='0.329'>
<bc code='182' bci='4'/>
<method id='902' holder='899' name='getProperties' return='789' arguments='789' flags='0' bytes='11' compile_id='35' compiler='C1' level='3' iicount='3324'/>
<call method='902' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='899'/>
<parse method='902'>
<parse_done stamp='0.329'/>
</parse>
<parse_done stamp='0.329'/>
</parse>
<phase name='optimize_blocks' stamp='0.329'>
<phase_done name='optimize_blocks' stamp='0.329'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.329'>
<phase_done name='rangeCheckElimination' stamp='0.329'/>
</phase>
<phase name='optimize_null_checks' stamp='0.329'>
<phase_done name='optimize_null_checks' stamp='0.329'/>
</phase>
<phase_done name='buildIR' stamp='0.329'/>
</phase>
<phase name='emit_lir' stamp='0.329'>
<phase name='lirGeneration' stamp='0.329'>
<phase_done name='lirGeneration' stamp='0.329'/>
</phase>
<phase name='linearScan' stamp='0.329'>
<phase_done name='linearScan' stamp='0.329'/>
</phase>
<phase_done name='emit_lir' stamp='0.329'/>
</phase>
<phase name='codeemit' stamp='0.329'>
<phase_done name='codeemit' stamp='0.329'/>
</phase>
<phase name='codeinstall' stamp='0.329'>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.330'/>
</phase>
<code_cache total_blobs='310' nmethods='69' adapters='171' free_code_cache='334289216'/>
<task_done success='1' nmsize='656' count='435' inlined_bytes='11' stamp='0.330'/>
</task>
<task compile_id='73' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='335' iicount='335' level='3' stamp='0.330'>
<phase name='buildIR' stamp='0.330'>
<type id='791' name='void'/>
<type id='789' name='int'/>
<klass id='860' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='899' holder='860' name='&lt;init&gt;' return='791' arguments='789' flags='0' bytes='12' iicount='335'/>
<parse method='899'  stamp='0.330'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='901' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='477271'/>
<call method='901' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='860'/>
<parse_done stamp='0.330'/>
</parse>
<parse_done stamp='0.330'/>
</parse>
<phase name='optimize_blocks' stamp='0.330'>
<phase_done name='optimize_blocks' stamp='0.330'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.330'>
<phase_done name='rangeCheckElimination' stamp='0.330'/>
</phase>
<phase name='optimize_null_checks' stamp='0.330'>
<phase_done name='optimize_null_checks' stamp='0.330'/>
</phase>
<phase_done name='buildIR' stamp='0.330'/>
</phase>
<phase name='emit_lir' stamp='0.330'>
<phase name='lirGeneration' stamp='0.330'>
<phase_done name='lirGeneration' stamp='0.330'/>
</phase>
<phase name='linearScan' stamp='0.330'>
<phase_done name='linearScan' stamp='0.330'/>
</phase>
<phase_done name='emit_lir' stamp='0.330'/>
</phase>
<phase name='codeemit' stamp='0.330'>
<phase_done name='codeemit' stamp='0.330'/>
</phase>
<phase name='codeinstall' stamp='0.330'>
<dependency type='no_finalizable_subclasses' ctxk='860'/>
<phase_done name='codeinstall' stamp='0.331'/>
</phase>
<code_cache total_blobs='311' nmethods='70' adapters='171' free_code_cache='334288000'/>
<task_done success='1' nmsize='592' count='337' inlined_bytes='1' stamp='0.331'/>
</task>
<task compile_id='77' method='java/util/zip/ZipFile ensureOpen ()V' bytes='37' count='384' iicount='384' level='3' stamp='0.331'>
<phase name='buildIR' stamp='0.331'>
<type id='791' name='void'/>
<klass id='899' name='java/util/zip/ZipFile' flags='1'/>
<method id='900' holder='899' name='ensureOpen' return='791' flags='2' bytes='37' iicount='384'/>
<parse method='900'  stamp='0.331'>
<bc code='183' bci='13'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='902' name='java/lang/IllegalStateException' unloaded='1'/>
<method id='904' holder='902' name='&lt;init&gt;' return='791' arguments='797' unloaded='1'/>
<call method='904' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='32'/>
<call method='904' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.331'/>
</parse>
<phase name='optimize_blocks' stamp='0.331'>
<phase_done name='optimize_blocks' stamp='0.331'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.331'>
<phase_done name='rangeCheckElimination' stamp='0.331'/>
</phase>
<phase name='optimize_null_checks' stamp='0.331'>
<phase_done name='optimize_null_checks' stamp='0.331'/>
</phase>
<phase_done name='buildIR' stamp='0.331'/>
</phase>
<phase name='emit_lir' stamp='0.331'>
<phase name='lirGeneration' stamp='0.331'>
<phase_done name='lirGeneration' stamp='0.331'/>
</phase>
<phase name='linearScan' stamp='0.331'>
<phase_done name='linearScan' stamp='0.331'/>
</phase>
<phase_done name='emit_lir' stamp='0.331'/>
</phase>
<phase name='codeemit' stamp='0.331'>
<phase_done name='codeemit' stamp='0.331'/>
</phase>
<phase name='codeinstall' stamp='0.331'>
<phase_done name='codeinstall' stamp='0.334'/>
</phase>
<code_cache total_blobs='313' nmethods='72' adapters='171' free_code_cache='334285376'/>
<task_done success='1' nmsize='728' count='385' stamp='0.334'/>
</task>
<task compile_id='79' method='java/util/zip/ZipCoder encoder ()Ljava/nio/charset/CharsetEncoder;' bytes='35' count='385' iicount='385' level='3' stamp='0.334'>
<phase name='buildIR' stamp='0.334'>
<klass id='900' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<klass id='899' name='java/util/zip/ZipCoder' flags='16'/>
<method id='901' holder='899' name='encoder' return='900' flags='2' bytes='35' iicount='385'/>
<parse method='901'  stamp='0.334'>
<bc code='182' bci='12'/>
<klass id='903' name='java/nio/charset/Charset' flags='1025'/>
<method id='904' holder='903' name='newEncoder' return='900' flags='1025' bytes='0' iicount='1'/>
<call method='904' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='18'/>
<klass id='905' name='java/nio/charset/CodingErrorAction' flags='1'/>
<method id='908' holder='900' name='onMalformedInput' return='900' arguments='905' flags='17' bytes='26' iicount='12'/>
<call method='908' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='908'>
<bc code='182' bci='21'/>
<type id='791' name='void'/>
<method id='910' holder='900' name='implOnMalformedInput' return='791' arguments='905' flags='4' bytes='1' iicount='12'/>
<call method='910' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='900' x='910'/>
<inline_success reason='receiver is statically known'/>
<parse method='910'>
<parse_done stamp='0.334'/>
</parse>
<parse_done stamp='0.334'/>
</parse>
<bc code='182' bci='24'/>
<method id='912' holder='900' name='onUnmappableCharacter' return='900' arguments='905' flags='17' bytes='26' iicount='12'/>
<call method='912' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='912'>
<bc code='182' bci='21'/>
<method id='914' holder='900' name='implOnUnmappableCharacter' return='791' arguments='905' flags='4' bytes='1' iicount='12'/>
<call method='914' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='900' x='914'/>
<inline_success reason='receiver is statically known'/>
<parse method='914'>
<parse_done stamp='0.334'/>
</parse>
<parse_done stamp='0.334'/>
</parse>
<parse_done stamp='0.334'/>
</parse>
<phase name='optimize_blocks' stamp='0.334'>
<phase_done name='optimize_blocks' stamp='0.334'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.334'>
<phase_done name='rangeCheckElimination' stamp='0.334'/>
</phase>
<phase name='optimize_null_checks' stamp='0.334'>
<phase_done name='optimize_null_checks' stamp='0.334'/>
</phase>
<phase_done name='buildIR' stamp='0.334'/>
</phase>
<phase name='emit_lir' stamp='0.334'>
<phase name='lirGeneration' stamp='0.334'>
<phase_done name='lirGeneration' stamp='0.334'/>
</phase>
<phase name='linearScan' stamp='0.334'>
<phase_done name='linearScan' stamp='0.334'/>
</phase>
<phase_done name='emit_lir' stamp='0.334'/>
</phase>
<phase name='codeemit' stamp='0.334'>
<phase_done name='codeemit' stamp='0.334'/>
</phase>
<phase name='codeinstall' stamp='0.334'>
<dependency type='unique_concrete_method' ctxk='900' x='910'/>
<dependency type='unique_concrete_method' ctxk='900' x='914'/>
<phase_done name='codeinstall' stamp='0.337'/>
</phase>
<code_cache total_blobs='314' nmethods='73' adapters='171' free_code_cache='334281792'/>
<task_done success='1' nmsize='2472' count='407' inlined_bytes='54' stamp='0.337'/>
</task>
<task compile_id='78' method='java/util/zip/ZipCoder getBytes (Ljava/lang/String;)[B' bytes='192' count='407' iicount='407' level='3' stamp='0.337'>
<phase name='buildIR' stamp='0.337'>
<klass id='891' name='[B' flags='1041'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='899' name='java/util/zip/ZipCoder' flags='16'/>
<method id='900' holder='899' name='getBytes' return='891' arguments='797' flags='0' bytes='192' iicount='407'/>
<parse method='900'  stamp='0.337'>
<bc code='183' bci='1'/>
<klass id='902' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<method id='903' holder='899' name='encoder' return='902' flags='2' bytes='35' compile_id='79' compiler='C1' level='3' iicount='407'/>
<call method='903' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<bc code='182' bci='12'/>
<klass id='905' name='java/nio/charset/Charset' flags='1025'/>
<method id='906' holder='905' name='newEncoder' return='902' flags='1025' bytes='0' iicount='1'/>
<call method='906' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='18'/>
<klass id='907' name='java/nio/charset/CodingErrorAction' flags='1'/>
<method id='910' holder='902' name='onMalformedInput' return='902' arguments='907' flags='17' bytes='26' iicount='12'/>
<call method='910' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='910'>
<bc code='182' bci='21'/>
<type id='791' name='void'/>
<method id='912' holder='902' name='implOnMalformedInput' return='791' arguments='907' flags='4' bytes='1' iicount='12'/>
<call method='912' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='902' x='912'/>
<inline_success reason='receiver is statically known'/>
<parse method='912'>
<parse_done stamp='0.337'/>
</parse>
<parse_done stamp='0.337'/>
</parse>
<bc code='182' bci='24'/>
<method id='914' holder='902' name='onUnmappableCharacter' return='902' arguments='907' flags='17' bytes='26' iicount='12'/>
<call method='914' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='914'>
<bc code='182' bci='21'/>
<method id='916' holder='902' name='implOnUnmappableCharacter' return='791' arguments='907' flags='4' bytes='1' iicount='12'/>
<call method='916' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='902' x='916'/>
<inline_success reason='receiver is statically known'/>
<parse method='916'>
<parse_done stamp='0.337'/>
</parse>
<parse_done stamp='0.337'/>
</parse>
<parse_done stamp='0.337'/>
</parse>
<bc code='182' bci='4'/>
<method id='918' holder='902' name='reset' return='902' flags='17' bytes='11' compile_id='67' compiler='C1' level='3' iicount='426'/>
<call method='918' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='918'>
<bc code='182' bci='1'/>
<method id='921' holder='902' name='implReset' return='791' flags='4' bytes='1' compile_id='68' compiler='C1' level='3' iicount='426'/>
<call method='921' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='902' x='921'/>
<inline_success reason='receiver is statically known'/>
<parse method='921'>
<parse_done stamp='0.337'/>
</parse>
<parse_done stamp='0.337'/>
</parse>
<bc code='182' bci='9'/>
<klass id='888' name='[C' flags='1041'/>
<method id='923' holder='797' name='toCharArray' return='888' flags='1' bytes='25' compile_id='59' compiler='C1' level='3' iicount='503'/>
<call method='923' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='923'>
<bc code='184' bci='20'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<type id='789' name='int'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='925' holder='802' name='arraycopy' return='791' arguments='796 789 796 789 789' flags='265' bytes='0' compile_id='8' compile_kind='c2n' level='0' iicount='640'/>
<call method='925' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.337'/>
</parse>
<bc code='182' bci='17'/>
<type id='785' name='float'/>
<method id='927' holder='902' name='maxBytesPerChar' return='785' flags='17' bytes='5' compile_id='53' compiler='C1' level='3' iicount='520'/>
<call method='927' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='927'>
<parse_done stamp='0.337'/>
</parse>
<bc code='185' bci='62'/>
<klass id='929' name='sun/nio/cs/ArrayEncoder' flags='1537'/>
<method id='930' holder='929' name='encode' return='789' arguments='888 789 789 891' flags='1025' bytes='0' iicount='1'/>
<call method='930' instr='invokeinterface'/>
<klass id='920' name='sun/nio/cs/UTF_8$Encoder' flags='26'/>
<method id='931' holder='920' name='encode' return='789' arguments='888 789 789 891' flags='1' bytes='359' compile_id='44' compiler='C1' level='3' iicount='514'/>
<dependency type='unique_concrete_method' ctxk='929' x='931'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='81'/>
<klass id='933' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='935' holder='933' name='&lt;init&gt;' return='791' arguments='797' flags='1' bytes='6' iicount='1'/>
<call method='935' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='89'/>
<klass id='937' name='java/util/Arrays' flags='1'/>
<method id='938' holder='937' name='copyOf' return='891' arguments='891 789' flags='9' bytes='19' compile_id='51' compiler='C1' level='3' iicount='652'/>
<call method='938' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='938'>
<bc code='184' bci='11'/>
<klass id='940' name='java/lang/Math' flags='17'/>
<method id='941' holder='940' name='min' return='789' arguments='789 789' flags='9' bytes='11' compile_id='7' compiler='C1' level='3' iicount='3347'/>
<call method='941' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='941'>
<parse_done stamp='0.337'/>
</parse>
<bc code='184' bci='14'/>
<call method='925' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.337'/>
</parse>
<bc code='184' bci='95'/>
<klass id='943' name='java/nio/ByteBuffer' flags='1025'/>
<method id='944' holder='943' name='wrap' return='943' arguments='891' flags='9' bytes='8' iicount='13'/>
<call method='944' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='944'>
<bc code='184' bci='4'/>
<method id='946' holder='943' name='wrap' return='943' arguments='891 789 789' flags='9' bytes='20' iicount='13'/>
<call method='946' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='946'>
<bc code='183' bci='7'/>
<klass id='948' name='java/nio/HeapByteBuffer' flags='0'/>
<method id='949' holder='948' name='&lt;init&gt;' return='791' arguments='891 789 789' flags='0' bytes='14' iicount='13'/>
<call method='949' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='949'>
<bc code='183' bci='10'/>
<method id='951' holder='943' name='&lt;init&gt;' return='791' arguments='789 789 789 789 891 789' flags='0' bytes='45' iicount='23'/>
<call method='951' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.337'/>
</parse>
<bc code='183' bci='16'/>
<klass id='953' name='java/lang/IndexOutOfBoundsException' flags='1'/>
<method id='954' holder='953' name='&lt;init&gt;' return='791' flags='1' bytes='5' iicount='1'/>
<call method='954' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.337'/>
</parse>
<parse_done stamp='0.337'/>
</parse>
<bc code='184' bci='101'/>
<klass id='955' name='java/nio/CharBuffer' flags='1025'/>
<method id='956' holder='955' name='wrap' return='955' arguments='888' flags='9' bytes='8' iicount='11'/>
<call method='956' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='956'>
<bc code='184' bci='4'/>
<method id='958' holder='955' name='wrap' return='955' arguments='888 789 789' flags='9' bytes='20' iicount='13'/>
<call method='958' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='958'>
<bc code='183' bci='7'/>
<klass id='960' name='java/nio/HeapCharBuffer' flags='0'/>
<method id='961' holder='960' name='&lt;init&gt;' return='791' arguments='888 789 789' flags='0' bytes='14' iicount='13'/>
<call method='961' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='961'>
<bc code='183' bci='10'/>
<method id='963' holder='955' name='&lt;init&gt;' return='791' arguments='789 789 789 789 888 789' flags='0' bytes='22' iicount='13'/>
<call method='963' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='963'>
<bc code='183' bci='6'/>
<klass id='875' name='java/nio/Buffer' flags='1025'/>
<method id='965' holder='875' name='&lt;init&gt;' return='791' arguments='789 789 789 789' flags='0' bytes='121' iicount='42'/>
<call method='965' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.337'/>
</parse>
<parse_done stamp='0.337'/>
</parse>
<bc code='183' bci='16'/>
<call method='954' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.337'/>
</parse>
<parse_done stamp='0.337'/>
</parse>
<bc code='182' bci='112'/>
<klass id='967' name='java/nio/charset/CoderResult' flags='1'/>
<type id='783' name='boolean'/>
<method id='968' holder='902' name='encode' return='967' arguments='955 943 783' flags='17' bytes='285' iicount='11'/>
<call method='968' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='119'/>
<method id='970' holder='967' name='isUnderflow' return='783' flags='1' bytes='13' iicount='50'/>
<call method='970' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='967'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='967'/>
<parse method='970'>
<parse_done stamp='0.337'/>
</parse>
<bc code='182' bci='131'/>
<method id='972' holder='967' name='toString' return='797' flags='1' bytes='52' iicount='1'/>
<call method='972' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='967'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='967'/>
<bc code='183' bci='134'/>
<call method='935' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='182' bci='141'/>
<method id='974' holder='902' name='flush' return='967' arguments='943' flags='17' bytes='49' iicount='11'/>
<call method='974' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='148'/>
<call method='970' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='967'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='967'/>
<parse method='970'>
<parse_done stamp='0.337'/>
</parse>
<bc code='182' bci='160'/>
<call method='972' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='967'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='967'/>
<bc code='183' bci='163'/>
<call method='935' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='182' bci='169'/>
<method id='976' holder='875' name='position' return='789' flags='17' bytes='5' iicount='63'/>
<call method='976' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='976'>
<parse_done stamp='0.337'/>
</parse>
<bc code='182' bci='185'/>
<call method='976' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='976'>
<parse_done stamp='0.337'/>
</parse>
<bc code='184' bci='188'/>
<call method='938' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='938'>
<bc code='184' bci='11'/>
<call method='941' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='941'>
<parse_done stamp='0.337'/>
</parse>
<bc code='184' bci='14'/>
<call method='925' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.337'/>
</parse>
<parse_done stamp='0.337'/>
</parse>
<phase name='optimize_blocks' stamp='0.337'>
<phase_done name='optimize_blocks' stamp='0.337'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.337'>
<phase_done name='rangeCheckElimination' stamp='0.337'/>
</phase>
<phase name='optimize_null_checks' stamp='0.337'>
<phase_done name='optimize_null_checks' stamp='0.337'/>
</phase>
<phase_done name='buildIR' stamp='0.337'/>
</phase>
<phase name='emit_lir' stamp='0.337'>
<phase name='lirGeneration' stamp='0.337'>
<phase_done name='lirGeneration' stamp='0.337'/>
</phase>
<phase name='linearScan' stamp='0.337'>
<phase_done name='linearScan' stamp='0.338'/>
</phase>
<phase_done name='emit_lir' stamp='0.338'/>
</phase>
<phase name='codeemit' stamp='0.338'>
<phase_done name='codeemit' stamp='0.338'/>
</phase>
<phase name='codeinstall' stamp='0.338'>
<dependency type='leaf_type' ctxk='967'/>
<dependency type='unique_concrete_method' ctxk='902' x='912'/>
<dependency type='unique_concrete_method' ctxk='902' x='916'/>
<dependency type='unique_concrete_method' ctxk='902' x='921'/>
<dependency type='unique_concrete_method' ctxk='929' x='931'/>
<phase_done name='codeinstall' stamp='0.353'/>
</phase>
<code_cache total_blobs='315' nmethods='74' adapters='171' free_code_cache='334265920'/>
<task_done success='1' nmsize='9912' count='463' inlined_bytes='333' stamp='0.353'/>
</task>
<task compile_id='82' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='172' backedge_count='5526' iicount='172' level='3' stamp='0.353'>
<phase name='buildIR' stamp='0.353'>
<klass id='797' name='java/lang/String' flags='17'/>
<type id='784' name='char'/>
<method id='899' holder='797' name='replace' return='797' arguments='784 784' flags='1' bytes='127' iicount='172'/>
<parse method='899'  stamp='0.353'>
<bc code='183' bci='121'/>
<type id='791' name='void'/>
<klass id='888' name='[C' flags='1041'/>
<type id='783' name='boolean'/>
<method id='901' holder='797' name='&lt;init&gt;' return='791' arguments='888 783' flags='0' bytes='10' iicount='371'/>
<call method='901' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='903' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='529872'/>
<call method='903' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<parse_done stamp='0.354'/>
</parse>
<parse_done stamp='0.354'/>
</parse>
<parse_done stamp='0.354'/>
</parse>
<phase name='optimize_blocks' stamp='0.354'>
<phase_done name='optimize_blocks' stamp='0.354'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.354'>
<phase_done name='rangeCheckElimination' stamp='0.354'/>
</phase>
<phase name='optimize_null_checks' stamp='0.354'>
<phase_done name='optimize_null_checks' stamp='0.354'/>
</phase>
<phase_done name='buildIR' stamp='0.354'/>
</phase>
<phase name='emit_lir' stamp='0.354'>
<phase name='lirGeneration' stamp='0.354'>
<phase_done name='lirGeneration' stamp='0.354'/>
</phase>
<phase name='linearScan' stamp='0.354'>
<phase_done name='linearScan' stamp='0.354'/>
</phase>
<phase_done name='emit_lir' stamp='0.354'/>
</phase>
<phase name='codeemit' stamp='0.354'>
<phase_done name='codeemit' stamp='0.354'/>
</phase>
<phase name='codeinstall' stamp='0.354'>
<phase_done name='codeinstall' stamp='0.356'/>
</phase>
<code_cache total_blobs='316' nmethods='75' adapters='171' free_code_cache='334262464'/>
<task_done success='1' nmsize='1712' count='174' backedge_count='5598' inlined_bytes='11' stamp='0.356'/>
</task>
<task compile_id='84' method='java/util/jar/JarFile getJarEntry (Ljava/lang/String;)Ljava/util/jar/JarEntry;' bytes='9' count='409' iicount='409' level='3' stamp='0.357'>
<phase name='buildIR' stamp='0.357'>
<klass id='900' name='java/util/jar/JarEntry' flags='1'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='899' name='java/util/jar/JarFile' flags='1'/>
<method id='901' holder='899' name='getJarEntry' return='900' arguments='797' flags='1' bytes='9' iicount='409'/>
<parse method='901'  stamp='0.357'>
<bc code='182' bci='2'/>
<klass id='903' name='java/util/zip/ZipEntry' flags='1'/>
<method id='904' holder='899' name='getEntry' return='903' arguments='797' flags='1' bytes='22' iicount='412'/>
<call method='904' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='899'/>
<parse method='904'>
<bc code='183' bci='2'/>
<klass id='906' name='java/util/zip/ZipFile' flags='1'/>
<method id='907' holder='906' name='getEntry' return='903' arguments='797' flags='1' bytes='86' iicount='414'/>
<call method='907' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='16'/>
<type id='791' name='void'/>
<klass id='909' name='java/util/jar/JarFile$JarFileEntry' flags='2'/>
<method id='910' holder='909' name='&lt;init&gt;' return='791' arguments='899 903' flags='0' bytes='11' iicount='62'/>
<call method='910' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='910'>
<bc code='183' bci='7'/>
<method id='912' holder='900' name='&lt;init&gt;' return='791' arguments='903' flags='1' bytes='6' iicount='62'/>
<call method='912' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='912'>
<bc code='183' bci='2'/>
<method id='914' holder='903' name='&lt;init&gt;' return='791' arguments='903' flags='1' bytes='146' iicount='62'/>
<call method='914' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.357'/>
</parse>
<parse_done stamp='0.357'/>
</parse>
<parse_done stamp='0.357'/>
</parse>
<parse_done stamp='0.357'/>
</parse>
<phase name='optimize_blocks' stamp='0.357'>
<phase_done name='optimize_blocks' stamp='0.357'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.357'>
<phase_done name='rangeCheckElimination' stamp='0.357'/>
</phase>
<phase name='optimize_null_checks' stamp='0.357'>
<phase_done name='optimize_null_checks' stamp='0.357'/>
</phase>
<phase_done name='buildIR' stamp='0.357'/>
</phase>
<phase name='emit_lir' stamp='0.357'>
<phase name='lirGeneration' stamp='0.357'>
<phase_done name='lirGeneration' stamp='0.357'/>
</phase>
<phase name='linearScan' stamp='0.357'>
<phase_done name='linearScan' stamp='0.357'/>
</phase>
<phase_done name='emit_lir' stamp='0.357'/>
</phase>
<phase name='codeemit' stamp='0.357'>
<phase_done name='codeemit' stamp='0.357'/>
</phase>
<phase name='codeinstall' stamp='0.357'>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.358'/>
</phase>
<code_cache total_blobs='317' nmethods='76' adapters='171' free_code_cache='334259904'/>
<task_done success='1' nmsize='1560' count='421' inlined_bytes='39' stamp='0.358'/>
</task>
<task compile_id='74' method='java/net/URL getQuery ()Ljava/lang/String;' bytes='5' count='174' iicount='174' level='1' stamp='0.358'>
<phase name='buildIR' stamp='0.358'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='868' name='java/net/URL' flags='17'/>
<method id='899' holder='868' name='getQuery' return='797' flags='1' bytes='5' iicount='174'/>
<parse method='899'  stamp='0.358'>
<parse_done stamp='0.358'/>
</parse>
<phase name='optimize_blocks' stamp='0.358'>
<phase_done name='optimize_blocks' stamp='0.358'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.358'>
<phase_done name='rangeCheckElimination' stamp='0.358'/>
</phase>
<phase name='optimize_null_checks' stamp='0.358'>
<phase_done name='optimize_null_checks' stamp='0.358'/>
</phase>
<phase_done name='buildIR' stamp='0.358'/>
</phase>
<phase name='emit_lir' stamp='0.358'>
<phase name='lirGeneration' stamp='0.358'>
<phase_done name='lirGeneration' stamp='0.358'/>
</phase>
<phase name='linearScan' stamp='0.358'>
<phase_done name='linearScan' stamp='0.358'/>
</phase>
<phase_done name='emit_lir' stamp='0.358'/>
</phase>
<phase name='codeemit' stamp='0.358'>
<phase_done name='codeemit' stamp='0.358'/>
</phase>
<phase name='codeinstall' stamp='0.358'>
<phase_done name='codeinstall' stamp='0.359'/>
</phase>
<code_cache total_blobs='318' nmethods='77' adapters='171' free_code_cache='334259136'/>
<task_done success='1' nmsize='272' count='174' stamp='0.359'/>
</task>
<task compile_id='81' method='java/net/URL getPort ()I' bytes='5' count='157' iicount='157' level='1' stamp='0.359'>
<phase name='buildIR' stamp='0.359'>
<type id='789' name='int'/>
<klass id='868' name='java/net/URL' flags='17'/>
<method id='899' holder='868' name='getPort' return='789' flags='1' bytes='5' iicount='157'/>
<parse method='899'  stamp='0.359'>
<parse_done stamp='0.359'/>
</parse>
<phase name='optimize_blocks' stamp='0.359'>
<phase_done name='optimize_blocks' stamp='0.359'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.359'>
<phase_done name='rangeCheckElimination' stamp='0.359'/>
</phase>
<phase name='optimize_null_checks' stamp='0.359'>
<phase_done name='optimize_null_checks' stamp='0.359'/>
</phase>
<phase_done name='buildIR' stamp='0.359'/>
</phase>
<phase name='emit_lir' stamp='0.359'>
<phase name='lirGeneration' stamp='0.359'>
<phase_done name='lirGeneration' stamp='0.359'/>
</phase>
<phase name='linearScan' stamp='0.359'>
<phase_done name='linearScan' stamp='0.359'/>
</phase>
<phase_done name='emit_lir' stamp='0.359'/>
</phase>
<phase name='codeemit' stamp='0.359'>
<phase_done name='codeemit' stamp='0.359'/>
</phase>
<phase name='codeinstall' stamp='0.359'>
<phase_done name='codeinstall' stamp='0.359'/>
</phase>
<code_cache total_blobs='319' nmethods='78' adapters='171' free_code_cache='334258368'/>
<task_done success='1' nmsize='272' count='159' stamp='0.359'/>
</task>
<task compile_id='83' method='java/net/URLStreamHandler getDefaultPort ()I' bytes='2' count='145' iicount='145' level='1' stamp='0.359'>
<phase name='buildIR' stamp='0.359'>
<type id='789' name='int'/>
<klass id='899' name='java/net/URLStreamHandler' flags='1025'/>
<method id='900' holder='899' name='getDefaultPort' return='789' flags='4' bytes='2' iicount='145'/>
<parse method='900'  stamp='0.359'>
<parse_done stamp='0.359'/>
</parse>
<phase name='optimize_blocks' stamp='0.359'>
<phase_done name='optimize_blocks' stamp='0.359'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.359'>
<phase_done name='rangeCheckElimination' stamp='0.359'/>
</phase>
<phase name='optimize_null_checks' stamp='0.359'>
<phase_done name='optimize_null_checks' stamp='0.359'/>
</phase>
<phase_done name='buildIR' stamp='0.359'/>
</phase>
<phase name='emit_lir' stamp='0.359'>
<phase name='lirGeneration' stamp='0.359'>
<phase_done name='lirGeneration' stamp='0.359'/>
</phase>
<phase name='linearScan' stamp='0.359'>
<phase_done name='linearScan' stamp='0.359'/>
</phase>
<phase_done name='emit_lir' stamp='0.359'/>
</phase>
<phase name='codeemit' stamp='0.359'>
<phase_done name='codeemit' stamp='0.359'/>
</phase>
<phase name='codeinstall' stamp='0.359'>
<phase_done name='codeinstall' stamp='0.359'/>
</phase>
<code_cache total_blobs='320' nmethods='79' adapters='171' free_code_cache='334257600'/>
<task_done success='1' nmsize='272' count='145' stamp='0.359'/>
</task>
<task compile_id='85' method='java/security/CodeSource getLocation ()Ljava/net/URL;' bytes='5' count='136' iicount='136' level='1' stamp='0.360'>
<phase name='buildIR' stamp='0.360'>
<klass id='868' name='java/net/URL' flags='17'/>
<klass id='873' name='java/security/CodeSource' flags='1'/>
<method id='899' holder='873' name='getLocation' return='868' flags='17' bytes='5' iicount='136'/>
<parse method='899'  stamp='0.360'>
<parse_done stamp='0.360'/>
</parse>
<phase name='optimize_blocks' stamp='0.360'>
<phase_done name='optimize_blocks' stamp='0.360'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.360'>
<phase_done name='rangeCheckElimination' stamp='0.360'/>
</phase>
<phase name='optimize_null_checks' stamp='0.360'>
<phase_done name='optimize_null_checks' stamp='0.360'/>
</phase>
<phase_done name='buildIR' stamp='0.360'/>
</phase>
<phase name='emit_lir' stamp='0.360'>
<phase name='lirGeneration' stamp='0.360'>
<phase_done name='lirGeneration' stamp='0.360'/>
</phase>
<phase name='linearScan' stamp='0.360'>
<phase_done name='linearScan' stamp='0.360'/>
</phase>
<phase_done name='emit_lir' stamp='0.360'/>
</phase>
<phase name='codeemit' stamp='0.360'>
<phase_done name='codeemit' stamp='0.360'/>
</phase>
<phase name='codeinstall' stamp='0.360'>
<phase_done name='codeinstall' stamp='0.360'/>
</phase>
<code_cache total_blobs='321' nmethods='80' adapters='171' free_code_cache='334256832'/>
<task_done success='1' nmsize='272' count='140' stamp='0.360'/>
</task>
<task compile_id='89' method='sun/misc/URLClassPath$JarLoader getResource (Ljava/lang/String;Z)Lsun/misc/Resource;' bytes='85' count='384' iicount='384' level='3' stamp='0.360'>
<phase name='buildIR' stamp='0.360'>
<klass id='900' name='sun/misc/Resource' flags='1025'/>
<klass id='797' name='java/lang/String' flags='17'/>
<type id='783' name='boolean'/>
<klass id='899' name='sun/misc/URLClassPath$JarLoader' flags='8'/>
<method id='901' holder='899' name='getResource' return='900' arguments='797 783' flags='0' bytes='85' iicount='384'/>
<parse method='901'  stamp='0.360'>
<bc code='182' bci='12'/>
<klass id='903' name='sun/misc/MetaIndex' flags='1'/>
<method id='904' holder='903' name='mayContain' return='783' arguments='797' flags='1' bytes='51' iicount='18'/>
<call method='904' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='903'/>
<bc code='183' bci='21'/>
<type id='791' name='void'/>
<method id='906' holder='899' name='ensureOpen' return='791' flags='2' bytes='36' iicount='378'/>
<call method='906' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='33'/>
<klass id='803' name='java/lang/Throwable' flags='1'/>
<klass id='908' name='java/lang/InternalError' unloaded='1'/>
<method id='909' holder='908' name='&lt;init&gt;' return='791' arguments='803' unloaded='1'/>
<call method='909' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='42'/>
<klass id='911' name='java/util/jar/JarEntry' flags='1'/>
<klass id='910' name='java/util/jar/JarFile' flags='1'/>
<method id='912' holder='910' name='getJarEntry' return='911' arguments='797' flags='1' bytes='9' compile_id='84' compiler='C1' level='3' iicount='445'/>
<call method='912' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='910'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='910'/>
<parse method='912'>
<bc code='182' bci='2'/>
<klass id='915' name='java/util/zip/ZipEntry' flags='1'/>
<method id='916' holder='910' name='getEntry' return='915' arguments='797' flags='1' bytes='22' iicount='445'/>
<call method='916' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='910'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='910'/>
<parse method='916'>
<bc code='183' bci='2'/>
<klass id='918' name='java/util/zip/ZipFile' flags='1'/>
<method id='919' holder='918' name='getEntry' return='915' arguments='797' flags='1' bytes='86' iicount='445'/>
<call method='919' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='910'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='16'/>
<klass id='914' name='java/util/jar/JarFile$JarFileEntry' flags='2'/>
<method id='921' holder='914' name='&lt;init&gt;' return='791' arguments='910 915' flags='0' bytes='11' iicount='67'/>
<call method='921' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='921'>
<bc code='183' bci='7'/>
<method id='923' holder='911' name='&lt;init&gt;' return='791' arguments='915' flags='1' bytes='6' iicount='67'/>
<call method='923' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='923'>
<bc code='183' bci='2'/>
<method id='925' holder='915' name='&lt;init&gt;' return='791' arguments='915' flags='1' bytes='146' iicount='67'/>
<call method='925' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.360'/>
</parse>
<parse_done stamp='0.360'/>
</parse>
<parse_done stamp='0.360'/>
</parse>
<parse_done stamp='0.360'/>
</parse>
<bc code='182' bci='54'/>
<method id='927' holder='899' name='checkResource' return='900' arguments='797 783 911' flags='0' bytes='55' iicount='67'/>
<call method='927' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='899'/>
<bc code='183' bci='71'/>
<klass id='930' name='java/util/HashSet' flags='1'/>
<method id='931' holder='930' name='&lt;init&gt;' return='791' flags='1' bytes='16' iicount='5'/>
<call method='931' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='931'>
<bc code='183' bci='1'/>
<klass id='933' name='java/util/AbstractSet' flags='1025'/>
<method id='934' holder='933' name='&lt;init&gt;' return='791' flags='4' bytes='5' iicount='11'/>
<call method='934' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='934'>
<bc code='183' bci='1'/>
<klass id='936' name='java/util/AbstractCollection' flags='1025'/>
<method id='937' holder='936' name='&lt;init&gt;' return='791' flags='4' bytes='5' iicount='51'/>
<call method='937' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='937'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='939' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='544008'/>
<call method='939' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='939'>
<parse_done stamp='0.360'/>
</parse>
<parse_done stamp='0.360'/>
</parse>
<parse_done stamp='0.360'/>
</parse>
<bc code='183' bci='9'/>
<klass id='941' name='java/util/HashMap' flags='1'/>
<method id='942' holder='941' name='&lt;init&gt;' return='791' flags='1' bytes='11' iicount='19'/>
<call method='942' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='942'>
<bc code='183' bci='1'/>
<klass id='944' name='java/util/AbstractMap' flags='1025'/>
<method id='945' holder='944' name='&lt;init&gt;' return='791' flags='4' bytes='5' iicount='59'/>
<call method='945' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='945'>
<bc code='183' bci='1'/>
<call method='939' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='939'>
<parse_done stamp='0.360'/>
</parse>
<parse_done stamp='0.360'/>
</parse>
<parse_done stamp='0.360'/>
</parse>
<parse_done stamp='0.360'/>
</parse>
<bc code='182' bci='81'/>
<klass id='947' name='java/util/Set' flags='1537'/>
<method id='948' holder='899' name='getResource' return='900' arguments='797 783 947' flags='0' bytes='353' iicount='1'/>
<call method='948' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='899'/>
<parse_done stamp='0.360'/>
</parse>
<phase name='optimize_blocks' stamp='0.360'>
<phase_done name='optimize_blocks' stamp='0.360'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.360'>
<phase_done name='rangeCheckElimination' stamp='0.360'/>
</phase>
<phase name='optimize_null_checks' stamp='0.360'>
<phase_done name='optimize_null_checks' stamp='0.360'/>
</phase>
<phase_done name='buildIR' stamp='0.360'/>
</phase>
<phase name='emit_lir' stamp='0.360'>
<phase name='lirGeneration' stamp='0.360'>
<phase_done name='lirGeneration' stamp='0.360'/>
</phase>
<phase name='linearScan' stamp='0.360'>
<phase_done name='linearScan' stamp='0.360'/>
</phase>
<phase_done name='emit_lir' stamp='0.360'/>
</phase>
<phase name='codeemit' stamp='0.360'>
<phase_done name='codeemit' stamp='0.360'/>
</phase>
<phase name='codeinstall' stamp='0.360'>
<dependency type='leaf_type' ctxk='903'/>
<dependency type='leaf_type' ctxk='899'/>
<dependency type='leaf_type' ctxk='910'/>
<phase_done name='codeinstall' stamp='0.378'/>
</phase>
<code_cache total_blobs='322' nmethods='81' adapters='171' free_code_cache='334250880'/>
<task_done success='1' nmsize='3432' count='399' inlined_bytes='92' stamp='0.378'/>
</task>
<task compile_id='86' method='java/net/URLClassLoader access$000 (Ljava/net/URLClassLoader;)Lsun/misc/URLClassPath;' bytes='5' count='146' iicount='146' level='1' stamp='0.378'>
<phase name='buildIR' stamp='0.378'>
<klass id='899' name='sun/misc/URLClassPath' flags='1'/>
<klass id='867' name='java/net/URLClassLoader' flags='1'/>
<method id='900' holder='867' name='access$000' return='899' arguments='867' flags='4104' bytes='5' iicount='146'/>
<parse method='900'  stamp='0.378'>
<parse_done stamp='0.378'/>
</parse>
<phase name='optimize_blocks' stamp='0.378'>
<phase_done name='optimize_blocks' stamp='0.378'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.378'>
<phase_done name='rangeCheckElimination' stamp='0.378'/>
</phase>
<phase name='optimize_null_checks' stamp='0.378'>
<phase_done name='optimize_null_checks' stamp='0.378'/>
</phase>
<phase_done name='buildIR' stamp='0.378'/>
</phase>
<phase name='emit_lir' stamp='0.378'>
<phase name='lirGeneration' stamp='0.378'>
<phase_done name='lirGeneration' stamp='0.378'/>
</phase>
<phase name='linearScan' stamp='0.378'>
<phase_done name='linearScan' stamp='0.378'/>
</phase>
<phase_done name='emit_lir' stamp='0.378'/>
</phase>
<phase name='codeemit' stamp='0.378'>
<phase_done name='codeemit' stamp='0.378'/>
</phase>
<phase name='codeinstall' stamp='0.378'>
<phase_done name='codeinstall' stamp='0.379'/>
</phase>
<code_cache total_blobs='323' nmethods='82' adapters='171' free_code_cache='334250112'/>
<task_done success='1' nmsize='240' count='152' stamp='0.379'/>
</task>
<task compile_id='87' method='sun/misc/URLClassPath$JarLoader access$700 (Lsun/misc/URLClassPath$JarLoader;)Ljava/util/jar/JarFile;' bytes='5' count='152' iicount='152' level='1' stamp='0.379'>
<phase name='buildIR' stamp='0.379'>
<klass id='900' name='java/util/jar/JarFile' flags='1'/>
<klass id='899' name='sun/misc/URLClassPath$JarLoader' flags='8'/>
<method id='901' holder='899' name='access$700' return='900' arguments='899' flags='4104' bytes='5' iicount='152'/>
<parse method='901'  stamp='0.379'>
<parse_done stamp='0.379'/>
</parse>
<phase name='optimize_blocks' stamp='0.379'>
<phase_done name='optimize_blocks' stamp='0.379'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.379'>
<phase_done name='rangeCheckElimination' stamp='0.379'/>
</phase>
<phase name='optimize_null_checks' stamp='0.379'>
<phase_done name='optimize_null_checks' stamp='0.379'/>
</phase>
<phase_done name='buildIR' stamp='0.379'/>
</phase>
<phase name='emit_lir' stamp='0.379'>
<phase name='lirGeneration' stamp='0.379'>
<phase_done name='lirGeneration' stamp='0.379'/>
</phase>
<phase name='linearScan' stamp='0.379'>
<phase_done name='linearScan' stamp='0.379'/>
</phase>
<phase_done name='emit_lir' stamp='0.379'/>
</phase>
<phase name='codeemit' stamp='0.379'>
<phase_done name='codeemit' stamp='0.379'/>
</phase>
<phase name='codeinstall' stamp='0.379'>
<phase_done name='codeinstall' stamp='0.380'/>
</phase>
<code_cache total_blobs='324' nmethods='83' adapters='171' free_code_cache='334249344'/>
<task_done success='1' nmsize='240' count='156' stamp='0.380'/>
</task>
<task compile_id='88' method='java/util/zip/ZipFile access$000 (Ljava/util/zip/ZipFile;)Ljava/util/Map;' bytes='5' count='150' iicount='150' level='1' stamp='0.380'>
<phase name='buildIR' stamp='0.380'>
<klass id='900' name='java/util/Map' flags='1537'/>
<klass id='899' name='java/util/zip/ZipFile' flags='1'/>
<method id='901' holder='899' name='access$000' return='900' arguments='899' flags='4104' bytes='5' iicount='150'/>
<parse method='901'  stamp='0.380'>
<parse_done stamp='0.380'/>
</parse>
<phase name='optimize_blocks' stamp='0.380'>
<phase_done name='optimize_blocks' stamp='0.380'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.380'>
<phase_done name='rangeCheckElimination' stamp='0.380'/>
</phase>
<phase name='optimize_null_checks' stamp='0.380'>
<phase_done name='optimize_null_checks' stamp='0.380'/>
</phase>
<phase_done name='buildIR' stamp='0.380'/>
</phase>
<phase name='emit_lir' stamp='0.380'>
<phase name='lirGeneration' stamp='0.380'>
<phase_done name='lirGeneration' stamp='0.380'/>
</phase>
<phase name='linearScan' stamp='0.380'>
<phase_done name='linearScan' stamp='0.380'/>
</phase>
<phase_done name='emit_lir' stamp='0.380'/>
</phase>
<phase name='codeemit' stamp='0.380'>
<phase_done name='codeemit' stamp='0.380'/>
</phase>
<phase name='codeinstall' stamp='0.380'>
<phase_done name='codeinstall' stamp='0.380'/>
</phase>
<code_cache total_blobs='325' nmethods='84' adapters='171' free_code_cache='334248576'/>
<task_done success='1' nmsize='240' count='152' stamp='0.380'/>
</task>
<task compile_id='91' method='java/lang/String endsWith (Ljava/lang/String;)Z' bytes='17' count='384' iicount='384' level='3' stamp='0.381'>
<phase name='buildIR' stamp='0.381'>
<type id='783' name='boolean'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='endsWith' return='783' arguments='797' flags='1' bytes='17' iicount='384'/>
<parse method='899'  stamp='0.382'>
<bc code='182' bci='13'/>
<type id='789' name='int'/>
<method id='901' holder='797' name='startsWith' return='783' arguments='797 789' flags='1' bytes='72' compile_id='62' compiler='C1' level='3' iicount='707'/>
<call method='901' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.382'/>
</parse>
<phase name='optimize_blocks' stamp='0.382'>
<phase_done name='optimize_blocks' stamp='0.382'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.382'>
<phase_done name='rangeCheckElimination' stamp='0.382'/>
</phase>
<phase name='optimize_null_checks' stamp='0.382'>
<phase_done name='optimize_null_checks' stamp='0.382'/>
</phase>
<phase_done name='buildIR' stamp='0.382'/>
</phase>
<phase name='emit_lir' stamp='0.382'>
<phase name='lirGeneration' stamp='0.382'>
<phase_done name='lirGeneration' stamp='0.382'/>
</phase>
<phase name='linearScan' stamp='0.382'>
<phase_done name='linearScan' stamp='0.382'/>
</phase>
<phase_done name='emit_lir' stamp='0.382'/>
</phase>
<phase name='codeemit' stamp='0.382'>
<phase_done name='codeemit' stamp='0.382'/>
</phase>
<phase name='codeinstall' stamp='0.382'>
<phase_done name='codeinstall' stamp='0.383'/>
</phase>
<code_cache total_blobs='327' nmethods='86' adapters='171' free_code_cache='334246464'/>
<task_done success='1' nmsize='424' count='387' stamp='0.383'/>
</task>
<task compile_id='92' method='java/lang/ClassLoader checkName (Ljava/lang/String;)Z' bytes='43' count='385' iicount='385' level='3' stamp='0.383'>
<phase name='buildIR' stamp='0.383'>
<type id='783' name='boolean'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='800' name='java/lang/ClassLoader' flags='1025'/>
<method id='899' holder='800' name='checkName' return='783' arguments='797' flags='2' bytes='43' iicount='386'/>
<parse method='899'  stamp='0.383'>
<bc code='182' bci='5'/>
<type id='789' name='int'/>
<method id='901' holder='797' name='length' return='789' flags='1' bytes='6' compile_id='20' compiler='C1' level='1' iicount='3059'/>
<call method='901' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<parse_done stamp='0.383'/>
</parse>
<bc code='182' bci='16'/>
<method id='903' holder='797' name='indexOf' return='789' arguments='789' flags='1' bytes='7' compile_id='23' compiler='C1' level='3' iicount='1948'/>
<call method='903' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<bc code='182' bci='3'/>
<method id='905' holder='797' name='indexOf' return='789' arguments='789 789' flags='1' bytes='70' compile_id='6' compiler='C1' level='3' iicount='2138'/>
<call method='905' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.383'/>
</parse>
<bc code='184' bci='23'/>
<klass id='907' name='sun/misc/VM' flags='1'/>
<method id='908' holder='907' name='allowArraySyntax' return='783' flags='9' bytes='4' iicount='387'/>
<call method='908' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='908'>
<parse_done stamp='0.383'/>
</parse>
<bc code='182' bci='31'/>
<type id='784' name='char'/>
<method id='911' holder='797' name='charAt' return='784' arguments='789' flags='1' bytes='29' compile_id='5' compiler='C1' level='3' iicount='21313916'/>
<call method='911' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='911'>
<bc code='183' bci='18'/>
<type id='791' name='void'/>
<klass id='913' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='914' holder='913' name='&lt;init&gt;' return='791' arguments='789' unloaded='1'/>
<call method='914' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.383'/>
</parse>
<parse_done stamp='0.383'/>
</parse>
<phase name='optimize_blocks' stamp='0.383'>
<phase_done name='optimize_blocks' stamp='0.383'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.383'>
<phase_done name='rangeCheckElimination' stamp='0.383'/>
</phase>
<phase name='optimize_null_checks' stamp='0.383'>
<phase_done name='optimize_null_checks' stamp='0.383'/>
</phase>
<phase_done name='buildIR' stamp='0.383'/>
</phase>
<phase name='emit_lir' stamp='0.383'>
<phase name='lirGeneration' stamp='0.383'>
<phase_done name='lirGeneration' stamp='0.383'/>
</phase>
<phase name='linearScan' stamp='0.383'>
<phase_done name='linearScan' stamp='0.383'/>
</phase>
<phase_done name='emit_lir' stamp='0.383'/>
</phase>
<phase name='codeemit' stamp='0.383'>
<phase_done name='codeemit' stamp='0.383'/>
</phase>
<phase name='codeinstall' stamp='0.383'>
<phase_done name='codeinstall' stamp='0.386'/>
</phase>
<code_cache total_blobs='328' nmethods='87' adapters='171' free_code_cache='334243584'/>
<task_done success='1' nmsize='1400' count='391' inlined_bytes='46' stamp='0.386'/>
</task>
<task compile_id='93' method='sun/misc/VM allowArraySyntax ()Z' bytes='4' count='391' iicount='391' level='3' stamp='0.386'>
<phase name='buildIR' stamp='0.386'>
<type id='783' name='boolean'/>
<klass id='899' name='sun/misc/VM' flags='1'/>
<method id='900' holder='899' name='allowArraySyntax' return='783' flags='9' bytes='4' iicount='391'/>
<parse method='900'  stamp='0.386'>
<parse_done stamp='0.386'/>
</parse>
<phase name='optimize_blocks' stamp='0.386'>
<phase_done name='optimize_blocks' stamp='0.386'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.386'>
<phase_done name='rangeCheckElimination' stamp='0.386'/>
</phase>
<phase name='optimize_null_checks' stamp='0.386'>
<phase_done name='optimize_null_checks' stamp='0.386'/>
</phase>
<phase_done name='buildIR' stamp='0.386'/>
</phase>
<phase name='emit_lir' stamp='0.386'>
<phase name='lirGeneration' stamp='0.386'>
<phase_done name='lirGeneration' stamp='0.386'/>
</phase>
<phase name='linearScan' stamp='0.386'>
<phase_done name='linearScan' stamp='0.386'/>
</phase>
<phase_done name='emit_lir' stamp='0.386'/>
</phase>
<phase name='codeemit' stamp='0.386'>
<phase_done name='codeemit' stamp='0.386'/>
</phase>
<phase name='codeinstall' stamp='0.386'>
<phase_done name='codeinstall' stamp='0.386'/>
</phase>
<code_cache total_blobs='329' nmethods='88' adapters='171' free_code_cache='334242752'/>
<task_done success='1' nmsize='336' count='395' stamp='0.386'/>
</task>
<task compile_id='94' method='java/util/zip/ZipFile getEntry (Ljava/lang/String;)Ljava/util/zip/ZipEntry;' bytes='86' count='547' iicount='547' level='3' stamp='0.386'>
<phase name='buildIR' stamp='0.387'>
<klass id='900' name='java/util/zip/ZipEntry' flags='1'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='899' name='java/util/zip/ZipFile' flags='1'/>
<method id='901' holder='899' name='getEntry' return='900' arguments='797' flags='1' bytes='86' iicount='547'/>
<parse method='901'  stamp='0.387'>
<bc code='183' bci='10'/>
<type id='791' name='void'/>
<klass id='895' name='java/lang/NullPointerException' flags='1'/>
<method id='904' holder='895' name='&lt;init&gt;' return='791' arguments='797' flags='1' bytes='6' iicount='1'/>
<call method='904' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='183' bci='22'/>
<method id='906' holder='899' name='ensureOpen' return='791' flags='2' bytes='37' compile_id='77' compiler='C1' level='3' iicount='631'/>
<call method='906' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='34'/>
<klass id='891' name='[B' flags='1041'/>
<klass id='908' name='java/util/zip/ZipCoder' flags='16'/>
<method id='909' holder='908' name='getBytes' return='891' arguments='797' flags='0' bytes='192' compile_id='78' compiler='C1' level='3' iicount='631'/>
<call method='909' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='38'/>
<type id='790' name='long'/>
<type id='783' name='boolean'/>
<method id='912' holder='899' name='getEntry' return='790' arguments='790 891 783' flags='266' bytes='0' compile_id='80' compile_kind='c2n' level='0' iicount='384'/>
<call method='912' instr='invokestatic'/>
<inline_fail reason='native method'/>
<bc code='183' bci='51'/>
<method id='913' holder='899' name='getZipEntry' return='900' arguments='797 790' flags='2' bytes='236' iicount='84'/>
<call method='913' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='61'/>
<method id='915' holder='899' name='freeEntry' return='791' arguments='790 790' flags='266' bytes='0' iicount='168'/>
<call method='915' instr='invokestatic'/>
<inline_fail reason='native method'/>
<parse_done stamp='0.387'/>
</parse>
<phase name='optimize_blocks' stamp='0.387'>
<phase_done name='optimize_blocks' stamp='0.387'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.387'>
<phase_done name='rangeCheckElimination' stamp='0.387'/>
</phase>
<phase name='optimize_null_checks' stamp='0.387'>
<phase_done name='optimize_null_checks' stamp='0.387'/>
</phase>
<phase_done name='buildIR' stamp='0.387'/>
</phase>
<phase name='emit_lir' stamp='0.387'>
<phase name='lirGeneration' stamp='0.387'>
<phase_done name='lirGeneration' stamp='0.387'/>
</phase>
<phase name='linearScan' stamp='0.387'>
<phase_done name='linearScan' stamp='0.387'/>
</phase>
<phase_done name='emit_lir' stamp='0.387'/>
</phase>
<phase name='codeemit' stamp='0.387'>
<phase_done name='codeemit' stamp='0.387'/>
</phase>
<phase name='codeinstall' stamp='0.387'>
<phase_done name='codeinstall' stamp='0.390'/>
</phase>
<code_cache total_blobs='331' nmethods='90' adapters='171' free_code_cache='334238720'/>
<task_done success='1' nmsize='1496' count='551' stamp='0.390'/>
</task>
<task compile_id='96' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='499' iicount='499' level='3' stamp='0.390'>
<phase name='buildIR' stamp='0.390'>
<type id='791' name='void'/>
<klass id='888' name='[C' flags='1041'/>
<type id='783' name='boolean'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='&lt;init&gt;' return='791' arguments='888 783' flags='0' bytes='10' iicount='499'/>
<parse method='899'  stamp='0.390'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='901' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='610290'/>
<call method='901' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<parse_done stamp='0.390'/>
</parse>
<parse_done stamp='0.390'/>
</parse>
<phase name='optimize_blocks' stamp='0.390'>
<phase_done name='optimize_blocks' stamp='0.390'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.390'>
<phase_done name='rangeCheckElimination' stamp='0.390'/>
</phase>
<phase name='optimize_null_checks' stamp='0.390'>
<phase_done name='optimize_null_checks' stamp='0.390'/>
</phase>
<phase_done name='buildIR' stamp='0.390'/>
</phase>
<phase name='emit_lir' stamp='0.390'>
<phase name='lirGeneration' stamp='0.390'>
<phase_done name='lirGeneration' stamp='0.390'/>
</phase>
<phase name='linearScan' stamp='0.390'>
<phase_done name='linearScan' stamp='0.390'/>
</phase>
<phase_done name='emit_lir' stamp='0.390'/>
</phase>
<phase name='codeemit' stamp='0.390'>
<phase_done name='codeemit' stamp='0.390'/>
</phase>
<phase name='codeinstall' stamp='0.390'>
<phase_done name='codeinstall' stamp='0.390'/>
</phase>
<code_cache total_blobs='332' nmethods='91' adapters='171' free_code_cache='334237696'/>
<task_done success='1' nmsize='464' count='500' inlined_bytes='1' stamp='0.390'/>
</task>
<task compile_id='97' method='java/util/concurrent/ConcurrentHashMap addCount (JI)V' bytes='292' count='256' backedge_count='8' iicount='257' level='3' stamp='0.391'>
<phase name='buildIR' stamp='0.391'>
<type id='791' name='void'/>
<type id='790' name='long'/>
<type id='789' name='int'/>
<klass id='899' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='900' holder='899' name='addCount' return='791' arguments='790 789' flags='18' bytes='292' iicount='257'/>
<parse method='900'  stamp='0.391'>
<bc code='182' bci='31'/>
<type id='783' name='boolean'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='863' name='sun/misc/Unsafe' flags='17'/>
<method id='906' holder='863' name='compareAndSwapLong' return='783' arguments='796 790 790 790' flags='273' bytes='0' compile_id='95' compile_kind='c2n' level='0' iicount='256'/>
<call method='906' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='184' bci='58'/>
<klass id='907' name='java/util/concurrent/ThreadLocalRandom' unloaded='1'/>
<method id='908' holder='907' name='getProbe' return='789' unloaded='1'/>
<call method='908' instr='invokestatic'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='91'/>
<call method='906' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='115'/>
<method id='909' holder='899' name='sumCount' return='790' flags='16' bytes='48' iicount='8'/>
<call method='909' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='161'/>
<method id='913' holder='899' name='resizeStamp' return='789' arguments='789' flags='24' bytes='13' iicount='16'/>
<call method='913' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='913'>
<bc code='184' bci='1'/>
<klass id='883' name='java/lang/Integer' flags='17'/>
<method id='915' holder='883' name='numberOfLeadingZeros' return='789' arguments='789' flags='9' bytes='76' iicount='17'/>
<call method='915' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.391'/>
</parse>
<bc code='182' bci='235'/>
<method id='917' holder='863' name='compareAndSwapInt' return='783' arguments='796 790 789 789' flags='273' bytes='0' iicount='47'/>
<call method='917' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='183' bci='246'/>
<klass id='912' name='[Ljava/util/concurrent/ConcurrentHashMap$Node;' flags='1040'/>
<method id='918' holder='899' name='transfer' return='791' arguments='912 912' flags='18' bytes='832' iicount='8'/>
<call method='918' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='269'/>
<call method='917' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='183' bci='279'/>
<call method='918' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='283'/>
<call method='909' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='104'/>
<method id='920' holder='899' name='fullAddCount' return='791' arguments='790 783' flags='18' bytes='487' iicount='1'/>
<call method='920' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.391'/>
</parse>
<phase name='optimize_blocks' stamp='0.391'>
<phase_done name='optimize_blocks' stamp='0.391'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.391'>
<phase_done name='rangeCheckElimination' stamp='0.391'/>
</phase>
<phase name='optimize_null_checks' stamp='0.391'>
<phase_done name='optimize_null_checks' stamp='0.391'/>
</phase>
<phase_done name='buildIR' stamp='0.391'/>
</phase>
<phase name='emit_lir' stamp='0.391'>
<phase name='lirGeneration' stamp='0.391'>
<phase_done name='lirGeneration' stamp='0.391'/>
</phase>
<phase name='linearScan' stamp='0.391'>
<phase_done name='linearScan' stamp='0.392'/>
</phase>
<phase_done name='emit_lir' stamp='0.392'/>
</phase>
<phase name='codeemit' stamp='0.392'>
<phase_done name='codeemit' stamp='0.392'/>
</phase>
<phase name='codeinstall' stamp='0.392'>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.396'/>
</phase>
<code_cache total_blobs='336' nmethods='93' adapters='173' free_code_cache='334230528'/>
<task_done success='1' nmsize='2568' count='265' backedge_count='9' inlined_bytes='13' stamp='0.396'/>
</task>
<task compile_id='100' method='java/util/concurrent/ConcurrentHashMap casTabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' bytes='20' count='385' iicount='385' level='3' stamp='0.396'>
<phase name='buildIR' stamp='0.396'>
<type id='783' name='boolean'/>
<klass id='901' name='[Ljava/util/concurrent/ConcurrentHashMap$Node;' flags='1040'/>
<type id='789' name='int'/>
<klass id='900' name='java/util/concurrent/ConcurrentHashMap$Node' flags='8'/>
<klass id='899' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='902' holder='899' name='casTabAt' return='783' arguments='901 789 900 900' flags='24' bytes='20' iicount='399'/>
<parse method='902'  stamp='0.396'>
<bc code='182' bci='16'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<type id='790' name='long'/>
<klass id='863' name='sun/misc/Unsafe' flags='17'/>
<method id='906' holder='863' name='compareAndSwapObject' return='783' arguments='796 790 796 796' flags='273' bytes='0' compile_id='99' compile_kind='c2n' level='0' iicount='384'/>
<call method='906' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.396'/>
</parse>
<phase name='optimize_blocks' stamp='0.396'>
<phase_done name='optimize_blocks' stamp='0.396'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.396'>
<phase_done name='rangeCheckElimination' stamp='0.396'/>
</phase>
<phase name='optimize_null_checks' stamp='0.396'>
<phase_done name='optimize_null_checks' stamp='0.396'/>
</phase>
<phase_done name='buildIR' stamp='0.396'/>
</phase>
<phase name='emit_lir' stamp='0.396'>
<phase name='lirGeneration' stamp='0.396'>
<phase_done name='lirGeneration' stamp='0.396'/>
</phase>
<phase name='linearScan' stamp='0.396'>
<phase_done name='linearScan' stamp='0.396'/>
</phase>
<phase_done name='emit_lir' stamp='0.396'/>
</phase>
<phase name='codeemit' stamp='0.396'>
<phase_done name='codeemit' stamp='0.396'/>
</phase>
<phase name='codeinstall' stamp='0.396'>
<phase_done name='codeinstall' stamp='0.397'/>
</phase>
<code_cache total_blobs='337' nmethods='94' adapters='173' free_code_cache='334229568'/>
<task_done success='1' nmsize='400' count='411' stamp='0.397'/>
</task>
<task compile_id='98' method='java/lang/String lastIndexOf (I)I' bytes='13' count='386' iicount='386' level='3' stamp='0.397'>
<phase name='buildIR' stamp='0.397'>
<type id='789' name='int'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='lastIndexOf' return='789' arguments='789' flags='1' bytes='13' iicount='386'/>
<parse method='899'  stamp='0.397'>
<bc code='182' bci='9'/>
<method id='901' holder='797' name='lastIndexOf' return='789' arguments='789 789' flags='1' bytes='52' compile_id='37' compiler='C1' level='3' iicount='473'/>
<call method='901' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.397'/>
</parse>
<phase name='optimize_blocks' stamp='0.397'>
<phase_done name='optimize_blocks' stamp='0.397'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.397'>
<phase_done name='rangeCheckElimination' stamp='0.397'/>
</phase>
<phase name='optimize_null_checks' stamp='0.397'>
<phase_done name='optimize_null_checks' stamp='0.397'/>
</phase>
<phase_done name='buildIR' stamp='0.397'/>
</phase>
<phase name='emit_lir' stamp='0.397'>
<phase name='lirGeneration' stamp='0.397'>
<phase_done name='lirGeneration' stamp='0.397'/>
</phase>
<phase name='linearScan' stamp='0.397'>
<phase_done name='linearScan' stamp='0.397'/>
</phase>
<phase_done name='emit_lir' stamp='0.397'/>
</phase>
<phase name='codeemit' stamp='0.397'>
<phase_done name='codeemit' stamp='0.397'/>
</phase>
<phase name='codeinstall' stamp='0.397'>
<phase_done name='codeinstall' stamp='0.398'/>
</phase>
<code_cache total_blobs='338' nmethods='95' adapters='173' free_code_cache='334228544'/>
<task_done success='1' nmsize='392' count='388' stamp='0.398'/>
</task>
<task compile_id='101' method='java/util/concurrent/ConcurrentHashMap spread (I)I' bytes='10' count='384' iicount='384' level='3' stamp='0.398'>
<phase name='buildIR' stamp='0.398'>
<type id='789' name='int'/>
<klass id='899' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='900' holder='899' name='spread' return='789' arguments='789' flags='24' bytes='10' iicount='384'/>
<parse method='900'  stamp='0.398'>
<parse_done stamp='0.398'/>
</parse>
<phase name='optimize_blocks' stamp='0.398'>
<phase_done name='optimize_blocks' stamp='0.398'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.398'>
<phase_done name='rangeCheckElimination' stamp='0.398'/>
</phase>
<phase name='optimize_null_checks' stamp='0.398'>
<phase_done name='optimize_null_checks' stamp='0.398'/>
</phase>
<phase_done name='buildIR' stamp='0.398'/>
</phase>
<phase name='emit_lir' stamp='0.398'>
<phase name='lirGeneration' stamp='0.398'>
<phase_done name='lirGeneration' stamp='0.398'/>
</phase>
<phase name='linearScan' stamp='0.398'>
<phase_done name='linearScan' stamp='0.398'/>
</phase>
<phase_done name='emit_lir' stamp='0.398'/>
</phase>
<phase name='codeemit' stamp='0.398'>
<phase_done name='codeemit' stamp='0.398'/>
</phase>
<phase name='codeinstall' stamp='0.398'>
<phase_done name='codeinstall' stamp='0.399'/>
</phase>
<code_cache total_blobs='339' nmethods='96' adapters='173' free_code_cache='334227712'/>
<task_done success='1' nmsize='336' count='385' stamp='0.399'/>
</task>
<task compile_id='103' method='java/lang/Character toUpperCase (C)C' bytes='6' count='385' iicount='386' level='3' stamp='0.399'>
<phase name='buildIR' stamp='0.399'>
<type id='784' name='char'/>
<klass id='877' name='java/lang/Character' flags='17'/>
<method id='899' holder='877' name='toUpperCase' return='784' arguments='784' flags='9' bytes='6' iicount='386'/>
<parse method='899'  stamp='0.399'>
<bc code='184' bci='1'/>
<type id='789' name='int'/>
<method id='901' holder='877' name='toUpperCase' return='789' arguments='789' flags='9' bytes='9' iicount='386'/>
<call method='901' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<bc code='184' bci='1'/>
<klass id='903' name='java/lang/CharacterData' flags='1024'/>
<method id='904' holder='903' name='of' return='903' arguments='789' flags='24' bytes='120' compile_id='34' compiler='C1' level='3' iicount='3865'/>
<call method='904' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='906' holder='903' name='toUpperCase' return='789' arguments='789' flags='1024' bytes='0' iicount='1'/>
<call method='906' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.399'/>
</parse>
<parse_done stamp='0.399'/>
</parse>
<phase name='optimize_blocks' stamp='0.399'>
<phase_done name='optimize_blocks' stamp='0.399'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.399'>
<phase_done name='rangeCheckElimination' stamp='0.399'/>
</phase>
<phase name='optimize_null_checks' stamp='0.399'>
<phase_done name='optimize_null_checks' stamp='0.399'/>
</phase>
<phase_done name='buildIR' stamp='0.399'/>
</phase>
<phase name='emit_lir' stamp='0.399'>
<phase name='lirGeneration' stamp='0.399'>
<phase_done name='lirGeneration' stamp='0.399'/>
</phase>
<phase name='linearScan' stamp='0.399'>
<phase_done name='linearScan' stamp='0.399'/>
</phase>
<phase_done name='emit_lir' stamp='0.399'/>
</phase>
<phase name='codeemit' stamp='0.399'>
<phase_done name='codeemit' stamp='0.399'/>
</phase>
<phase name='codeinstall' stamp='0.399'>
<phase_done name='codeinstall' stamp='0.402'/>
</phase>
<code_cache total_blobs='341' nmethods='98' adapters='173' free_code_cache='334225088'/>
<task_done success='1' nmsize='1016' count='386' inlined_bytes='9' stamp='0.402'/>
</task>
<task compile_id='107' method='sun/misc/PerfCounter add (J)V' bytes='18' count='384' iicount='384' level='3' stamp='0.402'>
<phase name='buildIR' stamp='0.402'>
<type id='791' name='void'/>
<type id='790' name='long'/>
<klass id='899' name='sun/misc/PerfCounter' flags='1'/>
<method id='900' holder='899' name='add' return='791' arguments='790' flags='33' bytes='18' iicount='384'/>
<parse method='900'  stamp='0.402'>
<bc code='182' bci='1'/>
<method id='902' holder='899' name='get' return='790' flags='33' bytes='9' iicount='384'/>
<call method='902' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='899'/>
<parse method='902'>
<bc code='182' bci='5'/>
<type id='789' name='int'/>
<klass id='904' name='java/nio/LongBuffer' flags='1025'/>
<method id='905' holder='904' name='get' return='790' arguments='789' flags='1025' bytes='0' iicount='1'/>
<call method='905' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.402'/>
</parse>
<bc code='182' bci='13'/>
<method id='906' holder='904' name='put' return='904' arguments='789 790' flags='1025' bytes='0' iicount='1'/>
<call method='906' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.402'/>
</parse>
<phase name='optimize_blocks' stamp='0.402'>
<phase_done name='optimize_blocks' stamp='0.402'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.402'>
<phase_done name='rangeCheckElimination' stamp='0.402'/>
</phase>
<phase name='optimize_null_checks' stamp='0.402'>
<phase_done name='optimize_null_checks' stamp='0.402'/>
</phase>
<phase_done name='buildIR' stamp='0.402'/>
</phase>
<phase name='emit_lir' stamp='0.402'>
<phase name='lirGeneration' stamp='0.402'>
<phase_done name='lirGeneration' stamp='0.402'/>
</phase>
<phase name='linearScan' stamp='0.402'>
<phase_done name='linearScan' stamp='0.402'/>
</phase>
<phase_done name='emit_lir' stamp='0.402'/>
</phase>
<phase name='codeemit' stamp='0.402'>
<phase_done name='codeemit' stamp='0.402'/>
</phase>
<phase name='codeinstall' stamp='0.402'>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.406'/>
</phase>
<code_cache total_blobs='343' nmethods='100' adapters='173' free_code_cache='334220800'/>
<task_done success='1' nmsize='2328' count='384' inlined_bytes='9' stamp='0.406'/>
</task>
<task compile_id='108' method='sun/misc/PerfCounter get ()J' bytes='9' count='384' iicount='384' level='3' stamp='0.406'>
<phase name='buildIR' stamp='0.406'>
<type id='790' name='long'/>
<klass id='899' name='sun/misc/PerfCounter' flags='1'/>
<method id='900' holder='899' name='get' return='790' flags='33' bytes='9' iicount='384'/>
<parse method='900'  stamp='0.406'>
<bc code='182' bci='5'/>
<type id='789' name='int'/>
<klass id='902' name='java/nio/LongBuffer' flags='1025'/>
<method id='903' holder='902' name='get' return='790' arguments='789' flags='1025' bytes='0' iicount='1'/>
<call method='903' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.406'/>
</parse>
<phase name='optimize_blocks' stamp='0.406'>
<phase_done name='optimize_blocks' stamp='0.406'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.406'>
<phase_done name='rangeCheckElimination' stamp='0.406'/>
</phase>
<phase name='optimize_null_checks' stamp='0.406'>
<phase_done name='optimize_null_checks' stamp='0.406'/>
</phase>
<phase_done name='buildIR' stamp='0.406'/>
</phase>
<phase name='emit_lir' stamp='0.406'>
<phase name='lirGeneration' stamp='0.406'>
<phase_done name='lirGeneration' stamp='0.406'/>
</phase>
<phase name='linearScan' stamp='0.406'>
<phase_done name='linearScan' stamp='0.406'/>
</phase>
<phase_done name='emit_lir' stamp='0.406'/>
</phase>
<phase name='codeemit' stamp='0.406'>
<phase_done name='codeemit' stamp='0.406'/>
</phase>
<phase name='codeinstall' stamp='0.406'>
<phase_done name='codeinstall' stamp='0.407'/>
</phase>
<code_cache total_blobs='344' nmethods='101' adapters='173' free_code_cache='334218816'/>
<task_done success='1' nmsize='1256' count='385' stamp='0.407'/>
</task>
<task compile_id='112' method='sun/misc/URLClassPath$JarLoader ensureOpen ()V' bytes='36' count='507' iicount='507' level='3' stamp='0.407'>
<phase name='buildIR' stamp='0.407'>
<type id='791' name='void'/>
<klass id='899' name='sun/misc/URLClassPath$JarLoader' flags='8'/>
<method id='900' holder='899' name='ensureOpen' return='791' flags='2' bytes='36' iicount='507'/>
<parse method='900'  stamp='0.407'>
<bc code='183' bci='12'/>
<klass id='903' name='sun/misc/URLClassPath$JarLoader$1' flags='0'/>
<method id='904' holder='903' name='&lt;init&gt;' return='791' arguments='899' flags='0' bytes='10' iicount='6'/>
<call method='904' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='904'>
<bc code='183' bci='6'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='906' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='646452'/>
<call method='906' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='906'>
<parse_done stamp='0.408'/>
</parse>
<parse_done stamp='0.408'/>
</parse>
<bc code='184' bci='19'/>
<klass id='909' name='java/security/PrivilegedExceptionAction' flags='1537'/>
<klass id='810' name='java/security/AccessControlContext' flags='17'/>
<klass id='908' name='java/security/AccessController' flags='17'/>
<method id='910' holder='908' name='doPrivileged' return='796' arguments='909 810' flags='265' bytes='0' iicount='213'/>
<call method='910' instr='invokestatic'/>
<inline_fail reason='native method'/>
<bc code='182' bci='28'/>
<klass id='806' name='java/lang/Exception' flags='1'/>
<klass id='911' name='java/security/PrivilegedActionException' unloaded='1'/>
<method id='912' holder='911' name='getException' return='806' unloaded='1'/>
<call method='912' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.408'/>
</parse>
<phase name='optimize_blocks' stamp='0.408'>
<phase_done name='optimize_blocks' stamp='0.408'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.408'>
<phase_done name='rangeCheckElimination' stamp='0.408'/>
</phase>
<phase name='optimize_null_checks' stamp='0.408'>
<phase_done name='optimize_null_checks' stamp='0.408'/>
</phase>
<phase_done name='buildIR' stamp='0.408'/>
</phase>
<phase name='emit_lir' stamp='0.408'>
<phase name='lirGeneration' stamp='0.408'>
<phase_done name='lirGeneration' stamp='0.408'/>
</phase>
<phase name='linearScan' stamp='0.408'>
<phase_done name='linearScan' stamp='0.408'/>
</phase>
<phase_done name='emit_lir' stamp='0.408'/>
</phase>
<phase name='codeemit' stamp='0.408'>
<phase_done name='codeemit' stamp='0.408'/>
</phase>
<phase name='codeinstall' stamp='0.408'>
<phase_done name='codeinstall' stamp='0.410'/>
</phase>
<code_cache total_blobs='346' nmethods='102' adapters='174' free_code_cache='334215232'/>
<task_done success='1' nmsize='2008' count='508' inlined_bytes='11' stamp='0.410'/>
</task>
<task compile_id='109' method='java/nio/DirectLongBufferU get (I)J' bytes='16' count='392' iicount='392' level='3' stamp='0.410'>
<phase name='buildIR' stamp='0.410'>
<type id='790' name='long'/>
<type id='789' name='int'/>
<klass id='899' name='java/nio/DirectLongBufferU' flags='0'/>
<method id='900' holder='899' name='get' return='790' arguments='789' flags='1' bytes='16' iicount='392'/>
<parse method='900'  stamp='0.410'>
<bc code='182' bci='6'/>
<klass id='875' name='java/nio/Buffer' flags='1025'/>
<method id='904' holder='875' name='checkIndex' return='789' arguments='789' flags='16' bytes='22' compile_id='64' compiler='C1' level='3' iicount='784'/>
<call method='904' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='intrinsic'/>
<bc code='183' bci='9'/>
<method id='906' holder='899' name='ix' return='790' arguments='789' flags='2' bytes='10' compile_id='65' compiler='C1' level='3' iicount='784'/>
<call method='906' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<parse method='906'>
<parse_done stamp='0.410'/>
</parse>
<bc code='182' bci='12'/>
<klass id='863' name='sun/misc/Unsafe' flags='17'/>
<method id='908' holder='863' name='getLong' return='790' arguments='790' flags='257' bytes='0' compile_id='110' compile_kind='c2n' level='0' iicount='384'/>
<call method='908' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.410'/>
</parse>
<phase name='optimize_blocks' stamp='0.410'>
<phase_done name='optimize_blocks' stamp='0.410'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.410'>
<phase_done name='rangeCheckElimination' stamp='0.410'/>
</phase>
<phase name='optimize_null_checks' stamp='0.410'>
<phase_done name='optimize_null_checks' stamp='0.410'/>
</phase>
<phase_done name='buildIR' stamp='0.410'/>
</phase>
<phase name='emit_lir' stamp='0.410'>
<phase name='lirGeneration' stamp='0.410'>
<phase_done name='lirGeneration' stamp='0.410'/>
</phase>
<phase name='linearScan' stamp='0.410'>
<phase_done name='linearScan' stamp='0.410'/>
</phase>
<phase_done name='emit_lir' stamp='0.410'/>
</phase>
<phase name='codeemit' stamp='0.410'>
<phase_done name='codeemit' stamp='0.410'/>
</phase>
<phase name='codeinstall' stamp='0.410'>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.411'/>
</phase>
<code_cache total_blobs='348' nmethods='103' adapters='175' free_code_cache='334213440'/>
<task_done success='1' nmsize='496' count='393' inlined_bytes='10' stamp='0.411'/>
</task>
<task compile_id='113' method='java/util/Arrays copyOf ([CI)[C' bytes='19' count='824' iicount='824' level='3' stamp='0.411'>
<phase name='buildIR' stamp='0.411'>
<klass id='888' name='[C' flags='1041'/>
<type id='789' name='int'/>
<klass id='899' name='java/util/Arrays' flags='1'/>
<method id='900' holder='899' name='copyOf' return='888' arguments='888 789' flags='9' bytes='19' iicount='824'/>
<parse method='900'  stamp='0.411'>
<bc code='184' bci='11'/>
<klass id='902' name='java/lang/Math' flags='17'/>
<method id='903' holder='902' name='min' return='789' arguments='789 789' flags='9' bytes='11' compile_id='7' compiler='C1' level='3' iicount='4838'/>
<call method='903' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<parse_done stamp='0.411'/>
</parse>
<bc code='184' bci='14'/>
<type id='791' name='void'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='905' holder='802' name='arraycopy' return='791' arguments='796 789 796 789 789' flags='265' bytes='0' compile_id='8' compile_kind='c2n' level='0' iicount='640'/>
<call method='905' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.411'/>
</parse>
<phase name='optimize_blocks' stamp='0.411'>
<phase_done name='optimize_blocks' stamp='0.411'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.411'>
<phase_done name='rangeCheckElimination' stamp='0.411'/>
</phase>
<phase name='optimize_null_checks' stamp='0.411'>
<phase_done name='optimize_null_checks' stamp='0.411'/>
</phase>
<phase_done name='buildIR' stamp='0.411'/>
</phase>
<phase name='emit_lir' stamp='0.411'>
<phase name='lirGeneration' stamp='0.411'>
<phase_done name='lirGeneration' stamp='0.411'/>
</phase>
<phase name='linearScan' stamp='0.411'>
<phase_done name='linearScan' stamp='0.411'/>
</phase>
<phase_done name='emit_lir' stamp='0.411'/>
</phase>
<phase name='codeemit' stamp='0.411'>
<phase_done name='codeemit' stamp='0.411'/>
</phase>
<phase name='codeinstall' stamp='0.411'>
<phase_done name='codeinstall' stamp='0.412'/>
</phase>
<code_cache total_blobs='349' nmethods='104' adapters='175' free_code_cache='334211840'/>
<task_done success='1' nmsize='808' count='832' inlined_bytes='11' stamp='0.412'/>
</task>
<task compile_id='114' method='java/util/concurrent/ConcurrentHashMap putVal (Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' bytes='362' count='387' backedge_count='28' iicount='387' level='3' stamp='0.412'>
<phase name='buildIR' stamp='0.412'>
<klass id='796' name='java/lang/Object' flags='1'/>
<type id='783' name='boolean'/>
<klass id='899' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='900' holder='899' name='putVal' return='796' arguments='796 796 783' flags='16' bytes='362' iicount='387'/>
<parse method='900'  stamp='0.412'>
<bc code='182' bci='17'/>
<type id='789' name='int'/>
<method id='902' holder='796' name='hashCode' return='789' flags='257' bytes='0' compile_id='90' compile_kind='c2n' level='0' iicount='256'/>
<call method='902' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='20'/>
<method id='903' holder='899' name='spread' return='789' arguments='789' flags='24' bytes='10' compile_id='101' compiler='C1' level='3' iicount='412'/>
<call method='903' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<parse_done stamp='0.412'/>
</parse>
<bc code='184' bci='69'/>
<klass id='905' name='java/util/concurrent/ConcurrentHashMap$Node' flags='8'/>
<klass id='906' name='[Ljava/util/concurrent/ConcurrentHashMap$Node;' flags='1040'/>
<method id='907' holder='899' name='tabAt' return='905' arguments='906 789' flags='24' bytes='21' compile_id='55' compiler='C1' level='3' iicount='1915'/>
<call method='907' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='907'>
<bc code='182' bci='14'/>
<type id='790' name='long'/>
<klass id='863' name='sun/misc/Unsafe' flags='17'/>
<method id='912' holder='863' name='getObjectVolatile' return='796' arguments='796 790' flags='257' bytes='0' compile_id='56' compile_kind='c2n' level='0' iicount='384'/>
<call method='912' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.412'/>
</parse>
<bc code='183' bci='92'/>
<type id='791' name='void'/>
<method id='913' holder='905' name='&lt;init&gt;' return='791' arguments='789 796 796 905' flags='0' bytes='26' iicount='378'/>
<call method='913' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='913'>
<bc code='183' bci='1'/>
<method id='915' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='656892'/>
<call method='915' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='915'>
<parse_done stamp='0.412'/>
</parse>
<parse_done stamp='0.412'/>
</parse>
<bc code='184' bci='95'/>
<method id='917' holder='899' name='casTabAt' return='783' arguments='906 789 905 905' flags='24' bytes='20' compile_id='100' compiler='C1' level='3' iicount='423'/>
<call method='917' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='917'>
<bc code='182' bci='16'/>
<method id='919' holder='863' name='compareAndSwapObject' return='783' arguments='796 790 796 796' flags='273' bytes='0' compile_id='99' compile_kind='c2n' level='0' iicount='384'/>
<call method='919' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.412'/>
</parse>
<bc code='182' bci='121'/>
<method id='920' holder='899' name='helpTransfer' return='906' arguments='906 905' flags='16' bytes='132' iicount='1'/>
<call method='920' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='142'/>
<call method='907' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='907'>
<bc code='182' bci='14'/>
<call method='912' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.412'/>
</parse>
<bc code='182' bci='192'/>
<method id='922' holder='796' name='equals' return='783' arguments='796' flags='1' bytes='11' iicount='1'/>
<call method='922' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='244'/>
<call method='913' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='913'>
<bc code='183' bci='1'/>
<call method='915' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='915'>
<parse_done stamp='0.412'/>
</parse>
<parse_done stamp='0.412'/>
</parse>
<bc code='182' bci='282'/>
<klass id='924' name='java/util/concurrent/ConcurrentHashMap$TreeNode' unloaded='1'/>
<klass id='923' name='java/util/concurrent/ConcurrentHashMap$TreeBin' unloaded='1'/>
<method id='925' holder='923' name='putTreeVal' return='924' arguments='789 796 796' unloaded='1'/>
<call method='925' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='339'/>
<method id='926' holder='899' name='treeifyBin' return='791' arguments='906 789' flags='18' bytes='164' iicount='1'/>
<call method='926' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='357'/>
<method id='928' holder='899' name='addCount' return='791' arguments='790 789' flags='18' bytes='292' compile_id='97' compiler='C1' level='3' iicount='304'/>
<call method='928' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='49'/>
<method id='930' holder='899' name='initTable' return='906' flags='18' bytes='115' iicount='8'/>
<call method='930' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='12'/>
<klass id='895' name='java/lang/NullPointerException' flags='1'/>
<method id='932' holder='895' name='&lt;init&gt;' return='791' flags='1' bytes='5' iicount='1'/>
<call method='932' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.412'/>
</parse>
<phase name='optimize_blocks' stamp='0.412'>
<phase_done name='optimize_blocks' stamp='0.412'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.413'>
<phase_done name='rangeCheckElimination' stamp='0.413'/>
</phase>
<phase name='optimize_null_checks' stamp='0.413'>
<phase_done name='optimize_null_checks' stamp='0.413'/>
</phase>
<phase_done name='buildIR' stamp='0.413'/>
</phase>
<phase name='emit_lir' stamp='0.413'>
<phase name='lirGeneration' stamp='0.413'>
<phase_done name='lirGeneration' stamp='0.413'/>
</phase>
<phase name='linearScan' stamp='0.413'>
<phase_done name='linearScan' stamp='0.413'/>
</phase>
<phase_done name='emit_lir' stamp='0.413'/>
</phase>
<phase name='codeemit' stamp='0.413'>
<phase_done name='codeemit' stamp='0.413'/>
</phase>
<phase name='codeinstall' stamp='0.413'>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.440'/>
</phase>
<code_cache total_blobs='352' nmethods='105' adapters='177' free_code_cache='334197184'/>
<task_done success='1' nmsize='8952' count='395' backedge_count='28' inlined_bytes='126' stamp='0.440'/>
</task>
<task compile_id='111' method='java/nio/DirectLongBufferU put (IJ)Ljava/nio/LongBuffer;' bytes='18' count='408' iicount='408' level='3' stamp='0.440'>
<phase name='buildIR' stamp='0.440'>
<klass id='900' name='java/nio/LongBuffer' flags='1025'/>
<type id='789' name='int'/>
<type id='790' name='long'/>
<klass id='899' name='java/nio/DirectLongBufferU' flags='0'/>
<method id='901' holder='899' name='put' return='900' arguments='789 790' flags='1' bytes='18' iicount='408'/>
<parse method='901'  stamp='0.440'>
<bc code='182' bci='6'/>
<klass id='875' name='java/nio/Buffer' flags='1025'/>
<method id='905' holder='875' name='checkIndex' return='789' arguments='789' flags='16' bytes='22' compile_id='64' compiler='C1' level='3' iicount='801'/>
<call method='905' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='intrinsic'/>
<bc code='183' bci='9'/>
<method id='907' holder='899' name='ix' return='790' arguments='789' flags='2' bytes='10' compile_id='65' compiler='C1' level='3' iicount='816'/>
<call method='907' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<parse method='907'>
<parse_done stamp='0.440'/>
</parse>
<bc code='182' bci='13'/>
<type id='791' name='void'/>
<klass id='863' name='sun/misc/Unsafe' flags='17'/>
<method id='909' holder='863' name='putLong' return='791' arguments='790 790' flags='257' bytes='0' compile_id='106' compile_kind='c2n' level='0' iicount='384'/>
<call method='909' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.440'/>
</parse>
<phase name='optimize_blocks' stamp='0.440'>
<phase_done name='optimize_blocks' stamp='0.440'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.440'>
<phase_done name='rangeCheckElimination' stamp='0.440'/>
</phase>
<phase name='optimize_null_checks' stamp='0.440'>
<phase_done name='optimize_null_checks' stamp='0.440'/>
</phase>
<phase_done name='buildIR' stamp='0.440'/>
</phase>
<phase name='emit_lir' stamp='0.440'>
<phase name='lirGeneration' stamp='0.440'>
<phase_done name='lirGeneration' stamp='0.440'/>
</phase>
<phase name='linearScan' stamp='0.440'>
<phase_done name='linearScan' stamp='0.440'/>
</phase>
<phase_done name='emit_lir' stamp='0.440'/>
</phase>
<phase name='codeemit' stamp='0.440'>
<phase_done name='codeemit' stamp='0.440'/>
</phase>
<phase name='codeinstall' stamp='0.440'>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.441'/>
</phase>
<code_cache total_blobs='353' nmethods='106' adapters='177' free_code_cache='334195968'/>
<task_done success='1' nmsize='496' count='408' inlined_bytes='10' stamp='0.441'/>
</task>
<task compile_id='115' method='java/util/zip/ZipFile access$400 (Ljava/util/zip/ZipFile;)J' bytes='5' count='396' iicount='396' level='3' stamp='0.441'>
<phase name='buildIR' stamp='0.441'>
<type id='790' name='long'/>
<klass id='899' name='java/util/zip/ZipFile' flags='1'/>
<method id='900' holder='899' name='access$400' return='790' arguments='899' flags='4104' bytes='5' iicount='396'/>
<parse method='900'  stamp='0.441'>
<parse_done stamp='0.441'/>
</parse>
<phase name='optimize_blocks' stamp='0.441'>
<phase_done name='optimize_blocks' stamp='0.441'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.441'>
<phase_done name='rangeCheckElimination' stamp='0.441'/>
</phase>
<phase name='optimize_null_checks' stamp='0.441'>
<phase_done name='optimize_null_checks' stamp='0.441'/>
</phase>
<phase_done name='buildIR' stamp='0.441'/>
</phase>
<phase name='emit_lir' stamp='0.441'>
<phase name='lirGeneration' stamp='0.441'>
<phase_done name='lirGeneration' stamp='0.441'/>
</phase>
<phase name='linearScan' stamp='0.441'>
<phase_done name='linearScan' stamp='0.442'/>
</phase>
<phase_done name='emit_lir' stamp='0.442'/>
</phase>
<phase name='codeemit' stamp='0.442'>
<phase_done name='codeemit' stamp='0.442'/>
</phase>
<phase name='codeinstall' stamp='0.442'>
<phase_done name='codeinstall' stamp='0.442'/>
</phase>
<code_cache total_blobs='354' nmethods='107' adapters='177' free_code_cache='334195072'/>
<task_done success='1' nmsize='304' count='396' stamp='0.442'/>
</task>
<task compile_id='117' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='392' iicount='392' level='3' stamp='0.442'>
<phase name='buildIR' stamp='0.442'>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='899' name='java/util/HashMap' flags='1'/>
<method id='900' holder='899' name='put' return='796' arguments='796 796' flags='1' bytes='13' iicount='397'/>
<parse method='900'  stamp='0.442'>
<bc code='184' bci='2'/>
<type id='789' name='int'/>
<method id='902' holder='899' name='hash' return='789' arguments='796' flags='24' bytes='20' compile_id='43' compiler='C1' level='3' iicount='797'/>
<call method='902' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<bc code='182' bci='9'/>
<method id='904' holder='796' name='hashCode' return='789' flags='257' bytes='0' compile_id='90' compile_kind='c2n' level='0' iicount='256'/>
<call method='904' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.442'/>
</parse>
<bc code='182' bci='9'/>
<type id='783' name='boolean'/>
<method id='905' holder='899' name='putVal' return='796' arguments='789 796 796 783 783' flags='16' bytes='300' iicount='461'/>
<call method='905' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.442'/>
</parse>
<phase name='optimize_blocks' stamp='0.442'>
<phase_done name='optimize_blocks' stamp='0.442'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.442'>
<phase_done name='rangeCheckElimination' stamp='0.442'/>
</phase>
<phase name='optimize_null_checks' stamp='0.442'>
<phase_done name='optimize_null_checks' stamp='0.442'/>
</phase>
<phase_done name='buildIR' stamp='0.442'/>
</phase>
<phase name='emit_lir' stamp='0.442'>
<phase name='lirGeneration' stamp='0.442'>
<phase_done name='lirGeneration' stamp='0.442'/>
</phase>
<phase name='linearScan' stamp='0.442'>
<phase_done name='linearScan' stamp='0.442'/>
</phase>
<phase_done name='emit_lir' stamp='0.442'/>
</phase>
<phase name='codeemit' stamp='0.442'>
<phase_done name='codeemit' stamp='0.442'/>
</phase>
<phase name='codeinstall' stamp='0.442'>
<phase_done name='codeinstall' stamp='0.444'/>
</phase>
<code_cache total_blobs='355' nmethods='108' adapters='177' free_code_cache='334193024'/>
<task_done success='1' nmsize='1176' count='607' inlined_bytes='20' stamp='0.444'/>
</task>
<task compile_id='118' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='607' backedge_count='13' iicount='607' level='3' stamp='0.444'>
<phase name='buildIR' stamp='0.444'>
<klass id='796' name='java/lang/Object' flags='1'/>
<type id='789' name='int'/>
<type id='783' name='boolean'/>
<klass id='899' name='java/util/HashMap' flags='1'/>
<method id='900' holder='899' name='putVal' return='796' arguments='789 796 796 783 783' flags='16' bytes='300' iicount='607'/>
<parse method='900'  stamp='0.444'>
<bc code='182' bci='20'/>
<klass id='903' name='[Ljava/util/HashMap$Node;' flags='1040'/>
<method id='904' holder='899' name='resize' return='903' flags='16' bytes='359' iicount='25'/>
<call method='904' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='56'/>
<klass id='902' name='java/util/HashMap$Node' flags='8'/>
<method id='906' holder='899' name='newNode' return='902' arguments='789 796 796 902' flags='0' bytes='13' iicount='657'/>
<call method='906' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='91'/>
<method id='907' holder='796' name='equals' return='783' arguments='796' flags='1' bytes='11' iicount='1'/>
<call method='907' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='123'/>
<klass id='908' name='java/util/HashMap$TreeNode' flags='24'/>
<method id='909' holder='908' name='putTreeVal' return='908' arguments='899 903 789 796 796' flags='16' bytes='314' iicount='1'/>
<call method='909' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='152'/>
<call method='906' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='169'/>
<type id='791' name='void'/>
<method id='910' holder='899' name='treeifyBin' return='791' arguments='903 789' flags='16' bytes='110' iicount='1'/>
<call method='910' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='203'/>
<call method='907' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='253'/>
<method id='912' holder='899' name='afterNodeAccess' return='791' arguments='902' flags='0' bytes='1' iicount='65'/>
<call method='912' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='288'/>
<call method='904' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='295'/>
<method id='913' holder='899' name='afterNodeInsertion' return='791' arguments='783' flags='0' bytes='1' iicount='831'/>
<call method='913' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.444'/>
</parse>
<phase name='optimize_blocks' stamp='0.444'>
<phase_done name='optimize_blocks' stamp='0.444'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.444'>
<phase_done name='rangeCheckElimination' stamp='0.444'/>
</phase>
<phase name='optimize_null_checks' stamp='0.444'>
<phase_done name='optimize_null_checks' stamp='0.444'/>
</phase>
<phase_done name='buildIR' stamp='0.444'/>
</phase>
<phase name='emit_lir' stamp='0.444'>
<phase name='lirGeneration' stamp='0.444'>
<phase_done name='lirGeneration' stamp='0.444'/>
</phase>
<phase name='linearScan' stamp='0.444'>
<phase_done name='linearScan' stamp='0.444'/>
</phase>
<phase_done name='emit_lir' stamp='0.444'/>
</phase>
<phase name='codeemit' stamp='0.444'>
<phase_done name='codeemit' stamp='0.444'/>
</phase>
<phase name='codeinstall' stamp='0.444'>
<phase_done name='codeinstall' stamp='0.468'/>
</phase>
<code_cache total_blobs='356' nmethods='109' adapters='177' free_code_cache='334181888'/>
<task_done success='1' nmsize='7896' count='1532' backedge_count='68' stamp='0.468'/>
</task>
<task compile_id='120' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='1467' iicount='1467' level='3' stamp='0.468'>
<phase name='buildIR' stamp='0.468'>
<type id='791' name='void'/>
<type id='789' name='int'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='899' name='java/util/HashMap$Node' flags='8'/>
<method id='900' holder='899' name='&lt;init&gt;' return='791' arguments='789 796 796 899' flags='0' bytes='26' iicount='1467'/>
<parse method='900'  stamp='0.468'>
<bc code='183' bci='1'/>
<method id='902' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='789039'/>
<call method='902' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='899'/>
<parse_done stamp='0.468'/>
</parse>
<parse_done stamp='0.468'/>
</parse>
<phase name='optimize_blocks' stamp='0.468'>
<phase_done name='optimize_blocks' stamp='0.468'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.468'>
<phase_done name='rangeCheckElimination' stamp='0.468'/>
</phase>
<phase name='optimize_null_checks' stamp='0.468'>
<phase_done name='optimize_null_checks' stamp='0.468'/>
</phase>
<phase_done name='buildIR' stamp='0.468'/>
</phase>
<phase name='emit_lir' stamp='0.468'>
<phase name='lirGeneration' stamp='0.468'>
<phase_done name='lirGeneration' stamp='0.468'/>
</phase>
<phase name='linearScan' stamp='0.468'>
<phase_done name='linearScan' stamp='0.469'/>
</phase>
<phase_done name='emit_lir' stamp='0.469'/>
</phase>
<phase name='codeemit' stamp='0.469'>
<phase_done name='codeemit' stamp='0.469'/>
</phase>
<phase name='codeinstall' stamp='0.469'>
<dependency type='no_finalizable_subclasses' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.470'/>
</phase>
<code_cache total_blobs='357' nmethods='110' adapters='177' free_code_cache='334180736'/>
<task_done success='1' nmsize='496' count='1467' inlined_bytes='1' stamp='0.470'/>
</task>
<task compile_id='121' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='1437' iicount='1437' level='3' stamp='0.470'>
<phase name='buildIR' stamp='0.470'>
<klass id='900' name='java/util/HashMap$Node' flags='8'/>
<type id='789' name='int'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='899' name='java/util/HashMap' flags='1'/>
<method id='901' holder='899' name='newNode' return='900' arguments='789 796 796 900' flags='0' bytes='13' iicount='1437'/>
<parse method='901'  stamp='0.470'>
<bc code='183' bci='9'/>
<type id='791' name='void'/>
<method id='903' holder='900' name='&lt;init&gt;' return='791' arguments='789 796 796 900' flags='0' bytes='26' compile_id='120' compiler='C1' level='3' iicount='1467'/>
<call method='903' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<bc code='183' bci='1'/>
<method id='905' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='791439'/>
<call method='905' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='905'>
<parse_done stamp='0.470'/>
</parse>
<parse_done stamp='0.470'/>
</parse>
<parse_done stamp='0.470'/>
</parse>
<phase name='optimize_blocks' stamp='0.470'>
<phase_done name='optimize_blocks' stamp='0.470'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.470'>
<phase_done name='rangeCheckElimination' stamp='0.470'/>
</phase>
<phase name='optimize_null_checks' stamp='0.470'>
<phase_done name='optimize_null_checks' stamp='0.470'/>
</phase>
<phase_done name='buildIR' stamp='0.470'/>
</phase>
<phase name='emit_lir' stamp='0.470'>
<phase name='lirGeneration' stamp='0.470'>
<phase_done name='lirGeneration' stamp='0.470'/>
</phase>
<phase name='linearScan' stamp='0.470'>
<phase_done name='linearScan' stamp='0.470'/>
</phase>
<phase_done name='emit_lir' stamp='0.470'/>
</phase>
<phase name='codeemit' stamp='0.470'>
<phase_done name='codeemit' stamp='0.470'/>
</phase>
<phase name='codeinstall' stamp='0.470'>
<phase_done name='codeinstall' stamp='0.471'/>
</phase>
<code_cache total_blobs='358' nmethods='111' adapters='177' free_code_cache='334179264'/>
<task_done success='1' nmsize='688' count='1437' inlined_bytes='27' stamp='0.471'/>
</task>
<task compile_id='122' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='1437' iicount='1437' level='3' stamp='0.471'>
<phase name='buildIR' stamp='0.471'>
<type id='791' name='void'/>
<type id='783' name='boolean'/>
<klass id='899' name='java/util/HashMap' flags='1'/>
<method id='900' holder='899' name='afterNodeInsertion' return='791' arguments='783' flags='0' bytes='1' iicount='1437'/>
<parse method='900'  stamp='0.471'>
<parse_done stamp='0.471'/>
</parse>
<phase name='optimize_blocks' stamp='0.471'>
<phase_done name='optimize_blocks' stamp='0.471'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.471'>
<phase_done name='rangeCheckElimination' stamp='0.471'/>
</phase>
<phase name='optimize_null_checks' stamp='0.471'>
<phase_done name='optimize_null_checks' stamp='0.471'/>
</phase>
<phase_done name='buildIR' stamp='0.471'/>
</phase>
<phase name='emit_lir' stamp='0.471'>
<phase name='lirGeneration' stamp='0.471'>
<phase_done name='lirGeneration' stamp='0.471'/>
</phase>
<phase name='linearScan' stamp='0.471'>
<phase_done name='linearScan' stamp='0.471'/>
</phase>
<phase_done name='emit_lir' stamp='0.471'/>
</phase>
<phase name='codeemit' stamp='0.471'>
<phase_done name='codeemit' stamp='0.471'/>
</phase>
<phase name='codeinstall' stamp='0.471'>
<phase_done name='codeinstall' stamp='0.472'/>
</phase>
<code_cache total_blobs='359' nmethods='112' adapters='177' free_code_cache='334178432'/>
<task_done success='1' nmsize='336' count='1437' stamp='0.472'/>
</task>
<task compile_id='104' method='java/lang/Character toUpperCase (I)I' bytes='9' count='418' iicount='418' level='3' stamp='0.472'>
<phase name='buildIR' stamp='0.472'>
<type id='789' name='int'/>
<klass id='877' name='java/lang/Character' flags='17'/>
<method id='899' holder='877' name='toUpperCase' return='789' arguments='789' flags='9' bytes='9' iicount='418'/>
<parse method='899'  stamp='0.472'>
<bc code='184' bci='1'/>
<klass id='902' name='java/lang/CharacterData' flags='1024'/>
<method id='903' holder='902' name='of' return='902' arguments='789' flags='24' bytes='120' compile_id='34' compiler='C1' level='3' iicount='4244'/>
<call method='903' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='905' holder='902' name='toUpperCase' return='789' arguments='789' flags='1024' bytes='0' iicount='1'/>
<call method='905' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.472'/>
</parse>
<phase name='optimize_blocks' stamp='0.472'>
<phase_done name='optimize_blocks' stamp='0.472'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.472'>
<phase_done name='rangeCheckElimination' stamp='0.472'/>
</phase>
<phase name='optimize_null_checks' stamp='0.472'>
<phase_done name='optimize_null_checks' stamp='0.472'/>
</phase>
<phase_done name='buildIR' stamp='0.472'/>
</phase>
<phase name='emit_lir' stamp='0.472'>
<phase name='lirGeneration' stamp='0.472'>
<phase_done name='lirGeneration' stamp='0.472'/>
</phase>
<phase name='linearScan' stamp='0.472'>
<phase_done name='linearScan' stamp='0.472'/>
</phase>
<phase_done name='emit_lir' stamp='0.472'/>
</phase>
<phase name='codeemit' stamp='0.472'>
<phase_done name='codeemit' stamp='0.472'/>
</phase>
<phase name='codeinstall' stamp='0.472'>
<phase_done name='codeinstall' stamp='0.473'/>
</phase>
<code_cache total_blobs='360' nmethods='113' adapters='177' free_code_cache='334176832'/>
<task_done success='1' nmsize='920' count='418' stamp='0.473'/>
</task>
<task compile_id='123' method='java/lang/Number &lt;init&gt; ()V' bytes='5' count='546' iicount='546' level='3' stamp='0.473'>
<phase name='buildIR' stamp='0.473'>
<type id='791' name='void'/>
<klass id='878' name='java/lang/Number' flags='1025'/>
<method id='899' holder='878' name='&lt;init&gt;' return='791' flags='1' bytes='5' iicount='546'/>
<parse method='899'  stamp='0.473'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='901' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='797917'/>
<call method='901' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='878'/>
<parse_done stamp='0.473'/>
</parse>
<parse_done stamp='0.473'/>
</parse>
<phase name='optimize_blocks' stamp='0.473'>
<phase_done name='optimize_blocks' stamp='0.473'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.473'>
<phase_done name='rangeCheckElimination' stamp='0.473'/>
</phase>
<phase name='optimize_null_checks' stamp='0.473'>
<phase_done name='optimize_null_checks' stamp='0.473'/>
</phase>
<phase_done name='buildIR' stamp='0.473'/>
</phase>
<phase name='emit_lir' stamp='0.473'>
<phase name='lirGeneration' stamp='0.473'>
<phase_done name='lirGeneration' stamp='0.473'/>
</phase>
<phase name='linearScan' stamp='0.473'>
<phase_done name='linearScan' stamp='0.473'/>
</phase>
<phase_done name='emit_lir' stamp='0.473'/>
</phase>
<phase name='codeemit' stamp='0.473'>
<phase_done name='codeemit' stamp='0.473'/>
</phase>
<phase name='codeinstall' stamp='0.473'>
<dependency type='no_finalizable_subclasses' ctxk='878'/>
<phase_done name='codeinstall' stamp='0.474'/>
</phase>
<code_cache total_blobs='361' nmethods='114' adapters='177' free_code_cache='334175872'/>
<task_done success='1' nmsize='432' count='562' inlined_bytes='1' stamp='0.474'/>
</task>
<task compile_id='124' method='java/util/HashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='23' count='399' iicount='399' level='3' stamp='0.474'>
<phase name='buildIR' stamp='0.474'>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='899' name='java/util/HashMap' flags='1'/>
<method id='900' holder='899' name='get' return='796' arguments='796' flags='1' bytes='23' iicount='400'/>
<parse method='900'  stamp='0.474'>
<bc code='184' bci='2'/>
<type id='789' name='int'/>
<method id='902' holder='899' name='hash' return='789' arguments='796' flags='24' bytes='20' compile_id='43' compiler='C1' level='3' iicount='2039'/>
<call method='902' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<bc code='182' bci='9'/>
<method id='904' holder='796' name='hashCode' return='789' flags='257' bytes='0' compile_id='90' compile_kind='c2n' level='0' iicount='256'/>
<call method='904' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.474'/>
</parse>
<bc code='182' bci='6'/>
<klass id='905' name='java/util/HashMap$Node' flags='8'/>
<method id='906' holder='899' name='getNode' return='905' arguments='789 796' flags='16' bytes='148' iicount='511'/>
<call method='906' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.474'/>
</parse>
<phase name='optimize_blocks' stamp='0.474'>
<phase_done name='optimize_blocks' stamp='0.474'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.474'>
<phase_done name='rangeCheckElimination' stamp='0.474'/>
</phase>
<phase name='optimize_null_checks' stamp='0.474'>
<phase_done name='optimize_null_checks' stamp='0.474'/>
</phase>
<phase_done name='buildIR' stamp='0.474'/>
</phase>
<phase name='emit_lir' stamp='0.474'>
<phase name='lirGeneration' stamp='0.474'>
<phase_done name='lirGeneration' stamp='0.474'/>
</phase>
<phase name='linearScan' stamp='0.474'>
<phase_done name='linearScan' stamp='0.474'/>
</phase>
<phase_done name='emit_lir' stamp='0.474'/>
</phase>
<phase name='codeemit' stamp='0.474'>
<phase_done name='codeemit' stamp='0.474'/>
</phase>
<phase name='codeinstall' stamp='0.474'>
<phase_done name='codeinstall' stamp='0.475'/>
</phase>
<code_cache total_blobs='362' nmethods='115' adapters='177' free_code_cache='334173632'/>
<task_done success='1' nmsize='1272' count='477' inlined_bytes='20' stamp='0.475'/>
</task>
<task compile_id='126' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='581' backedge_count='3' iicount='581' level='3' stamp='0.475'>
<phase name='buildIR' stamp='0.475'>
<klass id='900' name='java/util/HashMap$Node' flags='8'/>
<type id='789' name='int'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='899' name='java/util/HashMap' flags='1'/>
<method id='901' holder='899' name='getNode' return='900' arguments='789 796' flags='16' bytes='148' iicount='581'/>
<parse method='901'  stamp='0.475'>
<bc code='182' bci='59'/>
<type id='783' name='boolean'/>
<method id='904' holder='796' name='equals' return='783' arguments='796' flags='1' bytes='11' iicount='1'/>
<call method='904' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='94'/>
<klass id='905' name='java/util/HashMap$TreeNode' flags='24'/>
<method id='906' holder='905' name='getTreeNode' return='905' arguments='789 796' flags='16' bytes='22' iicount='1'/>
<call method='906' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='126'/>
<call method='904' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.475'/>
</parse>
<phase name='optimize_blocks' stamp='0.475'>
<phase_done name='optimize_blocks' stamp='0.475'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.475'>
<phase_done name='rangeCheckElimination' stamp='0.475'/>
</phase>
<phase name='optimize_null_checks' stamp='0.475'>
<phase_done name='optimize_null_checks' stamp='0.475'/>
</phase>
<phase_done name='buildIR' stamp='0.475'/>
</phase>
<phase name='emit_lir' stamp='0.475'>
<phase name='lirGeneration' stamp='0.475'>
<phase_done name='lirGeneration' stamp='0.475'/>
</phase>
<phase name='linearScan' stamp='0.475'>
<phase_done name='linearScan' stamp='0.475'/>
</phase>
<phase_done name='emit_lir' stamp='0.475'/>
</phase>
<phase name='codeemit' stamp='0.475'>
<phase_done name='codeemit' stamp='0.475'/>
</phase>
<phase name='codeinstall' stamp='0.475'>
<phase_done name='codeinstall' stamp='0.500'/>
</phase>
<code_cache total_blobs='363' nmethods='116' adapters='177' free_code_cache='334167680'/>
<task_done success='1' nmsize='4200' count='584' backedge_count='3' stamp='0.500'/>
</task>
<task compile_id='125' method='java/lang/Integer intValue ()I' bytes='5' count='206' iicount='206' level='1' stamp='0.500'>
<phase name='buildIR' stamp='0.500'>
<type id='789' name='int'/>
<klass id='883' name='java/lang/Integer' flags='17'/>
<method id='899' holder='883' name='intValue' return='789' flags='1' bytes='5' iicount='206'/>
<parse method='899'  stamp='0.500'>
<parse_done stamp='0.500'/>
</parse>
<phase name='optimize_blocks' stamp='0.500'>
<phase_done name='optimize_blocks' stamp='0.500'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.500'>
<phase_done name='rangeCheckElimination' stamp='0.500'/>
</phase>
<phase name='optimize_null_checks' stamp='0.500'>
<phase_done name='optimize_null_checks' stamp='0.500'/>
</phase>
<phase_done name='buildIR' stamp='0.500'/>
</phase>
<phase name='emit_lir' stamp='0.500'>
<phase name='lirGeneration' stamp='0.500'>
<phase_done name='lirGeneration' stamp='0.500'/>
</phase>
<phase name='linearScan' stamp='0.500'>
<phase_done name='linearScan' stamp='0.500'/>
</phase>
<phase_done name='emit_lir' stamp='0.500'/>
</phase>
<phase name='codeemit' stamp='0.500'>
<phase_done name='codeemit' stamp='0.500'/>
</phase>
<phase name='codeinstall' stamp='0.500'>
<phase_done name='codeinstall' stamp='0.501'/>
</phase>
<code_cache total_blobs='364' nmethods='117' adapters='177' free_code_cache='334166912'/>
<task_done success='1' nmsize='272' count='206' stamp='0.501'/>
</task>
<task compile_id='105' method='java/lang/CharacterDataLatin1 toUpperCase (I)I' bytes='53' count='422' iicount='422' level='3' stamp='0.501'>
<phase name='buildIR' stamp='0.501'>
<type id='789' name='int'/>
<klass id='899' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='900' holder='899' name='toUpperCase' return='789' arguments='789' flags='0' bytes='53' iicount='422'/>
<parse method='900'  stamp='0.501'>
<bc code='182' bci='4'/>
<method id='902' holder='899' name='getProperties' return='789' arguments='789' flags='0' bytes='11' compile_id='35' compiler='C1' level='3' iicount='4315'/>
<call method='902' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='899'/>
<parse method='902'>
<parse_done stamp='0.501'/>
</parse>
<parse_done stamp='0.501'/>
</parse>
<phase name='optimize_blocks' stamp='0.501'>
<phase_done name='optimize_blocks' stamp='0.501'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.501'>
<phase_done name='rangeCheckElimination' stamp='0.501'/>
</phase>
<phase name='optimize_null_checks' stamp='0.501'>
<phase_done name='optimize_null_checks' stamp='0.501'/>
</phase>
<phase_done name='buildIR' stamp='0.501'/>
</phase>
<phase name='emit_lir' stamp='0.501'>
<phase name='lirGeneration' stamp='0.501'>
<phase_done name='lirGeneration' stamp='0.501'/>
</phase>
<phase name='linearScan' stamp='0.501'>
<phase_done name='linearScan' stamp='0.501'/>
</phase>
<phase_done name='emit_lir' stamp='0.501'/>
</phase>
<phase name='codeemit' stamp='0.501'>
<phase_done name='codeemit' stamp='0.501'/>
</phase>
<phase name='codeinstall' stamp='0.501'>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.502'/>
</phase>
<code_cache total_blobs='365' nmethods='118' adapters='177' free_code_cache='334165376'/>
<task_done success='1' nmsize='720' count='422' inlined_bytes='11' stamp='0.502'/>
</task>
<task compile_id='116' method='java/lang/String equalsIgnoreCase (Ljava/lang/String;)Z' bytes='48' count='397' iicount='397' level='3' stamp='0.502'>
<phase name='buildIR' stamp='0.502'>
<type id='783' name='boolean'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='equalsIgnoreCase' return='783' arguments='797' flags='1' bytes='48' iicount='397'/>
<parse method='899'  stamp='0.502'>
<bc code='182' bci='36'/>
<type id='789' name='int'/>
<method id='901' holder='797' name='regionMatches' return='783' arguments='783 789 797 789 789' flags='1' bytes='149' iicount='220'/>
<call method='901' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.502'/>
</parse>
<phase name='optimize_blocks' stamp='0.502'>
<phase_done name='optimize_blocks' stamp='0.502'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.502'>
<phase_done name='rangeCheckElimination' stamp='0.502'/>
</phase>
<phase name='optimize_null_checks' stamp='0.502'>
<phase_done name='optimize_null_checks' stamp='0.502'/>
</phase>
<phase_done name='buildIR' stamp='0.502'/>
</phase>
<phase name='emit_lir' stamp='0.502'>
<phase name='lirGeneration' stamp='0.502'>
<phase_done name='lirGeneration' stamp='0.502'/>
</phase>
<phase name='linearScan' stamp='0.502'>
<phase_done name='linearScan' stamp='0.502'/>
</phase>
<phase_done name='emit_lir' stamp='0.502'/>
</phase>
<phase name='codeemit' stamp='0.502'>
<phase_done name='codeemit' stamp='0.502'/>
</phase>
<phase name='codeinstall' stamp='0.502'>
<phase_done name='codeinstall' stamp='0.504'/>
</phase>
<code_cache total_blobs='366' nmethods='119' adapters='177' free_code_cache='334163712'/>
<task_done success='1' nmsize='744' count='397' stamp='0.504'/>
</task>
<task compile_id='127' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='386' iicount='386' level='3' stamp='0.504'>
<phase name='buildIR' stamp='0.504'>
<type id='783' name='boolean'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='startsWith' return='783' arguments='797' flags='1' bytes='7' iicount='386'/>
<parse method='899'  stamp='0.504'>
<bc code='182' bci='3'/>
<type id='789' name='int'/>
<method id='901' holder='797' name='startsWith' return='783' arguments='797 789' flags='1' bytes='72' compile_id='62' compiler='C1' level='3' iicount='833'/>
<call method='901' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.504'/>
</parse>
<phase name='optimize_blocks' stamp='0.504'>
<phase_done name='optimize_blocks' stamp='0.504'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.504'>
<phase_done name='rangeCheckElimination' stamp='0.504'/>
</phase>
<phase name='optimize_null_checks' stamp='0.504'>
<phase_done name='optimize_null_checks' stamp='0.504'/>
</phase>
<phase_done name='buildIR' stamp='0.504'/>
</phase>
<phase name='emit_lir' stamp='0.504'>
<phase name='lirGeneration' stamp='0.504'>
<phase_done name='lirGeneration' stamp='0.504'/>
</phase>
<phase name='linearScan' stamp='0.504'>
<phase_done name='linearScan' stamp='0.504'/>
</phase>
<phase_done name='emit_lir' stamp='0.504'/>
</phase>
<phase name='codeemit' stamp='0.504'>
<phase_done name='codeemit' stamp='0.504'/>
</phase>
<phase name='codeinstall' stamp='0.504'>
<phase_done name='codeinstall' stamp='0.531'/>
</phase>
<code_cache total_blobs='368' nmethods='120' adapters='177' free_code_cache='334161792'/>
<task_done success='1' nmsize='392' count='386' stamp='0.531'/>
</task>
<task compile_id='128' method='java/lang/String indexOf (Ljava/lang/String;I)I' bytes='25' count='269' iicount='269' level='3' stamp='0.531'>
<phase name='buildIR' stamp='0.531'>
<type id='789' name='int'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='indexOf' return='789' arguments='797 789' flags='1' bytes='25' iicount='269'/>
<parse method='899'  stamp='0.531'>
<bc code='184' bci='21'/>
<klass id='888' name='[C' flags='1041'/>
<method id='901' holder='797' name='indexOf' return='789' arguments='888 789 789 888 789 789 789' flags='8' bytes='166' compile_id='69' compiler='C1' level='3' iicount='269'/>
<call method='901' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.531'/>
</parse>
<phase name='optimize_blocks' stamp='0.531'>
<phase_done name='optimize_blocks' stamp='0.531'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.531'>
<phase_done name='rangeCheckElimination' stamp='0.531'/>
</phase>
<phase name='optimize_null_checks' stamp='0.531'>
<phase_done name='optimize_null_checks' stamp='0.531'/>
</phase>
<phase_done name='buildIR' stamp='0.531'/>
</phase>
<phase name='emit_lir' stamp='0.531'>
<phase name='lirGeneration' stamp='0.531'>
<phase_done name='lirGeneration' stamp='0.531'/>
</phase>
<phase name='linearScan' stamp='0.531'>
<phase_done name='linearScan' stamp='0.531'/>
</phase>
<phase_done name='emit_lir' stamp='0.531'/>
</phase>
<phase name='codeemit' stamp='0.531'>
<phase_done name='codeemit' stamp='0.531'/>
</phase>
<phase name='codeinstall' stamp='0.531'>
<phase_done name='codeinstall' stamp='0.533'/>
</phase>
<code_cache total_blobs='369' nmethods='122' adapters='177' free_code_cache='334160576'/>
<task_done success='1' nmsize='456' count='269' stamp='0.533'/>
</task>
<task compile_id='130' method='java/lang/ThreadLocal get ()Ljava/lang/Object;' bytes='38' count='256' iicount='256' level='3' stamp='0.533'>
<phase name='buildIR' stamp='0.533'>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='899' name='java/lang/ThreadLocal' flags='1'/>
<method id='900' holder='899' name='get' return='796' flags='1' bytes='38' iicount='256'/>
<parse method='900'  stamp='0.533'>
<bc code='184' bci='0'/>
<klass id='829' name='java/lang/Thread' flags='1'/>
<method id='902' holder='829' name='currentThread' return='829' flags='265' bytes='0' compile_id='129' compile_kind='c2n' level='0' iicount='384'/>
<call method='902' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='6'/>
<klass id='904' name='java/lang/ThreadLocal$ThreadLocalMap' flags='8'/>
<method id='905' holder='899' name='getMap' return='904' arguments='829' flags='0' bytes='5' compile_id='41' compiler='C1' level='3' iicount='272'/>
<call method='905' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='899' x='905'/>
<inline_success reason='receiver is statically known'/>
<parse method='905'>
<parse_done stamp='0.533'/>
</parse>
<bc code='184' bci='16'/>
<klass id='907' name='java/lang/ThreadLocal$ThreadLocalMap$Entry' flags='8'/>
<method id='908' holder='904' name='access$000' return='907' arguments='904 899' flags='4104' bytes='6' iicount='262'/>
<call method='908' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='908'>
<bc code='183' bci='2'/>
<method id='910' holder='904' name='getEntry' return='907' arguments='899' flags='2' bytes='42' iicount='262'/>
<call method='910' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='904'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.533'/>
</parse>
<bc code='183' bci='34'/>
<method id='912' holder='899' name='setInitialValue' return='796' flags='2' bytes='36' iicount='7'/>
<call method='912' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.533'/>
</parse>
<phase name='optimize_blocks' stamp='0.533'>
<phase_done name='optimize_blocks' stamp='0.533'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.533'>
<phase_done name='rangeCheckElimination' stamp='0.533'/>
</phase>
<phase name='optimize_null_checks' stamp='0.533'>
<phase_done name='optimize_null_checks' stamp='0.533'/>
</phase>
<phase_done name='buildIR' stamp='0.533'/>
</phase>
<phase name='emit_lir' stamp='0.533'>
<phase name='lirGeneration' stamp='0.533'>
<phase_done name='lirGeneration' stamp='0.533'/>
</phase>
<phase name='linearScan' stamp='0.533'>
<phase_done name='linearScan' stamp='0.533'/>
</phase>
<phase_done name='emit_lir' stamp='0.533'/>
</phase>
<phase name='codeemit' stamp='0.533'>
<phase_done name='codeemit' stamp='0.533'/>
</phase>
<phase name='codeinstall' stamp='0.533'>
<dependency type='leaf_type' ctxk='904'/>
<dependency type='unique_concrete_method' ctxk='899' x='905'/>
<phase_done name='codeinstall' stamp='0.535'/>
</phase>
<code_cache total_blobs='370' nmethods='123' adapters='177' free_code_cache='334158272'/>
<task_done success='1' nmsize='1304' count='285' inlined_bytes='11' stamp='0.535'/>
</task>
<task compile_id='131' method='java/lang/ThreadLocal$ThreadLocalMap access$000 (Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;' bytes='6' count='283' iicount='283' level='3' stamp='0.535'>
<phase name='buildIR' stamp='0.535'>
<klass id='901' name='java/lang/ThreadLocal$ThreadLocalMap$Entry' flags='8'/>
<klass id='899' name='java/lang/ThreadLocal$ThreadLocalMap' flags='8'/>
<klass id='900' name='java/lang/ThreadLocal' flags='1'/>
<method id='902' holder='899' name='access$000' return='901' arguments='899 900' flags='4104' bytes='6' iicount='283'/>
<parse method='902'  stamp='0.535'>
<bc code='183' bci='2'/>
<method id='904' holder='899' name='getEntry' return='901' arguments='900' flags='2' bytes='42' iicount='283'/>
<call method='904' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.535'/>
</parse>
<phase name='optimize_blocks' stamp='0.535'>
<phase_done name='optimize_blocks' stamp='0.535'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.535'>
<phase_done name='rangeCheckElimination' stamp='0.535'/>
</phase>
<phase name='optimize_null_checks' stamp='0.535'>
<phase_done name='optimize_null_checks' stamp='0.535'/>
</phase>
<phase_done name='buildIR' stamp='0.535'/>
</phase>
<phase name='emit_lir' stamp='0.535'>
<phase name='lirGeneration' stamp='0.535'>
<phase_done name='lirGeneration' stamp='0.535'/>
</phase>
<phase name='linearScan' stamp='0.535'>
<phase_done name='linearScan' stamp='0.535'/>
</phase>
<phase_done name='emit_lir' stamp='0.535'/>
</phase>
<phase name='codeemit' stamp='0.535'>
<phase_done name='codeemit' stamp='0.535'/>
</phase>
<phase name='codeinstall' stamp='0.535'>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.536'/>
</phase>
<code_cache total_blobs='371' nmethods='124' adapters='177' free_code_cache='334157312'/>
<task_done success='1' nmsize='360' count='284' stamp='0.536'/>
</task>
<task compile_id='132' method='java/lang/ThreadLocal$ThreadLocalMap getEntry (Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;' bytes='42' count='284' iicount='284' level='3' stamp='0.536'>
<phase name='buildIR' stamp='0.536'>
<klass id='901' name='java/lang/ThreadLocal$ThreadLocalMap$Entry' flags='8'/>
<klass id='900' name='java/lang/ThreadLocal' flags='1'/>
<klass id='899' name='java/lang/ThreadLocal$ThreadLocalMap' flags='8'/>
<method id='902' holder='899' name='getEntry' return='901' arguments='900' flags='2' bytes='42' iicount='284'/>
<parse method='902'  stamp='0.536'>
<bc code='184' bci='1'/>
<type id='789' name='int'/>
<method id='904' holder='900' name='access$400' return='789' arguments='900' flags='4104' bytes='5' compile_id='42' compiler='C1' level='1' iicount='256'/>
<call method='904' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='904'>
<parse_done stamp='0.536'/>
</parse>
<bc code='182' bci='25'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='822' name='java/lang/ref/Reference' flags='1025'/>
<method id='907' holder='822' name='get' return='796' flags='1' bytes='5' compile_id='29' compiler='C1' level='1' iicount='384'/>
<call method='907' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='901'/>
<inline_success reason='intrinsic'/>
<bc code='183' bci='38'/>
<method id='909' holder='899' name='getEntryAfterMiss' return='901' arguments='900 789 901' flags='2' bytes='63' iicount='5'/>
<call method='909' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.536'/>
</parse>
<phase name='optimize_blocks' stamp='0.536'>
<phase_done name='optimize_blocks' stamp='0.536'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.536'>
<phase_done name='rangeCheckElimination' stamp='0.536'/>
</phase>
<phase name='optimize_null_checks' stamp='0.536'>
<phase_done name='optimize_null_checks' stamp='0.536'/>
</phase>
<phase_done name='buildIR' stamp='0.536'/>
</phase>
<phase name='emit_lir' stamp='0.536'>
<phase name='lirGeneration' stamp='0.536'>
<phase_done name='lirGeneration' stamp='0.536'/>
</phase>
<phase name='linearScan' stamp='0.536'>
<phase_done name='linearScan' stamp='0.536'/>
</phase>
<phase_done name='emit_lir' stamp='0.536'/>
</phase>
<phase name='codeemit' stamp='0.536'>
<phase_done name='codeemit' stamp='0.536'/>
</phase>
<phase name='codeinstall' stamp='0.536'>
<dependency type='leaf_type' ctxk='901'/>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.538'/>
</phase>
<code_cache total_blobs='372' nmethods='125' adapters='177' free_code_cache='334155264'/>
<task_done success='1' nmsize='1128' count='284' inlined_bytes='5' stamp='0.538'/>
</task>
<task compile_id='133' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='158' iicount='158' level='1' stamp='0.538'>
<phase name='buildIR' stamp='0.538'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='866' name='java/io/File' flags='1'/>
<method id='899' holder='866' name='getPath' return='797' flags='1' bytes='5' iicount='158'/>
<parse method='899'  stamp='0.538'>
<parse_done stamp='0.538'/>
</parse>
<phase name='optimize_blocks' stamp='0.538'>
<phase_done name='optimize_blocks' stamp='0.538'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.538'>
<phase_done name='rangeCheckElimination' stamp='0.538'/>
</phase>
<phase name='optimize_null_checks' stamp='0.538'>
<phase_done name='optimize_null_checks' stamp='0.538'/>
</phase>
<phase_done name='buildIR' stamp='0.538'/>
</phase>
<phase name='emit_lir' stamp='0.538'>
<phase name='lirGeneration' stamp='0.538'>
<phase_done name='lirGeneration' stamp='0.538'/>
</phase>
<phase name='linearScan' stamp='0.538'>
<phase_done name='linearScan' stamp='0.538'/>
</phase>
<phase_done name='emit_lir' stamp='0.538'/>
</phase>
<phase name='codeemit' stamp='0.538'>
<phase_done name='codeemit' stamp='0.538'/>
</phase>
<phase name='codeinstall' stamp='0.538'>
<phase_done name='codeinstall' stamp='0.539'/>
</phase>
<code_cache total_blobs='373' nmethods='126' adapters='177' free_code_cache='334154496'/>
<task_done success='1' nmsize='272' count='165' stamp='0.539'/>
</task>
<task compile_id='134' method='java/lang/StringCoding$StringEncoder requestedCharsetName ()Ljava/lang/String;' bytes='5' count='132' iicount='132' level='1' stamp='0.539'>
<phase name='buildIR' stamp='0.539'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='899' name='java/lang/StringCoding$StringEncoder' flags='10'/>
<method id='900' holder='899' name='requestedCharsetName' return='797' flags='16' bytes='5' iicount='132'/>
<parse method='900'  stamp='0.539'>
<parse_done stamp='0.539'/>
</parse>
<phase name='optimize_blocks' stamp='0.539'>
<phase_done name='optimize_blocks' stamp='0.539'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.539'>
<phase_done name='rangeCheckElimination' stamp='0.539'/>
</phase>
<phase name='optimize_null_checks' stamp='0.539'>
<phase_done name='optimize_null_checks' stamp='0.539'/>
</phase>
<phase_done name='buildIR' stamp='0.539'/>
</phase>
<phase name='emit_lir' stamp='0.539'>
<phase name='lirGeneration' stamp='0.539'>
<phase_done name='lirGeneration' stamp='0.539'/>
</phase>
<phase name='linearScan' stamp='0.539'>
<phase_done name='linearScan' stamp='0.539'/>
</phase>
<phase_done name='emit_lir' stamp='0.539'/>
</phase>
<phase name='codeemit' stamp='0.539'>
<phase_done name='codeemit' stamp='0.539'/>
</phase>
<phase name='codeinstall' stamp='0.539'>
<phase_done name='codeinstall' stamp='0.539'/>
</phase>
<code_cache total_blobs='374' nmethods='127' adapters='177' free_code_cache='334153728'/>
<task_done success='1' nmsize='272' count='132' stamp='0.539'/>
</task>
<task compile_id='135' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='404' iicount='404' level='3' stamp='0.540'>
<phase name='buildIR' stamp='0.540'>
<type id='791' name='void'/>
<klass id='862' name='java/lang/StringBuilder' flags='17'/>
<method id='899' holder='862' name='&lt;init&gt;' return='791' flags='1' bytes='7' iicount='404'/>
<parse method='899'  stamp='0.540'>
<bc code='183' bci='3'/>
<type id='789' name='int'/>
<klass id='860' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='901' holder='860' name='&lt;init&gt;' return='791' arguments='789' flags='0' bytes='12' compile_id='73' compiler='C1' level='3' iicount='544'/>
<call method='901' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='903' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='952973'/>
<call method='903' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<parse_done stamp='0.540'/>
</parse>
<parse_done stamp='0.540'/>
</parse>
<parse_done stamp='0.540'/>
</parse>
<phase name='optimize_blocks' stamp='0.540'>
<phase_done name='optimize_blocks' stamp='0.540'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.540'>
<phase_done name='rangeCheckElimination' stamp='0.540'/>
</phase>
<phase name='optimize_null_checks' stamp='0.540'>
<phase_done name='optimize_null_checks' stamp='0.540'/>
</phase>
<phase_done name='buildIR' stamp='0.540'/>
</phase>
<phase name='emit_lir' stamp='0.540'>
<phase name='lirGeneration' stamp='0.540'>
<phase_done name='lirGeneration' stamp='0.540'/>
</phase>
<phase name='linearScan' stamp='0.540'>
<phase_done name='linearScan' stamp='0.540'/>
</phase>
<phase_done name='emit_lir' stamp='0.540'/>
</phase>
<phase name='codeemit' stamp='0.540'>
<phase_done name='codeemit' stamp='0.540'/>
</phase>
<phase name='codeinstall' stamp='0.540'>
<phase_done name='codeinstall' stamp='0.541'/>
</phase>
<code_cache total_blobs='375' nmethods='128' adapters='177' free_code_cache='334152320'/>
<task_done success='1' nmsize='688' count='408' inlined_bytes='13' stamp='0.541'/>
</task>
<task compile_id='136' method='java/lang/StringBuffer append (Ljava/lang/String;)Ljava/lang/StringBuffer;' bytes='13' count='390' iicount='390' level='3' stamp='0.541'>
<phase name='buildIR' stamp='0.541'>
<klass id='861' name='java/lang/StringBuffer' flags='17'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='861' name='append' return='861' arguments='797' flags='33' bytes='13' iicount='390'/>
<parse method='899'  stamp='0.541'>
<bc code='183' bci='7'/>
<klass id='860' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='901' holder='860' name='append' return='860' arguments='797' flags='1' bytes='50' compile_id='10' compiler='C1' level='3' iicount='1236'/>
<call method='901' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.541'/>
</parse>
<phase name='optimize_blocks' stamp='0.541'>
<phase_done name='optimize_blocks' stamp='0.541'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.541'>
<phase_done name='rangeCheckElimination' stamp='0.541'/>
</phase>
<phase name='optimize_null_checks' stamp='0.541'>
<phase_done name='optimize_null_checks' stamp='0.541'/>
</phase>
<phase_done name='buildIR' stamp='0.541'/>
</phase>
<phase name='emit_lir' stamp='0.541'>
<phase name='lirGeneration' stamp='0.541'>
<phase_done name='lirGeneration' stamp='0.541'/>
</phase>
<phase name='linearScan' stamp='0.541'>
<phase_done name='linearScan' stamp='0.541'/>
</phase>
<phase_done name='emit_lir' stamp='0.541'/>
</phase>
<phase name='codeemit' stamp='0.541'>
<phase_done name='codeemit' stamp='0.541'/>
</phase>
<phase name='codeinstall' stamp='0.541'>
<phase_done name='codeinstall' stamp='0.543'/>
</phase>
<code_cache total_blobs='376' nmethods='129' adapters='177' free_code_cache='334150848'/>
<task_done success='1' nmsize='808' count='390' stamp='0.543'/>
</task>
<task compile_id='138' method='sun/net/www/ParseUtil encodePath (Ljava/lang/String;Z)Ljava/lang/String;' bytes='336' count='134' backedge_count='6167' iicount='134' level='3' stamp='0.543'>
<phase name='buildIR' stamp='0.543'>
<klass id='797' name='java/lang/String' flags='17'/>
<type id='783' name='boolean'/>
<klass id='899' name='sun/net/www/ParseUtil' flags='1'/>
<method id='900' holder='899' name='encodePath' return='797' arguments='797 783' flags='9' bytes='336' iicount='134'/>
<parse method='900'  stamp='0.543'>
<bc code='182' bci='1'/>
<type id='789' name='int'/>
<method id='902' holder='797' name='length' return='789' flags='1' bytes='6' compile_id='20' compiler='C1' level='1' iicount='3474'/>
<call method='902' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<parse_done stamp='0.543'/>
</parse>
<bc code='182' bci='15'/>
<klass id='888' name='[C' flags='1041'/>
<method id='904' holder='797' name='toCharArray' return='888' flags='1' bytes='25' compile_id='59' compiler='C1' level='3' iicount='912'/>
<call method='904' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='904'>
<bc code='184' bci='20'/>
<type id='791' name='void'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='906' holder='802' name='arraycopy' return='791' arguments='796 789 796 789 789' flags='265' bytes='0' compile_id='8' compile_kind='c2n' level='0' iicount='640'/>
<call method='906' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.543'/>
</parse>
<bc code='182' bci='21'/>
<call method='902' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<parse_done stamp='0.543'/>
</parse>
<bc code='182' bci='142'/>
<klass id='909' name='java/util/BitSet' flags='1'/>
<method id='911' holder='909' name='get' return='783' arguments='789' flags='1' bytes='69' iicount='251'/>
<call method='911' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='909'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='909'/>
<bc code='184' bci='152'/>
<type id='784' name='char'/>
<method id='913' holder='899' name='escape' return='789' arguments='888 784 789' flags='10' bytes='42' iicount='1'/>
<call method='913' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='193'/>
<call method='913' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='212'/>
<call method='913' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='230'/>
<call method='913' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='252'/>
<call method='913' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='270'/>
<call method='913' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='313'/>
<call method='906' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<bc code='183' bci='332'/>
<method id='915' holder='797' name='&lt;init&gt;' return='791' arguments='888 789 789' flags='1' bytes='82' compile_id='9' compiler='C1' level='3' iicount='1515'/>
<call method='915' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.543'/>
</parse>
<phase name='optimize_blocks' stamp='0.543'>
<phase_done name='optimize_blocks' stamp='0.543'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.543'>
<phase_done name='rangeCheckElimination' stamp='0.543'/>
</phase>
<phase name='optimize_null_checks' stamp='0.543'>
<phase_done name='optimize_null_checks' stamp='0.543'/>
</phase>
<phase_done name='buildIR' stamp='0.543'/>
</phase>
<phase name='emit_lir' stamp='0.543'>
<phase name='lirGeneration' stamp='0.543'>
<phase_done name='lirGeneration' stamp='0.543'/>
</phase>
<phase name='linearScan' stamp='0.543'>
<phase_done name='linearScan' stamp='0.543'/>
</phase>
<phase_done name='emit_lir' stamp='0.543'/>
</phase>
<phase name='codeemit' stamp='0.543'>
<phase_done name='codeemit' stamp='0.543'/>
</phase>
<phase name='codeinstall' stamp='0.543'>
<dependency type='leaf_type' ctxk='909'/>
<phase_done name='codeinstall' stamp='0.548'/>
</phase>
<code_cache total_blobs='377' nmethods='130' adapters='177' free_code_cache='334143872'/>
<task_done success='1' nmsize='3736' count='134' backedge_count='6167' inlined_bytes='37' stamp='0.548'/>
</task>
<task compile_id='137' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='420' iicount='420' level='3' stamp='0.548'>
<phase name='buildIR' stamp='0.548'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='862' name='java/lang/StringBuilder' flags='17'/>
<method id='899' holder='862' name='toString' return='797' flags='1' bytes='17' iicount='420'/>
<parse method='899'  stamp='0.548'>
<bc code='183' bci='13'/>
<type id='791' name='void'/>
<klass id='888' name='[C' flags='1041'/>
<type id='789' name='int'/>
<method id='901' holder='797' name='&lt;init&gt;' return='791' arguments='888 789 789' flags='1' bytes='82' compile_id='9' compiler='C1' level='3' iicount='1522'/>
<call method='901' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.548'/>
</parse>
<phase name='optimize_blocks' stamp='0.548'>
<phase_done name='optimize_blocks' stamp='0.548'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.548'>
<phase_done name='rangeCheckElimination' stamp='0.548'/>
</phase>
<phase name='optimize_null_checks' stamp='0.548'>
<phase_done name='optimize_null_checks' stamp='0.548'/>
</phase>
<phase_done name='buildIR' stamp='0.548'/>
</phase>
<phase name='emit_lir' stamp='0.548'>
<phase name='lirGeneration' stamp='0.548'>
<phase_done name='lirGeneration' stamp='0.548'/>
</phase>
<phase name='linearScan' stamp='0.548'>
<phase_done name='linearScan' stamp='0.548'/>
</phase>
<phase_done name='emit_lir' stamp='0.548'/>
</phase>
<phase name='codeemit' stamp='0.548'>
<phase_done name='codeemit' stamp='0.548'/>
</phase>
<phase name='codeinstall' stamp='0.548'>
<phase_done name='codeinstall' stamp='0.549'/>
</phase>
<code_cache total_blobs='378' nmethods='131' adapters='177' free_code_cache='334142720'/>
<task_done success='1' nmsize='520' count='422' stamp='0.549'/>
</task>
<task compile_id='140' method='java/util/jar/JarFile getJarEntry (Ljava/lang/String;)Ljava/util/jar/JarEntry;' bytes='9' count='671' iicount='671' level='3' stamp='0.549'>
<phase name='buildIR' stamp='0.549'>
<klass id='900' name='java/util/jar/JarEntry' flags='1'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='899' name='java/util/jar/JarFile' flags='1'/>
<method id='901' holder='899' name='getJarEntry' return='900' arguments='797' flags='1' bytes='9' iicount='671'/>
<parse method='901'  stamp='0.549'>
<bc code='182' bci='2'/>
<klass id='904' name='java/util/zip/ZipEntry' flags='1'/>
<method id='905' holder='899' name='getEntry' return='904' arguments='797' flags='1' bytes='22' iicount='672'/>
<call method='905' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.549'/>
</parse>
<phase name='optimize_blocks' stamp='0.549'>
<phase_done name='optimize_blocks' stamp='0.549'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.549'>
<phase_done name='rangeCheckElimination' stamp='0.549'/>
</phase>
<phase name='optimize_null_checks' stamp='0.549'>
<phase_done name='optimize_null_checks' stamp='0.549'/>
</phase>
<phase_done name='buildIR' stamp='0.549'/>
</phase>
<phase name='emit_lir' stamp='0.549'>
<phase name='lirGeneration' stamp='0.549'>
<phase_done name='lirGeneration' stamp='0.549'/>
</phase>
<phase name='linearScan' stamp='0.549'>
<phase_done name='linearScan' stamp='0.549'/>
</phase>
<phase_done name='emit_lir' stamp='0.549'/>
</phase>
<phase name='codeemit' stamp='0.549'>
<phase_done name='codeemit' stamp='0.549'/>
</phase>
<phase name='codeinstall' stamp='0.549'>
<phase_done name='codeinstall' stamp='0.567'/>
</phase>
<code_cache total_blobs='379' nmethods='132' adapters='177' free_code_cache='334140672'/>
<task_done success='1' nmsize='1448' count='678' stamp='0.567'/>
</task>
<fragment>
<![CDATA[
<task compile_id='141' method='java/util/jar/JarFile getEntry (Ljava/lang/String;)Ljava/util/zip/ZipEntry;' bytes='22' count='679' iicount='679' level='3' stamp='0.567'>
<phase name='buildIR' stamp='0.567'>
<klass id='900' name='java/util/zip/ZipEntry' flags='1'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='899' name='java/util/jar/JarFile' flags='1'/>
<method id='901' holder='899' name='getEntry' return='900' arguments='797' flags='1' bytes='22' iicount='679'/>
<parse method='901'  stamp='0.567'>
<bc code='183' bci='2'/>
<klass id='903' name='java/util/zip/ZipFile' flags='1'/>
<method id='904' holder='903' name='getEntry' return='900' arguments='797' flags='1' bytes='86' compile_id='94' compiler='C1' level='3' iicount='679'/>
<call method='904' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='16'/>
<type id='791' name='void'/>
<klass id='906' name='java/util/jar/JarFile$JarFileEntry' flags='2'/>
<method id='907' holder='906' name='&lt;init&gt;' return='791' arguments='899 900' flags='0' bytes='11' iicount='104'/>
<call method='907' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='907'>
<bc code='183' bci='7'/>
<klass id='909' name='java/util/jar/JarEntry' flags='1'/>
<method id='910' holder='909' name='&lt;init&gt;' return='791' arguments='900' flags='1' bytes='6' iicount='105'/>
<call method='910' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='910'>
<bc code='183' bci='2'/>
<method id='912' holder='900' name='&lt;init&gt;' return='791' arguments='900' flags='1' bytes='146' iicount='105'/>
<call method='912' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.567'/>
</parse>
<parse_done stamp='0.567'/>
</parse>
<parse_done stamp='0.567'/>
</parse>
<phase name='optimize_blocks' stamp='0.567'>
<phase_done name='optimize_blocks' stamp='0.567'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.567'>
<phase_done name='rangeCheckElimination' stamp='0.567'/>
</phase>
<phase name='optimize_null_checks' stamp='0.567'>
<phase_done name='optimize_null_checks' stamp='0.567'/>
</phase>
<phase_done name='buildIR' stamp='0.567'/>
</phase>
<phase name='emit_lir' stamp='0.567'>
<phase name='lirGeneration' stamp='0.567'>
<phase_done name='lirGeneration' stamp='0.567'/>
</phase>
<phase name='linearScan' stamp='0.567'>
<phase_done name='linearScan' stamp='0.567'/>
</phase>
<phase_done name='emit_lir' stamp='0.567'/>
</phase>
<phase name='codeemit' stamp='0.567'>
<phase_done name='codeemit' stamp='0.567'/>
</phase>
<phase name='codeinstall' stamp='0.567'>
]]>
</fragment>
</compilation_log>
<compilation_log thread='140373947889408'>
<fragment>
<![CDATA[
<start_compile_thread name='JVMCI CompilerThread1' thread='140373947889408' process='8213' stamp='0.041'/>
<task compile_id='21' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='276' count='899' backedge_count='30128' iicount='900' level='4' stamp='0.077'>
]]>
</fragment>
</compilation_log>
<compilation_log thread='140373946836736'>
<fragment>
<![CDATA[
<start_compile_thread name='JVMCI CompilerThread2' thread='140373946836736' process='8213' stamp='0.041'/>
<task compile_id='15' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='59' count='5783' iicount='5790' level='4' stamp='0.066'>
]]>
</fragment>
</compilation_log>
<compilation_log thread='140373948942080'>
<fragment>
<![CDATA[
<start_compile_thread name='JVMCI CompilerThread0' thread='140373948942080' process='8213' stamp='0.041'/>
<task compile_id='13' method='java/lang/String charAt (I)C' bytes='29' count='5713' iicount='5716' level='4' stamp='0.064'>
]]>
</fragment>
</compilation_log>
<hotspot_log_done stamp='0.568'/>
</hotspot_log>
