<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='4324' time_ms='1503490480425'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.144-b01
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.144-b01) for linux-amd64 JRE (1.8.0_144-b01), built on Jul 21 2017 21:57:33 by &quot;java_re&quot; with gcc 4.3.0 20080428 (Red Hat 4.3.0-8)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -XX:+LogCompilation -XX:+PrintAssembly -XX:LogFile=compilation8graal.log -Dfile.encoding=utf-8 
</args>
<command>
com.github.marschall.charsequences.ParseUuidCompilation
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.144-b01
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=/home/marschall/bin/java/jdk1.8.0_144/jre/lib/ext:/usr/java/packages/lib/ext
java.endorsed.dirs=/home/marschall/bin/java/jdk1.8.0_144/jre/lib/endorsed
sun.boot.library.path=/home/marschall/bin/java/jdk1.8.0_144/jre/lib/amd64
java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
java.home=/home/marschall/bin/java/jdk1.8.0_144/jre
java.class.path=/home/marschall/git/charsequences/target/test-classes:/home/marschall/git/charsequences/target/classes:/home/marschall/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/marschall/.m2/repository/org/hamcrest/hamcrest-junit/2.0.0.0/hamcrest-junit-2.0.0.0.jar:/home/marschall/.m2/repository/org/hamcrest/java-hamcrest/2.0.0.0/java-hamcrest-2.0.0.0.jar:/home/marschall/.m2/repository/org/openjdk/jmh/jmh-core/1.19/jmh-core-1.19.jar:/home/marschall/.m2/repository/net/sf/jopt-simple/jopt-simple/4.6/jopt-simple-4.6.jar:/home/marschall/.m2/repository/org/apache/commons/commons-math3/3.2/commons-math3-3.2.jar:/home/marschall/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.19/jmh-generator-annprocess-1.19.jar:/home/marschall/.m2/repository/org/openjdk/jol/jol-core/0.8/jol-core-0.8.jar
sun.boot.class.path=/home/marschall/bin/java/jdk1.8.0_144/jre/lib/resources.jar:/home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar:/home/marschall/bin/java/jdk1.8.0_144/jre/lib/sunrsasign.jar:/home/marschall/bin/java/jdk1.8.0_144/jre/lib/jsse.jar:/home/marschall/bin/java/jdk1.8.0_144/jre/lib/jce.jar:/home/marschall/bin/java/jdk1.8.0_144/jre/lib/charsets.jar:/home/marschall/bin/java/jdk1.8.0_144/jre/lib/jfr.jar:/home/marschall/bin/java/jdk1.8.0_144/jre/classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=utf-8
sun.java.command=com.github.marschall.charsequences.ParseUuidCompilation
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='140532334335744'/>
[Opened /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Object from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.Serializable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Comparable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.CharSequence from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.String from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.AnnotatedElement from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.GenericDeclaration from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Type from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Class from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Cloneable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.System from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Throwable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Error from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ThreadDeath from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Exception from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.RuntimeException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.SecurityManager from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.AccessControlContext from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.SecureClassLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ReflectiveOperationException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassNotFoundException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.LinkageError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.NoClassDefFoundError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassCastException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ArrayStoreException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.VirtualMachineError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.OutOfMemoryError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.StackOverflowError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.IllegalMonitorStateException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.SoftReference from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.WeakReference from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.FinalReference from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.PhantomReference from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Cleaner from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Runnable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Thread from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Thread$UncaughtExceptionHandler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ThreadGroup from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Map from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Dictionary from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Hashtable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Properties from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.AccessibleObject from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Member from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Field from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Parameter from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Executable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Method from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Constructor from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.MagicAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessor from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessor from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingClassLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.ConstantPool from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessor from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeFieldAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeStaticFieldAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.annotation.Annotation from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.CallerSensitive from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandle from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.DirectMethodHandle from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MemberName from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleNatives from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodType from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.BootstrapMethodError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.CallSite from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.ConstantCallSite from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MutableCallSite from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.VolatileCallSite from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Appendable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.AbstractStringBuilder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.StringBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.StringBuilder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Unsafe from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.AutoCloseable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.Closeable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.InputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.ByteArrayInputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.File from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.net.URL from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.jar.Manifest from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Launcher from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.CodeSource from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.StackTraceElement from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.Buffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Boolean from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Character from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Number from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Float from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Double from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Byte from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Short from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Integer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Long from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.NullPointerException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ArithmeticException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamField from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Comparator from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.String$CaseInsensitiveComparator from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.Guard from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.Permission from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.BasicPermission from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.RuntimePermission from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.AccessController from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectPermission from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.PrivilegedAction from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$GetReflectionFactoryAction from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.cert.Certificate from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Iterable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.List from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.RandomAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.AbstractCollection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.AbstractList from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Vector from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Stack from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$Lock from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$ReferenceHandler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.InterruptedException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.ArrayList from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Set from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.AbstractSet from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptySet from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyList from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.AbstractMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableCollection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableList from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableRandomAccessList from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Null from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Lock from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaLangRefAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.SharedSecrets from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.IncompatibleClassChangeError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.NoSuchMethodError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.Reflection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.HashMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Map$Entry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.HashMap$Node from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.VM from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Entry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Math from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer$FinalizerThread from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.Charset from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.spi.CharsetProvider from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.FastCharsetProvider from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.util.PreHashedMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Aliases from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Classes from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Cache from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicInteger from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Class$3 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Class$ReflectionData from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Class$Atomic from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.AbstractRepository from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.GenericDeclRepository from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.ClassRepository from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Class$AnnotationData from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.annotation.AnnotationType from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$ClassValueMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Modifier from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.LangReflectAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Arrays from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.HistoricallyNamedCharset from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.Unicode from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Class$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.NativeConstructorAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingConstructorAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.StringCoding from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap$Entry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringDecoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayDecoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetDecoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Decoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.CodingErrorAction from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Hashtable$EntrySet from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedCollection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedSet from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Objects from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Enumeration from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Iterator from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Enumerator from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Runtime from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Version from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FileInputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaIOFileDescriptorAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.Flushable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.OutputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FileOutputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FilterInputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.BufferedInputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.PrivilegedExceptionAction from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.misc.ReflectUtil from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FilterOutputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.PrintStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.BufferedOutputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.Writer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.OutputStreamWriter from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamEncoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.security.action.GetPropertyAction from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayEncoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetEncoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Encoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.ByteBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.HeapByteBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.Bits from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.ByteOrder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicLong from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaNioAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.Bits$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.BufferedWriter from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.DefaultFileSystem from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FileSystem from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.UnixFileSystem from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Enum from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.File$PathStatus from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.file.Watchable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.file.Path from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringEncoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$3 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$Entry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$Entry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$NativeLibrary from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Terminator from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.SignalHandler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Terminator$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Signal from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.NativeSignalHandler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Integer$IntegerCache from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.OSEnvironment from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaLangAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.System$2 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.IllegalArgumentException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Compiler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Compiler$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandlerFactory from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$Factory from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.security.util.Debug from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$ParallelLoaders from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$Entry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$SetFromMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$KeySet from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaNetAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader$7 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.StringTokenizer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.MetaIndex from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Readable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.Reader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.BufferedReader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.InputStreamReader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FileReader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamDecoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.CharBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.HeapCharBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$Cache from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$2 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Array from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.HashMap$TreeNode from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FileInputStream$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.net.www.ParseUtil from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.BitSet from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Locale from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Locale$Cache from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.Lock from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.ReentrantLock from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Segment from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Node from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CounterCell from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CollectionView from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$KeySetView from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ValuesView from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$EntrySetView from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Cache from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Key from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache$CacheEntry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Locale$LocaleKey from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleUtils from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.CharacterData from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.CharacterDataLatin1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.net.Parts from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.Handler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$JavaSecurityAccessImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityProtectionDomainAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$2 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$Key from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.Principal from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.HashSet from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.jar.Handler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.SystemClassLoaderAction from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140531748660992'/>
<thread_logfile thread='140531748660992' filename='/tmp/hs_c140531748660992_pid4324.log'/>
<writer thread='140531745502976'/>
<thread_logfile thread='140531745502976' filename='/tmp/hs_c140531745502976_pid4324.log'/>
<writer thread='140531747608320'/>
<thread_logfile thread='140531747608320' filename='/tmp/hs_c140531747608320_pid4324.log'/>
<writer thread='140531746555648'/>
<thread_logfile thread='140531746555648' filename='/tmp/hs_c140531746555648_pid4324.log'/>
<writer thread='140532334335744'/>
[Loaded java.lang.invoke.MethodHandleImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<task_queued compile_id='1' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='256' iicount='256' level='3' stamp='0.061' comment='tiered' hot_count='256'/>
<task_queued compile_id='2' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='256' iicount='256' level='3' stamp='0.061' comment='tiered' hot_count='256'/>
<task_queued compile_id='3' method='java/lang/Math min (II)I' bytes='11' count='640' iicount='640' level='3' stamp='0.061' comment='tiered' hot_count='640'/>
[Loaded java.util.function.Function from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$2 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$3 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassValue from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$4 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Entry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Identity from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Version from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MemberName$Factory from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140531745502976'/>
Loaded disassembler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/amd64/server/hsdis-amd64.so
Decoding compiled method 0x00007fd025100490:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
[Constants]
  # {method} {0x00007fd02139e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x00007fd025100660: mov    0x8(%rsi),%r10d
  0x00007fd025100664: shl    $0x3,%r10
  0x00007fd025100668: cmp    %rax,%r10
  0x00007fd02510066b: jne    0x00007fd025045e20  ;   {runtime_call}
  0x00007fd025100671: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fd02510067c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fd025100680: mov    %eax,-0x14000(%rsp)
  0x00007fd025100687: push   %rbp
  0x00007fd025100688: sub    $0x60,%rsp
  0x00007fd02510068c: movabs $0x7fd021578558,%rdi  ;   {metadata(method data for {method} {0x00007fd02139e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025100696: mov    0xdc(%rdi),%ebx
  0x00007fd02510069c: add    $0x8,%ebx
  0x00007fd02510069f: mov    %ebx,0xdc(%rdi)
  0x00007fd0251006a5: movabs $0x7fd02139e1a0,%rdi  ;   {metadata({method} {0x00007fd02139e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fd0251006af: and    $0x1ff8,%ebx
  0x00007fd0251006b5: cmp    $0x0,%ebx
  0x00007fd0251006b8: je     0x00007fd025100986  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x00007fd0251006be: mov    %rsi,%rdi
  0x00007fd0251006c1: movabs $0x7fd021578558,%rbx  ;   {metadata(method data for {method} {0x00007fd02139e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fd0251006cb: addq   $0x1,0x108(%rbx)
  0x00007fd0251006d3: movabs $0x7fd021511108,%rdi  ;   {metadata(method data for {method} {0x00007fd02139b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fd0251006dd: mov    0xdc(%rdi),%ebx
  0x00007fd0251006e3: add    $0x8,%ebx
  0x00007fd0251006e6: mov    %ebx,0xdc(%rdi)
  0x00007fd0251006ec: movabs $0x7fd02139b480,%rdi  ;   {metadata({method} {0x00007fd02139b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fd0251006f6: and    $0x7ffff8,%ebx
  0x00007fd0251006fc: cmp    $0x0,%ebx
  0x00007fd0251006ff: je     0x00007fd02510099d
  0x00007fd025100705: cmp    $0x0,%ecx
  0x00007fd025100708: movabs $0x7fd021578558,%rdi  ;   {metadata(method data for {method} {0x00007fd02139e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025100712: movabs $0x118,%rbx
  0x00007fd02510071c: jge    0x00007fd02510072c
  0x00007fd025100722: movabs $0x128,%rbx
  0x00007fd02510072c: mov    (%rdi,%rbx,1),%rax
  0x00007fd025100730: lea    0x1(%rax),%rax
  0x00007fd025100734: mov    %rax,(%rdi,%rbx,1)
  0x00007fd025100738: jl     0x00007fd025100946  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x00007fd02510073e: cmp    $0x0,%r8d
  0x00007fd025100742: movabs $0x7fd021578558,%rdi  ;   {metadata(method data for {method} {0x00007fd02139e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510074c: movabs $0x148,%rbx
  0x00007fd025100756: jg     0x00007fd025100766
  0x00007fd02510075c: movabs $0x158,%rbx
  0x00007fd025100766: mov    (%rdi,%rbx,1),%rax
  0x00007fd02510076a: lea    0x1(%rax),%rax
  0x00007fd02510076e: mov    %rax,(%rdi,%rbx,1)
  0x00007fd025100772: jg     0x00007fd0251007ed  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x00007fd025100778: cmp    $0x0,%r8d
  0x00007fd02510077c: movabs $0x7fd021578558,%rdi  ;   {metadata(method data for {method} {0x00007fd02139e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025100786: movabs $0x168,%rbx
  0x00007fd025100790: jge    0x00007fd0251007a0
  0x00007fd025100796: movabs $0x178,%rbx
  0x00007fd0251007a0: mov    (%rdi,%rbx,1),%rax
  0x00007fd0251007a4: lea    0x1(%rax),%rax
  0x00007fd0251007a8: mov    %rax,(%rdi,%rbx,1)
  0x00007fd0251007ac: jl     0x00007fd025100906  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x00007fd0251007b2: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x00007fd0251009b4
  0x00007fd0251007b5: cmp    %edi,%ecx
  0x00007fd0251007b7: movabs $0x7fd021578558,%rdi  ;   {metadata(method data for {method} {0x00007fd02139e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fd0251007c1: movabs $0x198,%rbx
  0x00007fd0251007cb: jg     0x00007fd0251007db
  0x00007fd0251007d1: movabs $0x1a8,%rbx
  0x00007fd0251007db: mov    (%rdi,%rbx,1),%rax
  0x00007fd0251007df: lea    0x1(%rax),%rax
  0x00007fd0251007e3: mov    %rax,(%rdi,%rbx,1)
  0x00007fd0251007e7: jle    0x00007fd025100882  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x00007fd0251007ed: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x00007fd0251009b9
  0x00007fd0251007f0: sub    %r8d,%edi
  0x00007fd0251007f3: cmp    %edi,%ecx
  0x00007fd0251007f5: movabs $0x7fd021578558,%rdi  ;   {metadata(method data for {method} {0x00007fd02139e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fd0251007ff: movabs $0x1b8,%rbx
  0x00007fd025100809: jle    0x00007fd025100819
  0x00007fd02510080f: movabs $0x1c8,%rbx
  0x00007fd025100819: mov    (%rdi,%rbx,1),%rax
  0x00007fd02510081d: lea    0x1(%rax),%rax
  0x00007fd025100821: mov    %rax,(%rdi,%rbx,1)
  0x00007fd025100825: jg     0x00007fd0251008bc  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x00007fd02510082b: mov    %rsi,0x38(%rsp)
  0x00007fd025100830: movabs $0x7fd021578558,%rdi  ;   {metadata(method data for {method} {0x00007fd02139e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510083a: addq   $0x1,0x1e8(%rdi)
  0x00007fd025100842: add    %ecx,%r8d
  0x00007fd025100845: mov    %rdx,%rsi
  0x00007fd025100848: mov    %rcx,%rdx
  0x00007fd02510084b: mov    %r8,%rcx           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x00007fd02510084e: nop
  0x00007fd02510084f: callq  0x00007fd025046420  ; OopMap{[56]=Oop off=500}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x00007fd025100854: mov    0x38(%rsp),%rsi
  0x00007fd025100859: mov    %rax,%r10
  0x00007fd02510085c: shr    $0x3,%r10
  0x00007fd025100860: mov    %r10d,0xc(%rsi)
  0x00007fd025100864: shr    $0x9,%rsi
  0x00007fd025100868: movabs $0x7fd0211ff000,%rdx
  0x00007fd025100872: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x00007fd025100876: add    $0x60,%rsp
  0x00007fd02510087a: pop    %rbp
  0x00007fd02510087b: test   %eax,0x16d0087f(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd025100881: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x00007fd025100882: movabs $0x670b8a5e8,%rdx  ;   {oop(&quot;&quot;)}
  0x00007fd02510088c: mov    0xc(%rdx),%edx     ; implicit exception: dispatches to 0x00007fd0251009be
  0x00007fd02510088f: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)

  0x00007fd025100893: mov    %rdx,%r10
  0x00007fd025100896: shr    $0x3,%r10
  0x00007fd02510089a: mov    %r10d,0xc(%rsi)
  0x00007fd02510089e: shr    $0x9,%rsi
  0x00007fd0251008a2: movabs $0x7fd0211ff000,%rdx
  0x00007fd0251008ac: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x00007fd0251008b0: add    $0x60,%rsp
  0x00007fd0251008b4: pop    %rbp
  0x00007fd0251008b5: test   %eax,0x16d00845(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd0251008bb: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x00007fd0251008bc: nopl   0x0(%rax)
  0x00007fd0251008c0: jmpq   0x00007fd0251009d2  ;   {no_reloc}
  0x00007fd0251008c5: add    %al,(%rax)
  0x00007fd0251008c7: add    %al,(%rax)
  0x00007fd0251008c9: add    %ch,%cl
  0x00007fd0251008cb: or     $0x48000001,%eax   ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x00007fd0251008d0: mov    %eax,%edx
  0x00007fd0251008d2: movabs $0x7fd021578558,%rsi  ;   {metadata(method data for {method} {0x00007fd02139e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fd0251008dc: addq   $0x1,0x1d8(%rsi)
  0x00007fd0251008e4: add    %ecx,%r8d
  0x00007fd0251008e7: mov    %r8,%rdx
  0x00007fd0251008ea: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x00007fd0251008ed: mov    %rax,0x40(%rsp)
  0x00007fd0251008f2: nop
  0x00007fd0251008f3: nop
  0x00007fd0251008f4: nop
  0x00007fd0251008f5: nop
  0x00007fd0251008f6: nop
  0x00007fd0251008f7: callq  0x00007fd025046020  ; OopMap{[64]=Oop off=668}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x00007fd0251008fc: mov    0x40(%rsp),%rax
  0x00007fd025100901: jmpq   0x00007fd025100a60  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x00007fd025100906: xchg   %ax,%ax
  0x00007fd025100908: jmpq   0x00007fd0251009f8  ;   {no_reloc}
  0x00007fd02510090d: add    %al,(%rax)
  0x00007fd02510090f: add    %al,(%rax)
  0x00007fd025100911: add    %ch,%cl
  0x00007fd025100913: jmp    0x00007fd025100915
  0x00007fd025100915: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x00007fd025100917: mov    %rax,%rdx
  0x00007fd02510091a: movabs $0x7fd021578558,%rsi  ;   {metadata(method data for {method} {0x00007fd02139e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025100924: addq   $0x1,0x188(%rsi)
  0x00007fd02510092c: mov    %r8,%rdx
  0x00007fd02510092f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x00007fd025100932: mov    %rax,0x48(%rsp)
  0x00007fd025100937: callq  0x00007fd025046020  ; OopMap{[72]=Oop off=732}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x00007fd02510093c: mov    0x48(%rsp),%rax
  0x00007fd025100941: jmpq   0x00007fd025100a60  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x00007fd025100946: xchg   %ax,%ax
  0x00007fd025100948: jmpq   0x00007fd025100a1e  ;   {no_reloc}
  0x00007fd02510094d: add    %al,(%rax)
  0x00007fd02510094f: add    %al,(%rax)
  0x00007fd025100951: add    %ch,%cl
  0x00007fd025100953: roll   (%rax)
  0x00007fd025100955: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x00007fd025100957: mov    %rax,%rdx
  0x00007fd02510095a: movabs $0x7fd021578558,%rsi  ;   {metadata(method data for {method} {0x00007fd02139e1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025100964: addq   $0x1,0x138(%rsi)
  0x00007fd02510096c: mov    %rcx,%rdx
  0x00007fd02510096f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x00007fd025100972: mov    %rax,0x50(%rsp)
  0x00007fd025100977: callq  0x00007fd025046020  ; OopMap{[80]=Oop off=796}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x00007fd02510097c: mov    0x50(%rsp),%rax
  0x00007fd025100981: jmpq   0x00007fd025100a60
  0x00007fd025100986: mov    %rdi,0x8(%rsp)
  0x00007fd02510098b: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd025100993: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop rdx=Oop off=824}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x00007fd025100998: jmpq   0x00007fd0251006be
  0x00007fd02510099d: mov    %rdi,0x8(%rsp)
  0x00007fd0251009a2: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd0251009aa: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop rdx=Oop off=847}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x00007fd0251009af: jmpq   0x00007fd025100705
  0x00007fd0251009b4: callq  0x00007fd0250f9a40  ; OopMap{rsi=Oop rdx=Oop off=857}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x00007fd0251009b9: callq  0x00007fd0250f9a40  ; OopMap{rsi=Oop rdx=Oop off=862}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x00007fd0251009be: callq  0x00007fd0250f9a40  ; OopMap{rsi=Oop off=867}
                                                ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x00007fd0251009c3: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fd0251009cd: mov    $0xa050f00,%eax
  0x00007fd0251009d2: callq  0x00007fd0250fcea0  ; OopMap{off=887}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x00007fd0251009d7: jmpq   0x00007fd0251008c0
  0x00007fd0251009dc: mov    %rdx,%rdx
  0x00007fd0251009df: callq  0x00007fd0250f9ee0  ; OopMap{off=900}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x00007fd0251009e4: jmpq   0x00007fd0251008cf
  0x00007fd0251009e9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fd0251009f3: mov    $0xa050f00,%eax
  0x00007fd0251009f8: callq  0x00007fd0250fcea0  ; OopMap{off=925}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x00007fd0251009fd: jmpq   0x00007fd025100908
  0x00007fd025100a02: mov    %rdx,%rdx
  0x00007fd025100a05: callq  0x00007fd0250f9ee0  ; OopMap{off=938}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x00007fd025100a0a: jmpq   0x00007fd025100917
  0x00007fd025100a0f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fd025100a19: mov    $0xa050f00,%eax
  0x00007fd025100a1e: callq  0x00007fd0250fcea0  ; OopMap{off=963}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x00007fd025100a23: jmpq   0x00007fd025100948
  0x00007fd025100a28: mov    %rdx,%rdx
  0x00007fd025100a2b: callq  0x00007fd0250f9ee0  ; OopMap{off=976}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x00007fd025100a30: jmpq   0x00007fd025100957
  0x00007fd025100a35: nop
  0x00007fd025100a36: nop
  0x00007fd025100a37: mov    0x2a8(%r15),%rax
  0x00007fd025100a3e: movabs $0x0,%r10
  0x00007fd025100a48: mov    %r10,0x2a8(%r15)
  0x00007fd025100a4f: movabs $0x0,%r10
  0x00007fd025100a59: mov    %r10,0x2b0(%r15)
  0x00007fd025100a60: add    $0x60,%rsp
  0x00007fd025100a64: pop    %rbp
  0x00007fd025100a65: jmpq   0x00007fd02506c4a0  ;   {runtime_call}
  0x00007fd025100a6a: hlt    
  0x00007fd025100a6b: hlt    
  0x00007fd025100a6c: hlt    
  0x00007fd025100a6d: hlt    
  0x00007fd025100a6e: hlt    
  0x00007fd025100a6f: hlt    
  0x00007fd025100a70: hlt    
  0x00007fd025100a71: hlt    
  0x00007fd025100a72: hlt    
  0x00007fd025100a73: hlt    
  0x00007fd025100a74: hlt    
  0x00007fd025100a75: hlt    
  0x00007fd025100a76: hlt    
  0x00007fd025100a77: hlt    
  0x00007fd025100a78: hlt    
  0x00007fd025100a79: hlt    
  0x00007fd025100a7a: hlt    
  0x00007fd025100a7b: hlt    
  0x00007fd025100a7c: hlt    
  0x00007fd025100a7d: hlt    
  0x00007fd025100a7e: hlt    
  0x00007fd025100a7f: hlt    
[Stub Code]
  0x00007fd025100a80: nop                       ;   {no_reloc}
  0x00007fd025100a81: nop
  0x00007fd025100a82: nop
  0x00007fd025100a83: nop
  0x00007fd025100a84: nop
  0x00007fd025100a85: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025100a8f: jmpq   0x00007fd025100a8f  ;   {runtime_call}
  0x00007fd025100a94: nop
  0x00007fd025100a95: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025100a9f: jmpq   0x00007fd025100a9f  ;   {runtime_call}
  0x00007fd025100aa4: nop
  0x00007fd025100aa5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025100aaf: jmpq   0x00007fd025100aaf  ;   {runtime_call}
  0x00007fd025100ab4: nop
  0x00007fd025100ab5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025100abf: jmpq   0x00007fd025100abf  ;   {runtime_call}
[Exception Handler]
  0x00007fd025100ac4: callq  0x00007fd0250fb820  ;   {runtime_call}
  0x00007fd025100ac9: mov    %rsp,-0x28(%rsp)
  0x00007fd025100ace: sub    $0x80,%rsp
  0x00007fd025100ad5: mov    %rax,0x78(%rsp)
  0x00007fd025100ada: mov    %rcx,0x70(%rsp)
  0x00007fd025100adf: mov    %rdx,0x68(%rsp)
  0x00007fd025100ae4: mov    %rbx,0x60(%rsp)
  0x00007fd025100ae9: mov    %rbp,0x50(%rsp)
  0x00007fd025100aee: mov    %rsi,0x48(%rsp)
  0x00007fd025100af3: mov    %rdi,0x40(%rsp)
  0x00007fd025100af8: mov    %r8,0x38(%rsp)
  0x00007fd025100afd: mov    %r9,0x30(%rsp)
  0x00007fd025100b02: mov    %r10,0x28(%rsp)
  0x00007fd025100b07: mov    %r11,0x20(%rsp)
  0x00007fd025100b0c: mov    %r12,0x18(%rsp)
  0x00007fd025100b11: mov    %r13,0x10(%rsp)
  0x00007fd025100b16: mov    %r14,0x8(%rsp)
  0x00007fd025100b1b: mov    %r15,(%rsp)
  0x00007fd025100b1f: movabs $0x7fd03acf9f36,%rdi  ;   {external_word}
  0x00007fd025100b29: movabs $0x7fd025100ac9,%rsi  ;   {internal_word}
  0x00007fd025100b33: mov    %rsp,%rdx
  0x00007fd025100b36: and    $0xfffffffffffffff0,%rsp
  0x00007fd025100b3a: callq  0x00007fd03aa25990  ;   {runtime_call}
  0x00007fd025100b3f: hlt    
[Deopt Handler Code]
  0x00007fd025100b40: movabs $0x7fd025100b40,%r10  ;   {section_word}
  0x00007fd025100b4a: push   %r10
  0x00007fd025100b4c: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd025100b51: hlt    
  0x00007fd025100b52: hlt    
  0x00007fd025100b53: hlt    
  0x00007fd025100b54: hlt    
  0x00007fd025100b55: hlt    
  0x00007fd025100b56: hlt    
  0x00007fd025100b57: hlt    
<nmethod compile_id='1' compiler='C1' level='3' entry='0x00007fd025100660' size='2704' address='0x00007fd025100490' relocation_offset='296' insts_offset='464' stub_offset='1520' scopes_data_offset='1752' scopes_pcs_offset='2040' dependencies_offset='2664' nul_chk_table_offset='2672' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='256' iicount='256' stamp='0.065'/>
Decoding compiled method 0x00007fd0250fe450:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fd0214907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fd0250fe5c0: mov    %eax,-0x14000(%rsp)
  0x00007fd0250fe5c7: push   %rbp
  0x00007fd0250fe5c8: sub    $0x30,%rsp
  0x00007fd0250fe5cc: movabs $0x7fd021563ce8,%rax  ;   {metadata(method data for {method} {0x00007fd0214907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fd0250fe5d6: mov    0xdc(%rax),%edi
  0x00007fd0250fe5dc: add    $0x8,%edi
  0x00007fd0250fe5df: mov    %edi,0xdc(%rax)
  0x00007fd0250fe5e5: movabs $0x7fd0214907a8,%rax  ;   {metadata({method} {0x00007fd0214907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fd0250fe5ef: and    $0x1ff8,%edi
  0x00007fd0250fe5f5: cmp    $0x0,%edi
  0x00007fd0250fe5f8: je     0x00007fd0250fe65d  ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x00007fd0250fe5fe: cmp    %edx,%esi
  0x00007fd0250fe600: movabs $0x7fd021563ce8,%rax  ;   {metadata(method data for {method} {0x00007fd0214907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fd0250fe60a: movabs $0x108,%rdi
  0x00007fd0250fe614: jg     0x00007fd0250fe624
  0x00007fd0250fe61a: movabs $0x118,%rdi
  0x00007fd0250fe624: mov    (%rax,%rdi,1),%rbx
  0x00007fd0250fe628: lea    0x1(%rbx),%rbx
  0x00007fd0250fe62c: mov    %rbx,(%rax,%rdi,1)
  0x00007fd0250fe630: jg     0x00007fd0250fe64b  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x00007fd0250fe636: movabs $0x7fd021563ce8,%rax  ;   {metadata(method data for {method} {0x00007fd0214907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fd0250fe640: incl   0x128(%rax)
  0x00007fd0250fe646: jmpq   0x00007fd0250fe64e  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x00007fd0250fe64b: mov    %rdx,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x00007fd0250fe64e: mov    %rsi,%rax
  0x00007fd0250fe651: add    $0x30,%rsp
  0x00007fd0250fe655: pop    %rbp
  0x00007fd0250fe656: test   %eax,0x16d02aa4(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd0250fe65c: retq   
  0x00007fd0250fe65d: mov    %rax,0x8(%rsp)
  0x00007fd0250fe662: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd0250fe66a: callq  0x00007fd0250fdea0  ; OopMap{off=175}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x00007fd0250fe66f: jmp    0x00007fd0250fe5fe
  0x00007fd0250fe671: nop
  0x00007fd0250fe672: nop
  0x00007fd0250fe673: mov    0x2a8(%r15),%rax
  0x00007fd0250fe67a: movabs $0x0,%r10
  0x00007fd0250fe684: mov    %r10,0x2a8(%r15)
  0x00007fd0250fe68b: movabs $0x0,%r10
  0x00007fd0250fe695: mov    %r10,0x2b0(%r15)
  0x00007fd0250fe69c: add    $0x30,%rsp
  0x00007fd0250fe6a0: pop    %rbp
  0x00007fd0250fe6a1: jmpq   0x00007fd02506c4a0  ;   {runtime_call}
  0x00007fd0250fe6a6: hlt    
  0x00007fd0250fe6a7: hlt    
  0x00007fd0250fe6a8: hlt    
  0x00007fd0250fe6a9: hlt    
  0x00007fd0250fe6aa: hlt    
  0x00007fd0250fe6ab: hlt    
  0x00007fd0250fe6ac: hlt    
  0x00007fd0250fe6ad: hlt    
  0x00007fd0250fe6ae: hlt    
  0x00007fd0250fe6af: hlt    
  0x00007fd0250fe6b0: hlt    
  0x00007fd0250fe6b1: hlt    
  0x00007fd0250fe6b2: hlt    
  0x00007fd0250fe6b3: hlt    
  0x00007fd0250fe6b4: hlt    
  0x00007fd0250fe6b5: hlt    
  0x00007fd0250fe6b6: hlt    
  0x00007fd0250fe6b7: hlt    
  0x00007fd0250fe6b8: hlt    
  0x00007fd0250fe6b9: hlt    
  0x00007fd0250fe6ba: hlt    
  0x00007fd0250fe6bb: hlt    
  0x00007fd0250fe6bc: hlt    
  0x00007fd0250fe6bd: hlt    
  0x00007fd0250fe6be: hlt    
  0x00007fd0250fe6bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fd0250fe6c0: callq  0x00007fd0250fb820  ;   {no_reloc}
  0x00007fd0250fe6c5: mov    %rsp,-0x28(%rsp)
  0x00007fd0250fe6ca: sub    $0x80,%rsp
  0x00007fd0250fe6d1: mov    %rax,0x78(%rsp)
  0x00007fd0250fe6d6: mov    %rcx,0x70(%rsp)
  0x00007fd0250fe6db: mov    %rdx,0x68(%rsp)
  0x00007fd0250fe6e0: mov    %rbx,0x60(%rsp)
  0x00007fd0250fe6e5: mov    %rbp,0x50(%rsp)
  0x00007fd0250fe6ea: mov    %rsi,0x48(%rsp)
  0x00007fd0250fe6ef: mov    %rdi,0x40(%rsp)
  0x00007fd0250fe6f4: mov    %r8,0x38(%rsp)
  0x00007fd0250fe6f9: mov    %r9,0x30(%rsp)
  0x00007fd0250fe6fe: mov    %r10,0x28(%rsp)
  0x00007fd0250fe703: mov    %r11,0x20(%rsp)
  0x00007fd0250fe708: mov    %r12,0x18(%rsp)
  0x00007fd0250fe70d: mov    %r13,0x10(%rsp)
  0x00007fd0250fe712: mov    %r14,0x8(%rsp)
  0x00007fd0250fe717: mov    %r15,(%rsp)
  0x00007fd0250fe71b: movabs $0x7fd03acf9f36,%rdi  ;   {external_word}
  0x00007fd0250fe725: movabs $0x7fd0250fe6c5,%rsi  ;   {internal_word}
  0x00007fd0250fe72f: mov    %rsp,%rdx
  0x00007fd0250fe732: and    $0xfffffffffffffff0,%rsp
  0x00007fd0250fe736: callq  0x00007fd03aa25990  ;   {runtime_call}
  0x00007fd0250fe73b: hlt    
[Deopt Handler Code]
  0x00007fd0250fe73c: movabs $0x7fd0250fe73c,%r10  ;   {section_word}
  0x00007fd0250fe746: push   %r10
  0x00007fd0250fe748: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd0250fe74d: hlt    
  0x00007fd0250fe74e: hlt    
  0x00007fd0250fe74f: hlt    
<nmethod compile_id='3' compiler='C1' level='3' entry='0x00007fd0250fe5c0' size='936' address='0x00007fd0250fe450' relocation_offset='296' insts_offset='368' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='816' dependencies_offset='928' method='java/lang/Math min (II)I' bytes='11' count='640' iicount='640' stamp='0.066'/>
Decoding compiled method 0x00007fd025102c10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fd0214b56b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0xb0]  (sp of caller)
  0x00007fd025102e20: mov    %eax,-0x14000(%rsp)
  0x00007fd025102e27: push   %rbp
  0x00007fd025102e28: sub    $0xa0,%rsp
  0x00007fd025102e2f: mov    %rsi,%r8
  0x00007fd025102e32: mov    %rdx,%r9
  0x00007fd025102e35: movabs $0x7fd021579a60,%rbx  ;   {metadata(method data for {method} {0x00007fd0214b56b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fd025102e3f: mov    0xdc(%rbx),%edx
  0x00007fd025102e45: add    $0x8,%edx
  0x00007fd025102e48: mov    %edx,0xdc(%rbx)
  0x00007fd025102e4e: movabs $0x7fd0214b56b8,%rbx  ;   {metadata({method} {0x00007fd0214b56b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fd025102e58: and    $0x1ff8,%edx
  0x00007fd025102e5e: cmp    $0x0,%edx
  0x00007fd025102e61: je     0x00007fd0251036c1  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x00007fd025102e67: mov    %rcx,%r11
  0x00007fd025102e6a: sub    %r9d,%r11d
  0x00007fd025102e6d: cmp    $0x0,%r11d
  0x00007fd025102e71: movabs $0x7fd021579a60,%rbx  ;   {metadata(method data for {method} {0x00007fd0214b56b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fd025102e7b: movabs $0x108,%rdx
  0x00007fd025102e85: jge    0x00007fd025102e95
  0x00007fd025102e8b: movabs $0x118,%rdx
  0x00007fd025102e95: mov    (%rbx,%rdx,1),%rsi
  0x00007fd025102e99: lea    0x1(%rsi),%rsi
  0x00007fd025102e9d: mov    %rsi,(%rbx,%rdx,1)
  0x00007fd025102ea1: jl     0x00007fd025103064  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x00007fd025102ea7: mov    %r11,%rbx
  0x00007fd025102eaa: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00007fd025102eb4: movslq %ebx,%rbx
  0x00007fd025102eb7: mov    %rbx,%rdi
  0x00007fd025102eba: cmp    $0xffffff,%rbx
  0x00007fd025102ec1: ja     0x00007fd0251036d8
  0x00007fd025102ec7: movabs $0x17,%rsi
  0x00007fd025102ed1: lea    (%rsi,%rbx,2),%rsi
  0x00007fd025102ed5: and    $0xfffffffffffffff8,%rsi
  0x00007fd025102ed9: mov    0x60(%r15),%rax
  0x00007fd025102edd: lea    (%rax,%rsi,1),%rsi
  0x00007fd025102ee1: cmp    0x70(%r15),%rsi
  0x00007fd025102ee5: ja     0x00007fd0251036d8
  0x00007fd025102eeb: mov    %rsi,0x60(%r15)
  0x00007fd025102eef: sub    %rax,%rsi
  0x00007fd025102ef2: movq   $0x1,(%rax)
  0x00007fd025102ef9: mov    %rdx,%rcx
  0x00007fd025102efc: shr    $0x3,%rcx
  0x00007fd025102f00: mov    %ecx,0x8(%rax)
  0x00007fd025102f03: mov    %ebx,0xc(%rax)
  0x00007fd025102f06: sub    $0x10,%rsi
  0x00007fd025102f0a: je     0x00007fd025102f21
  0x00007fd025102f10: xor    %rbx,%rbx
  0x00007fd025102f13: shr    $0x3,%rsi
  0x00007fd025102f17: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fd025102f1c: dec    %rsi
  0x00007fd025102f1f: jne    0x00007fd025102f17  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x00007fd025102f21: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x00007fd0251036e2
  0x00007fd025102f25: sub    %r9d,%esi
  0x00007fd025102f28: movabs $0x7fd021579a60,%rdx  ;   {metadata(method data for {method} {0x00007fd0214b56b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fd025102f32: addq   $0x1,0x208(%rdx)
  0x00007fd025102f3a: movabs $0x7fd021563ce8,%rdx  ;   {metadata(method data for {method} {0x00007fd0214907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fd025102f44: mov    0xdc(%rdx),%ecx
  0x00007fd025102f4a: add    $0x8,%ecx
  0x00007fd025102f4d: mov    %ecx,0xdc(%rdx)
  0x00007fd025102f53: movabs $0x7fd0214907a8,%rdx  ;   {metadata({method} {0x00007fd0214907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fd025102f5d: and    $0x7ffff8,%ecx
  0x00007fd025102f63: cmp    $0x0,%ecx
  0x00007fd025102f66: je     0x00007fd0251036e7
  0x00007fd025102f6c: cmp    %r11d,%esi
  0x00007fd025102f6f: movabs $0x7fd021563ce8,%rdx  ;   {metadata(method data for {method} {0x00007fd0214907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fd025102f79: movabs $0x108,%rcx
  0x00007fd025102f83: jg     0x00007fd025102f93
  0x00007fd025102f89: movabs $0x118,%rcx
  0x00007fd025102f93: mov    (%rdx,%rcx,1),%rdi
  0x00007fd025102f97: lea    0x1(%rdi),%rdi
  0x00007fd025102f9b: mov    %rdi,(%rdx,%rcx,1)
  0x00007fd025102f9f: jg     0x00007fd025102fbd  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00007fd025102fa5: movabs $0x7fd021563ce8,%rdx  ;   {metadata(method data for {method} {0x00007fd0214907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fd025102faf: incl   0x128(%rdx)
  0x00007fd025102fb5: mov    %rsi,%rdi
  0x00007fd025102fb8: jmpq   0x00007fd025102fc0  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00007fd025102fbd: mov    %r11,%rdi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00007fd025102fc0: movabs $0x7fd021579a60,%rsi  ;   {metadata(method data for {method} {0x00007fd0214b56b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fd025102fca: addq   $0x1,0x218(%rsi)
  0x00007fd025102fd2: mov    %r8,%rsi
  0x00007fd025102fd5: mov    %r9,%rdx
  0x00007fd025102fd8: mov    %rax,%rcx
  0x00007fd025102fdb: mov    $0x0,%r8d
  0x00007fd025102fe1: mov    %rdi,%r9
  0x00007fd025102fe4: mov    %rax,0x70(%rsp)
  0x00007fd025102fe9: test   %edx,%edx
  0x00007fd025102feb: jl     0x00007fd0251036fe
  0x00007fd025102ff1: lea    (%rdx,%r9,1),%rdi
  0x00007fd025102ff5: cmp    0xc(%rsi),%edi
  0x00007fd025102ff8: ja     0x00007fd0251036fe
  0x00007fd025102ffe: lea    (%r8,%r9,1),%rdi
  0x00007fd025103002: cmp    0xc(%rcx),%edi
  0x00007fd025103005: ja     0x00007fd0251036fe
  0x00007fd02510300b: test   %r9d,%r9d
  0x00007fd02510300e: jl     0x00007fd0251036fe
  0x00007fd025103014: je     0x00007fd025103050
  0x00007fd02510301a: movslq %edx,%rdx
  0x00007fd02510301d: movslq %r8d,%r8
  0x00007fd025103020: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007fd025103025: lea    0x10(%rcx,%r8,2),%rsi
  0x00007fd02510302a: mov    %r9,%rdx
  0x00007fd02510302d: test   $0xf,%esp
  0x00007fd025103033: je     0x00007fd02510304b
  0x00007fd025103039: sub    $0x8,%rsp
  0x00007fd02510303d: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007fd025103042: add    $0x8,%rsp
  0x00007fd025103046: jmpq   0x00007fd025103050
  0x00007fd02510304b: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x00007fd025103050: mov    0x70(%rsp),%rax
  0x00007fd025103055: add    $0xa0,%rsp
  0x00007fd02510305c: pop    %rbp
  0x00007fd02510305d: test   %eax,0x16cfe09d(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd025103063: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x00007fd025103064: mov    %ecx,0x80(%rsp)
  0x00007fd02510306b: nopl   0x0(%rax,%rax,1)
  0x00007fd025103070: jmpq   0x00007fd025103718  ;   {no_reloc}
  0x00007fd025103075: add    %al,(%rax)
  0x00007fd025103077: add    %al,(%rax)
  0x00007fd025103079: add    %cl,-0x75(%rcx)
  0x00007fd02510307c: rex.RXB (bad) 
  0x00007fd02510307e: lea    0x20(%rax),%rdi
  0x00007fd025103082: cmp    0x70(%r15),%rdi
  0x00007fd025103086: ja     0x00007fd025103722
  0x00007fd02510308c: mov    %rdi,0x60(%r15)
  0x00007fd025103090: mov    0xa8(%rdx),%rcx
  0x00007fd025103097: mov    %rcx,(%rax)
  0x00007fd02510309a: mov    %rdx,%rcx
  0x00007fd02510309d: shr    $0x3,%rcx
  0x00007fd0251030a1: mov    %ecx,0x8(%rax)
  0x00007fd0251030a4: xor    %rcx,%rcx
  0x00007fd0251030a7: mov    %ecx,0xc(%rax)
  0x00007fd0251030aa: xor    %rcx,%rcx
  0x00007fd0251030ad: mov    %rcx,0x10(%rax)
  0x00007fd0251030b1: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x00007fd0251030b5: data16 xchg %ax,%ax
  0x00007fd0251030b8: jmpq   0x00007fd02510373e  ;   {no_reloc}
  0x00007fd0251030bd: add    %al,(%rax)
  0x00007fd0251030bf: add    %al,(%rax)
  0x00007fd0251030c1: add    %cl,-0x77(%rax)
  0x00007fd0251030c4: test   %ah,(%rax,%rcx,4)
  0x00007fd0251030c7: add    %al,(%rax)
  0x00007fd0251030c9: add    %cl,-0x75(%rcx)
  0x00007fd0251030cc: rex.RXB (bad) 
  0x00007fd0251030ce: lea    0x18(%rax),%rdi
  0x00007fd0251030d2: cmp    0x70(%r15),%rdi
  0x00007fd0251030d6: ja     0x00007fd025103748
  0x00007fd0251030dc: mov    %rdi,0x60(%r15)
  0x00007fd0251030e0: mov    0xa8(%rdx),%rcx
  0x00007fd0251030e7: mov    %rcx,(%rax)
  0x00007fd0251030ea: mov    %rdx,%rcx
  0x00007fd0251030ed: shr    $0x3,%rcx
  0x00007fd0251030f1: mov    %ecx,0x8(%rax)
  0x00007fd0251030f4: xor    %rcx,%rcx
  0x00007fd0251030f7: mov    %ecx,0xc(%rax)
  0x00007fd0251030fa: xor    %rcx,%rcx
  0x00007fd0251030fd: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x00007fd025103101: mov    %rax,%rbx
  0x00007fd025103104: movabs $0x7fd021579a60,%rdx  ;   {metadata(method data for {method} {0x00007fd0214b56b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fd02510310e: addq   $0x1,0x128(%rdx)
  0x00007fd025103116: movabs $0x7fd02157df20,%rbx  ;   {metadata(method data for {method} {0x00007fd0214130f0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fd025103120: mov    0xdc(%rbx),%edx
  0x00007fd025103126: add    $0x8,%edx
  0x00007fd025103129: mov    %edx,0xdc(%rbx)
  0x00007fd02510312f: movabs $0x7fd0214130f0,%rbx  ;   {metadata({method} {0x00007fd0214130f0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fd025103139: and    $0x7ffff8,%edx
  0x00007fd02510313f: cmp    $0x0,%edx
  0x00007fd025103142: je     0x00007fd025103755
  0x00007fd025103148: mov    %rax,%rbx
  0x00007fd02510314b: movabs $0x7fd02157df20,%rdx  ;   {metadata(method data for {method} {0x00007fd0214130f0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fd025103155: addq   $0x1,0x108(%rdx)
  0x00007fd02510315d: movabs $0x7fd02157e050,%rbx  ;   {metadata(method data for {method} {0x00007fd02140f420} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fd025103167: mov    0xdc(%rbx),%edx
  0x00007fd02510316d: add    $0x8,%edx
  0x00007fd025103170: mov    %edx,0xdc(%rbx)
  0x00007fd025103176: movabs $0x7fd02140f420,%rbx  ;   {metadata({method} {0x00007fd02140f420} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fd025103180: and    $0x7ffff8,%edx
  0x00007fd025103186: cmp    $0x0,%edx
  0x00007fd025103189: je     0x00007fd02510376c
  0x00007fd02510318f: mov    %rax,%rbx
  0x00007fd025103192: movabs $0x7fd02157e050,%rdx  ;   {metadata(method data for {method} {0x00007fd02140f420} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fd02510319c: addq   $0x1,0x108(%rdx)
  0x00007fd0251031a4: movabs $0x7fd021511108,%rbx  ;   {metadata(method data for {method} {0x00007fd02139b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fd0251031ae: mov    0xdc(%rbx),%edx
  0x00007fd0251031b4: add    $0x8,%edx
  0x00007fd0251031b7: mov    %edx,0xdc(%rbx)
  0x00007fd0251031bd: movabs $0x7fd02139b480,%rbx  ;   {metadata({method} {0x00007fd02139b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fd0251031c7: and    $0x7ffff8,%edx
  0x00007fd0251031cd: cmp    $0x0,%edx
  0x00007fd0251031d0: je     0x00007fd025103783
  0x00007fd0251031d6: mov    $0x10,%ebx
  0x00007fd0251031db: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00007fd0251031e5: mov    %rax,%r13
  0x00007fd0251031e8: movslq %ebx,%rbx
  0x00007fd0251031eb: mov    %rbx,%rdi
  0x00007fd0251031ee: cmp    $0xffffff,%rbx
  0x00007fd0251031f5: ja     0x00007fd02510379a
  0x00007fd0251031fb: movabs $0x17,%rsi
  0x00007fd025103205: lea    (%rsi,%rbx,2),%rsi
  0x00007fd025103209: and    $0xfffffffffffffff8,%rsi
  0x00007fd02510320d: mov    0x60(%r15),%rax
  0x00007fd025103211: lea    (%rax,%rsi,1),%rsi
  0x00007fd025103215: cmp    0x70(%r15),%rsi
  0x00007fd025103219: ja     0x00007fd02510379a
  0x00007fd02510321f: mov    %rsi,0x60(%r15)
  0x00007fd025103223: sub    %rax,%rsi
  0x00007fd025103226: movq   $0x1,(%rax)
  0x00007fd02510322d: mov    %rdx,%rcx
  0x00007fd025103230: shr    $0x3,%rcx
  0x00007fd025103234: mov    %ecx,0x8(%rax)
  0x00007fd025103237: mov    %ebx,0xc(%rax)
  0x00007fd02510323a: sub    $0x10,%rsi
  0x00007fd02510323e: je     0x00007fd025103255
  0x00007fd025103244: xor    %rbx,%rbx
  0x00007fd025103247: shr    $0x3,%rsi
  0x00007fd02510324b: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fd025103250: dec    %rsi
  0x00007fd025103253: jne    0x00007fd02510324b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x00007fd025103255: mov    %rax,%r10
  0x00007fd025103258: shr    $0x3,%r10
  0x00007fd02510325c: mov    %r10d,0x10(%r13)
  0x00007fd025103260: mov    %r13,%rax
  0x00007fd025103263: shr    $0x9,%rax
  0x00007fd025103267: movabs $0x7fd0211ff000,%rdx
  0x00007fd025103271: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x00007fd025103275: mov    %r13,%rax
  0x00007fd025103278: movabs $0x7fd021579a60,%rdx  ;   {metadata(method data for {method} {0x00007fd0214b56b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fd025103282: mov    0x8(%rax),%eax
  0x00007fd025103285: shl    $0x3,%rax
  0x00007fd025103289: cmp    0x140(%rdx),%rax
  0x00007fd025103290: jne    0x00007fd02510329f
  0x00007fd025103292: addq   $0x1,0x148(%rdx)
  0x00007fd02510329a: jmpq   0x00007fd025103305
  0x00007fd02510329f: cmp    0x150(%rdx),%rax
  0x00007fd0251032a6: jne    0x00007fd0251032b5
  0x00007fd0251032a8: addq   $0x1,0x158(%rdx)
  0x00007fd0251032b0: jmpq   0x00007fd025103305
  0x00007fd0251032b5: cmpq   $0x0,0x140(%rdx)
  0x00007fd0251032c0: jne    0x00007fd0251032d9
  0x00007fd0251032c2: mov    %rax,0x140(%rdx)
  0x00007fd0251032c9: movq   $0x1,0x148(%rdx)
  0x00007fd0251032d4: jmpq   0x00007fd025103305
  0x00007fd0251032d9: cmpq   $0x0,0x150(%rdx)
  0x00007fd0251032e4: jne    0x00007fd0251032fd
  0x00007fd0251032e6: mov    %rax,0x150(%rdx)
  0x00007fd0251032ed: movq   $0x1,0x158(%rdx)
  0x00007fd0251032f8: jmpq   0x00007fd025103305
  0x00007fd0251032fd: addq   $0x1,0x138(%rdx)
  0x00007fd025103305: movabs $0x7fd02157e188,%rdx  ;   {metadata(method data for {method} {0x00007fd0214138c8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fd02510330f: mov    0xdc(%rdx),%esi
  0x00007fd025103315: add    $0x8,%esi
  0x00007fd025103318: mov    %esi,0xdc(%rdx)
  0x00007fd02510331e: movabs $0x7fd0214138c8,%rdx  ;   {metadata({method} {0x00007fd0214138c8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fd025103328: and    $0x7ffff8,%esi
  0x00007fd02510332e: cmp    $0x0,%esi
  0x00007fd025103331: je     0x00007fd0251037a4
  0x00007fd025103337: mov    %r13,%rax
  0x00007fd02510333a: movabs $0x7fd02157e188,%rdx  ;   {metadata(method data for {method} {0x00007fd0214138c8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fd025103344: addq   $0x1,0x108(%rdx)
  0x00007fd02510334c: mov    %r9,%rdx
  0x00007fd02510334f: mov    %r13,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x00007fd025103352: mov    %r13,0x78(%rsp)
  0x00007fd025103357: callq  0x00007fd025046020  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007fd02510335c: mov    0x78(%rsp),%rax
  0x00007fd025103361: movabs $0x7fd021579a60,%rdx  ;   {metadata(method data for {method} {0x00007fd0214b56b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fd02510336b: mov    0x8(%rax),%eax
  0x00007fd02510336e: shl    $0x3,%rax
  0x00007fd025103372: cmp    0x170(%rdx),%rax
  0x00007fd025103379: jne    0x00007fd025103388
  0x00007fd02510337b: addq   $0x1,0x178(%rdx)
  0x00007fd025103383: jmpq   0x00007fd0251033ee
  0x00007fd025103388: cmp    0x180(%rdx),%rax
  0x00007fd02510338f: jne    0x00007fd02510339e
  0x00007fd025103391: addq   $0x1,0x188(%rdx)
  0x00007fd025103399: jmpq   0x00007fd0251033ee
  0x00007fd02510339e: cmpq   $0x0,0x170(%rdx)
  0x00007fd0251033a9: jne    0x00007fd0251033c2
  0x00007fd0251033ab: mov    %rax,0x170(%rdx)
  0x00007fd0251033b2: movq   $0x1,0x178(%rdx)
  0x00007fd0251033bd: jmpq   0x00007fd0251033ee
  0x00007fd0251033c2: cmpq   $0x0,0x180(%rdx)
  0x00007fd0251033cd: jne    0x00007fd0251033e6
  0x00007fd0251033cf: mov    %rax,0x180(%rdx)
  0x00007fd0251033d6: movq   $0x1,0x188(%rdx)
  0x00007fd0251033e1: jmpq   0x00007fd0251033ee
  0x00007fd0251033e6: addq   $0x1,0x168(%rdx)
  0x00007fd0251033ee: movabs $0x7fd02157e4d8,%rdx  ;   {metadata(method data for {method} {0x00007fd021413408} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fd0251033f8: mov    0xdc(%rdx),%esi
  0x00007fd0251033fe: add    $0x8,%esi
  0x00007fd025103401: mov    %esi,0xdc(%rdx)
  0x00007fd025103407: movabs $0x7fd021413408,%rdx  ;   {metadata({method} {0x00007fd021413408} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fd025103411: and    $0x7ffff8,%esi
  0x00007fd025103417: cmp    $0x0,%esi
  0x00007fd02510341a: je     0x00007fd0251037bb
  0x00007fd025103420: mov    0x78(%rsp),%rax
  0x00007fd025103425: movabs $0x7fd02157e4d8,%rdx  ;   {metadata(method data for {method} {0x00007fd021413408} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fd02510342f: addq   $0x1,0x108(%rdx)
  0x00007fd025103437: movabs $0x67108a3e0,%rdx  ;   {oop(&quot; &gt; &quot;)}
  0x00007fd025103441: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x00007fd025103446: nop
  0x00007fd025103447: callq  0x00007fd025046020  ; OopMap{[120]=Oop [136]=Oop off=1580}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007fd02510344c: mov    0x78(%rsp),%rax
  0x00007fd025103451: movabs $0x7fd021579a60,%rdx  ;   {metadata(method data for {method} {0x00007fd0214b56b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fd02510345b: mov    0x8(%rax),%eax
  0x00007fd02510345e: shl    $0x3,%rax
  0x00007fd025103462: cmp    0x1a0(%rdx),%rax
  0x00007fd025103469: jne    0x00007fd025103478
  0x00007fd02510346b: addq   $0x1,0x1a8(%rdx)
  0x00007fd025103473: jmpq   0x00007fd0251034de
  0x00007fd025103478: cmp    0x1b0(%rdx),%rax
  0x00007fd02510347f: jne    0x00007fd02510348e
  0x00007fd025103481: addq   $0x1,0x1b8(%rdx)
  0x00007fd025103489: jmpq   0x00007fd0251034de
  0x00007fd02510348e: cmpq   $0x0,0x1a0(%rdx)
  0x00007fd025103499: jne    0x00007fd0251034b2
  0x00007fd02510349b: mov    %rax,0x1a0(%rdx)
  0x00007fd0251034a2: movq   $0x1,0x1a8(%rdx)
  0x00007fd0251034ad: jmpq   0x00007fd0251034de
  0x00007fd0251034b2: cmpq   $0x0,0x1b0(%rdx)
  0x00007fd0251034bd: jne    0x00007fd0251034d6
  0x00007fd0251034bf: mov    %rax,0x1b0(%rdx)
  0x00007fd0251034c6: movq   $0x1,0x1b8(%rdx)
  0x00007fd0251034d1: jmpq   0x00007fd0251034de
  0x00007fd0251034d6: addq   $0x1,0x198(%rdx)
  0x00007fd0251034de: movabs $0x7fd02157e188,%rdx  ;   {metadata(method data for {method} {0x00007fd0214138c8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fd0251034e8: mov    0xdc(%rdx),%esi
  0x00007fd0251034ee: add    $0x8,%esi
  0x00007fd0251034f1: mov    %esi,0xdc(%rdx)
  0x00007fd0251034f7: movabs $0x7fd0214138c8,%rdx  ;   {metadata({method} {0x00007fd0214138c8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fd025103501: and    $0x7ffff8,%esi
  0x00007fd025103507: cmp    $0x0,%esi
  0x00007fd02510350a: je     0x00007fd0251037d2
  0x00007fd025103510: mov    0x78(%rsp),%rax
  0x00007fd025103515: movabs $0x7fd02157e188,%rdx  ;   {metadata(method data for {method} {0x00007fd0214138c8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fd02510351f: addq   $0x1,0x108(%rdx)
  0x00007fd025103527: mov    0x80(%rsp),%edx
  0x00007fd02510352e: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x00007fd025103533: nop
  0x00007fd025103534: nop
  0x00007fd025103535: nop
  0x00007fd025103536: nop
  0x00007fd025103537: callq  0x00007fd025046020  ; OopMap{[120]=Oop [136]=Oop off=1820}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007fd02510353c: mov    0x78(%rsp),%rax
  0x00007fd025103541: movabs $0x7fd021579a60,%rdx  ;   {metadata(method data for {method} {0x00007fd0214b56b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fd02510354b: mov    0x8(%rax),%eax
  0x00007fd02510354e: shl    $0x3,%rax
  0x00007fd025103552: cmp    0x1d0(%rdx),%rax
  0x00007fd025103559: jne    0x00007fd025103568
  0x00007fd02510355b: addq   $0x1,0x1d8(%rdx)
  0x00007fd025103563: jmpq   0x00007fd0251035ce
  0x00007fd025103568: cmp    0x1e0(%rdx),%rax
  0x00007fd02510356f: jne    0x00007fd02510357e
  0x00007fd025103571: addq   $0x1,0x1e8(%rdx)
  0x00007fd025103579: jmpq   0x00007fd0251035ce
  0x00007fd02510357e: cmpq   $0x0,0x1d0(%rdx)
  0x00007fd025103589: jne    0x00007fd0251035a2
  0x00007fd02510358b: mov    %rax,0x1d0(%rdx)
  0x00007fd025103592: movq   $0x1,0x1d8(%rdx)
  0x00007fd02510359d: jmpq   0x00007fd0251035ce
  0x00007fd0251035a2: cmpq   $0x0,0x1e0(%rdx)
  0x00007fd0251035ad: jne    0x00007fd0251035c6
  0x00007fd0251035af: mov    %rax,0x1e0(%rdx)
  0x00007fd0251035b6: movq   $0x1,0x1e8(%rdx)
  0x00007fd0251035c1: jmpq   0x00007fd0251035ce
  0x00007fd0251035c6: addq   $0x1,0x1c8(%rdx)
  0x00007fd0251035ce: movabs $0x7fd02157e800,%rdx  ;   {metadata(method data for {method} {0x00007fd0214147b8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fd0251035d8: mov    0xdc(%rdx),%esi
  0x00007fd0251035de: add    $0x8,%esi
  0x00007fd0251035e1: mov    %esi,0xdc(%rdx)
  0x00007fd0251035e7: movabs $0x7fd0214147b8,%rdx  ;   {metadata({method} {0x00007fd0214147b8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fd0251035f1: and    $0x7ffff8,%esi
  0x00007fd0251035f7: cmp    $0x0,%esi
  0x00007fd0251035fa: je     0x00007fd0251037e9
  0x00007fd025103600: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007fd02510360a: mov    0x60(%r15),%rax
  0x00007fd02510360e: lea    0x18(%rax),%rdi
  0x00007fd025103612: cmp    0x70(%r15),%rdi
  0x00007fd025103616: ja     0x00007fd025103800
  0x00007fd02510361c: mov    %rdi,0x60(%r15)
  0x00007fd025103620: mov    0xa8(%rdx),%rcx
  0x00007fd025103627: mov    %rcx,(%rax)
  0x00007fd02510362a: mov    %rdx,%rcx
  0x00007fd02510362d: shr    $0x3,%rcx
  0x00007fd025103631: mov    %ecx,0x8(%rax)
  0x00007fd025103634: xor    %rcx,%rcx
  0x00007fd025103637: mov    %ecx,0xc(%rax)
  0x00007fd02510363a: xor    %rcx,%rcx
  0x00007fd02510363d: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007fd025103641: mov    0x78(%rsp),%rdx
  0x00007fd025103646: mov    0x10(%rdx),%ecx
  0x00007fd025103649: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007fd02510364d: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007fd025103651: mov    %rax,%rdx
  0x00007fd025103654: movabs $0x7fd02157e800,%rsi  ;   {metadata(method data for {method} {0x00007fd0214147b8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fd02510365e: addq   $0x1,0x108(%rsi)
  0x00007fd025103666: mov    %rcx,%rdx
  0x00007fd025103669: mov    $0x0,%ecx
  0x00007fd02510366e: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007fd025103671: mov    %rax,0x90(%rsp)
  0x00007fd025103679: nop
  0x00007fd02510367a: nop
  0x00007fd02510367b: nop
  0x00007fd02510367c: nop
  0x00007fd02510367d: nop
  0x00007fd02510367e: nop
  0x00007fd02510367f: callq  0x00007fd025046020  ; OopMap{[136]=Oop [144]=Oop off=2148}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007fd025103684: mov    0x88(%rsp),%rax
  0x00007fd02510368c: movabs $0x7fd021579a60,%rdx  ;   {metadata(method data for {method} {0x00007fd0214b56b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fd025103696: addq   $0x1,0x1f8(%rdx)
  0x00007fd02510369e: mov    0x90(%rsp),%rdx
  0x00007fd0251036a6: mov    0x88(%rsp),%rsi    ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x00007fd0251036ae: nop
  0x00007fd0251036af: callq  0x00007fd025046020  ; OopMap{[136]=Oop off=2196}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007fd0251036b4: mov    0x88(%rsp),%rax
  0x00007fd0251036bc: jmpq   0x00007fd025103838
  0x00007fd0251036c1: mov    %rbx,0x8(%rsp)
  0x00007fd0251036c6: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd0251036ce: callq  0x00007fd0250fdea0  ; OopMap{r8=Oop off=2227}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x00007fd0251036d3: jmpq   0x00007fd025102e67
  0x00007fd0251036d8: callq  0x00007fd0250faa60  ; OopMap{r8=Oop off=2237}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x00007fd0251036dd: jmpq   0x00007fd025102f21
  0x00007fd0251036e2: callq  0x00007fd0250f9a40  ; OopMap{r8=Oop rax=Oop off=2247}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x00007fd0251036e7: mov    %rdx,0x8(%rsp)
  0x00007fd0251036ec: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd0251036f4: callq  0x00007fd0250fdea0  ; OopMap{r8=Oop rax=Oop off=2265}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x00007fd0251036f9: jmpq   0x00007fd025102f6c
  0x00007fd0251036fe: nop
  0x00007fd0251036ff: callq  0x00007fd025046420  ; OopMap{[112]=Oop off=2276}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x00007fd025103704: jmpq   0x00007fd025103050
  0x00007fd025103709: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fd025103713: mov    $0xa050f00,%eax
  0x00007fd025103718: callq  0x00007fd0250fcea0  ; OopMap{off=2301}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x00007fd02510371d: jmpq   0x00007fd025103070
  0x00007fd025103722: mov    %rdx,%rdx
  0x00007fd025103725: callq  0x00007fd0250fa1a0  ; OopMap{off=2314}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x00007fd02510372a: jmpq   0x00007fd0251030b5
  0x00007fd02510372f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fd025103739: mov    $0xa050f00,%eax
  0x00007fd02510373e: callq  0x00007fd0250fcea0  ; OopMap{rax=Oop off=2339}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x00007fd025103743: jmpq   0x00007fd0251030b8
  0x00007fd025103748: mov    %rdx,%rdx
  0x00007fd02510374b: callq  0x00007fd0250fa1a0  ; OopMap{[136]=Oop off=2352}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x00007fd025103750: jmpq   0x00007fd025103101
  0x00007fd025103755: mov    %rbx,0x8(%rsp)
  0x00007fd02510375a: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd025103762: callq  0x00007fd0250fdea0  ; OopMap{[136]=Oop rax=Oop off=2375}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007fd025103767: jmpq   0x00007fd025103148
  0x00007fd02510376c: mov    %rbx,0x8(%rsp)
  0x00007fd025103771: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd025103779: callq  0x00007fd0250fdea0  ; OopMap{[136]=Oop rax=Oop off=2398}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007fd02510377e: jmpq   0x00007fd02510318f
  0x00007fd025103783: mov    %rbx,0x8(%rsp)
  0x00007fd025103788: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd025103790: callq  0x00007fd0250fdea0  ; OopMap{[136]=Oop rax=Oop off=2421}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007fd025103795: jmpq   0x00007fd0251031d6
  0x00007fd02510379a: callq  0x00007fd0250faa60  ; OopMap{[136]=Oop r13=Oop off=2431}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007fd02510379f: jmpq   0x00007fd025103255
  0x00007fd0251037a4: mov    %rdx,0x8(%rsp)
  0x00007fd0251037a9: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd0251037b1: callq  0x00007fd0250fdea0  ; OopMap{[136]=Oop r13=Oop off=2454}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x00007fd0251037b6: jmpq   0x00007fd025103337
  0x00007fd0251037bb: mov    %rdx,0x8(%rsp)
  0x00007fd0251037c0: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd0251037c8: callq  0x00007fd0250fdea0  ; OopMap{[120]=Oop [136]=Oop off=2477}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x00007fd0251037cd: jmpq   0x00007fd025103420
  0x00007fd0251037d2: mov    %rdx,0x8(%rsp)
  0x00007fd0251037d7: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd0251037df: callq  0x00007fd0250fdea0  ; OopMap{[120]=Oop [136]=Oop off=2500}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x00007fd0251037e4: jmpq   0x00007fd025103510
  0x00007fd0251037e9: mov    %rdx,0x8(%rsp)
  0x00007fd0251037ee: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd0251037f6: callq  0x00007fd0250fdea0  ; OopMap{[120]=Oop [136]=Oop off=2523}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x00007fd0251037fb: jmpq   0x00007fd025103600
  0x00007fd025103800: mov    %rdx,%rdx
  0x00007fd025103803: callq  0x00007fd0250fa1a0  ; OopMap{[120]=Oop [136]=Oop off=2536}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x00007fd025103808: jmpq   0x00007fd025103641
  0x00007fd02510380d: nop
  0x00007fd02510380e: nop
  0x00007fd02510380f: mov    0x2a8(%r15),%rax
  0x00007fd025103816: movabs $0x0,%r10
  0x00007fd025103820: mov    %r10,0x2a8(%r15)
  0x00007fd025103827: movabs $0x0,%r10
  0x00007fd025103831: mov    %r10,0x2b0(%r15)
  0x00007fd025103838: add    $0xa0,%rsp
  0x00007fd02510383f: pop    %rbp
  0x00007fd025103840: jmpq   0x00007fd02506c4a0  ;   {runtime_call}
  0x00007fd025103845: hlt    
  0x00007fd025103846: hlt    
  0x00007fd025103847: hlt    
  0x00007fd025103848: hlt    
  0x00007fd025103849: hlt    
  0x00007fd02510384a: hlt    
  0x00007fd02510384b: hlt    
  0x00007fd02510384c: hlt    
  0x00007fd02510384d: hlt    
  0x00007fd02510384e: hlt    
  0x00007fd02510384f: hlt    
  0x00007fd025103850: hlt    
  0x00007fd025103851: hlt    
  0x00007fd025103852: hlt    
  0x00007fd025103853: hlt    
  0x00007fd025103854: hlt    
  0x00007fd025103855: hlt    
  0x00007fd025103856: hlt    
  0x00007fd025103857: hlt    
  0x00007fd025103858: hlt    
  0x00007fd025103859: hlt    
  0x00007fd02510385a: hlt    
  0x00007fd02510385b: hlt    
  0x00007fd02510385c: hlt    
  0x00007fd02510385d: hlt    
  0x00007fd02510385e: hlt    
  0x00007fd02510385f: hlt    
[Stub Code]
  0x00007fd025103860: nop                       ;   {no_reloc}
  0x00007fd025103861: nop
  0x00007fd025103862: nop
  0x00007fd025103863: nop
  0x00007fd025103864: nop
  0x00007fd025103865: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd02510386f: jmpq   0x00007fd02510386f  ;   {runtime_call}
  0x00007fd025103874: nop
  0x00007fd025103875: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd02510387f: jmpq   0x00007fd02510387f  ;   {runtime_call}
  0x00007fd025103884: nop
  0x00007fd025103885: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd02510388f: jmpq   0x00007fd02510388f  ;   {runtime_call}
  0x00007fd025103894: nop
  0x00007fd025103895: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd02510389f: jmpq   0x00007fd02510389f  ;   {runtime_call}
  0x00007fd0251038a4: nop
  0x00007fd0251038a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd0251038af: jmpq   0x00007fd0251038af  ;   {runtime_call}
  0x00007fd0251038b4: nop
  0x00007fd0251038b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd0251038bf: jmpq   0x00007fd0251038bf  ;   {runtime_call}
[Exception Handler]
  0x00007fd0251038c4: callq  0x00007fd0250fb820  ;   {runtime_call}
  0x00007fd0251038c9: mov    %rsp,-0x28(%rsp)
  0x00007fd0251038ce: sub    $0x80,%rsp
  0x00007fd0251038d5: mov    %rax,0x78(%rsp)
  0x00007fd0251038da: mov    %rcx,0x70(%rsp)
  0x00007fd0251038df: mov    %rdx,0x68(%rsp)
  0x00007fd0251038e4: mov    %rbx,0x60(%rsp)
  0x00007fd0251038e9: mov    %rbp,0x50(%rsp)
  0x00007fd0251038ee: mov    %rsi,0x48(%rsp)
  0x00007fd0251038f3: mov    %rdi,0x40(%rsp)
  0x00007fd0251038f8: mov    %r8,0x38(%rsp)
  0x00007fd0251038fd: mov    %r9,0x30(%rsp)
  0x00007fd025103902: mov    %r10,0x28(%rsp)
  0x00007fd025103907: mov    %r11,0x20(%rsp)
  0x00007fd02510390c: mov    %r12,0x18(%rsp)
  0x00007fd025103911: mov    %r13,0x10(%rsp)
  0x00007fd025103916: mov    %r14,0x8(%rsp)
  0x00007fd02510391b: mov    %r15,(%rsp)
  0x00007fd02510391f: movabs $0x7fd03acf9f36,%rdi  ;   {external_word}
  0x00007fd025103929: movabs $0x7fd0251038c9,%rsi  ;   {internal_word}
  0x00007fd025103933: mov    %rsp,%rdx
  0x00007fd025103936: and    $0xfffffffffffffff0,%rsp
  0x00007fd02510393a: callq  0x00007fd03aa25990  ;   {runtime_call}
  0x00007fd02510393f: hlt    
[Deopt Handler Code]
  0x00007fd025103940: movabs $0x7fd025103940,%r10  ;   {section_word}
  0x00007fd02510394a: push   %r10
  0x00007fd02510394c: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd025103951: hlt    
  0x00007fd025103952: hlt    
  0x00007fd025103953: hlt    
  0x00007fd025103954: hlt    
  0x00007fd025103955: hlt    
  0x00007fd025103956: hlt    
  0x00007fd025103957: hlt    
<nmethod compile_id='2' compiler='C1' level='3' entry='0x00007fd025102e20' size='4856' address='0x00007fd025102c10' relocation_offset='296' insts_offset='528' stub_offset='3152' scopes_data_offset='3472' scopes_pcs_offset='4096' dependencies_offset='4832' nul_chk_table_offset='4840' oops_offset='3400' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='256' iicount='256' stamp='0.072'/>
<writer thread='140532334335744'/>
[Loaded java.lang.invoke.MethodHandleStatics from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<task_queued compile_id='4' method='java/lang/String hashCode ()I' bytes='55' count='416' backedge_count='6144' iicount='416' level='3' stamp='0.073' comment='tiered' hot_count='416'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
<writer thread='140531745502976'/>
Decoding compiled method 0x00007fd025102650:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fd0213a0000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fd0251027c0: mov    0x8(%rsi),%r10d
  0x00007fd0251027c4: shl    $0x3,%r10
  0x00007fd0251027c8: cmp    %rax,%r10
  0x00007fd0251027cb: jne    0x00007fd025045e20  ;   {runtime_call}
  0x00007fd0251027d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fd0251027dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fd0251027e0: mov    %eax,-0x14000(%rsp)
  0x00007fd0251027e7: push   %rbp
  0x00007fd0251027e8: sub    $0x30,%rsp
  0x00007fd0251027ec: movabs $0x7fd021563b50,%rax  ;   {metadata(method data for {method} {0x00007fd0213a0000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd0251027f6: mov    0xdc(%rax),%edi
  0x00007fd0251027fc: add    $0x8,%edi
  0x00007fd0251027ff: mov    %edi,0xdc(%rax)
  0x00007fd025102805: movabs $0x7fd0213a0000,%rax  ;   {metadata({method} {0x00007fd0213a0000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510280f: and    $0x1ff8,%edi
  0x00007fd025102815: cmp    $0x0,%edi
  0x00007fd025102818: je     0x00007fd025102951  ;*aload_0
                                                ; - java.lang.String::hashCode@0 (line 1466)

  0x00007fd02510281e: mov    0x10(%rsi),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x00007fd025102821: cmp    $0x0,%eax
  0x00007fd025102824: movabs $0x7fd021563b50,%rdi  ;   {metadata(method data for {method} {0x00007fd0213a0000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510282e: movabs $0x108,%rbx
  0x00007fd025102838: jne    0x00007fd025102848
  0x00007fd02510283e: movabs $0x118,%rbx
  0x00007fd025102848: mov    (%rdi,%rbx,1),%rdx
  0x00007fd02510284c: lea    0x1(%rdx),%rdx
  0x00007fd025102850: mov    %rdx,(%rdi,%rbx,1)
  0x00007fd025102854: jne    0x00007fd025102945  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x00007fd02510285a: mov    0xc(%rsi),%edi
  0x00007fd02510285d: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x00007fd025102861: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x00007fd025102968
  0x00007fd025102864: cmp    $0x0,%ebx
  0x00007fd025102867: movabs $0x7fd021563b50,%rdx  ;   {metadata(method data for {method} {0x00007fd0213a0000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025102871: movabs $0x128,%rcx
  0x00007fd02510287b: jle    0x00007fd02510288b
  0x00007fd025102881: movabs $0x138,%rcx
  0x00007fd02510288b: mov    (%rdx,%rcx,1),%r8
  0x00007fd02510288f: lea    0x1(%r8),%r8
  0x00007fd025102893: mov    %r8,(%rdx,%rcx,1)
  0x00007fd025102897: jle    0x00007fd025102945  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x00007fd02510289d: mov    $0x0,%edx
  0x00007fd0251028a2: jmpq   0x00007fd02510290a  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x00007fd0251028a7: nop
  0x00007fd0251028a8: movslq %edx,%rcx
  0x00007fd0251028ab: movzwl 0x10(%rdi,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x00007fd0251028b0: mov    %rax,%r8
  0x00007fd0251028b3: shl    $0x5,%eax
  0x00007fd0251028b6: sub    %r8d,%eax
  0x00007fd0251028b9: add    %ecx,%eax
  0x00007fd0251028bb: inc    %edx
  0x00007fd0251028bd: movabs $0x7fd021563b50,%rcx  ;   {metadata(method data for {method} {0x00007fd0213a0000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd0251028c7: mov    0xe0(%rcx),%r8d
  0x00007fd0251028ce: add    $0x8,%r8d
  0x00007fd0251028d2: mov    %r8d,0xe0(%rcx)
  0x00007fd0251028d9: movabs $0x7fd0213a0000,%rcx  ;   {metadata({method} {0x00007fd0213a0000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd0251028e3: and    $0xfff8,%r8d
  0x00007fd0251028ea: cmp    $0x0,%r8d
  0x00007fd0251028ee: je     0x00007fd02510296d  ; OopMap{rdi=Oop rsi=Oop off=308}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x00007fd0251028f4: test   %eax,0x16cfe806(%rip)        # 0x00007fd03be01100
                                                ;   {poll}
  0x00007fd0251028fa: movabs $0x7fd021563b50,%rcx  ;   {metadata(method data for {method} {0x00007fd0213a0000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025102904: incl   0x168(%rcx)        ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x00007fd02510290a: cmp    %ebx,%edx
  0x00007fd02510290c: movabs $0x7fd021563b50,%rcx  ;   {metadata(method data for {method} {0x00007fd0213a0000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025102916: movabs $0x148,%r8
  0x00007fd025102920: jge    0x00007fd025102930
  0x00007fd025102926: movabs $0x158,%r8
  0x00007fd025102930: mov    (%rcx,%r8,1),%r9
  0x00007fd025102934: lea    0x1(%r9),%r9
  0x00007fd025102938: mov    %r9,(%rcx,%r8,1)
  0x00007fd02510293c: jl     0x00007fd0251028a8  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x00007fd025102942: mov    %eax,0x10(%rsi)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x00007fd025102945: add    $0x30,%rsp
  0x00007fd025102949: pop    %rbp
  0x00007fd02510294a: test   %eax,0x16cfe7b0(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd025102950: retq   
  0x00007fd025102951: mov    %rax,0x8(%rsp)
  0x00007fd025102956: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd02510295e: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)
                                                ;   {runtime_call}
  0x00007fd025102963: jmpq   0x00007fd02510281e
  0x00007fd025102968: callq  0x00007fd0250f9a40  ; OopMap{rsi=Oop rdi=Oop off=429}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x00007fd02510296d: mov    %rcx,0x8(%rsp)
  0x00007fd025102972: movq   $0x2d,(%rsp)
  0x00007fd02510297a: callq  0x00007fd0250fdea0  ; OopMap{rdi=Oop rsi=Oop off=447}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)
                                                ;   {runtime_call}
  0x00007fd02510297f: jmpq   0x00007fd0251028f4
  0x00007fd025102984: nop
  0x00007fd025102985: nop
  0x00007fd025102986: mov    0x2a8(%r15),%rax
  0x00007fd02510298d: movabs $0x0,%r10
  0x00007fd025102997: mov    %r10,0x2a8(%r15)
  0x00007fd02510299e: movabs $0x0,%r10
  0x00007fd0251029a8: mov    %r10,0x2b0(%r15)
  0x00007fd0251029af: add    $0x30,%rsp
  0x00007fd0251029b3: pop    %rbp
  0x00007fd0251029b4: jmpq   0x00007fd02506c4a0  ;   {runtime_call}
  0x00007fd0251029b9: hlt    
  0x00007fd0251029ba: hlt    
  0x00007fd0251029bb: hlt    
  0x00007fd0251029bc: hlt    
  0x00007fd0251029bd: hlt    
  0x00007fd0251029be: hlt    
  0x00007fd0251029bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fd0251029c0: callq  0x00007fd0250fb820  ;   {no_reloc}
  0x00007fd0251029c5: mov    %rsp,-0x28(%rsp)
  0x00007fd0251029ca: sub    $0x80,%rsp
  0x00007fd0251029d1: mov    %rax,0x78(%rsp)
  0x00007fd0251029d6: mov    %rcx,0x70(%rsp)
  0x00007fd0251029db: mov    %rdx,0x68(%rsp)
  0x00007fd0251029e0: mov    %rbx,0x60(%rsp)
  0x00007fd0251029e5: mov    %rbp,0x50(%rsp)
  0x00007fd0251029ea: mov    %rsi,0x48(%rsp)
  0x00007fd0251029ef: mov    %rdi,0x40(%rsp)
  0x00007fd0251029f4: mov    %r8,0x38(%rsp)
  0x00007fd0251029f9: mov    %r9,0x30(%rsp)
  0x00007fd0251029fe: mov    %r10,0x28(%rsp)
  0x00007fd025102a03: mov    %r11,0x20(%rsp)
  0x00007fd025102a08: mov    %r12,0x18(%rsp)
  0x00007fd025102a0d: mov    %r13,0x10(%rsp)
  0x00007fd025102a12: mov    %r14,0x8(%rsp)
  0x00007fd025102a17: mov    %r15,(%rsp)
  0x00007fd025102a1b: movabs $0x7fd03acf9f36,%rdi  ;   {external_word}
  0x00007fd025102a25: movabs $0x7fd0251029c5,%rsi  ;   {internal_word}
  0x00007fd025102a2f: mov    %rsp,%rdx
  0x00007fd025102a32: and    $0xfffffffffffffff0,%rsp
  0x00007fd025102a36: callq  0x00007fd03aa25990  ;   {runtime_call}
  0x00007fd025102a3b: hlt    
[Deopt Handler Code]
  0x00007fd025102a3c: movabs $0x7fd025102a3c,%r10  ;   {section_word}
  0x00007fd025102a46: push   %r10
  0x00007fd025102a48: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd025102a4d: hlt    
  0x00007fd025102a4e: hlt    
  0x00007fd025102a4f: hlt    
<nmethod compile_id='4' compiler='C1' level='3' entry='0x00007fd0251027c0' size='1448' address='0x00007fd025102650' relocation_offset='296' insts_offset='368' stub_offset='880' scopes_data_offset='1032' scopes_pcs_offset='1152' dependencies_offset='1424' nul_chk_table_offset='1432' method='java/lang/String hashCode ()I' bytes='55' count='437' backedge_count='6739' iicount='437' stamp='0.075'/>
<writer thread='140532334335744'/>
<task_queued compile_id='5' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='384' backedge_count='1316' iicount='384' level='3' stamp='0.075' comment='tiered' hot_count='384'/>
[Loaded sun.misc.PostVMInitHook from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicBoolean from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140531745502976'/>
Decoding compiled method 0x00007fd025101c50:
<writer thread='140532334335744'/>
[Loaded sun.usagetracker.UsageTrackerClient$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140531745502976'/>
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fd02139f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fd025101de0: mov    0x8(%rsi),%r10d
  0x00007fd025101de4: shl    $0x3,%r10
  0x00007fd025101de8: cmp    %rax,%r10
  0x00007fd025101deb: jne    0x00007fd025045e20  ;   {runtime_call}
  0x00007fd025101df1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fd025101dfc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fd025101e00: mov    %eax,-0x14000(%rsp)
  0x00007fd025101e07: push   %rbp
  0x00007fd025101e08: sub    $0x30,%rsp
  0x00007fd025101e0c: movabs $0x7fd021582fa0,%rax  ;   {metadata(method data for {method} {0x00007fd02139f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025101e16: mov    0xdc(%rax),%edi
  0x00007fd025101e1c: add    $0x8,%edi
  0x00007fd025101e1f: mov    %edi,0xdc(%rax)
  0x00007fd025101e25: movabs $0x7fd02139f618,%rax  ;   {metadata({method} {0x00007fd02139f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025101e2f: and    $0x1ff8,%edi
  0x00007fd025101e35: cmp    $0x0,%edi
  0x00007fd025101e38: je     0x00007fd025102206  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 977)

  0x00007fd025101e3e: cmp    %rdx,%rsi
  0x00007fd025101e41: movabs $0x7fd021582fa0,%rax  ;   {metadata(method data for {method} {0x00007fd02139f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025101e4b: movabs $0x108,%rdi
  0x00007fd025101e55: jne    0x00007fd025101e65
  0x00007fd025101e5b: movabs $0x118,%rdi
  0x00007fd025101e65: mov    (%rax,%rdi,1),%rbx
  0x00007fd025101e69: lea    0x1(%rbx),%rbx
  0x00007fd025101e6d: mov    %rbx,(%rax,%rdi,1)
  0x00007fd025101e71: je     0x00007fd0251021f5  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x00007fd025101e77: cmp    $0x0,%rdx
  0x00007fd025101e7b: jne    0x00007fd025101e96
  0x00007fd025101e7d: movabs $0x7fd021582fa0,%rbx  ;   {metadata(method data for {method} {0x00007fd02139f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025101e87: orl    $0x100,0x120(%rbx)
  0x00007fd025101e91: jmpq   0x00007fd025101f56
  0x00007fd025101e96: movabs $0x7c00016d0,%rcx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007fd025101ea0: mov    0x8(%rdx),%edi
  0x00007fd025101ea3: shl    $0x3,%rdi
  0x00007fd025101ea7: cmp    %rdi,%rcx
  0x00007fd025101eaa: jne    0x00007fd025101f3a
  0x00007fd025101eb0: movabs $0x7fd021582fa0,%rbx  ;   {metadata(method data for {method} {0x00007fd02139f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025101eba: mov    0x8(%rdx),%ecx
  0x00007fd025101ebd: shl    $0x3,%rcx
  0x00007fd025101ec1: cmp    0x130(%rbx),%rcx
  0x00007fd025101ec8: jne    0x00007fd025101ed7
  0x00007fd025101eca: addq   $0x1,0x138(%rbx)
  0x00007fd025101ed2: jmpq   0x00007fd025101f5b
  0x00007fd025101ed7: cmp    0x140(%rbx),%rcx
  0x00007fd025101ede: jne    0x00007fd025101eed
  0x00007fd025101ee0: addq   $0x1,0x148(%rbx)
  0x00007fd025101ee8: jmpq   0x00007fd025101f5b
  0x00007fd025101eed: cmpq   $0x0,0x130(%rbx)
  0x00007fd025101ef8: jne    0x00007fd025101f11
  0x00007fd025101efa: mov    %rcx,0x130(%rbx)
  0x00007fd025101f01: movq   $0x1,0x138(%rbx)
  0x00007fd025101f0c: jmpq   0x00007fd025101f5b
  0x00007fd025101f11: cmpq   $0x0,0x140(%rbx)
  0x00007fd025101f1c: jne    0x00007fd025101f35
  0x00007fd025101f1e: mov    %rcx,0x140(%rbx)
  0x00007fd025101f25: movq   $0x1,0x148(%rbx)
  0x00007fd025101f30: jmpq   0x00007fd025101f5b
  0x00007fd025101f35: jmpq   0x00007fd025101f5b
  0x00007fd025101f3a: movabs $0x7fd021582fa0,%rbx  ;   {metadata(method data for {method} {0x00007fd02139f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025101f44: subq   $0x1,0x128(%rbx)
  0x00007fd025101f4c: jmpq   0x00007fd025101f56
  0x00007fd025101f51: jmpq   0x00007fd025101f5b
  0x00007fd025101f56: xor    %rax,%rax
  0x00007fd025101f59: jmp    0x00007fd025101f65
  0x00007fd025101f5b: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x00007fd025101f65: cmp    $0x0,%eax
  0x00007fd025101f68: movabs $0x7fd021582fa0,%rax  ;   {metadata(method data for {method} {0x00007fd02139f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025101f72: movabs $0x158,%rdi
  0x00007fd025101f7c: je     0x00007fd025101f8c
  0x00007fd025101f82: movabs $0x168,%rdi
  0x00007fd025101f8c: mov    (%rax,%rdi,1),%rbx
  0x00007fd025101f90: lea    0x1(%rbx),%rbx
  0x00007fd025101f94: mov    %rbx,(%rax,%rdi,1)
  0x00007fd025101f98: je     0x00007fd0251021e4  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 980)

  0x00007fd025101f9e: cmp    $0x0,%rdx
  0x00007fd025101fa2: jne    0x00007fd025101fbd
  0x00007fd025101fa4: movabs $0x7fd021582fa0,%rbx  ;   {metadata(method data for {method} {0x00007fd02139f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025101fae: orl    $0x100,0x170(%rbx)
  0x00007fd025101fb8: jmpq   0x00007fd02510207d
  0x00007fd025101fbd: movabs $0x7c00016d0,%rax  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007fd025101fc7: mov    0x8(%rdx),%edi
  0x00007fd025101fca: shl    $0x3,%rdi
  0x00007fd025101fce: cmp    %rdi,%rax
  0x00007fd025101fd1: jne    0x00007fd025102061
  0x00007fd025101fd7: movabs $0x7fd021582fa0,%rbx  ;   {metadata(method data for {method} {0x00007fd02139f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025101fe1: mov    0x8(%rdx),%eax
  0x00007fd025101fe4: shl    $0x3,%rax
  0x00007fd025101fe8: cmp    0x180(%rbx),%rax
  0x00007fd025101fef: jne    0x00007fd025101ffe
  0x00007fd025101ff1: addq   $0x1,0x188(%rbx)
  0x00007fd025101ff9: jmpq   0x00007fd02510207d
  0x00007fd025101ffe: cmp    0x190(%rbx),%rax
  0x00007fd025102005: jne    0x00007fd025102014
  0x00007fd025102007: addq   $0x1,0x198(%rbx)
  0x00007fd02510200f: jmpq   0x00007fd02510207d
  0x00007fd025102014: cmpq   $0x0,0x180(%rbx)
  0x00007fd02510201f: jne    0x00007fd025102038
  0x00007fd025102021: mov    %rax,0x180(%rbx)
  0x00007fd025102028: movq   $0x1,0x188(%rbx)
  0x00007fd025102033: jmpq   0x00007fd02510207d
  0x00007fd025102038: cmpq   $0x0,0x190(%rbx)
  0x00007fd025102043: jne    0x00007fd02510205c
  0x00007fd025102045: mov    %rax,0x190(%rbx)
  0x00007fd02510204c: movq   $0x1,0x198(%rbx)
  0x00007fd025102057: jmpq   0x00007fd02510207d
  0x00007fd02510205c: jmpq   0x00007fd02510207d
  0x00007fd025102061: movabs $0x7fd021582fa0,%rbx  ;   {metadata(method data for {method} {0x00007fd02139f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510206b: subq   $0x1,0x178(%rbx)
  0x00007fd025102073: jmpq   0x00007fd02510221d
  0x00007fd025102078: jmpq   0x00007fd02510207d
  0x00007fd02510207d: mov    %rdx,%rax          ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)

  0x00007fd025102080: mov    0xc(%rsi),%esi
  0x00007fd025102083: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x00007fd025102087: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x00007fd025102226
  0x00007fd02510208a: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x00007fd02510222b
  0x00007fd02510208d: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x00007fd025102091: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x00007fd025102230
  0x00007fd025102094: cmp    %ebx,%edi
  0x00007fd025102096: movabs $0x7fd021582fa0,%rbx  ;   {metadata(method data for {method} {0x00007fd02139f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fd0251020a0: movabs $0x1a8,%rdx
  0x00007fd0251020aa: jne    0x00007fd0251020ba
  0x00007fd0251020b0: movabs $0x1b8,%rdx
  0x00007fd0251020ba: mov    (%rbx,%rdx,1),%rcx
  0x00007fd0251020be: lea    0x1(%rcx),%rcx
  0x00007fd0251020c2: mov    %rcx,(%rbx,%rdx,1)
  0x00007fd0251020c6: jne    0x00007fd0251021e4  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x00007fd0251020cc: mov    $0x0,%ebx
  0x00007fd0251020d1: jmpq   0x00007fd02510217f  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 987)

  0x00007fd0251020d6: xchg   %ax,%ax
  0x00007fd0251020d8: movslq %ebx,%rdi
  0x00007fd0251020db: cmp    0xc(%rsi),%ebx
  0x00007fd0251020de: jae    0x00007fd025102235
  0x00007fd0251020e4: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00007fd0251020e9: movslq %ebx,%rcx
  0x00007fd0251020ec: cmp    0xc(%rax),%ebx
  0x00007fd0251020ef: jae    0x00007fd02510223e
  0x00007fd0251020f5: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00007fd0251020fa: cmp    %ecx,%edi
  0x00007fd0251020fc: movabs $0x7fd021582fa0,%rdi  ;   {metadata(method data for {method} {0x00007fd02139f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025102106: movabs $0x1e8,%rcx
  0x00007fd025102110: je     0x00007fd025102120
  0x00007fd025102116: movabs $0x1f8,%rcx
  0x00007fd025102120: mov    (%rdi,%rcx,1),%r8
  0x00007fd025102124: lea    0x1(%r8),%r8
  0x00007fd025102128: mov    %r8,(%rdi,%rcx,1)
  0x00007fd02510212c: jne    0x00007fd0251021c2  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00007fd025102132: inc    %ebx
  0x00007fd025102134: movabs $0x7fd021582fa0,%rdi  ;   {metadata(method data for {method} {0x00007fd02139f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510213e: mov    0xe0(%rdi),%ecx
  0x00007fd025102144: add    $0x8,%ecx
  0x00007fd025102147: mov    %ecx,0xe0(%rdi)
  0x00007fd02510214d: movabs $0x7fd02139f618,%rdi  ;   {metadata({method} {0x00007fd02139f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025102157: and    $0xfff8,%ecx
  0x00007fd02510215d: cmp    $0x0,%ecx
  0x00007fd025102160: je     0x00007fd025102247  ; OopMap{rax=Oop rsi=Oop off=902}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x00007fd025102166: test   %eax,0x16cfef94(%rip)        # 0x00007fd03be01100
                                                ;   {poll}
  0x00007fd02510216c: movabs $0x7fd021582fa0,%rdi  ;   {metadata(method data for {method} {0x00007fd02139f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025102176: incl   0x208(%rdi)
  0x00007fd02510217c: mov    %rdx,%rdi          ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x00007fd02510217f: mov    %rdi,%rdx
  0x00007fd025102182: dec    %edx
  0x00007fd025102184: cmp    $0x0,%edi
  0x00007fd025102187: movabs $0x7fd021582fa0,%rdi  ;   {metadata(method data for {method} {0x00007fd02139f618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025102191: movabs $0x1c8,%rcx
  0x00007fd02510219b: je     0x00007fd0251021ab
  0x00007fd0251021a1: movabs $0x1d8,%rcx
  0x00007fd0251021ab: mov    (%rdi,%rcx,1),%r8
  0x00007fd0251021af: lea    0x1(%r8),%r8
  0x00007fd0251021b3: mov    %r8,(%rdi,%rcx,1)
  0x00007fd0251021b7: je     0x00007fd0251021d3
  0x00007fd0251021bd: jmpq   0x00007fd0251020d8  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x00007fd0251021c2: mov    $0x0,%eax
  0x00007fd0251021c7: add    $0x30,%rsp
  0x00007fd0251021cb: pop    %rbp
  0x00007fd0251021cc: test   %eax,0x16cfef2e(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd0251021d2: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 989)

  0x00007fd0251021d3: mov    $0x1,%eax
  0x00007fd0251021d8: add    $0x30,%rsp
  0x00007fd0251021dc: pop    %rbp
  0x00007fd0251021dd: test   %eax,0x16cfef1d(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd0251021e3: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 992)

  0x00007fd0251021e4: mov    $0x0,%eax
  0x00007fd0251021e9: add    $0x30,%rsp
  0x00007fd0251021ed: pop    %rbp
  0x00007fd0251021ee: test   %eax,0x16cfef0c(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd0251021f4: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 995)

  0x00007fd0251021f5: mov    $0x1,%eax
  0x00007fd0251021fa: add    $0x30,%rsp
  0x00007fd0251021fe: pop    %rbp
  0x00007fd0251021ff: test   %eax,0x16cfeefb(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd025102205: retq   
  0x00007fd025102206: mov    %rax,0x8(%rsp)
  0x00007fd02510220b: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd025102213: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop rdx=Oop off=1080}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x00007fd025102218: jmpq   0x00007fd025101e3e
  0x00007fd02510221d: mov    %rdx,(%rsp)
  0x00007fd025102221: callq  0x00007fd0250fbb80  ; OopMap{rsi=Oop off=1094}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x00007fd025102226: callq  0x00007fd0250f9a40  ; OopMap{rax=Oop rsi=Oop off=1099}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x00007fd02510222b: callq  0x00007fd0250f9a40  ; OopMap{rsi=Oop off=1104}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x00007fd025102230: callq  0x00007fd0250f9a40  ; OopMap{rsi=Oop rax=Oop off=1109}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x00007fd025102235: mov    %rbx,(%rsp)
  0x00007fd025102239: callq  0x00007fd02506c000  ; OopMap{rax=Oop rsi=Oop off=1118}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x00007fd02510223e: mov    %rbx,(%rsp)
  0x00007fd025102242: callq  0x00007fd02506c000  ; OopMap{rax=Oop rsi=Oop off=1127}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x00007fd025102247: mov    %rdi,0x8(%rsp)
  0x00007fd02510224c: movq   $0x4a,(%rsp)
  0x00007fd025102254: callq  0x00007fd0250fdea0  ; OopMap{rax=Oop rsi=Oop off=1145}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x00007fd025102259: jmpq   0x00007fd025102166
  0x00007fd02510225e: nop
  0x00007fd02510225f: nop
  0x00007fd025102260: mov    0x2a8(%r15),%rax
  0x00007fd025102267: movabs $0x0,%r10
  0x00007fd025102271: mov    %r10,0x2a8(%r15)
  0x00007fd025102278: movabs $0x0,%r10
  0x00007fd025102282: mov    %r10,0x2b0(%r15)
  0x00007fd025102289: add    $0x30,%rsp
  0x00007fd02510228d: pop    %rbp
  0x00007fd02510228e: jmpq   0x00007fd02506c4a0  ;   {runtime_call}
  0x00007fd025102293: hlt    
  0x00007fd025102294: hlt    
  0x00007fd025102295: hlt    
  0x00007fd025102296: hlt    
  0x00007fd025102297: hlt    
  0x00007fd025102298: hlt    
  0x00007fd025102299: hlt    
  0x00007fd02510229a: hlt    
  0x00007fd02510229b: hlt    
  0x00007fd02510229c: hlt    
  0x00007fd02510229d: hlt    
  0x00007fd02510229e: hlt    
  0x00007fd02510229f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fd0251022a0: callq  0x00007fd0250fb820  ;   {no_reloc}
  0x00007fd0251022a5: mov    %rsp,-0x28(%rsp)
  0x00007fd0251022aa: sub    $0x80,%rsp
  0x00007fd0251022b1: mov    %rax,0x78(%rsp)
  0x00007fd0251022b6: mov    %rcx,0x70(%rsp)
  0x00007fd0251022bb: mov    %rdx,0x68(%rsp)
  0x00007fd0251022c0: mov    %rbx,0x60(%rsp)
  0x00007fd0251022c5: mov    %rbp,0x50(%rsp)
  0x00007fd0251022ca: mov    %rsi,0x48(%rsp)
  0x00007fd0251022cf: mov    %rdi,0x40(%rsp)
  0x00007fd0251022d4: mov    %r8,0x38(%rsp)
  0x00007fd0251022d9: mov    %r9,0x30(%rsp)
  0x00007fd0251022de: mov    %r10,0x28(%rsp)
  0x00007fd0251022e3: mov    %r11,0x20(%rsp)
  0x00007fd0251022e8: mov    %r12,0x18(%rsp)
  0x00007fd0251022ed: mov    %r13,0x10(%rsp)
  0x00007fd0251022f2: mov    %r14,0x8(%rsp)
  0x00007fd0251022f7: mov    %r15,(%rsp)
  0x00007fd0251022fb: movabs $0x7fd03acf9f36,%rdi  ;   {external_word}
  0x00007fd025102305: movabs $0x7fd0251022a5,%rsi  ;   {internal_word}
  0x00007fd02510230f: mov    %rsp,%rdx
  0x00007fd025102312: and    $0xfffffffffffffff0,%rsp
  0x00007fd025102316: callq  0x00007fd03aa25990  ;   {runtime_call}
  0x00007fd02510231b: hlt    
[Deopt Handler Code]
  0x00007fd02510231c: movabs $0x7fd02510231c,%r10  ;   {section_word}
  0x00007fd025102326: push   %r10
  0x00007fd025102328: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd02510232d: hlt    
  0x00007fd02510232e: hlt    
  0x00007fd02510232f: hlt    
<nmethod compile_id='5' compiler='C1' level='3' entry='0x00007fd025101de0' size='2504' address='0x00007fd025101c50' relocation_offset='296' insts_offset='400' stub_offset='1616' scopes_data_offset='1768' scopes_pcs_offset='1984' dependencies_offset='2464' nul_chk_table_offset='2472' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='387' backedge_count='1356' iicount='387' stamp='0.078'/>
<writer thread='140532334335744'/>
[Loaded sun.usagetracker.UsageTrackerClient$4 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient$3 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<task_queued compile_id='6' method='java/lang/String charAt (I)C' bytes='29' count='2304' iicount='2304' level='3' stamp='0.078' comment='tiered' hot_count='2304'/>
<writer thread='140531745502976'/>
Decoding compiled method 0x00007fd025105150:
Code:
<writer thread='140532334335744'/>
[Loaded java.io.FileOutputStream$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140531745502976'/>
[Entry Point]
[Constants]
  # {method} {0x00007fd02139edb0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fd0251052c0: mov    0x8(%rsi),%r10d
  0x00007fd0251052c4: shl    $0x3,%r10
  0x00007fd0251052c8: cmp    %rax,%r10
  0x00007fd0251052cb: jne    0x00007fd025045e20  ;   {runtime_call}
  0x00007fd0251052d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fd0251052dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fd0251052e0: mov    %eax,-0x14000(%rsp)
  0x00007fd0251052e7: push   %rbp
  0x00007fd0251052e8: sub    $0x30,%rsp
  0x00007fd0251052ec: mov    %rdx,%rdi
  0x00007fd0251052ef: movabs $0x7fd02152e720,%rax  ;   {metadata(method data for {method} {0x00007fd02139edb0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fd0251052f9: mov    0xdc(%rax),%edx
  0x00007fd0251052ff: add    $0x8,%edx
  0x00007fd025105302: mov    %edx,0xdc(%rax)
  0x00007fd025105308: movabs $0x7fd02139edb0,%rax  ;   {metadata({method} {0x00007fd02139edb0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025105312: and    $0x1ff8,%edx
  0x00007fd025105318: cmp    $0x0,%edx
  0x00007fd02510531b: je     0x00007fd0251053f6  ;*iload_1
                                                ; - java.lang.String::charAt@0 (line 657)

  0x00007fd025105321: cmp    $0x0,%edi
  0x00007fd025105324: movabs $0x7fd02152e720,%rax  ;   {metadata(method data for {method} {0x00007fd02139edb0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510532e: movabs $0x108,%rdx
  0x00007fd025105338: jl     0x00007fd025105348
  0x00007fd02510533e: movabs $0x118,%rdx
  0x00007fd025105348: mov    (%rax,%rdx,1),%rbx
  0x00007fd02510534c: lea    0x1(%rbx),%rbx
  0x00007fd025105350: mov    %rbx,(%rax,%rdx,1)
  0x00007fd025105354: jl     0x00007fd0251053b6  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x00007fd02510535a: mov    0xc(%rsi),%eax
  0x00007fd02510535d: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x00007fd025105361: mov    0xc(%rax),%edx     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x00007fd02510540d
  0x00007fd025105364: cmp    %edx,%edi
  0x00007fd025105366: movabs $0x7fd02152e720,%rdx  ;   {metadata(method data for {method} {0x00007fd02139edb0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025105370: movabs $0x128,%rsi
  0x00007fd02510537a: jl     0x00007fd02510538a
  0x00007fd025105380: movabs $0x138,%rsi
  0x00007fd02510538a: mov    (%rdx,%rsi,1),%rbx
  0x00007fd02510538e: lea    0x1(%rbx),%rbx
  0x00007fd025105392: mov    %rbx,(%rdx,%rsi,1)
  0x00007fd025105396: jge    0x00007fd0251053b6  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x00007fd02510539c: movslq %edi,%rdi
  0x00007fd02510539f: movzwl 0x10(%rax,%rdi,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x00007fd0251053a4: and    $0xffff,%eax
  0x00007fd0251053aa: add    $0x30,%rsp
  0x00007fd0251053ae: pop    %rbp
  0x00007fd0251053af: test   %eax,0x16cfbd4b(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd0251053b5: retq                      ;*ireturn
                                                ; - java.lang.String::charAt@28 (line 660)

  0x00007fd0251053b6: xchg   %ax,%ax
  0x00007fd0251053b8: jmpq   0x00007fd025105421  ;   {no_reloc}
  0x00007fd0251053bd: add    %al,(%rax)
  0x00007fd0251053bf: add    %al,(%rax)
  0x00007fd0251053c1: add    %ch,%cl
  0x00007fd0251053c3: add    %al,%fs:(%rax)
  0x00007fd0251053c6: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)

  0x00007fd0251053c9: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00007fd02139edb0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fd0251053cc: and    %ah,%bh
  0x00007fd0251053ce: push   %rdx
  0x00007fd0251053cf: and    %edx,%eax
  0x00007fd0251053d1: jg     0x00007fd0251053d3
  0x00007fd0251053d3: add    %cl,-0x7d(%rax)
  0x00007fd0251053d6: xchg   %cl,0x1(%rax)
  0x00007fd0251053d9: add    %al,(%rax)
  0x00007fd0251053db: add    %ecx,-0x75(%rax)
  0x00007fd0251053de: xlat   %ds:(%rbx)
  0x00007fd0251053df: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)

  0x00007fd0251053e2: mov    %rax,0x20(%rsp)
  0x00007fd0251053e7: callq  0x00007fd025046020  ; OopMap{[32]=Oop off=300}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ;   {optimized virtual_call}
  0x00007fd0251053ec: mov    0x20(%rsp),%rax
  0x00007fd0251053f1: jmpq   0x00007fd025105460
  0x00007fd0251053f6: mov    %rax,0x8(%rsp)
  0x00007fd0251053fb: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd025105403: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop off=328}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ;   {runtime_call}
  0x00007fd025105408: jmpq   0x00007fd025105321
  0x00007fd02510540d: callq  0x00007fd0250f9a40  ; OopMap{rax=Oop off=338}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x00007fd025105412: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fd02510541c: mov    $0xa050f00,%eax
  0x00007fd025105421: callq  0x00007fd0250fcea0  ; OopMap{off=358}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x00007fd025105426: jmp    0x00007fd0251053b8
  0x00007fd025105428: nop
  0x00007fd025105429: nop
  0x00007fd02510542a: nop
  0x00007fd02510542b: mov    %rdx,%rdx
  0x00007fd02510542e: callq  0x00007fd0250f9ee0  ; OopMap{off=371}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x00007fd025105433: jmp    0x00007fd0251053c7
  0x00007fd025105435: nop
  0x00007fd025105436: nop
  0x00007fd025105437: mov    0x2a8(%r15),%rax
  0x00007fd02510543e: movabs $0x0,%r10
  0x00007fd025105448: mov    %r10,0x2a8(%r15)
  0x00007fd02510544f: movabs $0x0,%r10
  0x00007fd025105459: mov    %r10,0x2b0(%r15)
  0x00007fd025105460: add    $0x30,%rsp
  0x00007fd025105464: pop    %rbp
  0x00007fd025105465: jmpq   0x00007fd02506c4a0  ;   {runtime_call}
  0x00007fd02510546a: hlt    
  0x00007fd02510546b: hlt    
  0x00007fd02510546c: hlt    
  0x00007fd02510546d: hlt    
  0x00007fd02510546e: hlt    
  0x00007fd02510546f: hlt    
  0x00007fd025105470: hlt    
  0x00007fd025105471: hlt    
  0x00007fd025105472: hlt    
  0x00007fd025105473: hlt    
  0x00007fd025105474: hlt    
  0x00007fd025105475: hlt    
  0x00007fd025105476: hlt    
  0x00007fd025105477: hlt    
  0x00007fd025105478: hlt    
  0x00007fd025105479: hlt    
  0x00007fd02510547a: hlt    
  0x00007fd02510547b: hlt    
  0x00007fd02510547c: hlt    
  0x00007fd02510547d: hlt    
  0x00007fd02510547e: hlt    
  0x00007fd02510547f: hlt    
[Stub Code]
  0x00007fd025105480: nop                       ;   {no_reloc}
  0x00007fd025105481: nop
  0x00007fd025105482: nop
  0x00007fd025105483: nop
  0x00007fd025105484: nop
  0x00007fd025105485: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd02510548f: jmpq   0x00007fd02510548f  ;   {runtime_call}
[Exception Handler]
  0x00007fd025105494: callq  0x00007fd0250fb820  ;   {runtime_call}
  0x00007fd025105499: mov    %rsp,-0x28(%rsp)
  0x00007fd02510549e: sub    $0x80,%rsp
  0x00007fd0251054a5: mov    %rax,0x78(%rsp)
  0x00007fd0251054aa: mov    %rcx,0x70(%rsp)
  0x00007fd0251054af: mov    %rdx,0x68(%rsp)
  0x00007fd0251054b4: mov    %rbx,0x60(%rsp)
  0x00007fd0251054b9: mov    %rbp,0x50(%rsp)
  0x00007fd0251054be: mov    %rsi,0x48(%rsp)
  0x00007fd0251054c3: mov    %rdi,0x40(%rsp)
  0x00007fd0251054c8: mov    %r8,0x38(%rsp)
  0x00007fd0251054cd: mov    %r9,0x30(%rsp)
  0x00007fd0251054d2: mov    %r10,0x28(%rsp)
  0x00007fd0251054d7: mov    %r11,0x20(%rsp)
  0x00007fd0251054dc: mov    %r12,0x18(%rsp)
  0x00007fd0251054e1: mov    %r13,0x10(%rsp)
  0x00007fd0251054e6: mov    %r14,0x8(%rsp)
  0x00007fd0251054eb: mov    %r15,(%rsp)
  0x00007fd0251054ef: movabs $0x7fd03acf9f36,%rdi  ;   {external_word}
  0x00007fd0251054f9: movabs $0x7fd025105499,%rsi  ;   {internal_word}
  0x00007fd025105503: mov    %rsp,%rdx
  0x00007fd025105506: and    $0xfffffffffffffff0,%rsp
  0x00007fd02510550a: callq  0x00007fd03aa25990  ;   {runtime_call}
  0x00007fd02510550f: hlt    
[Deopt Handler Code]
  0x00007fd025105510: movabs $0x7fd025105510,%r10  ;   {section_word}
  0x00007fd02510551a: push   %r10
  0x00007fd02510551c: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd025105521: hlt    
  0x00007fd025105522: hlt    
  0x00007fd025105523: hlt    
  0x00007fd025105524: hlt    
  0x00007fd025105525: hlt    
  0x00007fd025105526: hlt    
  0x00007fd025105527: hlt    
<nmethod compile_id='6' compiler='C1' level='3' entry='0x00007fd0251052c0' size='1376' address='0x00007fd025105150' relocation_offset='296' insts_offset='368' stub_offset='816' scopes_data_offset='992' scopes_pcs_offset='1096' dependencies_offset='1352' nul_chk_table_offset='1360' method='java/lang/String charAt (I)C' bytes='29' count='2566' iicount='2566' stamp='0.079'/>
<writer thread='140532334335744'/>
[Loaded sun.launcher.LauncherHelper from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
Decoding compiled method 0x00007fd025101890:
Code:
[Entry Point]
  # {method} {0x00007fd0213b4930} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x00007fd025101a00: mov    0x8(%rsi),%r10d
  0x00007fd025101a04: shl    $0x3,%r10
  0x00007fd025101a08: cmp    %r10,%rax
  0x00007fd025101a0b: je     0x00007fd025101a18
  0x00007fd025101a11: jmpq   0x00007fd025045e20  ;   {runtime_call}
  0x00007fd025101a16: xchg   %ax,%ax
[Verified Entry Point]
  0x00007fd025101a18: mov    %eax,-0x14000(%rsp)
  0x00007fd025101a1f: push   %rbp
  0x00007fd025101a20: mov    %rsp,%rbp
  0x00007fd025101a23: sub    $0x50,%rsp
  0x00007fd025101a27: mov    %r9,(%rsp)
  0x00007fd025101a2b: mov    %r8,%r9
  0x00007fd025101a2e: mov    %rcx,0x18(%rsp)
  0x00007fd025101a33: cmp    $0x0,%rcx
  0x00007fd025101a37: lea    0x18(%rsp),%r8
  0x00007fd025101a3c: cmove  0x18(%rsp),%r8
  0x00007fd025101a42: mov    %rdx,%rcx
  0x00007fd025101a45: mov    %rsi,0x8(%rsp)
  0x00007fd025101a4a: cmp    $0x0,%rsi
  0x00007fd025101a4e: lea    0x8(%rsp),%rdx
  0x00007fd025101a53: cmove  0x8(%rsp),%rdx
  0x00007fd025101a59: movabs $0x670b80c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007fd025101a63: mov    %r14,0x38(%rsp)
  0x00007fd025101a68: lea    0x38(%rsp),%r14
  0x00007fd025101a6d: mov    %r14,%rsi          ; OopMap{[24]=Oop [8]=Oop [56]=Oop off=112}
  0x00007fd025101a70: movabs $0x7fd025101a70,%r10  ;   {section_word}
  0x00007fd025101a7a: mov    %r10,0x1e0(%r15)
  0x00007fd025101a81: mov    %rsp,0x1d8(%r15)
  0x00007fd025101a88: cmpb   $0x0,0x160a3713(%rip)        # 0x00007fd03b1a51a2
                                                ;   {external_word}
  0x00007fd025101a8f: je     0x00007fd025101ad3
  0x00007fd025101a95: push   %rsi
  0x00007fd025101a96: push   %rdx
  0x00007fd025101a97: push   %rcx
  0x00007fd025101a98: push   %r8
  0x00007fd025101a9a: push   %r9
  0x00007fd025101a9c: movabs $0x7fd0213b4930,%rsi  ;   {metadata({method} {0x00007fd0213b4930} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00007fd025101aa6: mov    %r15,%rdi
  0x00007fd025101aa9: test   $0xf,%esp
  0x00007fd025101aaf: je     0x00007fd025101ac7
  0x00007fd025101ab5: sub    $0x8,%rsp
  0x00007fd025101ab9: callq  0x00007fd03abb0390  ;   {runtime_call}
  0x00007fd025101abe: add    $0x8,%rsp
  0x00007fd025101ac2: jmpq   0x00007fd025101acc
  0x00007fd025101ac7: callq  0x00007fd03abb0390  ;   {runtime_call}
  0x00007fd025101acc: pop    %r9
  0x00007fd025101ace: pop    %r8
  0x00007fd025101ad0: pop    %rcx
  0x00007fd025101ad1: pop    %rdx
  0x00007fd025101ad2: pop    %rsi
  0x00007fd025101ad3: lea    0x1f8(%r15),%rdi
  0x00007fd025101ada: movl   $0x4,0x270(%r15)
  0x00007fd025101ae5: callq  0x00007fd03a911080  ;   {runtime_call}
  0x00007fd025101aea: vzeroupper 
  0x00007fd025101aed: movl   $0x5,0x270(%r15)
  0x00007fd025101af8: mov    %r15d,%ecx
  0x00007fd025101afb: shr    $0x4,%ecx
  0x00007fd025101afe: and    $0xffc,%ecx
  0x00007fd025101b04: movabs $0x7fd03be00000,%r10  ;   {external_word}
  0x00007fd025101b0e: mov    %ecx,(%r10,%rcx,1)
  0x00007fd025101b12: cmpl   $0x0,0x160b3004(%rip)        # 0x00007fd03b1b4b20
                                                ;   {external_word}
  0x00007fd025101b1c: jne    0x00007fd025101b30
  0x00007fd025101b22: cmpl   $0x0,0x30(%r15)
  0x00007fd025101b2a: je     0x00007fd025101b49
  0x00007fd025101b30: mov    %r15,%rdi
  0x00007fd025101b33: mov    %rsp,%r12
  0x00007fd025101b36: sub    $0x0,%rsp
  0x00007fd025101b3a: and    $0xfffffffffffffff0,%rsp
  0x00007fd025101b3e: callq  0x00007fd03ac60960  ;   {runtime_call}
  0x00007fd025101b43: mov    %r12,%rsp
  0x00007fd025101b46: xor    %r12,%r12
  0x00007fd025101b49: movl   $0x8,0x270(%r15)
  0x00007fd025101b54: cmpl   $0x1,0x29c(%r15)
  0x00007fd025101b5f: je     0x00007fd025101be7
  0x00007fd025101b65: cmpb   $0x0,0x160a3636(%rip)        # 0x00007fd03b1a51a2
                                                ;   {external_word}
  0x00007fd025101b6c: je     0x00007fd025101ba2
  0x00007fd025101b72: movabs $0x7fd0213b4930,%rsi  ;   {metadata({method} {0x00007fd0213b4930} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00007fd025101b7c: mov    %r15,%rdi
  0x00007fd025101b7f: test   $0xf,%esp
  0x00007fd025101b85: je     0x00007fd025101b9d
  0x00007fd025101b8b: sub    $0x8,%rsp
  0x00007fd025101b8f: callq  0x00007fd03abb0380  ;   {runtime_call}
  0x00007fd025101b94: add    $0x8,%rsp
  0x00007fd025101b98: jmpq   0x00007fd025101ba2
  0x00007fd025101b9d: callq  0x00007fd03abb0380  ;   {runtime_call}
  0x00007fd025101ba2: movabs $0x0,%r10
  0x00007fd025101bac: mov    %r10,0x1d8(%r15)
  0x00007fd025101bb3: movabs $0x0,%r10
  0x00007fd025101bbd: mov    %r10,0x1e0(%r15)
  0x00007fd025101bc4: mov    0x38(%r15),%rcx
  0x00007fd025101bc8: movl   $0x0,0x100(%rcx)
  0x00007fd025101bd2: leaveq 
  0x00007fd025101bd3: cmpq   $0x0,0x8(%r15)
  0x00007fd025101bdb: jne    0x00007fd025101be2
  0x00007fd025101be1: retq   
  0x00007fd025101be2: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00007fd025101be7: mov    %rsp,%r12
  0x00007fd025101bea: sub    $0x0,%rsp
  0x00007fd025101bee: and    $0xfffffffffffffff0,%rsp
  0x00007fd025101bf2: callq  0x00007fd03abb0360  ;   {runtime_call}
  0x00007fd025101bf7: mov    %r12,%rsp
  0x00007fd025101bfa: xor    %r12,%r12
  0x00007fd025101bfd: jmpq   0x00007fd025101b65
  0x00007fd025101c02: hlt    
  0x00007fd025101c03: hlt    
  0x00007fd025101c04: hlt    
  0x00007fd025101c05: hlt    
  0x00007fd025101c06: hlt    
  0x00007fd025101c07: hlt    
<nmethod compile_id='7' compile_kind='c2n' level='0' entry='0x00007fd025101a00' size='888' address='0x00007fd025101890' relocation_offset='296' consts_offset='888' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='640' iicount='640' stamp='0.082'/>
[Loaded sun.net.util.URLUtil from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$3 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$Loader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.zip.ZipConstants from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaUtilZipFileAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<task_queued compile_id='8' method='java/lang/String indexOf (II)I' bytes='70' count='169' backedge_count='5120' iicount='169' level='3' stamp='0.083' comment='tiered' hot_count='169'/>
<task_queued compile_id='9' method='java/lang/String length ()I' bytes='6' count='512' iicount='512' level='3' stamp='0.083' comment='tiered' hot_count='512'/>
<task_queued compile_id='10' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='256' iicount='256' level='3' stamp='0.083' comment='tiered' hot_count='256'/>
<task_queued compile_id='11' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1664' iicount='1664' level='3' stamp='0.083' comment='tiered' hot_count='1664'/>
<writer thread='140531745502976'/>
Decoding compiled method 0x00007fd0251045d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fd0213a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fd025104760: mov    0x8(%rsi),%r10d
  0x00007fd025104764: shl    $0x3,%r10
  0x00007fd025104768: cmp    %rax,%r10
  0x00007fd02510476b: jne    0x00007fd025045e20  ;   {runtime_call}
  0x00007fd025104771: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fd02510477c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fd025104780: mov    %eax,-0x14000(%rsp)
  0x00007fd025104787: push   %rbp
  0x00007fd025104788: sub    $0x30,%rsp
  0x00007fd02510478c: movabs $0x7fd02159aed0,%rax  ;   {metadata(method data for {method} {0x00007fd0213a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025104796: mov    0xdc(%rax),%edi
  0x00007fd02510479c: 
<writer thread='140532334335744'/>
[Loaded sun.misc.URLClassPath$FileLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140531745502976'/>
add    $0x8,%edi
  0x00007fd02510479f: mov    %edi,0xdc(%rax)
  0x00007fd0251047a5: movabs $0x7fd0213a0180,%rax  ;   {metadata({method} {0x00007fd0213a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd0251047af: and    $0x1ff8,%edi
  0x00007fd0251047b5: cmp    $0x0,%edi
  0x00007fd0251047b8: je     0x00007fd0251049c1  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1546)

  0x00007fd0251047be: mov    0xc(%rsi),%eax
  0x00007fd0251047c1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x00007fd0251047c5: mov    0xc(%rax),%edi     ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x00007fd0251049d8
  0x00007fd0251047c8: cmp    $0x0,%ecx
  0x00007fd0251047cb: movabs $0x7fd02159aed0,%rbx  ;   {metadata(method data for {method} {0x00007fd0213a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd0251047d5: movabs $0x108,%r8
  0x00007fd0251047df: jge    0x00007fd0251047ef
  0x00007fd0251047e5: movabs $0x118,%r8
  0x00007fd0251047ef: mov    (%rbx,%r8,1),%r9
  0x00007fd0251047f3: lea    0x1(%r9),%r9
  0x00007fd0251047f7: mov    %r9,(%rbx,%r8,1)
  0x00007fd0251047fb: jge    0x00007fd02510481b  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x00007fd025104801: movabs $0x7fd02159aed0,%rcx  ;   {metadata(method data for {method} {0x00007fd0213a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510480b: incl   0x128(%rcx)
  0x00007fd025104811: mov    $0x0,%ecx
  0x00007fd025104816: jmpq   0x00007fd025104853  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1548)

  0x00007fd02510481b: cmp    %edi,%ecx
  0x00007fd02510481d: movabs $0x7fd02159aed0,%rbx  ;   {metadata(method data for {method} {0x00007fd0213a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025104827: movabs $0x140,%r8
  0x00007fd025104831: jl     0x00007fd025104841
  0x00007fd025104837: movabs $0x150,%r8
  0x00007fd025104841: mov    (%rbx,%r8,1),%r9
  0x00007fd025104845: lea    0x1(%r9),%r9
  0x00007fd025104849: mov    %r9,(%rbx,%r8,1)
  0x00007fd02510484d: jge    0x00007fd0251049b0  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x00007fd025104853: cmp    $0x10000,%edx
  0x00007fd025104859: movabs $0x7fd02159aed0,%rbx  ;   {metadata(method data for {method} {0x00007fd0213a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025104863: movabs $0x160,%r8
  0x00007fd02510486d: jge    0x00007fd02510487d
  0x00007fd025104873: movabs $0x170,%r8
  0x00007fd02510487d: mov    (%rbx,%r8,1),%r9
  0x00007fd025104881: lea    0x1(%r9),%r9
  0x00007fd025104885: mov    %r9,(%rbx,%r8,1)
  0x00007fd025104889: jge    0x00007fd025104988
  0x00007fd02510488f: jmpq   0x00007fd02510492b  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x00007fd025104894: nopl   0x0(%rax)
  0x00007fd025104898: movslq %ecx,%rsi
  0x00007fd02510489b: cmp    0xc(%rax),%ecx
  0x00007fd02510489e: jae    0x00007fd0251049dd
  0x00007fd0251048a4: movzwl 0x10(%rax,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00007fd0251048a9: cmp    %edx,%esi
  0x00007fd0251048ab: movabs $0x7fd02159aed0,%rsi  ;   {metadata(method data for {method} {0x00007fd0213a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd0251048b5: movabs $0x1a0,%rbx
  0x00007fd0251048bf: jne    0x00007fd0251048cf
  0x00007fd0251048c5: movabs $0x1b0,%rbx
  0x00007fd0251048cf: mov    (%rsi,%rbx,1),%r8
  0x00007fd0251048d3: lea    0x1(%r8),%r8
  0x00007fd0251048d7: mov    %r8,(%rsi,%rbx,1)
  0x00007fd0251048db: je     0x00007fd025104968  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00007fd0251048e1: inc    %ecx
  0x00007fd0251048e3: movabs $0x7fd02159aed0,%rsi  ;   {metadata(method data for {method} {0x00007fd0213a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd0251048ed: mov    0xe0(%rsi),%ebx
  0x00007fd0251048f3: add    $0x8,%ebx
  0x00007fd0251048f6: mov    %ebx,0xe0(%rsi)
  0x00007fd0251048fc: movabs $0x7fd0213a0180,%rsi  ;   {metadata({method} {0x00007fd0213a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025104906: and    $0xfff8,%ebx
  0x00007fd02510490c: cmp    $0x0,%ebx
  0x00007fd02510490f: je     0x00007fd0251049e6  ; OopMap{rax=Oop off=437}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x00007fd025104915: test   %eax,0x16cfc7e5(%rip)        # 0x00007fd03be01100
                                                ;   {poll}
  0x00007fd02510491b: movabs $0x7fd02159aed0,%rsi  ;   {metadata(method data for {method} {0x00007fd0213a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025104925: incl   0x1c0(%rsi)        ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x00007fd02510492b: cmp    %edi,%ecx
  0x00007fd02510492d: movabs $0x7fd02159aed0,%rsi  ;   {metadata(method data for {method} {0x00007fd0213a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025104937: movabs $0x180,%rbx
  0x00007fd025104941: jge    0x00007fd025104951
  0x00007fd025104947: movabs $0x190,%rbx
  0x00007fd025104951: mov    (%rsi,%rbx,1),%r8
  0x00007fd025104955: lea    0x1(%r8),%r8
  0x00007fd025104959: mov    %r8,(%rsi,%rbx,1)
  0x00007fd02510495d: jge    0x00007fd025104977
  0x00007fd025104963: jmpq   0x00007fd025104898  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00007fd025104968: mov    %rcx,%rax
  0x00007fd02510496b: add    $0x30,%rsp
  0x00007fd02510496f: pop    %rbp
  0x00007fd025104970: test   %eax,0x16cfc78a(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd025104976: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@54 (line 1560)

  0x00007fd025104977: mov    $0xffffffff,%eax
  0x00007fd02510497c: add    $0x30,%rsp
  0x00007fd025104980: pop    %rbp
  0x00007fd025104981: test   %eax,0x16cfc779(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd025104987: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@62 (line 1563)

  0x00007fd025104988: mov    %rsi,%rdi
  0x00007fd02510498b: movabs $0x7fd02159aed0,%rbx  ;   {metadata(method data for {method} {0x00007fd0213a0180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd025104995: addq   $0x1,0x1d8(%rbx)
  0x00007fd02510499d: nop
  0x00007fd02510499e: nop
  0x00007fd02510499f: callq  0x00007fd025046020  ; OopMap{off=580}
                                                ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1565)
                                                ;   {optimized virtual_call}
  0x00007fd0251049a4: add    $0x30,%rsp
  0x00007fd0251049a8: pop    %rbp
  0x00007fd0251049a9: test   %eax,0x16cfc751(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd0251049af: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@69 (line 1565)

  0x00007fd0251049b0: mov    $0xffffffff,%eax
  0x00007fd0251049b5: add    $0x30,%rsp
  0x00007fd0251049b9: pop    %rbp
  0x00007fd0251049ba: test   %eax,0x16cfc740(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd0251049c0: retq   
  0x00007fd0251049c1: mov    %rax,0x8(%rsp)
  0x00007fd0251049c6: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd0251049ce: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop off=627}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)
                                                ;   {runtime_call}
  0x00007fd0251049d3: jmpq   0x00007fd0251047be
  0x00007fd0251049d8: callq  0x00007fd0250f9a40  ; OopMap{rsi=Oop rax=Oop off=637}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x00007fd0251049dd: mov    %rcx,(%rsp)
  0x00007fd0251049e1: callq  0x00007fd02506c000  ; OopMap{rax=Oop off=646}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x00007fd0251049e6: mov    %rsi,0x8(%rsp)
  0x00007fd0251049eb: movq   $0x3a,(%rsp)
  0x00007fd0251049f3: callq  0x00007fd0250fdea0  ; OopMap{rax=Oop off=664}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)
                                                ;   {runtime_call}
  0x00007fd0251049f8: jmpq   0x00007fd025104915
  0x00007fd0251049fd: nop
  0x00007fd0251049fe: nop
  0x00007fd0251049ff: mov    0x2a8(%r15),%rax
  0x00007fd025104a06: movabs $0x0,%r10
  0x00007fd025104a10: mov    %r10,0x2a8(%r15)
  0x00007fd025104a17: movabs $0x0,%r10
  0x00007fd025104a21: mov    %r10,0x2b0(%r15)
  0x00007fd025104a28: add    $0x30,%rsp
  0x00007fd025104a2c: pop    %rbp
  0x00007fd025104a2d: jmpq   0x00007fd02506c4a0  ;   {runtime_call}
  0x00007fd025104a32: hlt    
  0x00007fd025104a33: hlt    
  0x00007fd025104a34: hlt    
  0x00007fd025104a35: hlt    
  0x00007fd025104a36: hlt    
  0x00007fd025104a37: hlt    
  0x00007fd025104a38: hlt    
  0x00007fd025104a39: hlt    
  0x00007fd025104a3a: hlt    
  0x00007fd025104a3b: hlt    
  0x00007fd025104a3c: hlt    
  0x00007fd025104a3d: hlt    
  0x00007fd025104a3e: hlt    
  0x00007fd025104a3f: hlt    
[Stub Code]
  0x00007fd025104a40: nop                       ;   {no_reloc}
  0x00007fd025104a41: nop
  0x00007fd025104a42: nop
  0x00007fd025104a43: nop
  0x00007fd025104a44: nop
  0x00007fd025104a45: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025104a4f: jmpq   0x00007fd025104a4f  ;   {runtime_call}
[Exception Handler]
  0x00007fd025104a54: callq  0x00007fd0250fb820  ;   {runtime_call}
  0x00007fd025104a59: mov    %rsp,-0x28(%rsp)
  0x00007fd025104a5e: sub    $0x80,%rsp
  0x00007fd025104a65: mov    %rax,0x78(%rsp)
  0x00007fd025104a6a: mov    %rcx,0x70(%rsp)
  0x00007fd025104a6f: mov    %rdx,0x68(%rsp)
  0x00007fd025104a74: mov    %rbx,0x60(%rsp)
  0x00007fd025104a79: mov    %rbp,0x50(%rsp)
  0x00007fd025104a7e: mov    %rsi,0x48(%rsp)
  0x00007fd025104a83: mov    %rdi,0x40(%rsp)
  0x00007fd025104a88: mov    %r8,0x38(%rsp)
  0x00007fd025104a8d: mov    %r9,0x30(%rsp)
  0x00007fd025104a92: mov    %r10,0x28(%rsp)
  0x00007fd025104a97: mov    %r11,0x20(%rsp)
  0x00007fd025104a9c: mov    %r12,0x18(%rsp)
  0x00007fd025104aa1: mov    %r13,0x10(%rsp)
  0x00007fd025104aa6: mov    %r14,0x8(%rsp)
  0x00007fd025104aab: mov    %r15,(%rsp)
  0x00007fd025104aaf: movabs $0x7fd03acf9f36,%rdi  ;   {external_word}
  0x00007fd025104ab9: movabs $0x7fd025104a59,%rsi  ;   {internal_word}
  0x00007fd025104ac3: mov    %rsp,%rdx
  0x00007fd025104ac6: and    $0xfffffffffffffff0,%rsp
  0x00007fd025104aca: callq  0x00007fd03aa25990  ;   {runtime_call}
  0x00007fd025104acf: hlt    
[Deopt Handler Code]
  0x00007fd025104ad0: movabs $0x7fd025104ad0,%r10  ;   {section_word}
  0x00007fd025104ada: push   %r10
  0x00007fd025104adc: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd025104ae1: hlt    
  0x00007fd025104ae2: hlt    
  0x00007fd025104ae3: hlt    
  0x00007fd025104ae4: hlt    
  0x00007fd025104ae5: hlt    
  0x00007fd025104ae6: hlt    
  0x00007fd025104ae7: hlt    
<nmethod compile_id='8' compiler='C1' level='3' entry='0x00007fd025104760' size='1848' address='0x00007fd0251045d0' relocation_offset='296' insts_offset='400' stub_offset='1136' scopes_data_offset='1312' scopes_pcs_offset='1472' dependencies_offset='1824' nul_chk_table_offset='1832' method='java/lang/String indexOf (II)I' bytes='70' count='207' backedge_count='6985' iicount='207' stamp='0.085'/>
Decoding compiled method 0x00007fd025104250:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fd02139b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fd0251043c0: mov    0x8(%rsi),%r10d
  0x00007fd0251043c4: shl    $0x3,%r10
  0x00007fd0251043c8: cmp    %rax,%r10
  0x00007fd0251043cb: jne    0x00007fd025045e20  ;   {runtime_call}
  0x00007fd0251043d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fd0251043dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fd0251043e0: mov    %eax,-0x14000(%rsp)
  0x00007fd0251043e7: push   %rbp
  0x00007fd0251043e8: sub    $0x30,%rsp
  0x00007fd0251043ec: movabs $0x7fd021511108,%rdi  ;   {metadata(method data for {method} {0x00007fd02139b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fd0251043f6: mov    0xdc(%rdi),%ebx
<writer thread='140532334335744'/>
[Loaded sun.misc.Resource from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140531745502976'/>
  0x00007fd0251043fc: add    $0x8,%ebx
  0x00007fd0251043ff: mov    %ebx,0xdc(%rdi)
  0x00007fd025104405: movabs $0x7fd02139b480,%rdi  ;   {metadata({method} {0x00007fd02139b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fd02510440f: and    $0x1ff8,%ebx
  0x00007fd025104415: cmp    $0x0,%ebx
  0x00007fd025104418: je     0x00007fd025104437
  0x00007fd02510441e: mov    %rsi,%rdi          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x00007fd025104421: mov    %rsi,0x20(%rsp)
  0x00007fd025104426: callq  0x00007fd0250f9c60  ; OopMap{[32]=Oop off=107}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x00007fd02510442b: add    $0x30,%rsp
  0x00007fd02510442f: pop    %rbp
  0x00007fd025104430: test   %eax,0x16cfccca(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd025104436: retq   
  0x00007fd025104437: mov    %rdi,0x8(%rsp)
  0x00007fd02510443c: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd025104444: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ;   {runtime_call}
  0x00007fd025104449: jmp    0x00007fd02510441e
  0x00007fd02510444b: nop
  0x00007fd02510444c: nop
  0x00007fd02510444d: mov    0x2a8(%r15),%rax
  0x00007fd025104454: movabs $0x0,%r10
  0x00007fd02510445e: mov    %r10,0x2a8(%r15)
  0x00007fd025104465: movabs $0x0,%r10
  0x00007fd02510446f: mov    %r10,0x2b0(%r15)
  0x00007fd025104476: add    $0x30,%rsp
  0x00007fd02510447a: pop    %rbp
  0x00007fd02510447b: jmpq   0x00007fd02506c4a0  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x00007fd025104480: callq  0x00007fd0250fb820  ;   {no_reloc}
  0x00007fd025104485: mov    %rsp,-0x28(%rsp)
  0x00007fd02510448a: sub    $0x80,%rsp
  0x00007fd025104491: mov    %rax,0x78(%rsp)
  0x00007fd025104496: mov    %rcx,0x70(%rsp)
  0x00007fd02510449b: mov    %rdx,0x68(%rsp)
  0x00007fd0251044a0: mov    %rbx,0x60(%rsp)
  0x00007fd0251044a5: mov    %rbp,0x50(%rsp)
  0x00007fd0251044aa: mov    %rsi,0x48(%rsp)
  0x00007fd0251044af: mov    %rdi,0x40(%rsp)
  0x00007fd0251044b4: mov    %r8,0x38(%rsp)
  0x00007fd0251044b9: mov    %r9,0x30(%rsp)
  0x00007fd0251044be: mov    %r10,0x28(%rsp)
  0x00007fd0251044c3: mov    %r11,0x20(%rsp)
  0x00007fd0251044c8: mov    %r12,0x18(%rsp)
  0x00007fd0251044cd: mov    %r13,0x10(%rsp)
  0x00007fd0251044d2: mov    %r14,0x8(%rsp)
  0x00007fd0251044d7: mov    %r15,(%rsp)
  0x00007fd0251044db: movabs $0x7fd03acf9f36,%rdi  ;   {external_word}
  0x00007fd0251044e5: movabs $0x7fd025104485,%rsi  ;   {internal_word}
  0x00007fd0251044ef: mov    %rsp,%rdx
  0x00007fd0251044f2: and    $0xfffffffffffffff0,%rsp
  0x00007fd0251044f6: callq  0x00007fd03aa25990  ;   {runtime_call}
  0x00007fd0251044fb: hlt    
[Deopt Handler Code]
  0x00007fd0251044fc: movabs $0x7fd0251044fc,%r10  ;   {section_word}
  0x00007fd025104506: push   %r10
  0x00007fd025104508: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd02510450d: hlt    
  0x00007fd02510450e: hlt    
  0x00007fd02510450f: hlt    
<nmethod compile_id='11' compiler='C1' level='3' entry='0x00007fd0251043c0' size='832' address='0x00007fd025104250' relocation_offset='296' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='744' dependencies_offset='824' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1781' iicount='1781' stamp='0.086'/>
<writer thread='140532334335744'/>
[Loaded sun.misc.URLClassPath$FileLoader$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140531745502976'/>
Decoding compiled method 0x00007fd02510d450:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fd02139ec60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fd02510d5c0: mov    0x8(%rsi),%r10d
  0x00007fd02510d5c4: shl    $0x3,%r10
  0x00007fd02510d5c8: cmp    %rax,%r10
<writer thread='140532334335744'/>
[Loaded java.lang.Package from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140531745502976'/>
  0x00007fd02510d5cb: jne    0x00007fd025045e20  ;   {runtime_call}
  0x00007fd02510d5d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fd02510d5dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fd02510d5e0: mov    %eax,-0x14000(%rsp)
  0x00007fd02510d5e7: push   %rbp
  0x00007fd02510d5e8: sub    $0x30,%rsp
  0x00007fd02510d5ec: movabs $0x7fd02159b1c0,%rax  ;   {metadata(method data for {method} {0x00007fd02139ec60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510d5f6: mov    0xdc(%rax),%edi
  0x00007fd02510d5fc: add    $0x8,%edi
  0x00007fd02510d5ff: mov    %edi,0xdc(%rax)
  0x00007fd02510d605: movabs $0x7fd02139ec60,%rax  ;   {metadata({method} {0x00007fd02139ec60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510d60f: and    $0x1ff8,%edi
  0x00007fd02510d615: cmp    $0x0,%edi
  0x00007fd02510d618: je     0x00007fd02510d634  ;*aload_0
                                                ; - java.lang.String::length@0 (line 623)

  0x00007fd02510d61e: mov    0xc(%rsi),%eax
  0x00007fd02510d621: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x00007fd02510d625: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x00007fd02510d648
  0x00007fd02510d628: add    $0x30,%rsp
  0x00007fd02510d62c: pop    %rbp
  0x00007fd02510d62d: test   %eax,0x16cf3acd(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd02510d633: retq   
  0x00007fd02510d634: mov    %rax,0x8(%rsp)
  0x00007fd02510d639: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd02510d641: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop off=134}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ;   {runtime_call}
  0x00007fd02510d646: jmp    0x00007fd02510d61e
  0x00007fd02510d648: callq  0x00007fd0250f9a40  ; OopMap{off=141}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x00007fd02510d64d: nop
  0x00007fd02510d64e: nop
  0x00007fd02510d64f: mov    0x2a8(%r15),%rax
  0x00007fd02510d656: movabs $0x0,%r10
  0x00007fd02510d660: mov    %r10,0x2a8(%r15)
  0x00007fd02510d667: movabs $0x0,%r10
  0x00007fd02510d671: mov    %r10,0x2b0(%r15)
  0x00007fd02510d678: add    $0x30,%rsp
  0x00007fd02510d67c: pop    %rbp
  0x00007fd02510d67d: jmpq   0x00007fd02506c4a0  ;   {runtime_call}
  0x00007fd02510d682: hlt    
  0x00007fd02510d683: hlt    
  0x00007fd02510d684: hlt    
  0x00007fd02510d685: hlt    
  0x00007fd02510d686: hlt    
  0x00007fd02510d687: hlt    
  0x00007fd02510d688: hlt    
  0x00007fd02510d689: hlt    
  0x00007fd02510d68a: hlt    
  0x00007fd02510d68b: hlt    
  0x00007fd02510d68c: hlt    
  0x00007fd02510d68d: hlt    
  0x00007fd02510d68e: hlt    
  0x00007fd02510d68f: hlt    
  0x00007fd02510d690: hlt    
  0x00007fd02510d691: hlt    
  0x00007fd02510d692: hlt    
  0x00007fd02510d693: hlt    
  0x00007fd02510d694: hlt    
  0x00007fd02510d695: hlt    
  0x00007fd02510d696: hlt    
  0x00007fd02510d697: hlt    
  0x00007fd02510d698: hlt    
  0x00007fd02510d699: hlt    
  0x00007fd02510d69a: hlt    
  0x00007fd02510d69b: hlt    
  0x00007fd02510d69c: hlt    
  0x00007fd02510d69d: hlt    
  0x00007fd02510d69e: hlt    
  0x00007fd02510d69f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fd02510d6a0: callq  0x00007fd0250fb820  ;   {no_reloc}
  0x00007fd02510d6a5: mov    %rsp,-0x28(%rsp)
  0x00007fd02510d6aa: sub    $0x80,%rsp
  0x00007fd02510d6b1: mov    %rax,0x78(%rsp)
  0x00007fd02510d6b6: mov    %rcx,0x70(%rsp)
  0x00007fd02510d6bb: mov    %rdx,0x68(%rsp)
  0x00007fd02510d6c0: mov    %rbx,0x60(%rsp)
  0x00007fd02510d6c5: mov    %rbp,0x50(%rsp)
  0x00007fd02510d6ca: mov    %rsi,0x48(%rsp)
  0x00007fd02510d6cf: mov    %rdi,0x40(%rsp)
  0x00007fd02510d6d4: mov    %r8,0x38(%rsp)
  0x00007fd02510d6d9: mov    %r9,0x30(%rsp)
  0x00007fd02510d6de: mov    %r10,0x28(%rsp)
  0x00007fd02510d6e3: mov    %r11,0x20(%rsp)
  0x00007fd02510d6e8: mov    %r12,0x18(%rsp)
  0x00007fd02510d6ed: mov    %r13,0x10(%rsp)
  0x00007fd02510d6f2: mov    %r14,0x8(%rsp)
  0x00007fd02510d6f7: mov    %r15,(%rsp)
  0x00007fd02510d6fb: movabs $0x7fd03acf9f36,%rdi  ;   {external_word}
  0x00007fd02510d705: movabs $0x7fd02510d6a5,%rsi  ;   {internal_word}
  0x00007fd02510d70f: mov    %rsp,%rdx
  0x00007fd02510d712: and    $0xfffffffffffffff0,%rsp
  0x00007fd02510d716: callq  0x00007fd03aa25990  ;   {runtime_call}
  0x00007fd02510d71b: hlt    
[Deopt Handler Code]
  0x00007fd02510d71c: movabs $0x7fd02510d71c,%r10  ;   {section_word}
  0x00007fd02510d726: push   %r10
  0x00007fd02510d728: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd02510d72d: hlt    
  0x00007fd02510d72e: hlt    
  0x00007fd02510d72f: hlt    
<nmethod compile_id='9' compiler='C1' level='3' entry='0x00007fd02510d5c0' size='920' address='0x00007fd02510d450' relocation_offset='296' insts_offset='368' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' nul_chk_table_offset='904' method='java/lang/String length ()I' bytes='6' count='677' iicount='677' stamp='0.087'/>
<writer thread='140532334335744'/>
[Loaded sun.nio.ByteBuffered from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.PerfCounter from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Perf$GetPerfAction from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Perf from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140531745502976'/>
Decoding compiled method 0x00007fd02510d810:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fd02140f6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = int
  #           [sp+0xb0]  (sp of caller)
  0x00007fd02510d9a0: mov    0x8(%rsi),%r10d
  0x00007fd02510d9a4: shl    $0x3,%r10
  0x00007fd02510d9a8: cmp    %rax,%r10
  0x00007fd02510d9ab: jne    0x00007fd025045e20  ;   {runtime_call}
  0x00007fd02510d9b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fd02510d9bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fd02510d9c0: mov    %eax,-0x14000(%rsp)
  0x00007fd02510d9c7: push   %rbp
  0x00007fd02510d9c8: sub    $0xa0,%rsp
  0x00007fd02510d9cf: movabs $0x7fd0215a07d0,%rdi  ;   {metadata(method data for {method} {0x00007fd02140f6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fd02510d9d9: mov    0xdc(%rdi),%ebx
  0x00007fd02510d9df: add    $0x8,%ebx
  0x00007fd02510d9e2: mov    %ebx,0xdc(%rdi)
  0x00007fd02510d9e8: movabs $0x7fd02140f6a0,%rdi  ;   {metadata({method} {0x00007fd02140f6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fd02510d9f2: and    $0x1ff8,%ebx
  0x00007fd02510d9f8: cmp    $0x0,%ebx
  0x00007fd02510d9fb: je     0x00007fd02510dcaf  ;*iload_1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 123)

  0x00007fd02510da01: mov    0x10(%rsi),%edi
  0x00007fd02510da04: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x00007fd02510da08: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x00007fd02510dcc6
  0x00007fd02510da0b: mov    %rdx,%rax
  0x00007fd02510da0e: sub    %ebx,%eax
  0x00007fd02510da10: cmp    $0x0,%eax
  0x00007fd02510da13: movabs $0x7fd0215a07d0,%rax  ;   {metadata(method data for {method} {0x00007fd02140f6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fd02510da1d: movabs $0x108,%rcx
  0x00007fd02510da27: jle    0x00007fd02510da37
  0x00007fd02510da2d: movabs $0x118,%rcx
  0x00007fd02510da37: mov    (%rax,%rcx,1),%r8
  0x00007fd02510da3b: lea    0x1(%r8),%r8
  0x00007fd02510da3f: mov    %r8,(%rax,%rcx,1)
  0x00007fd02510da43: jle    0x00007fd02510dca0  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)

  0x00007fd02510da49: mov    %ebx,0x78(%rsp)
  0x00007fd02510da4d: mov    %rdi,0x80(%rsp)
  0x00007fd02510da55: mov    %rsi,%rax
  0x00007fd02510da58: movabs $0x7fd0215a07d0,%rcx  ;   {metadata(method data for {method} {0x00007fd02140f6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fd02510da62: addq   $0x1,0x128(%rcx)
  0x00007fd02510da6a: mov    %rsi,%rax
  0x00007fd02510da6d: mov    %rax,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00007fd02510da70: mov    %rax,0x88(%rsp)
  0x00007fd02510da78: nop
  0x00007fd02510da79: nop
  0x00007fd02510da7a: nop
  0x00007fd02510da7b: nop
  0x00007fd02510da7c: nop
  0x00007fd02510da7d: nop
  0x00007fd02510da7e: nop
  0x00007fd02510da7f: callq  0x00007fd025046020  ; OopMap{[136]=Oop [128]=Oop off=228}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x00007fd02510da84: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00007fd02510da87: movabs $0x7fd0215a07d0,%rbx  ;   {metadata(method data for {method} {0x00007fd02140f6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fd02510da91: addq   $0x1,0x138(%rbx)
  0x00007fd02510da99: movabs $0x7fd0215a1578,%rbx  ;   {metadata(method data for {method} {0x00007fd0214b4ef0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fd02510daa3: mov    0xdc(%rbx),%edx
  0x00007fd02510daa9: add    $0x8,%edx
  0x00007fd02510daac: mov    %edx,0xdc(%rbx)
  0x00007fd02510dab2: movabs $0x7fd0214b4ef0,%rbx  ;   {metadata({method} {0x00007fd0214b4ef0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fd02510dabc: and    $0x7ffff8,%edx
  0x00007fd02510dac2: cmp    $0x0,%edx
  0x00007fd02510dac5: je     0x00007fd02510dccb
  0x00007fd02510dacb: mov    %r8,%rbx
  0x00007fd02510dace: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00007fd02510dad8: movslq %ebx,%rbx
  0x00007fd02510dadb: mov    %rbx,%rdi
  0x00007fd02510dade: cmp    $0xffffff,%rbx
  0x00007fd02510dae5: ja     0x00007fd02510dce2
  0x00007fd02510daeb: movabs $0x17,%rsi
  0x00007fd02510daf5: lea    (%rsi,%rbx,2),%rsi
  0x00007fd02510daf9: and    $0xfffffffffffffff8,%rsi
  0x00007fd02510dafd: mov    0x60(%r15),%rax
  0x00007fd02510db01: lea    (%rax,%rsi,1),%rsi
  0x00007fd02510db05: cmp    0x70(%r15),%rsi
  0x00007fd02510db09: ja     0x00007fd02510dce2
  0x00007fd02510db0f: mov    %rsi,0x60(%r15)
  0x00007fd02510db13: sub    %rax,%rsi
  0x00007fd02510db16: movq   $0x1,(%rax)
  0x00007fd02510db1d: mov    %rdx,%rcx
  0x00007fd02510db20: shr    $0x3,%rcx
  0x00007fd02510db24: mov    %ecx,0x8(%rax)
  0x00007fd02510db27: mov    %ebx,0xc(%rax)
  0x00007fd02510db2a: sub    $0x10,%rsi
  0x00007fd02510db2e: je     0x00007fd02510db45
  0x00007fd02510db34: xor    %rbx,%rbx
  0x00007fd02510db37: shr    $0x3,%rsi
  0x00007fd02510db3b: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fd02510db40: dec    %rsi
  0x00007fd02510db43: jne    0x00007fd02510db3b  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00007fd02510db45: movabs $0x7fd0215a1578,%rsi  ;   {metadata(method data for {method} {0x00007fd0214b4ef0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fd02510db4f: addq   $0x1,0x108(%rsi)
  0x00007fd02510db57: movabs $0x7fd021563ce8,%rsi  ;   {metadata(method data for {method} {0x00007fd0214907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fd02510db61: mov    0xdc(%rsi),%edx
  0x00007fd02510db67: add    $0x8,%edx
  0x00007fd02510db6a: mov    %edx,0xdc(%rsi)
  0x00007fd02510db70: movabs $0x7fd0214907a8,%rsi  ;   {metadata({method} {0x00007fd0214907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fd02510db7a: and    $0x7ffff8,%edx
  0x00007fd02510db80: cmp    $0x0,%edx
  0x00007fd02510db83: je     0x00007fd02510dcec
  0x00007fd02510db89: mov    0x78(%rsp),%ebx
  0x00007fd02510db8d: cmp    %r8d,%ebx
  0x00007fd02510db90: movabs $0x7fd021563ce8,%rsi  ;   {metadata(method data for {method} {0x00007fd0214907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fd02510db9a: movabs $0x108,%rdx
  0x00007fd02510dba4: jg     0x00007fd02510dbb4
  0x00007fd02510dbaa: movabs $0x118,%rdx
  0x00007fd02510dbb4: mov    (%rsi,%rdx,1),%rcx
  0x00007fd02510dbb8: lea    0x1(%rcx),%rcx
  0x00007fd02510dbbc: mov    %rcx,(%rsi,%rdx,1)
  0x00007fd02510dbc0: jg     0x00007fd02510dbdb  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00007fd02510dbc6: movabs $0x7fd021563ce8,%rsi  ;   {metadata(method data for {method} {0x00007fd0214907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fd02510dbd0: incl   0x128(%rsi)
  0x00007fd02510dbd6: jmpq   0x00007fd02510dbde  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00007fd02510dbdb: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00007fd02510dbde: mov    0x80(%rsp),%rdi
  0x00007fd02510dbe6: movabs $0x7fd0215a1578,%rsi  ;   {metadata(method data for {method} {0x00007fd0214b4ef0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fd02510dbf0: addq   $0x1,0x118(%rsi)
  0x00007fd02510dbf8: mov    %rdi,%rsi
  0x00007fd02510dbfb: mov    $0x0,%edx
  0x00007fd02510dc00: mov    %rax,%rcx
  0x00007fd02510dc03: mov    $0x0,%r8d
  0x00007fd02510dc09: mov    %rbx,%r9
  0x00007fd02510dc0c: mov    %rax,0x90(%rsp)
  0x00007fd02510dc14: lea    (%rdx,%r9,1),%rdi
  0x00007fd02510dc18: cmp    0xc(%rsi),%edi
  0x00007fd02510dc1b: ja     0x00007fd02510dd03
  0x00007fd02510dc21: lea    (%r8,%r9,1),%rdi
  0x00007fd02510dc25: cmp    0xc(%rcx),%edi
  0x00007fd02510dc28: ja     0x00007fd02510dd03
  0x00007fd02510dc2e: test   %r9d,%r9d
  0x00007fd02510dc31: jl     0x00007fd02510dd03
  0x00007fd02510dc37: je     0x00007fd02510dc73
  0x00007fd02510dc3d: movslq %edx,%rdx
  0x00007fd02510dc40: movslq %r8d,%r8
  0x00007fd02510dc43: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007fd02510dc48: lea    0x10(%rcx,%r8,2),%rsi
  0x00007fd02510dc4d: mov    %r9,%rdx
  0x00007fd02510dc50: test   $0xf,%esp
  0x00007fd02510dc56: je     0x00007fd02510dc6e
  0x00007fd02510dc5c: sub    $0x8,%rsp
  0x00007fd02510dc60: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007fd02510dc65: add    $0x8,%rsp
  0x00007fd02510dc69: jmpq   0x00007fd02510dc73
  0x00007fd02510dc6e: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00007fd02510dc73: mov    0x90(%rsp),%rax
  0x00007fd02510dc7b: mov    0x88(%rsp),%rsi
  0x00007fd02510dc83: mov    %rax,%r10
  0x00007fd02510dc86: shr    $0x3,%r10
  0x00007fd02510dc8a: mov    %r10d,0x10(%rsi)
  0x00007fd02510dc8e: shr    $0x9,%rsi
  0x00007fd02510dc92: movabs $0x7fd0211ff000,%rdi
  0x00007fd02510dc9c: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x00007fd02510dca0: add    $0xa0,%rsp
  0x00007fd02510dca7: pop    %rbp
  0x00007fd02510dca8: test   %eax,0x16cf3452(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd02510dcae: retq   
  0x00007fd02510dcaf: mov    %rdi,0x8(%rsp)
  0x00007fd02510dcb4: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd02510dcbc: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop off=801}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ;   {runtime_call}
  0x00007fd02510dcc1: jmpq   0x00007fd02510da01
  0x00007fd02510dcc6: callq  0x00007fd0250f9a40  ; OopMap{rsi=Oop rdi=Oop off=811}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x00007fd02510dccb: mov    %rbx,0x8(%rsp)
  0x00007fd02510dcd0: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd02510dcd8: callq  0x00007fd0250fdea0  ; OopMap{[136]=Oop [128]=Oop off=829}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00007fd02510dcdd: jmpq   0x00007fd02510dacb
  0x00007fd02510dce2: callq  0x00007fd0250faa60  ; OopMap{[136]=Oop [128]=Oop off=839}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00007fd02510dce7: jmpq   0x00007fd02510db45
  0x00007fd02510dcec: mov    %rsi,0x8(%rsp)
  0x00007fd02510dcf1: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd02510dcf9: callq  0x00007fd0250fdea0  ; OopMap{[136]=Oop [128]=Oop rax=Oop off=862}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00007fd02510dcfe: jmpq   0x00007fd02510db89
  0x00007fd02510dd03: nop
  0x00007fd02510dd04: nop
  0x00007fd02510dd05: nop
  0x00007fd02510dd06: nop
  0x00007fd02510dd07: callq  0x00007fd025046420  ; OopMap{[136]=Oop [144]=Oop off=876}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {static_call}
  0x00007fd02510dd0c: jmpq   0x00007fd02510dc73
  0x00007fd02510dd11: nop
  0x00007fd02510dd12: nop
  0x00007fd02510dd13: mov    0x2a8(%r15),%rax
  0x00007fd02510dd1a: movabs $0x0,%r10
  0x00007fd02510dd24: mov    %r10,0x2a8(%r15)
  0x00007fd02510dd2b: movabs $0x0,%r10
  0x00007fd02510dd35: mov    %r10,0x2b0(%r15)
  0x00007fd02510dd3c: add    $0xa0,%rsp
  0x00007fd02510dd43: pop    %rbp
  0x00007fd02510dd44: jmpq   0x00007fd02506c4a0  ;   {runtime_call}
  0x00007fd02510dd49: hlt    
  0x00007fd02510dd4a: hlt    
  0x00007fd02510dd4b: hlt    
  0x00007fd02510dd4c: hlt    
  0x00007fd02510dd4d: hlt    
  0x00007fd02510dd4e: hlt    
  0x00007fd02510dd4f: hlt    
  0x00007fd02510dd50: hlt    
  0x00007fd02510dd51: hlt    
  0x00007fd02510dd52: hlt    
  0x00007fd02510dd53: hlt    
  0x00007fd02510dd54: hlt    
  0x00007fd02510dd55: hlt    
  0x00007fd02510dd56: hlt    
  0x00007fd02510dd57: hlt    
  0x00007fd02510dd58: hlt    
  0x00007fd02510dd59: hlt    
  0x00007fd02510dd5a: hlt    
  0x00007fd02510dd5b: hlt    
  0x00007fd02510dd5c: hlt    
  0x00007fd02510dd5d: hlt    
  0x00007fd02510dd5e: hlt    
  0x00007fd02510dd5f: hlt    
[Stub Code]
  0x00007fd02510dd60: nop                       ;   {no_reloc}
  0x00007fd02510dd61: nop
  0x00007fd02510dd62: nop
  0x00007fd02510dd63: nop
  0x00007fd02510dd64: nop
  0x00007fd02510dd65: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd02510dd6f: jmpq   0x00007fd02510dd6f  ;   {runtime_call}
  0x00007fd02510dd74: nop
  0x00007fd02510dd75: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd02510dd7f: jmpq   0x00007fd02510dd7f  ;   {runtime_call}
[Exception Handler]
  0x00007fd02510dd84: callq  0x00007fd0250fb820  ;   {runtime_call}
  0x00007fd02510dd89: mov    %rsp,-0x28(%rsp)
  0x00007fd02510dd8e: sub    $0x80,%rsp
  0x00007fd02510dd95: mov    %rax,0x78(%rsp)
  0x00007fd02510dd9a: mov    %rcx,0x70(%rsp)
  0x00007fd02510dd9f: mov    %rdx,0x68(%rsp)
  0x00007fd02510dda4: mov    %rbx,0x60(%rsp)
  0x00007fd02510dda9: mov    %rbp,0x50(%rsp)
  0x00007fd02510ddae: mov    %rsi,0x48(%rsp)
  0x00007fd02510ddb3: mov    %rdi,0x40(%rsp)
  0x00007fd02510ddb8: mov    %r8,0x38(%rsp)
  0x00007fd02510ddbd: mov    %r9,0x30(%rsp)
  0x00007fd02510ddc2: mov    %r10,0x28(%rsp)
  0x00007fd02510ddc7: mov    %r11,0x20(%rsp)
  0x00007fd02510ddcc: mov    %r12,0x18(%rsp)
  0x00007fd02510ddd1: mov    %r13,0x10(%rsp)
  0x00007fd02510ddd6: mov    %r14,0x8(%rsp)
  0x00007fd02510dddb: mov    %r15,(%rsp)
  0x00007fd02510dddf: movabs $0x7fd03acf9f36,%rdi  ;   {external_word}
  0x00007fd02510dde9: movabs $0x7fd02510dd89,%rsi  ;   {internal_word}
  0x00007fd02510ddf3: mov    %rsp,%rdx
  0x00007fd02510ddf6: and    $0xfffffffffffffff0,%rsp
  0x00007fd02510ddfa: callq  0x00007fd03aa25990  ;   {runtime_call}
  0x00007fd02510ddff: hlt    
[Deopt Handler Code]
  0x00007fd02510de00: movabs $0x7fd02510de00,%r10  ;   {section_word}
  0x00007fd02510de0a: push   %r10
  0x00007fd02510de0c: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd02510de11: hlt    
  0x00007fd02510de12: hlt    
  0x00007fd02510de13: hlt    
  0x00007fd02510de14: hlt    
  0x00007fd02510de15: hlt    
  0x00007fd02510de16: hlt    
  0x00007fd02510de17: hlt    
<nmethod compile_id='10' compiler='C1' level='3' entry='0x00007fd02510d9a0' size='2128' address='0x00007fd02510d810' relocation_offset='296' insts_offset='400' stub_offset='1360' scopes_data_offset='1568' scopes_pcs_offset='1768' dependencies_offset='2104' nul_chk_table_offset='2112' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='335' iicount='335' stamp='0.090'/>
<writer thread='140532334335744'/>
[Loaded sun.misc.PerfCounter$CoreCounters from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.ch.DirectBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.MappedByteBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.DirectByteBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.LongBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.DirectLongBufferU from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.PermissionCollection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.Permissions from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<task_queued compile_id='12' method='java/lang/String getChars (II[CI)V' bytes='62' count='256' iicount='256' level='3' stamp='0.091' comment='tiered' hot_count='256'/>
<task_queued compile_id='13' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='259' iicount='259' level='3' stamp='0.091' comment='tiered' hot_count='259'/>
[Loaded java.net.URLConnection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.net.www.URLConnection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.FileURLConnection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.net.www.MessageHeader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FilePermission from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FilePermission$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140531745502976'/>
Decoding compiled method 0x00007fd02510e690:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fd02140fff8} &apos;append&apos; &apos;(Ljava/lang/S
<writer thread='140532334335744'/>
[Loaded java.io.FilePermissionCollection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140531745502976'/>
tring;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0xf0]  (sp of caller)
  0x00007fd02510e860: mov    0x8(%rsi),%r10d
  0x00007fd02510e864: shl    $0x3,%r10
  0x00007fd02510e868: cmp    %rax,%r10
  0x00007fd02510e86b: jne    0x00007fd025045e20  ;   {runtime_call}
  0x00007fd02510e871: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fd02510e87c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fd02510e880: mov    %eax,-0x14000(%rsp)
  0x00007fd02510e887: push   %rbp
  0x00007fd02510e888: sub    $0xe0,%rsp
  0x00007fd02510e88f: mov    %rsi,0xb8(%rsp)
  0x00007fd02510e897: movabs $0x7fd02157e610,%rdi  ;   {metadata(method data for {method} {0x00007fd02140fff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fd02510e8a1: mov    0xdc(%rdi),%ebx
  0x00007fd02510e8a7: add    $0x8,%ebx
  0x00007fd02510e8aa: mov    %ebx,0xdc(%rdi)
  0x00007fd02510e8b0: movabs $0x7fd02140fff8,%rdi  ;   {metadata({method} {0x00007fd02140fff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fd02510e8ba: and    $0x1ff8,%ebx
  0x00007fd02510e8c0: cmp    $0x0,%ebx
  0x00007fd02510e8c3: je     0x00007fd02510edf3  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x00007fd02510e8c9: cmp    $0x0,%rdx
  0x00007fd02510e8cd: movabs $0x7fd02157e610,%rdi  ;   {metadata(method data for {method} {0x00007fd02140fff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fd02510e8d7: movabs $0x108,%rbx
  0x00007fd02510e8e1: jne    0x00007fd02510e8f1
  0x00007fd02510e8e7: movabs $0x118,%rbx
  0x00007fd02510e8f1: mov    (%rdi,%rbx,1),%rax
  0x00007fd02510e8f5: lea    0x1(%rax),%rax
  0x00007fd02510e8f9: mov    %rax,(%rdi,%rbx,1)
  0x00007fd02510e8fd: je     0x00007fd02510edc3  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x00007fd02510e903: cmp    (%rdx),%rax        ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x00007fd02510ee0a
  0x00007fd02510e906: mov    %rdx,%rdi
  0x00007fd02510e909: movabs $0x7fd02157e610,%rbx  ;   {metadata(method data for {method} {0x00007fd02140fff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fd02510e913: mov    0x8(%rdi),%edi
  0x00007fd02510e916: shl    $0x3,%rdi
  0x00007fd02510e91a: cmp    0x140(%rbx),%rdi
  0x00007fd02510e921: jne    0x00007fd02510e930
  0x00007fd02510e923: addq   $0x1,0x148(%rbx)
  0x00007fd02510e92b: jmpq   0x00007fd02510e996
  0x00007fd02510e930: cmp    0x150(%rbx),%rdi
  0x00007fd02510e937: jne    0x00007fd02510e946
  0x00007fd02510e939: addq   $0x1,0x158(%rbx)
  0x00007fd02510e941: jmpq   0x00007fd02510e996
  0x00007fd02510e946: cmpq   $0x0,0x140(%rbx)
  0x00007fd02510e951: jne    0x00007fd02510e96a
  0x00007fd02510e953: mov    %rdi,0x140(%rbx)
  0x00007fd02510e95a: movq   $0x1,0x148(%rbx)
  0x00007fd02510e965: jmpq   0x00007fd02510e996
  0x00007fd02510e96a: cmpq   $0x0,0x150(%rbx)
  0x00007fd02510e975: jne    0x00007fd02510e98e
  0x00007fd02510e977: mov    %rdi,0x150(%rbx)
  0x00007fd02510e97e: movq   $0x1,0x158(%rbx)
  0x00007fd02510e989: jmpq   0x00007fd02510e996
  0x00007fd02510e98e: addq   $0x1,0x138(%rbx)
  0x00007fd02510e996: movabs $0x7fd02159b1c0,%rdi  ;   {metadata(method data for {method} {0x00007fd02139ec60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510e9a0: mov    0xdc(%rdi),%ebx
  0x00007fd02510e9a6: add    $0x8,%ebx
  0x00007fd02510e9a9: mov    %ebx,0xdc(%rdi)
  0x00007fd02510e9af: movabs $0x7fd02139ec60,%rdi  ;   {metadata({method} {0x00007fd02139ec60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510e9b9: and    $0x7ffff8,%ebx
  0x00007fd02510e9bf: cmp    $0x0,%ebx
  0x00007fd02510e9c2: je     0x00007fd02510ee0f
  0x00007fd02510e9c8: mov    0xc(%rdx),%edi
  0x00007fd02510e9cb: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x00007fd02510e9cf: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x00007fd02510ee26
  0x00007fd02510e9d2: mov    %edi,0xac(%rsp)
  0x00007fd02510e9d9: mov    0xc(%rsi),%ebx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x00007fd02510e9dc: add    %edi,%ebx
  0x00007fd02510e9de: mov    %rsi,%rax
  0x00007fd02510e9e1: movabs $0x7fd02157e610,%rcx  ;   {metadata(method data for {method} {0x00007fd02140fff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fd02510e9eb: addq   $0x1,0x168(%rcx)
  0x00007fd02510e9f3: movabs $0x7fd0215a07d0,%rax  ;   {metadata(method data for {method} {0x00007fd02140f6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fd02510e9fd: mov    0xdc(%rax),%ecx
  0x00007fd02510ea03: add    $0x8,%ecx
  0x00007fd02510ea06: mov    %ecx,0xdc(%rax)
  0x00007fd02510ea0c: movabs $0x7fd02140f6a0,%rax  ;   {metadata({method} {0x00007fd02140f6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fd02510ea16: and    $0x7ffff8,%ecx
  0x00007fd02510ea1c: cmp    $0x0,%ecx
  0x00007fd02510ea1f: je     0x00007fd02510ee2b
  0x00007fd02510ea25: mov    0x10(%rsi),%eax
  0x00007fd02510ea28: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fd02510ea2c: mov    0xc(%rax),%ecx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x00007fd02510ee42
  0x00007fd02510ea2f: mov    %rbx,%r8
  0x00007fd02510ea32: sub    %ecx,%r8d
  0x00007fd02510ea35: cmp    $0x0,%r8d
  0x00007fd02510ea39: movabs $0x7fd0215a07d0,%r8  ;   {metadata(method data for {method} {0x00007fd02140f6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fd02510ea43: movabs $0x108,%r9
  0x00007fd02510ea4d: jle    0x00007fd02510ea5d
  0x00007fd02510ea53: movabs $0x118,%r9
  0x00007fd02510ea5d: mov    (%r8,%r9,1),%r11
  0x00007fd02510ea61: lea    0x1(%r11),%r11
  0x00007fd02510ea65: mov    %r11,(%r8,%r9,1)
  0x00007fd02510ea69: jg     0x00007fd02510ea7c  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fd02510ea6f: mov    %rdx,0xc0(%rsp)
  0x00007fd02510ea77: jmpq   0x00007fd02510ecdb  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fd02510ea7c: mov    %ecx,0xa8(%rsp)
  0x00007fd02510ea83: mov    %rax,0xb0(%rsp)
  0x00007fd02510ea8b: mov    %rdx,0xc0(%rsp)
  0x00007fd02510ea93: mov    %rsi,%r8
  0x00007fd02510ea96: movabs $0x7fd0215a07d0,%r9  ;   {metadata(method data for {method} {0x00007fd02140f6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fd02510eaa0: addq   $0x1,0x128(%r9)
  0x00007fd02510eaa8: mov    %rbx,%rdx
  0x00007fd02510eaab: mov    %rsi,%rbx
  0x00007fd02510eaae: mov    %rbx,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fd02510eab1: nop
  0x00007fd02510eab2: nop
  0x00007fd02510eab3: nop
  0x00007fd02510eab4: nop
  0x00007fd02510eab5: nop
  0x00007fd02510eab6: nop
  0x00007fd02510eab7: callq  0x00007fd025046020  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=604}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x00007fd02510eabc: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fd02510eabf: movabs $0x7fd0215a07d0,%rbx  ;   {metadata(method data for {method} {0x00007fd02140f6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fd02510eac9: addq   $0x1,0x138(%rbx)
  0x00007fd02510ead1: movabs $0x7fd0215a1578,%rbx  ;   {metadata(method data for {method} {0x00007fd0214b4ef0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fd02510eadb: mov    0xdc(%rbx),%edx
  0x00007fd02510eae1: add    $0x8,%edx
  0x00007fd02510eae4: mov    %edx,0xdc(%rbx)
  0x00007fd02510eaea: movabs $0x7fd0214b4ef0,%rbx  ;   {metadata({method} {0x00007fd0214b4ef0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fd02510eaf4: and    $0x7ffff8,%edx
  0x00007fd02510eafa: cmp    $0x0,%edx
  0x00007fd02510eafd: je     0x00007fd02510ee47
  0x00007fd02510eb03: mov    %r8,%rbx
  0x00007fd02510eb06: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00007fd02510eb10: movslq %ebx,%rbx
  0x00007fd02510eb13: mov    %rbx,%rdi
  0x00007fd02510eb16: cmp    $0xffffff,%rbx
  0x00007fd02510eb1d: ja     0x00007fd02510ee5e
  0x00007fd02510eb23: movabs $0x17,%rsi
  0x00007fd02510eb2d: lea    (%rsi,%rbx,2),%rsi
  0x00007fd02510eb31: and    $0xfffffffffffffff8,%rsi
  0x00007fd02510eb35: mov    0x60(%r15),%rax
  0x00007fd02510eb39: lea    (%rax,%rsi,1),%rsi
  0x00007fd02510eb3d: cmp    0x70(%r15),%rsi
  0x00007fd02510eb41: ja     0x00007fd02510ee5e
  0x00007fd02510eb47: mov    %rsi,0x60(%r15)
  0x00007fd02510eb4b: sub    %rax,%rsi
  0x00007fd02510eb4e: movq   $0x1,(%rax)
  0x00007fd02510eb55: mov    %rdx,%rcx
  0x00007fd02510eb58: shr    $0x3,%rcx
  0x00007fd02510eb5c: mov    %ecx,0x8(%rax)
  0x00007fd02510eb5f: mov    %ebx,0xc(%rax)
  0x00007fd02510eb62: sub    $0x10,%rsi
  0x00007fd02510eb66: je     0x00007fd02510eb7d
  0x00007fd02510eb6c: xor    %rbx,%rbx
  0x00007fd02510eb6f: shr    $0x3,%rsi
  0x00007fd02510eb73: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007fd02510eb78: dec    %rsi
  0x00007fd02510eb7b: jne    0x00007fd02510eb73  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fd02510eb7d: movabs $0x7fd0215a1578,%rsi  ;   {metadata(method data for {method} {0x00007fd0214b4ef0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fd02510eb87: addq   $0x1,0x108(%rsi)
  0x00007fd02510eb8f: movabs $0x7fd021563ce8,%rsi  ;   {metadata(method data for {method} {0x00007fd0214907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fd02510eb99: mov    0xdc(%rsi),%edx
  0x00007fd02510eb9f: add    $0x8,%edx
  0x00007fd02510eba2: mov    %edx,0xdc(%rsi)
  0x00007fd02510eba8: movabs $0x7fd0214907a8,%rsi  ;   {metadata({method} {0x00007fd0214907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fd02510ebb2: and    $0x7ffff8,%edx
  0x00007fd02510ebb8: cmp    $0x0,%edx
  0x00007fd02510ebbb: je     0x00007fd02510ee68
  0x00007fd02510ebc1: mov    0xa8(%rsp),%ecx
  0x00007fd02510ebc8: cmp    %r8d,%ecx
  0x00007fd02510ebcb: movabs $0x7fd021563ce8,%rsi  ;   {metadata(method data for {method} {0x00007fd0214907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fd02510ebd5: movabs $0x108,%rdx
  0x00007fd02510ebdf: jg     0x00007fd02510ebef
  0x00007fd02510ebe5: movabs $0x118,%rdx
  0x00007fd02510ebef: mov    (%rsi,%rdx,1),%r9
  0x00007fd02510ebf3: lea    0x1(%r9),%r9
  0x00007fd02510ebf7: mov    %r9,(%rsi,%rdx,1)
  0x00007fd02510ebfb: jg     0x00007fd02510ec19  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fd02510ec01: movabs $0x7fd021563ce8,%rsi  ;   {metadata(method data for {method} {0x00007fd0214907a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fd02510ec0b: incl   0x128(%rsi)
  0x00007fd02510ec11: mov    %rcx,%r9
  0x00007fd02510ec14: jmpq   0x00007fd02510ec1c  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fd02510ec19: mov    %r8,%r9            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fd02510ec1c: mov    0xb0(%rsp),%rsi
  0x00007fd02510ec24: movabs $0x7fd0215a1578,%rdx  ;   {metadata(method data for {method} {0x00007fd0214b4ef0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007fd02510ec2e: addq   $0x1,0x118(%rdx)
  0x00007fd02510ec36: mov    $0x0,%edx
  0x00007fd02510ec3b: mov    %rax,%rcx
  0x00007fd02510ec3e: mov    $0x0,%r8d
  0x00007fd02510ec44: mov    %rax,0xc8(%rsp)
  0x00007fd02510ec4c: lea    (%rdx,%r9,1),%rdi
  0x00007fd02510ec50: cmp    0xc(%rsi),%edi
  0x00007fd02510ec53: ja     0x00007fd02510ee7f
  0x00007fd02510ec59: lea    (%r8,%r9,1),%rdi
  0x00007fd02510ec5d: cmp    0xc(%rcx),%edi
  0x00007fd02510ec60: ja     0x00007fd02510ee7f
  0x00007fd02510ec66: test   %r9d,%r9d
  0x00007fd02510ec69: jl     0x00007fd02510ee7f
  0x00007fd02510ec6f: je     0x00007fd02510ecab
  0x00007fd02510ec75: movslq %edx,%rdx
  0x00007fd02510ec78: movslq %r8d,%r8
  0x00007fd02510ec7b: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007fd02510ec80: lea    0x10(%rcx,%r8,2),%rsi
  0x00007fd02510ec85: mov    %r9,%rdx
  0x00007fd02510ec88: test   $0xf,%esp
  0x00007fd02510ec8e: je     0x00007fd02510eca6
  0x00007fd02510ec94: sub    $0x8,%rsp
  0x00007fd02510ec98: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007fd02510ec9d: add    $0x8,%rsp
  0x00007fd02510eca1: jmpq   0x00007fd02510ecab
  0x00007fd02510eca6: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007fd02510ecab: mov    0xc8(%rsp),%rax
  0x00007fd02510ecb3: mov    0xb8(%rsp),%rsi
  0x00007fd02510ecbb: mov    %rax,%r10
  0x00007fd02510ecbe: shr    $0x3,%r10
  0x00007fd02510ecc2: mov    %r10d,0x10(%rsi)
  0x00007fd02510ecc6: mov    %rsi,%rdx
  0x00007fd02510ecc9: shr    $0x9,%rdx
  0x00007fd02510eccd: movabs $0x7fd0211ff000,%rcx
  0x00007fd02510ecd7: movb   $0x0,(%rdx,%rcx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007fd02510ecdb: mov    0xac(%rsp),%ebx
  0x00007fd02510ece2: mov    0xc0(%rsp),%rdi
  0x00007fd02510ecea: mov    0x10(%rsi),%r8d
  0x00007fd02510ecee: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x00007fd02510ecf2: mov    0xc(%rsi),%r9d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x00007fd02510ecf6: mov    %rdi,%rdx
  0x00007fd02510ecf9: movabs $0x7fd02157e610,%rcx  ;   {metadata(method data for {method} {0x00007fd02140fff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fd02510ed03: mov    0x8(%rdx),%edx
  0x00007fd02510ed06: shl    $0x3,%rdx
  0x00007fd02510ed0a: cmp    0x180(%rcx),%rdx
  0x00007fd02510ed11: jne    0x00007fd02510ed20
  0x00007fd02510ed13: addq   $0x1,0x188(%rcx)
  0x00007fd02510ed1b: jmpq   0x00007fd02510ed86
  0x00007fd02510ed20: cmp    0x190(%rcx),%rdx
  0x00007fd02510ed27: jne    0x00007fd02510ed36
  0x00007fd02510ed29: addq   $0x1,0x198(%rcx)
  0x00007fd02510ed31: jmpq   0x00007fd02510ed86
  0x00007fd02510ed36: cmpq   $0x0,0x180(%rcx)
  0x00007fd02510ed41: jne    0x00007fd02510ed5a
  0x00007fd02510ed43: mov    %rdx,0x180(%rcx)
  0x00007fd02510ed4a: movq   $0x1,0x188(%rcx)
  0x00007fd02510ed55: jmpq   0x00007fd02510ed86
  0x00007fd02510ed5a: cmpq   $0x0,0x190(%rcx)
  0x00007fd02510ed65: jne    0x00007fd02510ed7e
  0x00007fd02510ed67: mov    %rdx,0x190(%rcx)
  0x00007fd02510ed6e: movq   $0x1,0x198(%rcx)
  0x00007fd02510ed79: jmpq   0x00007fd02510ed86
  0x00007fd02510ed7e: addq   $0x1,0x178(%rcx)
  0x00007fd02510ed86: mov    $0x0,%edx
  0x00007fd02510ed8b: mov    %rbx,%rcx
  0x00007fd02510ed8e: mov    %rdi,%rsi          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x00007fd02510ed91: nop
  0x00007fd02510ed92: nop
  0x00007fd02510ed93: nop
  0x00007fd02510ed94: nop
  0x00007fd02510ed95: nop
  0x00007fd02510ed96: nop
  0x00007fd02510ed97: callq  0x00007fd025046020  ; OopMap{[184]=Oop off=1340}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x00007fd02510ed9c: mov    0xb8(%rsp),%rsi
  0x00007fd02510eda4: mov    0xc(%rsi),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x00007fd02510eda7: add    0xac(%rsp),%eax
  0x00007fd02510edae: mov    %eax,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x00007fd02510edb1: mov    %rsi,%rax
  0x00007fd02510edb4: add    $0xe0,%rsp
  0x00007fd02510edbb: pop    %rbp
  0x00007fd02510edbc: test   %eax,0x16cf233e(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd02510edc2: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x00007fd02510edc3: mov    %rsi,%rdi
  0x00007fd02510edc6: movabs $0x7fd02157e610,%rbx  ;   {metadata(method data for {method} {0x00007fd02140fff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fd02510edd0: addq   $0x1,0x128(%rbx)
  0x00007fd02510edd8: nop
  0x00007fd02510edd9: nop
  0x00007fd02510edda: nop
  0x00007fd02510eddb: nop
  0x00007fd02510eddc: nop
  0x00007fd02510eddd: nop
  0x00007fd02510edde: nop
  0x00007fd02510eddf: callq  0x00007fd025046020  ; OopMap{off=1412}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x00007fd02510ede4: add    $0xe0,%rsp
  0x00007fd02510edeb: pop    %rbp
  0x00007fd02510edec: test   %eax,0x16cf230e(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd02510edf2: retq   
  0x00007fd02510edf3: mov    %rdi,0x8(%rsp)
  0x00007fd02510edf8: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd02510ee00: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1445}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x00007fd02510ee05: jmpq   0x00007fd02510e8c9
  0x00007fd02510ee0a: callq  0x00007fd0250f9a40  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1455}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00007fd02510ee0f: mov    %rdi,0x8(%rsp)
  0x00007fd02510ee14: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd02510ee1c: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1473}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00007fd02510ee21: jmpq   0x00007fd02510e9c8
  0x00007fd02510ee26: callq  0x00007fd0250f9a40  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1483}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00007fd02510ee2b: mov    %rax,0x8(%rsp)
  0x00007fd02510ee30: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd02510ee38: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1501}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007fd02510ee3d: jmpq   0x00007fd02510ea25
  0x00007fd02510ee42: callq  0x00007fd0250f9a40  ; OopMap{rsi=Oop [184]=Oop rdx=Oop rax=Oop off=1511}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007fd02510ee47: mov    %rbx,0x8(%rsp)
  0x00007fd02510ee4c: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd02510ee54: callq  0x00007fd0250fdea0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1529}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007fd02510ee59: jmpq   0x00007fd02510eb03
  0x00007fd02510ee5e: callq  0x00007fd0250faa60  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1539}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007fd02510ee63: jmpq   0x00007fd02510eb7d
  0x00007fd02510ee68: mov    %rsi,0x8(%rsp)
  0x00007fd02510ee6d: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd02510ee75: callq  0x00007fd0250fdea0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1562}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007fd02510ee7a: jmpq   0x00007fd02510ebc1
  0x00007fd02510ee7f: callq  0x00007fd025046420  ; OopMap{[184]=Oop [192]=Oop [200]=Oop off=1572}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x00007fd02510ee84: jmpq   0x00007fd02510ecab
  0x00007fd02510ee89: nop
  0x00007fd02510ee8a: nop
  0x00007fd02510ee8b: mov    0x2a8(%r15),%rax
  0x00007fd02510ee92: movabs $0x0,%r10
  0x00007fd02510ee9c: mov    %r10,0x2a8(%r15)
  0x00007fd02510eea3: movabs $0x0,%r10
  0x00007fd02510eead: mov    %r10,0x2b0(%r15)
  0x00007fd02510eeb4: add    $0xe0,%rsp
  0x00007fd02510eebb: pop    %rbp
  0x00007fd02510eebc: jmpq   0x00007fd02506c4a0  ;   {runtime_call}
  0x00007fd02510eec1: hlt    
  0x00007fd02510eec2: hlt    
  0x00007fd02510eec3: hlt    
  0x00007fd02510eec4: hlt    
  0x00007fd02510eec5: hlt    
  0x00007fd02510eec6: hlt    
  0x00007fd02510eec7: hlt    
  0x00007fd02510eec8: hlt    
  0x00007fd02510eec9: hlt    
  0x00007fd02510eeca: hlt    
  0x00007fd02510eecb: hlt    
  0x00007fd02510eecc: hlt    
  0x00007fd02510eecd: hlt    
  0x00007fd02510eece: hlt    
  0x00007fd02510eecf: hlt    
  0x00007fd02510eed0: hlt    
  0x00007fd02510eed1: hlt    
  0x00007fd02510eed2: hlt    
  0x00007fd02510eed3: hlt    
  0x00007fd02510eed4: hlt    
  0x00007fd02510eed5: hlt    
  0x00007fd02510eed6: hlt    
  0x00007fd02510eed7: hlt    
  0x00007fd02510eed8: hlt    
  0x00007fd02510eed9: hlt    
  0x00007fd02510eeda: hlt    
  0x00007fd02510eedb: hlt    
  0x00007fd02510eedc: hlt    
  0x00007fd02510eedd: hlt    
  0x00007fd02510eede: hlt    
  0x00007fd02510eedf: hlt    
[Stub Code]
  0x00007fd02510eee0: nop                       ;   {no_reloc}
  0x00007fd02510eee1: nop
  0x00007fd02510eee2: nop
  0x00007fd02510eee3: nop
  0x00007fd02510eee4: nop
  0x00007fd02510eee5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd02510eeef: jmpq   0x00007fd02510eeef  ;   {runtime_call}
  0x00007fd02510eef4: nop
  0x00007fd02510eef5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd02510eeff: jmpq   0x00007fd02510eeff  ;   {runtime_call}
  0x00007fd02510ef04: nop
  0x00007fd02510ef05: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd02510ef0f: jmpq   0x00007fd02510ef0f  ;   {runtime_call}
  0x00007fd02510ef14: nop
  0x00007fd02510ef15: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd02510ef1f: jmpq   0x00007fd02510ef1f  ;   {runtime_call}
[Exception Handler]
  0x00007fd02510ef24: callq  0x00007fd0250fb820  ;   {runtime_call}
  0x00007fd02510ef29: mov    %rsp,-0x28(%rsp)
  0x00007fd02510ef2e: sub    $0x80,%rsp
  0x00007fd02510ef35: mov    %rax,0x78(%rsp)
  0x00007fd02510ef3a: mov    %rcx,0x70(%rsp)
  0x00007fd02510ef3f: mov    %rdx,0x68(%rsp)
  0x00007fd02510ef44: mov    %rbx,0x60(%rsp)
  0x00007fd02510ef49: mov    %rbp,0x50(%rsp)
  0x00007fd02510ef4e: mov    %rsi,0x48(%rsp)
  0x00007fd02510ef53: mov    %rdi,0x40(%rsp)
  0x00007fd02510ef58: mov    %r8,0x38(%rsp)
  0x00007fd02510ef5d: mov    %r9,0x30(%rsp)
  0x00007fd02510ef62: mov    %r10,0x28(%rsp)
  0x00007fd02510ef67: mov    %r11,0x20(%rsp)
  0x00007fd02510ef6c: mov    %r12,0x18(%rsp)
  0x00007fd02510ef71: mov    %r13,0x10(%rsp)
  0x00007fd02510ef76: mov    %r14,0x8(%rsp)
  0x00007fd02510ef7b: mov    %r15,(%rsp)
  0x00007fd02510ef7f: movabs $0x7fd03acf9f36,%rdi  ;   {external_word}
  0x00007fd02510ef89: movabs $0x7fd02510ef29,%rsi  ;   {internal_word}
  0x00007fd02510ef93: mov    %rsp,%rdx
  0x00007fd02510ef96: and    $0xfffffffffffffff0,%rsp
  0x00007fd02510ef9a: callq  0x00007fd03aa25990  ;   {runtime_call}
  0x00007fd02510ef9f: hlt    
[Deopt Handler Code]
  0x00007fd02510efa0: movabs $0x7fd02510efa0,%r10  ;   {section_word}
  0x00007fd02510efaa: push   %r10
  0x00007fd02510efac: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd02510efb1: hlt    
  0x00007fd02510efb2: hlt    
  0x00007fd02510efb3: hlt    
  0x00007fd02510efb4: hlt    
  0x00007fd02510efb5: hlt    
  0x00007fd02510efb6: hlt    
  0x00007fd02510efb7: hlt    
<nmethod compile_id='13' compiler='C1' level='3' entry='0x00007fd02510e860' size='3456' address='0x00007fd02510e690' relocation_offset='296' insts_offset='464' stub_offset='2128' scopes_data_offset='2384' scopes_pcs_offset='2792' dependencies_offset='3416' nul_chk_table_offset='3424' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='263' iicount='263' stamp='0.095'/>
<writer thread='140532334335744'/>
[Loaded java.security.AllPermission from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.UnresolvedPermission from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.BasicPermissionCollection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140531745502976'/>
Decoding compiled method 0x00007fd02510f450:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fd02139f208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8:r8     = &apos;[C&apos;
  # parm3:    r9        = int
  #           [sp+0x70]  (sp of caller)
  0x00007fd02510f600: mov    0x8(%rsi),%r10d
  0x00007fd02510f604: shl    $0x3,%r10
  0x00007fd02510f608: cmp    %rax,%r10
  0x00007fd02510f60b: jne    0x00007fd025045e20  ;   {runtime_call}
  0x00007fd02510f611: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fd02510f61c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fd02510f620: mov    %eax,-0x14000(%rsp)
  0x00007fd02510f627: push   %rbp
  0x00007fd02510f628: sub    $0x60,%rsp
  0x00007fd02510f62c: mov    %rdx,%rdi
  0x00007fd02510f62f: movabs $0x7fd0215b9ba0,%rdx  ;   {metadata(method data for {method} {0x00007fd02139f208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510f639: mov    0xdc(%rdx),%ebx
  0x00007fd02510f63f: add    $0x8,%ebx
  0x00007fd02510f642: mov    %ebx,0xdc(%rdx)
  0x00007fd02510f648: movabs $0x7fd02139f208,%rdx  ;   {metadata({method} {0x00007fd02139f208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510f652: and    $0x1ff8,%ebx
  0x00007fd02510f658: cmp    $0x0,%ebx
  0x00007fd02510f65b: je     0x00007fd02510f886  ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 817)

  0x00007fd02510f661: cmp    $0x0,%edi
  0x00007fd02510f664: movabs $0x7fd0215b9ba0,%rdx  ;   {metadata(method data for {method} {0x00007fd02139f208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510f66e: movabs $0x108,%rbx
  0x00007fd02510f678: jge    0x00007fd02510f688
  0x00007fd02510f67e: movabs $0x118,%rbx
  0x00007fd02510f688: mov    (%rdx,%rbx,1),%rax
  0x00007fd02510f68c: lea    0x1(%rax),%rax
  0x00007fd02510f690: mov    %rax,(%rdx,%rbx,1)
  0x00007fd02510f694: jl     0x00007fd02510f846  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x00007fd02510f69a: mov    0xc(%rsi),%esi
  0x00007fd02510f69d: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x00007fd02510f6a1: mov    0xc(%rsi),%edx     ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x00007fd02510f89d
  0x00007fd02510f6a4: cmp    %edx,%ecx
  0x00007fd02510f6a6: movabs $0x7fd0215b9ba0,%rdx  ;   {metadata(method data for {method} {0x00007fd02139f208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510f6b0: movabs $0x138,%rbx
  0x00007fd02510f6ba: jle    0x00007fd02510f6ca
  0x00007fd02510f6c0: movabs $0x148,%rbx
  0x00007fd02510f6ca: mov    (%rdx,%rbx,1),%rax
  0x00007fd02510f6ce: lea    0x1(%rax),%rax
  0x00007fd02510f6d2: mov    %rax,(%rdx,%rbx,1)
  0x00007fd02510f6d6: jg     0x00007fd02510f806  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x00007fd02510f6dc: cmp    %ecx,%edi
  0x00007fd02510f6de: movabs $0x7fd0215b9ba0,%rdx  ;   {metadata(method data for {method} {0x00007fd02139f208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510f6e8: movabs $0x168,%rbx
  0x00007fd02510f6f2: jle    0x00007fd02510f702
  0x00007fd02510f6f8: movabs $0x178,%rbx
  0x00007fd02510f702: mov    (%rdx,%rbx,1),%rax
  0x00007fd02510f706: lea    0x1(%rax),%rax
  0x00007fd02510f70a: mov    %rax,(%rdx,%rbx,1)
  0x00007fd02510f70e: jg     0x00007fd02510f7bc  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x00007fd02510f714: movabs $0x7fd0215b9ba0,%rdx  ;   {metadata(method data for {method} {0x00007fd02139f208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510f71e: addq   $0x1,0x198(%rdx)
  0x00007fd02510f726: mov    %rcx,%rbx
  0x00007fd02510f729: sub    %edi,%ebx
  0x00007fd02510f72b: mov    %rdi,%rdx
  0x00007fd02510f72e: mov    %r8,%rcx
  0x00007fd02510f731: mov    %r9,%r8
  0x00007fd02510f734: mov    %rbx,%r9
  0x00007fd02510f737: test   %rcx,%rcx
  0x00007fd02510f73a: je     0x00007fd02510f8a2
  0x00007fd02510f740: test   %edx,%edx
  0x00007fd02510f742: jl     0x00007fd02510f8a2
  0x00007fd02510f748: test   %r8d,%r8d
  0x00007fd02510f74b: jl     0x00007fd02510f8a2
  0x00007fd02510f751: lea    (%rdx,%r9,1),%rdi
  0x00007fd02510f755: cmp    0xc(%rsi),%edi
  0x00007fd02510f758: ja     0x00007fd02510f8a2
  0x00007fd02510f75e: lea    (%r8,%r9,1),%rdi
  0x00007fd02510f762: cmp    0xc(%rcx),%edi
  0x00007fd02510f765: ja     0x00007fd02510f8a2
  0x00007fd02510f76b: test   %r9d,%r9d
  0x00007fd02510f76e: jl     0x00007fd02510f8a2
  0x00007fd02510f774: je     0x00007fd02510f7b0
  0x00007fd02510f77a: movslq %edx,%rdx
  0x00007fd02510f77d: movslq %r8d,%r8
  0x00007fd02510f780: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007fd02510f785: lea    0x10(%rcx,%r8,2),%rsi
  0x00007fd02510f78a: mov    %r9,%rdx
  0x00007fd02510f78d: test   $0xf,%esp
  0x00007fd02510f793: je     0x00007fd02510f7ab
  0x00007fd02510f799: sub    $0x8,%rsp
  0x00007fd02510f79d: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x00007fd02510f7a2: add    $0x8,%rsp
  0x00007fd02510f7a6: jmpq   0x00007fd02510f7b0
  0x00007fd02510f7ab: callq  Stub::jshort_arraycopy  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {runtime_call}
  0x00007fd02510f7b0: add    $0x60,%rsp
  0x00007fd02510f7b4: pop    %rbp
  0x00007fd02510f7b5: test   %eax,0x16cf1945(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd02510f7bb: retq                      ;*return
                                                ; - java.lang.String::getChars@61 (line 827)

  0x00007fd02510f7bc: nopl   0x0(%rax)
  0x00007fd02510f7c0: jmpq   0x00007fd02510f8c0  ;   {no_reloc}
  0x00007fd02510f7c5: add    %al,(%rax)
  0x00007fd02510f7c7: add    %al,(%rax)
  0x00007fd02510f7c9: add    %ch,%cl
  0x00007fd02510f7cb: sti    
  0x00007fd02510f7cc: add    %al,(%rax)
  0x00007fd02510f7ce: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@36 (line 824)

  0x00007fd02510f7d1: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00007fd02139f208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510f7d4: movabs 0x4800007fd0215b9b,%al
  0x00007fd02510f7dd: addl   $0x1,0x188(%rsi)
  0x00007fd02510f7e4: sub    %edi,%ecx
  0x00007fd02510f7e6: mov    %rcx,%rdx
  0x00007fd02510f7e9: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)

  0x00007fd02510f7ec: mov    %rax,0x38(%rsp)
  0x00007fd02510f7f1: nop
  0x00007fd02510f7f2: nop
  0x00007fd02510f7f3: nop
  0x00007fd02510f7f4: nop
  0x00007fd02510f7f5: nop
  0x00007fd02510f7f6: nop
  0x00007fd02510f7f7: callq  0x00007fd025046020  ; OopMap{[56]=Oop off=508}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x00007fd02510f7fc: mov    0x38(%rsp),%rax
  0x00007fd02510f801: jmpq   0x00007fd02510f94e  ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x00007fd02510f806: xchg   %ax,%ax
  0x00007fd02510f808: jmpq   0x00007fd02510f8e6  ;   {no_reloc}
  0x00007fd02510f80d: add    %al,(%rax)
  0x00007fd02510f80f: add    %al,(%rax)
  0x00007fd02510f811: add    %ch,%cl
  0x00007fd02510f813: flds   (%rax)
  0x00007fd02510f815: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@22 (line 821)

  0x00007fd02510f817: mov    %rax,%rdx
  0x00007fd02510f81a: movabs $0x7fd0215b9ba0,%rsi  ;   {metadata(method data for {method} {0x00007fd02139f208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510f824: addq   $0x1,0x158(%rsi)
  0x00007fd02510f82c: mov    %rcx,%rdx
  0x00007fd02510f82f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)

  0x00007fd02510f832: mov    %rax,0x40(%rsp)
  0x00007fd02510f837: callq  0x00007fd025046020  ; OopMap{[64]=Oop off=572}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x00007fd02510f83c: mov    0x40(%rsp),%rax
  0x00007fd02510f841: jmpq   0x00007fd02510f94e  ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x00007fd02510f846: xchg   %ax,%ax
  0x00007fd02510f848: jmpq   0x00007fd02510f90c  ;   {no_reloc}
  0x00007fd02510f84d: add    %al,(%rax)
  0x00007fd02510f84f: add    %al,(%rax)
  0x00007fd02510f851: add    %ch,%cl
  0x00007fd02510f853: mov    $0x48000000,%edi   ;*new  ; - java.lang.String::getChars@4 (line 818)

  0x00007fd02510f858: mov    %eax,%edx
  0x00007fd02510f85a: movabs $0x7fd0215b9ba0,%rsi  ;   {metadata(method data for {method} {0x00007fd02139f208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510f864: addq   $0x1,0x128(%rsi)
  0x00007fd02510f86c: mov    %rdi,%rdx
  0x00007fd02510f86f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)

  0x00007fd02510f872: mov    %rax,0x48(%rsp)
  0x00007fd02510f877: callq  0x00007fd025046020  ; OopMap{[72]=Oop off=636}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x00007fd02510f87c: mov    0x48(%rsp),%rax
  0x00007fd02510f881: jmpq   0x00007fd02510f94e
  0x00007fd02510f886: mov    %rdx,0x8(%rsp)
  0x00007fd02510f88b: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd02510f893: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop r8=Oop off=664}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x00007fd02510f898: jmpq   0x00007fd02510f661
  0x00007fd02510f89d: callq  0x00007fd0250f9a40  ; OopMap{r8=Oop rsi=Oop off=674}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x00007fd02510f8a2: nop
  0x00007fd02510f8a3: nop
  0x00007fd02510f8a4: nop
  0x00007fd02510f8a5: nop
  0x00007fd02510f8a6: nop
  0x00007fd02510f8a7: callq  0x00007fd025046420  ; OopMap{off=684}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x00007fd02510f8ac: jmpq   0x00007fd02510f7b0
  0x00007fd02510f8b1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fd02510f8bb: mov    $0xa050f00,%eax
  0x00007fd02510f8c0: callq  0x00007fd0250fcea0  ; OopMap{off=709}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x00007fd02510f8c5: jmpq   0x00007fd02510f7c0
  0x00007fd02510f8ca: mov    %rdx,%rdx
  0x00007fd02510f8cd: callq  0x00007fd0250f9ee0  ; OopMap{off=722}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x00007fd02510f8d2: jmpq   0x00007fd02510f7cf
  0x00007fd02510f8d7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fd02510f8e1: mov    $0xa050f00,%eax
  0x00007fd02510f8e6: callq  0x00007fd0250fcea0  ; OopMap{off=747}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x00007fd02510f8eb: jmpq   0x00007fd02510f808
  0x00007fd02510f8f0: mov    %rdx,%rdx
  0x00007fd02510f8f3: callq  0x00007fd0250f9ee0  ; OopMap{off=760}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x00007fd02510f8f8: jmpq   0x00007fd02510f817
  0x00007fd02510f8fd: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fd02510f907: mov    $0xa050f00,%eax
  0x00007fd02510f90c: callq  0x00007fd0250fcea0  ; OopMap{off=785}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x00007fd02510f911: jmpq   0x00007fd02510f848
  0x00007fd02510f916: mov    %rdx,%rdx
  0x00007fd02510f919: callq  0x00007fd0250f9ee0  ; OopMap{off=798}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x00007fd02510f91e: jmpq   0x00007fd02510f857
  0x00007fd02510f923: nop
  0x00007fd02510f924: nop
  0x00007fd02510f925: mov    0x2a8(%r15),%rax
  0x00007fd02510f92c: movabs $0x0,%r10
  0x00007fd02510f936: mov    %r10,0x2a8(%r15)
  0x00007fd02510f93d: movabs $0x0,%r10
  0x00007fd02510f947: mov    %r10,0x2b0(%r15)
  0x00007fd02510f94e: add    $0x60,%rsp
  0x00007fd02510f952: pop    %rbp
  0x00007fd02510f953: jmpq   0x00007fd02506c4a0  ;   {runtime_call}
  0x00007fd02510f958: hlt    
  0x00007fd02510f959: hlt    
  0x00007fd02510f95a: hlt    
  0x00007fd02510f95b: hlt    
  0x00007fd02510f95c: hlt    
  0x00007fd02510f95d: hlt    
  0x00007fd02510f95e: hlt    
  0x00007fd02510f95f: hlt    
[Stub Code]
  0x00007fd02510f960: nop                       ;   {no_reloc}
  0x00007fd02510f961: nop
  0x00007fd02510f962: nop
  0x00007fd02510f963: nop
  0x00007fd02510f964: nop
  0x00007fd02510f965: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd02510f96f: jmpq   0x00007fd02510f96f  ;   {runtime_call}
  0x00007fd02510f974: nop
  0x00007fd02510f975: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd02510f97f: jmpq   0x00007fd02510f97f  ;   {runtime_call}
  0x00007fd02510f984: nop
  0x00007fd02510f985: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd02510f98f: jmpq   0x00007fd02510f98f  ;   {runtime_call}
  0x00007fd02510f994: nop
  0x00007fd02510f995: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd02510f99f: jmpq   0x00007fd02510f99f  ;   {runtime_call}
[Exception Handler]
  0x00007fd02510f9a4: callq  0x00007fd0250fb820  ;   {runtime_call}
  0x00007fd02510f9a9: mov    %rsp,-0x28(%rsp)
  0x00007fd02510f9ae: sub    $0x80,%rsp
  0x00007fd02510f9b5: mov    %rax,0x78(%rsp)
  0x00007fd02510f9ba: mov    %rcx,0x70(%rsp)
  0x00007fd02510f9bf: mov    %rdx,0x68(%rsp)
  0x00007fd02510f9c4: mov    %rbx,0x60(%rsp)
  0x00007fd02510f9c9: mov    %rbp,0x50(%rsp)
  0x00007fd02510f9ce: mov    %rsi,0x48(%rsp)
  0x00007fd02510f9d3: mov    %rdi,0x40(%rsp)
  0x00007fd02510f9d8: mov    %r8,0x38(%rsp)
  0x00007fd02510f9dd: mov    %r9,0x30(%rsp)
  0x00007fd02510f9e2: mov    %r10,0x28(%rsp)
  0x00007fd02510f9e7: mov    %r11,0x20(%rsp)
  0x00007fd02510f9ec: mov    %r12,0x18(%rsp)
  0x00007fd02510f9f1: mov    %r13,0x10(%rsp)
  0x00007fd02510f9f6: mov    %r14,0x8(%rsp)
  0x00007fd02510f9fb: mov    %r15,(%rsp)
  0x00007fd02510f9ff: movabs $0x7fd03acf9f36,%rdi  ;   {external_word}
  0x00007fd02510fa09: movabs $0x7fd02510f9a9,%rsi  ;   {internal_word}
  0x00007fd02510fa13: mov    %rsp,%rdx
  0x00007fd02510fa16: and    $0xfffffffffffffff0,%rsp
  0x00007fd02510fa1a: callq  0x00007fd03aa25990  ;   {runtime_call}
  0x00007fd02510fa1f: hlt    
[Deopt Handler Code]
  0x00007fd02510fa20: movabs $0x7fd02510fa20,%r10  ;   {section_word}
  0x00007fd02510fa2a: push   %r10
  0x00007fd02510fa2c: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd02510fa31: hlt    
  0x00007fd02510fa32: hlt    
  0x00007fd02510fa33: hlt    
  0x00007fd02510fa34: hlt    
  0x00007fd02510fa35: hlt    
  0x00007fd02510fa36: hlt    
  0x00007fd02510fa37: hlt    
<nmethod compile_id='12' compiler='C1' level='3' entry='0x00007fd02510f600' size='2256' address='0x00007fd02510f450' relocation_offset='296' insts_offset='432' stub_offset='1296' scopes_data_offset='1520' scopes_pcs_offset='1752' dependencies_offset='2232' nul_chk_table_offset='2240' method='java/lang/String getChars (II[CI)V' bytes='62' count='272' iicount='272' stamp='0.097'/>
<writer thread='140532334335744'/>
[Loaded com.github.marschall.charsequences.ParseUuidCompilation from file:/home/marschall/git/charsequences/target/test-classes/]
[Loaded sun.launcher.LauncherHelper$FXHelper from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Class$MethodArray from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Void from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded com.github.marschall.charsequences.CharSequences from file:/home/marschall/git/charsequences/target/classes/]
[Loaded java.lang.AssertionError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<task_queued compile_id='14' method='java/lang/String indexOf (I)I' bytes='7' count='256' iicount='256' level='3' stamp='0.098' comment='tiered' hot_count='256'/>
[Loaded java.lang.NumberFormatException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ForwardingNode from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.IndexOutOfBoundsException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140531745502976'/>
Decoding compiled method 0x00007fd02510fd50:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fd0213a0098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fd02510fec0: mov    0x8(%rsi),%r10d
  0x00007fd02510fec4: 
<writer thread='140532334335744'/>
[Loaded java.util.UUID from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140531745502976'/>
shl    $0x3,%r10
  0x00007fd02510fec8: cmp    %rax,%r10
  0x00007fd02510fecb: jne    0x00007fd025045e20  ;   {runtime_call}
  0x00007fd02510fed1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fd02510fedc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fd02510fee0: mov    %eax,-0x14000(%rsp)
  0x00007fd02510fee7: push   %rbp
  0x00007fd02510fee8: sub    $0x30,%rsp
  0x00007fd02510feec: movabs $0x7fd0215c8238,%rcx  ;   {metadata(method data for {method} {0x00007fd0213a0098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510fef6: mov    0xdc(%rcx),%edi
  0x00007fd02510fefc: add    $0x8,%edi
  0x00007fd02510feff: mov    %edi,0xdc(%rcx)
  0x00007fd02510ff05: movabs $0x7fd0213a0098,%rcx  ;   {metadata({method} {0x00007fd0213a0098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510ff0f: and    $0x1ff8,%edi
  0x00007fd02510ff15: cmp    $0x0,%edi
  0x00007fd02510ff18: je     0x00007fd02510ffc8  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x00007fd02510ff1e: mov    %rsi,%rcx
  0x00007fd02510ff21: movabs $0x7fd0215c8238,%rdi  ;   {metadata(method data for {method} {0x00007fd0213a0098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007fd02510ff2b: mov    0x8(%rcx),%ecx
  0x00007fd02510ff2e: shl    $0x3,%rcx
  0x00007fd02510ff32: cmp    0x110(%rdi),%rcx
  0x00007fd02510ff39: jne    0x00007fd02510ff48
  0x00007fd02510ff3b: addq   $0x1,0x118(%rdi)
  0x00007fd02510ff43: jmpq   0x00007fd02510ffae
  0x00007fd02510ff48: cmp    0x120(%rdi),%rcx
  0x00007fd02510ff4f: jne    0x00007fd02510ff5e
  0x00007fd02510ff51: addq   $0x1,0x128(%rdi)
  0x00007fd02510ff59: jmpq   0x00007fd02510ffae
  0x00007fd02510ff5e: cmpq   $0x0,0x110(%rdi)
  0x00007fd02510ff69: jne    0x00007fd02510ff82
  0x00007fd02510ff6b: mov    %rcx,0x110(%rdi)
  0x00007fd02510ff72: movq   $0x1,0x118(%rdi)
  0x00007fd02510ff7d: jmpq   0x00007fd02510ffae
  0x00007fd02510ff82: cmpq   $0x0,0x120(%rdi)
  0x00007fd02510ff8d: jne    0x00007fd02510ffa6
  0x00007fd02510ff8f: mov    %rcx,0x120(%rdi)
  0x00007fd02510ff96: movq   $0x1,0x128(%rdi)
  0x00007fd02510ffa1: jmpq   0x00007fd02510ffae
  0x00007fd02510ffa6: addq   $0x1,0x108(%rdi)
  0x00007fd02510ffae: mov    $0x0,%ecx          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x00007fd02510ffb3: nop
  0x00007fd02510ffb4: nop
  0x00007fd02510ffb5: nop
  0x00007fd02510ffb6: nop
  0x00007fd02510ffb7: callq  0x00007fd025046020  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x00007fd02510ffbc: add    $0x30,%rsp
  0x00007fd02510ffc0: pop    %rbp
  0x00007fd02510ffc1: test   %eax,0x16cf1139(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd02510ffc7: retq   
  0x00007fd02510ffc8: mov    %rcx,0x8(%rsp)
  0x00007fd02510ffcd: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd02510ffd5: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x00007fd02510ffda: jmpq   0x00007fd02510ff1e
  0x00007fd02510ffdf: nop
  0x00007fd02510ffe0: nop
  0x00007fd02510ffe1: mov    0x2a8(%r15),%rax
  0x00007fd02510ffe8: movabs $0x0,%r10
  0x00007fd02510fff2: mov    %r10,0x2a8(%r15)
  0x00007fd02510fff9: movabs $0x0,%r10
  0x00007fd025110003: mov    %r10,0x2b0(%r15)
  0x00007fd02511000a: add    $0x30,%rsp
  0x00007fd02511000e: pop    %rbp
  0x00007fd02511000f: jmpq   0x00007fd02506c4a0  ;   {runtime_call}
  0x00007fd025110014: hlt    
  0x00007fd025110015: hlt    
  0x00007fd025110016: hlt    
  0x00007fd025110017: hlt    
  0x00007fd025110018: hlt    
  0x00007fd025110019: hlt    
  0x00007fd02511001a: hlt    
  0x00007fd02511001b: hlt    
  0x00007fd02511001c: hlt    
  0x00007fd02511001d: hlt    
  0x00007fd02511001e: hlt    
  0x00007fd02511001f: hlt    
[Stub Code]
  0x00007fd025110020: nop                       ;   {no_reloc}
  0x00007fd025110021: nop
  0x00007fd025110022: nop
  0x00007fd025110023: nop
  0x00007fd025110024: nop
  0x00007fd025110025: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd02511002f: jmpq   0x00007fd02511002f  ;   {runtime_call}
[Exception Handler]
  0x00007fd025110034: callq  0x00007fd0250fb820  ;   {runtime_call}
  0x00007fd025110039: mov    %rsp,-0x28(%rsp)
  0x00007fd02511003e: sub    $0x80,%rsp
  0x00007fd025110045: mov    %rax,0x78(%rsp)
  0x00007fd02511004a: mov    %rcx,0x70(%rsp)
  0x00007fd02511004f: mov    %rdx,0x68(%rsp)
  0x00007fd025110054: mov    %rbx,0x60(%rsp)
  0x00007fd025110059: mov    %rbp,0x50(%rsp)
  0x00007fd02511005e: mov    %rsi,0x48(%rsp)
  0x00007fd025110063: mov    %rdi,0x40(%rsp)
  0x00007fd025110068: mov    %r8,0x38(%rsp)
  0x00007fd02511006d: mov    %r9,0x30(%rsp)
  0x00007fd025110072: mov    %r10,0x28(%rsp)
  0x00007fd025110077: mov    %r11,0x20(%rsp)
  0x00007fd02511007c: mov    %r12,0x18(%rsp)
  0x00007fd025110081: mov    %r13,0x10(%rsp)
  0x00007fd025110086: mov    %r14,0x8(%rsp)
  0x00007fd02511008b: mov    %r15,(%rsp)
  0x00007fd02511008f: movabs $0x7fd03acf9f36,%rdi  ;   {external_word}
  0x00007fd025110099: movabs $0x7fd025110039,%rsi  ;   {internal_word}
  0x00007fd0251100a3: mov    %rsp,%rdx
  0x00007fd0251100a6: and    $0xfffffffffffffff0,%rsp
  0x00007fd0251100aa: callq  0x00007fd03aa25990  ;   {runtime_call}
  0x00007fd0251100af: hlt    
[Deopt Handler Code]
  0x00007fd0251100b0: movabs $0x7fd0251100b0,%r10  ;   {section_word}
  0x00007fd0251100ba: push   %r10
  0x00007fd0251100bc: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd0251100c1: hlt    
  0x00007fd0251100c2: hlt    
  0x00007fd0251100c3: hlt    
  0x00007fd0251100c4: hlt    
  0x00007fd0251100c5: hlt    
  0x00007fd0251100c6: hlt    
  0x00007fd0251100c7: hlt    
<nmethod compile_id='14' compiler='C1' level='3' entry='0x00007fd02510fec0' size='1040' address='0x00007fd02510fd50' relocation_offset='296' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String indexOf (I)I' bytes='7' count='266' iicount='266' stamp='0.099'/>
<writer thread='140532334335744'/>
<task_queued compile_id='15' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='59' count='256' iicount='256' level='3' stamp='0.099' comment='tiered' hot_count='256'/>
<task_queued compile_id='16' method='java/lang/String charAt (I)C' bytes='29' count='5632' iicount='5632' stamp='0.100' comment='tiered' hot_count='5632'/>
<writer thread='140531745502976'/>
Decoding compiled method 0x00007fd025110190:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fd02179d460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;
  # parm0:    rsi       = char
  #           [sp+0x40]  (sp of caller)
  0x00007fd025110320: mov    %eax,-0x14000(%rsp)
  0x00007fd025110327: push   %rbp
  0x00007fd025110328: sub    $0x30,%rsp
  0x00007fd02511032c: movabs $0x7fd02179d8d8,%rax  ;   {metadata(method data for {method} {0x00007fd02179d460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025110336: mov    0xdc(%rax),%edx
  0x00007fd02511033c: add    $0x8,%edx
  0x00007fd02511033f: mov    %edx,0xdc(%rax)
  0x00007fd025110345: movabs $0x7fd02179d460,%rax  ;   {metadata({method} {0x00007fd02179d460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd02511034f: and    $0x1ff8,%edx
  0x00007fd025110355: cmp    $0x0,%edx
  0x00007fd025110358: je     0x00007fd025110566  ;*iload_0
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@0 (line 496)

  0x00007fd02511035e: cmp    $0x30,%esi
  0x00007fd025110361: movabs $0x7fd02179d8d8,%rax  ;   {metadata(method data for {method} {0x00007fd02179d460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd02511036b: movabs $0x108,%rdx
  0x00007fd025110375: jl     0x00007fd025110385
  0x00007fd02511037b: movabs $0x118,%rdx
  0x00007fd025110385: mov    (%rax,%rdx,1),%rdi
  0x00007fd025110389: lea    0x1(%rdi),%rdi
  0x00007fd02511038d: mov    %rdi,(%rax,%rdx,1)
  0x00007fd025110391: jl     0x00007fd0251103d0  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)

  0x00007fd025110397: cmp    $0x39,%esi
  0x00007fd02511039a: movabs $0x7fd02179d8d8,%rax  ;   {metadata(method data for {method} {0x00007fd02179d460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd0251103a4: movabs $0x128,%rdx
  0x00007fd0251103ae: jg     0x00007fd0251103be
  0x00007fd0251103b4: movabs $0x138,%rdx
  0x00007fd0251103be: mov    (%rax,%rdx,1),%rdi
  0x00007fd0251103c2: lea    0x1(%rdi),%rdi
  0x00007fd0251103c6: mov    %rdi,(%rax,%rdx,1)
  0x00007fd0251103ca: jle    0x00007fd0251104d8  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)

  0x00007fd0251103d0: cmp    $0x61,%esi
  0x00007fd0251103d3: movabs $0x7fd02179d8d8,%rax  ;   {metadata(method data for {method} {0x00007fd02179d460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd0251103dd: movabs $0x148,%rdx
  0x00007fd0251103e7: jl     0x00007fd0251103f7
  0x00007fd0251103ed: movabs $0x158,%rdx
  0x00007fd0251103f7: mov    (%rax,%rdx,1),%rdi
  0x00007fd0251103fb: lea    0x1(%rdi),%rdi
  0x00007fd0251103ff: mov    %rdi,(%rax,%rdx,1)
  0x00007fd025110403: jl     0x00007fd025110442  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)

  0x00007fd025110409: cmp    $0x66,%esi
  0x00007fd02511040c: movabs $0x7fd02179d8d8,%rax  ;   {metadata(method data for {method} {0x00007fd02179d460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025110416: movabs $0x168,%rdx
  0x00007fd025110420: jg     0x00007fd025110430
  0x00007fd025110426: movabs $0x178,%rdx
  0x00007fd025110430: mov    (%rax,%rdx,1),%rdi
  0x00007fd025110434: lea    0x1(%rdi),%rdi
  0x00007fd025110438: mov    %rdi,(%rax,%rdx,1)
  0x00007fd02511043c: jle    0x00007fd0251104c6  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)

  0x00007fd025110442: cmp    $0x41,%esi
  0x00007fd025110445: movabs $0x7fd02179d8d8,%rax  ;   {metadata(method data for {method} {0x00007fd02179d460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd02511044f: movabs $0x188,%rdx
  0x00007fd025110459: jl     0x00007fd025110469
  0x00007fd02511045f: movabs $0x198,%rdx
  0x00007fd025110469: mov    (%rax,%rdx,1),%rdi
  0x00007fd02511046d: lea    0x1(%rdi),%rdi
  0x00007fd025110471: mov    %rdi,(%rax,%rdx,1)
  0x00007fd025110475: jl     0x00007fd0251104ea  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@37 (line 505)

  0x00007fd02511047b: cmp    $0x46,%esi
  0x00007fd02511047e: movabs $0x7fd02179d8d8,%rax  ;   {metadata(method data for {method} {0x00007fd02179d460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025110488: movabs $0x1a8,%rdx
  0x00007fd025110492: jg     0x00007fd0251104a2
  0x00007fd025110498: movabs $0x1b8,%rdx
  0x00007fd0251104a2: mov    (%rax,%rdx,1),%rdi
  0x00007fd0251104a6: lea    0x1(%rdi),%rdi
  0x00007fd0251104aa: mov    %rdi,(%rax,%rdx,1)
  0x00007fd0251104ae: jg     0x00007fd0251104ea  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@43 (line 505)

  0x00007fd0251104b4: sub    $0x37,%esi
  0x00007fd0251104b7: mov    %rsi,%rax
  0x00007fd0251104ba: add    $0x30,%rsp
  0x00007fd0251104be: pop    %rbp
  0x00007fd0251104bf: test   %eax,0x16cf0c3b(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd0251104c5: retq                      ;*ireturn
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@50 (line 509)

  0x00007fd0251104c6: sub    $0x57,%esi
  0x00007fd0251104c9: mov    %rsi,%rax
  0x00007fd0251104cc: add    $0x30,%rsp
  0x00007fd0251104d0: pop    %rbp
  0x00007fd0251104d1: test   %eax,0x16cf0c29(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd0251104d7: retq                      ;*ireturn
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@33 (line 503)

  0x00007fd0251104d8: sub    $0x30,%esi
  0x00007fd0251104db: mov    %rsi,%rax
  0x00007fd0251104de: add    $0x30,%rsp
  0x00007fd0251104e2: pop    %rbp
  0x00007fd0251104e3: test   %eax,0x16cf0c17(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd0251104e9: retq                      ;*ireturn
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@16 (line 497)

  0x00007fd0251104ea: nopw   0x0(%rax,%rax,1)
  0x00007fd0251104f0: jmpq   0x00007fd02511058c  ;   {no_reloc}
  0x00007fd0251104f5: add    %al,(%rax)
  0x00007fd0251104f7: add    %al,(%rax)
  0x00007fd0251104f9: add    %cl,-0x75(%rcx)
  0x00007fd0251104fc: rex.RXB (bad) 
  0x00007fd0251104fe: lea    0x20(%rax),%rdi
  0x00007fd025110502: cmp    0x70(%r15),%rdi
  0x00007fd025110506: ja     0x00007fd025110596
  0x00007fd02511050c: mov    %rdi,0x60(%r15)
  0x00007fd025110510: mov    0xa8(%rdx),%rcx
  0x00007fd025110517: mov    %rcx,(%rax)
  0x00007fd02511051a: mov    %rdx,%rcx
  0x00007fd02511051d: shr    $0x3,%rcx
  0x00007fd025110521: mov    %ecx,0x8(%rax)
  0x00007fd025110524: xor    %rcx,%rcx
  0x00007fd025110527: mov    %ecx,0xc(%rax)
  0x00007fd02511052a: xor    %rcx,%rcx
  0x00007fd02511052d: mov    %rcx,0x10(%rax)
  0x00007fd025110531: mov    %rcx,0x18(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::hexDigit@51 (line 511)

  0x00007fd025110535: mov    %rax,%rsi
  0x00007fd025110538: movabs $0x7fd02179d8d8,%rdi  ;   {metadata(method data for {method} {0x00007fd02179d460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025110542: addq   $0x1,0x1c8(%rdi)
  0x00007fd02511054a: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@55 (line 511)

  0x00007fd02511054d: mov    %rax,0x20(%rsp)
  0x00007fd025110552: nop
  0x00007fd025110553: nop
  0x00007fd025110554: nop
  0x00007fd025110555: nop
  0x00007fd025110556: nop
  0x00007fd025110557: callq  0x00007fd025046020  ; OopMap{[32]=Oop off=572}
                                                ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@55 (line 511)
                                                ;   {optimized virtual_call}
  0x00007fd02511055c: mov    0x20(%rsp),%rax
  0x00007fd025110561: jmpq   0x00007fd0251105cb
  0x00007fd025110566: mov    %rax,0x8(%rsp)
  0x00007fd02511056b: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd025110573: callq  0x00007fd0250fdea0  ; OopMap{off=600}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@-1 (line 496)
                                                ;   {runtime_call}
  0x00007fd025110578: jmpq   0x00007fd02511035e
  0x00007fd02511057d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fd025110587: mov    $0xa050f00,%eax
  0x00007fd02511058c: callq  0x00007fd0250fcea0  ; OopMap{off=625}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::hexDigit@51 (line 511)
                                                ;   {runtime_call}
  0x00007fd025110591: jmpq   0x00007fd0251104f0
  0x00007fd025110596: mov    %rdx,%rdx
  0x00007fd025110599: callq  0x00007fd0250fa1a0  ; OopMap{off=638}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::hexDigit@51 (line 511)
                                                ;   {runtime_call}
  0x00007fd02511059e: jmp    0x00007fd025110535
  0x00007fd0251105a0: nop
  0x00007fd0251105a1: nop
  0x00007fd0251105a2: mov    0x2a8(%r15),%rax
  0x00007fd0251105a9: movabs $0x0,%r10
  0x00007fd0251105b3: mov    %r10,0x2a8(%r15)
  0x00007fd0251105ba: movabs $0x0,%r10
  0x00007fd0251105c4: mov    %r10,0x2b0(%r15)
  0x00007fd0251105cb: add    $0x30,%rsp
  0x00007fd0251105cf: pop    %rbp
  0x00007fd0251105d0: jmpq   0x00007fd02506c4a0  ;   {runtime_call}
  0x00007fd0251105d5: hlt    
  0x00007fd0251105d6: hlt    
  0x00007fd0251105d7: hlt    
  0x00007fd0251105d8: hlt    
  0x00007fd0251105d9: hlt    
  0x00007fd0251105da: hlt    
  0x00007fd0251105db: hlt    
  0x00007fd0251105dc: hlt    
  0x00007fd0251105dd: hlt    
  0x00007fd0251105de: hlt    
  0x00007fd0251105df: hlt    
[Stub Code]
  0x00007fd0251105e0: nop                       ;   {no_reloc}
  0x00007fd0251105e1: nop
  0x00007fd0251105e2: nop
  0x00007fd0251105e3: nop
  0x00007fd0251105e4: nop
  0x00007fd0251105e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd0251105ef: jmpq   0x00007fd0251105ef  ;   {runtime_call}
[Exception Handler]
  0x00007fd0251105f4: callq  0x00007fd0250fb820  ;   {runtime_call}
  0x00007fd0251105f9: mov    %rsp,-0x28(%rsp)
  0x00007fd0251105fe: sub    $0x80,%rsp
  0x00007fd025110605: mov    %rax,0x78(%rsp)
  0x00007fd02511060a: mov    %rcx,0x70(%rsp)
  0x00007fd02511060f: mov    %rdx,0x68(%rsp)
  0x00007fd025110614: mov    %rbx,0x60(%rsp)
  0x00007fd025110619: mov    %rbp,0x50(%rsp)
  0x00007fd02511061e: mov    %rsi,0x48(%rsp)
  0x00007fd025110623: mov    %rdi,0x40(%rsp)
  0x00007fd025110628: mov    %r8,0x38(%rsp)
  0x00007fd02511062d: mov    %r9,0x30(%rsp)
  0x00007fd025110632: mov    %r10,0x28(%rsp)
  0x00007fd025110637: mov    %r11,0x20(%rsp)
  0x00007fd02511063c: mov    %r12,0x18(%rsp)
  0x00007fd025110641: mov    %r13,0x10(%rsp)
  0x00007fd025110646: mov    %r14,0x8(%rsp)
  0x00007fd02511064b: mov    %r15,(%rsp)
  0x00007fd02511064f: movabs $0x7fd03acf9f36,%rdi  ;   {external_word}
  0x00007fd025110659: movabs $0x7fd0251105f9,%rsi  ;   {internal_word}
  0x00007fd025110663: mov    %rsp,%rdx
  0x00007fd025110666: and    $0xfffffffffffffff0,%rsp
  0x00007fd02511066a: callq  0x00007fd03aa25990  ;   {runtime_call}
  0x00007fd02511066f: hlt    
[Deopt Handler Code]
  0x00007fd025110670: movabs $0x7fd025110670,%r10  ;   {section_word}
  0x00007fd02511067a: push   %r10
  0x00007fd02511067c: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd025110681: hlt    
  0x00007fd025110682: hlt    
  0x00007fd025110683: hlt    
  0x00007fd025110684: hlt    
  0x00007fd025110685: hlt    
  0x00007fd025110686: hlt    
  0x00007fd025110687: hlt    
<nmethod compile_id='15' compiler='C1' level='3' entry='0x00007fd025110320' size='1688' address='0x00007fd025110190' relocation_offset='296' insts_offset='400' stub_offset='1104' scopes_data_offset='1288' scopes_pcs_offset='1392' dependencies_offset='1680' oops_offset='1272' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='59' count='4064' iicount='4064' stamp='0.152'/>
<writer thread='140532334335744'/>
<task_queued compile_id='17' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='276' count='128' backedge_count='4064' iicount='128' level='3' stamp='0.152' comment='tiered' hot_count='128'/>
<task_queued compile_id='18' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='59' count='5632' iicount='5632' stamp='0.152' comment='tiered' hot_count='5632'/>
<task_queued compile_id='19' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='256' iicount='256' level='3' stamp='0.152' comment='tiered' hot_count='256'/>
Decoding compiled method 0x00007fd025110850:
Code:
[Entry Point]
  # {method} {0x00007fd0213b49c8} &apos;identityHashCode&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fd0251109c0: mov    0x8(%rsi),%r10d
  0x00007fd0251109c4: shl    $0x3,%r10
  0x00007fd0251109c8: cmp    %r10,%rax
  0x00007fd0251109cb: je     0x00007fd0251109d8
  0x00007fd0251109d1: jmpq   0x00007fd025045e20  ;   {runtime_call}
  0x00007fd0251109d6: xchg   %ax,%ax
[Verified Entry Point]
  0x00007fd0251109d8: mov    %eax,-0x14000(%rsp)
  0x00007fd0251109df: push   %rbp
  0x00007fd0251109e0: mov    %rsp,%rbp
  0x00007fd0251109e3: sub    $0x40,%rsp
  0x00007fd0251109e7: mov    %rsi,(%rsp)
  0x00007fd0251109eb: cmp    $0x0,%rsi
  0x00007fd0251109ef: lea    (%rsp),%rdx
  0x00007fd0251109f3: cmove  (%rsp),%rdx
  0x00007fd0251109f8: movabs $0x670b80c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007fd025110a02: mov    %r14,0x30(%rsp)
  0x00007fd025110a07: lea    0x30(%rsp),%r14
  0x00007fd025110a0c: mov    %r14,%rsi          ; OopMap{[0]=Oop [48]=Oop off=79}
  0x00007fd025110a0f: movabs $0x7fd025110a0f,%r10  ;   {section_word}
  0x00007fd025110a19: mov    %r10,0x1e0(%r15)
  0x00007fd025110a20: mov    %rsp,0x1d8(%r15)
  0x00007fd025110a27: cmpb   $0x0,0x16094774(%rip)        # 0x00007fd03b1a51a2
                                                ;   {external_word}
  0x00007fd025110a2e: je     0x00007fd025110a68
  0x00007fd025110a34: push   %rsi
  0x00007fd025110a35: push   %rdx
  0x00007fd025110a36: movabs $0x7fd0213b49c8,%rsi  ;   {metadata({method} {0x00007fd0213b49c8} &apos;identityHashCode&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/lang/System&apos;)}
  0x00007fd025110a40: mov    %r15,%rdi
  0x00007fd025110a43: test   $0xf,%esp
  0x00007fd025110a49: je     0x00007fd025110a61
  0x00007fd025110a4f: sub    $0x8,%rsp
  0x00007fd025110a53: callq  0x00007fd03abb0390  ;   {runtime_call}
  0x00007fd025110a58: add    $0x8,%rsp
  0x00007fd025110a5c: jmpq   0x00007fd025110a66
  0x00007fd025110a61: callq  0x00007fd03abb0390  ;   {runtime_call}
  0x00007fd025110a66: pop    %rdx
  0x00007fd025110a67: pop    %rsi
  0x00007fd025110a68: lea    0x1f8(%r15),%rdi
  0x00007fd025110a6f: movl   $0x4,0x270(%r15)
  0x00007fd025110a7a: callq  0x00007fd0398b1cc0  ;   {runtime_call}
  0x00007fd025110a7f: vzeroupper 
  0x00007fd025110a82: movl   $0x5,0x270(%r15)
  0x00007fd025110a8d: mov    %r15d,%ecx
  0x00007fd025110a90: shr    $0x4,%ecx
  0x00007fd025110a93: and    $0xffc,%ecx
  0x00007fd025110a99: movabs $0x7fd03be00000,%r10  ;   {external_word}
  0x00007fd025110aa3: mov    %ecx,(%r10,%rcx,1)
  0x00007fd025110aa7: cmpl   $0x0,0x160a406f(%rip)        # 0x00007fd03b1b4b20
                                                ;   {external_word}
  0x00007fd025110ab1: jne    0x00007fd025110ac5
  0x00007fd025110ab7: cmpl   $0x0,0x30(%r15)
  0x00007fd025110abf: je     0x00007fd025110ae6
  0x00007fd025110ac5: mov    %rax,-0x8(%rbp)
  0x00007fd025110ac9: mov    %r15,%rdi
  0x00007fd025110acc: mov    %rsp,%r12
  0x00007fd025110acf: sub    $0x0,%rsp
  0x00007fd025110ad3: and    $0xfffffffffffffff0,%rsp
  0x00007fd025110ad7: callq  0x00007fd03ac60960  ;   {runtime_call}
  0x00007fd025110adc: mov    %r12,%rsp
  0x00007fd025110adf: xor    %r12,%r12
  0x00007fd025110ae2: mov    -0x8(%rbp),%rax
  0x00007fd025110ae6: movl   $0x8,0x270(%r15)
  0x00007fd025110af1: cmpl   $0x1,0x29c(%r15)
  0x00007fd025110afc: je     0x00007fd025110b8c
  0x00007fd025110b02: cmpb   $0x0,0x16094699(%rip)        # 0x00007fd03b1a51a2
                                                ;   {external_word}
  0x00007fd025110b09: je     0x00007fd025110b47
  0x00007fd025110b0f: mov    %rax,-0x8(%rbp)
  0x00007fd025110b13: movabs $0x7fd0213b49c8,%rsi  ;   {metadata({method} {0x00007fd0213b49c8} &apos;identityHashCode&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/lang/System&apos;)}
  0x00007fd025110b1d: mov    %r15,%rdi
  0x00007fd025110b20: test   $0xf,%esp
  0x00007fd025110b26: je     0x00007fd025110b3e
  0x00007fd025110b2c: sub    $0x8,%rsp
  0x00007fd025110b30: callq  0x00007fd03abb0380  ;   {runtime_call}
  0x00007fd025110b35: add    $0x8,%rsp
  0x00007fd025110b39: jmpq   0x00007fd025110b43
  0x00007fd025110b3e: callq  0x00007fd03abb0380  ;   {runtime_call}
  0x00007fd025110b43: mov    -0x8(%rbp),%rax
  0x00007fd025110b47: movabs $0x0,%r10
  0x00007fd025110b51: mov    %r10,0x1d8(%r15)
  0x00007fd025110b58: movabs $0x0,%r10
  0x00007fd025110b62: mov    %r10,0x1e0(%r15)
  0x00007fd025110b69: mov    0x38(%r15),%rcx
  0x00007fd025110b6d: movl   $0x0,0x100(%rcx)
  0x00007fd025110b77: leaveq 
  0x00007fd025110b78: cmpq   $0x0,0x8(%r15)
  0x00007fd025110b80: jne    0x00007fd025110b87
  0x00007fd025110b86: retq   
  0x00007fd025110b87: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00007fd025110b8c: mov    %rax,-0x8(%rbp)
  0x00007fd025110b90: mov    %rsp,%r12
  0x00007fd025110b93: sub    $0x0,%rsp
  0x00007fd025110b97: and    $0xfffffffffffffff0,%rsp
  0x00007fd025110b9b: callq  0x00007fd03abb0360  ;   {runtime_call}
  0x00007fd025110ba0: mov    %r12,%rsp
  0x00007fd025110ba3: xor    %r12,%r12
  0x00007fd025110ba6: mov    -0x8(%rbp),%rax
  0x00007fd025110baa: jmpq   0x00007fd025110b02
  0x00007fd025110baf: hlt    
<nmethod compile_id='20' compile_kind='c2n' level='0' entry='0x00007fd0251109c0' size='864' address='0x00007fd025110850' relocation_offset='296' consts_offset='864' insts_offset='368' method='java/lang/System identityHashCode (Ljava/lang/Object;)I' bytes='0' count='256' iicount='256' stamp='0.153'/>
<writer thread='140531745502976'/>
Decoding compiled method 0x00007fd0251135d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/CharSequence&apos;
  #           [sp+0xf0]  (sp of caller)
  0x00007fd025113920: mov    %eax,-0x14000(%rsp)
  0x00007fd025113927: push   %rbp
  0x00007fd025113928: sub    $0xe0,%rsp
  0x00007fd02511392f: mov    %rsi,0x68(%rsp)
  0x00007fd025113934: movabs $0x7fd02179e028,%rdi  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd02511393e: mov    0xdc(%rdi),%ebx
  0x00007fd025113944: add    $0x8,%ebx
  0x00007fd025113947: mov    %ebx,0xdc(%rdi)
  0x00007fd02511394d: movabs $0x7fd02179d2a8,%rdi  ;   {metadata({method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025113957: and    $0x1ff8,%ebx
  0x00007fd02511395d: cmp    $0x0,%ebx
  0x00007fd025113960: je     0x00007fd025114bd1  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@0 (line 455)

  0x00007fd025113966: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00007fd025114be8
  0x00007fd025113969: mov    %rsi,%rdi
  0x00007fd02511396c: movabs $0x7fd02179e028,%rbx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025113976: mov    0x8(%rdi),%edi
  0x00007fd025113979: shl    $0x3,%rdi
  0x00007fd02511397d: cmp    0x110(%rbx),%rdi
  0x00007fd025113984: jne    0x00007fd025113993
  0x00007fd025113986: addq   $0x1,0x118(%rbx)
  0x00007fd02511398e: jmpq   0x00007fd0251139f9
  0x00007fd025113993: cmp    0x120(%rbx),%rdi
  0x00007fd02511399a: jne    0x00007fd0251139a9
  0x00007fd02511399c: addq   $0x1,0x128(%rbx)
  0x00007fd0251139a4: jmpq   0x00007fd0251139f9
  0x00007fd0251139a9: cmpq   $0x0,0x110(%rbx)
  0x00007fd0251139b4: jne    0x00007fd0251139cd
  0x00007fd0251139b6: mov    %rdi,0x110(%rbx)
  0x00007fd0251139bd: movq   $0x1,0x118(%rbx)
  0x00007fd0251139c8: jmpq   0x00007fd0251139f9
  0x00007fd0251139cd: cmpq   $0x0,0x120(%rbx)
  0x00007fd0251139d8: jne    0x00007fd0251139f1
  0x00007fd0251139da: mov    %rdi,0x120(%rbx)
  0x00007fd0251139e1: movq   $0x1,0x128(%rbx)
  0x00007fd0251139ec: jmpq   0x00007fd0251139f9
  0x00007fd0251139f1: addq   $0x1,0x108(%rbx)
  0x00007fd0251139f9: mov    %rsi,%rdi
  0x00007fd0251139fc: mov    %rdi,%rsi          ;*invokeinterface length
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)

  0x00007fd0251139ff: nop
  0x00007fd025113a00: nop
  0x00007fd025113a01: nop
  0x00007fd025113a02: nop
  0x00007fd025113a03: nop
  0x00007fd025113a04: nop
  0x00007fd025113a05: movabs $0xffffffffffffffff,%rax
  0x00007fd025113a0f: callq  0x00007fd025046220  ; OopMap{[104]=Oop off=244}
                                                ;*invokeinterface length
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ;   {virtual_call}
  0x00007fd025113a14: cmp    $0x24,%eax
  0x00007fd025113a17: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025113a21: movabs $0x138,%rsi
  0x00007fd025113a2b: je     0x00007fd025113a3b
  0x00007fd025113a31: movabs $0x148,%rsi
  0x00007fd025113a3b: mov    (%rdx,%rsi,1),%rdi
  0x00007fd025113a3f: lea    0x1(%rdi),%rdi
  0x00007fd025113a43: mov    %rdi,(%rdx,%rsi,1)
  0x00007fd025113a47: jne    0x00007fd025114959  ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@8 (line 455)

  0x00007fd025113a4d: mov    0x68(%rsp),%rsi
  0x00007fd025113a52: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025113a5c: mov    0x8(%rsi),%esi
  0x00007fd025113a5f: shl    $0x3,%rsi
  0x00007fd025113a63: cmp    0x170(%rdx),%rsi
  0x00007fd025113a6a: jne    0x00007fd025113a79
  0x00007fd025113a6c: addq   $0x1,0x178(%rdx)
  0x00007fd025113a74: jmpq   0x00007fd025113adf
  0x00007fd025113a79: cmp    0x180(%rdx),%rsi
  0x00007fd025113a80: jne    0x00007fd025113a8f
  0x00007fd025113a82: addq   $0x1,0x188(%rdx)
  0x00007fd025113a8a: jmpq   0x00007fd025113adf
  0x00007fd025113a8f: cmpq   $0x0,0x170(%rdx)
  0x00007fd025113a9a: jne    0x00007fd025113ab3
  0x00007fd025113a9c: mov    %rsi,0x170(%rdx)
  0x00007fd025113aa3: movq   $0x1,0x178(%rdx)
  0x00007fd025113aae: jmpq   0x00007fd025113adf
  0x00007fd025113ab3: cmpq   $0x0,0x180(%rdx)
  0x00007fd025113abe: jne    0x00007fd025113ad7
  0x00007fd025113ac0: mov    %rsi,0x180(%rdx)
  0x00007fd025113ac7: movq   $0x1,0x188(%rdx)
  0x00007fd025113ad2: jmpq   0x00007fd025113adf
  0x00007fd025113ad7: addq   $0x1,0x168(%rdx)
  0x00007fd025113adf: mov    $0x8,%edx
  0x00007fd025113ae4: mov    0x68(%rsp),%rsi    ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@19 (line 458)

  0x00007fd025113ae9: nop
  0x00007fd025113aea: nop
  0x00007fd025113aeb: nop
  0x00007fd025113aec: nop
  0x00007fd025113aed: movabs $0xffffffffffffffff,%rax
  0x00007fd025113af7: callq  0x00007fd025046220  ; OopMap{[104]=Oop off=476}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@19 (line 458)
                                                ;   {virtual_call}
  0x00007fd025113afc: cmp    $0x2d,%eax
  0x00007fd025113aff: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025113b09: movabs $0x198,%rsi
  0x00007fd025113b13: jne    0x00007fd025113b23
  0x00007fd025113b19: movabs $0x1a8,%rsi
  0x00007fd025113b23: mov    (%rdx,%rsi,1),%rdi
  0x00007fd025113b27: lea    0x1(%rdi),%rdi
  0x00007fd025113b2b: mov    %rdi,(%rdx,%rsi,1)
  0x00007fd025113b2f: jne    0x00007fd0251146de  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@26 (line 458)

  0x00007fd025113b35: mov    0x68(%rsp),%rsi
  0x00007fd025113b3a: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025113b44: mov    0x8(%rsi),%esi
  0x00007fd025113b47: shl    $0x3,%rsi
  0x00007fd025113b4b: cmp    0x1c0(%rdx),%rsi
  0x00007fd025113b52: jne    0x00007fd025113b61
  0x00007fd025113b54: addq   $0x1,0x1c8(%rdx)
  0x00007fd025113b5c: jmpq   0x00007fd025113bc7
  0x00007fd025113b61: cmp    0x1d0(%rdx),%rsi
  0x00007fd025113b68: jne    0x00007fd025113b77
  0x00007fd025113b6a: addq   $0x1,0x1d8(%rdx)
  0x00007fd025113b72: jmpq   0x00007fd025113bc7
  0x00007fd025113b77: cmpq   $0x0,0x1c0(%rdx)
  0x00007fd025113b82: jne    0x00007fd025113b9b
  0x00007fd025113b84: mov    %rsi,0x1c0(%rdx)
  0x00007fd025113b8b: movq   $0x1,0x1c8(%rdx)
  0x00007fd025113b96: jmpq   0x00007fd025113bc7
  0x00007fd025113b9b: cmpq   $0x0,0x1d0(%rdx)
  0x00007fd025113ba6: jne    0x00007fd025113bbf
  0x00007fd025113ba8: mov    %rsi,0x1d0(%rdx)
  0x00007fd025113baf: movq   $0x1,0x1d8(%rdx)
  0x00007fd025113bba: jmpq   0x00007fd025113bc7
  0x00007fd025113bbf: addq   $0x1,0x1b8(%rdx)
  0x00007fd025113bc7: mov    $0xd,%edx
  0x00007fd025113bcc: mov    0x68(%rsp),%rsi    ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@32 (line 458)

  0x00007fd025113bd1: nop
  0x00007fd025113bd2: nop
  0x00007fd025113bd3: nop
  0x00007fd025113bd4: nop
  0x00007fd025113bd5: movabs $0xffffffffffffffff,%rax
  0x00007fd025113bdf: callq  0x00007fd025046220  ; OopMap{[104]=Oop off=708}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@32 (line 458)
                                                ;   {virtual_call}
  0x00007fd025113be4: cmp    $0x2d,%eax
  0x00007fd025113be7: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025113bf1: movabs $0x1e8,%rsi
  0x00007fd025113bfb: jne    0x00007fd025113c0b
  0x00007fd025113c01: movabs $0x1f8,%rsi
  0x00007fd025113c0b: mov    (%rdx,%rsi,1),%rdi
  0x00007fd025113c0f: lea    0x1(%rdi),%rdi
  0x00007fd025113c13: mov    %rdi,(%rdx,%rsi,1)
  0x00007fd025113c17: jne    0x00007fd0251146de  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@39 (line 458)

  0x00007fd025113c1d: mov    0x68(%rsp),%rsi
  0x00007fd025113c22: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025113c2c: mov    0x8(%rsi),%esi
  0x00007fd025113c2f: shl    $0x3,%rsi
  0x00007fd025113c33: cmp    0x210(%rdx),%rsi
  0x00007fd025113c3a: jne    0x00007fd025113c49
  0x00007fd025113c3c: addq   $0x1,0x218(%rdx)
  0x00007fd025113c44: jmpq   0x00007fd025113caf
  0x00007fd025113c49: cmp    0x220(%rdx),%rsi
  0x00007fd025113c50: jne    0x00007fd025113c5f
  0x00007fd025113c52: addq   $0x1,0x228(%rdx)
  0x00007fd025113c5a: jmpq   0x00007fd025113caf
  0x00007fd025113c5f: cmpq   $0x0,0x210(%rdx)
  0x00007fd025113c6a: jne    0x00007fd025113c83
  0x00007fd025113c6c: mov    %rsi,0x210(%rdx)
  0x00007fd025113c73: movq   $0x1,0x218(%rdx)
  0x00007fd025113c7e: jmpq   0x00007fd025113caf
  0x00007fd025113c83: cmpq   $0x0,0x220(%rdx)
  0x00007fd025113c8e: jne    0x00007fd025113ca7
  0x00007fd025113c90: mov    %rsi,0x220(%rdx)
  0x00007fd025113c97: movq   $0x1,0x228(%rdx)
  0x00007fd025113ca2: jmpq   0x00007fd025113caf
  0x00007fd025113ca7: addq   $0x1,0x208(%rdx)
  0x00007fd025113caf: mov    $0x12,%edx
  0x00007fd025113cb4: mov    0x68(%rsp),%rsi    ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@45 (line 458)

  0x00007fd025113cb9: nop
  0x00007fd025113cba: nop
  0x00007fd025113cbb: nop
  0x00007fd025113cbc: nop
  0x00007fd025113cbd: movabs $0xffffffffffffffff,%rax
  0x00007fd025113cc7: callq  0x00007fd025046220  ; OopMap{[104]=Oop off=940}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@45 (line 458)
                                                ;   {virtual_call}
  0x00007fd025113ccc: cmp    $0x2d,%eax
  0x00007fd025113ccf: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025113cd9: movabs $0x238,%rsi
  0x00007fd025113ce3: jne    0x00007fd025113cf3
  0x00007fd025113ce9: movabs $0x248,%rsi
  0x00007fd025113cf3: mov    (%rdx,%rsi,1),%rdi
  0x00007fd025113cf7: lea    0x1(%rdi),%rdi
  0x00007fd025113cfb: mov    %rdi,(%rdx,%rsi,1)
  0x00007fd025113cff: jne    0x00007fd0251146de  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@52 (line 458)

  0x00007fd025113d05: mov    0x68(%rsp),%rsi
  0x00007fd025113d0a: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025113d14: mov    0x8(%rsi),%esi
  0x00007fd025113d17: shl    $0x3,%rsi
  0x00007fd025113d1b: cmp    0x260(%rdx),%rsi
  0x00007fd025113d22: jne    0x00007fd025113d31
  0x00007fd025113d24: addq   $0x1,0x268(%rdx)
  0x00007fd025113d2c: jmpq   0x00007fd025113d97
  0x00007fd025113d31: cmp    0x270(%rdx),%rsi
  0x00007fd025113d38: jne    0x00007fd025113d47
  0x00007fd025113d3a: addq   $0x1,0x278(%rdx)
  0x00007fd025113d42: jmpq   0x00007fd025113d97
  0x00007fd025113d47: cmpq   $0x0,0x260(%rdx)
  0x00007fd025113d52: jne    0x00007fd025113d6b
  0x00007fd025113d54: mov    %rsi,0x260(%rdx)
  0x00007fd025113d5b: movq   $0x1,0x268(%rdx)
  0x00007fd025113d66: jmpq   0x00007fd025113d97
  0x00007fd025113d6b: cmpq   $0x0,0x270(%rdx)
  0x00007fd025113d76: jne    0x00007fd025113d8f
  0x00007fd025113d78: mov    %rsi,0x270(%rdx)
  0x00007fd025113d7f: movq   $0x1,0x278(%rdx)
  0x00007fd025113d8a: jmpq   0x00007fd025113d97
  0x00007fd025113d8f: addq   $0x1,0x258(%rdx)
  0x00007fd025113d97: mov    $0x17,%edx
  0x00007fd025113d9c: mov    0x68(%rsp),%rsi    ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@58 (line 458)

  0x00007fd025113da1: nop
  0x00007fd025113da2: nop
  0x00007fd025113da3: nop
  0x00007fd025113da4: nop
  0x00007fd025113da5: movabs $0xffffffffffffffff,%rax
  0x00007fd025113daf: callq  0x00007fd025046220  ; OopMap{[104]=Oop off=1172}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@58 (line 458)
                                                ;   {virtual_call}
  0x00007fd025113db4: cmp    $0x2d,%eax
  0x00007fd025113db7: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025113dc1: movabs $0x288,%rsi
  0x00007fd025113dcb: je     0x00007fd025113ddb
  0x00007fd025113dd1: movabs $0x298,%rsi
  0x00007fd025113ddb: mov    (%rdx,%rsi,1),%rdi
  0x00007fd025113ddf: lea    0x1(%rdi),%rdi
  0x00007fd025113de3: mov    %rdi,(%rdx,%rsi,1)
  0x00007fd025113de7: jne    0x00007fd0251146de  ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@65 (line 458)

  0x00007fd025113ded: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025113df7: incl   0x2b8(%rdx)
  0x00007fd025113dfd: mov    $0x0,%edi
  0x00007fd025113e02: movabs $0x0,%rbx
  0x00007fd025113e0c: jmpq   0x00007fd025113efd  ;*goto
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@80 (line 465)

  0x00007fd025113e11: nopl   0x0(%rax)
  0x00007fd025113e18: mov    %rsi,%rdx
  0x00007fd025113e1b: movabs $0x7fd02179e028,%rax  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025113e25: mov    0x8(%rdx),%edx
  0x00007fd025113e28: shl    $0x3,%rdx
  0x00007fd025113e2c: cmp    0x2d8(%rax),%rdx
  0x00007fd025113e33: jne    0x00007fd025113e42
  0x00007fd025113e35: addq   $0x1,0x2e0(%rax)
  0x00007fd025113e3d: jmpq   0x00007fd025113ea8
  0x00007fd025113e42: cmp    0x2e8(%rax),%rdx
  0x00007fd025113e49: jne    0x00007fd025113e58
  0x00007fd025113e4b: addq   $0x1,0x2f0(%rax)
  0x00007fd025113e53: jmpq   0x00007fd025113ea8
  0x00007fd025113e58: cmpq   $0x0,0x2d8(%rax)
  0x00007fd025113e63: jne    0x00007fd025113e7c
  0x00007fd025113e65: mov    %rdx,0x2d8(%rax)
  0x00007fd025113e6c: movq   $0x1,0x2e0(%rax)
  0x00007fd025113e77: jmpq   0x00007fd025113ea8
  0x00007fd025113e7c: cmpq   $0x0,0x2e8(%rax)
  0x00007fd025113e87: jne    0x00007fd025113ea0
  0x00007fd025113e89: mov    %rdx,0x2e8(%rax)
  0x00007fd025113e90: movq   $0x1,0x2f0(%rax)
  0x00007fd025113e9b: jmpq   0x00007fd025113ea8
  0x00007fd025113ea0: addq   $0x1,0x2d0(%rax)
  0x00007fd025113ea8: mov    %rdi,%rdx
  0x00007fd025113eab: mov    %rsi,%rax
  0x00007fd025113eae: mov    %rax,%rsi          ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)

  0x00007fd025113eb1: mov    %edi,0x78(%rsp)
  0x00007fd025113eb5: movabs $0xffffffffffffffff,%rax
  0x00007fd025113ebf: callq  0x00007fd025046220  ; OopMap{[104]=Oop off=1444}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)
                                                ;   {virtual_call}
  0x00007fd025113ec4: movabs $0x7fd02179e028,%rsi  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025113ece: addq   $0x1,0x300(%rsi)
  0x00007fd025113ed6: mov    %rax,%rsi          ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd025113ed9: nop
  0x00007fd025113eda: nop
  0x00007fd025113edb: nop
  0x00007fd025113edc: nop
  0x00007fd025113edd: nop
  0x00007fd025113ede: nop
  0x00007fd025113edf: callq  0x00007fd025046420  ; OopMap{[104]=Oop off=1476}
                                                ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ;   {static_call}
  0x00007fd025113ee4: mov    $0x4,%ecx
  0x00007fd025113ee9: mov    0x70(%rsp),%rbx
  0x00007fd025113eee: shl    %cl,%rbx
  0x00007fd025113ef1: movslq %eax,%rax
  0x00007fd025113ef4: or     %rax,%rbx
  0x00007fd025113ef7: mov    0x78(%rsp),%edi
  0x00007fd025113efb: inc    %edi
  0x00007fd025113efd: mov    %rbx,0x70(%rsp)
  0x00007fd025113f02: mov    0x68(%rsp),%rsi
  0x00007fd025113f07: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025113f11: mov    0xe0(%rdx),%eax
  0x00007fd025113f17: add    $0x8,%eax
  0x00007fd025113f1a: mov    %eax,0xe0(%rdx)
  0x00007fd025113f20: movabs $0x7fd02179d2a8,%rdx  ;   {metadata({method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025113f2a: and    $0xfff8,%eax
  0x00007fd025113f30: cmp    $0x0,%eax
  0x00007fd025113f33: je     0x00007fd025114bed  ; OopMap{rsi=Oop [104]=Oop off=1561}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@111 (line 465)

  0x00007fd025113f39: test   %eax,0x16ced1c1(%rip)        # 0x00007fd03be01100
                                                ;   {poll}
  0x00007fd025113f3f: cmp    $0x8,%edi
  0x00007fd025113f42: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025113f4c: movabs $0x310,%rax
  0x00007fd025113f56: jl     0x00007fd025113f66
  0x00007fd025113f5c: movabs $0x320,%rax
  0x00007fd025113f66: mov    (%rdx,%rax,1),%rcx
  0x00007fd025113f6a: lea    0x1(%rcx),%rcx
  0x00007fd025113f6e: mov    %rcx,(%rdx,%rax,1)
  0x00007fd025113f72: jl     0x00007fd025113e18  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@111 (line 465)

  0x00007fd025113f78: mov    0x70(%rsp),%rbx
  0x00007fd025113f7d: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025113f87: incl   0x330(%rdx)
  0x00007fd025113f8d: mov    $0x9,%edi
  0x00007fd025113f92: jmpq   0x00007fd025114080  ;*goto
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@118 (line 469)

  0x00007fd025113f97: nop
  0x00007fd025113f98: mov    %rsi,%rdx
  0x00007fd025113f9b: movabs $0x7fd02179e028,%rax  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025113fa5: mov    0x8(%rdx),%edx
  0x00007fd025113fa8: shl    $0x3,%rdx
  0x00007fd025113fac: cmp    0x350(%rax),%rdx
  0x00007fd025113fb3: jne    0x00007fd025113fc2
  0x00007fd025113fb5: addq   $0x1,0x358(%rax)
  0x00007fd025113fbd: jmpq   0x00007fd025114028
  0x00007fd025113fc2: cmp    0x360(%rax),%rdx
  0x00007fd025113fc9: jne    0x00007fd025113fd8
  0x00007fd025113fcb: addq   $0x1,0x368(%rax)
  0x00007fd025113fd3: jmpq   0x00007fd025114028
  0x00007fd025113fd8: cmpq   $0x0,0x350(%rax)
  0x00007fd025113fe3: jne    0x00007fd025113ffc
  0x00007fd025113fe5: mov    %rdx,0x350(%rax)
  0x00007fd025113fec: movq   $0x1,0x358(%rax)
  0x00007fd025113ff7: jmpq   0x00007fd025114028
  0x00007fd025113ffc: cmpq   $0x0,0x360(%rax)
  0x00007fd025114007: jne    0x00007fd025114020
  0x00007fd025114009: mov    %rdx,0x360(%rax)
  0x00007fd025114010: movq   $0x1,0x368(%rax)
  0x00007fd02511401b: jmpq   0x00007fd025114028
  0x00007fd025114020: addq   $0x1,0x348(%rax)
  0x00007fd025114028: mov    %rdi,%rdx
  0x00007fd02511402b: mov    %rsi,%rax
  0x00007fd02511402e: mov    %rax,%rsi          ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)

  0x00007fd025114031: mov    %edi,0x7c(%rsp)
  0x00007fd025114035: movabs $0xffffffffffffffff,%rax
  0x00007fd02511403f: callq  0x00007fd025046220  ; OopMap{[104]=Oop off=1828}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)
                                                ;   {virtual_call}
  0x00007fd025114044: movabs $0x7fd02179e028,%rsi  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd02511404e: addq   $0x1,0x378(%rsi)
  0x00007fd025114056: mov    %rax,%rsi          ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd025114059: nop
  0x00007fd02511405a: nop
  0x00007fd02511405b: nop
  0x00007fd02511405c: nop
  0x00007fd02511405d: nop
  0x00007fd02511405e: nop
  0x00007fd02511405f: callq  0x00007fd025046420  ; OopMap{[104]=Oop off=1860}
                                                ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ;   {static_call}
  0x00007fd025114064: mov    $0x4,%ecx
  0x00007fd025114069: mov    0x80(%rsp),%rbx
  0x00007fd025114071: shl    %cl,%rbx
  0x00007fd025114074: movslq %eax,%rax
  0x00007fd025114077: or     %rax,%rbx
  0x00007fd02511407a: mov    0x7c(%rsp),%edi
  0x00007fd02511407e: inc    %edi
  0x00007fd025114080: mov    %rbx,0x80(%rsp)
  0x00007fd025114088: mov    0x68(%rsp),%rsi
  0x00007fd02511408d: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025114097: mov    0xe0(%rdx),%eax
  0x00007fd02511409d: add    $0x8,%eax
  0x00007fd0251140a0: mov    %eax,0xe0(%rdx)
  0x00007fd0251140a6: movabs $0x7fd02179d2a8,%rdx  ;   {metadata({method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd0251140b0: and    $0xfff8,%eax
  0x00007fd0251140b6: cmp    $0x0,%eax
  0x00007fd0251140b9: je     0x00007fd025114c04  ; OopMap{rsi=Oop [104]=Oop off=1951}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@149 (line 469)

  0x00007fd0251140bf: test   %eax,0x16ced03b(%rip)        # 0x00007fd03be01100
                                                ;   {poll}
  0x00007fd0251140c5: cmp    $0xd,%edi
  0x00007fd0251140c8: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd0251140d2: movabs $0x388,%rax
  0x00007fd0251140dc: jl     0x00007fd0251140ec
  0x00007fd0251140e2: movabs $0x398,%rax
  0x00007fd0251140ec: mov    (%rdx,%rax,1),%rcx
  0x00007fd0251140f0: lea    0x1(%rcx),%rcx
  0x00007fd0251140f4: mov    %rcx,(%rdx,%rax,1)
  0x00007fd0251140f8: jl     0x00007fd025113f98  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@149 (line 469)

  0x00007fd0251140fe: mov    0x80(%rsp),%rbx
  0x00007fd025114106: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025114110: incl   0x3a8(%rdx)
  0x00007fd025114116: mov    $0xe,%edi
  0x00007fd02511411b: jmpq   0x00007fd025114213  ;*goto
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@156 (line 473)

  0x00007fd025114120: mov    %rsi,%rdx
  0x00007fd025114123: movabs $0x7fd02179e028,%rax  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd02511412d: mov    0x8(%rdx),%edx
  0x00007fd025114130: shl    $0x3,%rdx
  0x00007fd025114134: cmp    0x3c8(%rax),%rdx
  0x00007fd02511413b: jne    0x00007fd02511414a
  0x00007fd02511413d: addq   $0x1,0x3d0(%rax)
  0x00007fd025114145: jmpq   0x00007fd0251141b0
  0x00007fd02511414a: cmp    0x3d8(%rax),%rdx
  0x00007fd025114151: jne    0x00007fd025114160
  0x00007fd025114153: addq   $0x1,0x3e0(%rax)
  0x00007fd02511415b: jmpq   0x00007fd0251141b0
  0x00007fd025114160: cmpq   $0x0,0x3c8(%rax)
  0x00007fd02511416b: jne    0x00007fd025114184
  0x00007fd02511416d: mov    %rdx,0x3c8(%rax)
  0x00007fd025114174: movq   $0x1,0x3d0(%rax)
  0x00007fd02511417f: jmpq   0x00007fd0251141b0
  0x00007fd025114184: cmpq   $0x0,0x3d8(%rax)
  0x00007fd02511418f: jne    0x00007fd0251141a8
  0x00007fd025114191: mov    %rdx,0x3d8(%rax)
  0x00007fd025114198: movq   $0x1,0x3e0(%rax)
  0x00007fd0251141a3: jmpq   0x00007fd0251141b0
  0x00007fd0251141a8: addq   $0x1,0x3c0(%rax)
  0x00007fd0251141b0: mov    %rdi,%rdx
  0x00007fd0251141b3: mov    %rsi,%rax
  0x00007fd0251141b6: mov    %rax,%rsi          ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)

  0x00007fd0251141b9: mov    %edi,0x90(%rsp)
  0x00007fd0251141c0: nop
  0x00007fd0251141c1: nop
  0x00007fd0251141c2: nop
  0x00007fd0251141c3: nop
  0x00007fd0251141c4: nop
  0x00007fd0251141c5: movabs $0xffffffffffffffff,%rax
  0x00007fd0251141cf: callq  0x00007fd025046220  ; OopMap{[104]=Oop off=2228}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)
                                                ;   {virtual_call}
  0x00007fd0251141d4: movabs $0x7fd02179e028,%rsi  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd0251141de: addq   $0x1,0x3f0(%rsi)
  0x00007fd0251141e6: mov    %rax,%rsi          ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd0251141e9: nop
  0x00007fd0251141ea: nop
  0x00007fd0251141eb: nop
  0x00007fd0251141ec: nop
  0x00007fd0251141ed: nop
  0x00007fd0251141ee: nop
  0x00007fd0251141ef: callq  0x00007fd025046420  ; OopMap{[104]=Oop off=2260}
                                                ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ;   {static_call}
  0x00007fd0251141f4: mov    $0x4,%ecx
  0x00007fd0251141f9: mov    0x88(%rsp),%rbx
  0x00007fd025114201: shl    %cl,%rbx
  0x00007fd025114204: movslq %eax,%rax
  0x00007fd025114207: or     %rax,%rbx
  0x00007fd02511420a: mov    0x90(%rsp),%edi
  0x00007fd025114211: inc    %edi
  0x00007fd025114213: mov    %rbx,0x88(%rsp)
  0x00007fd02511421b: mov    0x68(%rsp),%rsi
  0x00007fd025114220: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd02511422a: mov    0xe0(%rdx),%eax
  0x00007fd025114230: add    $0x8,%eax
  0x00007fd025114233: mov    %eax,0xe0(%rdx)
  0x00007fd025114239: movabs $0x7fd02179d2a8,%rdx  ;   {metadata({method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025114243: and    $0xfff8,%eax
  0x00007fd025114249: cmp    $0x0,%eax
  0x00007fd02511424c: je     0x00007fd025114c1b  ; OopMap{rsi=Oop [104]=Oop off=2354}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@187 (line 473)

  0x00007fd025114252: test   %eax,0x16cecea8(%rip)        # 0x00007fd03be01100
                                                ;   {poll}
  0x00007fd025114258: cmp    $0x12,%edi
  0x00007fd02511425b: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025114265: movabs $0x400,%rax
  0x00007fd02511426f: jl     0x00007fd02511427f
  0x00007fd025114275: movabs $0x410,%rax
  0x00007fd02511427f: mov    (%rdx,%rax,1),%rcx
  0x00007fd025114283: lea    0x1(%rcx),%rcx
  0x00007fd025114287: mov    %rcx,(%rdx,%rax,1)
  0x00007fd02511428b: jl     0x00007fd025114120  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@187 (line 473)

  0x00007fd025114291: mov    0x88(%rsp),%rbx
  0x00007fd025114299: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd0251142a3: incl   0x420(%rdx)
  0x00007fd0251142a9: mov    $0x13,%edi
  0x00007fd0251142ae: movabs $0x0,%rax
  0x00007fd0251142b8: mov    %rax,0x98(%rsp)
  0x00007fd0251142c0: mov    %rbx,0x88(%rsp)
  0x00007fd0251142c8: jmpq   0x00007fd0251143ce  ;*goto
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@194 (line 479)

  0x00007fd0251142cd: data16 xchg %ax,%ax
  0x00007fd0251142d0: mov    %rsi,%rdx
  0x00007fd0251142d3: movabs $0x7fd02179e028,%rcx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd0251142dd: mov    0x8(%rdx),%edx
  0x00007fd0251142e0: shl    $0x3,%rdx
  0x00007fd0251142e4: cmp    0x440(%rcx),%rdx
  0x00007fd0251142eb: jne    0x00007fd0251142fa
  0x00007fd0251142ed: addq   $0x1,0x448(%rcx)
  0x00007fd0251142f5: jmpq   0x00007fd025114360
  0x00007fd0251142fa: cmp    0x450(%rcx),%rdx
  0x00007fd025114301: jne    0x00007fd025114310
  0x00007fd025114303: addq   $0x1,0x458(%rcx)
  0x00007fd02511430b: jmpq   0x00007fd025114360
  0x00007fd025114310: cmpq   $0x0,0x440(%rcx)
  0x00007fd02511431b: jne    0x00007fd025114334
  0x00007fd02511431d: mov    %rdx,0x440(%rcx)
  0x00007fd025114324: movq   $0x1,0x448(%rcx)
  0x00007fd02511432f: jmpq   0x00007fd025114360
  0x00007fd025114334: cmpq   $0x0,0x450(%rcx)
  0x00007fd02511433f: jne    0x00007fd025114358
  0x00007fd025114341: mov    %rdx,0x450(%rcx)
  0x00007fd025114348: movq   $0x1,0x458(%rcx)
  0x00007fd025114353: jmpq   0x00007fd025114360
  0x00007fd025114358: addq   $0x1,0x438(%rcx)
  0x00007fd025114360: mov    %rdi,%rdx
  0x00007fd025114363: mov    %rsi,%rcx
  0x00007fd025114366: mov    %rcx,%rsi          ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)

  0x00007fd025114369: mov    %edi,0x94(%rsp)
  0x00007fd025114370: nop
  0x00007fd025114371: nop
  0x00007fd025114372: nop
  0x00007fd025114373: nop
  0x00007fd025114374: nop
  0x00007fd025114375: movabs $0xffffffffffffffff,%rax
  0x00007fd02511437f: callq  0x00007fd025046220  ; OopMap{[104]=Oop off=2660}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)
                                                ;   {virtual_call}
  0x00007fd025114384: movabs $0x7fd02179e028,%rsi  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd02511438e: addq   $0x1,0x468(%rsi)
  0x00007fd025114396: mov    %rax,%rsi          ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd025114399: nop
  0x00007fd02511439a: nop
  0x00007fd02511439b: nop
  0x00007fd02511439c: nop
  0x00007fd02511439d: nop
  0x00007fd02511439e: nop
  0x00007fd02511439f: callq  0x00007fd025046420  ; OopMap{[104]=Oop off=2692}
                                                ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ;   {static_call}
  0x00007fd0251143a4: mov    $0x4,%ecx
  0x00007fd0251143a9: mov    0x98(%rsp),%rdx
  0x00007fd0251143b1: shl    %cl,%rdx
  0x00007fd0251143b4: movslq %eax,%rax
  0x00007fd0251143b7: or     %rax,%rdx
  0x00007fd0251143ba: mov    0x94(%rsp),%edi
  0x00007fd0251143c1: inc    %edi
  0x00007fd0251143c3: mov    %rdx,%rax          ;*iload
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@221 (line 479)

  0x00007fd0251143c6: mov    %rax,0x98(%rsp)
  0x00007fd0251143ce: mov    0x68(%rsp),%rsi
  0x00007fd0251143d3: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd0251143dd: mov    0xe0(%rdx),%ecx
  0x00007fd0251143e3: add    $0x8,%ecx
  0x00007fd0251143e6: mov    %ecx,0xe0(%rdx)
  0x00007fd0251143ec: movabs $0x7fd02179d2a8,%rdx  ;   {metadata({method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd0251143f6: and    $0xfff8,%ecx
  0x00007fd0251143fc: cmp    $0x0,%ecx
  0x00007fd0251143ff: je     0x00007fd025114c32  ; OopMap{rsi=Oop [104]=Oop off=2789}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@225 (line 479)

  0x00007fd025114405: test   %eax,0x16ceccf5(%rip)        # 0x00007fd03be01100
                                                ;   {poll}
  0x00007fd02511440b: cmp    $0x17,%edi
  0x00007fd02511440e: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025114418: movabs $0x478,%rcx
  0x00007fd025114422: jl     0x00007fd025114432
  0x00007fd025114428: movabs $0x488,%rcx
  0x00007fd025114432: mov    (%rdx,%rcx,1),%r8
  0x00007fd025114436: lea    0x1(%r8),%r8
  0x00007fd02511443a: mov    %r8,(%rdx,%rcx,1)
  0x00007fd02511443e: jl     0x00007fd0251142d0  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@225 (line 479)

  0x00007fd025114444: mov    0x98(%rsp),%rax
  0x00007fd02511444c: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025114456: incl   0x498(%rdx)
  0x00007fd02511445c: mov    $0x18,%edi
  0x00007fd025114461: mov    %rax,0xa0(%rsp)
  0x00007fd025114469: jmpq   0x00007fd02511456e  ;*goto
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@232 (line 483)

  0x00007fd02511446e: xchg   %ax,%ax
  0x00007fd025114470: mov    %rsi,%rdx
  0x00007fd025114473: movabs $0x7fd02179e028,%rbx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd02511447d: mov    0x8(%rdx),%edx
  0x00007fd025114480: shl    $0x3,%rdx
  0x00007fd025114484: cmp    0x4b8(%rbx),%rdx
  0x00007fd02511448b: jne    0x00007fd02511449a
  0x00007fd02511448d: addq   $0x1,0x4c0(%rbx)
  0x00007fd025114495: jmpq   0x00007fd025114500
  0x00007fd02511449a: cmp    0x4c8(%rbx),%rdx
  0x00007fd0251144a1: jne    0x00007fd0251144b0
  0x00007fd0251144a3: addq   $0x1,0x4d0(%rbx)
  0x00007fd0251144ab: jmpq   0x00007fd025114500
  0x00007fd0251144b0: cmpq   $0x0,0x4b8(%rbx)
  0x00007fd0251144bb: jne    0x00007fd0251144d4
  0x00007fd0251144bd: mov    %rdx,0x4b8(%rbx)
  0x00007fd0251144c4: movq   $0x1,0x4c0(%rbx)
  0x00007fd0251144cf: jmpq   0x00007fd025114500
  0x00007fd0251144d4: cmpq   $0x0,0x4c8(%rbx)
  0x00007fd0251144df: jne    0x00007fd0251144f8
  0x00007fd0251144e1: mov    %rdx,0x4c8(%rbx)
  0x00007fd0251144e8: movq   $0x1,0x4d0(%rbx)
  0x00007fd0251144f3: jmpq   0x00007fd025114500
  0x00007fd0251144f8: addq   $0x1,0x4b0(%rbx)
  0x00007fd025114500: mov    %rdi,%rdx
  0x00007fd025114503: mov    %rsi,%rbx
  0x00007fd025114506: mov    %rbx,%rsi          ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)

  0x00007fd025114509: mov    %edi,0xa8(%rsp)
  0x00007fd025114510: nop
  0x00007fd025114511: nop
  0x00007fd025114512: nop
  0x00007fd025114513: nop
  0x00007fd025114514: nop
  0x00007fd025114515: movabs $0xffffffffffffffff,%rax
  0x00007fd02511451f: callq  0x00007fd025046220  ; OopMap{[104]=Oop off=3076}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)
                                                ;   {virtual_call}
  0x00007fd025114524: movabs $0x7fd02179e028,%rsi  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd02511452e: addq   $0x1,0x4e0(%rsi)
  0x00007fd025114536: mov    %rax,%rsi          ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd025114539: nop
  0x00007fd02511453a: nop
  0x00007fd02511453b: nop
  0x00007fd02511453c: nop
  0x00007fd02511453d: nop
  0x00007fd02511453e: nop
  0x00007fd02511453f: callq  0x00007fd025046420  ; OopMap{[104]=Oop off=3108}
                                                ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ;   {static_call}
  0x00007fd025114544: mov    $0x4,%ecx
  0x00007fd025114549: mov    0xa0(%rsp),%rdx
  0x00007fd025114551: shl    %cl,%rdx
  0x00007fd025114554: movslq %eax,%rax
  0x00007fd025114557: or     %rax,%rdx
  0x00007fd02511455a: mov    0xa8(%rsp),%edi
  0x00007fd025114561: inc    %edi
  0x00007fd025114563: mov    %rdx,%rbx          ;*iload
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@259 (line 483)

  0x00007fd025114566: mov    %rbx,0xa0(%rsp)
  0x00007fd02511456e: mov    0x68(%rsp),%rsi
  0x00007fd025114573: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd02511457d: mov    0xe0(%rdx),%ebx
  0x00007fd025114583: add    $0x8,%ebx
  0x00007fd025114586: mov    %ebx,0xe0(%rdx)
  0x00007fd02511458c: movabs $0x7fd02179d2a8,%rdx  ;   {metadata({method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025114596: and    $0xfff8,%ebx
  0x00007fd02511459c: cmp    $0x0,%ebx
  0x00007fd02511459f: je     0x00007fd025114c49  ; OopMap{rsi=Oop [104]=Oop off=3205}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@263 (line 483)

  0x00007fd0251145a5: test   %eax,0x16cecb55(%rip)        # 0x00007fd03be01100
                                                ;   {poll}
  0x00007fd0251145ab: cmp    $0x24,%edi
  0x00007fd0251145ae: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd0251145b8: movabs $0x4f0,%rbx
  0x00007fd0251145c2: jl     0x00007fd0251145d2
  0x00007fd0251145c8: movabs $0x500,%rbx
  0x00007fd0251145d2: mov    (%rdx,%rbx,1),%rcx
  0x00007fd0251145d6: lea    0x1(%rcx),%rcx
  0x00007fd0251145da: mov    %rcx,(%rdx,%rbx,1)
  0x00007fd0251145de: jl     0x00007fd025114470  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@263 (line 483)

  0x00007fd0251145e4: mov    0xa0(%rsp),%rbx
  0x00007fd0251145ec: mov    0x88(%rsp),%r8
  0x00007fd0251145f4: movabs $0x7c00434f0,%rdx  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007fd0251145fe: mov    0x60(%r15),%rax
  0x00007fd025114602: lea    0x20(%rax),%rdi
  0x00007fd025114606: cmp    0x70(%r15),%rdi
  0x00007fd02511460a: ja     0x00007fd025114c60
  0x00007fd025114610: mov    %rdi,0x60(%r15)
  0x00007fd025114614: mov    0xa8(%rdx),%rcx
  0x00007fd02511461b: mov    %rcx,(%rax)
  0x00007fd02511461e: mov    %rdx,%rcx
  0x00007fd025114621: shr    $0x3,%rcx
  0x00007fd025114625: mov    %ecx,0x8(%rax)
  0x00007fd025114628: xor    %rcx,%rcx
  0x00007fd02511462b: mov    %ecx,0xc(%rax)
  0x00007fd02511462e: xor    %rcx,%rcx
  0x00007fd025114631: mov    %rcx,0x10(%rax)
  0x00007fd025114635: mov    %rcx,0x18(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@266 (line 488)

  0x00007fd025114639: mov    %rax,%rdx
  0x00007fd02511463c: movabs $0x7fd02179e028,%rsi  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025114646: addq   $0x1,0x510(%rsi)
  0x00007fd02511464e: movabs $0x7fd0215ca820,%rdx  ;   {metadata(method data for {method} {0x00007fd0215c95d0} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007fd025114658: mov    0xdc(%rdx),%esi
  0x00007fd02511465e: add    $0x8,%esi
  0x00007fd025114661: mov    %esi,0xdc(%rdx)
  0x00007fd025114667: movabs $0x7fd0215c95d0,%rdx  ;   {metadata({method} {0x00007fd0215c95d0} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007fd025114671: and    $0x7ffff8,%esi
  0x00007fd025114677: cmp    $0x0,%esi
  0x00007fd02511467a: je     0x00007fd025114c6d
  0x00007fd025114680: mov    %rax,%rdx
  0x00007fd025114683: movabs $0x7fd0215ca820,%rsi  ;   {metadata(method data for {method} {0x00007fd0215c95d0} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007fd02511468d: addq   $0x1,0x108(%rsi)
  0x00007fd025114695: movabs $0x7fd021511108,%rdx  ;   {metadata(method data for {method} {0x00007fd02139b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fd02511469f: mov    0xdc(%rdx),%esi
  0x00007fd0251146a5: add    $0x8,%esi
  0x00007fd0251146a8: mov    %esi,0xdc(%rdx)
  0x00007fd0251146ae: movabs $0x7fd02139b480,%rdx  ;   {metadata({method} {0x00007fd02139b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fd0251146b8: and    $0x7ffff8,%esi
  0x00007fd0251146be: cmp    $0x0,%esi
  0x00007fd0251146c1: je     0x00007fd025114c84
  0x00007fd0251146c7: mov    %r8,0x10(%rax)     ;*putfield mostSigBits
                                                ; - java.util.UUID::&lt;init&gt;@6 (line 129)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@272 (line 488)

  0x00007fd0251146cb: mov    %rbx,0x18(%rax)    ;*putfield leastSigBits
                                                ; - java.util.UUID::&lt;init&gt;@11 (line 130)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@272 (line 488)

  0x00007fd0251146cf: add    $0xe0,%rsp
  0x00007fd0251146d6: pop    %rbp
  0x00007fd0251146d7: test   %eax,0x16ceca23(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd0251146dd: retq                      ;*areturn
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@275 (line 488)

  0x00007fd0251146de: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd0251146e8: addq   $0x1,0x2a8(%rdx)
  0x00007fd0251146f0: movabs $0x7fd02179e588,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd0251146fa: mov    0xdc(%rdx),%esi
  0x00007fd025114700: add    $0x8,%esi
  0x00007fd025114703: mov    %esi,0xdc(%rdx)
  0x00007fd025114709: movabs $0x7fd02179d380,%rdx  ;   {metadata({method} {0x00007fd02179d380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025114713: and    $0x7ffff8,%esi
  0x00007fd025114719: cmp    $0x0,%esi
  0x00007fd02511471c: je     0x00007fd025114c9b
  0x00007fd025114722: nopw   0x0(%rax,%rax,1)
  0x00007fd025114728: jmpq   0x00007fd025114cc1  ;   {no_reloc}
  0x00007fd02511472d: add    %al,(%rax)
  0x00007fd02511472f: add    %al,(%rax)
  0x00007fd025114731: add    %cl,-0x75(%rcx)
  0x00007fd025114734: rex.RXB (bad) 
  0x00007fd025114736: lea    0x20(%rax),%rdi
  0x00007fd02511473a: cmp    0x70(%r15),%rdi
  0x00007fd02511473e: ja     0x00007fd025114ccb
  0x00007fd025114744: mov    %rdi,0x60(%r15)
  0x00007fd025114748: mov    0xa8(%rdx),%rcx
  0x00007fd02511474f: mov    %rcx,(%rax)
  0x00007fd025114752: mov    %rdx,%rcx
  0x00007fd025114755: shr    $0x3,%rcx
  0x00007fd025114759: mov    %ecx,0x8(%rax)
  0x00007fd02511475c: xor    %rcx,%rcx
  0x00007fd02511475f: mov    %ecx,0xc(%rax)
  0x00007fd025114762: xor    %rcx,%rcx
  0x00007fd025114765: mov    %rcx,0x10(%rax)
  0x00007fd025114769: mov    %rcx,0x18(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@0 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)

  0x00007fd02511476d: data16 xchg %ax,%ax
  0x00007fd025114770: jmpq   0x00007fd025114ce7  ;   {no_reloc}
  0x00007fd025114775: add    %al,(%rax)
  0x00007fd025114777: add    %al,(%rax)
  0x00007fd025114779: add    %cl,-0x77(%rax)
  0x00007fd02511477c: test   %ah,(%rax,%rdi,4)
  0x00007fd02511477f: add    %al,(%rax)
  0x00007fd025114781: add    %ch,%cl
  0x00007fd025114783: pushq  $0x5
  0x00007fd025114785: add    %al,(%rax)         ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@4 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)

  0x00007fd025114787: mov    %rax,%rdx
  0x00007fd02511478a: movabs $0x7fd02179e588,%rsi  ;   {metadata(method data for {method} {0x00007fd02179d380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025114794: addq   $0x1,0x108(%rsi)
  0x00007fd02511479c: movabs $0x670bf0fe0,%rdx  ;   {oop(&quot;Invalid UUID string: &quot;)}
  0x00007fd0251147a6: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@10 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)

  0x00007fd0251147a9: mov    %rax,0xb0(%rsp)
  0x00007fd0251147b1: nop
  0x00007fd0251147b2: nop
  0x00007fd0251147b3: nop
  0x00007fd0251147b4: nop
  0x00007fd0251147b5: nop
  0x00007fd0251147b6: nop
  0x00007fd0251147b7: callq  0x00007fd025046020  ; OopMap{[104]=Oop [176]=Oop [184]=Oop off=3740}
                                                ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@10 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {optimized virtual_call}
  0x00007fd0251147bc: mov    0xb0(%rsp),%rax
  0x00007fd0251147c4: movabs $0x7fd02179e588,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd0251147ce: mov    0x8(%rax),%eax
  0x00007fd0251147d1: shl    $0x3,%rax
  0x00007fd0251147d5: cmp    0x120(%rdx),%rax
  0x00007fd0251147dc: jne    0x00007fd0251147eb
  0x00007fd0251147de: addq   $0x1,0x128(%rdx)
  0x00007fd0251147e6: jmpq   0x00007fd025114851
  0x00007fd0251147eb: cmp    0x130(%rdx),%rax
  0x00007fd0251147f2: jne    0x00007fd025114801
  0x00007fd0251147f4: addq   $0x1,0x138(%rdx)
  0x00007fd0251147fc: jmpq   0x00007fd025114851
  0x00007fd025114801: cmpq   $0x0,0x120(%rdx)
  0x00007fd02511480c: jne    0x00007fd025114825
  0x00007fd02511480e: mov    %rax,0x120(%rdx)
  0x00007fd025114815: movq   $0x1,0x128(%rdx)
  0x00007fd025114820: jmpq   0x00007fd025114851
  0x00007fd025114825: cmpq   $0x0,0x130(%rdx)
  0x00007fd025114830: jne    0x00007fd025114849
  0x00007fd025114832: mov    %rax,0x130(%rdx)
  0x00007fd025114839: movq   $0x1,0x138(%rdx)
  0x00007fd025114844: jmpq   0x00007fd025114851
  0x00007fd025114849: addq   $0x1,0x118(%rdx)
  0x00007fd025114851: mov    0x68(%rsp),%rdx
  0x00007fd025114856: mov    0xb0(%rsp),%rsi    ;*invokevirtual append
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@14 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)

  0x00007fd02511485e: nop
  0x00007fd02511485f: nop
  0x00007fd025114860: nop
  0x00007fd025114861: nop
  0x00007fd025114862: nop
  0x00007fd025114863: nop
  0x00007fd025114864: nop
  0x00007fd025114865: movabs $0xffffffffffffffff,%rax
  0x00007fd02511486f: callq  0x00007fd025046220  ; OopMap{[184]=Oop off=3924}
                                                ;*invokevirtual append
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@14 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {virtual_call}
  0x00007fd025114874: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00007fd025114cfe
  0x00007fd025114877: mov    %rax,%rsi
  0x00007fd02511487a: movabs $0x7fd02179e588,%rdi  ;   {metadata(method data for {method} {0x00007fd02179d380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025114884: mov    0x8(%rsi),%esi
  0x00007fd025114887: shl    $0x3,%rsi
  0x00007fd02511488b: cmp    0x150(%rdi),%rsi
  0x00007fd025114892: jne    0x00007fd0251148a1
  0x00007fd025114894: addq   $0x1,0x158(%rdi)
  0x00007fd02511489c: jmpq   0x00007fd025114907
  0x00007fd0251148a1: cmp    0x160(%rdi),%rsi
  0x00007fd0251148a8: jne    0x00007fd0251148b7
  0x00007fd0251148aa: addq   $0x1,0x168(%rdi)
  0x00007fd0251148b2: jmpq   0x00007fd025114907
  0x00007fd0251148b7: cmpq   $0x0,0x150(%rdi)
  0x00007fd0251148c2: jne    0x00007fd0251148db
  0x00007fd0251148c4: mov    %rsi,0x150(%rdi)
  0x00007fd0251148cb: movq   $0x1,0x158(%rdi)
  0x00007fd0251148d6: jmpq   0x00007fd025114907
  0x00007fd0251148db: cmpq   $0x0,0x160(%rdi)
  0x00007fd0251148e6: jne    0x00007fd0251148ff
  0x00007fd0251148e8: mov    %rsi,0x160(%rdi)
  0x00007fd0251148ef: movq   $0x1,0x168(%rdi)
  0x00007fd0251148fa: jmpq   0x00007fd025114907
  0x00007fd0251148ff: addq   $0x1,0x148(%rdi)
  0x00007fd025114907: mov    %rax,%rsi          ;*invokevirtual toString
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@17 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)

  0x00007fd02511490a: nop
  0x00007fd02511490b: nop
  0x00007fd02511490c: nop
  0x00007fd02511490d: movabs $0xffffffffffffffff,%rax
  0x00007fd025114917: callq  0x00007fd025046220  ; OopMap{[184]=Oop off=4092}
                                                ;*invokevirtual toString
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@17 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {virtual_call}
  0x00007fd02511491c: mov    0xb8(%rsp),%rdx
  0x00007fd025114924: movabs $0x7fd02179e588,%rsi  ;   {metadata(method data for {method} {0x00007fd02179d380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd02511492e: addq   $0x1,0x178(%rsi)
  0x00007fd025114936: mov    %rax,%rdx
  0x00007fd025114939: mov    0xb8(%rsp),%rsi    ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@20 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)

  0x00007fd025114941: nop
  0x00007fd025114942: nop
  0x00007fd025114943: nop
  0x00007fd025114944: nop
  0x00007fd025114945: nop
  0x00007fd025114946: nop
  0x00007fd025114947: callq  0x00007fd025046020  ; OopMap{[184]=Oop off=4140}
                                                ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@20 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {optimized virtual_call}
  0x00007fd02511494c: mov    0xb8(%rsp),%rax
  0x00007fd025114954: jmpq   0x00007fd025114d96  ;*athrow
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@72 (line 459)

  0x00007fd025114959: movabs $0x7fd02179e028,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025114963: addq   $0x1,0x158(%rdx)
  0x00007fd02511496b: movabs $0x7fd02179e588,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025114975: mov    0xdc(%rdx),%edi
  0x00007fd02511497b: add    $0x8,%edi
  0x00007fd02511497e: mov    %edi,0xdc(%rdx)
  0x00007fd025114984: movabs $0x7fd02179d380,%rdx  ;   {metadata({method} {0x00007fd02179d380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd02511498e: and    $0x7ffff8,%edi
  0x00007fd025114994: cmp    $0x0,%edi
  0x00007fd025114997: je     0x00007fd025114d03
  0x00007fd02511499d: data16 xchg %ax,%ax
  0x00007fd0251149a0: jmpq   0x00007fd025114d29  ;   {no_reloc}
  0x00007fd0251149a5: add    %al,(%rax)
  0x00007fd0251149a7: add    %al,(%rax)
  0x00007fd0251149a9: add    %cl,-0x75(%rcx)
  0x00007fd0251149ac: rex.RXB (bad) 
  0x00007fd0251149ae: lea    0x20(%rax),%rdi
  0x00007fd0251149b2: cmp    0x70(%r15),%rdi
  0x00007fd0251149b6: ja     0x00007fd025114d33
  0x00007fd0251149bc: mov    %rdi,0x60(%r15)
  0x00007fd0251149c0: mov    0xa8(%rdx),%rcx
  0x00007fd0251149c7: mov    %rcx,(%rax)
  0x00007fd0251149ca: mov    %rdx,%rcx
  0x00007fd0251149cd: shr    $0x3,%rcx
  0x00007fd0251149d1: mov    %ecx,0x8(%rax)
  0x00007fd0251149d4: xor    %rcx,%rcx
  0x00007fd0251149d7: mov    %ecx,0xc(%rax)
  0x00007fd0251149da: xor    %rcx,%rcx
  0x00007fd0251149dd: mov    %rcx,0x10(%rax)
  0x00007fd0251149e1: mov    %rcx,0x18(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@0 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)

  0x00007fd0251149e5: data16 xchg %ax,%ax
  0x00007fd0251149e8: jmpq   0x00007fd025114d4f  ;   {no_reloc}
  0x00007fd0251149ed: add    %al,(%rax)
  0x00007fd0251149ef: add    %al,(%rax)
  0x00007fd0251149f1: add    %cl,-0x77(%rax)
  0x00007fd0251149f4: test   %ah,(%rax,%rcx,8)
  0x00007fd0251149f7: add    %al,(%rax)
  0x00007fd0251149f9: add    %ch,%cl
  0x00007fd0251149fb: pop    %rdx
  0x00007fd0251149fc: add    (%rax),%eax
  0x00007fd0251149fe: add    %cl,-0x75(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@4 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)

  0x00007fd025114a01: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00007fd02179d380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025114a04: mov    %ah,%ch
  0x00007fd025114a06: jns    0x00007fd025114a29
  0x00007fd025114a08: sarb   0x0(%rdi)
  0x00007fd025114a0b: add    %cl,-0x7d(%rax)
  0x00007fd025114a0e: xchg   %cl,(%rax)
  0x00007fd025114a10: add    %eax,(%rax)
  0x00007fd025114a12: add    %al,(%rcx)
  0x00007fd025114a14: movabs $0x670bf0fe0,%rdx  ;   {oop(&quot;Invalid UUID string: &quot;)}
  0x00007fd025114a1e: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@10 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)

  0x00007fd025114a21: mov    %rax,0xc0(%rsp)
  0x00007fd025114a29: nop
  0x00007fd025114a2a: nop
  0x00007fd025114a2b: nop
  0x00007fd025114a2c: nop
  0x00007fd025114a2d: nop
  0x00007fd025114a2e: nop
  0x00007fd025114a2f: callq  0x00007fd025046020  ; OopMap{[192]=Oop [200]=Oop [104]=Oop off=4372}
                                                ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@10 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {optimized virtual_call}
  0x00007fd025114a34: mov    0xc0(%rsp),%rax
  0x00007fd025114a3c: movabs $0x7fd02179e588,%rdx  ;   {metadata(method data for {method} {0x00007fd02179d380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025114a46: mov    0x8(%rax),%eax
  0x00007fd025114a49: shl    $0x3,%rax
  0x00007fd025114a4d: cmp    0x120(%rdx),%rax
  0x00007fd025114a54: jne    0x00007fd025114a63
  0x00007fd025114a56: addq   $0x1,0x128(%rdx)
  0x00007fd025114a5e: jmpq   0x00007fd025114ac9
  0x00007fd025114a63: cmp    0x130(%rdx),%rax
  0x00007fd025114a6a: jne    0x00007fd025114a79
  0x00007fd025114a6c: addq   $0x1,0x138(%rdx)
  0x00007fd025114a74: jmpq   0x00007fd025114ac9
  0x00007fd025114a79: cmpq   $0x0,0x120(%rdx)
  0x00007fd025114a84: jne    0x00007fd025114a9d
  0x00007fd025114a86: mov    %rax,0x120(%rdx)
  0x00007fd025114a8d: movq   $0x1,0x128(%rdx)
  0x00007fd025114a98: jmpq   0x00007fd025114ac9
  0x00007fd025114a9d: cmpq   $0x0,0x130(%rdx)
  0x00007fd025114aa8: jne    0x00007fd025114ac1
  0x00007fd025114aaa: mov    %rax,0x130(%rdx)
  0x00007fd025114ab1: movq   $0x1,0x138(%rdx)
  0x00007fd025114abc: jmpq   0x00007fd025114ac9
  0x00007fd025114ac1: addq   $0x1,0x118(%rdx)
  0x00007fd025114ac9: mov    0x68(%rsp),%rdx
  0x00007fd025114ace: mov    0xc0(%rsp),%rsi    ;*invokevirtual append
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@14 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)

  0x00007fd025114ad6: nop
  0x00007fd025114ad7: nop
  0x00007fd025114ad8: nop
  0x00007fd025114ad9: nop
  0x00007fd025114ada: nop
  0x00007fd025114adb: nop
  0x00007fd025114adc: nop
  0x00007fd025114add: movabs $0xffffffffffffffff,%rax
  0x00007fd025114ae7: callq  0x00007fd025046220  ; OopMap{[200]=Oop off=4556}
                                                ;*invokevirtual append
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@14 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {virtual_call}
  0x00007fd025114aec: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00007fd025114d66
  0x00007fd025114aef: mov    %rax,%rsi
  0x00007fd025114af2: movabs $0x7fd02179e588,%rdi  ;   {metadata(method data for {method} {0x00007fd02179d380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025114afc: mov    0x8(%rsi),%esi
  0x00007fd025114aff: shl    $0x3,%rsi
  0x00007fd025114b03: cmp    0x150(%rdi),%rsi
  0x00007fd025114b0a: jne    0x00007fd025114b19
  0x00007fd025114b0c: addq   $0x1,0x158(%rdi)
  0x00007fd025114b14: jmpq   0x00007fd025114b7f
  0x00007fd025114b19: cmp    0x160(%rdi),%rsi
  0x00007fd025114b20: jne    0x00007fd025114b2f
  0x00007fd025114b22: addq   $0x1,0x168(%rdi)
  0x00007fd025114b2a: jmpq   0x00007fd025114b7f
  0x00007fd025114b2f: cmpq   $0x0,0x150(%rdi)
  0x00007fd025114b3a: jne    0x00007fd025114b53
  0x00007fd025114b3c: mov    %rsi,0x150(%rdi)
  0x00007fd025114b43: movq   $0x1,0x158(%rdi)
  0x00007fd025114b4e: jmpq   0x00007fd025114b7f
  0x00007fd025114b53: cmpq   $0x0,0x160(%rdi)
  0x00007fd025114b5e: jne    0x00007fd025114b77
  0x00007fd025114b60: mov    %rsi,0x160(%rdi)
  0x00007fd025114b67: movq   $0x1,0x168(%rdi)
  0x00007fd025114b72: jmpq   0x00007fd025114b7f
  0x00007fd025114b77: addq   $0x1,0x148(%rdi)
  0x00007fd025114b7f: mov    %rax,%rsi          ;*invokevirtual toString
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@17 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)

  0x00007fd025114b82: nop
  0x00007fd025114b83: nop
  0x00007fd025114b84: nop
  0x00007fd025114b85: movabs $0xffffffffffffffff,%rax
  0x00007fd025114b8f: callq  0x00007fd025046220  ; OopMap{[200]=Oop off=4724}
                                                ;*invokevirtual toString
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@17 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {virtual_call}
  0x00007fd025114b94: mov    0xc8(%rsp),%rdx
  0x00007fd025114b9c: movabs $0x7fd02179e588,%rsi  ;   {metadata(method data for {method} {0x00007fd02179d380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007fd025114ba6: addq   $0x1,0x178(%rsi)
  0x00007fd025114bae: mov    %rax,%rdx
  0x00007fd025114bb1: mov    0xc8(%rsp),%rsi    ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@20 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)

  0x00007fd025114bb9: nop
  0x00007fd025114bba: nop
  0x00007fd025114bbb: nop
  0x00007fd025114bbc: nop
  0x00007fd025114bbd: nop
  0x00007fd025114bbe: nop
  0x00007fd025114bbf: callq  0x00007fd025046020  ; OopMap{[200]=Oop off=4772}
                                                ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@20 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {optimized virtual_call}
  0x00007fd025114bc4: mov    0xc8(%rsp),%rax
  0x00007fd025114bcc: jmpq   0x00007fd025114d96
  0x00007fd025114bd1: mov    %rdi,0x8(%rsp)
  0x00007fd025114bd6: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd025114bde: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop [104]=Oop off=4803}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@-1 (line 455)
                                                ;   {runtime_call}
  0x00007fd025114be3: jmpq   0x00007fd025113966
  0x00007fd025114be8: callq  0x00007fd0250f9a40  ; OopMap{rsi=Oop [104]=Oop off=4813}
                                                ;*invokeinterface length
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ;   {runtime_call}
  0x00007fd025114bed: mov    %rdx,0x8(%rsp)
  0x00007fd025114bf2: movq   $0x6f,(%rsp)
  0x00007fd025114bfa: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop [104]=Oop off=4831}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@111 (line 465)
                                                ;   {runtime_call}
  0x00007fd025114bff: jmpq   0x00007fd025113f39
  0x00007fd025114c04: mov    %rdx,0x8(%rsp)
  0x00007fd025114c09: movq   $0x95,(%rsp)
  0x00007fd025114c11: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop [104]=Oop off=4854}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@149 (line 469)
                                                ;   {runtime_call}
  0x00007fd025114c16: jmpq   0x00007fd0251140bf
  0x00007fd025114c1b: mov    %rdx,0x8(%rsp)
  0x00007fd025114c20: movq   $0xbb,(%rsp)
  0x00007fd025114c28: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop [104]=Oop off=4877}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@187 (line 473)
                                                ;   {runtime_call}
  0x00007fd025114c2d: jmpq   0x00007fd025114252
  0x00007fd025114c32: mov    %rdx,0x8(%rsp)
  0x00007fd025114c37: movq   $0xe1,(%rsp)
  0x00007fd025114c3f: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop [104]=Oop off=4900}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@225 (line 479)
                                                ;   {runtime_call}
  0x00007fd025114c44: jmpq   0x00007fd025114405
  0x00007fd025114c49: mov    %rdx,0x8(%rsp)
  0x00007fd025114c4e: movq   $0x107,(%rsp)
  0x00007fd025114c56: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop [104]=Oop off=4923}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@263 (line 483)
                                                ;   {runtime_call}
  0x00007fd025114c5b: jmpq   0x00007fd0251145a5
  0x00007fd025114c60: mov    %rdx,%rdx
  0x00007fd025114c63: callq  0x00007fd0250fa1a0  ; OopMap{off=4936}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@266 (line 488)
                                                ;   {runtime_call}
  0x00007fd025114c68: jmpq   0x00007fd025114639
  0x00007fd025114c6d: mov    %rdx,0x8(%rsp)
  0x00007fd025114c72: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd025114c7a: callq  0x00007fd0250fdea0  ; OopMap{rax=Oop off=4959}
                                                ;*synchronization entry
                                                ; - java.util.UUID::&lt;init&gt;@-1 (line 128)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@272 (line 488)
                                                ;   {runtime_call}
  0x00007fd025114c7f: jmpq   0x00007fd025114680
  0x00007fd025114c84: mov    %rdx,0x8(%rsp)
  0x00007fd025114c89: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd025114c91: callq  0x00007fd0250fdea0  ; OopMap{rax=Oop off=4982}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.UUID::&lt;init&gt;@1 (line 128)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@272 (line 488)
                                                ;   {runtime_call}
  0x00007fd025114c96: jmpq   0x00007fd0251146c7
  0x00007fd025114c9b: mov    %rdx,0x8(%rsp)
  0x00007fd025114ca0: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd025114ca8: callq  0x00007fd0250fdea0  ; OopMap{[104]=Oop off=5005}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@-1 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {runtime_call}
  0x00007fd025114cad: jmpq   0x00007fd025114722
  0x00007fd025114cb2: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fd025114cbc: mov    $0xa050f00,%eax
  0x00007fd025114cc1: callq  0x00007fd0250fcea0  ; OopMap{[104]=Oop off=5030}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@0 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {runtime_call}
  0x00007fd025114cc6: jmpq   0x00007fd025114728
  0x00007fd025114ccb: mov    %rdx,%rdx
  0x00007fd025114cce: callq  0x00007fd0250fa1a0  ; OopMap{[104]=Oop off=5043}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@0 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {runtime_call}
  0x00007fd025114cd3: jmpq   0x00007fd02511476d
  0x00007fd025114cd8: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fd025114ce2: mov    $0xa050f00,%eax
  0x00007fd025114ce7: callq  0x00007fd0250fcea0  ; OopMap{[104]=Oop rax=Oop off=5068}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@4 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {runtime_call}
  0x00007fd025114cec: jmpq   0x00007fd025114770
  0x00007fd025114cf1: mov    %rdx,%rdx
  0x00007fd025114cf4: callq  0x00007fd0250f9ee0  ; OopMap{[104]=Oop [184]=Oop off=5081}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@4 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {runtime_call}
  0x00007fd025114cf9: jmpq   0x00007fd025114787
  0x00007fd025114cfe: callq  0x00007fd0250f9a40  ; OopMap{[184]=Oop rax=Oop off=5091}
                                                ;*invokevirtual toString
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@17 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {runtime_call}
  0x00007fd025114d03: mov    %rdx,0x8(%rsp)
  0x00007fd025114d08: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd025114d10: callq  0x00007fd0250fdea0  ; OopMap{[104]=Oop off=5109}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@-1 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {runtime_call}
  0x00007fd025114d15: jmpq   0x00007fd02511499d
  0x00007fd025114d1a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fd025114d24: mov    $0xa050f00,%eax
  0x00007fd025114d29: callq  0x00007fd0250fcea0  ; OopMap{[104]=Oop off=5134}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@0 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {runtime_call}
  0x00007fd025114d2e: jmpq   0x00007fd0251149a0
  0x00007fd025114d33: mov    %rdx,%rdx
  0x00007fd025114d36: callq  0x00007fd0250fa1a0  ; OopMap{[104]=Oop off=5147}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@0 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {runtime_call}
  0x00007fd025114d3b: jmpq   0x00007fd0251149e5
  0x00007fd025114d40: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fd025114d4a: mov    $0xa050f00,%eax
  0x00007fd025114d4f: callq  0x00007fd0250fcea0  ; OopMap{[104]=Oop rax=Oop off=5172}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@4 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {runtime_call}
  0x00007fd025114d54: jmpq   0x00007fd0251149e8
  0x00007fd025114d59: mov    %rdx,%rdx
  0x00007fd025114d5c: callq  0x00007fd0250f9ee0  ; OopMap{[104]=Oop [200]=Oop off=5185}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@4 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {runtime_call}
  0x00007fd025114d61: jmpq   0x00007fd0251149ff
  0x00007fd025114d66: callq  0x00007fd0250f9a40  ; OopMap{[200]=Oop rax=Oop off=5195}
                                                ;*invokevirtual toString
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@17 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {runtime_call}
  0x00007fd025114d6b: nop
  0x00007fd025114d6c: nop
  0x00007fd025114d6d: mov    0x2a8(%r15),%rax
  0x00007fd025114d74: movabs $0x0,%r10
  0x00007fd025114d7e: mov    %r10,0x2a8(%r15)
  0x00007fd025114d85: movabs $0x0,%r10
  0x00007fd025114d8f: mov    %r10,0x2b0(%r15)
  0x00007fd025114d96: add    $0xe0,%rsp
  0x00007fd025114d9d: pop    %rbp
  0x00007fd025114d9e: jmpq   0x00007fd02506c4a0  ;   {runtime_call}
  0x00007fd025114da3: hlt    
  0x00007fd025114da4: hlt    
  0x00007fd025114da5: hlt    
  0x00007fd025114da6: hlt    
  0x00007fd025114da7: hlt    
  0x00007fd025114da8: hlt    
  0x00007fd025114da9: hlt    
  0x00007fd025114daa: hlt    
  0x00007fd025114dab: hlt    
  0x00007fd025114dac: hlt    
  0x00007fd025114dad: hlt    
  0x00007fd025114dae: hlt    
  0x00007fd025114daf: hlt    
  0x00007fd025114db0: hlt    
  0x00007fd025114db1: hlt    
  0x00007fd025114db2: hlt    
  0x00007fd025114db3: hlt    
  0x00007fd025114db4: hlt    
  0x00007fd025114db5: hlt    
  0x00007fd025114db6: hlt    
  0x00007fd025114db7: hlt    
  0x00007fd025114db8: hlt    
  0x00007fd025114db9: hlt    
  0x00007fd025114dba: hlt    
  0x00007fd025114dbb: hlt    
  0x00007fd025114dbc: hlt    
  0x00007fd025114dbd: hlt    
  0x00007fd025114dbe: hlt    
  0x00007fd025114dbf: hlt    
[Stub Code]
  0x00007fd025114dc0: nop                       ;   {no_reloc}
  0x00007fd025114dc1: nop
  0x00007fd025114dc2: nop
  0x00007fd025114dc3: nop
  0x00007fd025114dc4: nop
  0x00007fd025114dc5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114dcf: jmpq   0x00007fd025114dcf  ;   {runtime_call}
  0x00007fd025114dd4: nop
  0x00007fd025114dd5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114ddf: jmpq   0x00007fd025114ddf  ;   {runtime_call}
  0x00007fd025114de4: nop
  0x00007fd025114de5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114def: jmpq   0x00007fd025114def  ;   {runtime_call}
  0x00007fd025114df4: nop
  0x00007fd025114df5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114dff: jmpq   0x00007fd025114dff  ;   {runtime_call}
  0x00007fd025114e04: nop
  0x00007fd025114e05: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114e0f: jmpq   0x00007fd025114e0f  ;   {runtime_call}
  0x00007fd025114e14: nop
  0x00007fd025114e15: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114e1f: jmpq   0x00007fd025114e1f  ;   {runtime_call}
  0x00007fd025114e24: nop
  0x00007fd025114e25: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114e2f: jmpq   0x00007fd025114e2f  ;   {runtime_call}
  0x00007fd025114e34: nop
  0x00007fd025114e35: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114e3f: jmpq   0x00007fd025114e3f  ;   {runtime_call}
  0x00007fd025114e44: nop
  0x00007fd025114e45: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114e4f: jmpq   0x00007fd025114e4f  ;   {runtime_call}
  0x00007fd025114e54: nop
  0x00007fd025114e55: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114e5f: jmpq   0x00007fd025114e5f  ;   {runtime_call}
  0x00007fd025114e64: nop
  0x00007fd025114e65: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114e6f: jmpq   0x00007fd025114e6f  ;   {runtime_call}
  0x00007fd025114e74: nop
  0x00007fd025114e75: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114e7f: jmpq   0x00007fd025114e7f  ;   {runtime_call}
  0x00007fd025114e84: nop
  0x00007fd025114e85: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114e8f: jmpq   0x00007fd025114e8f  ;   {runtime_call}
  0x00007fd025114e94: nop
  0x00007fd025114e95: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114e9f: jmpq   0x00007fd025114e9f  ;   {runtime_call}
  0x00007fd025114ea4: nop
  0x00007fd025114ea5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114eaf: jmpq   0x00007fd025114eaf  ;   {runtime_call}
  0x00007fd025114eb4: nop
  0x00007fd025114eb5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114ebf: jmpq   0x00007fd025114ebf  ;   {runtime_call}
  0x00007fd025114ec4: nop
  0x00007fd025114ec5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114ecf: jmpq   0x00007fd025114ecf  ;   {runtime_call}
  0x00007fd025114ed4: nop
  0x00007fd025114ed5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114edf: jmpq   0x00007fd025114edf  ;   {runtime_call}
  0x00007fd025114ee4: nop
  0x00007fd025114ee5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114eef: jmpq   0x00007fd025114eef  ;   {runtime_call}
  0x00007fd025114ef4: nop
  0x00007fd025114ef5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114eff: jmpq   0x00007fd025114eff  ;   {runtime_call}
  0x00007fd025114f04: nop
  0x00007fd025114f05: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114f0f: jmpq   0x00007fd025114f0f  ;   {runtime_call}
  0x00007fd025114f14: nop
  0x00007fd025114f15: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114f1f: jmpq   0x00007fd025114f1f  ;   {runtime_call}
  0x00007fd025114f24: nop
  0x00007fd025114f25: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025114f2f: jmpq   0x00007fd025114f2f  ;   {runtime_call}
[Exception Handler]
  0x00007fd025114f34: callq  0x00007fd0250fb820  ;   {runtime_call}
  0x00007fd025114f39: mov    %rsp,-0x28(%rsp)
  0x00007fd025114f3e: sub    $0x80,%rsp
  0x00007fd025114f45: mov    %rax,0x78(%rsp)
  0x00007fd025114f4a: mov    %rcx,0x70(%rsp)
  0x00007fd025114f4f: mov    %rdx,0x68(%rsp)
  0x00007fd025114f54: mov    %rbx,0x60(%rsp)
  0x00007fd025114f59: mov    %rbp,0x50(%rsp)
  0x00007fd025114f5e: mov    %rsi,0x48(%rsp)
  0x00007fd025114f63: mov    %rdi,0x40(%rsp)
  0x00007fd025114f68: mov    %r8,0x38(%rsp)
  0x00007fd025114f6d: mov    %r9,0x30(%rsp)
  0x00007fd025114f72: mov    %r10,0x28(%rsp)
  0x00007fd025114f77: mov    %r11,0x20(%rsp)
  0x00007fd025114f7c: mov    %r12,0x18(%rsp)
  0x00007fd025114f81: mov    %r13,0x10(%rsp)
  0x00007fd025114f86: mov    %r14,0x8(%rsp)
  0x00007fd025114f8b: mov    %r15,(%rsp)
  0x00007fd025114f8f: movabs $0x7fd03acf9f36,%rdi  ;   {external_word}
  0x00007fd025114f99: movabs $0x7fd025114f39,%rsi  ;   {internal_word}
  0x00007fd025114fa3: mov    %rsp,%rdx
  0x00007fd025114fa6: and    $0xfffffffffffffff0,%rsp
  0x00007fd025114faa: callq  0x00007fd03aa25990  ;   {runtime_call}
  0x00007fd025114faf: hlt    
[Deopt Handler Code]
  0x00007fd025114fb0: movabs $0x7fd025114fb0,%r10  ;   {section_word}
  0x00007fd025114fba: push   %r10
  0x00007fd025114fbc: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd025114fc1: hlt    
  0x00007fd025114fc2: hlt    
  0x00007fd025114fc3: hlt    
  0x00007fd025114fc4: hlt    
  0x00007fd025114fc5: hlt    
  0x00007fd025114fc6: hlt    
  0x00007fd025114fc7: hlt    
<nmethod compile_id='17' compiler='C1' level='3' entry='0x00007fd025113920' size='9600' address='0x00007fd0251135d0' relocation_offset='296' insts_offset='848' stub_offset='6128' scopes_data_offset='6688' scopes_pcs_offset='7928' dependencies_offset='9560' nul_chk_table_offset='9568' oops_offset='6648' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='276' count='354' backedge_count='11328' iicount='354' stamp='0.164'/>
<writer thread='140532334335744'/>
<task_queued compile_id='21' method='java/util/UUID &lt;init&gt; (JJ)V' bytes='15' count='354' iicount='354' level='3' stamp='0.164' comment='tiered' hot_count='354'/>
<writer thread='140531746555648'/>
Decoding compiled method 0x00007fd025118ad0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fd02139edb0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x00007fd025118c20: mov    0x8(%rsi),%r10d
  0x00007fd025118c24: shl    $0x3,%r10
  0x00007fd025118c28: cmp    %r10,%rax
  0x00007fd025118c2b: jne    0x00007fd025045e20  ;   {runtime_call}
  0x00007fd025118c31: data16 xchg %ax,%ax
  0x00007fd025118c34: nopl   0x0(%rax,%rax,1)
  0x00007fd025118c3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fd025118c40: mov    %eax,-0x14000(%rsp)
  0x00007fd025118c47: push   %rbp
  0x00007fd025118c48: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x00007fd025118c4c: test   %edx,%edx
  0x00007fd025118c4e: jl     0x00007fd025118c8d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x00007fd025118c50: mov    0xc(%rsi),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x00007fd025118c54: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x00007fd025118cbd
  0x00007fd025118c59: cmp    %ebp,%edx
  0x00007fd025118c5b: jge    0x00007fd025118ca5  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x00007fd025118c5d: cmp    %ebp,%edx
  0x00007fd025118c5f: jae    0x00007fd025118c77
  0x00007fd025118c61: shl    $0x3,%r10
  0x00007fd025118c65: movzwl 0x10(%r10,%rdx,2),%eax
  0x00007fd025118c6b: add    $0x20,%rsp
  0x00007fd025118c6f: pop    %rbp
  0x00007fd025118c70: test   %eax,0x16ce838a(%rip)        # 0x00007fd03be01000
                                                ;   {poll_return}
  0x00007fd025118c76: retq   
  0x00007fd025118c77: mov    $0xffffffe4,%esi
  0x00007fd025118c7c: mov    %edx,%ebp
  0x00007fd025118c7e: mov    %r10d,(%rsp)
  0x00007fd025118c82: nop
  0x00007fd025118c83: callq  0x00007fd0250051a0  ; OopMap{[0]=NarrowOop off=104}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x00007fd025118c88: callq  0x00007fd03ab0ca20  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x00007fd025118c8d: mov    %rsi,%rbp
  0x00007fd025118c90: mov    %edx,0x4(%rsp)
  0x00007fd025118c94: mov    $0xffffff65,%esi
  0x00007fd025118c99: xchg   %ax,%ax
  0x00007fd025118c9b: callq  0x00007fd0250051a0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x00007fd025118ca0: callq  0x00007fd03ab0ca20  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x00007fd025118ca5: mov    %rsi,(%rsp)
  0x00007fd025118ca9: mov    %edx,0xc(%rsp)
  0x00007fd025118cad: mov    $0xffffff65,%esi
  0x00007fd025118cb2: nop
  0x00007fd025118cb3: callq  0x00007fd0250051a0  ; OopMap{[0]=Oop off=152}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x00007fd025118cb8: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x00007fd025118cbd: mov    $0xfffffff6,%esi
  0x00007fd025118cc2: nop
  0x00007fd025118cc3: callq  0x00007fd0250051a0  ; OopMap{off=168}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x00007fd025118cc8: callq  0x00007fd03ab0ca20  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x00007fd025118ccd: hlt    
  0x00007fd025118cce: hlt    
  0x00007fd025118ccf: hlt    
  0x00007fd025118cd0: hlt    
  0x00007fd025118cd1: hlt    
  0x00007fd025118cd2: hlt    
  0x00007fd025118cd3: hlt    
  0x00007fd025118cd4: hlt    
  0x00007fd025118cd5: hlt    
  0x00007fd025118cd6: hlt    
  0x00007fd025118cd7: hlt    
  0x00007fd025118cd8: hlt    
  0x00007fd025118cd9: hlt    
  0x00007fd025118cda: hlt    
  0x00007fd025118cdb: hlt    
  0x00007fd025118cdc: hlt    
  0x00007fd025118cdd: hlt    
  0x00007fd025118cde: hlt    
  0x00007fd025118cdf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fd025118ce0: jmpq   0x00007fd02506c760  ;   {no_reloc}
[Deopt Handler Code]
  0x00007fd025118ce5: callq  0x00007fd025118cea
  0x00007fd025118cea: subq   $0x5,(%rsp)
  0x00007fd025118cef: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd025118cf4: hlt    
  0x00007fd025118cf5: hlt    
  0x00007fd025118cf6: hlt    
  0x00007fd025118cf7: hlt    
<nmethod compile_id='16' compiler='C2' level='4' entry='0x00007fd025118c20' size='928' address='0x00007fd025118ad0' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='664' dependencies_offset='904' nul_chk_table_offset='912' method='java/lang/String charAt (I)C' bytes='29' count='29225' iicount='29225' stamp='0.164'/>
<make_not_entrant thread='140531746555648' compile_id='6' compiler='C1' level='3' stamp='0.164'/>
<writer thread='140532334335744'/>
<task_queued compile_id='22' method='java/lang/String length ()I' bytes='6' count='1536' iicount='1536' level='1' stamp='0.165' comment='tiered' hot_count='1536'/>
<writer thread='140531748660992'/>
Decoding compiled method 0x00007fd025113250:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fd02179d460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;
  # parm0:    rsi       = char
  #           [sp+0x30]  (sp of caller)
  0x00007fd0251133a0: mov    %eax,-0x14000(%rsp)
  0x00007fd0251133a7: push   %rbp
  0x00007fd0251133a8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@-1 (line 496)

  0x00007fd0251133ac: cmp    $0x30,%esi
  0x00007fd0251133af: jl     0x00007fd0251133d8  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)

  0x00007fd0251133b1: cmp    $0x39,%esi
  0x00007fd0251133b4: jle    0x00007fd0251133c7  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)

  0x00007fd0251133b6: cmp    $0x61,%esi
  0x00007fd0251133b9: jl     0x00007fd0251133ed  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)

  0x00007fd0251133bb: cmp    $0x66,%esi
  0x00007fd0251133be: jg     0x00007fd025113401  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)

  0x00007fd0251133c0: mov    %esi,%eax
  0x00007fd0251133c2: add    $0xffffffa9,%eax   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)

  0x00007fd0251133c5: jmp    0x00007fd0251133cc
  0x00007fd0251133c7: mov    %esi,%eax
  0x00007fd0251133c9: add    $0xffffffd0,%eax   ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@-1 (line 496)

  0x00007fd0251133cc: add    $0x20,%rsp
  0x00007fd0251133d0: pop    %rbp
  0x00007fd0251133d1: test   %eax,0x16cedc29(%rip)        # 0x00007fd03be01000
                                                ;   {poll_return}
  0x00007fd0251133d7: retq   
  0x00007fd0251133d8: mov    %esi,(%rsp)
  0x00007fd0251133db: mov    $0xffffff65,%esi
  0x00007fd0251133e0: data16 xchg %ax,%ax
  0x00007fd0251133e3: callq  0x00007fd0250051a0  ; OopMap{off=72}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ;   {runtime_call}
  0x00007fd0251133e8: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ;   {runtime_call}
  0x00007fd0251133ed: mov    %esi,(%rsp)
  0x00007fd0251133f0: mov    $0xffffff65,%esi
  0x00007fd0251133f5: xchg   %ax,%ax
  0x00007fd0251133f7: callq  0x00007fd0250051a0  ; OopMap{off=92}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ;   {runtime_call}
  0x00007fd0251133fc: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ;   {runtime_call}
  0x00007fd025113401: mov    %esi,(%rsp)
  0x00007fd025113404: mov    $0xffffff65,%esi
  0x00007fd025113409: xchg   %ax,%ax
  0x00007fd02511340b: callq  0x00007fd0250051a0  ; OopMap{off=112}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ;   {runtime_call}
  0x00007fd025113410: callq  0x00007fd03ab0ca20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ;   {runtime_call}
  0x00007fd025113415: hlt    
  0x00007fd025113416: hlt    
  0x00007fd025113417: hlt    
  0x00007fd025113418: hlt    
  0x00007fd025113419: hlt    
  0x00007fd02511341a: hlt    
  0x00007fd02511341b: hlt    
  0x00007fd02511341c: hlt    
  0x00007fd02511341d: hlt    
  0x00007fd02511341e: hlt    
  0x00007fd02511341f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fd025113420: jmpq   0x00007fd02506c760  ;   {no_reloc}
[Deopt Handler Code]
  0x00007fd025113425: callq  0x00007fd02511342a
  0x00007fd02511342a: subq   $0x5,(%rsp)
  0x00007fd02511342f: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd025113434: hlt    
  0x00007fd025113435: hlt    
  0x00007fd025113436: hlt    
  0x00007fd025113437: hlt    
<nmethod compile_id='18' compiler='C2' level='4' entry='0x00007fd0251133a0' size='832' address='0x00007fd025113250' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='504' scopes_pcs_offset='584' dependencies_offset='824' oops_offset='488' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='59' count='26824' iicount='26824' stamp='0.165'/>
<make_not_entrant thread='140531748660992' compile_id='15' compiler='C1' level='3' stamp='0.165'/>
<writer thread='140532334335744'/>
<task_queued compile_id='23' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='276' count='839' backedge_count='29246' iicount='839' stamp='0.165' comment='tiered' hot_count='839'/>
<writer thread='140531745502976'/>
Decoding compiled method 0x00007fd025112e90:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fd02179b428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fd025113000: mov    0x8(%rsi),%r10d
  0x00007fd025113004: shl    $0x3,%r10
  0x00007fd025113008: cmp    %rax,%r10
  0x00007fd02511300b: jne    0x00007fd025045e20  ;   {runtime_call}
  0x00007fd025113011: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fd02511301c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fd025113020: mov    %eax,-0x14000(%rsp)
  0x00007fd025113027: push   %rbp
  0x00007fd025113028: sub    $0x30,%rsp
  0x00007fd02511302c: movabs $0x7fd02179e750,%rdi  ;   {metadata(method data for {method} {0x00007fd02179b428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd025113036: mov    0xdc(%rdi),%ebx
  0x00007fd02511303c: add    $0x8,%ebx
  0x00007fd02511303f: mov    %ebx,0xdc(%rdi)
  0x00007fd025113045: movabs $0x7fd02179b428,%rdi  ;   {metadata({method} {0x00007fd02179b428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd02511304f: and    $0x1ff8,%ebx
  0x00007fd025113055: cmp    $0x0,%ebx
  0x00007fd025113058: je     0x00007fd025113090  ;*ldc
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@0 (line 21)

  0x00007fd02511305e: movabs $0x7fd02179e750,%rsi  ;   {metadata(method data for {method} {0x00007fd02179b428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd025113068: addq   $0x1,0x108(%rsi)
  0x00007fd025113070: movabs $0x670be7490,%rsi  ;*invokestatic uuidFromCharSequence
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {oop(&quot;ba226cf7-d156-4b18-a78a-094736208cc9&quot;)}
  0x00007fd02511307a: nop
  0x00007fd02511307b: nop
  0x00007fd02511307c: nop
  0x00007fd02511307d: nop
  0x00007fd02511307e: nop
  0x00007fd02511307f: callq  0x00007fd025046420  ; OopMap{off=132}
                                                ;*invokestatic uuidFromCharSequence
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {static_call}
  0x00007fd025113084: add    $0x30,%rsp
  0x00007fd025113088: pop    %rbp
  0x00007fd025113089: test   %eax,0x16cee071(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd02511308f: retq   
  0x00007fd025113090: mov    %rdi,0x8(%rsp)
  0x00007fd025113095: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd02511309d: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop off=162}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@-1 (line 21)
                                                ;   {runtime_call}
  0x00007fd0251130a2: jmp    0x00007fd02511305e
  0x00007fd0251130a4: nop
  0x00007fd0251130a5: nop
  0x00007fd0251130a6: mov    0x2a8(%r15),%rax
  0x00007fd0251130ad: movabs $0x0,%r10
  0x00007fd0251130b7: mov    %r10,0x2a8(%r15)
  0x00007fd0251130be: movabs $0x0,%r10
  0x00007fd0251130c8: mov    %r10,0x2b0(%r15)
  0x00007fd0251130cf: add    $0x30,%rsp
  0x00007fd0251130d3: pop    %rbp
  0x00007fd0251130d4: jmpq   0x00007fd02506c4a0  ;   {runtime_call}
  0x00007fd0251130d9: hlt    
  0x00007fd0251130da: hlt    
  0x00007fd0251130db: hlt    
  0x00007fd0251130dc: hlt    
  0x00007fd0251130dd: hlt    
  0x00007fd0251130de: hlt    
  0x00007fd0251130df: hlt    
[Stub Code]
  0x00007fd0251130e0: nop                       ;   {no_reloc}
  0x00007fd0251130e1: nop
  0x00007fd0251130e2: nop
  0x00007fd0251130e3: nop
  0x00007fd0251130e4: nop
  0x00007fd0251130e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd0251130ef: jmpq   0x00007fd0251130ef  ;   {runtime_call}
[Exception Handler]
  0x00007fd0251130f4: callq  0x00007fd0250fb820  ;   {runtime_call}
  0x00007fd0251130f9: mov    %rsp,-0x28(%rsp)
  0x00007fd0251130fe: sub    $0x80,%rsp
  0x00007fd025113105: mov    %rax,0x78(%rsp)
  0x00007fd02511310a: mov    %rcx,0x70(%rsp)
  0x00007fd02511310f: mov    %rdx,0x68(%rsp)
  0x00007fd025113114: mov    %rbx,0x60(%rsp)
  0x00007fd025113119: mov    %rbp,0x50(%rsp)
  0x00007fd02511311e: mov    %rsi,0x48(%rsp)
  0x00007fd025113123: mov    %rdi,0x40(%rsp)
  0x00007fd025113128: mov    %r8,0x38(%rsp)
  0x00007fd02511312d: mov    %r9,0x30(%rsp)
  0x00007fd025113132: mov    %r10,0x28(%rsp)
  0x00007fd025113137: mov    %r11,0x20(%rsp)
  0x00007fd02511313c: mov    %r12,0x18(%rsp)
  0x00007fd025113141: mov    %r13,0x10(%rsp)
  0x00007fd025113146: mov    %r14,0x8(%rsp)
  0x00007fd02511314b: mov    %r15,(%rsp)
  0x00007fd02511314f: movabs $0x7fd03acf9f36,%rdi  ;   {external_word}
  0x00007fd025113159: movabs $0x7fd0251130f9,%rsi  ;   {internal_word}
  0x00007fd025113163: mov    %rsp,%rdx
  0x00007fd025113166: and    $0xfffffffffffffff0,%rsp
  0x00007fd02511316a: callq  0x00007fd03aa25990  ;   {runtime_call}
  0x00007fd02511316f: hlt    
[Deopt Handler Code]
  0x00007fd025113170: movabs $0x7fd025113170,%r10  ;   {section_word}
  0x00007fd02511317a: push   %r10
  0x00007fd02511317c: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd025113181: hlt    
  0x00007fd025113182: hlt    
  0x00007fd025113183: hlt    
  0x00007fd025113184: hlt    
  0x00007fd025113185: hlt    
  0x00007fd025113186: hlt    
  0x00007fd025113187: hlt    
<nmethod compile_id='19' compiler='C1' level='3' entry='0x00007fd025113000' size='912' address='0x00007fd025112e90' relocation_offset='296' insts_offset='368' stub_offset='592' scopes_data_offset='776' scopes_pcs_offset='808' dependencies_offset='904' oops_offset='760' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='2212' iicount='2213' stamp='0.166'/>
Decoding compiled method 0x00007fd025112b50:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fd02139ec60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fd025112ca0: mov    0x8(%rsi),%r10d
  0x00007fd025112ca4: shl    $0x3,%r10
  0x00007fd025112ca8: cmp    %rax,%r10
  0x00007fd025112cab: jne    0x00007fd025045e20  ;   {runtime_call}
  0x00007fd025112cb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fd025112cbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fd025112cc0: mov    %eax,-0x14000(%rsp)
  0x00007fd025112cc7: push   %rbp
  0x00007fd025112cc8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.String::length@0 (line 623)

  0x00007fd025112ccc: mov    0xc(%rsi),%eax
  0x00007fd025112ccf: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x00007fd025112cd3: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x00007fd025112ce2
  0x00007fd025112cd6: add    $0x30,%rsp
  0x00007fd025112cda: pop    %rbp
  0x00007fd025112cdb: test   %eax,0x16cee41f(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd025112ce1: retq   
  0x00007fd025112ce2: callq  0x00007fd0250f9a40  ; OopMap{off=71}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x00007fd025112ce7: nop
  0x00007fd025112ce8: nop
  0x00007fd025112ce9: mov    0x2a8(%r15),%rax
  0x00007fd025112cf0: movabs $0x0,%r10
  0x00007fd025112cfa: mov    %r10,0x2a8(%r15)
  0x00007fd025112d01: movabs $0x0,%r10
  0x00007fd025112d0b: mov    %r10,0x2b0(%r15)
  0x00007fd025112d12: add    $0x30,%rsp
  0x00007fd025112d16: pop    %rbp
  0x00007fd025112d17: jmpq   0x00007fd02506c4a0  ;   {runtime_call}
  0x00007fd025112d1c: hlt    
  0x00007fd025112d1d: hlt    
  0x00007fd025112d1e: hlt    
  0x00007fd025112d1f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fd025112d20: callq  0x00007fd0250fb820  ;   {no_reloc}
  0x00007fd025112d25: mov    %rsp,-0x28(%rsp)
  0x00007fd025112d2a: sub    $0x80,%rsp
  0x00007fd025112d31: mov    %rax,0x78(%rsp)
  0x00007fd025112d36: mov    %rcx,0x70(%rsp)
  0x00007fd025112d3b: mov    %rdx,0x68(%rsp)
  0x00007fd025112d40: mov    %rbx,0x60(%rsp)
  0x00007fd025112d45: mov    %rbp,0x50(%rsp)
  0x00007fd025112d4a: mov    %rsi,0x48(%rsp)
  0x00007fd025112d4f: mov    %rdi,0x40(%rsp)
  0x00007fd025112d54: mov    %r8,0x38(%rsp)
  0x00007fd025112d59: mov    %r9,0x30(%rsp)
  0x00007fd025112d5e: mov    %r10,0x28(%rsp)
  0x00007fd025112d63: mov    %r11,0x20(%rsp)
  0x00007fd025112d68: mov    %r12,0x18(%rsp)
  0x00007fd025112d6d: mov    %r13,0x10(%rsp)
  0x00007fd025112d72: mov    %r14,0x8(%rsp)
  0x00007fd025112d77: mov    %r15,(%rsp)
  0x00007fd025112d7b: movabs $0x7fd03acf9f36,%rdi  ;   {external_word}
  0x00007fd025112d85: movabs $0x7fd025112d25,%rsi  ;   {internal_word}
  0x00007fd025112d8f: mov    %rsp,%rdx
  0x00007fd025112d92: and    $0xfffffffffffffff0,%rsp
  0x00007fd025112d96: callq  0x00007fd03aa25990  ;   {runtime_call}
  0x00007fd025112d9b: hlt    
[Deopt Handler Code]
  0x00007fd025112d9c: movabs $0x7fd025112d9c,%r10  ;   {section_word}
  0x00007fd025112da6: push   %r10
  0x00007fd025112da8: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd025112dad: hlt    
  0x00007fd025112dae: hlt    
  0x00007fd025112daf: hlt    
<nmethod compile_id='22' compiler='C1' level='1' entry='0x00007fd025112ca0' size='768' address='0x00007fd025112b50' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='648' dependencies_offset='744' nul_chk_table_offset='752' method='java/lang/String length ()I' bytes='6' count='4238' iicount='4239' stamp='0.166'/>
<make_not_entrant thread='140531745502976' compile_id='9' compiler='C1' level='3' stamp='0.166'/>
Decoding compiled method 0x00007fd025112750:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fd0215c95d0} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;
  # this:     rsi:rsi   = &apos;java/util/UUID&apos;
  # parm0:    rdx:rdx   = long
  # parm1:    rcx:rcx   = long
  #           [sp+0x40]  (sp of caller)
  0x00007fd0251128c0: mov    0x8(%rsi),%r10d
  0x00007fd0251128c4: shl    $0x3,%r10
  0x00007fd0251128c8: cmp    %rax,%r10
  0x00007fd0251128cb: jne    0x00007fd025045e20  ;   {runtime_call}
  0x00007fd0251128d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fd0251128dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fd0251128e0: mov    %eax,-0x14000(%rsp)
  0x00007fd0251128e7: push   %rbp
  0x00007fd0251128e8: sub    $0x30,%rsp
  0x00007fd0251128ec: movabs $0x7fd0215ca820,%rdi  ;   {metadata(method data for {method} {0x00007fd0215c95d0} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007fd0251128f6: mov    0xdc(%rdi),%ebx
  0x00007fd0251128fc: add    $0x8,%ebx
  0x00007fd0251128ff: mov    %ebx,0xdc(%rdi)
  0x00007fd025112905: movabs $0x7fd0215c95d0,%rdi  ;   {metadata({method} {0x00007fd0215c95d0} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007fd02511290f: and    $0x1ff8,%ebx
  0x00007fd025112915: cmp    $0x0,%ebx
  0x00007fd025112918: je     0x00007fd025112979  ;*aload_0
                                                ; - java.util.UUID::&lt;init&gt;@0 (line 128)

  0x00007fd02511291e: mov    %rsi,%rdi
  0x00007fd025112921: movabs $0x7fd0215ca820,%rbx  ;   {metadata(method data for {method} {0x00007fd0215c95d0} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007fd02511292b: addq   $0x1,0x108(%rbx)
  0x00007fd025112933: movabs $0x7fd021511108,%rdi  ;   {metadata(method data for {method} {0x00007fd02139b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fd02511293d: mov    0xdc(%rdi),%ebx
  0x00007fd025112943: add    $0x8,%ebx
  0x00007fd025112946: mov    %ebx,0xdc(%rdi)
  0x00007fd02511294c: movabs $0x7fd02139b480,%rdi  ;   {metadata({method} {0x00007fd02139b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fd025112956: and    $0x7ffff8,%ebx
  0x00007fd02511295c: cmp    $0x0,%ebx
  0x00007fd02511295f: je     0x00007fd02511298d
  0x00007fd025112965: mov    %rdx,0x10(%rsi)    ;*putfield mostSigBits
                                                ; - java.util.UUID::&lt;init&gt;@6 (line 129)

  0x00007fd025112969: mov    %rcx,0x18(%rsi)    ;*putfield leastSigBits
                                                ; - java.util.UUID::&lt;init&gt;@11 (line 130)

  0x00007fd02511296d: add    $0x30,%rsp
  0x00007fd025112971: pop    %rbp
  0x00007fd025112972: test   %eax,0x16cee788(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd025112978: retq   
  0x00007fd025112979: mov    %rdi,0x8(%rsp)
  0x00007fd02511297e: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd025112986: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop off=203}
                                                ;*synchronization entry
                                                ; - java.util.UUID::&lt;init&gt;@-1 (line 128)
                                                ;   {runtime_call}
  0x00007fd02511298b: jmp    0x00007fd02511291e
  0x00007fd02511298d: mov    %rdi,0x8(%rsp)
  0x00007fd025112992: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd02511299a: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop off=223}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.UUID::&lt;init&gt;@1 (line 128)
                                                ;   {runtime_call}
  0x00007fd02511299f: jmp    0x00007fd025112965
  0x00007fd0251129a1: nop
  0x00007fd0251129a2: nop
  0x00007fd0251129a3: mov    0x2a8(%r15),%rax
  0x00007fd0251129aa: movabs $0x0,%r10
  0x00007fd0251129b4: mov    %r10,0x2a8(%r15)
  0x00007fd0251129bb: movabs $0x0,%r10
  0x00007fd0251129c5: mov    %r10,0x2b0(%r15)
  0x00007fd0251129cc: add    $0x30,%rsp
  0x00007fd0251129d0: pop    %rbp
  0x00007fd0251129d1: jmpq   0x00007fd02506c4a0  ;   {runtime_call}
  0x00007fd0251129d6: hlt    
  0x00007fd0251129d7: hlt    
  0x00007fd0251129d8: hlt    
  0x00007fd0251129d9: hlt    
  0x00007fd0251129da: hlt    
  0x00007fd0251129db: hlt    
  0x00007fd0251129dc: hlt    
  0x00007fd0251129dd: hlt    
  0x00007fd0251129de: hlt    
  0x00007fd0251129df: hlt    
[Exception Handler]
[Stub Code]
  0x00007fd0251129e0: callq  0x00007fd0250fb820  ;   {no_reloc}
  0x00007fd0251129e5: mov    %rsp,-0x28(%rsp)
  0x00007fd0251129ea: sub    $0x80,%rsp
  0x00007fd0251129f1: mov    %rax,0x78(%rsp)
  0x00007fd0251129f6: mov    %rcx,0x70(%rsp)
  0x00007fd0251129fb: mov    %rdx,0x68(%rsp)
  0x00007fd025112a00: mov    %rbx,0x60(%rsp)
  0x00007fd025112a05: mov    %rbp,0x50(%rsp)
  0x00007fd025112a0a: mov    %rsi,0x48(%rsp)
  0x00007fd025112a0f: mov    %rdi,0x40(%rsp)
  0x00007fd025112a14: mov    %r8,0x38(%rsp)
  0x00007fd025112a19: mov    %r9,0x30(%rsp)
  0x00007fd025112a1e: mov    %r10,0x28(%rsp)
  0x00007fd025112a23: mov    %r11,0x20(%rsp)
  0x00007fd025112a28: mov    %r12,0x18(%rsp)
  0x00007fd025112a2d: mov    %r13,0x10(%rsp)
  0x00007fd025112a32: mov    %r14,0x8(%rsp)
  0x00007fd025112a37: mov    %r15,(%rsp)
  0x00007fd025112a3b: movabs $0x7fd03acf9f36,%rdi  ;   {external_word}
  0x00007fd025112a45: movabs $0x7fd0251129e5,%rsi  ;   {internal_word}
  0x00007fd025112a4f: mov    %rsp,%rdx
  0x00007fd025112a52: and    $0xfffffffffffffff0,%rsp
  0x00007fd025112a56: callq  0x00007fd03aa25990  ;   {runtime_call}
  0x00007fd025112a5b: hlt    
[Deopt Handler Code]
  0x00007fd025112a5c: movabs $0x7fd025112a5c,%r10  ;   {section_word}
  0x00007fd025112a66: push   %r10
  0x00007fd025112a68: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd025112a6d: hlt    
  0x00007fd025112a6e: hlt    
  0x00007fd025112a6f: hlt    
<nmethod compile_id='21' compiler='C1' level='3' entry='0x00007fd0251128c0' size='992' address='0x00007fd025112750' relocation_offset='296' insts_offset='368' stub_offset='656' scopes_data_offset='816' scopes_pcs_offset='872' dependencies_offset='984' method='java/util/UUID &lt;init&gt; (JJ)V' bytes='15' count='5474' iicount='5474' stamp='0.167'/>
<writer thread='140532334335744'/>
<task_queued compile_id='24' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='5475' iicount='5475' stamp='0.167' comment='tiered' hot_count='5475'/>
<writer thread='140531746555648'/>
Decoding compiled method 0x00007fd025118e90:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fd02179b428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fd025119040: mov    0x8(%rsi),%r10d
  0x00007fd025119044: shl    $0x3,%r10
  0x00007fd025119048: cmp    %r10,%rax
  0x00007fd02511904b: jne    0x00007fd025045e20  ;   {runtime_call}
  0x00007fd025119051: data16 xchg %ax,%ax
  0x00007fd025119054: nopl   0x0(%rax,%rax,1)
  0x00007fd02511905c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fd025119060: mov    %eax,-0x14000(%rsp)
  0x00007fd025119067: push   %rbp
  0x00007fd025119068: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@-1 (line 21)

  0x00007fd02511906c: movabs $0x670be74a8,%r9   ;   {oop([C)}
  0x00007fd025119076: movzwl 0x20(%r9),%ebp     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@19 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511907b: cmp    $0x2d,%ebp
  0x00007fd02511907e: jne    0x00007fd0251196f1  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@26 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119084: movzwl 0x2a(%r9),%ebp     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@32 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119089: cmp    $0x2d,%ebp
  0x00007fd02511908c: jne    0x00007fd025119701  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@39 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119092: movzwl 0x34(%r9),%ebp     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@45 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119097: cmp    $0x2d,%ebp
  0x00007fd02511909a: jne    0x00007fd025119711  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@52 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251190a0: movzwl 0x3e(%r9),%ebp     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@58 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251190a5: cmp    $0x2d,%ebp
  0x00007fd0251190a8: jne    0x00007fd0251197dd  ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@65 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251190ae: movzwl 0x10(%r9),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251190b3: xor    %edx,%edx
  0x00007fd0251190b5: cmp    $0x30,%r11d
  0x00007fd0251190b9: jl     0x00007fd025119721  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251190bf: cmp    $0x39,%r11d
  0x00007fd0251190c3: jle    0x00007fd0251190df  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251190c5: cmp    $0x61,%r11d
  0x00007fd0251190c9: jl     0x00007fd02511980d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251190cf: cmp    $0x66,%r11d
  0x00007fd0251190d3: jg     0x00007fd0251198c9  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251190d9: add    $0xffffffa9,%r11d  ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251190dd: jmp    0x00007fd0251190e3
  0x00007fd0251190df: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251190e3: movslq %r11d,%r10         ;*i2l  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@101 (line 467)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251190e6: mov    $0x1,%ecx
  0x00007fd0251190eb: xor    %r8d,%r8d
  0x00007fd0251190ee: jmp    0x00007fd025119106
  0x00007fd0251190f0: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251190f4: movslq %r11d,%r11
  0x00007fd0251190f7: shl    $0x4,%r10
  0x00007fd0251190fb: or     %r11,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@102 (line 467)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251190fe: add    $0x2,%ecx          ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 465)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119101: cmp    $0x7,%ecx
  0x00007fd025119104: jge    0x00007fd025119175  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@83 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119106: movzwl 0x10(%r9,%rcx,2),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511910c: cmp    $0x30,%edi
  0x00007fd02511910f: jl     0x00007fd025119635  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119115: cmp    $0x39,%edi
  0x00007fd025119118: jle    0x00007fd025119131  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511911a: cmp    $0x61,%edi
  0x00007fd02511911d: jl     0x00007fd0251196a9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119123: cmp    $0x66,%edi
  0x00007fd025119126: jg     0x00007fd0251196cd  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511912c: add    $0xffffffa9,%edi   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511912f: jmp    0x00007fd025119134
  0x00007fd025119131: add    $0xffffffd0,%edi   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119134: movzwl 0x12(%r9,%rcx,2),%r11d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511913a: mov    %ecx,%edx
  0x00007fd02511913c: inc    %edx               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 465)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511913e: movslq %edi,%rbx
  0x00007fd025119141: shl    $0x4,%r10
  0x00007fd025119145: or     %rbx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@102 (line 467)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119148: cmp    $0x30,%r11d
  0x00007fd02511914c: jl     0x00007fd02511963a  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119152: cmp    $0x39,%r11d
  0x00007fd025119156: jle    0x00007fd0251190f0  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119158: cmp    $0x61,%r11d
  0x00007fd02511915c: jl     0x00007fd0251196ae  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119162: cmp    $0x66,%r11d
  0x00007fd025119166: jg     0x00007fd0251196d2  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511916c: add    $0xffffffa9,%r11d  ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119170: jmpq   0x00007fd0251190f4
  0x00007fd025119175: cmp    $0x8,%ecx
  0x00007fd025119178: jge    0x00007fd0251191c1
  0x00007fd02511917a: xchg   %ax,%ax            ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@83 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511917c: movzwl 0x10(%r9,%rcx,2),%r11d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119182: cmp    $0x30,%r11d
  0x00007fd025119186: jl     0x00007fd02511963c  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511918c: cmp    $0x39,%r11d
  0x00007fd025119190: jle    0x00007fd0251191ac  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119192: cmp    $0x61,%r11d
  0x00007fd025119196: jl     0x00007fd0251196b0  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511919c: cmp    $0x66,%r11d
  0x00007fd0251191a0: jg     0x00007fd0251196d4  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251191a6: add    $0xffffffa9,%r11d  ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251191aa: jmp    0x00007fd0251191b0
  0x00007fd0251191ac: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251191b0: movslq %r11d,%r11
  0x00007fd0251191b3: shl    $0x4,%r10
  0x00007fd0251191b7: or     %r11,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@102 (line 467)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251191ba: inc    %ecx               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 465)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251191bc: cmp    $0x8,%ecx
  0x00007fd0251191bf: jl     0x00007fd02511917c  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@121 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251191c1: movzwl 0x22(%r9),%ebx     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251191c6: cmp    $0x30,%ebx
  0x00007fd0251191c9: jl     0x00007fd025119729  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251191cf: cmp    $0x39,%ebx
  0x00007fd0251191d2: jle    0x00007fd0251191eb  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251191d4: cmp    $0x61,%ebx
  0x00007fd0251191d7: jl     0x00007fd025119815  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251191dd: cmp    $0x66,%ebx
  0x00007fd0251191e0: jg     0x00007fd0251198d1  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251191e6: add    $0xffffffa9,%ebx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251191e9: jmp    0x00007fd0251191ee
  0x00007fd0251191eb: add    $0xffffffd0,%ebx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251191ee: movzwl 0x24(%r9),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251191f3: shl    $0x4,%r10
  0x00007fd0251191f7: movslq %ebx,%rcx
  0x00007fd0251191fa: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 471)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251191fd: cmp    $0x30,%r11d
  0x00007fd025119201: jl     0x00007fd02511973c  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119207: cmp    $0x39,%r11d
  0x00007fd02511920b: jle    0x00007fd025119227  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511920d: cmp    $0x61,%r11d
  0x00007fd025119211: jl     0x00007fd025119828  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119217: cmp    $0x66,%r11d
  0x00007fd02511921b: jg     0x00007fd0251198e4  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119221: add    $0xffffffa9,%r11d  ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119225: jmp    0x00007fd02511922b
  0x00007fd025119227: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511922b: movzwl 0x26(%r9),%ebx     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119230: shl    $0x4,%r10
  0x00007fd025119234: movslq %r11d,%r11
  0x00007fd025119237: or     %r11,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 471)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511923a: cmp    $0x30,%ebx
  0x00007fd02511923d: jl     0x00007fd025119731  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119243: cmp    $0x39,%ebx
  0x00007fd025119246: jle    0x00007fd02511925f  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119248: cmp    $0x61,%ebx
  0x00007fd02511924b: jl     0x00007fd02511981d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119251: cmp    $0x66,%ebx
  0x00007fd025119254: jg     0x00007fd0251198d9  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511925a: add    $0xffffffa9,%ebx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511925d: jmp    0x00007fd025119262
  0x00007fd02511925f: add    $0xffffffd0,%ebx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119262: movzwl 0x28(%r9),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119267: shl    $0x4,%r10
  0x00007fd02511926b: movslq %ebx,%rcx
  0x00007fd02511926e: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 471)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119271: cmp    $0x30,%r11d
  0x00007fd025119275: jl     0x00007fd025119744  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511927b: cmp    $0x39,%r11d
  0x00007fd02511927f: jle    0x00007fd02511929b  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119281: cmp    $0x61,%r11d
  0x00007fd025119285: jl     0x00007fd025119830  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511928b: cmp    $0x66,%r11d
  0x00007fd02511928f: jg     0x00007fd0251198ec  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119295: add    $0xffffffa9,%r11d  ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119299: jmp    0x00007fd02511929f
  0x00007fd02511929b: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511929f: movzwl 0x2c(%r9),%ecx     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251192a4: shl    $0x4,%r10
  0x00007fd0251192a8: movslq %r11d,%r11
  0x00007fd0251192ab: or     %r11,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 471)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251192ae: cmp    $0x30,%ecx
  0x00007fd0251192b1: jl     0x00007fd025119765  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251192b7: cmp    $0x39,%ecx
  0x00007fd0251192ba: jle    0x00007fd0251192d3  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251192bc: cmp    $0x61,%ecx
  0x00007fd0251192bf: jl     0x00007fd025119851  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251192c5: cmp    $0x66,%ecx
  0x00007fd0251192c8: jg     0x00007fd02511990d  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251192ce: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251192d1: jmp    0x00007fd0251192d6
  0x00007fd0251192d3: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251192d6: movzwl 0x2e(%r9),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251192db: shl    $0x4,%r10
  0x00007fd0251192df: movslq %ecx,%rcx
  0x00007fd0251192e2: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 475)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251192e5: cmp    $0x30,%r11d
  0x00007fd0251192e9: jl     0x00007fd025119778  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251192ef: cmp    $0x39,%r11d
  0x00007fd0251192f3: jle    0x00007fd02511930f  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251192f5: cmp    $0x61,%r11d
  0x00007fd0251192f9: jl     0x00007fd025119864  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251192ff: cmp    $0x66,%r11d
  0x00007fd025119303: jg     0x00007fd025119920  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119309: add    $0xffffffa9,%r11d  ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511930d: jmp    0x00007fd025119313
  0x00007fd02511930f: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119313: movzwl 0x30(%r9),%ecx     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119318: shl    $0x4,%r10
  0x00007fd02511931c: movslq %r11d,%r11
  0x00007fd02511931f: or     %r11,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 475)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119322: cmp    $0x30,%ecx
  0x00007fd025119325: jl     0x00007fd02511976d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511932b: cmp    $0x39,%ecx
  0x00007fd02511932e: jle    0x00007fd025119347  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119330: cmp    $0x61,%ecx
  0x00007fd025119333: jl     0x00007fd025119859  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119339: cmp    $0x66,%ecx
  0x00007fd02511933c: jg     0x00007fd025119915  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119342: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119345: jmp    0x00007fd02511934a
  0x00007fd025119347: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511934a: movzwl 0x32(%r9),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511934f: shl    $0x4,%r10
  0x00007fd025119353: movslq %ecx,%rcx
  0x00007fd025119356: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 475)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119359: cmp    $0x30,%r11d
  0x00007fd02511935d: jl     0x00007fd025119780  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119363: cmp    $0x39,%r11d
  0x00007fd025119367: jle    0x00007fd025119383  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119369: cmp    $0x61,%r11d
  0x00007fd02511936d: jl     0x00007fd02511986c  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119373: cmp    $0x66,%r11d
  0x00007fd025119377: jg     0x00007fd025119928  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511937d: add    $0xffffffa9,%r11d  ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119381: jmp    0x00007fd025119387
  0x00007fd025119383: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119387: movzwl 0x36(%r9),%ecx     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511938c: shl    $0x4,%r10
  0x00007fd025119390: movslq %r11d,%r11
  0x00007fd025119393: or     %r11,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 475)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119396: cmp    $0x30,%ecx
  0x00007fd025119399: jl     0x00007fd0251197a1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511939f: cmp    $0x39,%ecx
  0x00007fd0251193a2: jle    0x00007fd0251193bb  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251193a4: cmp    $0x61,%ecx
  0x00007fd0251193a7: jl     0x00007fd02511988d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251193ad: cmp    $0x66,%ecx
  0x00007fd0251193b0: jg     0x00007fd025119949  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251193b6: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251193b9: jmp    0x00007fd0251193be
  0x00007fd0251193bb: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251193be: movzwl 0x38(%r9),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251193c3: movslq %ecx,%r8           ;*i2l  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@215 (line 481)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251193c6: cmp    $0x30,%r11d
  0x00007fd0251193ca: jl     0x00007fd0251197b2  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251193d0: cmp    $0x39,%r11d
  0x00007fd0251193d4: jle    0x00007fd0251193f0  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251193d6: cmp    $0x61,%r11d
  0x00007fd0251193da: jl     0x00007fd02511989e  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251193e0: cmp    $0x66,%r11d
  0x00007fd0251193e4: jg     0x00007fd02511995a  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251193ea: add    $0xffffffa9,%r11d  ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251193ee: jmp    0x00007fd0251193f4
  0x00007fd0251193f0: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251193f4: movzwl 0x3a(%r9),%ecx     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251193f9: movslq %r11d,%r11
  0x00007fd0251193fc: shl    $0x4,%r8
  0x00007fd025119400: or     %r11,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 481)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119403: cmp    $0x30,%ecx
  0x00007fd025119406: jl     0x00007fd0251197a8  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511940c: cmp    $0x39,%ecx
  0x00007fd02511940f: jle    0x00007fd025119428  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119411: cmp    $0x61,%ecx
  0x00007fd025119414: jl     0x00007fd025119894  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511941a: cmp    $0x66,%ecx
  0x00007fd02511941d: jg     0x00007fd025119950  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119423: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119426: jmp    0x00007fd02511942b
  0x00007fd025119428: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511942b: movzwl 0x3c(%r9),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119430: movslq %ecx,%rcx
  0x00007fd025119433: shl    $0x4,%r8
  0x00007fd025119437: or     %rcx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 481)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511943a: cmp    $0x30,%r11d
  0x00007fd02511943e: jl     0x00007fd0251197b9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119444: cmp    $0x39,%r11d
  0x00007fd025119448: jle    0x00007fd025119464  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511944a: cmp    $0x61,%r11d
  0x00007fd02511944e: jl     0x00007fd0251198a5  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119454: cmp    $0x66,%r11d
  0x00007fd025119458: jg     0x00007fd025119961  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511945e: add    $0xffffffa9,%r11d  ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119462: jmp    0x00007fd025119468
  0x00007fd025119464: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119468: movzwl 0x40(%r9),%ecx     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {no_reloc}
  0x00007fd02511946d: movslq %r11d,%r11
  0x00007fd025119470: shl    $0x4,%r8
  0x00007fd025119474: or     %r11,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 481)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119477: mov    $0x18,%edi
  0x00007fd02511947c: cmp    $0x30,%ecx
  0x00007fd02511947f: jl     0x00007fd025119612  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119485: cmp    $0x39,%ecx
  0x00007fd025119488: jle    0x00007fd0251194a1  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511948a: cmp    $0x61,%ecx
  0x00007fd02511948d: jl     0x00007fd02511965e  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119493: cmp    $0x66,%ecx
  0x00007fd025119496: jg     0x00007fd025119686  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511949c: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511949f: jmp    0x00007fd0251194a4
  0x00007fd0251194a1: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251194a4: movslq %ecx,%r11
  0x00007fd0251194a7: shl    $0x4,%r8
  0x00007fd0251194ab: or     %r11,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 485)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251194ae: mov    $0x19,%r11d
  0x00007fd0251194b4: jmp    0x00007fd0251194d7
  0x00007fd0251194b6: data16 nopw 0x0(%rax,%rax,1)
  0x00007fd0251194c0: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251194c3: movslq %ecx,%rcx
  0x00007fd0251194c6: shl    $0x4,%r8
  0x00007fd0251194ca: or     %rcx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 485)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251194cd: add    $0x2,%r11d         ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@256 (line 483)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251194d1: cmp    $0x23,%r11d
  0x00007fd0251194d5: jge    0x00007fd02511953f  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@235 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251194d7: movzwl 0x10(%r9,%r11,2),%ebx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251194dd: cmp    $0x30,%ebx
  0x00007fd0251194e0: jl     0x00007fd02511960d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251194e6: cmp    $0x39,%ebx
  0x00007fd0251194e9: jle    0x00007fd025119502  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251194eb: cmp    $0x61,%ebx
  0x00007fd0251194ee: jl     0x00007fd025119659  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251194f4: cmp    $0x66,%ebx
  0x00007fd0251194f7: jg     0x00007fd025119681  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251194fd: add    $0xffffffa9,%ebx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119500: jmp    0x00007fd025119505
  0x00007fd025119502: add    $0xffffffd0,%ebx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119505: movzwl 0x12(%r9,%r11,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511950b: mov    %r11d,%edi
  0x00007fd02511950e: inc    %edi               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@256 (line 483)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119510: movslq %ebx,%rbx
  0x00007fd025119513: shl    $0x4,%r8
  0x00007fd025119517: or     %rbx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 485)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511951a: cmp    $0x30,%ecx
  0x00007fd02511951d: jl     0x00007fd025119612  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119523: cmp    $0x39,%ecx
  0x00007fd025119526: jle    0x00007fd0251194c0  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119528: cmp    $0x61,%ecx
  0x00007fd02511952b: jl     0x00007fd02511965e  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119531: cmp    $0x66,%ecx
  0x00007fd025119534: jg     0x00007fd025119686  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511953a: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511953d: jmp    0x00007fd0251194c3
  0x00007fd02511953f: cmp    $0x24,%r11d
  0x00007fd025119543: jge    0x00007fd025119593
  0x00007fd025119545: data16 xchg %ax,%ax       ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@235 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119548: cmp    $0x24,%r11d
  0x00007fd02511954c: jge    0x00007fd0251197ed  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119552: movzwl 0x10(%r9,%r11,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119558: cmp    $0x30,%ecx
  0x00007fd02511955b: jl     0x00007fd025119615  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119561: cmp    $0x39,%ecx
  0x00007fd025119564: jle    0x00007fd02511957d  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119566: cmp    $0x61,%ecx
  0x00007fd025119569: jl     0x00007fd025119661  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511956f: cmp    $0x66,%ecx
  0x00007fd025119572: jg     0x00007fd025119689  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119578: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511957b: jmp    0x00007fd025119580
  0x00007fd02511957d: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119580: movslq %ecx,%rcx
  0x00007fd025119583: shl    $0x4,%r8
  0x00007fd025119587: or     %rcx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 485)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511958a: inc    %r11d              ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@256 (line 483)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd02511958d: cmp    $0x24,%r11d
  0x00007fd025119591: jl     0x00007fd025119548  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@263 (line 483)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd025119593: mov    0x60(%r15),%rax
  0x00007fd025119597: mov    %rax,%r11
  0x00007fd02511959a: add    $0x20,%r11
  0x00007fd02511959e: cmp    0x70(%r15),%r11
  0x00007fd0251195a2: jae    0x00007fd0251195eb
  0x00007fd0251195a4: mov    %r11,0x60(%r15)
  0x00007fd0251195a8: prefetchw 0xc0(%r11)
  0x00007fd0251195b0: mov    $0xf800869e,%r11d  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007fd0251195b6: shl    $0x3,%r11
  0x00007fd0251195ba: mov    0xa8(%r11),%r11
  0x00007fd0251195c1: mov    %r11,(%rax)
  0x00007fd0251195c4: movl   $0xf800869e,0x8(%rax)  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007fd0251195cb: mov    %r12d,0xc(%rax)
  0x00007fd0251195cf: mov    %r12,0x10(%rax)
  0x00007fd0251195d3: mov    %r12,0x18(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@266 (line 488)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251195d7: mov    %r10,0x10(%rax)    ;*putfield mostSigBits
                                                ; - java.util.UUID::&lt;init&gt;@6 (line 129)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@272 (line 488)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251195db: mov    %r8,0x18(%rax)     ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@-1 (line 455)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007fd0251195df: add    $0x30,%rsp
  0x00007fd0251195e3: pop    %rbp
  0x00007fd0251195e4: test   %eax,0x16ce7a16(%rip)        # 0x00007fd03be01000
                                                ;   {poll_return}
  0x00007fd0251195ea: retq   
  0x00007fd0251195eb: mov    %r10,(%rsp)
  0x00007fd0251195ef: mov    %r8,%rbp
  0x00007fd0251195f2: movabs $0x7c00434f0,%rsi  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007fd0251195fc: data16 xchg %ax,%ax
  0x00007fd0251195ff: callq  0x00007fd025100fa0  ; OopMap{off=1476}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@266 (line 488)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd025119604: mov    %rbp,%r8
  0x00007fd025119607: mov    (%rsp),%r10
  0x00007fd02511960b: jmp    0x00007fd0251195d7
  0x00007fd02511960d: mov    %ebx,%ecx
  0x00007fd02511960f: mov    %r11d,%edi
  0x00007fd025119612: mov    %edi,%r11d
  0x00007fd025119615: mov    $0xffffff65,%esi
  0x00007fd02511961a: mov    %r10,%rbp
  0x00007fd02511961d: mov    %r8,(%rsp)
  0x00007fd025119621: mov    %r11d,0x8(%rsp)
  0x00007fd025119626: mov    %ecx,0x10(%rsp)
  0x00007fd02511962a: nop
  0x00007fd02511962b: callq  0x00007fd0250051a0  ; OopMap{off=1520}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd025119630: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd025119635: mov    %ecx,%edx
  0x00007fd025119637: mov    %edi,%r11d
  0x00007fd02511963a: mov    %edx,%ecx
  0x00007fd02511963c: mov    $0xffffff65,%esi
  0x00007fd025119641: mov    %r10,%rbp
  0x00007fd025119644: mov    %ecx,(%rsp)
  0x00007fd025119647: mov    %r11d,0x8(%rsp)
  0x00007fd02511964c: data16 xchg %ax,%ax
  0x00007fd02511964f: callq  0x00007fd0250051a0  ; OopMap{off=1556}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd025119654: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd025119659: mov    %ebx,%ecx
  0x00007fd02511965b: mov    %r11d,%edi
  0x00007fd02511965e: mov    %edi,%r11d
  0x00007fd025119661: mov    $0xffffff65,%esi
  0x00007fd025119666: mov    %r10,%rbp
  0x00007fd025119669: mov    %r8,(%rsp)
  0x00007fd02511966d: mov    %r11d,0x8(%rsp)
  0x00007fd025119672: mov    %ecx,0x10(%rsp)
  0x00007fd025119676: nop
  0x00007fd025119677: callq  0x00007fd0250051a0  ; OopMap{off=1596}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd02511967c: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd025119681: mov    %ebx,%ecx
  0x00007fd025119683: mov    %r11d,%edi
  0x00007fd025119686: mov    %edi,%r11d
  0x00007fd025119689: mov    $0xffffff65,%esi
  0x00007fd02511968e: mov    %r10,%rbp
  0x00007fd025119691: mov    %r8,(%rsp)
  0x00007fd025119695: mov    %r11d,0x8(%rsp)
  0x00007fd02511969a: mov    %ecx,0x10(%rsp)
  0x00007fd02511969e: nop
  0x00007fd02511969f: callq  0x00007fd0250051a0  ; OopMap{off=1636}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd0251196a4: callq  0x00007fd03ab0ca20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd0251196a9: mov    %ecx,%edx
  0x00007fd0251196ab: mov    %edi,%r11d
  0x00007fd0251196ae: mov    %edx,%ecx
  0x00007fd0251196b0: mov    $0xffffff65,%esi
  0x00007fd0251196b5: mov    %r10,%rbp
  0x00007fd0251196b8: mov    %ecx,(%rsp)
  0x00007fd0251196bb: mov    %r11d,0x8(%rsp)
  0x00007fd0251196c0: data16 xchg %ax,%ax
  0x00007fd0251196c3: callq  0x00007fd0250051a0  ; OopMap{off=1672}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd0251196c8: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd0251196cd: mov    %ecx,%edx
  0x00007fd0251196cf: mov    %edi,%r11d
  0x00007fd0251196d2: mov    %edx,%ecx
  0x00007fd0251196d4: mov    $0xffffff65,%esi
  0x00007fd0251196d9: mov    %r10,%rbp
  0x00007fd0251196dc: mov    %ecx,(%rsp)
  0x00007fd0251196df: mov    %r11d,0x8(%rsp)
  0x00007fd0251196e4: data16 xchg %ax,%ax
  0x00007fd0251196e7: callq  0x00007fd0250051a0  ; OopMap{off=1708}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd0251196ec: callq  0x00007fd03ab0ca20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd0251196f1: mov    $0xffffff65,%esi
  0x00007fd0251196f6: nop
  0x00007fd0251196f7: callq  0x00007fd0250051a0  ; OopMap{off=1724}
                                                ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@26 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd0251196fc: callq  0x00007fd03ab0ca20  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@26 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd025119701: mov    $0xffffff65,%esi
  0x00007fd025119706: nop
  0x00007fd025119707: callq  0x00007fd0250051a0  ; OopMap{off=1740}
                                                ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@39 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd02511970c: callq  0x00007fd03ab0ca20  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@39 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd025119711: mov    $0xffffff65,%esi
  0x00007fd025119716: nop
  0x00007fd025119717: callq  0x00007fd0250051a0  ; OopMap{off=1756}
                                                ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@52 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd02511971c: callq  0x00007fd03ab0ca20  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@52 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd025119721: xor    %r10d,%r10d
  0x00007fd025119724: jmpq   0x00007fd02511963a
  0x00007fd025119729: mov    $0x9,%r8d
  0x00007fd02511972f: jmp    0x00007fd025119737
  0x00007fd025119731: mov    $0xb,%r8d
  0x00007fd025119737: mov    %ebx,%r11d
  0x00007fd02511973a: jmp    0x00007fd02511974a
  0x00007fd02511973c: mov    $0xa,%r8d
  0x00007fd025119742: jmp    0x00007fd02511974a
  0x00007fd025119744: mov    $0xc,%r8d
  0x00007fd02511974a: mov    $0xffffff65,%esi
  0x00007fd02511974f: mov    %r10,%rbp
  0x00007fd025119752: mov    %r8d,(%rsp)
  0x00007fd025119756: mov    %r11d,0x8(%rsp)
  0x00007fd02511975b: callq  0x00007fd0250051a0  ; OopMap{off=1824}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd025119760: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd025119765: mov    $0xe,%r9d
  0x00007fd02511976b: jmp    0x00007fd025119773
  0x00007fd02511976d: mov    $0x10,%r9d
  0x00007fd025119773: mov    %ecx,%r11d
  0x00007fd025119776: jmp    0x00007fd025119786
  0x00007fd025119778: mov    $0xf,%r9d
  0x00007fd02511977e: jmp    0x00007fd025119786
  0x00007fd025119780: mov    $0x11,%r9d
  0x00007fd025119786: mov    $0xffffff65,%esi
  0x00007fd02511978b: mov    %r10,%rbp
  0x00007fd02511978e: mov    %r9d,(%rsp)
  0x00007fd025119792: mov    %r11d,0x8(%rsp)
  0x00007fd025119797: callq  0x00007fd0250051a0  ; OopMap{off=1884}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd02511979c: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd0251197a1: mov    $0x13,%ebx
  0x00007fd0251197a6: jmp    0x00007fd0251197ad
  0x00007fd0251197a8: mov    $0x15,%ebx
  0x00007fd0251197ad: mov    %ecx,%r11d
  0x00007fd0251197b0: jmp    0x00007fd0251197be
  0x00007fd0251197b2: mov    $0x14,%ebx
  0x00007fd0251197b7: jmp    0x00007fd0251197be
  0x00007fd0251197b9: mov    $0x16,%ebx
  0x00007fd0251197be: mov    $0xffffff65,%esi
  0x00007fd0251197c3: mov    %r10,%rbp
  0x00007fd0251197c6: mov    %r8,(%rsp)
  0x00007fd0251197ca: mov    %ebx,0x8(%rsp)
  0x00007fd0251197ce: mov    %r11d,0x10(%rsp)
  0x00007fd0251197d3: callq  0x00007fd0250051a0  ; OopMap{off=1944}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd0251197d8: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd0251197dd: mov    $0xffffff65,%esi
  0x00007fd0251197e2: nop
  0x00007fd0251197e3: callq  0x00007fd0250051a0  ; OopMap{off=1960}
                                                ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@65 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd0251197e8: callq  0x00007fd03ab0ca20  ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@65 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd0251197ed: mov    $0xffffff65,%esi
  0x00007fd0251197f2: mov    %r10,%rbp
  0x00007fd0251197f5: mov    %r8,(%rsp)
  0x00007fd0251197f9: mov    %r11d,0xc(%rsp)
  0x00007fd0251197fe: mov    %r11d,0x10(%rsp)
  0x00007fd025119803: callq  0x00007fd0250051a0  ; OopMap{off=1992}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd025119808: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd02511980d: xor    %r10d,%r10d
  0x00007fd025119810: jmpq   0x00007fd0251196ae
  0x00007fd025119815: mov    $0x9,%r9d
  0x00007fd02511981b: jmp    0x00007fd025119823
  0x00007fd02511981d: mov    $0xb,%r9d
  0x00007fd025119823: mov    %ebx,%r11d
  0x00007fd025119826: jmp    0x00007fd025119836
  0x00007fd025119828: mov    $0xa,%r9d
  0x00007fd02511982e: jmp    0x00007fd025119836
  0x00007fd025119830: mov    $0xc,%r9d
  0x00007fd025119836: mov    $0xffffff65,%esi
  0x00007fd02511983b: mov    %r10,%rbp
  0x00007fd02511983e: mov    %r9d,(%rsp)
  0x00007fd025119842: mov    %r11d,0x8(%rsp)
  0x00007fd025119847: callq  0x00007fd0250051a0  ; OopMap{off=2060}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd02511984c: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd025119851: mov    $0xe,%r9d
  0x00007fd025119857: jmp    0x00007fd02511985f
  0x00007fd025119859: mov    $0x10,%r9d
  0x00007fd02511985f: mov    %ecx,%r11d
  0x00007fd025119862: jmp    0x00007fd025119872
  0x00007fd025119864: mov    $0xf,%r9d
  0x00007fd02511986a: jmp    0x00007fd025119872
  0x00007fd02511986c: mov    $0x11,%r9d
  0x00007fd025119872: mov    $0xffffff65,%esi
  0x00007fd025119877: mov    %r10,%rbp
  0x00007fd02511987a: mov    %r9d,(%rsp)
  0x00007fd02511987e: mov    %r11d,0x8(%rsp)
  0x00007fd025119883: callq  0x00007fd0250051a0  ; OopMap{off=2120}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd025119888: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd02511988d: mov    $0x13,%ebx
  0x00007fd025119892: jmp    0x00007fd025119899
  0x00007fd025119894: mov    $0x15,%ebx
  0x00007fd025119899: mov    %ecx,%r11d
  0x00007fd02511989c: jmp    0x00007fd0251198aa
  0x00007fd02511989e: mov    $0x14,%ebx
  0x00007fd0251198a3: jmp    0x00007fd0251198aa
  0x00007fd0251198a5: mov    $0x16,%ebx
  0x00007fd0251198aa: mov    $0xffffff65,%esi
  0x00007fd0251198af: mov    %r10,%rbp
  0x00007fd0251198b2: mov    %r8,(%rsp)
  0x00007fd0251198b6: mov    %ebx,0x8(%rsp)
  0x00007fd0251198ba: mov    %r11d,0x10(%rsp)
  0x00007fd0251198bf: callq  0x00007fd0250051a0  ; OopMap{off=2180}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd0251198c4: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd0251198c9: xor    %r10d,%r10d
  0x00007fd0251198cc: jmpq   0x00007fd0251196d2
  0x00007fd0251198d1: mov    $0x9,%r9d
  0x00007fd0251198d7: jmp    0x00007fd0251198df
  0x00007fd0251198d9: mov    $0xb,%r9d
  0x00007fd0251198df: mov    %ebx,%r11d
  0x00007fd0251198e2: jmp    0x00007fd0251198f2
  0x00007fd0251198e4: mov    $0xa,%r9d
  0x00007fd0251198ea: jmp    0x00007fd0251198f2
  0x00007fd0251198ec: mov    $0xc,%r9d
  0x00007fd0251198f2: mov    $0xffffff65,%esi
  0x00007fd0251198f7: mov    %r10,%rbp
  0x00007fd0251198fa: mov    %r9d,(%rsp)
  0x00007fd0251198fe: mov    %r11d,0x8(%rsp)
  0x00007fd025119903: callq  0x00007fd0250051a0  ; OopMap{off=2248}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd025119908: callq  0x00007fd03ab0ca20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd02511990d: mov    $0xe,%r9d
  0x00007fd025119913: jmp    0x00007fd02511991b
  0x00007fd025119915: mov    $0x10,%r9d
  0x00007fd02511991b: mov    %ecx,%r11d
  0x00007fd02511991e: jmp    0x00007fd02511992e
  0x00007fd025119920: mov    $0xf,%r9d
  0x00007fd025119926: jmp    0x00007fd02511992e
  0x00007fd025119928: mov    $0x11,%r9d
  0x00007fd02511992e: mov    $0xffffff65,%esi
  0x00007fd025119933: mov    %r10,%rbp
  0x00007fd025119936: mov    %r9d,(%rsp)
  0x00007fd02511993a: mov    %r11d,0x8(%rsp)
  0x00007fd02511993f: callq  0x00007fd0250051a0  ; OopMap{off=2308}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd025119944: callq  0x00007fd03ab0ca20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd025119949: mov    $0x13,%ebx
  0x00007fd02511994e: jmp    0x00007fd025119955
  0x00007fd025119950: mov    $0x15,%ebx
  0x00007fd025119955: mov    %ecx,%r11d
  0x00007fd025119958: jmp    0x00007fd025119966
  0x00007fd02511995a: mov    $0x14,%ebx
  0x00007fd02511995f: jmp    0x00007fd025119966
  0x00007fd025119961: mov    $0x16,%ebx
  0x00007fd025119966: mov    $0xffffff65,%esi
  0x00007fd02511996b: mov    %r10,%rbp
  0x00007fd02511996e: mov    %r8,(%rsp)
  0x00007fd025119972: mov    %ebx,0x8(%rsp)
  0x00007fd025119976: mov    %r11d,0x10(%rsp)
  0x00007fd02511997b: callq  0x00007fd0250051a0  ; OopMap{off=2368}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd025119980: callq  0x00007fd03ab0ca20  ;*new
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@266 (line 488)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007fd025119985: mov    %rax,%rsi
  0x00007fd025119988: add    $0x30,%rsp
  0x00007fd02511998c: pop    %rbp
  0x00007fd02511998d: jmpq   0x00007fd025100320  ;   {runtime_call}
  0x00007fd025119992: hlt    
  0x00007fd025119993: hlt    
  0x00007fd025119994: hlt    
  0x00007fd025119995: hlt    
  0x00007fd025119996: hlt    
  0x00007fd025119997: hlt    
  0x00007fd025119998: hlt    
  0x00007fd025119999: hlt    
  0x00007fd02511999a: hlt    
  0x00007fd02511999b: hlt    
  0x00007fd02511999c: hlt    
  0x00007fd02511999d: hlt    
  0x00007fd02511999e: hlt    
  0x00007fd02511999f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fd0251199a0: jmpq   0x00007fd02506c760  ;   {no_reloc}
[Deopt Handler Code]
  0x00007fd0251199a5: callq  0x00007fd0251199aa
  0x00007fd0251199aa: subq   $0x5,(%rsp)
  0x00007fd0251199af: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd0251199b4: hlt    
  0x00007fd0251199b5: hlt    
  0x00007fd0251199b6: hlt    
  0x00007fd0251199b7: hlt    
<nmethod compile_id='24' compiler='C2' level='4' entry='0x00007fd025119040' size='7496' address='0x00007fd025118e90' relocation_offset='296' insts_offset='432' stub_offset='2832' scopes_data_offset='2928' scopes_pcs_offset='3816' dependencies_offset='7464' handler_table_offset='7472' oops_offset='2856' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='60415' iicount='60415' stamp='0.190'/>
<make_not_entrant thread='140531746555648' compile_id='19' compiler='C1' level='3' stamp='0.190'/>
<writer thread='140532334335744'/>
<task_queued compile_id='25' compile_kind='osr' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='60416' iicount='1' osr_bci='9' level='3' stamp='0.190' comment='tiered' hot_count='60416'/>
<writer thread='140531745502976'/>
Decoding compiled method 0x00007fd025115d50:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;
  0x00007fd025115f00: mov    0x8(%rsi),%r10d
  0x00007fd025115f04: shl    $0x3,%r10
  0x00007fd025115f08: cmp    %rax,%r10
  0x00007fd025115f0b: jne    0x00007fd025045e20  ;   {runtime_call}
  0x00007fd025115f11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fd025115f1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fd025115f20: mov    %eax,-0x14000(%rsp)
  0x00007fd025115f27: push   %rbp
  0x00007fd025115f28: sub    $0x50,%rsp
  0x00007fd025115f2c: movabs $0x7fd02179e8a8,%rdi  ;   {metadata(method data for {method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd025115f36: mov    0xdc(%rdi),%ebx
  0x00007fd025115f3c: add    $0x8,%ebx
  0x00007fd025115f3f: mov    %ebx,0xdc(%rdi)
  0x00007fd025115f45: movabs $0x7fd02179b370,%rdi  ;   {metadata({method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd025115f4f: and    $0x1ff8,%ebx
  0x00007fd025115f55: cmp    $0x0,%ebx
  0x00007fd025115f58: je     0x00007fd025116228  ;*aload_0
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@0 (line 9)

  0x00007fd025115f5e: mov    %rsi,%rdi
  0x00007fd025115f61: movabs $0x7fd02179e8a8,%rbx  ;   {metadata(method data for {method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd025115f6b: addq   $0x1,0x108(%rbx)
  0x00007fd025115f73: movabs $0x7fd021511108,%rdi  ;   {metadata(method data for {method} {0x00007fd02139b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fd025115f7d: mov    0xdc(%rdi),%ebx
  0x00007fd025115f83: add    $0x8,%ebx
  0x00007fd025115f86: mov    %ebx,0xdc(%rdi)
  0x00007fd025115f8c: movabs $0x7fd02139b480,%rdi  ;   {metadata({method} {0x00007fd02139b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fd025115f96: and    $0x7ffff8,%ebx
  0x00007fd025115f9c: cmp    $0x0,%ebx
  0x00007fd025115f9f: je     0x00007fd02511623f
  0x00007fd025115fa5: movabs $0x7fd02179e8a8,%rdi  ;   {metadata(method data for {method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd025115faf: incl   0x118(%rdi)
  0x00007fd025115fb5: mov    $0x0,%edi          ;*goto
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@6 (line 11)

  0x00007fd025115fba: nopw   0x0(%rax,%rax,1)
  0x00007fd025115fc0: movabs $0x7fd02179e8a8,%rbx  ;   {metadata(method data for {method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd025115fca: mov    0xe0(%rbx),%eax
  0x00007fd025115fd0: add    $0x8,%eax
  0x00007fd025115fd3: mov    %eax,0xe0(%rbx)
  0x00007fd025115fd9: movabs $0x7fd02179b370,%rbx  ;   {metadata({method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd025115fe3: and    $0xfff8,%eax
  0x00007fd025115fe9: cmp    $0x0,%eax
  0x00007fd025115fec: je     0x00007fd025116256  ; OopMap{rsi=Oop off=242}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)

  0x00007fd025115ff2: test   %eax,0x16ceb108(%rip)        # 0x00007fd03be01100
                                                ;   {poll}
  0x00007fd025115ff8: cmp    $0xf4240,%edi
  0x00007fd025115ffe: movabs $0x7fd02179e8a8,%rbx  ;   {metadata(method data for {method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd025116008: movabs $0x1c0,%rax
  0x00007fd025116012: jl     0x00007fd025116022
  0x00007fd025116018: movabs $0x1d0,%rax
  0x00007fd025116022: mov    (%rbx,%rax,1),%rdx
  0x00007fd025116026: lea    0x1(%rdx),%rdx
  0x00007fd02511602a: mov    %rdx,(%rbx,%rax,1)
  0x00007fd02511602e: jge    0x00007fd0251161e4  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)

  0x00007fd025116034: mov    %edi,0x2c(%rsp)
  0x00007fd025116038: cmp    (%rsi),%rax        ;*invokevirtual parse
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ; implicit exception: dispatches to 0x00007fd02511626d
  0x00007fd02511603b: mov    %rsi,%rbx
  0x00007fd02511603e: movabs $0x7fd02179e8a8,%rax  ;   {metadata(method data for {method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd025116048: movabs $0x7c0060028,%r10  ;   {metadata(&apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd025116052: mov    %r10,0x138(%rax)
  0x00007fd025116059: addq   $0x1,0x140(%rax)
  0x00007fd025116061: movabs $0x7fd02179e750,%rbx  ;   {metadata(method data for {method} {0x00007fd02179b428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd02511606b: mov    0xdc(%rbx),%eax
  0x00007fd025116071: add    $0x8,%eax
  0x00007fd025116074: mov    %eax,0xdc(%rbx)
  0x00007fd02511607a: movabs $0x7fd02179b428,%rbx  ;   {metadata({method} {0x00007fd02179b428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd025116084: and    $0x7ffff8,%eax
  0x00007fd02511608a: cmp    $0x0,%eax
  0x00007fd02511608d: je     0x00007fd025116272
  0x00007fd025116093: movabs $0x7fd02179e750,%rbx  ;   {metadata(method data for {method} {0x00007fd02179b428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd02511609d: addq   $0x1,0x108(%rbx)
  0x00007fd0251160a5: mov    %rsi,0x38(%rsp)
  0x00007fd0251160aa: movabs $0x670be7490,%rsi  ;*invokestatic uuidFromCharSequence
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {oop(&quot;ba226cf7-d156-4b18-a78a-094736208cc9&quot;)}
  0x00007fd0251160b4: nop
  0x00007fd0251160b5: nop
  0x00007fd0251160b6: nop
  0x00007fd0251160b7: callq  0x00007fd025046420  ; OopMap{[56]=Oop off=444}
                                                ;*invokestatic uuidFromCharSequence
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {static_call}
  0x00007fd0251160bc: movabs $0x7fd02179e8a8,%rsi  ;   {metadata(method data for {method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd0251160c6: addq   $0x1,0x160(%rsi)
  0x00007fd0251160ce: mov    %rax,%rsi          ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)

  0x00007fd0251160d1: nop
  0x00007fd0251160d2: nop
  0x00007fd0251160d3: nop
  0x00007fd0251160d4: nop
  0x00007fd0251160d5: nop
  0x00007fd0251160d6: nop
  0x00007fd0251160d7: callq  0x00007fd025046420  ; OopMap{[56]=Oop off=476}
                                                ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)
                                                ;   {static_call}
  0x00007fd0251160dc: cmp    $0x1,%eax
  0x00007fd0251160df: movabs $0x7fd02179e8a8,%rdx  ;   {metadata(method data for {method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd0251160e9: movabs $0x170,%rsi
  0x00007fd0251160f3: jne    0x00007fd025116103
  0x00007fd0251160f9: movabs $0x180,%rsi
  0x00007fd025116103: mov    (%rdx,%rsi,1),%rdi
  0x00007fd025116107: lea    0x1(%rdi),%rdi
  0x00007fd02511610b: mov    %rdi,(%rdx,%rsi,1)
  0x00007fd02511610f: jne    0x00007fd0251161d4  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@19 (line 13)

  0x00007fd025116115: movabs $0x670b80c78,%rdx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007fd02511611f: mov    0x6c(%rdx),%esi
  0x00007fd025116122: shl    $0x3,%rsi          ;*getstatic out
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@22 (line 14)

  0x00007fd025116126: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00007fd025116289
  0x00007fd025116129: mov    %rsi,%rdx
  0x00007fd02511612c: movabs $0x7fd02179e8a8,%rdi  ;   {metadata(method data for {method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd025116136: mov    0x8(%rdx),%edx
  0x00007fd025116139: shl    $0x3,%rdx
  0x00007fd02511613d: cmp    0x198(%rdi),%rdx
  0x00007fd025116144: jne    0x00007fd025116153
  0x00007fd025116146: addq   $0x1,0x1a0(%rdi)
  0x00007fd02511614e: jmpq   0x00007fd0251161b9
  0x00007fd025116153: cmp    0x1a8(%rdi),%rdx
  0x00007fd02511615a: jne    0x00007fd025116169
  0x00007fd02511615c: addq   $0x1,0x1b0(%rdi)
  0x00007fd025116164: jmpq   0x00007fd0251161b9
  0x00007fd025116169: cmpq   $0x0,0x198(%rdi)
  0x00007fd025116174: jne    0x00007fd02511618d
  0x00007fd025116176: mov    %rdx,0x198(%rdi)
  0x00007fd02511617d: movq   $0x1,0x1a0(%rdi)
  0x00007fd025116188: jmpq   0x00007fd0251161b9
  0x00007fd02511618d: cmpq   $0x0,0x1a8(%rdi)
  0x00007fd025116198: jne    0x00007fd0251161b1
  0x00007fd02511619a: mov    %rdx,0x1a8(%rdi)
  0x00007fd0251161a1: movq   $0x1,0x1b0(%rdi)
  0x00007fd0251161ac: jmpq   0x00007fd0251161b9
  0x00007fd0251161b1: addq   $0x1,0x190(%rdi)
  0x00007fd0251161b9: movabs $0x670c1a698,%rdx  ;*invokevirtual println
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {oop(&quot;X&quot;)}
  0x00007fd0251161c3: nop
  0x00007fd0251161c4: nop
  0x00007fd0251161c5: movabs $0xffffffffffffffff,%rax
  0x00007fd0251161cf: callq  0x00007fd025046220  ; OopMap{[56]=Oop off=724}
                                                ;*invokevirtual println
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {virtual_call}
  0x00007fd0251161d4: mov    0x2c(%rsp),%edi
  0x00007fd0251161d8: mov    0x38(%rsp),%rsi
  0x00007fd0251161dd: inc    %edi
  0x00007fd0251161df: jmpq   0x00007fd025115fc0  ;*iload_1
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@33 (line 11)

  0x00007fd0251161e4: add    $0x50,%rsp
  0x00007fd0251161e8: pop    %rbp
  0x00007fd0251161e9: test   %eax,0x16ceaf11(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd0251161ef: retq                      ;*return
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@39 (line 18)

  0x00007fd0251161f0: mov    %eax,-0x14000(%rsp)
  0x00007fd0251161f7: push   %rbp
  0x00007fd0251161f8: sub    $0x50,%rsp
  0x00007fd0251161fc: mov    0x10(%rsi),%rbx
  0x00007fd025116200: mov    0x8(%rsi),%eax
  0x00007fd025116203: mov    %rsi,%rdi
  0x00007fd025116206: mov    %rbx,0x30(%rsp)
  0x00007fd02511620b: mov    %eax,0x28(%rsp)
  0x00007fd02511620f: callq  0x00007fd03abafd80  ;   {runtime_call}
  0x00007fd025116214: mov    0x28(%rsp),%eax
  0x00007fd025116218: mov    %rax,%rdi
  0x00007fd02511621b: mov    0x30(%rsp),%rbx
  0x00007fd025116220: mov    %rbx,%rsi
  0x00007fd025116223: jmpq   0x00007fd025116034
  0x00007fd025116228: mov    %rdi,0x8(%rsp)
  0x00007fd02511622d: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd025116235: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop off=826}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@-1 (line 9)
                                                ;   {runtime_call}
  0x00007fd02511623a: jmpq   0x00007fd025115f5e
  0x00007fd02511623f: mov    %rdi,0x8(%rsp)
  0x00007fd025116244: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd02511624c: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop off=849}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@1 (line 9)
                                                ;   {runtime_call}
  0x00007fd025116251: jmpq   0x00007fd025115fa5
  0x00007fd025116256: mov    %rbx,0x8(%rsp)
  0x00007fd02511625b: movq   $0x24,(%rsp)
  0x00007fd025116263: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop off=872}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)
                                                ;   {runtime_call}
  0x00007fd025116268: jmpq   0x00007fd025115ff2
  0x00007fd02511626d: callq  0x00007fd0250f9a40  ; OopMap{rsi=Oop off=882}
                                                ;*invokevirtual parse
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {runtime_call}
  0x00007fd025116272: mov    %rbx,0x8(%rsp)
  0x00007fd025116277: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd02511627f: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop off=900}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@-1 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {runtime_call}
  0x00007fd025116284: jmpq   0x00007fd025116093
  0x00007fd025116289: callq  0x00007fd0250f9a40  ; OopMap{[56]=Oop rsi=Oop off=910}
                                                ;*invokevirtual println
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {runtime_call}
  0x00007fd02511628e: nop
  0x00007fd02511628f: nop
  0x00007fd025116290: mov    0x2a8(%r15),%rax
  0x00007fd025116297: movabs $0x0,%r10
  0x00007fd0251162a1: mov    %r10,0x2a8(%r15)
  0x00007fd0251162a8: movabs $0x0,%r10
  0x00007fd0251162b2: mov    %r10,0x2b0(%r15)
  0x00007fd0251162b9: add    $0x50,%rsp
  0x00007fd0251162bd: pop    %rbp
  0x00007fd0251162be: jmpq   0x00007fd02506c4a0  ;   {runtime_call}
  0x00007fd0251162c3: hlt    
  0x00007fd0251162c4: hlt    
  0x00007fd0251162c5: hlt    
  0x00007fd0251162c6: hlt    
  0x00007fd0251162c7: hlt    
  0x00007fd0251162c8: hlt    
  0x00007fd0251162c9: hlt    
  0x00007fd0251162ca: hlt    
  0x00007fd0251162cb: hlt    
  0x00007fd0251162cc: hlt    
  0x00007fd0251162cd: hlt    
  0x00007fd0251162ce: hlt    
  0x00007fd0251162cf: hlt    
  0x00007fd0251162d0: hlt    
  0x00007fd0251162d1: hlt    
  0x00007fd0251162d2: hlt    
  0x00007fd0251162d3: hlt    
  0x00007fd0251162d4: hlt    
  0x00007fd0251162d5: hlt    
  0x00007fd0251162d6: hlt    
  0x00007fd0251162d7: hlt    
  0x00007fd0251162d8: hlt    
  0x00007fd0251162d9: hlt    
  0x00007fd0251162da: hlt    
  0x00007fd0251162db: hlt    
  0x00007fd0251162dc: hlt    
  0x00007fd0251162dd: hlt    
  0x00007fd0251162de: hlt    
  0x00007fd0251162df: hlt    
[Stub Code]
  0x00007fd0251162e0: nop                       ;   {no_reloc}
  0x00007fd0251162e1: nop
  0x00007fd0251162e2: nop
  0x00007fd0251162e3: nop
  0x00007fd0251162e4: nop
  0x00007fd0251162e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd0251162ef: jmpq   0x00007fd0251162ef  ;   {runtime_call}
  0x00007fd0251162f4: nop
  0x00007fd0251162f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd0251162ff: jmpq   0x00007fd0251162ff  ;   {runtime_call}
  0x00007fd025116304: nop
  0x00007fd025116305: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd02511630f: jmpq   0x00007fd02511630f  ;   {runtime_call}
[Exception Handler]
  0x00007fd025116314: callq  0x00007fd0250fb820  ;   {runtime_call}
  0x00007fd025116319: mov    %rsp,-0x28(%rsp)
  0x00007fd02511631e: sub    $0x80,%rsp
  0x00007fd025116325: mov    %rax,0x78(%rsp)
  0x00007fd02511632a: mov    %rcx,0x70(%rsp)
  0x00007fd02511632f: mov    %rdx,0x68(%rsp)
  0x00007fd025116334: mov    %rbx,0x60(%rsp)
  0x00007fd025116339: mov    %rbp,0x50(%rsp)
  0x00007fd02511633e: mov    %rsi,0x48(%rsp)
  0x00007fd025116343: mov    %rdi,0x40(%rsp)
  0x00007fd025116348: mov    %r8,0x38(%rsp)
  0x00007fd02511634d: mov    %r9,0x30(%rsp)
  0x00007fd025116352: mov    %r10,0x28(%rsp)
  0x00007fd025116357: mov    %r11,0x20(%rsp)
  0x00007fd02511635c: mov    %r12,0x18(%rsp)
  0x00007fd025116361: mov    %r13,0x10(%rsp)
  0x00007fd025116366: mov    %r14,0x8(%rsp)
  0x00007fd02511636b: mov    %r15,(%rsp)
  0x00007fd02511636f: movabs $0x7fd03acf9f36,%rdi  ;   {external_word}
  0x00007fd025116379: movabs $0x7fd025116319,%rsi  ;   {internal_word}
  0x00007fd025116383: mov    %rsp,%rdx
  0x00007fd025116386: and    $0xfffffffffffffff0,%rsp
  0x00007fd02511638a: callq  0x00007fd03aa25990  ;   {runtime_call}
  0x00007fd02511638f: hlt    
[Deopt Handler Code]
  0x00007fd025116390: movabs $0x7fd025116390,%r10  ;   {section_word}
  0x00007fd02511639a: push   %r10
  0x00007fd02511639c: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd0251163a1: hlt    
  0x00007fd0251163a2: hlt    
  0x00007fd0251163a3: hlt    
  0x00007fd0251163a4: hlt    
  0x00007fd0251163a5: hlt    
  0x00007fd0251163a6: hlt    
  0x00007fd0251163a7: hlt    
<nmethod compile_id='25' compile_kind='osr' compiler='C1' level='3' entry='0x00007fd025115f00' size='2264' address='0x00007fd025115d50' relocation_offset='296' insts_offset='432' stub_offset='1424' scopes_data_offset='1664' scopes_pcs_offset='1864' dependencies_offset='2232' nul_chk_table_offset='2240' oops_offset='1624' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='79950' iicount='1' stamp='0.192'/>
<writer thread='140531747608320'/>
Decoding compiled method 0x00007fd02511c110:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fd02179d2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/CharSequence&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fd02511c300: mov    %eax,-0x14000(%rsp)
  0x00007fd02511c307: push   %rbp
  0x00007fd02511c308: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@-1 (line 455)

  0x00007fd02511c30c: mov    %rsi,%r13
  0x00007fd02511c30f: mov    0x8(%rsi),%r11d    ; implicit exception: dispatches to 0x00007fd02511cff1
  0x00007fd02511c313: cmp    $0xf80002da,%r11d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007fd02511c31a: jne    0x00007fd02511cb01  ;*invokeinterface length
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)

  0x00007fd02511c320: mov    0xc(%r13),%r9d     ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)

  0x00007fd02511c324: mov    0xc(%r12,%r9,8),%r11d  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ; implicit exception: dispatches to 0x00007fd02511d001
  0x00007fd02511c329: cmp    $0x24,%r11d
  0x00007fd02511c32d: jne    0x00007fd02511ccad  ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@8 (line 455)

  0x00007fd02511c333: cmp    $0x8,%r11d
  0x00007fd02511c337: jle    0x00007fd02511ccc5  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@19 (line 458)

  0x00007fd02511c33d: cmp    $0x17,%r11d
  0x00007fd02511c341: jbe    0x00007fd02511cb15
  0x00007fd02511c347: movzwl 0x20(%r12,%r9,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@19 (line 458)

  0x00007fd02511c34d: cmp    $0x2d,%ebp
  0x00007fd02511c350: jne    0x00007fd02511cba5  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@26 (line 458)

  0x00007fd02511c356: cmp    $0xd,%r11d
  0x00007fd02511c35a: jle    0x00007fd02511ccdd  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@32 (line 458)

  0x00007fd02511c360: movzwl 0x2a(%r12,%r9,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@32 (line 458)

  0x00007fd02511c366: cmp    $0x2d,%ebp
  0x00007fd02511c369: jne    0x00007fd02511cbb9  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@39 (line 458)

  0x00007fd02511c36f: cmp    $0x12,%r11d
  0x00007fd02511c373: jle    0x00007fd02511ccf5  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@45 (line 458)

  0x00007fd02511c379: movzwl 0x34(%r12,%r9,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@45 (line 458)

  0x00007fd02511c37f: cmp    $0x2d,%ebp
  0x00007fd02511c382: jne    0x00007fd02511cbcd  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@52 (line 458)

  0x00007fd02511c388: cmp    $0x17,%r11d
  0x00007fd02511c38c: jle    0x00007fd02511cd0d  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@58 (line 458)

  0x00007fd02511c392: movzwl 0x3e(%r12,%r9,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@58 (line 458)

  0x00007fd02511c398: cmp    $0x2d,%ebp
  0x00007fd02511c39b: jne    0x00007fd02511cd25  ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@65 (line 458)

  0x00007fd02511c3a1: test   %r11d,%r11d
  0x00007fd02511c3a4: jbe    0x00007fd02511cb2d
  0x00007fd02511c3aa: cmp    $0x7,%r11d
  0x00007fd02511c3ae: jbe    0x00007fd02511cb2d  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@83 (line 466)

  0x00007fd02511c3b4: xor    %edi,%edi
  0x00007fd02511c3b6: test   %r11d,%r11d
  0x00007fd02511c3b9: jle    0x00007fd02511cd39  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)

  0x00007fd02511c3bf: movzwl 0x10(%r12,%r9,8),%ebx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)

  0x00007fd02511c3c5: cmp    $0x30,%ebx
  0x00007fd02511c3c8: jl     0x00007fd02511cbe1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c3ce: cmp    $0x39,%ebx
  0x00007fd02511c3d1: jle    0x00007fd02511c3ea  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c3d3: cmp    $0x61,%ebx
  0x00007fd02511c3d6: jl     0x00007fd02511ce59  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c3dc: cmp    $0x66,%ebx
  0x00007fd02511c3df: jg     0x00007fd02511cf25  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c3e5: add    $0xffffffa9,%ebx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c3e8: jmp    0x00007fd02511c3ed
  0x00007fd02511c3ea: add    $0xffffffd0,%ebx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c3ed: movslq %ebx,%r10          ;*i2l  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@101 (line 467)

  0x00007fd02511c3f0: lea    (%r12,%r9,8),%rax
  0x00007fd02511c3f4: mov    $0x1,%edi
  0x00007fd02511c3f9: mov    $0x80000000,%edx
  0x00007fd02511c3fe: mov    $0x8,%r8d
  0x00007fd02511c404: cmp    %r8d,%r11d
  0x00007fd02511c407: mov    %r11d,%ecx
  0x00007fd02511c40a: cmovg  %r8d,%ecx
  0x00007fd02511c40e: mov    %ecx,%esi
  0x00007fd02511c410: dec    %esi
  0x00007fd02511c412: cmp    %esi,%ecx
  0x00007fd02511c414: cmovl  %edx,%esi
  0x00007fd02511c417: cmp    $0x1,%esi
  0x00007fd02511c41a: jle    0x00007fd02511c4a5
  0x00007fd02511c420: xor    %r8d,%r8d
  0x00007fd02511c423: jmp    0x00007fd02511c444
  0x00007fd02511c425: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fd02511c430: add    $0xffffffd0,%ebx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c433: shl    $0x4,%r10
  0x00007fd02511c437: movslq %ebx,%rcx
  0x00007fd02511c43a: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@102 (line 467)

  0x00007fd02511c43d: add    $0x2,%edi          ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 465)

  0x00007fd02511c440: cmp    %esi,%edi
  0x00007fd02511c442: jge    0x00007fd02511c4a8  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@83 (line 466)

  0x00007fd02511c444: movzwl 0x10(%rax,%rdi,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)

  0x00007fd02511c449: cmp    $0x30,%ecx
  0x00007fd02511c44c: jl     0x00007fd02511ca3d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c452: cmp    $0x39,%ecx
  0x00007fd02511c455: jle    0x00007fd02511c46e  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c457: cmp    $0x61,%ecx
  0x00007fd02511c45a: jl     0x00007fd02511cab9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c460: cmp    $0x66,%ecx
  0x00007fd02511c463: jg     0x00007fd02511cadd  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c469: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c46c: jmp    0x00007fd02511c471
  0x00007fd02511c46e: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c471: movzwl 0x12(%rax,%rdi,2),%ebx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)

  0x00007fd02511c476: shl    $0x4,%r10
  0x00007fd02511c47a: movslq %ecx,%rcx
  0x00007fd02511c47d: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@102 (line 467)

  0x00007fd02511c480: cmp    $0x30,%ebx
  0x00007fd02511c483: jl     0x00007fd02511ca41  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c489: cmp    $0x39,%ebx
  0x00007fd02511c48c: jle    0x00007fd02511c430  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c48e: cmp    $0x61,%ebx
  0x00007fd02511c491: jl     0x00007fd02511cabd  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c497: cmp    $0x66,%ebx
  0x00007fd02511c49a: jg     0x00007fd02511cae1  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c4a0: add    $0xffffffa9,%ebx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c4a3: jmp    0x00007fd02511c433
  0x00007fd02511c4a5: xor    %r8d,%r8d
  0x00007fd02511c4a8: cmp    $0x8,%edi
  0x00007fd02511c4ab: jge    0x00007fd02511c4f7
  0x00007fd02511c4ad: data16 xchg %ax,%ax       ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@83 (line 466)

  0x00007fd02511c4b0: cmp    %r11d,%edi
  0x00007fd02511c4b3: jge    0x00007fd02511cd3c  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)

  0x00007fd02511c4b9: movzwl 0x10(%rax,%rdi,2),%ebx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)

  0x00007fd02511c4be: cmp    $0x30,%ebx
  0x00007fd02511c4c1: jl     0x00007fd02511ca43  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c4c7: cmp    $0x39,%ebx
  0x00007fd02511c4ca: jle    0x00007fd02511c4e3  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c4cc: cmp    $0x61,%ebx
  0x00007fd02511c4cf: jl     0x00007fd02511cabf  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c4d5: cmp    $0x66,%ebx
  0x00007fd02511c4d8: jg     0x00007fd02511cae3  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c4de: add    $0xffffffa9,%ebx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c4e1: jmp    0x00007fd02511c4e6
  0x00007fd02511c4e3: add    $0xffffffd0,%ebx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007fd02511c4e6: movslq %ebx,%rcx
  0x00007fd02511c4e9: shl    $0x4,%r10
  0x00007fd02511c4ed: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@102 (line 467)

  0x00007fd02511c4f0: inc    %edi               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 465)

  0x00007fd02511c4f2: cmp    $0x8,%edi
  0x00007fd02511c4f5: jl     0x00007fd02511c4b0
  0x00007fd02511c4f7: cmp    $0x9,%r11d
  0x00007fd02511c4fb: jbe    0x00007fd02511cb41
  0x00007fd02511c501: cmp    $0xc,%r11d
  0x00007fd02511c505: jbe    0x00007fd02511cb41  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@121 (line 470)

  0x00007fd02511c50b: cmp    $0x9,%r11d
  0x00007fd02511c50f: jle    0x00007fd02511cd61  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)

  0x00007fd02511c515: movzwl 0x22(%r12,%r9,8),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)

  0x00007fd02511c51b: cmp    $0x30,%ecx
  0x00007fd02511c51e: jl     0x00007fd02511cbe9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c524: cmp    $0x39,%ecx
  0x00007fd02511c527: jle    0x00007fd02511c540  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c529: cmp    $0x61,%ecx
  0x00007fd02511c52c: jl     0x00007fd02511ce61  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c532: cmp    $0x66,%ecx
  0x00007fd02511c535: jg     0x00007fd02511cf2d  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c53b: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c53e: jmp    0x00007fd02511c543
  0x00007fd02511c540: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c543: movslq %ecx,%rcx
  0x00007fd02511c546: shl    $0x4,%r10
  0x00007fd02511c54a: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 471)

  0x00007fd02511c54d: cmp    $0xa,%r11d
  0x00007fd02511c551: jle    0x00007fd02511cd69  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)

  0x00007fd02511c557: movzwl 0x24(%r12,%r9,8),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)

  0x00007fd02511c55d: cmp    $0x30,%ecx
  0x00007fd02511c560: jl     0x00007fd02511cbf1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c566: cmp    $0x39,%ecx
  0x00007fd02511c569: jle    0x00007fd02511c582  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c56b: cmp    $0x61,%ecx
  0x00007fd02511c56e: jl     0x00007fd02511ce69  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c574: cmp    $0x66,%ecx
  0x00007fd02511c577: jg     0x00007fd02511cf35  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c57d: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c580: jmp    0x00007fd02511c585
  0x00007fd02511c582: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c585: shl    $0x4,%r10
  0x00007fd02511c589: movslq %ecx,%rcx
  0x00007fd02511c58c: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 471)

  0x00007fd02511c58f: cmp    $0xb,%r11d
  0x00007fd02511c593: jle    0x00007fd02511cd71  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)

  0x00007fd02511c599: movzwl 0x26(%r12,%r9,8),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)

  0x00007fd02511c59f: cmp    $0x30,%ecx
  0x00007fd02511c5a2: jl     0x00007fd02511cbf9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c5a8: cmp    $0x39,%ecx
  0x00007fd02511c5ab: jle    0x00007fd02511c5c4  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c5ad: cmp    $0x61,%ecx
  0x00007fd02511c5b0: jl     0x00007fd02511ce71  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c5b6: cmp    $0x66,%ecx
  0x00007fd02511c5b9: jg     0x00007fd02511cf3d  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c5bf: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c5c2: jmp    0x00007fd02511c5c7
  0x00007fd02511c5c4: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c5c7: shl    $0x4,%r10
  0x00007fd02511c5cb: movslq %ecx,%rcx
  0x00007fd02511c5ce: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 471)

  0x00007fd02511c5d1: cmp    $0xc,%r11d
  0x00007fd02511c5d5: jle    0x00007fd02511cd79  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)

  0x00007fd02511c5db: movzwl 0x28(%r12,%r9,8),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)

  0x00007fd02511c5e1: cmp    $0x30,%ecx
  0x00007fd02511c5e4: jl     0x00007fd02511cc01  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c5ea: cmp    $0x39,%ecx
  0x00007fd02511c5ed: jle    0x00007fd02511c606  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c5ef: cmp    $0x61,%ecx
  0x00007fd02511c5f2: jl     0x00007fd02511ce79  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c5f8: cmp    $0x66,%ecx
  0x00007fd02511c5fb: jg     0x00007fd02511cf45  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c601: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c604: jmp    0x00007fd02511c609
  0x00007fd02511c606: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007fd02511c609: shl    $0x4,%r10
  0x00007fd02511c60d: movslq %ecx,%rcx
  0x00007fd02511c610: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 471)

  0x00007fd02511c613: cmp    $0xe,%r11d
  0x00007fd02511c617: jbe    0x00007fd02511cb59
  0x00007fd02511c61d: cmp    $0x11,%r11d
  0x00007fd02511c621: jbe    0x00007fd02511cb59  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@159 (line 474)

  0x00007fd02511c627: cmp    $0xe,%r11d
  0x00007fd02511c62b: jle    0x00007fd02511cda5  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)

  0x00007fd02511c631: movzwl 0x2c(%r12,%r9,8),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)

  0x00007fd02511c637: cmp    $0x30,%edi
  0x00007fd02511c63a: jl     0x00007fd02511cc29  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c640: cmp    $0x39,%edi
  0x00007fd02511c643: jle    0x00007fd02511c65c  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c645: cmp    $0x61,%edi
  0x00007fd02511c648: jl     0x00007fd02511cea1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c64e: cmp    $0x66,%edi
  0x00007fd02511c651: jg     0x00007fd02511cf6d  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c657: add    $0xffffffa9,%edi   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c65a: jmp    0x00007fd02511c65f
  0x00007fd02511c65c: add    $0xffffffd0,%edi   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c65f: movslq %edi,%rcx
  0x00007fd02511c662: shl    $0x4,%r10
  0x00007fd02511c666: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 475)

  0x00007fd02511c669: cmp    $0xf,%r11d
  0x00007fd02511c66d: jle    0x00007fd02511cdad  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)

  0x00007fd02511c673: movzwl 0x2e(%r12,%r9,8),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)

  0x00007fd02511c679: cmp    $0x30,%edi
  0x00007fd02511c67c: jl     0x00007fd02511cc31  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c682: cmp    $0x39,%edi
  0x00007fd02511c685: jle    0x00007fd02511c69e  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c687: cmp    $0x61,%edi
  0x00007fd02511c68a: jl     0x00007fd02511cea9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c690: cmp    $0x66,%edi
  0x00007fd02511c693: jg     0x00007fd02511cf75  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c699: add    $0xffffffa9,%edi   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c69c: jmp    0x00007fd02511c6a1
  0x00007fd02511c69e: add    $0xffffffd0,%edi   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c6a1: shl    $0x4,%r10
  0x00007fd02511c6a5: movslq %edi,%rcx
  0x00007fd02511c6a8: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 475)

  0x00007fd02511c6ab: cmp    $0x10,%r11d
  0x00007fd02511c6af: jle    0x00007fd02511cdb5  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)

  0x00007fd02511c6b5: movzwl 0x30(%r12,%r9,8),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)

  0x00007fd02511c6bb: cmp    $0x30,%edi
  0x00007fd02511c6be: jl     0x00007fd02511cc39  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c6c4: cmp    $0x39,%edi
  0x00007fd02511c6c7: jle    0x00007fd02511c6e0  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c6c9: cmp    $0x61,%edi
  0x00007fd02511c6cc: jl     0x00007fd02511ceb1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c6d2: cmp    $0x66,%edi
  0x00007fd02511c6d5: jg     0x00007fd02511cf7d  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c6db: add    $0xffffffa9,%edi   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c6de: jmp    0x00007fd02511c6e3
  0x00007fd02511c6e0: add    $0xffffffd0,%edi   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c6e3: shl    $0x4,%r10
  0x00007fd02511c6e7: movslq %edi,%rcx
  0x00007fd02511c6ea: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 475)

  0x00007fd02511c6ed: cmp    $0x11,%r11d
  0x00007fd02511c6f1: jle    0x00007fd02511cdbd  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)

  0x00007fd02511c6f7: movzwl 0x32(%r12,%r9,8),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)

  0x00007fd02511c6fd: cmp    $0x30,%edi
  0x00007fd02511c700: jl     0x00007fd02511cc41  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c706: cmp    $0x39,%edi
  0x00007fd02511c709: jle    0x00007fd02511c722  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c70b: cmp    $0x61,%edi
  0x00007fd02511c70e: jl     0x00007fd02511ceb9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ;   {no_reloc}
  0x00007fd02511c714: cmp    $0x66,%edi
  0x00007fd02511c717: jg     0x00007fd02511cf85  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c71d: add    $0xffffffa9,%edi   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c720: jmp    0x00007fd02511c725
  0x00007fd02511c722: add    $0xffffffd0,%edi   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007fd02511c725: movslq %edi,%rcx
  0x00007fd02511c728: shl    $0x4,%r10
  0x00007fd02511c72c: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 475)

  0x00007fd02511c72f: cmp    $0x13,%r11d
  0x00007fd02511c733: jbe    0x00007fd02511cb71
  0x00007fd02511c739: cmp    $0x16,%r11d
  0x00007fd02511c73d: jbe    0x00007fd02511cb71  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@197 (line 480)

  0x00007fd02511c743: cmp    $0x13,%r11d
  0x00007fd02511c747: jle    0x00007fd02511cde9  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)

  0x00007fd02511c74d: movzwl 0x36(%r12,%r9,8),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)

  0x00007fd02511c753: cmp    $0x30,%edi
  0x00007fd02511c756: jl     0x00007fd02511cc69  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c75c: cmp    $0x39,%edi
  0x00007fd02511c75f: jle    0x00007fd02511c778  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c761: cmp    $0x61,%edi
  0x00007fd02511c764: jl     0x00007fd02511cee1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c76a: cmp    $0x66,%edi
  0x00007fd02511c76d: jg     0x00007fd02511cfad  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c773: add    $0xffffffa9,%edi   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c776: jmp    0x00007fd02511c77b
  0x00007fd02511c778: add    $0xffffffd0,%edi   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c77b: movslq %edi,%r8           ;*i2l  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@215 (line 481)

  0x00007fd02511c77e: cmp    $0x14,%r11d
  0x00007fd02511c782: jle    0x00007fd02511cdf1  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)

  0x00007fd02511c788: movzwl 0x38(%r12,%r9,8),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)

  0x00007fd02511c78e: cmp    $0x30,%edi
  0x00007fd02511c791: jl     0x00007fd02511cc71  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c797: cmp    $0x39,%edi
  0x00007fd02511c79a: jle    0x00007fd02511c7b3  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c79c: cmp    $0x61,%edi
  0x00007fd02511c79f: jl     0x00007fd02511cee9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c7a5: cmp    $0x66,%edi
  0x00007fd02511c7a8: jg     0x00007fd02511cfb5  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c7ae: add    $0xffffffa9,%edi   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c7b1: jmp    0x00007fd02511c7b6
  0x00007fd02511c7b3: add    $0xffffffd0,%edi   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c7b6: shl    $0x4,%r8
  0x00007fd02511c7ba: movslq %edi,%rcx
  0x00007fd02511c7bd: or     %rcx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 481)

  0x00007fd02511c7c0: cmp    $0x15,%r11d
  0x00007fd02511c7c4: jle    0x00007fd02511cdf9  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)

  0x00007fd02511c7ca: movzwl 0x3a(%r12,%r9,8),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)

  0x00007fd02511c7d0: cmp    $0x30,%edi
  0x00007fd02511c7d3: jl     0x00007fd02511cc79  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c7d9: cmp    $0x39,%edi
  0x00007fd02511c7dc: jle    0x00007fd02511c7f5  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c7de: cmp    $0x61,%edi
  0x00007fd02511c7e1: jl     0x00007fd02511cef1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c7e7: cmp    $0x66,%edi
  0x00007fd02511c7ea: jg     0x00007fd02511cfbd  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c7f0: add    $0xffffffa9,%edi   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c7f3: jmp    0x00007fd02511c7f8
  0x00007fd02511c7f5: add    $0xffffffd0,%edi   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c7f8: shl    $0x4,%r8
  0x00007fd02511c7fc: movslq %edi,%rcx
  0x00007fd02511c7ff: or     %rcx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 481)

  0x00007fd02511c802: cmp    $0x16,%r11d
  0x00007fd02511c806: jle    0x00007fd02511ce01  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)

  0x00007fd02511c80c: movzwl 0x3c(%r12,%r9,8),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)

  0x00007fd02511c812: cmp    $0x30,%edi
  0x00007fd02511c815: jl     0x00007fd02511cc81  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c81b: cmp    $0x39,%edi
  0x00007fd02511c81e: jle    0x00007fd02511c837  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c820: cmp    $0x61,%edi
  0x00007fd02511c823: jl     0x00007fd02511cef9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c829: cmp    $0x66,%edi
  0x00007fd02511c82c: jg     0x00007fd02511cfc5  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c832: add    $0xffffffa9,%edi   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c835: jmp    0x00007fd02511c83a
  0x00007fd02511c837: add    $0xffffffd0,%edi   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007fd02511c83a: shl    $0x4,%r8
  0x00007fd02511c83e: movslq %edi,%rcx
  0x00007fd02511c841: or     %rcx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 481)

  0x00007fd02511c844: cmp    $0x18,%r11d
  0x00007fd02511c848: jbe    0x00007fd02511cb89
  0x00007fd02511c84e: cmp    $0x23,%r11d
  0x00007fd02511c852: jbe    0x00007fd02511cb89  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@235 (line 484)

  0x00007fd02511c858: mov    $0x18,%edi
  0x00007fd02511c85d: cmp    $0x18,%r11d
  0x00007fd02511c861: jle    0x00007fd02511ce31  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)

  0x00007fd02511c867: movzwl 0x40(%r12,%r9,8),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)

  0x00007fd02511c86d: cmp    $0x30,%ecx
  0x00007fd02511c870: jl     0x00007fd02511ca1a  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c876: cmp    $0x39,%ecx
  0x00007fd02511c879: jle    0x00007fd02511c892  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c87b: cmp    $0x61,%ecx
  0x00007fd02511c87e: jl     0x00007fd02511ca67  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c884: cmp    $0x66,%ecx
  0x00007fd02511c887: jg     0x00007fd02511ca93  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c88d: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c890: jmp    0x00007fd02511c895
  0x00007fd02511c892: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c895: movslq %ecx,%r9
  0x00007fd02511c898: shl    $0x4,%r8
  0x00007fd02511c89c: or     %r9,%r8            ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 485)

  0x00007fd02511c89f: mov    $0x24,%r9d
  0x00007fd02511c8a5: cmp    %r9d,%r11d
  0x00007fd02511c8a8: mov    %r11d,%ebx
  0x00007fd02511c8ab: cmovg  %r9d,%ebx
  0x00007fd02511c8af: mov    %ebx,%r9d
  0x00007fd02511c8b2: dec    %r9d
  0x00007fd02511c8b5: cmp    %r9d,%ebx
  0x00007fd02511c8b8: cmovl  %edx,%r9d
  0x00007fd02511c8bc: mov    $0x19,%edi
  0x00007fd02511c8c1: cmp    $0x19,%r9d
  0x00007fd02511c8c5: jg     0x00007fd02511c999
  0x00007fd02511c8cb: cmp    $0x24,%edi
  0x00007fd02511c8ce: jge    0x00007fd02511c917  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@235 (line 484)

  0x00007fd02511c8d0: cmp    %r11d,%edi
  0x00007fd02511c8d3: jge    0x00007fd02511ce31  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)

  0x00007fd02511c8d9: movzwl 0x10(%rax,%rdi,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)

  0x00007fd02511c8de: cmp    $0x30,%ecx
  0x00007fd02511c8e1: jl     0x00007fd02511ca1a  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c8e7: cmp    $0x39,%ecx
  0x00007fd02511c8ea: jle    0x00007fd02511c903  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c8ec: cmp    $0x61,%ecx
  0x00007fd02511c8ef: jl     0x00007fd02511ca67  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c8f5: cmp    $0x66,%ecx
  0x00007fd02511c8f8: jg     0x00007fd02511ca93  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c8fe: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c901: jmp    0x00007fd02511c906
  0x00007fd02511c903: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c906: movslq %ecx,%r9
  0x00007fd02511c909: shl    $0x4,%r8
  0x00007fd02511c90d: or     %r9,%r8            ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 485)

  0x00007fd02511c910: inc    %edi               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@256 (line 483)

  0x00007fd02511c912: cmp    $0x24,%edi
  0x00007fd02511c915: jl     0x00007fd02511c8d0  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@263 (line 483)

  0x00007fd02511c917: mov    0x60(%r15),%rax
  0x00007fd02511c91b: mov    %rax,%r11
  0x00007fd02511c91e: add    $0x20,%r11
  0x00007fd02511c922: cmp    0x70(%r15),%r11
  0x00007fd02511c926: jae    0x00007fd02511c9f2
  0x00007fd02511c92c: mov    %r11,0x60(%r15)
  0x00007fd02511c930: prefetchw 0xc0(%r11)
  0x00007fd02511c938: mov    $0xf800869e,%r9d   ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007fd02511c93e: movabs $0x0,%r11
  0x00007fd02511c948: lea    (%r11,%r9,8),%r11
  0x00007fd02511c94c: mov    0xa8(%r11),%r11
  0x00007fd02511c953: mov    %r11,(%rax)
  0x00007fd02511c956: movl   $0xf800869e,0x8(%rax)  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007fd02511c95d: mov    %r12d,0xc(%rax)
  0x00007fd02511c961: mov    %r12,0x10(%rax)
  0x00007fd02511c965: mov    %r12,0x18(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@266 (line 488)

  0x00007fd02511c969: mov    %r10,0x10(%rax)    ;*putfield mostSigBits
                                                ; - java.util.UUID::&lt;init&gt;@6 (line 129)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@272 (line 488)

  0x00007fd02511c96d: mov    %r8,0x18(%rax)     ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@-1 (line 455)

  0x00007fd02511c971: add    $0x40,%rsp
  0x00007fd02511c975: pop    %rbp
  0x00007fd02511c976: test   %eax,0x16ce4684(%rip)        # 0x00007fd03be01000
                                                ;   {poll_return}
  0x00007fd02511c97c: retq   
  0x00007fd02511c97d: data16 xchg %ax,%ax
  0x00007fd02511c980: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c983: movslq %ecx,%rcx
  0x00007fd02511c986: shl    $0x4,%r8
  0x00007fd02511c98a: or     %rcx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 485)

  0x00007fd02511c98d: add    $0x2,%edi          ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@256 (line 483)

  0x00007fd02511c990: cmp    %r9d,%edi
  0x00007fd02511c993: jge    0x00007fd02511c8cb  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@235 (line 484)

  0x00007fd02511c999: movzwl 0x10(%rax,%rdi,2),%edx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)

  0x00007fd02511c99e: cmp    $0x30,%edx
  0x00007fd02511c9a1: jl     0x00007fd02511ca14  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c9a3: cmp    $0x39,%edx
  0x00007fd02511c9a6: jle    0x00007fd02511c9bf  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c9a8: cmp    $0x61,%edx
  0x00007fd02511c9ab: jl     0x00007fd02511ca61  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c9b1: cmp    $0x66,%edx
  0x00007fd02511c9b4: jg     0x00007fd02511ca8d  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c9ba: add    $0xffffffa9,%edx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c9bd: jmp    0x00007fd02511c9c2
  0x00007fd02511c9bf: add    $0xffffffd0,%edx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c9c2: movzwl 0x12(%rax,%rdi,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)

  0x00007fd02511c9c7: shl    $0x4,%r8
  0x00007fd02511c9cb: movslq %edx,%rbx
  0x00007fd02511c9ce: or     %rbx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 485)

  0x00007fd02511c9d1: cmp    $0x30,%ecx
  0x00007fd02511c9d4: jl     0x00007fd02511ca18  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c9d6: cmp    $0x39,%ecx
  0x00007fd02511c9d9: jle    0x00007fd02511c980  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c9db: cmp    $0x61,%ecx
  0x00007fd02511c9de: jl     0x00007fd02511ca65  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c9e4: cmp    $0x66,%ecx
  0x00007fd02511c9e7: jg     0x00007fd02511ca91  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c9ed: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007fd02511c9f0: jmp    0x00007fd02511c983
  0x00007fd02511c9f2: mov    %r10,(%rsp)
  0x00007fd02511c9f6: mov    %r8,%rbp
  0x00007fd02511c9f9: movabs $0x7c00434f0,%rsi  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007fd02511ca03: callq  0x00007fd025100fa0  ; OopMap{off=1800}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@266 (line 488)
                                                ;   {runtime_call}
  0x00007fd02511ca08: mov    %rbp,%r8
  0x00007fd02511ca0b: mov    (%rsp),%r10
  0x00007fd02511ca0f: jmpq   0x00007fd02511c969
  0x00007fd02511ca14: mov    %edx,%ecx
  0x00007fd02511ca16: jmp    0x00007fd02511ca1a
  0x00007fd02511ca18: inc    %edi               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@256 (line 483)

  0x00007fd02511ca1a: mov    $0xffffff65,%esi
  0x00007fd02511ca1f: mov    %r10,%rbp
  0x00007fd02511ca22: mov    %r8,(%rsp)
  0x00007fd02511ca26: mov    %edi,0x8(%rsp)
  0x00007fd02511ca2a: mov    %ecx,0x10(%rsp)
  0x00007fd02511ca2e: mov    %r13,0x18(%rsp)
  0x00007fd02511ca33: callq  0x00007fd0250051a0  ; OopMap{[24]=Oop off=1848}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ;   {runtime_call}
  0x00007fd02511ca38: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ;   {runtime_call}
  0x00007fd02511ca3d: mov    %ecx,%ebx
  0x00007fd02511ca3f: jmp    0x00007fd02511ca43
  0x00007fd02511ca41: inc    %edi               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 465)

  0x00007fd02511ca43: mov    $0xffffff65,%esi
  0x00007fd02511ca48: mov    %r10,%rbp
  0x00007fd02511ca4b: mov    %edi,(%rsp)
  0x00007fd02511ca4e: mov    %r13,0x8(%rsp)
  0x00007fd02511ca53: mov    %ebx,0x10(%rsp)
  0x00007fd02511ca57: callq  0x00007fd0250051a0  ; OopMap{[8]=Oop off=1884}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ;   {runtime_call}
  0x00007fd02511ca5c: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ;   {runtime_call}
  0x00007fd02511ca61: mov    %edx,%ecx
  0x00007fd02511ca63: jmp    0x00007fd02511ca67
  0x00007fd02511ca65: inc    %edi               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@256 (line 483)

  0x00007fd02511ca67: mov    $0xffffff65,%esi
  0x00007fd02511ca6c: mov    %r10,%rbp
  0x00007fd02511ca6f: mov    %r8,(%rsp)
  0x00007fd02511ca73: mov    %edi,0x8(%rsp)
  0x00007fd02511ca77: mov    %ecx,0x10(%rsp)
  0x00007fd02511ca7b: mov    %r13,0x18(%rsp)
  0x00007fd02511ca80: data16 xchg %ax,%ax
  0x00007fd02511ca83: callq  0x00007fd0250051a0  ; OopMap{[24]=Oop off=1928}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ;   {runtime_call}
  0x00007fd02511ca88: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ;   {runtime_call}
  0x00007fd02511ca8d: mov    %edx,%ecx
  0x00007fd02511ca8f: jmp    0x00007fd02511ca93
  0x00007fd02511ca91: inc    %edi               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@256 (line 483)

  0x00007fd02511ca93: mov    $0xffffff65,%esi
  0x00007fd02511ca98: mov    %r10,%rbp
  0x00007fd02511ca9b: mov    %r8,(%rsp)
  0x00007fd02511ca9f: mov    %edi,0x8(%rsp)
  0x00007fd02511caa3: mov    %ecx,0x10(%rsp)
  0x00007fd02511caa7: mov    %r13,0x18(%rsp)
  0x00007fd02511caac: data16 xchg %ax,%ax
  0x00007fd02511caaf: callq  0x00007fd0250051a0  ; OopMap{[24]=Oop off=1972}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ;   {runtime_call}
  0x00007fd02511cab4: callq  0x00007fd03ab0ca20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ;   {runtime_call}
  0x00007fd02511cab9: mov    %ecx,%ebx
  0x00007fd02511cabb: jmp    0x00007fd02511cabf
  0x00007fd02511cabd: inc    %edi               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 465)

  0x00007fd02511cabf: mov    $0xffffff65,%esi
  0x00007fd02511cac4: mov    %r10,%rbp
  0x00007fd02511cac7: mov    %edi,(%rsp)
  0x00007fd02511caca: mov    %r13,0x8(%rsp)
  0x00007fd02511cacf: mov    %ebx,0x10(%rsp)
  0x00007fd02511cad3: callq  0x00007fd0250051a0  ; OopMap{[8]=Oop off=2008}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ;   {runtime_call}
  0x00007fd02511cad8: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ;   {runtime_call}
  0x00007fd02511cadd: mov    %ecx,%ebx
  0x00007fd02511cadf: jmp    0x00007fd02511cae3
  0x00007fd02511cae1: inc    %edi               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 465)

  0x00007fd02511cae3: mov    $0xffffff65,%esi
  0x00007fd02511cae8: mov    %r10,%rbp
  0x00007fd02511caeb: mov    %edi,(%rsp)
  0x00007fd02511caee: mov    %r13,0x8(%rsp)
  0x00007fd02511caf3: mov    %ebx,0x10(%rsp)
  0x00007fd02511caf7: callq  0x00007fd0250051a0  ; OopMap{[8]=Oop off=2044}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ;   {runtime_call}
  0x00007fd02511cafc: callq  0x00007fd03ab0ca20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ;   {runtime_call}
  0x00007fd02511cb01: mov    $0xffffffde,%esi
  0x00007fd02511cb06: mov    %r13,%rbp
  0x00007fd02511cb09: xchg   %ax,%ax
  0x00007fd02511cb0b: callq  0x00007fd0250051a0  ; OopMap{rbp=Oop off=2064}
                                                ;*invokeinterface length
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ;   {runtime_call}
  0x00007fd02511cb10: callq  0x00007fd03ab0ca20  ;*invokeinterface length
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ;   {runtime_call}
  0x00007fd02511cb15: mov    $0xffffffe4,%esi
  0x00007fd02511cb1a: mov    %r13,%rbp
  0x00007fd02511cb1d: mov    %r9d,(%rsp)
  0x00007fd02511cb21: xchg   %ax,%ax
  0x00007fd02511cb23: callq  0x00007fd0250051a0  ; OopMap{rbp=Oop [0]=NarrowOop off=2088}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@19 (line 458)
                                                ;   {runtime_call}
  0x00007fd02511cb28: callq  0x00007fd03ab0ca20  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@19 (line 458)
                                                ;   {runtime_call}
  0x00007fd02511cb2d: mov    $0xffffff86,%esi
  0x00007fd02511cb32: mov    %r13,%rbp
  0x00007fd02511cb35: xchg   %ax,%ax
  0x00007fd02511cb37: callq  0x00007fd0250051a0  ; OopMap{rbp=Oop off=2108}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@83 (line 466)
                                                ;   {runtime_call}
  0x00007fd02511cb3c: callq  0x00007fd03ab0ca20  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@83 (line 466)
                                                ;   {runtime_call}
  0x00007fd02511cb41: mov    $0xffffff86,%esi
  0x00007fd02511cb46: mov    %r10,%rbp
  0x00007fd02511cb49: mov    %r13,(%rsp)
  0x00007fd02511cb4d: xchg   %ax,%ax
  0x00007fd02511cb4f: callq  0x00007fd0250051a0  ; OopMap{[0]=Oop off=2132}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@121 (line 470)
                                                ;   {runtime_call}
  0x00007fd02511cb54: callq  0x00007fd03ab0ca20  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@121 (line 470)
                                                ;   {runtime_call}
  0x00007fd02511cb59: mov    $0xffffff86,%esi
  0x00007fd02511cb5e: mov    %r10,%rbp
  0x00007fd02511cb61: mov    %r13,(%rsp)
  0x00007fd02511cb65: xchg   %ax,%ax
  0x00007fd02511cb67: callq  0x00007fd0250051a0  ; OopMap{[0]=Oop off=2156}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@159 (line 474)
                                                ;   {runtime_call}
  0x00007fd02511cb6c: callq  0x00007fd03ab0ca20  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@159 (line 474)
                                                ;   {runtime_call}
  0x00007fd02511cb71: mov    $0xffffff86,%esi
  0x00007fd02511cb76: mov    %r10,%rbp
  0x00007fd02511cb79: mov    %r13,(%rsp)
  0x00007fd02511cb7d: xchg   %ax,%ax
  0x00007fd02511cb7f: callq  0x00007fd0250051a0  ; OopMap{[0]=Oop off=2180}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@197 (line 480)
                                                ;   {runtime_call}
  0x00007fd02511cb84: callq  0x00007fd03ab0ca20  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@197 (line 480)
                                                ;   {runtime_call}
  0x00007fd02511cb89: mov    $0xffffff86,%esi
  0x00007fd02511cb8e: mov    %r10,%rbp
  0x00007fd02511cb91: mov    %r8,(%rsp)
  0x00007fd02511cb95: mov    %r13,0x8(%rsp)
  0x00007fd02511cb9a: nop
  0x00007fd02511cb9b: callq  0x00007fd0250051a0  ; OopMap{[8]=Oop off=2208}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@235 (line 484)
                                                ;   {runtime_call}
  0x00007fd02511cba0: callq  0x00007fd03ab0ca20  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@235 (line 484)
                                                ;   {runtime_call}
  0x00007fd02511cba5: mov    $0xffffff65,%esi
  0x00007fd02511cbaa: mov    %r13,(%rsp)
  0x00007fd02511cbae: nop
  0x00007fd02511cbaf: callq  0x00007fd0250051a0  ; OopMap{[0]=Oop off=2228}
                                                ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@26 (line 458)
                                                ;   {runtime_call}
  0x00007fd02511cbb4: callq  0x00007fd03ab0ca20  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@26 (line 458)
                                                ;   {runtime_call}
  0x00007fd02511cbb9: mov    $0xffffff65,%esi
  0x00007fd02511cbbe: mov    %r13,(%rsp)
  0x00007fd02511cbc2: nop
  0x00007fd02511cbc3: callq  0x00007fd0250051a0  ; OopMap{[0]=Oop off=2248}
                                                ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@39 (line 458)
                                                ;   {runtime_call}
  0x00007fd02511cbc8: callq  0x00007fd03ab0ca20  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@39 (line 458)
                                                ;   {runtime_call}
  0x00007fd02511cbcd: mov    $0xffffff65,%esi
  0x00007fd02511cbd2: mov    %r13,(%rsp)
  0x00007fd02511cbd6: nop
  0x00007fd02511cbd7: callq  0x00007fd0250051a0  ; OopMap{[0]=Oop off=2268}
                                                ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@52 (line 458)
                                                ;   {runtime_call}
  0x00007fd02511cbdc: callq  0x00007fd03ab0ca20  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@52 (line 458)
                                                ;   {runtime_call}
  0x00007fd02511cbe1: xor    %r10d,%r10d
  0x00007fd02511cbe4: jmpq   0x00007fd02511ca43
  0x00007fd02511cbe9: mov    $0x9,%r8d
  0x00007fd02511cbef: jmp    0x00007fd02511cc07
  0x00007fd02511cbf1: mov    $0xa,%r8d
  0x00007fd02511cbf7: jmp    0x00007fd02511cc07
  0x00007fd02511cbf9: mov    $0xb,%r8d
  0x00007fd02511cbff: jmp    0x00007fd02511cc07
  0x00007fd02511cc01: mov    $0xc,%r8d
  0x00007fd02511cc07: mov    $0xffffff65,%esi
  0x00007fd02511cc0c: mov    %r10,%rbp
  0x00007fd02511cc0f: mov    %r13,(%rsp)
  0x00007fd02511cc13: mov    %r8d,0x8(%rsp)
  0x00007fd02511cc18: mov    %ecx,0x10(%rsp)
  0x00007fd02511cc1c: data16 xchg %ax,%ax
  0x00007fd02511cc1f: callq  0x00007fd0250051a0  ; OopMap{[0]=Oop off=2340}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ;   {runtime_call}
  0x00007fd02511cc24: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ;   {runtime_call}
  0x00007fd02511cc29: mov    $0xe,%r8d
  0x00007fd02511cc2f: jmp    0x00007fd02511cc47
  0x00007fd02511cc31: mov    $0xf,%r8d
  0x00007fd02511cc37: jmp    0x00007fd02511cc47
  0x00007fd02511cc39: mov    $0x10,%r8d
  0x00007fd02511cc3f: jmp    0x00007fd02511cc47
  0x00007fd02511cc41: mov    $0x11,%r8d
  0x00007fd02511cc47: mov    $0xffffff65,%esi
  0x00007fd02511cc4c: mov    %r10,%rbp
  0x00007fd02511cc4f: mov    %r13,(%rsp)
  0x00007fd02511cc53: mov    %r8d,0x8(%rsp)
  0x00007fd02511cc58: mov    %edi,0x10(%rsp)
  0x00007fd02511cc5c: data16 xchg %ax,%ax
  0x00007fd02511cc5f: callq  0x00007fd0250051a0  ; OopMap{[0]=Oop off=2404}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ;   {runtime_call}
  0x00007fd02511cc64: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ;   {runtime_call}
  0x00007fd02511cc69: mov    $0x13,%r11d
  0x00007fd02511cc6f: jmp    0x00007fd02511cc87
  0x00007fd02511cc71: mov    $0x14,%r11d
  0x00007fd02511cc77: jmp    0x00007fd02511cc87
  0x00007fd02511cc79: mov    $0x15,%r11d
  0x00007fd02511cc7f: jmp    0x00007fd02511cc87
  0x00007fd02511cc81: mov    $0x16,%r11d
  0x00007fd02511cc87: mov    $0xffffff65,%esi
  0x00007fd02511cc8c: mov    %r10,%rbp
  0x00007fd02511cc8f: mov    %r8,(%rsp)
  0x00007fd02511cc93: mov    %r13,0x8(%rsp)
  0x00007fd02511cc98: mov    %r11d,0x10(%rsp)
  0x00007fd02511cc9d: mov    %edi,0x18(%rsp)
  0x00007fd02511cca1: xchg   %ax,%ax
  0x00007fd02511cca3: callq  0x00007fd0250051a0  ; OopMap{[8]=Oop off=2472}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ;   {runtime_call}
  0x00007fd02511cca8: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ;   {runtime_call}
  0x00007fd02511ccad: mov    $0xffffff65,%esi
  0x00007fd02511ccb2: mov    %r13,%rbp
  0x00007fd02511ccb5: mov    %r11d,(%rsp)
  0x00007fd02511ccb9: xchg   %ax,%ax
  0x00007fd02511ccbb: callq  0x00007fd0250051a0  ; OopMap{rbp=Oop off=2496}
                                                ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@8 (line 455)
                                                ;   {runtime_call}
  0x00007fd02511ccc0: callq  0x00007fd03ab0ca20  ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@8 (line 455)
                                                ;   {runtime_call}
  0x00007fd02511ccc5: mov    $0xffffff65,%esi
  0x00007fd02511ccca: mov    %r13,(%rsp)
  0x00007fd02511ccce: mov    %r11d,0x8(%rsp)
  0x00007fd02511ccd3: callq  0x00007fd0250051a0  ; OopMap{[0]=Oop off=2520}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@19 (line 458)
                                                ;   {runtime_call}
  0x00007fd02511ccd8: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@19 (line 458)
                                                ;   {runtime_call}
  0x00007fd02511ccdd: mov    $0xffffff65,%esi
  0x00007fd02511cce2: mov    %r13,(%rsp)
  0x00007fd02511cce6: mov    %r11d,0x8(%rsp)
  0x00007fd02511cceb: callq  0x00007fd0250051a0  ; OopMap{[0]=Oop off=2544}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@32 (line 458)
                                                ;   {runtime_call}
  0x00007fd02511ccf0: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@32 (line 458)
                                                ;   {runtime_call}
  0x00007fd02511ccf5: mov    $0xffffff65,%esi
  0x00007fd02511ccfa: mov    %r13,(%rsp)
  0x00007fd02511ccfe: mov    %r11d,0x8(%rsp)
  0x00007fd02511cd03: callq  0x00007fd0250051a0  ; OopMap{[0]=Oop off=2568}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@45 (line 458)
                                                ;   {runtime_call}
  0x00007fd02511cd08: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@45 (line 458)
                                                ;   {runtime_call}
  0x00007fd02511cd0d: mov    $0xffffff65,%esi
  0x00007fd02511cd12: mov    %r13,(%rsp)
  0x00007fd02511cd16: mov    %r11d,0x8(%rsp)
  0x00007fd02511cd1b: callq  0x00007fd0250051a0  ; OopMap{[0]=Oop off=2592}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@58 (line 458)
                                                ;   {runtime_call}
  0x00007fd02511cd20: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@58 (line 458)
                                                ;   {runtime_call}
  0x00007fd02511cd25: mov    $0xffffff65,%esi
  0x00007fd02511cd2a: mov    %r13,(%rsp)
  0x00007fd02511cd2e: nop
  0x00007fd02511cd2f: callq  0x00007fd0250051a0  ; OopMap{[0]=Oop off=2612}
                                                ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@65 (line 458)
                                                ;   {runtime_call}
  0x00007fd02511cd34: callq  0x00007fd03ab0ca20  ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@65 (line 458)
                                                ;   {runtime_call}
  0x00007fd02511cd39: xor    %r10d,%r10d
  0x00007fd02511cd3c: mov    $0xffffff65,%esi
  0x00007fd02511cd41: mov    %r10,%rbp
  0x00007fd02511cd44: mov    %edi,0x4(%rsp)
  0x00007fd02511cd48: mov    %edi,0x8(%rsp)
  0x00007fd02511cd4c: mov    %r13,0x18(%rsp)
  0x00007fd02511cd51: mov    %r11d,0xc(%rsp)
  0x00007fd02511cd56: nop
  0x00007fd02511cd57: callq  0x00007fd0250051a0  ; OopMap{[24]=Oop off=2652}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)
                                                ;   {runtime_call}
  0x00007fd02511cd5c: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)
                                                ;   {runtime_call}
  0x00007fd02511cd61: mov    $0x9,%r8d
  0x00007fd02511cd67: jmp    0x00007fd02511cd7f
  0x00007fd02511cd69: mov    $0xa,%r8d
  0x00007fd02511cd6f: jmp    0x00007fd02511cd7f
  0x00007fd02511cd71: mov    $0xb,%r8d
  0x00007fd02511cd77: jmp    0x00007fd02511cd7f
  0x00007fd02511cd79: mov    $0xc,%r8d
  0x00007fd02511cd7f: mov    $0xffffff65,%esi
  0x00007fd02511cd84: mov    %r10,%rbp
  0x00007fd02511cd87: mov    %r13,0x10(%rsp)
  0x00007fd02511cd8c: mov    %r8d,0xc(%rsp)
  0x00007fd02511cd91: mov    %r8d,0x18(%rsp)
  0x00007fd02511cd96: mov    %r11d,0x1c(%rsp)
  0x00007fd02511cd9b: callq  0x00007fd0250051a0  ; OopMap{[16]=Oop off=2720}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)
                                                ;   {runtime_call}
  0x00007fd02511cda0: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)
                                                ;   {runtime_call}
  0x00007fd02511cda5: mov    $0xe,%r8d
  0x00007fd02511cdab: jmp    0x00007fd02511cdc3
  0x00007fd02511cdad: mov    $0xf,%r8d
  0x00007fd02511cdb3: jmp    0x00007fd02511cdc3
  0x00007fd02511cdb5: mov    $0x10,%r8d
  0x00007fd02511cdbb: jmp    0x00007fd02511cdc3
  0x00007fd02511cdbd: mov    $0x11,%r8d
  0x00007fd02511cdc3: mov    $0xffffff65,%esi
  0x00007fd02511cdc8: mov    %r10,%rbp
  0x00007fd02511cdcb: mov    %r13,0x10(%rsp)
  0x00007fd02511cdd0: mov    %r8d,0xc(%rsp)
  0x00007fd02511cdd5: mov    %r8d,0x18(%rsp)
  0x00007fd02511cdda: mov    %r11d,0x1c(%rsp)
  0x00007fd02511cddf: callq  0x00007fd0250051a0  ; OopMap{[16]=Oop off=2788}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)
                                                ;   {runtime_call}
  0x00007fd02511cde4: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)
                                                ;   {runtime_call}
  0x00007fd02511cde9: mov    $0x13,%r9d
  0x00007fd02511cdef: jmp    0x00007fd02511ce07
  0x00007fd02511cdf1: mov    $0x14,%r9d
  0x00007fd02511cdf7: jmp    0x00007fd02511ce07
  0x00007fd02511cdf9: mov    $0x15,%r9d
  0x00007fd02511cdff: jmp    0x00007fd02511ce07
  0x00007fd02511ce01: mov    $0x16,%r9d
  0x00007fd02511ce07: mov    $0xffffff65,%esi
  0x00007fd02511ce0c: mov    %r10,%rbp
  0x00007fd02511ce0f: mov    %r8,(%rsp)
  0x00007fd02511ce13: mov    %r13,0x18(%rsp)
  0x00007fd02511ce18: mov    %r9d,0x14(%rsp)
  0x00007fd02511ce1d: mov    %r9d,0x20(%rsp)
  0x00007fd02511ce22: mov    %r11d,0x24(%rsp)
  0x00007fd02511ce27: callq  0x00007fd0250051a0  ; OopMap{[24]=Oop off=2860}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)
                                                ;   {runtime_call}
  0x00007fd02511ce2c: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)
                                                ;   {runtime_call}
  0x00007fd02511ce31: mov    $0xffffff65,%esi
  0x00007fd02511ce36: mov    %r10,%rbp
  0x00007fd02511ce39: mov    %r8,(%rsp)
  0x00007fd02511ce3d: mov    %edi,0xc(%rsp)
  0x00007fd02511ce41: mov    %edi,0x10(%rsp)
  0x00007fd02511ce45: mov    %r13,0x20(%rsp)
  0x00007fd02511ce4a: mov    %r11d,0x14(%rsp)
  0x00007fd02511ce4f: callq  0x00007fd0250051a0  ; OopMap{[32]=Oop off=2900}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)
                                                ;   {runtime_call}
  0x00007fd02511ce54: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)
                                                ;   {runtime_call}
  0x00007fd02511ce59: xor    %r10d,%r10d
  0x00007fd02511ce5c: jmpq   0x00007fd02511cabf
  0x00007fd02511ce61: mov    $0x9,%r11d
  0x00007fd02511ce67: jmp    0x00007fd02511ce7f
  0x00007fd02511ce69: mov    $0xa,%r11d
  0x00007fd02511ce6f: jmp    0x00007fd02511ce7f
  0x00007fd02511ce71: mov    $0xb,%r11d
  0x00007fd02511ce77: jmp    0x00007fd02511ce7f
  0x00007fd02511ce79: mov    $0xc,%r11d
  0x00007fd02511ce7f: mov    $0xffffff65,%esi
  0x00007fd02511ce84: mov    %r10,%rbp
  0x00007fd02511ce87: mov    %r13,(%rsp)
  0x00007fd02511ce8b: mov    %r11d,0x8(%rsp)
  0x00007fd02511ce90: mov    %ecx,0x10(%rsp)
  0x00007fd02511ce94: data16 xchg %ax,%ax
  0x00007fd02511ce97: callq  0x00007fd0250051a0  ; OopMap{[0]=Oop off=2972}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ;   {runtime_call}
  0x00007fd02511ce9c: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ;   {runtime_call}
  0x00007fd02511cea1: mov    $0xe,%r11d
  0x00007fd02511cea7: jmp    0x00007fd02511cebf
  0x00007fd02511cea9: mov    $0xf,%r11d
  0x00007fd02511ceaf: jmp    0x00007fd02511cebf
  0x00007fd02511ceb1: mov    $0x10,%r11d
  0x00007fd02511ceb7: jmp    0x00007fd02511cebf
  0x00007fd02511ceb9: mov    $0x11,%r11d
  0x00007fd02511cebf: mov    $0xffffff65,%esi
  0x00007fd02511cec4: mov    %r10,%rbp
  0x00007fd02511cec7: mov    %r13,(%rsp)
  0x00007fd02511cecb: mov    %r11d,0x8(%rsp)
  0x00007fd02511ced0: mov    %edi,0x10(%rsp)
  0x00007fd02511ced4: data16 xchg %ax,%ax
  0x00007fd02511ced7: callq  0x00007fd0250051a0  ; OopMap{[0]=Oop off=3036}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ;   {runtime_call}
  0x00007fd02511cedc: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ;   {runtime_call}
  0x00007fd02511cee1: mov    $0x13,%r11d
  0x00007fd02511cee7: jmp    0x00007fd02511ceff
  0x00007fd02511cee9: mov    $0x14,%r11d
  0x00007fd02511ceef: jmp    0x00007fd02511ceff
  0x00007fd02511cef1: mov    $0x15,%r11d
  0x00007fd02511cef7: jmp    0x00007fd02511ceff
  0x00007fd02511cef9: mov    $0x16,%r11d
  0x00007fd02511ceff: mov    $0xffffff65,%esi
  0x00007fd02511cf04: mov    %r10,%rbp
  0x00007fd02511cf07: mov    %r8,(%rsp)
  0x00007fd02511cf0b: mov    %r13,0x8(%rsp)
  0x00007fd02511cf10: mov    %r11d,0x10(%rsp)
  0x00007fd02511cf15: mov    %edi,0x18(%rsp)
  0x00007fd02511cf19: xchg   %ax,%ax
  0x00007fd02511cf1b: callq  0x00007fd0250051a0  ; OopMap{[8]=Oop off=3104}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ;   {runtime_call}
  0x00007fd02511cf20: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ;   {runtime_call}
  0x00007fd02511cf25: xor    %r10d,%r10d
  0x00007fd02511cf28: jmpq   0x00007fd02511cae3
  0x00007fd02511cf2d: mov    $0x9,%r8d
  0x00007fd02511cf33: jmp    0x00007fd02511cf4b
  0x00007fd02511cf35: mov    $0xa,%r8d
  0x00007fd02511cf3b: jmp    0x00007fd02511cf4b
  0x00007fd02511cf3d: mov    $0xb,%r8d
  0x00007fd02511cf43: jmp    0x00007fd02511cf4b
  0x00007fd02511cf45: mov    $0xc,%r8d
  0x00007fd02511cf4b: mov    $0xffffff65,%esi
  0x00007fd02511cf50: mov    %r10,%rbp
  0x00007fd02511cf53: mov    %r13,(%rsp)
  0x00007fd02511cf57: mov    %r8d,0x8(%rsp)
  0x00007fd02511cf5c: mov    %ecx,0x10(%rsp)
  0x00007fd02511cf60: data16 xchg %ax,%ax
  0x00007fd02511cf63: callq  0x00007fd0250051a0  ; OopMap{[0]=Oop off=3176}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ;   {runtime_call}
  0x00007fd02511cf68: callq  0x00007fd03ab0ca20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ;   {runtime_call}
  0x00007fd02511cf6d: mov    $0xe,%r8d
  0x00007fd02511cf73: jmp    0x00007fd02511cf8b
  0x00007fd02511cf75: mov    $0xf,%r8d
  0x00007fd02511cf7b: jmp    0x00007fd02511cf8b
  0x00007fd02511cf7d: mov    $0x10,%r8d
  0x00007fd02511cf83: jmp    0x00007fd02511cf8b
  0x00007fd02511cf85: mov    $0x11,%r8d
  0x00007fd02511cf8b: mov    $0xffffff65,%esi
  0x00007fd02511cf90: mov    %r10,%rbp
  0x00007fd02511cf93: mov    %r13,(%rsp)
  0x00007fd02511cf97: mov    %r8d,0x8(%rsp)
  0x00007fd02511cf9c: mov    %edi,0x10(%rsp)
  0x00007fd02511cfa0: data16 xchg %ax,%ax
  0x00007fd02511cfa3: callq  0x00007fd0250051a0  ; OopMap{[0]=Oop off=3240}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ;   {runtime_call}
  0x00007fd02511cfa8: callq  0x00007fd03ab0ca20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ;   {runtime_call}
  0x00007fd02511cfad: mov    $0x13,%r11d
  0x00007fd02511cfb3: jmp    0x00007fd02511cfcb
  0x00007fd02511cfb5: mov    $0x14,%r11d
  0x00007fd02511cfbb: jmp    0x00007fd02511cfcb
  0x00007fd02511cfbd: mov    $0x15,%r11d
  0x00007fd02511cfc3: jmp    0x00007fd02511cfcb
  0x00007fd02511cfc5: mov    $0x16,%r11d
  0x00007fd02511cfcb: mov    $0xffffff65,%esi
  0x00007fd02511cfd0: mov    %r10,%rbp
  0x00007fd02511cfd3: mov    %r8,(%rsp)
  0x00007fd02511cfd7: mov    %r13,0x8(%rsp)
  0x00007fd02511cfdc: mov    %r11d,0x10(%rsp)
  0x00007fd02511cfe1: mov    %edi,0x18(%rsp)
  0x00007fd02511cfe5: xchg   %ax,%ax
  0x00007fd02511cfe7: callq  0x00007fd0250051a0  ; OopMap{[8]=Oop off=3308}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ;   {runtime_call}
  0x00007fd02511cfec: callq  0x00007fd03ab0ca20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ;   {runtime_call}
  0x00007fd02511cff1: mov    $0xfffffff6,%esi
  0x00007fd02511cff6: nop
  0x00007fd02511cff7: callq  0x00007fd0250051a0  ; OopMap{off=3324}
                                                ;*invokeinterface length
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ;   {runtime_call}
  0x00007fd02511cffc: callq  0x00007fd03ab0ca20  ;*invokeinterface length
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ;   {runtime_call}
  0x00007fd02511d001: mov    $0xfffffff6,%esi
  0x00007fd02511d006: nop
  0x00007fd02511d007: callq  0x00007fd0250051a0  ; OopMap{off=3340}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ;   {runtime_call}
  0x00007fd02511d00c: callq  0x00007fd03ab0ca20  ;*new
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@266 (line 488)
                                                ;   {runtime_call}
  0x00007fd02511d011: mov    %rax,%rsi
  0x00007fd02511d014: add    $0x40,%rsp
  0x00007fd02511d018: pop    %rbp
  0x00007fd02511d019: jmpq   0x00007fd025100320  ;   {runtime_call}
  0x00007fd02511d01e: hlt    
  0x00007fd02511d01f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fd02511d020: jmpq   0x00007fd02506c760  ;   {no_reloc}
[Deopt Handler Code]
  0x00007fd02511d025: callq  0x00007fd02511d02a
  0x00007fd02511d02a: subq   $0x5,(%rsp)
  0x00007fd02511d02f: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd02511d034: hlt    
  0x00007fd02511d035: hlt    
  0x00007fd02511d036: hlt    
  0x00007fd02511d037: hlt    
<nmethod compile_id='23' compiler='C2' level='4' entry='0x00007fd02511c300' size='10304' address='0x00007fd02511c110' relocation_offset='296' insts_offset='496' stub_offset='3856' scopes_data_offset='3944' scopes_pcs_offset='5528' dependencies_offset='10248' handler_table_offset='10256' nul_chk_table_offset='10280' oops_offset='3880' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='276' count='60415' backedge_count='2233585' iicount='60415' stamp='0.222'/>
<make_not_entrant thread='140531747608320' compile_id='17' compiler='C1' level='3' stamp='0.222'/>
<writer thread='140532334335744'/>
<task_queued compile_id='26' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='80260' iicount='1' level='3' stamp='0.222' comment='tiered' hot_count='1'/>
<writer thread='140531745502976'/>
Decoding compiled method 0x00007fd02511b8d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fd02511ba80: mov    0x8(%rsi),%r10d
  0x00007fd02511ba84: shl    $0x3,%r10
  0x00007fd02511ba88: cmp    %rax,%r10
  0x00007fd02511ba8b: jne    0x00007fd025045e20  ;   {runtime_call}
  0x00007fd02511ba91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fd02511ba9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fd02511baa0: mov    %eax,-0x14000(%rsp)
  0x00007fd02511baa7: push   %rbp
  0x00007fd02511baa8: sub    $0x40,%rsp
  0x00007fd02511baac: mov    %rsi,0x30(%rsp)
  0x00007fd02511bab1: movabs $0x7fd02179e8a8,%rdi  ;   {metadata(method data for {method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd02511babb: mov    0xdc(%rdi),%ebx
  0x00007fd02511bac1: add    $0x8,%ebx
  0x00007fd02511bac4: mov    %ebx,0xdc(%rdi)
  0x00007fd02511baca: movabs $0x7fd02179b370,%rdi  ;   {metadata({method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd02511bad4: and    $0x1ff8,%ebx
  0x00007fd02511bada: cmp    $0x0,%ebx
  0x00007fd02511badd: je     0x00007fd02511bd57  ;*aload_0
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@0 (line 9)

  0x00007fd02511bae3: mov    %rsi,%rdi
  0x00007fd02511bae6: movabs $0x7fd02179e8a8,%rbx  ;   {metadata(method data for {method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd02511baf0: addq   $0x1,0x108(%rbx)
  0x00007fd02511baf8: movabs $0x7fd021511108,%rdi  ;   {metadata(method data for {method} {0x00007fd02139b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fd02511bb02: mov    0xdc(%rdi),%ebx
  0x00007fd02511bb08: add    $0x8,%ebx
  0x00007fd02511bb0b: mov    %ebx,0xdc(%rdi)
  0x00007fd02511bb11: movabs $0x7fd02139b480,%rdi  ;   {metadata({method} {0x00007fd02139b480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fd02511bb1b: and    $0x7ffff8,%ebx
  0x00007fd02511bb21: cmp    $0x0,%ebx
  0x00007fd02511bb24: je     0x00007fd02511bd6e
  0x00007fd02511bb2a: movabs $0x7fd02179e8a8,%rdi  ;   {metadata(method data for {method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd02511bb34: incl   0x118(%rdi)
  0x00007fd02511bb3a: mov    $0x0,%edi
  0x00007fd02511bb3f: jmpq   0x00007fd02511bcd7  ;*goto
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@6 (line 11)

  0x00007fd02511bb44: nopl   0x0(%rax)
  0x00007fd02511bb48: mov    %edi,0x28(%rsp)
  0x00007fd02511bb4c: mov    %rsi,%rbx
  0x00007fd02511bb4f: movabs $0x7fd02179e8a8,%rax  ;   {metadata(method data for {method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd02511bb59: addq   $0x1,0x140(%rax)
  0x00007fd02511bb61: movabs $0x7fd02179e750,%rbx  ;   {metadata(method data for {method} {0x00007fd02179b428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd02511bb6b: mov    0xdc(%rbx),%eax
  0x00007fd02511bb71: add    $0x8,%eax
  0x00007fd02511bb74: mov    %eax,0xdc(%rbx)
  0x00007fd02511bb7a: movabs $0x7fd02179b428,%rbx  ;   {metadata({method} {0x00007fd02179b428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd02511bb84: and    $0x7ffff8,%eax
  0x00007fd02511bb8a: cmp    $0x0,%eax
  0x00007fd02511bb8d: je     0x00007fd02511bd85
  0x00007fd02511bb93: movabs $0x7fd02179e750,%rbx  ;   {metadata(method data for {method} {0x00007fd02179b428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd02511bb9d: addq   $0x1,0x108(%rbx)
  0x00007fd02511bba5: movabs $0x670be7490,%rsi  ;*invokestatic uuidFromCharSequence
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {oop(&quot;ba226cf7-d156-4b18-a78a-094736208cc9&quot;)}
  0x00007fd02511bbaf: callq  0x00007fd025046420  ; OopMap{[48]=Oop off=308}
                                                ;*invokestatic uuidFromCharSequence
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {static_call}
  0x00007fd02511bbb4: movabs $0x7fd02179e8a8,%rsi  ;   {metadata(method data for {method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd02511bbbe: addq   $0x1,0x160(%rsi)
  0x00007fd02511bbc6: mov    %rax,%rsi          ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)

  0x00007fd02511bbc9: nop
  0x00007fd02511bbca: nop
  0x00007fd02511bbcb: nop
  0x00007fd02511bbcc: nop
  0x00007fd02511bbcd: nop
  0x00007fd02511bbce: nop
  0x00007fd02511bbcf: callq  0x00007fd025046420  ; OopMap{[48]=Oop off=340}
                                                ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)
                                                ;   {static_call}
  0x00007fd02511bbd4: cmp    $0x1,%eax
  0x00007fd02511bbd7: movabs $0x7fd02179e8a8,%rdx  ;   {metadata(method data for {method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd02511bbe1: movabs $0x170,%rsi
  0x00007fd02511bbeb: jne    0x00007fd02511bbfb
  0x00007fd02511bbf1: movabs $0x180,%rsi
  0x00007fd02511bbfb: mov    (%rdx,%rsi,1),%rdi
  0x00007fd02511bbff: lea    0x1(%rdi),%rdi
  0x00007fd02511bc03: mov    %rdi,(%rdx,%rsi,1)
  0x00007fd02511bc07: jne    0x00007fd02511bccc  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@19 (line 13)

  0x00007fd02511bc0d: movabs $0x670b80c78,%rdx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007fd02511bc17: mov    0x6c(%rdx),%esi
  0x00007fd02511bc1a: shl    $0x3,%rsi          ;*getstatic out
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@22 (line 14)

  0x00007fd02511bc1e: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00007fd02511bd9c
  0x00007fd02511bc21: mov    %rsi,%rdx
  0x00007fd02511bc24: movabs $0x7fd02179e8a8,%rdi  ;   {metadata(method data for {method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd02511bc2e: mov    0x8(%rdx),%edx
  0x00007fd02511bc31: shl    $0x3,%rdx
  0x00007fd02511bc35: cmp    0x198(%rdi),%rdx
  0x00007fd02511bc3c: jne    0x00007fd02511bc4b
  0x00007fd02511bc3e: addq   $0x1,0x1a0(%rdi)
  0x00007fd02511bc46: jmpq   0x00007fd02511bcb1
  0x00007fd02511bc4b: cmp    0x1a8(%rdi),%rdx
  0x00007fd02511bc52: jne    0x00007fd02511bc61
  0x00007fd02511bc54: addq   $0x1,0x1b0(%rdi)
  0x00007fd02511bc5c: jmpq   0x00007fd02511bcb1
  0x00007fd02511bc61: cmpq   $0x0,0x198(%rdi)
  0x00007fd02511bc6c: jne    0x00007fd02511bc85
  0x00007fd02511bc6e: mov    %rdx,0x198(%rdi)
  0x00007fd02511bc75: movq   $0x1,0x1a0(%rdi)
  0x00007fd02511bc80: jmpq   0x00007fd02511bcb1
  0x00007fd02511bc85: cmpq   $0x0,0x1a8(%rdi)
  0x00007fd02511bc90: jne    0x00007fd02511bca9
  0x00007fd02511bc92: mov    %rdx,0x1a8(%rdi)
  0x00007fd02511bc99: movq   $0x1,0x1b0(%rdi)
  0x00007fd02511bca4: jmpq   0x00007fd02511bcb1
  0x00007fd02511bca9: addq   $0x1,0x190(%rdi)
  0x00007fd02511bcb1: movabs $0x670c1a698,%rdx  ;*invokevirtual println
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {oop(&quot;X&quot;)}
  0x00007fd02511bcbb: nop
  0x00007fd02511bcbc: nop
  0x00007fd02511bcbd: movabs $0xffffffffffffffff,%rax
  0x00007fd02511bcc7: callq  0x00007fd025046220  ; OopMap{[48]=Oop off=588}
                                                ;*invokevirtual println
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {virtual_call}
  0x00007fd02511bccc: mov    0x28(%rsp),%edi
  0x00007fd02511bcd0: inc    %edi
  0x00007fd02511bcd2: mov    0x30(%rsp),%rsi
  0x00007fd02511bcd7: movabs $0x7fd02179e8a8,%rbx  ;   {metadata(method data for {method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd02511bce1: mov    0xe0(%rbx),%eax
  0x00007fd02511bce7: add    $0x8,%eax
  0x00007fd02511bcea: mov    %eax,0xe0(%rbx)
  0x00007fd02511bcf0: movabs $0x7fd02179b370,%rbx  ;   {metadata({method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd02511bcfa: and    $0xfff8,%eax
  0x00007fd02511bd00: cmp    $0x0,%eax
  0x00007fd02511bd03: je     0x00007fd02511bda1  ; OopMap{rsi=Oop [48]=Oop off=649}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)

  0x00007fd02511bd09: test   %eax,0x16ce53f1(%rip)        # 0x00007fd03be01100
                                                ;   {poll}
  0x00007fd02511bd0f: cmp    $0xf4240,%edi
  0x00007fd02511bd15: movabs $0x7fd02179e8a8,%rbx  ;   {metadata(method data for {method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd02511bd1f: movabs $0x1c0,%rax
  0x00007fd02511bd29: jl     0x00007fd02511bd39
  0x00007fd02511bd2f: movabs $0x1d0,%rax
  0x00007fd02511bd39: mov    (%rbx,%rax,1),%rdx
  0x00007fd02511bd3d: lea    0x1(%rdx),%rdx
  0x00007fd02511bd41: mov    %rdx,(%rbx,%rax,1)
  0x00007fd02511bd45: jl     0x00007fd02511bb48  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)

  0x00007fd02511bd4b: add    $0x40,%rsp
  0x00007fd02511bd4f: pop    %rbp
  0x00007fd02511bd50: test   %eax,0x16ce53aa(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd02511bd56: retq   
  0x00007fd02511bd57: mov    %rdi,0x8(%rsp)
  0x00007fd02511bd5c: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd02511bd64: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop [48]=Oop off=745}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@-1 (line 9)
                                                ;   {runtime_call}
  0x00007fd02511bd69: jmpq   0x00007fd02511bae3
  0x00007fd02511bd6e: mov    %rdi,0x8(%rsp)
  0x00007fd02511bd73: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd02511bd7b: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop [48]=Oop off=768}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@1 (line 9)
                                                ;   {runtime_call}
  0x00007fd02511bd80: jmpq   0x00007fd02511bb2a
  0x00007fd02511bd85: mov    %rbx,0x8(%rsp)
  0x00007fd02511bd8a: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd02511bd92: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop [48]=Oop off=791}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@-1 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {runtime_call}
  0x00007fd02511bd97: jmpq   0x00007fd02511bb93
  0x00007fd02511bd9c: callq  0x00007fd0250f9a40  ; OopMap{[48]=Oop rsi=Oop off=801}
                                                ;*invokevirtual println
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {runtime_call}
  0x00007fd02511bda1: mov    %rbx,0x8(%rsp)
  0x00007fd02511bda6: movq   $0x24,(%rsp)
  0x00007fd02511bdae: callq  0x00007fd0250fdea0  ; OopMap{rsi=Oop [48]=Oop off=819}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)
                                                ;   {runtime_call}
  0x00007fd02511bdb3: jmpq   0x00007fd02511bd09
  0x00007fd02511bdb8: nop
  0x00007fd02511bdb9: nop
  0x00007fd02511bdba: mov    0x2a8(%r15),%rax
  0x00007fd02511bdc1: movabs $0x0,%r10
  0x00007fd02511bdcb: mov    %r10,0x2a8(%r15)
  0x00007fd02511bdd2: movabs $0x0,%r10
  0x00007fd02511bddc: mov    %r10,0x2b0(%r15)
  0x00007fd02511bde3: add    $0x40,%rsp
  0x00007fd02511bde7: pop    %rbp
  0x00007fd02511bde8: jmpq   0x00007fd02506c4a0  ;   {runtime_call}
  0x00007fd02511bded: hlt    
  0x00007fd02511bdee: hlt    
  0x00007fd02511bdef: hlt    
  0x00007fd02511bdf0: hlt    
  0x00007fd02511bdf1: hlt    
  0x00007fd02511bdf2: hlt    
  0x00007fd02511bdf3: hlt    
  0x00007fd02511bdf4: hlt    
  0x00007fd02511bdf5: hlt    
  0x00007fd02511bdf6: hlt    
  0x00007fd02511bdf7: hlt    
  0x00007fd02511bdf8: hlt    
  0x00007fd02511bdf9: hlt    
  0x00007fd02511bdfa: hlt    
  0x00007fd02511bdfb: hlt    
  0x00007fd02511bdfc: hlt    
  0x00007fd02511bdfd: hlt    
  0x00007fd02511bdfe: hlt    
  0x00007fd02511bdff: hlt    
[Stub Code]
  0x00007fd02511be00: nop                       ;   {no_reloc}
  0x00007fd02511be01: nop
  0x00007fd02511be02: nop
  0x00007fd02511be03: nop
  0x00007fd02511be04: nop
  0x00007fd02511be05: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd02511be0f: jmpq   0x00007fd02511be0f  ;   {runtime_call}
  0x00007fd02511be14: nop
  0x00007fd02511be15: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd02511be1f: jmpq   0x00007fd02511be1f  ;   {runtime_call}
  0x00007fd02511be24: nop
  0x00007fd02511be25: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd02511be2f: jmpq   0x00007fd02511be2f  ;   {runtime_call}
[Exception Handler]
  0x00007fd02511be34: callq  0x00007fd0250fb820  ;   {runtime_call}
  0x00007fd02511be39: mov    %rsp,-0x28(%rsp)
  0x00007fd02511be3e: sub    $0x80,%rsp
  0x00007fd02511be45: mov    %rax,0x78(%rsp)
  0x00007fd02511be4a: mov    %rcx,0x70(%rsp)
  0x00007fd02511be4f: mov    %rdx,0x68(%rsp)
  0x00007fd02511be54: mov    %rbx,0x60(%rsp)
  0x00007fd02511be59: mov    %rbp,0x50(%rsp)
  0x00007fd02511be5e: mov    %rsi,0x48(%rsp)
  0x00007fd02511be63: mov    %rdi,0x40(%rsp)
  0x00007fd02511be68: mov    %r8,0x38(%rsp)
  0x00007fd02511be6d: mov    %r9,0x30(%rsp)
  0x00007fd02511be72: mov    %r10,0x28(%rsp)
  0x00007fd02511be77: mov    %r11,0x20(%rsp)
  0x00007fd02511be7c: mov    %r12,0x18(%rsp)
  0x00007fd02511be81: mov    %r13,0x10(%rsp)
  0x00007fd02511be86: mov    %r14,0x8(%rsp)
  0x00007fd02511be8b: mov    %r15,(%rsp)
  0x00007fd02511be8f: movabs $0x7fd03acf9f36,%rdi  ;   {external_word}
  0x00007fd02511be99: movabs $0x7fd02511be39,%rsi  ;   {internal_word}
  0x00007fd02511bea3: mov    %rsp,%rdx
  0x00007fd02511bea6: and    $0xfffffffffffffff0,%rsp
  0x00007fd02511beaa: callq  0x00007fd03aa25990  ;   {runtime_call}
  0x00007fd02511beaf: hlt    
[Deopt Handler Code]
  0x00007fd02511beb0: movabs $0x7fd02511beb0,%r10  ;   {section_word}
  0x00007fd02511beba: push   %r10
  0x00007fd02511bebc: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd02511bec1: hlt    
  0x00007fd02511bec2: hlt    
  0x00007fd02511bec3: hlt    
  0x00007fd02511bec4: hlt    
  0x00007fd02511bec5: hlt    
  0x00007fd02511bec6: hlt    
  0x00007fd02511bec7: hlt    
<nmethod compile_id='26' compiler='C1' level='3' entry='0x00007fd02511ba80' size='2080' address='0x00007fd02511b8d0' relocation_offset='296' insts_offset='432' stub_offset='1328' scopes_data_offset='1568' scopes_pcs_offset='1752' dependencies_offset='2056' nul_chk_table_offset='2064' oops_offset='1528' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='104505' iicount='1' stamp='0.224'/>
<writer thread='140532334335744'/>
<task_queued compile_id='27' compile_kind='osr' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='109956' iicount='1' osr_bci='9' stamp='0.224' comment='tiered' hot_count='109956'/>
<writer thread='140531747608320'/>
Decoding compiled method 0x00007fd025110d50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fd02179b370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;
  0x00007fd025110ec0: callq  0x00007fd03ab0ca20  ;   {runtime_call}
  0x00007fd025110ec5: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fd025110ed0: mov    %eax,-0x14000(%rsp)
  0x00007fd025110ed7: push   %rbp
  0x00007fd025110ed8: sub    $0x20,%rsp
  0x00007fd025110edc: mov    0x8(%rsi),%r10d
  0x00007fd025110ee0: mov    %r10d,(%rsp)
  0x00007fd025110ee4: mov    0x10(%rsi),%rbp
  0x00007fd025110ee8: mov    %rsi,%rdi
  0x00007fd025110eeb: movabs $0x7fd03abafd80,%r10
  0x00007fd025110ef5: callq  *%r10
  0x00007fd025110ef8: mov    0x8(%rbp),%r10d    ; implicit exception: dispatches to 0x00007fd025110fb7
  0x00007fd025110efc: cmp    $0xf800c005,%r10d  ;   {metadata(&apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007fd025110f03: jne    0x00007fd025110f96  ;*aload_0
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@9 (line 12)

  0x00007fd025110f09: jmp    0x00007fd025110f34
  0x00007fd025110f0b: mov    %rax,%rsi
  0x00007fd025110f0e: nop
  0x00007fd025110f0f: callq  0x00007fd025046420  ; OopMap{rbp=Oop off=84}
                                                ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)
                                                ;   {static_call}
  0x00007fd025110f14: cmp    $0x1,%eax
  0x00007fd025110f17: je     0x00007fd025110f91
  0x00007fd025110f1d: data16 xchg %ax,%ax       ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)

  0x00007fd025110f20: mov    (%rsp),%r10d
  0x00007fd025110f24: inc    %r10d              ;*iinc
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@30 (line 11)

  0x00007fd025110f27: mov    %r10d,(%rsp)
  0x00007fd025110f2b: cmp    $0xf4240,%r10d
  0x00007fd025110f32: jge    0x00007fd025110f81  ;*aload_0
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@9 (line 12)

  0x00007fd025110f34: mov    %rbp,%rsi
  0x00007fd025110f37: callq  0x00007fd025046020  ; OopMap{rbp=Oop off=124}
                                                ;*invokevirtual parse
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {optimized virtual_call}
  0x00007fd025110f3c: test   %rax,%rax
  0x00007fd025110f3f: je     0x00007fd025110f20
  0x00007fd025110f41: mov    (%rax),%r10
  0x00007fd025110f44: mov    %r10,%r11
  0x00007fd025110f47: and    $0x7,%r11
  0x00007fd025110f4b: cmp    $0x1,%r11
  0x00007fd025110f4f: jne    0x00007fd025110f0b
  0x00007fd025110f51: shr    $0x8,%r10
  0x00007fd025110f55: mov    %r10d,%r11d
  0x00007fd025110f58: and    $0x7fffffff,%r11d
  0x00007fd025110f5f: test   %r11d,%r11d
  0x00007fd025110f62: je     0x00007fd025110f0b
  0x00007fd025110f64: cmp    $0x1,%r11d
  0x00007fd025110f68: jne    0x00007fd025110f20  ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)

  0x00007fd025110f6a: mov    $0xffffff65,%esi
  0x00007fd025110f6f: mov    %r11d,0x4(%rsp)
  0x00007fd025110f74: data16 xchg %ax,%ax
  0x00007fd025110f77: callq  0x00007fd0250051a0  ; OopMap{rbp=Oop off=188}
                                                ;*if_icmpne
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@19 (line 13)
                                                ;   {runtime_call}
  0x00007fd025110f7c: callq  0x00007fd03ab0ca20  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@19 (line 13)
                                                ;   {runtime_call}
  0x00007fd025110f81: mov    $0xffffff65,%esi
  0x00007fd025110f86: nop
  0x00007fd025110f87: callq  0x00007fd0250051a0  ; OopMap{rbp=Oop off=204}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)
                                                ;   {runtime_call}
  0x00007fd025110f8c: callq  0x00007fd03ab0ca20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)
                                                ;   {runtime_call}
  0x00007fd025110f91: mov    %eax,%r11d
  0x00007fd025110f94: jmp    0x00007fd025110f6a
  0x00007fd025110f96: mov    $0xffffff9d,%esi
  0x00007fd025110f9b: callq  0x00007fd0250051a0  ; OopMap{rbp=Oop off=224}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@9 (line 12)
                                                ;   {runtime_call}
  0x00007fd025110fa0: callq  0x00007fd03ab0ca20  ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)
                                                ;   {runtime_call}
  0x00007fd025110fa5: mov    %rax,%rsi
  0x00007fd025110fa8: jmp    0x00007fd025110fad  ;*invokevirtual parse
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)

  0x00007fd025110faa: mov    %rax,%rsi          ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)

  0x00007fd025110fad: add    $0x20,%rsp
  0x00007fd025110fb1: pop    %rbp
  0x00007fd025110fb2: jmpq   0x00007fd025100320  ;   {runtime_call}
  0x00007fd025110fb7: mov    $0xffffff86,%esi
  0x00007fd025110fbc: mov    (%rsp),%ebp
  0x00007fd025110fbf: callq  0x00007fd0250051a0  ; OopMap{off=260}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@9 (line 12)
                                                ;   {runtime_call}
  0x00007fd025110fc4: callq  0x00007fd03ab0ca20  ;*aload_0
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@9 (line 12)
                                                ;   {runtime_call}
  0x00007fd025110fc9: hlt    
  0x00007fd025110fca: hlt    
  0x00007fd025110fcb: hlt    
  0x00007fd025110fcc: hlt    
  0x00007fd025110fcd: hlt    
  0x00007fd025110fce: hlt    
  0x00007fd025110fcf: hlt    
  0x00007fd025110fd0: hlt    
  0x00007fd025110fd1: hlt    
  0x00007fd025110fd2: hlt    
  0x00007fd025110fd3: hlt    
  0x00007fd025110fd4: hlt    
  0x00007fd025110fd5: hlt    
  0x00007fd025110fd6: hlt    
  0x00007fd025110fd7: hlt    
  0x00007fd025110fd8: hlt    
  0x00007fd025110fd9: hlt    
  0x00007fd025110fda: hlt    
  0x00007fd025110fdb: hlt    
  0x00007fd025110fdc: hlt    
  0x00007fd025110fdd: hlt    
  0x00007fd025110fde: hlt    
  0x00007fd025110fdf: hlt    
[Stub Code]
  0x00007fd025110fe0: movabs $0x0,%rbx          ;   {no_reloc}
  0x00007fd025110fea: jmpq   0x00007fd025110fea  ;   {runtime_call}
  0x00007fd025110fef: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fd025110ff9: jmpq   0x00007fd025110ff9  ;   {runtime_call}
[Exception Handler]
  0x00007fd025110ffe: jmpq   0x00007fd02506c760  ;   {runtime_call}
[Deopt Handler Code]
  0x00007fd025111003: callq  0x00007fd025111008
  0x00007fd025111008: subq   $0x5,(%rsp)
  0x00007fd02511100d: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd025111012: hlt    
  0x00007fd025111013: hlt    
  0x00007fd025111014: hlt    
  0x00007fd025111015: hlt    
  0x00007fd025111016: hlt    
  0x00007fd025111017: hlt    
<nmethod compile_id='27' compile_kind='osr' compiler='C2' level='4' entry='0x00007fd025110ec0' size='1224' address='0x00007fd025110d50' relocation_offset='296' insts_offset='368' stub_offset='656' scopes_data_offset='744' scopes_pcs_offset='848' dependencies_offset='1152' handler_table_offset='1160' nul_chk_table_offset='1208' oops_offset='712' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='145591' iicount='1' stamp='0.226'/>
<make_not_entrant thread='140531747608320' compile_id='25' compile_kind='osr' compiler='C1' level='3' stamp='0.226'/>
<writer thread='140532334335744'/>
<uncommon_trap thread='140532334335744' reason='unstable_if' action='reinterpret' compile_id='27' compile_kind='osr' compiler='C2' level='4' stamp='0.273'>
<jvms bci='36' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='151940' iicount='1'/>
</uncommon_trap>
<make_not_entrant thread='140532334335744' compile_id='27' compile_kind='osr' compiler='C2' level='4' stamp='0.273'/>
<task_queued compile_id='28' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='256' iicount='256' level='3' stamp='0.274' comment='tiered' hot_count='256'/>
[Loaded java.lang.Shutdown from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Shutdown$Lock from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='140531745502976'/>
Decoding compiled method 0x00007fd02511b590:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fd0213b4778} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fd02511b6e0: mov    %eax,-0x14000(%rsp)
  0x00007fd02511b6e7: push   %rbp
  0x00007fd02511b6e8: sub    $0x30,%rsp
  0x00007fd02511b6ec: movabs $0x7fd0215caf28,%rax  ;   {metadata(method data for {method} {0x00007fd0213b4778} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00007fd02511b6f6: mov    0xdc(%rax),%esi
  0x00007fd02511b6fc: add    $0x8,%esi
  0x00007fd02511b6ff: mov    %esi,0xdc(%rax)
  0x00007fd02511b705: movabs $0x7fd0213b4778,%rax  ;   {metadata({method} {0x00007fd0213b4778} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00007fd02511b70f: and    $0x1ff8,%esi
  0x00007fd02511b715: cmp    $0x0,%esi
  0x00007fd02511b718: je     0x00007fd02511b73b
  0x00007fd02511b71e: movabs $0x670b80c78,%rax  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007fd02511b728: mov    0x74(%rax),%eax
  0x00007fd02511b72b: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x00007fd02511b72f: add    $0x30,%rsp
  0x00007fd02511b733: pop    %rbp
  0x00007fd02511b734: test   %eax,0x16ce59c6(%rip)        # 0x00007fd03be01100
                                                ;   {poll_return}
  0x00007fd02511b73a: retq   
  0x00007fd02511b73b: mov    %rax,0x8(%rsp)
  0x00007fd02511b740: movq   $0xffffffffffffffff,(%rsp)
  0x00007fd02511b748: callq  0x00007fd0250fdea0  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x00007fd02511b74d: jmp    0x00007fd02511b71e
  0x00007fd02511b74f: nop
  0x00007fd02511b750: nop
  0x00007fd02511b751: mov    0x2a8(%r15),%rax
  0x00007fd02511b758: movabs $0x0,%r10
  0x00007fd02511b762: mov    %r10,0x2a8(%r15)
  0x00007fd02511b769: movabs $0x0,%r10
  0x00007fd02511b773: mov    %r10,0x2b0(%r15)
  0x00007fd02511b77a: add    $0x30,%rsp
  0x00007fd02511b77e: pop    %rbp
  0x00007fd02511b77f: jmpq   0x00007fd02506c4a0  ;   {runtime_call}
  0x00007fd02511b784: hlt    
  0x00007fd02511b785: hlt    
  0x00007fd02511b786: hlt    
  0x00007fd02511b787: hlt    
  0x00007fd02511b788: hlt    
  0x00007fd02511b789: hlt    
  0x00007fd02511b78a: hlt    
  0x00007fd02511b78b: hlt    
  0x00007fd02511b78c: hlt    
  0x00007fd02511b78d: hlt    
  0x00007fd02511b78e: hlt    
  0x00007fd02511b78f: hlt    
  0x00007fd02511b790: hlt    
  0x00007fd02511b791: hlt    
  0x00007fd02511b792: hlt    
  0x00007fd02511b793: hlt    
  0x00007fd02511b794: hlt    
  0x00007fd02511b795: hlt    
  0x00007fd02511b796: hlt    
  0x00007fd02511b797: hlt    
  0x00007fd02511b798: hlt    
  0x00007fd02511b799: hlt    
  0x00007fd02511b79a: hlt    
  0x00007fd02511b79b: hlt    
  0x00007fd02511b79c: hlt    
  0x00007fd02511b79d: hlt    
  0x00007fd02511b79e: hlt    
  0x00007fd02511b79f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fd02511b7a0: callq  0x00007fd0250fb820  ;   {no_reloc}
  0x00007fd02511b7a5: mov    %rsp,-0x28(%rsp)
  0x00007fd02511b7aa: sub    $0x80,%rsp
  0x00007fd02511b7b1: mov    %rax,0x78(%rsp)
  0x00007fd02511b7b6: mov    %rcx,0x70(%rsp)
  0x00007fd02511b7bb: mov    %rdx,0x68(%rsp)
  0x00007fd02511b7c0: mov    %rbx,0x60(%rsp)
  0x00007fd02511b7c5: mov    %rbp,0x50(%rsp)
  0x00007fd02511b7ca: mov    %rsi,0x48(%rsp)
  0x00007fd02511b7cf: mov    %rdi,0x40(%rsp)
  0x00007fd02511b7d4: mov    %r8,0x38(%rsp)
  0x00007fd02511b7d9: mov    %r9,0x30(%rsp)
  0x00007fd02511b7de: mov    %r10,0x28(%rsp)
  0x00007fd02511b7e3: mov    %r11,0x20(%rsp)
  0x00007fd02511b7e8: mov    %r12,0x18(%rsp)
  0x00007fd02511b7ed: mov    %r13,0x10(%rsp)
  0x00007fd02511b7f2: mov    %r14,0x8(%rsp)
  0x00007fd02511b7f7: mov    %r15,(%rsp)
  0x00007fd02511b7fb: movabs $0x7fd03acf9f36,%rdi  ;   {external_word}
  0x00007fd02511b805: movabs $0x7fd02511b7a5,%rsi  ;   {internal_word}
  0x00007fd02511b80f: mov    %rsp,%rdx
  0x00007fd02511b812: and    $0xfffffffffffffff0,%rsp
  0x00007fd02511b816: callq  0x00007fd03aa25990  ;   {runtime_call}
  0x00007fd02511b81b: hlt    
[Deopt Handler Code]
  0x00007fd02511b81c: movabs $0x7fd02511b81c,%r10  ;   {section_word}
  0x00007fd02511b826: push   %r10
  0x00007fd02511b828: jmpq   0x00007fd0250473c0  ;   {runtime_call}
  0x00007fd02511b82d: hlt    
  0x00007fd02511b82e: hlt    
  0x00007fd02511b82f: hlt    
<nmethod compile_id='28' compiler='C1' level='3' entry='0x00007fd02511b6e0' size='768' address='0x00007fd02511b590' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='696' dependencies_offset='760' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='257' iicount='257' stamp='0.275'/>
<writer thread='140531756197632'/>
<destroy_vm stamp='0.275'/>
<tty_done stamp='0.275'/>
</tty>
<compilation_log thread='140531746555648'>
<start_compile_thread name='C2 CompilerThread2' thread='140531746555648' process='4324' stamp='0.061'/>
<task compile_id='16' method='java/lang/String charAt (I)C' bytes='29' count='5715' iicount='5717' stamp='0.100'>
<phase name='parse' nodes='3' live='3' stamp='0.100'>
<type id='717' name='char'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='6' compiler='C1' level='3' iicount='5835'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='832' bci='13' reason='unloaded' action='reinterpret' index='6' klass='834'/>
<parse method='832' uses='5835' stamp='0.100'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='5829' cnt='5829' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='5829' not_taken='0' cnt='5829' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='102' live='97' memory='35040' stamp='0.152'/>
</parse>
<phase_done name='parse' nodes='103' live='63' stamp='0.152'/>
</phase>
<phase name='optimizer' nodes='103' live='63' stamp='0.152'>
<phase name='ccp' nodes='103' live='63' stamp='0.152'>
<phase_done name='ccp' nodes='103' live='63' stamp='0.152'/>
</phase>
<phase name='idealLoop' nodes='103' live='63' stamp='0.152'>
<phase_done name='idealLoop' nodes='103' live='63' stamp='0.152'/>
</phase>
<phase_done name='optimizer' nodes='107' live='63' stamp='0.152'/>
</phase>
<phase name='matcher' nodes='107' live='63' stamp='0.152'>
<phase_done name='matcher' nodes='55' live='55' stamp='0.152'/>
</phase>
<phase name='regalloc' nodes='70' live='69' stamp='0.152'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='80' live='75' stamp='0.152'/>
</phase>
<phase name='output' nodes='80' live='75' stamp='0.152'>
<phase_done name='output' nodes='94' live='86' stamp='0.164'/>
</phase>
<code_cache total_blobs='249' nmethods='18' adapters='143' free_code_cache='250514368'/>
<task_done success='1' nmsize='216' count='29225' stamp='0.165'/>
</task>
<task compile_id='24' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='5500' iicount='5502' stamp='0.167'>
<phase name='parse' nodes='3' live='3' stamp='0.168'>
<klass id='833' name='java/util/UUID' flags='17'/>
<klass id='832' name='com/github/marschall/charsequences/ParseUuidCompilation' flags='1'/>
<method id='834' holder='832' name='parse' return='833' flags='0' bytes='6' compile_id='19' compiler='C1' level='3' iicount='5547'/>
<parse method='834' uses='5547' stamp='0.168'>
<bc code='184' bci='2'/>
<klass id='838' name='java/lang/CharSequence' flags='1537'/>
<klass id='837' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='839' holder='837' name='uuidFromCharSequence' return='833' arguments='838' flags='9' bytes='276' compile_id='17' compiler='C1' level='3' iicount='5684'/>
<call method='839' count='5259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='5545' stamp='0.168'>
<bc code='185' bci='1'/>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='722' name='int'/>
<method id='847' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='22' compiler='C1' level='1' iicount='4243'/>
<dependency type='unique_concrete_method' ctxk='730' x='847'/>
<call method='847' count='5883' prof_factor='0.975545' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='847' uses='5739' stamp='0.168'>
<parse_done nodes='53' live='52' memory='27744' stamp='0.168'/>
</parse>
<bc code='159' bci='8'/>
<branch target_bci='16' taken='5883' not_taken='0' cnt='5883' prob='always'/>
<bc code='185' bci='19'/>
<type id='717' name='char'/>
<method id='850' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='16' compiler='C2' level='4' iicount='29225'/>
<dependency type='unique_concrete_method' ctxk='730' x='850'/>
<call method='850' count='5883' prof_factor='0.975545' inline='1'/>
<klass id='851' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='850' bci='13' reason='unloaded' action='reinterpret' index='6' klass='851'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='5739' stamp='0.168'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='29225' cnt='29225' prob='never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='29225' not_taken='0' cnt='29225' prob='always'/>
<bc code='52' bci='27'/>
<observe that='!need_range_check'/>
<parse_done nodes='104' live='102' memory='35376' stamp='0.168'/>
</parse>
<bc code='160' bci='26'/>
<branch target_bci='68' taken='0' not_taken='5883' cnt='5883' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='185' bci='32'/>
<dependency type='unique_concrete_method' ctxk='730' x='850'/>
<call method='850' count='5883' prof_factor='0.975545' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='5739' stamp='0.168'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='29225' cnt='29225' prob='never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='29225' not_taken='0' cnt='29225' prob='always'/>
<bc code='52' bci='27'/>
<observe that='!need_range_check'/>
<parse_done nodes='156' live='152' memory='45728' stamp='0.168'/>
</parse>
<bc code='160' bci='39'/>
<branch target_bci='68' taken='0' not_taken='5883' cnt='5883' prob='never'/>
<uncommon_trap bci='39' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='185' bci='45'/>
<dependency type='unique_concrete_method' ctxk='730' x='850'/>
<call method='850' count='5883' prof_factor='0.975545' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='5739' stamp='0.168'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='29225' cnt='29225' prob='never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='29225' not_taken='0' cnt='29225' prob='always'/>
<bc code='52' bci='27'/>
<observe that='!need_range_check'/>
<parse_done nodes='206' live='200' memory='52576' stamp='0.168'/>
</parse>
<bc code='160' bci='52'/>
<branch target_bci='68' taken='0' not_taken='5883' cnt='5883' prob='never'/>
<uncommon_trap bci='52' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='185' bci='58'/>
<dependency type='unique_concrete_method' ctxk='730' x='850'/>
<call method='850' count='5883' prof_factor='0.975545' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='5739' stamp='0.168'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='29225' cnt='29225' prob='never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='29225' not_taken='0' cnt='29225' prob='always'/>
<bc code='52' bci='27'/>
<observe that='!need_range_check'/>
<parse_done nodes='256' live='248' memory='59920' stamp='0.168'/>
</parse>
<bc code='159' bci='65'/>
<branch target_bci='73' taken='5883' not_taken='0' cnt='5883' prob='always'/>
<uncommon_trap bci='65' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='111'/>
<branch target_bci='83' taken='47063' not_taken='5883' cnt='5883' prob='0.888887'/>
<uncommon_trap bci='83' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='83' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='86'/>
<dependency type='unique_concrete_method' ctxk='730' x='850'/>
<call method='850' count='47063' prof_factor='0.975545' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='45912' stamp='0.168'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='29225' cnt='29225' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='29225' not_taken='0' cnt='29225' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='384' live='369' memory='88360' stamp='0.168'/>
</parse>
<bc code='184' bci='91'/>
<method id='844' holder='837' name='hexDigit' return='722' arguments='717' flags='8' bytes='59' compile_id='18' compiler='C2' level='4' iicount='26824'/>
<call method='844' count='47062' prof_factor='0.975545' inline='1'/>
<klass id='842' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='844' bci='51' reason='unloaded' action='reinterpret' index='172' klass='842'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='45911' stamp='0.168'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='26824' cnt='26824' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='8384' not_taken='18440' cnt='26824' prob='0.312556'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='8384' cnt='8384' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='8384' cnt='8384' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='450' live='430' memory='98984' stamp='0.168'/>
</parse>
<bc code='161' bci='111'/>
<branch target_bci='83' taken='47063' not_taken='5883' cnt='52946' prob='0.888887'/>
<bc code='161' bci='149'/>
<branch target_bci='121' taken='23532' not_taken='5883' cnt='5883' prob='0.8'/>
<uncommon_trap bci='121' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='121' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='124'/>
<dependency type='unique_concrete_method' ctxk='730' x='850'/>
<call method='850' count='23531' prof_factor='0.975545' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='22956' stamp='0.168'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='29225' cnt='29225' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='29225' not_taken='0' cnt='29225' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='576' live='550' memory='131304' stamp='0.168'/>
</parse>
<bc code='184' bci='129'/>
<call method='844' count='23531' prof_factor='0.975545' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='22956' stamp='0.168'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='26824' cnt='26824' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='8384' not_taken='18440' cnt='26824' prob='0.312556'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='8384' cnt='8384' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='8384' cnt='8384' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='635' live='604' memory='140280' stamp='0.169'/>
</parse>
<bc code='161' bci='149'/>
<branch target_bci='121' taken='23532' not_taken='5883' cnt='29415' prob='0.8'/>
<bc code='161' bci='187'/>
<branch target_bci='159' taken='23530' not_taken='5882' cnt='5883' prob='0.800014'/>
<uncommon_trap bci='159' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='159' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='162'/>
<dependency type='unique_concrete_method' ctxk='730' x='850'/>
<call method='850' count='23528' prof_factor='0.975545' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='22953' stamp='0.169'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='29225' cnt='29225' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='29225' not_taken='0' cnt='29225' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='760' live='723' memory='160008' stamp='0.169'/>
</parse>
<bc code='184' bci='167'/>
<call method='844' count='23530' prof_factor='0.975545' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='22955' stamp='0.169'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='26824' cnt='26824' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='8384' not_taken='18440' cnt='26824' prob='0.312556'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='8384' cnt='8384' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='8384' cnt='8384' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='819' live='777' memory='169272' stamp='0.169'/>
</parse>
<bc code='161' bci='187'/>
<branch target_bci='159' taken='23530' not_taken='5882' cnt='29412' prob='0.800014'/>
<bc code='161' bci='225'/>
<branch target_bci='197' taken='23530' not_taken='5882' cnt='5882' prob='0.800014'/>
<uncommon_trap bci='197' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='197' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='200'/>
<dependency type='unique_concrete_method' ctxk='730' x='850'/>
<call method='850' count='23528' prof_factor='0.975545' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='22953' stamp='0.169'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='29225' cnt='29225' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='29225' not_taken='0' cnt='29225' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='944' live='896' memory='189704' stamp='0.169'/>
</parse>
<bc code='184' bci='205'/>
<call method='844' count='23530' prof_factor='0.975545' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='22955' stamp='0.169'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='26824' cnt='26824' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='8384' not_taken='18440' cnt='26824' prob='0.312556'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='8384' cnt='8384' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='8384' cnt='8384' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='1003' live='950' memory='199040' stamp='0.169'/>
</parse>
<bc code='161' bci='225'/>
<branch target_bci='197' taken='23530' not_taken='5882' cnt='29412' prob='0.800014'/>
<bc code='161' bci='263'/>
<branch target_bci='235' taken='70587' not_taken='5882' cnt='5882' prob='0.92308'/>
<uncommon_trap bci='235' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='235' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='238'/>
<dependency type='unique_concrete_method' ctxk='730' x='850'/>
<call method='850' count='70584' prof_factor='0.975545' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='68858' stamp='0.169'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='29225' cnt='29225' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='29225' not_taken='0' cnt='29225' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='1128' live='1069' memory='247648' stamp='0.169'/>
</parse>
<bc code='184' bci='243'/>
<call method='844' count='70587' prof_factor='0.975545' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='68861' stamp='0.169'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='26824' cnt='26824' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='8384' not_taken='18440' cnt='26824' prob='0.312556'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='8384' cnt='8384' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='8384' cnt='8384' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='1187' live='1123' memory='256528' stamp='0.169'/>
</parse>
<bc code='161' bci='263'/>
<branch target_bci='235' taken='70587' not_taken='5882' cnt='76469' prob='0.92308'/>
<bc code='183' bci='272'/>
<type id='724' name='void'/>
<type id='723' name='long'/>
<method id='845' holder='833' name='&lt;init&gt;' return='724' arguments='723 723' flags='1' bytes='15' compile_id='21' compiler='C1' level='3' iicount='5915'/>
<call method='845' count='5882' prof_factor='0.975545' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='5738' stamp='0.169'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='854' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='11' compiler='C1' level='3' iicount='13058'/>
<call method='854' count='10828' prof_factor='0.970076' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='854' uses='10504' stamp='0.169'>
<parse_done nodes='1261' live='1196' memory='269496' stamp='0.169'/>
</parse>
<parse_done nodes='1273' live='1207' memory='271272' stamp='0.169'/>
</parse>
<parse_done nodes='1273' live='1206' memory='271400' stamp='0.169'/>
</parse>
<parse_done nodes='1275' live='1207' memory='272280' stamp='0.169'/>
</parse>
<phase_done name='parse' nodes='1277' live='632' stamp='0.169'/>
</phase>
<phase name='optimizer' nodes='1277' live='632' stamp='0.169'>
<phase name='idealLoop' nodes='1283' live='573' stamp='0.170'>
<loop_tree>
<loop idx='1293' >
</loop>
<loop idx='1299' >
</loop>
<loop idx='1305' >
</loop>
<loop idx='1311' >
</loop>
<loop idx='1317' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1325' live='456' stamp='0.170'/>
</phase>
<phase name='escapeAnalysis' nodes='1325' live='456' stamp='0.170'>
<phase name='connectionGraph' nodes='1327' live='458' stamp='0.170'>
<phase_done name='connectionGraph' nodes='1327' live='458' stamp='0.170'/>
</phase>
<phase_done name='escapeAnalysis' nodes='1327' live='458' stamp='0.170'/>
</phase>
<phase name='idealLoop' nodes='1327' live='458' stamp='0.170'>
<loop_tree>
<loop idx='1293' inner_loop='1' >
</loop>
<loop idx='1299' inner_loop='1' >
</loop>
<loop idx='1305' inner_loop='1' >
</loop>
<loop idx='1311' inner_loop='1' >
</loop>
<loop idx='1317' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1341' live='453' stamp='0.170'/>
</phase>
<phase name='idealLoop' nodes='1341' live='453' stamp='0.170'>
<loop_tree>
<loop idx='1498' inner_loop='1' main_loop='1498' >
</loop>
<loop idx='1556' inner_loop='1' >
</loop>
<loop idx='1614' inner_loop='1' >
</loop>
<loop idx='1684' inner_loop='1' >
</loop>
<loop idx='1917' inner_loop='1' main_loop='1917' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2001' live='953' stamp='0.171'/>
</phase>
<phase name='idealLoop' nodes='2001' live='953' stamp='0.171'>
<loop_tree>
<loop idx='1429' inner_loop='1' pre_loop='1293' >
</loop>
<loop idx='1498' inner_loop='1' main_loop='1498' >
</loop>
<loop idx='1363' inner_loop='1' post_loop='1293' >
</loop>
<loop idx='2041' inner_loop='1' >
</loop>
<loop idx='2142' inner_loop='1' >
</loop>
<loop idx='2254' inner_loop='1' >
</loop>
<loop idx='1823' inner_loop='1' pre_loop='1317' >
</loop>
<loop idx='1917' inner_loop='1' main_loop='1917' >
</loop>
<loop idx='1747' inner_loop='1' post_loop='1317' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2382' live='1178' stamp='0.173'/>
</phase>
<phase name='ccp' nodes='2382' live='1178' stamp='0.173'>
<phase_done name='ccp' nodes='2382' live='1178' stamp='0.173'/>
</phase>
<phase name='idealLoop' nodes='2383' live='1178' stamp='0.173'>
<loop_tree>
<loop idx='1429' inner_loop='1' pre_loop='1293' >
</loop>
<loop idx='1498' inner_loop='1' main_loop='1498' >
</loop>
<loop idx='1363' inner_loop='1' post_loop='1293' >
</loop>
<loop idx='1823' inner_loop='1' pre_loop='1317' >
</loop>
<loop idx='1917' inner_loop='1' main_loop='1917' >
</loop>
<loop idx='1747' inner_loop='1' post_loop='1317' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2389' live='1097' stamp='0.174'/>
</phase>
<phase name='idealLoop' nodes='2389' live='1097' stamp='0.174'>
<loop_tree>
<loop idx='1429' inner_loop='1' pre_loop='1293' >
</loop>
<loop idx='1498' inner_loop='1' main_loop='1498' >
</loop>
<loop idx='1363' inner_loop='1' post_loop='1293' >
</loop>
<loop idx='1823' inner_loop='1' pre_loop='1317' >
</loop>
<loop idx='1917' inner_loop='1' main_loop='1917' >
</loop>
<loop idx='1747' inner_loop='1' post_loop='1317' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2390' live='1031' stamp='0.175'/>
</phase>
<phase_done name='optimizer' nodes='2466' live='1084' stamp='0.175'/>
</phase>
<phase name='matcher' nodes='2466' live='1084' stamp='0.175'>
<phase_done name='matcher' nodes='1041' live='1041' stamp='0.176'/>
</phase>
<phase name='regalloc' nodes='1394' live='1394' stamp='0.176'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='1588' live='1516' stamp='0.180'/>
</phase>
<phase name='output' nodes='1588' live='1516' stamp='0.180'>
<phase_done name='output' nodes='1686' live='1538' stamp='0.180'/>
</phase>
<dependency type='unique_concrete_method' ctxk='730' x='847'/>
<dependency type='unique_concrete_method' ctxk='730' x='850'/>
<code_cache total_blobs='253' nmethods='23' adapters='143' free_code_cache='250509120'/>
<task_done success='1' nmsize='2424' count='60415' inlined_bytes='854' stamp='0.190'/>
</task>
</compilation_log>
<compilation_log thread='140531747608320'>
<start_compile_thread name='C2 CompilerThread1' thread='140531747608320' process='4324' stamp='0.061'/>
<task compile_id='23' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='276' count='2244' backedge_count='81284' iicount='2246' stamp='0.166'>
<phase name='parse' nodes='3' live='3' stamp='0.166'>
<klass id='834' name='java/util/UUID' flags='17'/>
<klass id='833' name='java/lang/CharSequence' flags='1537'/>
<klass id='832' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='835' holder='832' name='uuidFromCharSequence' return='834' arguments='833' flags='9' bytes='276' compile_id='17' compiler='C1' level='3' iicount='2289'/>
<parse method='835' uses='2289' stamp='0.166'>
<bc code='185' bci='1'/>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='722' name='int'/>
<method id='837' holder='833' name='length' return='722' flags='1025' bytes='0' iicount='1'/>
<call method='837' count='2197' prof_factor='1' virtual='1' inline='1' receiver='730' receiver_count='2197'/>
<method id='843' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='9' compiler='C1' level='3' iicount='3463'/>
<call method='843' count='2197' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='1' klass='730'/>
<uncommon_trap bci='1' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='1' reason='class_check' action='maybe_recompile' comment='monomorphic vcall checkcast'/>
<parse method='843' uses='2197' stamp='0.167'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='88' live='84' memory='34376' stamp='0.167'/>
</parse>
<bc code='159' bci='8'/>
<branch target_bci='16' taken='2197' not_taken='0' cnt='2197' prob='always'/>
<uncommon_trap bci='8' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='185' bci='19'/>
<type id='717' name='char'/>
<method id='845' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='16' compiler='C2' level='4' iicount='29225'/>
<dependency type='unique_concrete_method' ctxk='730' x='845'/>
<call method='845' count='2197' prof_factor='1' inline='1'/>
<klass id='846' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='845' bci='13' reason='unloaded' action='reinterpret' index='6' klass='846'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='2197' stamp='0.167'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='29225' cnt='29225' prob='never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='29225' not_taken='0' cnt='29225' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='174' live='166' memory='48992' stamp='0.168'/>
</parse>
<bc code='160' bci='26'/>
<branch target_bci='68' taken='0' not_taken='2197' cnt='2197' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='185' bci='32'/>
<dependency type='unique_concrete_method' ctxk='730' x='845'/>
<call method='845' count='2197' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='2197' stamp='0.168'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='29225' cnt='29225' prob='never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='29225' not_taken='0' cnt='29225' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='255' live='243' memory='59728' stamp='0.168'/>
</parse>
<bc code='160' bci='39'/>
<branch target_bci='68' taken='0' not_taken='2197' cnt='2197' prob='never'/>
<uncommon_trap bci='39' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='185' bci='45'/>
<dependency type='unique_concrete_method' ctxk='730' x='845'/>
<call method='845' count='2197' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='2197' stamp='0.168'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='29225' cnt='29225' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='29225' not_taken='0' cnt='29225' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='345' live='328' memory='79744' stamp='0.168'/>
</parse>
<bc code='160' bci='52'/>
<branch target_bci='68' taken='0' not_taken='2197' cnt='2197' prob='never'/>
<uncommon_trap bci='52' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='185' bci='58'/>
<dependency type='unique_concrete_method' ctxk='730' x='845'/>
<call method='845' count='2197' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='2197' stamp='0.168'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='29225' cnt='29225' prob='never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='29225' not_taken='0' cnt='29225' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='425' live='404' memory='91600' stamp='0.168'/>
</parse>
<bc code='159' bci='65'/>
<branch target_bci='73' taken='2197' not_taken='0' cnt='2197' prob='always'/>
<uncommon_trap bci='65' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='111'/>
<branch target_bci='83' taken='17576' not_taken='2197' cnt='2197' prob='0.888889'/>
<uncommon_trap bci='83' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='83' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='86'/>
<dependency type='unique_concrete_method' ctxk='730' x='845'/>
<call method='845' count='17576' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='17576' stamp='0.168'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='29225' cnt='29225' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='29225' not_taken='0' cnt='29225' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='569' live='540' memory='127568' stamp='0.168'/>
</parse>
<bc code='184' bci='91'/>
<method id='841' holder='832' name='hexDigit' return='722' arguments='717' flags='8' bytes='59' compile_id='18' compiler='C2' level='4' iicount='26824'/>
<call method='841' count='17576' prof_factor='1' inline='1'/>
<klass id='839' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='841' bci='51' reason='unloaded' action='reinterpret' index='172' klass='839'/>
<inline_success reason='inline (hot)'/>
<parse method='841' uses='17576' stamp='0.168'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='26824' cnt='26824' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='8384' not_taken='18440' cnt='26824' prob='0.312556'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='8384' cnt='8384' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='8384' cnt='8384' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='635' live='601' memory='137704' stamp='0.168'/>
</parse>
<bc code='161' bci='111'/>
<branch target_bci='83' taken='17576' not_taken='2197' cnt='19773' prob='0.888889'/>
<bc code='161' bci='149'/>
<branch target_bci='121' taken='8788' not_taken='2197' cnt='2197' prob='0.8'/>
<uncommon_trap bci='121' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='121' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='124'/>
<dependency type='unique_concrete_method' ctxk='730' x='845'/>
<call method='845' count='8788' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='8788' stamp='0.168'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='29225' cnt='29225' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='29225' not_taken='0' cnt='29225' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='777' live='736' memory='158792' stamp='0.168'/>
</parse>
<bc code='184' bci='129'/>
<call method='841' count='8788' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='841' uses='8788' stamp='0.168'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='26824' cnt='26824' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='8384' not_taken='18440' cnt='26824' prob='0.312556'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='8384' cnt='8384' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='8384' cnt='8384' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='836' live='790' memory='169008' stamp='0.168'/>
</parse>
<bc code='161' bci='149'/>
<branch target_bci='121' taken='8788' not_taken='2197' cnt='10985' prob='0.8'/>
<bc code='161' bci='187'/>
<branch target_bci='159' taken='8788' not_taken='2197' cnt='2197' prob='0.8'/>
<uncommon_trap bci='159' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='159' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='162'/>
<dependency type='unique_concrete_method' ctxk='730' x='845'/>
<call method='845' count='8788' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='8788' stamp='0.168'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='29225' cnt='29225' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='29225' not_taken='0' cnt='29225' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='977' live='924' memory='190592' stamp='0.168'/>
</parse>
<bc code='184' bci='167'/>
<call method='841' count='8788' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='841' uses='8788' stamp='0.168'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='26824' cnt='26824' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='8384' not_taken='18440' cnt='26824' prob='0.312556'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='8384' cnt='8384' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='8384' cnt='8384' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='1036' live='978' memory='225064' stamp='0.168'/>
</parse>
<bc code='161' bci='187'/>
<branch target_bci='159' taken='8788' not_taken='2197' cnt='10985' prob='0.8'/>
<bc code='161' bci='225'/>
<branch target_bci='197' taken='8788' not_taken='2197' cnt='2197' prob='0.8'/>
<uncommon_trap bci='197' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='197' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='200'/>
<dependency type='unique_concrete_method' ctxk='730' x='845'/>
<call method='845' count='8788' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='8788' stamp='0.169'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='29225' cnt='29225' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='29225' not_taken='0' cnt='29225' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='1177' live='1112' memory='250688' stamp='0.169'/>
</parse>
<bc code='184' bci='205'/>
<call method='841' count='8788' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='841' uses='8788' stamp='0.169'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='26824' cnt='26824' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='8384' not_taken='18440' cnt='26824' prob='0.312556'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='8384' cnt='8384' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='8384' cnt='8384' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='1236' live='1166' memory='259936' stamp='0.169'/>
</parse>
<bc code='161' bci='225'/>
<branch target_bci='197' taken='8788' not_taken='2197' cnt='10985' prob='0.8'/>
<bc code='161' bci='263'/>
<branch target_bci='235' taken='26360' not_taken='2196' cnt='2197' prob='0.923098'/>
<uncommon_trap bci='235' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='235' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='238'/>
<dependency type='unique_concrete_method' ctxk='730' x='845'/>
<call method='845' count='26358' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='26358' stamp='0.169'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='29225' cnt='29225' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='29225' not_taken='0' cnt='29225' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='1377' live='1300' memory='281256' stamp='0.169'/>
</parse>
<bc code='184' bci='243'/>
<call method='841' count='26359' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='841' uses='26359' stamp='0.169'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='26824' cnt='26824' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='8384' not_taken='18440' cnt='26824' prob='0.312556'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='8384' cnt='8384' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='8384' cnt='8384' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='1436' live='1354' memory='290616' stamp='0.169'/>
</parse>
<bc code='161' bci='263'/>
<branch target_bci='235' taken='26360' not_taken='2196' cnt='28556' prob='0.923098'/>
<bc code='183' bci='272'/>
<type id='724' name='void'/>
<type id='723' name='long'/>
<method id='842' holder='834' name='&lt;init&gt;' return='724' arguments='723 723' flags='1' bytes='15' compile_id='21' compiler='C1' level='3' iicount='2475'/>
<call method='842' count='2196' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='2196' stamp='0.169'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='849' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='11' compiler='C1' level='3' iicount='12217'/>
<call method='849' count='9988' prof_factor='0.887273' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='8862' stamp='0.169'>
<parse_done nodes='1509' live='1426' memory='303024' stamp='0.169'/>
</parse>
<parse_done nodes='1521' live='1437' memory='304864' stamp='0.169'/>
</parse>
<parse_done nodes='1521' live='1436' memory='304992' stamp='0.169'/>
</parse>
<phase_done name='parse' nodes='1523' live='819' stamp='0.169'/>
</phase>
<phase name='optimizer' nodes='1523' live='819' stamp='0.169'>
<phase name='idealLoop' nodes='1552' live='717' stamp='0.170'>
<loop_tree>
<loop idx='1562' >
</loop>
<loop idx='1568' >
</loop>
<loop idx='1574' >
</loop>
<loop idx='1580' >
</loop>
<loop idx='1586' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1593' live='654' stamp='0.170'/>
</phase>
<phase name='escapeAnalysis' nodes='1593' live='654' stamp='0.170'>
<phase name='connectionGraph' nodes='1594' live='655' stamp='0.170'>
<phase_done name='connectionGraph' nodes='1594' live='655' stamp='0.170'/>
</phase>
<phase_done name='escapeAnalysis' nodes='1594' live='655' stamp='0.170'/>
</phase>
<phase name='idealLoop' nodes='1594' live='655' stamp='0.170'>
<loop_tree>
<loop idx='1562' inner_loop='1' >
</loop>
<loop idx='1568' inner_loop='1' >
</loop>
<loop idx='1574' inner_loop='1' >
</loop>
<loop idx='1580' inner_loop='1' >
</loop>
<loop idx='1586' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1594' live='619' stamp='0.170'/>
</phase>
<phase name='idealLoop' nodes='1594' live='619' stamp='0.170'>
<loop_tree>
<loop idx='1562' inner_loop='1' >
</loop>
<loop idx='1568' inner_loop='1' >
</loop>
<loop idx='1574' inner_loop='1' >
</loop>
<loop idx='1580' inner_loop='1' >
</loop>
<loop idx='1586' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1725' live='650' stamp='0.171'/>
</phase>
<phase name='idealLoop' nodes='1725' live='650' stamp='0.171'>
<loop_tree>
<loop idx='1918' inner_loop='1' main_loop='1918' >
</loop>
<loop idx='1984' inner_loop='1' >
</loop>
<loop idx='2054' inner_loop='1' >
</loop>
<loop idx='2133' inner_loop='1' >
</loop>
<loop idx='2368' inner_loop='1' main_loop='2368' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2451' live='1177' stamp='0.172'/>
</phase>
<phase name='ccp' nodes='2451' live='1177' stamp='0.172'>
<phase_done name='ccp' nodes='2451' live='1177' stamp='0.173'/>
</phase>
<phase name='idealLoop' nodes='2454' live='1169' stamp='0.173'>
<loop_tree>
<loop idx='1825' inner_loop='1' pre_loop='1562' >
</loop>
<loop idx='1918' inner_loop='1' main_loop='1918' >
</loop>
<loop idx='1749' inner_loop='1' post_loop='1562' >
</loop>
<loop idx='2506' inner_loop='1' >
</loop>
<loop idx='2624' inner_loop='1' >
</loop>
<loop idx='2753' inner_loop='1' >
</loop>
<loop idx='2278' inner_loop='1' pre_loop='1586' >
</loop>
<loop idx='2368' inner_loop='1' main_loop='2368' >
</loop>
<loop idx='2203' inner_loop='1' post_loop='1586' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2959' live='1441' stamp='0.174'/>
</phase>
<phase name='idealLoop' nodes='2959' live='1441' stamp='0.174'>
<loop_tree>
<loop idx='1825' inner_loop='1' pre_loop='1562' >
</loop>
<loop idx='1918' inner_loop='1' main_loop='1918' >
</loop>
<loop idx='1749' inner_loop='1' post_loop='1562' >
</loop>
<loop idx='2278' inner_loop='1' pre_loop='1586' >
</loop>
<loop idx='2368' inner_loop='1' main_loop='2368' >
</loop>
<loop idx='2203' inner_loop='1' post_loop='1586' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2959' live='1376' stamp='0.175'/>
</phase>
<phase name='idealLoop' nodes='2959' live='1376' stamp='0.175'>
<loop_tree>
<loop idx='1825' inner_loop='1' pre_loop='1562' >
</loop>
<loop idx='1918' inner_loop='1' main_loop='1918' >
</loop>
<loop idx='1749' inner_loop='1' post_loop='1562' >
</loop>
<loop idx='2278' inner_loop='1' pre_loop='1586' >
</loop>
<loop idx='2368' inner_loop='1' main_loop='2368' >
</loop>
<loop idx='2203' inner_loop='1' post_loop='1586' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2984' live='1337' stamp='0.176'/>
</phase>
<phase_done name='optimizer' nodes='3077' live='1406' stamp='0.176'/>
</phase>
<phase name='matcher' nodes='3077' live='1406' stamp='0.176'>
<phase_done name='matcher' nodes='1353' live='1353' stamp='0.177'/>
</phase>
<phase name='regalloc' nodes='1834' live='1832' stamp='0.178'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='2144' live='2019' stamp='0.183'/>
</phase>
<phase name='output' nodes='2144' live='2019' stamp='0.183'>
<phase_done name='output' nodes='2269' live='2054' stamp='0.191'/>
</phase>
<dependency type='unique_concrete_method' ctxk='730' x='845'/>
<code_cache total_blobs='254' nmethods='25' adapters='143' free_code_cache='250501824'/>
<task_done success='1' nmsize='3384' count='60415' backedge_count='2233585' inlined_bytes='572' stamp='0.222'/>
</task>
<task compile_id='27' compile_kind='osr' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='110358' iicount='1' osr_bci='9' stamp='0.224'>
<phase name='parse' nodes='3' live='3' stamp='0.224'>
<type id='724' name='void'/>
<klass id='832' name='com/github/marschall/charsequences/ParseUuidCompilation' flags='1'/>
<method id='833' holder='832' name='&lt;init&gt;' return='724' flags='1' bytes='40' compile_id='26' compiler='C1' level='3' iicount='1'/>
<klass id='839' name='java/io/PrintStream' flags='1'/>
<uncommon_trap method='833' bci='27' reason='unloaded' action='reinterpret' index='32' klass='839'/>
<parse method='833' uses='1' osr_bci='9' stamp='0.224'>
<uncommon_trap method='833' bci='27' reason='unloaded' action='reinterpret' index='32' klass='839'/>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='leaf_type' ctxk='832'/>
<uncommon_trap bci='9' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='9' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='9' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='10'/>
<klass id='836' name='java/util/UUID' flags='17'/>
<method id='837' holder='832' name='parse' return='836' flags='0' bytes='6' compile_id='24' compiler='C2' level='4' iicount='91463'/>
<dependency type='unique_concrete_method' ctxk='832' x='837'/>
<call method='837' count='30655' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a big method'/>
<direct_call bci='10'/>
<uncommon_trap bci='10' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='15'/>
<type id='722' name='int'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='838' holder='735' name='identityHashCode' return='722' arguments='729' flags='265' bytes='0' compile_id='20' compile_kind='c2n' level='0' iicount='256'/>
<call method='838' count='30655' prof_factor='1' inline='1'/>
<intrinsic id='_identityHashCode' nodes='46'/>
<bc code='160' bci='19'/>
<branch target_bci='30' taken='30654' not_taken='0' cnt='30654' prob='always'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='36'/>
<branch target_bci='9' taken='30654' not_taken='0' cnt='30654' prob='always'/>
<uncommon_trap bci='36' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='216' live='210' memory='53624' stamp='0.225'/>
</parse>
<phase_done name='parse' nodes='217' live='160' stamp='0.225'/>
</phase>
<phase name='optimizer' nodes='217' live='160' stamp='0.225'>
<phase name='idealLoop' nodes='226' live='154' stamp='0.225'>
<loop_tree>
<loop idx='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='260' live='162' stamp='0.225'/>
</phase>
<phase name='idealLoop' nodes='260' live='162' stamp='0.225'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='265' live='159' stamp='0.225'/>
</phase>
<phase name='idealLoop' nodes='265' live='159' stamp='0.225'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='265' live='159' stamp='0.225'/>
</phase>
<phase name='ccp' nodes='265' live='159' stamp='0.225'>
<phase_done name='ccp' nodes='265' live='159' stamp='0.225'/>
</phase>
<phase name='idealLoop' nodes='266' live='156' stamp='0.225'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='284' live='150' stamp='0.225'/>
</phase>
<phase name='idealLoop' nodes='284' live='150' stamp='0.225'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='284' live='134' stamp='0.225'/>
</phase>
<phase name='idealLoop' nodes='284' live='134' stamp='0.225'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='284' live='134' stamp='0.225'/>
</phase>
<phase_done name='optimizer' nodes='287' live='134' stamp='0.225'/>
</phase>
<phase name='matcher' nodes='287' live='134' stamp='0.225'>
<phase_done name='matcher' nodes='125' live='125' stamp='0.225'/>
</phase>
<phase name='regalloc' nodes='166' live='165' stamp='0.225'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='196' live='181' stamp='0.226'/>
</phase>
<phase name='output' nodes='196' live='181' stamp='0.226'>
<phase_done name='output' nodes='215' live='192' stamp='0.226'/>
</phase>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='unique_concrete_method' ctxk='832' x='837'/>
<code_cache total_blobs='256' nmethods='27' adapters='143' free_code_cache='250498432'/>
<task_done success='1' nmsize='344' count='1' backedge_count='145769' stamp='0.226'/>
</task>
</compilation_log>
<compilation_log thread='140531745502976'>
<start_compile_thread name='C1 CompilerThread3' thread='140531745502976' process='4324' stamp='0.061'/>
<task compile_id='1' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='256' iicount='256' level='3' stamp='0.061'>
<phase name='buildIR' stamp='0.061'>
<type id='724' name='void'/>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' iicount='256'/>
<parse method='832'  stamp='0.061'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='834' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='1542'/>
<call method='834' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<parse_done stamp='0.061'/>
</parse>
<bc code='183' bci='13'/>
<klass id='836' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='837' holder='836' name='&lt;init&gt;' return='724' arguments='722' unloaded='1'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='30'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='65'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='75'/>
<klass id='839' name='java/util/Arrays' flags='1'/>
<method id='840' holder='839' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' iicount='256'/>
<call method='840' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.061'/>
</parse>
<phase name='optimize_blocks' stamp='0.061'>
<phase_done name='optimize_blocks' stamp='0.061'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.061'>
<phase_done name='rangeCheckElimination' stamp='0.061'/>
</phase>
<phase name='optimize_null_checks' stamp='0.061'>
<phase_done name='optimize_null_checks' stamp='0.061'/>
</phase>
<phase_done name='buildIR' stamp='0.061'/>
</phase>
<phase name='emit_lir' stamp='0.061'>
<phase name='lirGeneration' stamp='0.061'>
<phase_done name='lirGeneration' stamp='0.061'/>
</phase>
<phase name='linearScan' stamp='0.061'>
<phase_done name='linearScan' stamp='0.062'/>
</phase>
<phase_done name='emit_lir' stamp='0.062'/>
</phase>
<phase name='codeemit' stamp='0.062'>
<phase_done name='codeemit' stamp='0.062'/>
</phase>
<phase name='codeinstall' stamp='0.062'>
<phase_done name='codeinstall' stamp='0.065'/>
</phase>
<code_cache total_blobs='209' nmethods='1' adapters='132' free_code_cache='250598656'/>
<task_done success='1' nmsize='1272' count='256' inlined_bytes='1' stamp='0.065'/>
</task>
<task compile_id='3' method='java/lang/Math min (II)I' bytes='11' count='640' iicount='640' level='3' stamp='0.065'>
<phase name='buildIR' stamp='0.065'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/Math' flags='17'/>
<method id='833' holder='832' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='640'/>
<parse method='833'  stamp='0.065'>
<parse_done stamp='0.065'/>
</parse>
<phase name='optimize_blocks' stamp='0.065'>
<phase_done name='optimize_blocks' stamp='0.065'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.065'>
<phase_done name='rangeCheckElimination' stamp='0.065'/>
</phase>
<phase name='optimize_null_checks' stamp='0.065'>
<phase_done name='optimize_null_checks' stamp='0.065'/>
</phase>
<phase_done name='buildIR' stamp='0.065'/>
</phase>
<phase name='emit_lir' stamp='0.065'>
<phase name='lirGeneration' stamp='0.065'>
<phase_done name='lirGeneration' stamp='0.065'/>
</phase>
<phase name='linearScan' stamp='0.065'>
<phase_done name='linearScan' stamp='0.065'/>
</phase>
<phase_done name='emit_lir' stamp='0.065'/>
</phase>
<phase name='codeemit' stamp='0.065'>
<phase_done name='codeemit' stamp='0.065'/>
</phase>
<phase name='codeinstall' stamp='0.065'>
<phase_done name='codeinstall' stamp='0.066'/>
</phase>
<code_cache total_blobs='210' nmethods='2' adapters='132' free_code_cache='250603520'/>
<task_done success='1' nmsize='400' count='640' stamp='0.066'/>
</task>
<task compile_id='2' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='256' iicount='256' level='3' stamp='0.066'>
<phase name='buildIR' stamp='0.066'>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='832' name='java/util/Arrays' flags='1'/>
<method id='833' holder='832' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' iicount='256'/>
<parse method='833'  stamp='0.066'>
<bc code='183' bci='16'/>
<type id='724' name='void'/>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<method id='836' holder='795' name='&lt;init&gt;' return='724' flags='1' bytes='7' iicount='80'/>
<call method='836' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='3'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='838' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='80'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='840' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='1551'/>
<call method='840' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='840'>
<parse_done stamp='0.066'/>
</parse>
<parse_done stamp='0.066'/>
</parse>
<parse_done stamp='0.066'/>
</parse>
<bc code='182' bci='20'/>
<method id='842' holder='795' name='append' return='795' arguments='722' flags='1' bytes='8' iicount='1'/>
<call method='842' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<bc code='183' bci='2'/>
<method id='844' holder='793' name='append' return='793' arguments='722' flags='1' bytes='62' iicount='1'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.066'/>
</parse>
<bc code='182' bci='25'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='847' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' iicount='131'/>
<call method='847' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='183' bci='2'/>
<method id='849' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' iicount='131'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.066'/>
</parse>
<bc code='182' bci='29'/>
<call method='842' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<bc code='183' bci='2'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.066'/>
</parse>
<bc code='182' bci='32'/>
<method id='851' holder='795' name='toString' return='730' flags='1' bytes='17' iicount='80'/>
<call method='851' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='183' bci='13'/>
<method id='853' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' compile_id='1' compiler='C1' level='3' iicount='256'/>
<call method='853' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.066'/>
</parse>
<bc code='183' bci='35'/>
<klass id='835' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='855' holder='835' name='&lt;init&gt;' return='724' arguments='730' flags='1' bytes='6' iicount='1'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='857' name='java/lang/Math' flags='17'/>
<method id='858' holder='857' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='3' compiler='C1' level='3' iicount='640'/>
<call method='858' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<parse_done stamp='0.067'/>
</parse>
<bc code='184' bci='57'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='860' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' iicount='596'/>
<call method='860' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.067'/>
</parse>
<phase name='optimize_blocks' stamp='0.067'>
<phase_done name='optimize_blocks' stamp='0.067'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.067'>
<phase_done name='rangeCheckElimination' stamp='0.067'/>
</phase>
<phase name='optimize_null_checks' stamp='0.067'>
<phase_done name='optimize_null_checks' stamp='0.067'/>
</phase>
<phase_done name='buildIR' stamp='0.067'/>
</phase>
<phase name='emit_lir' stamp='0.067'>
<phase name='lirGeneration' stamp='0.067'>
<phase_done name='lirGeneration' stamp='0.067'/>
</phase>
<phase name='linearScan' stamp='0.067'>
<phase_done name='linearScan' stamp='0.067'/>
</phase>
<phase_done name='emit_lir' stamp='0.067'/>
</phase>
<phase name='codeemit' stamp='0.067'>
<phase_done name='codeemit' stamp='0.067'/>
</phase>
<phase name='codeinstall' stamp='0.067'>
<phase_done name='codeinstall' stamp='0.072'/>
</phase>
<code_cache total_blobs='218' nmethods='3' adapters='132' free_code_cache='250596736'/>
<task_done success='1' nmsize='2872' count='256' inlined_bytes='72' stamp='0.072'/>
</task>
<task compile_id='4' method='java/lang/String hashCode ()I' bytes='55' count='416' backedge_count='6145' iicount='416' level='3' stamp='0.073'>
<phase name='buildIR' stamp='0.073'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='hashCode' return='722' flags='1' bytes='55' iicount='420'/>
<parse method='832'  stamp='0.073'>
<parse_done stamp='0.073'/>
</parse>
<phase name='optimize_blocks' stamp='0.073'>
<phase_done name='optimize_blocks' stamp='0.073'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.073'>
<phase_done name='rangeCheckElimination' stamp='0.073'/>
</phase>
<phase name='optimize_null_checks' stamp='0.073'>
<phase_done name='optimize_null_checks' stamp='0.073'/>
</phase>
<phase_done name='buildIR' stamp='0.073'/>
</phase>
<phase name='emit_lir' stamp='0.073'>
<phase name='lirGeneration' stamp='0.073'>
<phase_done name='lirGeneration' stamp='0.073'/>
</phase>
<phase name='linearScan' stamp='0.073'>
<phase_done name='linearScan' stamp='0.073'/>
</phase>
<phase_done name='emit_lir' stamp='0.073'/>
</phase>
<phase name='codeemit' stamp='0.073'>
<phase_done name='codeemit' stamp='0.073'/>
</phase>
<phase name='codeinstall' stamp='0.073'>
<phase_done name='codeinstall' stamp='0.075'/>
</phase>
<code_cache total_blobs='224' nmethods='4' adapters='135' free_code_cache='250566400'/>
<task_done success='1' nmsize='656' count='437' backedge_count='6739' stamp='0.075'/>
</task>
<task compile_id='5' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='387' backedge_count='1356' iicount='387' level='3' stamp='0.075'>
<phase name='buildIR' stamp='0.075'>
<type id='716' name='boolean'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='equals' return='716' arguments='729' flags='1' bytes='81' iicount='387'/>
<parse method='832'  stamp='0.075'>
<parse_done stamp='0.075'/>
</parse>
<phase name='optimize_blocks' stamp='0.075'>
<phase_done name='optimize_blocks' stamp='0.075'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.075'>
<phase_done name='rangeCheckElimination' stamp='0.075'/>
</phase>
<phase name='optimize_null_checks' stamp='0.075'>
<phase_done name='optimize_null_checks' stamp='0.075'/>
</phase>
<phase_done name='buildIR' stamp='0.075'/>
</phase>
<phase name='emit_lir' stamp='0.075'>
<phase name='lirGeneration' stamp='0.075'>
<phase_done name='lirGeneration' stamp='0.075'/>
</phase>
<phase name='linearScan' stamp='0.075'>
<phase_done name='linearScan' stamp='0.075'/>
</phase>
<phase_done name='emit_lir' stamp='0.075'/>
</phase>
<phase name='codeemit' stamp='0.075'>
<phase_done name='codeemit' stamp='0.075'/>
</phase>
<phase name='codeinstall' stamp='0.075'>
<phase_done name='codeinstall' stamp='0.078'/>
</phase>
<code_cache total_blobs='225' nmethods='5' adapters='135' free_code_cache='250563840'/>
<task_done success='1' nmsize='1360' count='387' backedge_count='1356' stamp='0.078'/>
</task>
<task compile_id='6' method='java/lang/String charAt (I)C' bytes='29' count='2333' iicount='2333' level='3' stamp='0.078'>
<phase name='buildIR' stamp='0.078'>
<type id='717' name='char'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' iicount='2399'/>
<parse method='832'  stamp='0.078'>
<bc code='183' bci='18'/>
<type id='724' name='void'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='835' holder='834' name='&lt;init&gt;' return='724' arguments='722' unloaded='1'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.078'/>
</parse>
<phase name='optimize_blocks' stamp='0.078'>
<phase_done name='optimize_blocks' stamp='0.078'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.078'>
<phase_done name='rangeCheckElimination' stamp='0.078'/>
</phase>
<phase name='optimize_null_checks' stamp='0.078'>
<phase_done name='optimize_null_checks' stamp='0.078'/>
</phase>
<phase_done name='buildIR' stamp='0.078'/>
</phase>
<phase name='emit_lir' stamp='0.078'>
<phase name='lirGeneration' stamp='0.078'>
<phase_done name='lirGeneration' stamp='0.078'/>
</phase>
<phase name='linearScan' stamp='0.078'>
<phase_done name='linearScan' stamp='0.078'/>
</phase>
<phase_done name='emit_lir' stamp='0.078'/>
</phase>
<phase name='codeemit' stamp='0.078'>
<phase_done name='codeemit' stamp='0.078'/>
</phase>
<phase name='codeinstall' stamp='0.078'>
<phase_done name='codeinstall' stamp='0.079'/>
</phase>
<code_cache total_blobs='226' nmethods='6' adapters='135' free_code_cache='250562432'/>
<task_done success='1' nmsize='616' count='2566' stamp='0.080'/>
</task>
<task compile_id='8' method='java/lang/String indexOf (II)I' bytes='70' count='170' backedge_count='5200' iicount='170' level='3' stamp='0.083'>
<phase name='buildIR' stamp='0.083'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' iicount='170'/>
<parse method='832'  stamp='0.083'>
<bc code='183' bci='66'/>
<method id='834' holder='730' name='indexOfSupplementary' return='722' arguments='722 722' flags='2' bytes='71' iicount='1'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.083'/>
</parse>
<phase name='optimize_blocks' stamp='0.083'>
<phase_done name='optimize_blocks' stamp='0.083'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.083'>
<phase_done name='rangeCheckElimination' stamp='0.083'/>
</phase>
<phase name='optimize_null_checks' stamp='0.083'>
<phase_done name='optimize_null_checks' stamp='0.083'/>
</phase>
<phase_done name='buildIR' stamp='0.083'/>
</phase>
<phase name='emit_lir' stamp='0.083'>
<phase name='lirGeneration' stamp='0.083'>
<phase_done name='lirGeneration' stamp='0.083'/>
</phase>
<phase name='linearScan' stamp='0.083'>
<phase_done name='linearScan' stamp='0.083'/>
</phase>
<phase_done name='emit_lir' stamp='0.083'/>
</phase>
<phase name='codeemit' stamp='0.083'>
<phase_done name='codeemit' stamp='0.083'/>
</phase>
<phase name='codeinstall' stamp='0.083'>
<phase_done name='codeinstall' stamp='0.085'/>
</phase>
<code_cache total_blobs='232' nmethods='8' adapters='139' free_code_cache='250557376'/>
<task_done success='1' nmsize='904' count='207' backedge_count='6985' stamp='0.085'/>
</task>
<task compile_id='11' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1762' iicount='1762' level='3' stamp='0.085'>
<phase name='buildIR' stamp='0.085'>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='832' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='1762'/>
<parse method='832'  stamp='0.085'>
<parse_done stamp='0.085'/>
</parse>
<phase name='optimize_blocks' stamp='0.085'>
<phase_done name='optimize_blocks' stamp='0.085'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.085'>
<phase_done name='rangeCheckElimination' stamp='0.085'/>
</phase>
<phase name='optimize_null_checks' stamp='0.085'>
<phase_done name='optimize_null_checks' stamp='0.085'/>
</phase>
<phase_done name='buildIR' stamp='0.085'/>
</phase>
<phase name='emit_lir' stamp='0.085'>
<phase name='lirGeneration' stamp='0.085'>
<phase_done name='lirGeneration' stamp='0.085'/>
</phase>
<phase name='linearScan' stamp='0.085'>
<phase_done name='linearScan' stamp='0.085'/>
</phase>
<phase_done name='emit_lir' stamp='0.085'/>
</phase>
<phase name='codeemit' stamp='0.085'>
<phase_done name='codeemit' stamp='0.085'/>
</phase>
<phase name='codeinstall' stamp='0.086'>
<phase_done name='codeinstall' stamp='0.086'/>
</phase>
<code_cache total_blobs='233' nmethods='9' adapters='139' free_code_cache='250556480'/>
<task_done success='1' nmsize='336' count='1781' stamp='0.086'/>
</task>
<task compile_id='9' method='java/lang/String length ()I' bytes='6' count='677' iicount='677' level='3' stamp='0.086'>
<phase name='buildIR' stamp='0.086'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='length' return='722' flags='1' bytes='6' iicount='677'/>
<parse method='832'  stamp='0.086'>
<parse_done stamp='0.086'/>
</parse>
<phase name='optimize_blocks' stamp='0.086'>
<phase_done name='optimize_blocks' stamp='0.086'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.086'>
<phase_done name='rangeCheckElimination' stamp='0.086'/>
</phase>
<phase name='optimize_null_checks' stamp='0.086'>
<phase_done name='optimize_null_checks' stamp='0.086'/>
</phase>
<phase_done name='buildIR' stamp='0.086'/>
</phase>
<phase name='emit_lir' stamp='0.086'>
<phase name='lirGeneration' stamp='0.086'>
<phase_done name='lirGeneration' stamp='0.086'/>
</phase>
<phase name='linearScan' stamp='0.086'>
<phase_done name='linearScan' stamp='0.086'/>
</phase>
<phase_done name='emit_lir' stamp='0.086'/>
</phase>
<phase name='codeemit' stamp='0.086'>
<phase_done name='codeemit' stamp='0.086'/>
</phase>
<phase name='codeinstall' stamp='0.086'>
<phase_done name='codeinstall' stamp='0.087'/>
</phase>
<code_cache total_blobs='234' nmethods='10' adapters='139' free_code_cache='250555520'/>
<task_done success='1' nmsize='368' count='677' stamp='0.087'/>
</task>
<task compile_id='10' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='335' iicount='335' level='3' stamp='0.087'>
<phase name='buildIR' stamp='0.087'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='832' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='335'/>
<parse method='832'  stamp='0.087'>
<bc code='183' bci='17'/>
<method id='834' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='165'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='836' name='java/util/Arrays' flags='1'/>
<method id='837' holder='836' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='170'/>
<call method='837' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='837'>
<bc code='184' bci='11'/>
<klass id='839' name='java/lang/Math' flags='17'/>
<method id='840' holder='839' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='3' compiler='C1' level='3' iicount='837'/>
<call method='840' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='840'>
<parse_done stamp='0.087'/>
</parse>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='842' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='7' compile_kind='c2n' level='0' iicount='640'/>
<call method='842' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.087'/>
</parse>
<parse_done stamp='0.087'/>
</parse>
<phase name='optimize_blocks' stamp='0.087'>
<phase_done name='optimize_blocks' stamp='0.087'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.087'>
<phase_done name='rangeCheckElimination' stamp='0.087'/>
</phase>
<phase name='optimize_null_checks' stamp='0.087'>
<phase_done name='optimize_null_checks' stamp='0.087'/>
</phase>
<phase_done name='buildIR' stamp='0.087'/>
</phase>
<phase name='emit_lir' stamp='0.087'>
<phase name='lirGeneration' stamp='0.087'>
<phase_done name='lirGeneration' stamp='0.087'/>
</phase>
<phase name='linearScan' stamp='0.087'>
<phase_done name='linearScan' stamp='0.087'/>
</phase>
<phase_done name='emit_lir' stamp='0.087'/>
</phase>
<phase name='codeemit' stamp='0.087'>
<phase_done name='codeemit' stamp='0.087'/>
</phase>
<phase name='codeinstall' stamp='0.087'>
<phase_done name='codeinstall' stamp='0.090'/>
</phase>
<code_cache total_blobs='237' nmethods='11' adapters='141' free_code_cache='250552320'/>
<task_done success='1' nmsize='1144' count='335' inlined_bytes='30' stamp='0.090'/>
</task>
<task compile_id='13' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='259' iicount='259' level='3' stamp='0.091'>
<phase name='buildIR' stamp='0.091'>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' iicount='259'/>
<parse method='832'  stamp='0.091'>
<bc code='183' bci='5'/>
<method id='834' holder='793' name='appendNull' return='793' flags='2' bytes='56' iicount='1'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<type id='722' name='int'/>
<method id='836' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='9' compiler='C1' level='3' iicount='688'/>
<call method='836' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<parse_done stamp='0.091'/>
</parse>
<bc code='183' bci='21'/>
<type id='724' name='void'/>
<method id='838' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' compile_id='10' compiler='C1' level='3' iicount='344'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='17'/>
<method id='840' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='170'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='842' name='java/util/Arrays' flags='1'/>
<method id='843' holder='842' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='175'/>
<call method='843' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='843'>
<bc code='184' bci='11'/>
<klass id='845' name='java/lang/Math' flags='17'/>
<method id='846' holder='845' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='3' compiler='C1' level='3' iicount='856'/>
<call method='846' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<parse_done stamp='0.091'/>
</parse>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='848' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='7' compile_kind='c2n' level='0' iicount='640'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.091'/>
</parse>
<parse_done stamp='0.091'/>
</parse>
<bc code='182' bci='35'/>
<method id='850' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' iicount='260'/>
<call method='850' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.091'/>
</parse>
<phase name='optimize_blocks' stamp='0.091'>
<phase_done name='optimize_blocks' stamp='0.091'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.091'>
<phase_done name='rangeCheckElimination' stamp='0.091'/>
</phase>
<phase name='optimize_null_checks' stamp='0.091'>
<phase_done name='optimize_null_checks' stamp='0.091'/>
</phase>
<phase_done name='buildIR' stamp='0.091'/>
</phase>
<phase name='emit_lir' stamp='0.091'>
<phase name='lirGeneration' stamp='0.091'>
<phase_done name='lirGeneration' stamp='0.091'/>
</phase>
<phase name='linearScan' stamp='0.091'>
<phase_done name='linearScan' stamp='0.091'/>
</phase>
<phase_done name='emit_lir' stamp='0.091'/>
</phase>
<phase name='codeemit' stamp='0.091'>
<phase_done name='codeemit' stamp='0.091'/>
</phase>
<phase name='codeinstall' stamp='0.091'>
<phase_done name='codeinstall' stamp='0.095'/>
</phase>
<code_cache total_blobs='240' nmethods='12' adapters='143' free_code_cache='250547776'/>
<task_done success='1' nmsize='1880' count='263' inlined_bytes='63' stamp='0.095'/>
</task>
<task compile_id='12' method='java/lang/String getChars (II[CI)V' bytes='62' count='263' iicount='263' level='3' stamp='0.095'>
<phase name='buildIR' stamp='0.095'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' iicount='263'/>
<parse method='832'  stamp='0.095'>
<bc code='183' bci='9'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='835' holder='834' name='&lt;init&gt;' return='724' arguments='722' unloaded='1'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='43'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='58'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='836' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='7' compile_kind='c2n' level='0' iicount='640'/>
<call method='836' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.095'/>
</parse>
<phase name='optimize_blocks' stamp='0.095'>
<phase_done name='optimize_blocks' stamp='0.095'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.095'>
<phase_done name='rangeCheckElimination' stamp='0.095'/>
</phase>
<phase name='optimize_null_checks' stamp='0.095'>
<phase_done name='optimize_null_checks' stamp='0.095'/>
</phase>
<phase_done name='buildIR' stamp='0.095'/>
</phase>
<phase name='emit_lir' stamp='0.095'>
<phase name='lirGeneration' stamp='0.095'>
<phase_done name='lirGeneration' stamp='0.095'/>
</phase>
<phase name='linearScan' stamp='0.095'>
<phase_done name='linearScan' stamp='0.095'/>
</phase>
<phase_done name='emit_lir' stamp='0.095'/>
</phase>
<phase name='codeemit' stamp='0.095'>
<phase_done name='codeemit' stamp='0.095'/>
</phase>
<phase name='codeinstall' stamp='0.095'>
<phase_done name='codeinstall' stamp='0.097'/>
</phase>
<code_cache total_blobs='241' nmethods='13' adapters='143' free_code_cache='250545472'/>
<task_done success='1' nmsize='1080' count='272' stamp='0.097'/>
</task>
<task compile_id='14' method='java/lang/String indexOf (I)I' bytes='7' count='260' iicount='260' level='3' stamp='0.098'>
<phase name='buildIR' stamp='0.098'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722' flags='1' bytes='7' iicount='260'/>
<parse method='832'  stamp='0.098'>
<bc code='182' bci='3'/>
<method id='834' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' compile_id='8' compiler='C1' level='3' iicount='266'/>
<call method='834' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.098'/>
</parse>
<phase name='optimize_blocks' stamp='0.098'>
<phase_done name='optimize_blocks' stamp='0.098'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.098'>
<phase_done name='rangeCheckElimination' stamp='0.098'/>
</phase>
<phase name='optimize_null_checks' stamp='0.098'>
<phase_done name='optimize_null_checks' stamp='0.098'/>
</phase>
<phase_done name='buildIR' stamp='0.098'/>
</phase>
<phase name='emit_lir' stamp='0.098'>
<phase name='lirGeneration' stamp='0.098'>
<phase_done name='lirGeneration' stamp='0.098'/>
</phase>
<phase name='linearScan' stamp='0.098'>
<phase_done name='linearScan' stamp='0.098'/>
</phase>
<phase_done name='emit_lir' stamp='0.098'/>
</phase>
<phase name='codeemit' stamp='0.098'>
<phase_done name='codeemit' stamp='0.098'/>
</phase>
<phase name='codeinstall' stamp='0.098'>
<phase_done name='codeinstall' stamp='0.099'/>
</phase>
<code_cache total_blobs='242' nmethods='14' adapters='143' free_code_cache='250544384'/>
<task_done success='1' nmsize='520' count='266' stamp='0.099'/>
</task>
<task compile_id='15' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='59' count='512' iicount='512' level='3' stamp='0.100'>
<phase name='buildIR' stamp='0.100'>
<type id='722' name='int'/>
<type id='717' name='char'/>
<klass id='832' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='833' holder='832' name='hexDigit' return='722' arguments='717' flags='8' bytes='59' iicount='591'/>
<parse method='833'  stamp='0.100'>
<bc code='183' bci='55'/>
<type id='724' name='void'/>
<klass id='835' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='836' holder='835' name='&lt;init&gt;' return='724' flags='1' bytes='5' iicount='1'/>
<call method='836' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.100'/>
</parse>
<phase name='optimize_blocks' stamp='0.100'>
<phase_done name='optimize_blocks' stamp='0.100'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.100'>
<phase_done name='rangeCheckElimination' stamp='0.100'/>
</phase>
<phase name='optimize_null_checks' stamp='0.100'>
<phase_done name='optimize_null_checks' stamp='0.100'/>
</phase>
<phase_done name='buildIR' stamp='0.100'/>
</phase>
<phase name='emit_lir' stamp='0.100'>
<phase name='lirGeneration' stamp='0.100'>
<phase_done name='lirGeneration' stamp='0.100'/>
</phase>
<phase name='linearScan' stamp='0.100'>
<phase_done name='linearScan' stamp='0.100'/>
</phase>
<phase_done name='emit_lir' stamp='0.100'/>
</phase>
<phase name='codeemit' stamp='0.100'>
<phase_done name='codeemit' stamp='0.100'/>
</phase>
<phase name='codeinstall' stamp='0.100'>
<phase_done name='codeinstall' stamp='0.152'/>
</phase>
<code_cache total_blobs='243' nmethods='15' adapters='143' free_code_cache='250542656'/>
<task_done success='1' nmsize='872' count='4064' stamp='0.152'/>
</task>
<task compile_id='17' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='276' count='128' backedge_count='4096' iicount='128' level='3' stamp='0.152'>
<phase name='buildIR' stamp='0.152'>
<klass id='834' name='java/util/UUID' flags='17'/>
<klass id='833' name='java/lang/CharSequence' flags='1537'/>
<klass id='832' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='835' holder='832' name='uuidFromCharSequence' return='834' arguments='833' flags='9' bytes='276' iicount='133'/>
<parse method='835'  stamp='0.152'>
<bc code='185' bci='1'/>
<type id='722' name='int'/>
<method id='837' holder='833' name='length' return='722' flags='1025' bytes='0' iicount='1'/>
<call method='837' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='12'/>
<klass id='838' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='839' holder='832' name='invalidUuid' return='838' arguments='833' flags='10' bytes='24' iicount='1'/>
<call method='839' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='839'>
<bc code='183' bci='10'/>
<type id='724' name='void'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='841' name='java/lang/StringBuilder' unloaded='1'/>
<method id='843' holder='841' name='&lt;init&gt;' return='724' arguments='730' unloaded='1'/>
<call method='843' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='844' holder='841' name='append' return='841' arguments='729' unloaded='1'/>
<call method='844' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='17'/>
<method id='845' holder='841' name='toString' return='730' unloaded='1'/>
<call method='845' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='20'/>
<method id='846' holder='838' name='&lt;init&gt;' return='724' arguments='730' flags='1' bytes='6' iicount='1'/>
<call method='846' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.152'/>
</parse>
<bc code='185' bci='19'/>
<type id='717' name='char'/>
<method id='848' holder='833' name='charAt' return='717' arguments='722' flags='1025' bytes='0' iicount='1'/>
<call method='848' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='185' bci='32'/>
<call method='848' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='185' bci='45'/>
<call method='848' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='185' bci='58'/>
<call method='848' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='272'/>
<type id='723' name='long'/>
<method id='849' holder='834' name='&lt;init&gt;' return='724' arguments='723 723' flags='1' bytes='15' iicount='222'/>
<call method='849' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='183' bci='1'/>
<method id='851' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='11' compiler='C1' level='3' iicount='2275'/>
<call method='851' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<parse_done stamp='0.152'/>
</parse>
<parse_done stamp='0.152'/>
</parse>
<bc code='185' bci='238'/>
<call method='848' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='243'/>
<method id='853' holder='832' name='hexDigit' return='722' arguments='717' flags='8' bytes='59' compile_id='15' compiler='C1' level='3' iicount='7840'/>
<call method='853' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='185' bci='200'/>
<call method='848' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='205'/>
<call method='853' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='185' bci='162'/>
<call method='848' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='167'/>
<call method='853' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='185' bci='124'/>
<call method='848' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='129'/>
<call method='853' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='185' bci='86'/>
<call method='848' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='91'/>
<call method='853' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='69'/>
<call method='839' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='839'>
<bc code='183' bci='10'/>
<call method='843' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='14'/>
<call method='844' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='17'/>
<call method='845' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='20'/>
<call method='846' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.152'/>
</parse>
<parse_done stamp='0.152'/>
</parse>
<phase name='optimize_blocks' stamp='0.152'>
<phase_done name='optimize_blocks' stamp='0.152'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.152'>
<phase_done name='rangeCheckElimination' stamp='0.152'/>
</phase>
<phase name='optimize_null_checks' stamp='0.152'>
<phase_done name='optimize_null_checks' stamp='0.152'/>
</phase>
<phase_done name='buildIR' stamp='0.152'/>
</phase>
<phase name='emit_lir' stamp='0.152'>
<phase name='lirGeneration' stamp='0.152'>
<phase_done name='lirGeneration' stamp='0.153'/>
</phase>
<phase name='linearScan' stamp='0.153'>
<phase_done name='linearScan' stamp='0.153'/>
</phase>
<phase_done name='emit_lir' stamp='0.153'/>
</phase>
<phase name='codeemit' stamp='0.153'>
<phase_done name='codeemit' stamp='0.153'/>
</phase>
<phase name='codeinstall' stamp='0.153'>
<phase_done name='codeinstall' stamp='0.164'/>
</phase>
<code_cache total_blobs='249' nmethods='17' adapters='143' free_code_cache='250509248'/>
<task_done success='1' nmsize='5800' count='354' backedge_count='11328' inlined_bytes='64' stamp='0.164'/>
</task>
<task compile_id='19' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='354' iicount='354' level='3' stamp='0.164'>
<phase name='buildIR' stamp='0.164'>
<klass id='833' name='java/util/UUID' flags='17'/>
<klass id='832' name='com/github/marschall/charsequences/ParseUuidCompilation' flags='1'/>
<method id='834' holder='832' name='parse' return='833' flags='0' bytes='6' iicount='355'/>
<parse method='834'  stamp='0.164'>
<bc code='184' bci='2'/>
<klass id='838' name='java/lang/CharSequence' flags='1537'/>
<klass id='837' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='839' holder='837' name='uuidFromCharSequence' return='833' arguments='838' flags='9' bytes='276' compile_id='17' compiler='C1' level='3' iicount='704'/>
<call method='839' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.165'/>
</parse>
<phase name='optimize_blocks' stamp='0.165'>
<phase_done name='optimize_blocks' stamp='0.165'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.165'>
<phase_done name='rangeCheckElimination' stamp='0.165'/>
</phase>
<phase name='optimize_null_checks' stamp='0.165'>
<phase_done name='optimize_null_checks' stamp='0.165'/>
</phase>
<phase_done name='buildIR' stamp='0.165'/>
</phase>
<phase name='emit_lir' stamp='0.165'>
<phase name='lirGeneration' stamp='0.165'>
<phase_done name='lirGeneration' stamp='0.165'/>
</phase>
<phase name='linearScan' stamp='0.165'>
<phase_done name='linearScan' stamp='0.165'/>
</phase>
<phase_done name='emit_lir' stamp='0.165'/>
</phase>
<phase name='codeemit' stamp='0.165'>
<phase_done name='codeemit' stamp='0.165'/>
</phase>
<phase name='codeinstall' stamp='0.165'>
<phase_done name='codeinstall' stamp='0.166'/>
</phase>
<code_cache total_blobs='248' nmethods='20' adapters='143' free_code_cache='250529280'/>
<task_done success='1' nmsize='392' count='2236' stamp='0.166'/>
</task>
<task compile_id='22' method='java/lang/String length ()I' bytes='6' count='3086' iicount='3087' level='1' stamp='0.166'>
<phase name='buildIR' stamp='0.166'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='9' compiler='C1' level='3' iicount='3113'/>
<parse method='832'  stamp='0.166'>
<parse_done stamp='0.166'/>
</parse>
<phase name='optimize_blocks' stamp='0.166'>
<phase_done name='optimize_blocks' stamp='0.166'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.166'>
<phase_done name='rangeCheckElimination' stamp='0.166'/>
</phase>
<phase name='optimize_null_checks' stamp='0.166'>
<phase_done name='optimize_null_checks' stamp='0.166'/>
</phase>
<phase_done name='buildIR' stamp='0.166'/>
</phase>
<phase name='emit_lir' stamp='0.166'>
<phase name='lirGeneration' stamp='0.166'>
<phase_done name='lirGeneration' stamp='0.166'/>
</phase>
<phase name='linearScan' stamp='0.166'>
<phase_done name='linearScan' stamp='0.166'/>
</phase>
<phase_done name='emit_lir' stamp='0.166'/>
</phase>
<phase name='codeemit' stamp='0.166'>
<phase_done name='codeemit' stamp='0.166'/>
</phase>
<phase name='codeinstall' stamp='0.166'>
<phase_done name='codeinstall' stamp='0.167'/>
</phase>
<code_cache total_blobs='249' nmethods='21' adapters='143' free_code_cache='250528448'/>
<task_done success='1' nmsize='272' count='4243' stamp='0.167'/>
</task>
<task compile_id='21' method='java/util/UUID &lt;init&gt; (JJ)V' bytes='15' count='3412' iicount='3412' level='3' stamp='0.167'>
<phase name='buildIR' stamp='0.167'>
<type id='724' name='void'/>
<type id='723' name='long'/>
<klass id='832' name='java/util/UUID' flags='17'/>
<method id='833' holder='832' name='&lt;init&gt;' return='724' arguments='723 723' flags='1' bytes='15' iicount='3412'/>
<parse method='833'  stamp='0.167'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='835' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='11' compiler='C1' level='3' iicount='5459'/>
<call method='835' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<parse_done stamp='0.167'/>
</parse>
<parse_done stamp='0.167'/>
</parse>
<phase name='optimize_blocks' stamp='0.167'>
<phase_done name='optimize_blocks' stamp='0.167'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.167'>
<phase_done name='rangeCheckElimination' stamp='0.167'/>
</phase>
<phase name='optimize_null_checks' stamp='0.167'>
<phase_done name='optimize_null_checks' stamp='0.167'/>
</phase>
<phase_done name='buildIR' stamp='0.167'/>
</phase>
<phase name='emit_lir' stamp='0.167'>
<phase name='lirGeneration' stamp='0.167'>
<phase_done name='lirGeneration' stamp='0.167'/>
</phase>
<phase name='linearScan' stamp='0.167'>
<phase_done name='linearScan' stamp='0.167'/>
</phase>
<phase_done name='emit_lir' stamp='0.167'/>
</phase>
<phase name='codeemit' stamp='0.167'>
<phase_done name='codeemit' stamp='0.167'/>
</phase>
<phase name='codeinstall' stamp='0.167'>
<phase_done name='codeinstall' stamp='0.167'/>
</phase>
<code_cache total_blobs='250' nmethods='22' adapters='143' free_code_cache='250527424'/>
<task_done success='1' nmsize='432' count='5474' inlined_bytes='1' stamp='0.167'/>
</task>
<task compile_id='25' compile_kind='osr' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='60625' iicount='1' osr_bci='9' level='3' stamp='0.190'>
<phase name='buildIR' stamp='0.190'>
<type id='724' name='void'/>
<klass id='832' name='com/github/marschall/charsequences/ParseUuidCompilation' flags='1'/>
<method id='833' holder='832' name='&lt;init&gt;' return='724' flags='1' bytes='40' iicount='1'/>
<parse method='833'  stamp='0.190'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='835' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='11' compiler='C1' level='3' iicount='62460'/>
<call method='835' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='177' bci='0'/>
<dependency type='leaf_type' ctxk='832'/>
<parse_done stamp='0.190'/>
</parse>
<bc code='182' bci='10'/>
<klass id='837' name='java/util/UUID' flags='17'/>
<method id='838' holder='832' name='parse' return='837' flags='0' bytes='6' compile_id='24' compiler='C2' level='4' iicount='60415'/>
<call method='838' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='832' x='838'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='832'/>
<parse method='838'>
<bc code='184' bci='2'/>
<klass id='842' name='java/lang/CharSequence' flags='1537'/>
<klass id='841' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='843' holder='841' name='uuidFromCharSequence' return='837' arguments='842' flags='9' bytes='276' compile_id='17' compiler='C1' level='3' iicount='60415'/>
<call method='843' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.190'/>
</parse>
<bc code='184' bci='15'/>
<type id='722' name='int'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='845' holder='735' name='identityHashCode' return='722' arguments='729' flags='265' bytes='0' compile_id='20' compile_kind='c2n' level='0' iicount='256'/>
<call method='845' instr='invokestatic'/>
<inline_fail reason='native method'/>
<bc code='182' bci='27'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='846' name='java/io/PrintStream' unloaded='1'/>
<method id='849' holder='846' name='println' return='724' arguments='730' unloaded='1'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.190'/>
</parse>
<phase name='optimize_blocks' stamp='0.190'>
<phase_done name='optimize_blocks' stamp='0.190'/>
</phase>
<phase name='optimize_null_checks' stamp='0.190'>
<phase_done name='optimize_null_checks' stamp='0.190'/>
</phase>
<phase_done name='buildIR' stamp='0.190'/>
</phase>
<phase name='emit_lir' stamp='0.190'>
<phase name='lirGeneration' stamp='0.190'>
<phase_done name='lirGeneration' stamp='0.190'/>
</phase>
<phase name='linearScan' stamp='0.190'>
<phase_done name='linearScan' stamp='0.190'/>
</phase>
<phase_done name='emit_lir' stamp='0.190'/>
</phase>
<phase name='codeemit' stamp='0.190'>
<phase_done name='codeemit' stamp='0.190'/>
</phase>
<phase name='codeinstall' stamp='0.190'>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='unique_concrete_method' ctxk='832' x='838'/>
<phase_done name='codeinstall' stamp='0.192'/>
</phase>
<code_cache total_blobs='254' nmethods='24' adapters='143' free_code_cache='250502848'/>
<task_done success='1' nmsize='1192' count='1' backedge_count='80074' inlined_bytes='7' stamp='0.192'/>
</task>
<task compile_id='26' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='80260' iicount='1' level='3' stamp='0.222'>
<phase name='buildIR' stamp='0.222'>
<type id='724' name='void'/>
<klass id='832' name='com/github/marschall/charsequences/ParseUuidCompilation' flags='1'/>
<method id='833' holder='832' name='&lt;init&gt;' return='724' flags='1' bytes='40' iicount='1'/>
<parse method='833'  stamp='0.222'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='835' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='11' compiler='C1' level='3' iicount='62460'/>
<call method='835' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='177' bci='0'/>
<dependency type='leaf_type' ctxk='832'/>
<parse_done stamp='0.222'/>
</parse>
<bc code='182' bci='10'/>
<klass id='837' name='java/util/UUID' flags='17'/>
<method id='838' holder='832' name='parse' return='837' flags='0' bytes='6' compile_id='24' compiler='C2' level='4' iicount='60955'/>
<call method='838' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='832'/>
<parse method='838'>
<bc code='184' bci='2'/>
<klass id='842' name='java/lang/CharSequence' flags='1537'/>
<klass id='841' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='843' holder='841' name='uuidFromCharSequence' return='837' arguments='842' flags='9' bytes='276' compile_id='23' compiler='C2' level='4' iicount='60415'/>
<call method='843' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.222'/>
</parse>
<bc code='184' bci='15'/>
<type id='722' name='int'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='845' holder='735' name='identityHashCode' return='722' arguments='729' flags='265' bytes='0' compile_id='20' compile_kind='c2n' level='0' iicount='256'/>
<call method='845' instr='invokestatic'/>
<inline_fail reason='native method'/>
<bc code='182' bci='27'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='846' name='java/io/PrintStream' flags='1'/>
<method id='849' holder='846' name='println' return='724' arguments='730' unloaded='1'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.222'/>
</parse>
<phase name='optimize_blocks' stamp='0.222'>
<phase_done name='optimize_blocks' stamp='0.222'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.222'>
<phase_done name='rangeCheckElimination' stamp='0.222'/>
</phase>
<phase name='optimize_null_checks' stamp='0.222'>
<phase_done name='optimize_null_checks' stamp='0.222'/>
</phase>
<phase_done name='buildIR' stamp='0.222'/>
</phase>
<phase name='emit_lir' stamp='0.222'>
<phase name='lirGeneration' stamp='0.222'>
<phase_done name='lirGeneration' stamp='0.222'/>
</phase>
<phase name='linearScan' stamp='0.222'>
<phase_done name='linearScan' stamp='0.222'/>
</phase>
<phase_done name='emit_lir' stamp='0.222'/>
</phase>
<phase name='codeemit' stamp='0.222'>
<phase_done name='codeemit' stamp='0.223'/>
</phase>
<phase name='codeinstall' stamp='0.223'>
<dependency type='leaf_type' ctxk='832'/>
<phase_done name='codeinstall' stamp='0.224'/>
</phase>
<code_cache total_blobs='254' nmethods='26' adapters='143' free_code_cache='250505088'/>
<task_done success='1' nmsize='1096' count='1' backedge_count='104648' inlined_bytes='7' stamp='0.224'/>
</task>
<task compile_id='28' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='257' iicount='257' level='3' stamp='0.274'>
<phase name='buildIR' stamp='0.274'>
<klass id='741' name='java/lang/SecurityManager' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='832' holder='735' name='getSecurityManager' return='741' flags='9' bytes='4' iicount='257'/>
<parse method='832'  stamp='0.274'>
<parse_done stamp='0.274'/>
</parse>
<phase name='optimize_blocks' stamp='0.274'>
<phase_done name='optimize_blocks' stamp='0.274'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.274'>
<phase_done name='rangeCheckElimination' stamp='0.274'/>
</phase>
<phase name='optimize_null_checks' stamp='0.274'>
<phase_done name='optimize_null_checks' stamp='0.274'/>
</phase>
<phase_done name='buildIR' stamp='0.274'/>
</phase>
<phase name='emit_lir' stamp='0.274'>
<phase name='lirGeneration' stamp='0.274'>
<phase_done name='lirGeneration' stamp='0.274'/>
</phase>
<phase name='linearScan' stamp='0.274'>
<phase_done name='linearScan' stamp='0.274'/>
</phase>
<phase_done name='emit_lir' stamp='0.274'/>
</phase>
<phase name='codeemit' stamp='0.274'>
<phase_done name='codeemit' stamp='0.274'/>
</phase>
<phase name='codeinstall' stamp='0.274'>
<phase_done name='codeinstall' stamp='0.275'/>
</phase>
<code_cache total_blobs='256' nmethods='28' adapters='143' free_code_cache='250502976'/>
<task_done success='1' nmsize='336' count='257' stamp='0.275'/>
</task>
</compilation_log>
<compilation_log thread='140531748660992'>
<start_compile_thread name='C2 CompilerThread0' thread='140531748660992' process='4324' stamp='0.061'/>
<task compile_id='18' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='59' count='8192' iicount='8192' stamp='0.152'>
<phase name='parse' nodes='3' live='3' stamp='0.152'>
<type id='722' name='int'/>
<type id='717' name='char'/>
<klass id='832' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='833' holder='832' name='hexDigit' return='722' arguments='717' flags='8' bytes='59' compile_id='15' compiler='C1' level='3' iicount='8192'/>
<klass id='835' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='833' bci='51' reason='unloaded' action='reinterpret' index='172' klass='835'/>
<parse method='833' uses='8192' stamp='0.152'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='8192' cnt='8192' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='2560' not_taken='5632' cnt='8192' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='2560' cnt='2560' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='2560' cnt='2560' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='78' live='73' memory='31896' stamp='0.152'/>
</parse>
<phase_done name='parse' nodes='79' live='51' stamp='0.152'/>
</phase>
<phase name='optimizer' nodes='79' live='51' stamp='0.153'>
<phase name='ccp' nodes='79' live='50' stamp='0.153'>
<phase_done name='ccp' nodes='79' live='50' stamp='0.153'/>
</phase>
<phase name='idealLoop' nodes='79' live='50' stamp='0.153'>
<phase_done name='idealLoop' nodes='79' live='50' stamp='0.153'/>
</phase>
<phase_done name='optimizer' nodes='81' live='52' stamp='0.153'/>
</phase>
<phase name='matcher' nodes='81' live='52' stamp='0.153'>
<phase_done name='matcher' nodes='52' live='52' stamp='0.153'/>
</phase>
<phase name='regalloc' nodes='67' live='67' stamp='0.153'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='78' live='72' stamp='0.153'/>
</phase>
<phase name='output' nodes='78' live='72' stamp='0.153'>
<phase_done name='output' nodes='91' live='80' stamp='0.164'/>
</phase>
<code_cache total_blobs='248' nmethods='19' adapters='143' free_code_cache='250524864'/>
<task_done success='1' nmsize='152' count='26824' stamp='0.165'/>
</task>
</compilation_log>
<hotspot_log_done stamp='0.275'/>
</hotspot_log>
