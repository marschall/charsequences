<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='10274' time_ms='1503248064644'>
<vm_version>
<name>
OpenJDK 64-Bit Graal VM
</name>
<release>
25.71-b01-internal-jvmci-0.30
</release>
<info>
OpenJDK 64-Bit Graal VM (25.71-b01-internal-jvmci-0.30) for linux-amd64 JRE (1.8.0), built on Jul 13 2017 16:53:05 by &quot;graaluser&quot; with gcc 4.9.1
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -XX:+LogCompilation -XX:+PrintAssembly -XX:LogFile=compilation8graal.log -Dfile.encoding=utf-8 
</args>
<command>
com.github.marschall.charsequences.ParseUuidCompilation
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.71-b01-internal-jvmci-0.30
java.vm.name=OpenJDK 64-Bit Graal VM
java.vm.info=mixed mode, sharing
java.ext.dirs=/home/marschall/bin/java/graalvm-0.26/jre/lib/ext:/usr/java/packages/lib/ext
java.endorsed.dirs=/home/marschall/bin/java/graalvm-0.26/jre/lib/endorsed
sun.boot.library.path=/home/marschall/bin/java/graalvm-0.26/jre/lib/amd64
java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
java.home=/home/marschall/bin/java/graalvm-0.26/jre
java.class.path=/home/marschall/git/charsequences/target/test-classes:/home/marschall/git/charsequences/target/classes:/home/marschall/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/marschall/.m2/repository/org/hamcrest/hamcrest-junit/2.0.0.0/hamcrest-junit-2.0.0.0.jar:/home/marschall/.m2/repository/org/hamcrest/java-hamcrest/2.0.0.0/java-hamcrest-2.0.0.0.jar:/home/marschall/.m2/repository/org/openjdk/jmh/jmh-core/1.19/jmh-core-1.19.jar:/home/marschall/.m2/repository/net/sf/jopt-simple/jopt-simple/4.6/jopt-simple-4.6.jar:/home/marschall/.m2/repository/org/apache/commons/commons-math3/3.2/commons-math3-3.2.jar:/home/marschall/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.19/jmh-generator-annprocess-1.19.jar:/home/marschall/.m2/repository/org/openjdk/jol/jol-core/0.8/jol-core-0.8.jar
sun.boot.class.path=/home/marschall/bin/java/graalvm-0.26/jre/lib/resources.jar:/home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar:/home/marschall/bin/java/graalvm-0.26/jre/lib/sunrsasign.jar:/home/marschall/bin/java/graalvm-0.26/jre/lib/jsse.jar:/home/marschall/bin/java/graalvm-0.26/jre/lib/jce.jar:/home/marschall/bin/java/graalvm-0.26/jre/lib/charsets.jar:/home/marschall/bin/java/graalvm-0.26/jre/lib/jfr.jar:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci-services.jar:/home/marschall/bin/java/graalvm-0.26/jre/classes:/home/marschall/bin/java/graalvm-0.26/jre/lib/boot/graal-sdk.src.zip:/home/marschall/bin/java/graalvm-0.26/jre/lib/boot/graal-sdk.jar
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=utf-8
sun.java.command=com.github.marschall.charsequences.ParseUuidCompilation
sun.java.launcher=SUN_STANDARD
jvmci.Compiler=graal
</properties>
</vm_arguments>
<tty>
<writer thread='139639490488064'/>
[Opened /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Object from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.Serializable from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Comparable from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.CharSequence from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.String from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.reflect.AnnotatedElement from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.reflect.GenericDeclaration from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.reflect.Type from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Class from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Cloneable from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.System from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Throwable from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Error from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ThreadDeath from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Exception from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.RuntimeException from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.SecurityManager from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.security.AccessControlContext from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.security.SecureClassLoader from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ReflectiveOperationException from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ClassNotFoundException from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.LinkageError from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.NoClassDefFoundError from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ClassCastException from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ArrayStoreException from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.VirtualMachineError from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.OutOfMemoryError from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.StackOverflowError from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.IllegalMonitorStateException from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ref.SoftReference from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ref.WeakReference from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ref.FinalReference from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ref.PhantomReference from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.Cleaner from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Runnable from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Thread from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Thread$UncaughtExceptionHandler from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ThreadGroup from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Map from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Dictionary from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Hashtable from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Properties from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.reflect.AccessibleObject from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.reflect.Member from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.reflect.Field from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.reflect.Parameter from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.reflect.Executable from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.reflect.Method from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.reflect.Constructor from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.MagicAccessorImpl from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessor from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessorImpl from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessor from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessorImpl from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingClassLoader from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.ConstantPool from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessor from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessorImpl from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeFieldAccessorImpl from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeStaticFieldAccessorImpl from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.annotation.Annotation from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.CallerSensitive from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandle from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.invoke.DirectMethodHandle from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.invoke.MemberName from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleNatives from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodType from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.BootstrapMethodError from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.invoke.CallSite from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.invoke.ConstantCallSite from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.invoke.MutableCallSite from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.invoke.VolatileCallSite from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Appendable from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.AbstractStringBuilder from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.StringBuffer from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.StringBuilder from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.Unsafe from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.AutoCloseable from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.Closeable from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.InputStream from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.ByteArrayInputStream from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.File from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.net.URL from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.jar.Manifest from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.Launcher from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.security.CodeSource from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.StackTraceElement from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.Buffer from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Boolean from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Character from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Number from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Float from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Double from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Byte from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Short from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Integer from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Long from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.NullPointerException from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ArithmeticException from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamField from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Comparator from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.String$CaseInsensitiveComparator from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.security.Guard from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.security.Permission from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.security.BasicPermission from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.RuntimePermission from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.security.AccessController from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectPermission from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.security.PrivilegedAction from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$GetReflectionFactoryAction from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.security.cert.Certificate from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Iterable from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Collection from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.List from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.RandomAccess from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.AbstractCollection from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.AbstractList from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Vector from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Stack from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$Lock from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$ReferenceHandler from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.InterruptedException from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.ArrayList from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Collections from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Set from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.AbstractSet from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptySet from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyList from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.AbstractMap from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyMap from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableCollection from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableList from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableRandomAccessList from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Null from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Lock from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.JavaLangRefAccess from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.SharedSecrets from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.IncompatibleClassChangeError from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.NoSuchMethodError from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.Reflection from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.HashMap from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Map$Entry from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.HashMap$Node from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.VM from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Entry from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Math from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer$FinalizerThread from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.charset.Charset from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.charset.spi.CharsetProvider from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.cs.FastCharsetProvider from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.util.PreHashedMap from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Aliases from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Classes from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Cache from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicInteger from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Class$3 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Class$ReflectionData from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Class$Atomic from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.AbstractRepository from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.GenericDeclRepository from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.ClassRepository from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Class$AnnotationData from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.annotation.AnnotationType from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$ClassValueMap from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.reflect.Modifier from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.LangReflectAccess from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectAccess from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Arrays from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.cs.HistoricallyNamedCharset from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.cs.Unicode from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Class$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.NativeConstructorAccessorImpl from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingConstructorAccessorImpl from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.StringCoding from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap$Entry from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringDecoder from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayDecoder from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetDecoder from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Decoder from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.charset.CodingErrorAction from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Hashtable$EntrySet from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedCollection from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedSet from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Objects from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Enumeration from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Iterator from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Enumerator from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Runtime from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.Version from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.FileInputStream from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.JavaIOFileDescriptorAccess from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.Flushable from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.OutputStream from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.FileOutputStream from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.FilterInputStream from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.BufferedInputStream from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.security.PrivilegedExceptionAction from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.misc.ReflectUtil from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.FilterOutputStream from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.PrintStream from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.BufferedOutputStream from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.Writer from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.OutputStreamWriter from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamEncoder from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.security.action.GetPropertyAction from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayEncoder from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetEncoder from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Encoder from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.ByteBuffer from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.HeapByteBuffer from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.Bits from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.ByteOrder from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicLong from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.JavaNioAccess from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.Bits$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.BufferedWriter from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.DefaultFileSystem from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.FileSystem from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.UnixFileSystem from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Enum from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.File$PathStatus from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.file.Watchable from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.file.Path from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringEncoder from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$3 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$Entry from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$Entry from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$NativeLibrary from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Terminator from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.SignalHandler from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Terminator$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.Signal from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.NativeSignalHandler from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Integer$IntegerCache from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.OSEnvironment from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.JavaLangAccess from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.System$2 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.IllegalArgumentException from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Compiler from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Compiler$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandlerFactory from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$Factory from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.security.util.Debug from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$ParallelLoaders from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$Entry from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Collections$SetFromMap from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$KeySet from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.JavaNetAccess from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader$7 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.StringTokenizer from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.MetaIndex from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Readable from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.Reader from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.BufferedReader from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.InputStreamReader from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.FileReader from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamDecoder from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.CharBuffer from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.HeapCharBuffer from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$Cache from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$2 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.reflect.Array from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.HashMap$TreeNode from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.FileInputStream$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.net.www.ParseUtil from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.BitSet from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Locale from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Locale$Cache from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentMap from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.Lock from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.ReentrantLock from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Segment from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Node from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CounterCell from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CollectionView from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$KeySetView from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ValuesView from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$EntrySetView from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Cache from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Key from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache$CacheEntry from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Locale$LocaleKey from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleUtils from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.CharacterData from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.CharacterDataLatin1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.net.Parts from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandler from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.Handler from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityAccess from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$JavaSecurityAccessImpl from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityProtectionDomainAccess from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$2 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$Key from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.security.Principal from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.HashSet from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.jar.Handler from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.SystemClassLoaderAction from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637820638976'/>
<thread_logfile thread='139637820638976' filename='/tmp/hs_c139637820638976_pid10274.log'/>
<writer thread='139637819586304'/>
<thread_logfile thread='139637819586304' filename='/tmp/hs_c139637819586304_pid10274.log'/>
<writer thread='139637818533632'/>
<thread_logfile thread='139637818533632' filename='/tmp/hs_c139637818533632_pid10274.log'/>
<writer thread='139637817480960'/>
<thread_logfile thread='139637817480960' filename='/tmp/hs_c139637817480960_pid10274.log'/>
<writer thread='139639490488064'/>
[Loaded java.lang.invoke.MethodHandleImpl from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.function.Function from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$2 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$3 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ClassValue from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$4 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Entry from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Identity from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Version from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.invoke.MemberName$Factory from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<task_queued compile_id='1' method='java/lang/String hashCode ()I' bytes='55' count='417' backedge_count='6144' iicount='417' level='3' stamp='0.045' comment='tiered' hot_count='417'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
[Opened /home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci-services.jar]
[Opened /home/marschall/bin/java/graalvm-0.26/jre/lib/boot/graal-sdk.src.zip]
[Opened /home/marschall/bin/java/graalvm-0.26/jre/lib/boot/graal-sdk.jar]
[Loaded sun.launcher.LauncherHelper from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
Loaded disassembler from /home/marschall/bin/java/graalvm-0.26/jre/lib/amd64/hsdis-amd64.so
----------------------------------------------------------------------
java/lang/String.hashCode  [0x00007f003f286e20, 0x00007f003f2870b0]  656 bytes
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
[Constants]
  # {method} {0x00007f003876be38} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f286e20: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f286e24: shl    r10,0x3
  0x00007f003f286e28: cmp    r10,rax
  0x00007f003f286e2b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f286e31: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f286e3c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f286e40: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f286e47: push   rbp
  0x00007f003f286e48: sub    rsp,0x30
  0x00007f003f286e4c: movabs rax,0x7f0038966360  ;   {metadata(method data for {method} {0x00007f003876be38} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f286e56: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f286e5c: add    edi,0x8
  0x00007f003f286e5f: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f286e65: movabs rax,0x7f003876be38  ;   {metadata({method} {0x00007f003876be38} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f286e6f: and    edi,0x1ff8
  0x00007f003f286e75: cmp    edi,0x0
  0x00007f003f286e78: je     0x00007f003f286fb1  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@0 (line 1466)

  0x00007f003f286e7e: mov    eax,DWORD PTR [rsi+0x10]  ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x00007f003f286e81: cmp    eax,0x0
  0x00007f003f286e84: movabs rdi,0x7f0038966360  ;   {metadata(method data for {method} {0x00007f003876be38} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f286e8e: movabs rbx,0x130
  0x00007f003f286e98: jne    0x00007f003f286ea8
  0x00007f003f286e9e: movabs rbx,0x140
  0x00007f003f286ea8: mov    rdx,QWORD PTR [rdi+rbx*1]
  0x00007f003f286eac: lea    rdx,[rdx+0x1]
  0x00007f003f286eb0: mov    QWORD PTR [rdi+rbx*1],rdx
  0x00007f003f286eb4: jne    0x00007f003f286fa5  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x00007f003f286eba: mov    edi,DWORD PTR [rsi+0xc]
  0x00007f003f286ebd: shl    rdi,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x00007f003f286ec1: mov    ebx,DWORD PTR [rdi+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x00007f003f286fc8
  0x00007f003f286ec4: cmp    ebx,0x0
  0x00007f003f286ec7: movabs rdx,0x7f0038966360  ;   {metadata(method data for {method} {0x00007f003876be38} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f286ed1: movabs rcx,0x150
  0x00007f003f286edb: jle    0x00007f003f286eeb
  0x00007f003f286ee1: movabs rcx,0x160
  0x00007f003f286eeb: mov    r8,QWORD PTR [rdx+rcx*1]
  0x00007f003f286eef: lea    r8,[r8+0x1]
  0x00007f003f286ef3: mov    QWORD PTR [rdx+rcx*1],r8
  0x00007f003f286ef7: jle    0x00007f003f286fa5  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x00007f003f286efd: mov    edx,0x0
  0x00007f003f286f02: jmp    0x00007f003f286f6a  ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x00007f003f286f07: nop
  0x00007f003f286f08: movsxd rcx,edx
  0x00007f003f286f0b: movzx  ecx,WORD PTR [rdi+rcx*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x00007f003f286f10: mov    r8,rax
  0x00007f003f286f13: shl    eax,0x5
  0x00007f003f286f16: sub    eax,r8d
  0x00007f003f286f19: add    eax,ecx
  0x00007f003f286f1b: inc    edx
  0x00007f003f286f1d: movabs rcx,0x7f0038966360  ;   {metadata(method data for {method} {0x00007f003876be38} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f286f27: mov    r8d,DWORD PTR [rcx+0x100]
  0x00007f003f286f2e: add    r8d,0x8
  0x00007f003f286f32: mov    DWORD PTR [rcx+0x100],r8d
  0x00007f003f286f39: movabs rcx,0x7f003876be38  ;   {metadata({method} {0x00007f003876be38} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f286f43: and    r8d,0xfff8
  0x00007f003f286f4a: cmp    r8d,0x0
  0x00007f003f286f4e: je     0x00007f003f286fcd  ; OopMap{rdi=Oop rsi=Oop off=308}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x00007f003f286f54: test   DWORD PTR [rip+0x1b13b1a6],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f286f5a: movabs rcx,0x7f0038966360  ;   {metadata(method data for {method} {0x00007f003876be38} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f286f64: inc    DWORD PTR [rcx+0x190]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x00007f003f286f6a: cmp    edx,ebx
  0x00007f003f286f6c: movabs rcx,0x7f0038966360  ;   {metadata(method data for {method} {0x00007f003876be38} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f286f76: movabs r8,0x170
  0x00007f003f286f80: jge    0x00007f003f286f90
  0x00007f003f286f86: movabs r8,0x180
  0x00007f003f286f90: mov    r9,QWORD PTR [rcx+r8*1]
  0x00007f003f286f94: lea    r9,[r9+0x1]
  0x00007f003f286f98: mov    QWORD PTR [rcx+r8*1],r9
  0x00007f003f286f9c: jl     0x00007f003f286f08  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x00007f003f286fa2: mov    DWORD PTR [rsi+0x10],eax  ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x00007f003f286fa5: add    rsp,0x30
  0x00007f003f286fa9: pop    rbp
  0x00007f003f286faa: test   DWORD PTR [rip+0x1b13b150],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f286fb0: ret    
  0x00007f003f286fb1: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f286fb6: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f286fbe: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)
                                                ;   {runtime_call}
  0x00007f003f286fc3: jmp    0x00007f003f286e7e
  0x00007f003f286fc8: call   0x00007f003f279000  ; OopMap{rsi=Oop rdi=Oop off=429}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x00007f003f286fcd: mov    QWORD PTR [rsp+0x8],rcx
  0x00007f003f286fd2: mov    QWORD PTR [rsp],0x2d
  0x00007f003f286fda: call   0x00007f003f27d5e0  ; OopMap{rdi=Oop rsi=Oop off=447}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@45 (line 1470)
                                                ;   {runtime_call}
  0x00007f003f286fdf: jmp    0x00007f003f286f54
  0x00007f003f286fe4: nop
  0x00007f003f286fe5: nop
  0x00007f003f286fe6: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f286fed: movabs r10,0x0
  0x00007f003f286ff7: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f286ffe: movabs r10,0x0
  0x00007f003f287008: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f28700f: add    rsp,0x30
  0x00007f003f287013: pop    rbp
  0x00007f003f287014: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f287019: hlt    
  0x00007f003f28701a: hlt    
  0x00007f003f28701b: hlt    
  0x00007f003f28701c: hlt    
  0x00007f003f28701d: hlt    
  0x00007f003f28701e: hlt    
  0x00007f003f28701f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f287020: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f287025: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f28702a: sub    rsp,0x80
  0x00007f003f287031: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f287036: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f28703b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f287040: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f287045: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f28704a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f28704f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f287054: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f287059: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f28705e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f287063: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f287068: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f28706d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f287072: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f287077: mov    QWORD PTR [rsp],r15
  0x00007f003f28707b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f287085: movabs rsi,0x7f003f287025  ;   {internal_word}
  0x00007f003f28708f: mov    rdx,rsp
  0x00007f003f287092: and    rsp,0xfffffffffffffff0
  0x00007f003f287096: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f28709b: hlt    
[Deopt Handler Code]
  0x00007f003f28709c: movabs r10,0x7f003f28709c  ;   {section_word}
  0x00007f003f2870a6: push   r10
  0x00007f003f2870a8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2870ad: hlt    
  0x00007f003f2870ae: hlt    
  0x00007f003f2870af: hlt    
<nmethod compile_id='1' compiler='C1' level='3' entry='0x00007f003f286e20' size='1480' address='0x00007f003f286c90' relocation_offset='312' insts_offset='400' stub_offset='912' scopes_data_offset='1064' scopes_pcs_offset='1184' dependencies_offset='1456' nul_chk_table_offset='1464' metadata_offset='1056' method='java/lang/String hashCode ()I' bytes='55' count='435' backedge_count='6567' iicount='435' stamp='0.054'/>
<writer thread='139639490488064'/>
[Loaded java.net.URLClassLoader$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.net.util.URLUtil from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<task_queued compile_id='2' method='java/lang/String length ()I' bytes='6' count='384' iicount='384' level='3' stamp='0.054' comment='tiered' hot_count='384'/>
[Loaded sun.misc.URLClassPath$3 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/String.length  [0x00007f003f287840, 0x00007f003f2879b0]  368 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003876a538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
<writer thread='139639490488064'/>
[Loaded sun.misc.URLClassPath$Loader from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
  0x00007f003f287840: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f287844: shl    r10,0x3
  0x00007f003f287848: cmp    r10,rax
  0x00007f003f28784b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f287851: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f28785c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f287860: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f287867: push   rbp
  0x00007f003f287868: sub    rsp,0x30
  0x00007f003f28786c: movabs rax,0x7f003898eaf8  ;   {metadata(method data for {method} {0x00007f003876a538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f287876: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f28787c: add    edi,0x8
  0x00007f003f28787f: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f287885: movabs rax,0x7f003876a538  ;   {metadata({method} {0x00007f003876a538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28788f: and    edi,0x1ff8
  0x00007f003f287895: cmp    edi,0x0
  0x00007f003f287898: je     0x00007f003f2878b4  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@0 (line 623)

  0x00007f003f28789e: mov    eax,DWORD PTR [rsi+0xc]
  0x00007f003f2878a1: shl    rax,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 623)

  0x00007f003f2878a5: mov    eax,DWORD PTR [rax+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x00007f003f2878c8
  0x00007f003f2878a8: add    rsp,0x30
  0x00007f003f2878ac: pop    rbp
  0x00007f003f2878ad: test   DWORD PTR [rip+0x1b13a84d],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2878b3: ret    
  0x00007f003f2878b4: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2878b9: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2878c1: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=134}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ;   {runtime_call}
  0x00007f003f2878c6: jmp    0x00007f003f28789e
  0x00007f003f2878c8: call   0x00007f003f279000  ; OopMap{off=141}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x00007f003f2878cd: nop
  0x00007f003f2878ce: nop
  0x00007f003f2878cf: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2878d6: movabs r10,0x0
  0x00007f003f2878e0: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2878e7: movabs r10,0x0
  0x00007f003f2878f1: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2878f8: add    rsp,0x30
  0x00007f003f2878fc: pop    rbp
  0x00007f003f2878fd: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f287902: hlt    
  0x00007f003f287903: hlt    
  0x00007f003f287904: hlt    
  0x00007f003f287905: hlt    
  0x00007f003f287906: hlt    
  0x00007f003f287907: hlt    
  0x00007f003f287908: hlt    
  0x00007f003f287909: hlt    
  0x00007f003f28790a: hlt    
  0x00007f003f28790b: hlt    
  0x00007f003f28790c: hlt    
  0x00007f003f28790d: hlt    
  0x00007f003f28790e: hlt    
  0x00007f003f28790f: hlt    
  0x00007f003f287910: hlt    
  0x00007f003f287911: hlt    
  0x00007f003f287912: hlt    
  0x00007f003f287913: hlt    
  0x00007f003f287914: hlt    
  0x00007f003f287915: hlt    
  0x00007f003f287916: hlt    
  0x00007f003f287917: hlt    
  0x00007f003f287918: hlt    
  0x00007f003f287919: hlt    
  0x00007f003f28791a: hlt    
  0x00007f003f28791b: hlt    
  0x00007f003f28791c: hlt    
  0x00007f003f28791d: hlt    
  0x00007f003f28791e: hlt    
  0x00007f003f28791f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f287920: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f287925: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f28792a: sub    rsp,0x80
  0x00007f003f287931: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f287936: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f28793b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f287940: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f287945: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f28794a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f28794f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f287954: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f287959: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f28795e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f287963: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f287968: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f28796d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f287972: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f287977: mov    QWORD PTR [rsp],r15
  0x00007f003f28797b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f287985: movabs rsi,0x7f003f287925  ;   {internal_word}
  0x00007f003f28798f: mov    rdx,rsp
  0x00007f003f287992: and    rsp,0xfffffffffffffff0
  0x00007f003f287996: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f28799b: hlt    
[Deopt Handler Code]
  0x00007f003f28799c: movabs r10,0x7f003f28799c  ;   {section_word}
  0x00007f003f2879a6: push   r10
  0x00007f003f2879a8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2879ad: hlt    
  0x00007f003f2879ae: hlt    
  0x00007f003f2879af: hlt    
<nmethod compile_id='2' compiler='C1' level='3' entry='0x00007f003f287840' size='920' address='0x00007f003f2876d0' relocation_offset='312' insts_offset='368' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' nul_chk_table_offset='904' metadata_offset='736' method='java/lang/String length ()I' bytes='6' count='386' iicount='386' stamp='0.055'/>
<writer thread='139639490488064'/>
[Loaded sun.misc.URLClassPath$JarLoader from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.zip.ZipConstants from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.JavaUtilZipFileAccess from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<task_queued compile_id='3' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='384' backedge_count='1323' iicount='384' level='3' stamp='0.055' comment='tiered' hot_count='384'/>
<task_queued compile_id='4' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1536' iicount='1536' level='3' stamp='0.056' comment='tiered' hot_count='1536'/>
<task_queued compile_id='5' method='java/lang/String charAt (I)C' bytes='29' count='2304' iicount='2304' level='3' stamp='0.056' comment='tiered' hot_count='2304'/>
<task_queued compile_id='6' method='java/lang/String indexOf (II)I' bytes='70' count='164' backedge_count='5120' iicount='164' level='3' stamp='0.056' comment='tiered' hot_count='164'/>
<task_queued compile_id='7' method='java/lang/Math min (II)I' bytes='11' count='640' iicount='640' level='3' stamp='0.056' comment='tiered' hot_count='640'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/String.equals  [0x00007f003f288080, 0x00007f003f288890]  2064 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003876b108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f288080: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f288084: shl    r10,0x3
  0x00007f003f288088: cmp    r10,rax
  0x00007f003f28808b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f288091: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f28809c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2880a0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2880a7: push   rbp
  0x00007f003f2880a8: sub    rsp,0x30
  0x00007f003f2880ac: movabs rax,0x7f003899a448  ;   {metadata(method data for {method} {0x00007f003876b108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2880b6: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f2880bc: add    edi,0x8
  0x00007f003f2880bf: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f2880c5: movabs rax,0x7f003876b108  ;   {metadata({method} {0x00007f003876b108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2880cf: and    edi,0x1ff8
  0x00007f003f2880d5: cmp    edi,0x0
  0x00007f003f2880d8: je     0x00007f003f28875e  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@0 (line 977)

  0x00007f003f2880de: cmp    rsi,rdx
  0x00007f003f2880e1: movabs rax,0x7f003899a448  ;   {metadata(method data for {method} {0x00007f003876b108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2880eb: movabs rdi,0x130
  0x00007f003f2880f5: jne    0x00007f003f288105
  0x00007f003f2880fb: movabs rdi,0x140
  0x00007f003f288105: mov    rbx,QWORD PTR [rax+rdi*1]
  0x00007f003f288109: lea    rbx,[rbx+0x1]
  0x00007f003f28810d: mov    QWORD PTR [rax+rdi*1],rbx
  0x00007f003f288111: je     0x00007f003f28874d  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@2 (line 977)

  0x00007f003f288117: cmp    rdx,0x0
  0x00007f003f28811b: jne    0x00007f003f288136
  0x00007f003f28811d: movabs rbx,0x7f003899a448  ;   {metadata(method data for {method} {0x00007f003876b108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f288127: or     DWORD PTR [rbx+0x148],0x100
  0x00007f003f288131: jmp    0x00007f003f288352
  0x00007f003f288136: movabs rcx,0x7c0001610    ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007f003f288140: mov    edi,DWORD PTR [rdx+0x8]
  0x00007f003f288143: shl    rdi,0x3
  0x00007f003f288147: cmp    rcx,rdi
  0x00007f003f28814a: jne    0x00007f003f288336
  0x00007f003f288150: movabs rbx,0x7f003899a448  ;   {metadata(method data for {method} {0x00007f003876b108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28815a: mov    ecx,DWORD PTR [rdx+0x8]
  0x00007f003f28815d: shl    rcx,0x3
  0x00007f003f288161: cmp    rcx,QWORD PTR [rbx+0x160]
  0x00007f003f288168: jne    0x00007f003f288177
  0x00007f003f28816a: add    QWORD PTR [rbx+0x168],0x1
  0x00007f003f288172: jmp    0x00007f003f288357
  0x00007f003f288177: cmp    rcx,QWORD PTR [rbx+0x170]
  0x00007f003f28817e: jne    0x00007f003f28818d
  0x00007f003f288180: add    QWORD PTR [rbx+0x178],0x1
  0x00007f003f288188: jmp    0x00007f003f288357
  0x00007f003f28818d: cmp    rcx,QWORD PTR [rbx+0x180]
  0x00007f003f288194: jne    0x00007f003f2881a3
  0x00007f003f288196: add    QWORD PTR [rbx+0x188],0x1
  0x00007f003f28819e: jmp    0x00007f003f288357
  0x00007f003f2881a3: cmp    rcx,QWORD PTR [rbx+0x190]
  0x00007f003f2881aa: jne    0x00007f003f2881b9
  0x00007f003f2881ac: add    QWORD PTR [rbx+0x198],0x1
  0x00007f003f2881b4: jmp    0x00007f003f288357
  0x00007f003f2881b9: cmp    rcx,QWORD PTR [rbx+0x1a0]
  0x00007f003f2881c0: jne    0x00007f003f2881cf
  0x00007f003f2881c2: add    QWORD PTR [rbx+0x1a8],0x1
  0x00007f003f2881ca: jmp    0x00007f003f288357
  0x00007f003f2881cf: cmp    rcx,QWORD PTR [rbx+0x1b0]
  0x00007f003f2881d6: jne    0x00007f003f2881e5
  0x00007f003f2881d8: add    QWORD PTR [rbx+0x1b8],0x1
  0x00007f003f2881e0: jmp    0x00007f003f288357
  0x00007f003f2881e5: cmp    rcx,QWORD PTR [rbx+0x1c0]
  0x00007f003f2881ec: jne    0x00007f003f2881fb
  0x00007f003f2881ee: add    QWORD PTR [rbx+0x1c8],0x1
  0x00007f003f2881f6: jmp    0x00007f003f288357
  0x00007f003f2881fb: cmp    rcx,QWORD PTR [rbx+0x1d0]
  0x00007f003f288202: jne    0x00007f003f288211
  0x00007f003f288204: add    QWORD PTR [rbx+0x1d8],0x1
  0x00007f003f28820c: jmp    0x00007f003f288357
  0x00007f003f288211: cmp    QWORD PTR [rbx+0x160],0x0
  0x00007f003f28821c: jne    0x00007f003f288235
  0x00007f003f28821e: mov    QWORD PTR [rbx+0x160],rcx
  0x00007f003f288225: mov    QWORD PTR [rbx+0x168],0x1
  0x00007f003f288230: jmp    0x00007f003f288357
  0x00007f003f288235: cmp    QWORD PTR [rbx+0x170],0x0
  0x00007f003f288240: jne    0x00007f003f288259
  0x00007f003f288242: mov    QWORD PTR [rbx+0x170],rcx
  0x00007f003f288249: mov    QWORD PTR [rbx+0x178],0x1
  0x00007f003f288254: jmp    0x00007f003f288357
  0x00007f003f288259: cmp    QWORD PTR [rbx+0x180],0x0
  0x00007f003f288264: jne    0x00007f003f28827d
  0x00007f003f288266: mov    QWORD PTR [rbx+0x180],rcx
  0x00007f003f28826d: mov    QWORD PTR [rbx+0x188],0x1
  0x00007f003f288278: jmp    0x00007f003f288357
  0x00007f003f28827d: cmp    QWORD PTR [rbx+0x190],0x0
  0x00007f003f288288: jne    0x00007f003f2882a1
  0x00007f003f28828a: mov    QWORD PTR [rbx+0x190],rcx
  0x00007f003f288291: mov    QWORD PTR [rbx+0x198],0x1
  0x00007f003f28829c: jmp    0x00007f003f288357
  0x00007f003f2882a1: cmp    QWORD PTR [rbx+0x1a0],0x0
  0x00007f003f2882ac: jne    0x00007f003f2882c5
  0x00007f003f2882ae: mov    QWORD PTR [rbx+0x1a0],rcx
  0x00007f003f2882b5: mov    QWORD PTR [rbx+0x1a8],0x1
  0x00007f003f2882c0: jmp    0x00007f003f288357
  0x00007f003f2882c5: cmp    QWORD PTR [rbx+0x1b0],0x0
  0x00007f003f2882d0: jne    0x00007f003f2882e9
  0x00007f003f2882d2: mov    QWORD PTR [rbx+0x1b0],rcx
  0x00007f003f2882d9: mov    QWORD PTR [rbx+0x1b8],0x1
  0x00007f003f2882e4: jmp    0x00007f003f288357
  0x00007f003f2882e9: cmp    QWORD PTR [rbx+0x1c0],0x0
  0x00007f003f2882f4: jne    0x00007f003f28830d
  0x00007f003f2882f6: mov    QWORD PTR [rbx+0x1c0],rcx
  0x00007f003f2882fd: mov    QWORD PTR [rbx+0x1c8],0x1
  0x00007f003f288308: jmp    0x00007f003f288357
  0x00007f003f28830d: cmp    QWORD PTR [rbx+0x1d0],0x0
  0x00007f003f288318: jne    0x00007f003f288331
  0x00007f003f28831a: mov    QWORD PTR [rbx+0x1d0],rcx
  0x00007f003f288321: mov    QWORD PTR [rbx+0x1d8],0x1
  0x00007f003f28832c: jmp    0x00007f003f288357
  0x00007f003f288331: jmp    0x00007f003f288357
  0x00007f003f288336: movabs rbx,0x7f003899a448  ;   {metadata(method data for {method} {0x00007f003876b108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f288340: sub    QWORD PTR [rbx+0x150],0x1
  0x00007f003f288348: jmp    0x00007f003f288352
  0x00007f003f28834d: jmp    0x00007f003f288357
  0x00007f003f288352: xor    rax,rax
  0x00007f003f288355: jmp    0x00007f003f288361
  0x00007f003f288357: movabs rax,0x1            ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@8 (line 980)

  0x00007f003f288361: cmp    eax,0x0
  0x00007f003f288364: movabs rax,0x7f003899a448  ;   {metadata(method data for {method} {0x00007f003876b108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28836e: movabs rdi,0x1e8
  0x00007f003f288378: je     0x00007f003f288388
  0x00007f003f28837e: movabs rdi,0x1f8
  0x00007f003f288388: mov    rbx,QWORD PTR [rax+rdi*1]
  0x00007f003f28838c: lea    rbx,[rbx+0x1]
  0x00007f003f288390: mov    QWORD PTR [rax+rdi*1],rbx
  0x00007f003f288394: je     0x00007f003f28873c  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@11 (line 980)

  0x00007f003f28839a: cmp    rdx,0x0
  0x00007f003f28839e: jne    0x00007f003f2883b9
  0x00007f003f2883a0: movabs rbx,0x7f003899a448  ;   {metadata(method data for {method} {0x00007f003876b108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2883aa: or     DWORD PTR [rbx+0x200],0x100
  0x00007f003f2883b4: jmp    0x00007f003f2885d5
  0x00007f003f2883b9: movabs rax,0x7c0001610    ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007f003f2883c3: mov    edi,DWORD PTR [rdx+0x8]
  0x00007f003f2883c6: shl    rdi,0x3
  0x00007f003f2883ca: cmp    rax,rdi
  0x00007f003f2883cd: jne    0x00007f003f2885b9
  0x00007f003f2883d3: movabs rbx,0x7f003899a448  ;   {metadata(method data for {method} {0x00007f003876b108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2883dd: mov    eax,DWORD PTR [rdx+0x8]
  0x00007f003f2883e0: shl    rax,0x3
  0x00007f003f2883e4: cmp    rax,QWORD PTR [rbx+0x218]
  0x00007f003f2883eb: jne    0x00007f003f2883fa
  0x00007f003f2883ed: add    QWORD PTR [rbx+0x220],0x1
  0x00007f003f2883f5: jmp    0x00007f003f2885d5
  0x00007f003f2883fa: cmp    rax,QWORD PTR [rbx+0x228]
  0x00007f003f288401: jne    0x00007f003f288410
  0x00007f003f288403: add    QWORD PTR [rbx+0x230],0x1
  0x00007f003f28840b: jmp    0x00007f003f2885d5
  0x00007f003f288410: cmp    rax,QWORD PTR [rbx+0x238]
  0x00007f003f288417: jne    0x00007f003f288426
  0x00007f003f288419: add    QWORD PTR [rbx+0x240],0x1
  0x00007f003f288421: jmp    0x00007f003f2885d5
  0x00007f003f288426: cmp    rax,QWORD PTR [rbx+0x248]
  0x00007f003f28842d: jne    0x00007f003f28843c
  0x00007f003f28842f: add    QWORD PTR [rbx+0x250],0x1
  0x00007f003f288437: jmp    0x00007f003f2885d5
  0x00007f003f28843c: cmp    rax,QWORD PTR [rbx+0x258]
  0x00007f003f288443: jne    0x00007f003f288452
  0x00007f003f288445: add    QWORD PTR [rbx+0x260],0x1
  0x00007f003f28844d: jmp    0x00007f003f2885d5
  0x00007f003f288452: cmp    rax,QWORD PTR [rbx+0x268]
  0x00007f003f288459: jne    0x00007f003f288468
  0x00007f003f28845b: add    QWORD PTR [rbx+0x270],0x1
  0x00007f003f288463: jmp    0x00007f003f2885d5
  0x00007f003f288468: cmp    rax,QWORD PTR [rbx+0x278]
  0x00007f003f28846f: jne    0x00007f003f28847e
  0x00007f003f288471: add    QWORD PTR [rbx+0x280],0x1
  0x00007f003f288479: jmp    0x00007f003f2885d5
  0x00007f003f28847e: cmp    rax,QWORD PTR [rbx+0x288]
  0x00007f003f288485: jne    0x00007f003f288494
  0x00007f003f288487: add    QWORD PTR [rbx+0x290],0x1
  0x00007f003f28848f: jmp    0x00007f003f2885d5
  0x00007f003f288494: cmp    QWORD PTR [rbx+0x218],0x0
  0x00007f003f28849f: jne    0x00007f003f2884b8
  0x00007f003f2884a1: mov    QWORD PTR [rbx+0x218],rax
  0x00007f003f2884a8: mov    QWORD PTR [rbx+0x220],0x1
  0x00007f003f2884b3: jmp    0x00007f003f2885d5
  0x00007f003f2884b8: cmp    QWORD PTR [rbx+0x228],0x0
  0x00007f003f2884c3: jne    0x00007f003f2884dc
  0x00007f003f2884c5: mov    QWORD PTR [rbx+0x228],rax
  0x00007f003f2884cc: mov    QWORD PTR [rbx+0x230],0x1
  0x00007f003f2884d7: jmp    0x00007f003f2885d5
  0x00007f003f2884dc: cmp    QWORD PTR [rbx+0x238],0x0
  0x00007f003f2884e7: jne    0x00007f003f288500
  0x00007f003f2884e9: mov    QWORD PTR [rbx+0x238],rax
  0x00007f003f2884f0: mov    QWORD PTR [rbx+0x240],0x1
  0x00007f003f2884fb: jmp    0x00007f003f2885d5
  0x00007f003f288500: cmp    QWORD PTR [rbx+0x248],0x0
  0x00007f003f28850b: jne    0x00007f003f288524
  0x00007f003f28850d: mov    QWORD PTR [rbx+0x248],rax
  0x00007f003f288514: mov    QWORD PTR [rbx+0x250],0x1
  0x00007f003f28851f: jmp    0x00007f003f2885d5
  0x00007f003f288524: cmp    QWORD PTR [rbx+0x258],0x0
  0x00007f003f28852f: jne    0x00007f003f288548
  0x00007f003f288531: mov    QWORD PTR [rbx+0x258],rax
  0x00007f003f288538: mov    QWORD PTR [rbx+0x260],0x1
  0x00007f003f288543: jmp    0x00007f003f2885d5
  0x00007f003f288548: cmp    QWORD PTR [rbx+0x268],0x0
  0x00007f003f288553: jne    0x00007f003f28856c
  0x00007f003f288555: mov    QWORD PTR [rbx+0x268],rax
  0x00007f003f28855c: mov    QWORD PTR [rbx+0x270],0x1
  0x00007f003f288567: jmp    0x00007f003f2885d5
  0x00007f003f28856c: cmp    QWORD PTR [rbx+0x278],0x0
  0x00007f003f288577: jne    0x00007f003f288590
  0x00007f003f288579: mov    QWORD PTR [rbx+0x278],rax
  0x00007f003f288580: mov    QWORD PTR [rbx+0x280],0x1
  0x00007f003f28858b: jmp    0x00007f003f2885d5
  0x00007f003f288590: cmp    QWORD PTR [rbx+0x288],0x0
  0x00007f003f28859b: jne    0x00007f003f2885b4
  0x00007f003f28859d: mov    QWORD PTR [rbx+0x288],rax
  0x00007f003f2885a4: mov    QWORD PTR [rbx+0x290],0x1
  0x00007f003f2885af: jmp    0x00007f003f2885d5
  0x00007f003f2885b4: jmp    0x00007f003f2885d5
  0x00007f003f2885b9: movabs rbx,0x7f003899a448  ;   {metadata(method data for {method} {0x00007f003876b108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2885c3: sub    QWORD PTR [rbx+0x208],0x1
  0x00007f003f2885cb: jmp    0x00007f003f288775
  0x00007f003f2885d0: jmp    0x00007f003f2885d5
  0x00007f003f2885d5: mov    rax,rdx            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@15 (line 981)

  0x00007f003f2885d8: mov    esi,DWORD PTR [rsi+0xc]
  0x00007f003f2885db: shl    rsi,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@20 (line 982)

  0x00007f003f2885df: mov    edi,DWORD PTR [rsi+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x00007f003f28877e
  0x00007f003f2885e2: mov    eax,DWORD PTR [rax+0xc]  ; implicit exception: dispatches to 0x00007f003f288783
  0x00007f003f2885e5: shl    rax,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@27 (line 983)

  0x00007f003f2885e9: mov    ebx,DWORD PTR [rax+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x00007f003f288788
  0x00007f003f2885ec: cmp    edi,ebx
  0x00007f003f2885ee: movabs rbx,0x7f003899a448  ;   {metadata(method data for {method} {0x00007f003876b108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2885f8: movabs rdx,0x2a0
  0x00007f003f288602: jne    0x00007f003f288612
  0x00007f003f288608: movabs rdx,0x2b0
  0x00007f003f288612: mov    rcx,QWORD PTR [rbx+rdx*1]
  0x00007f003f288616: lea    rcx,[rcx+0x1]
  0x00007f003f28861a: mov    QWORD PTR [rbx+rdx*1],rcx
  0x00007f003f28861e: jne    0x00007f003f28873c  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@31 (line 983)

  0x00007f003f288624: mov    ebx,0x0
  0x00007f003f288629: jmp    0x00007f003f2886d7  ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@49 (line 987)

  0x00007f003f28862e: xchg   ax,ax
  0x00007f003f288630: movsxd rdi,ebx
  0x00007f003f288633: cmp    ebx,DWORD PTR [rsi+0xc]
  0x00007f003f288636: jae    0x00007f003f28878d
  0x00007f003f28863c: movzx  edi,WORD PTR [rsi+rdi*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@60 (line 988)

  0x00007f003f288641: movsxd rcx,ebx
  0x00007f003f288644: cmp    ebx,DWORD PTR [rax+0xc]
  0x00007f003f288647: jae    0x00007f003f288796
  0x00007f003f28864d: movzx  ecx,WORD PTR [rax+rcx*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@65 (line 988)

  0x00007f003f288652: cmp    edi,ecx
  0x00007f003f288654: movabs rdi,0x7f003899a448  ;   {metadata(method data for {method} {0x00007f003876b108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28865e: movabs rcx,0x2e0
  0x00007f003f288668: je     0x00007f003f288678
  0x00007f003f28866e: movabs rcx,0x2f0
  0x00007f003f288678: mov    r8,QWORD PTR [rdi+rcx*1]
  0x00007f003f28867c: lea    r8,[r8+0x1]
  0x00007f003f288680: mov    QWORD PTR [rdi+rcx*1],r8
  0x00007f003f288684: jne    0x00007f003f28871a  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@66 (line 988)

  0x00007f003f28868a: inc    ebx
  0x00007f003f28868c: movabs rdi,0x7f003899a448  ;   {metadata(method data for {method} {0x00007f003876b108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f288696: mov    ecx,DWORD PTR [rdi+0x100]
  0x00007f003f28869c: add    ecx,0x8
  0x00007f003f28869f: mov    DWORD PTR [rdi+0x100],ecx
  0x00007f003f2886a5: movabs rdi,0x7f003876b108  ;   {metadata({method} {0x00007f003876b108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2886af: and    ecx,0xfff8
  0x00007f003f2886b5: cmp    ecx,0x0
  0x00007f003f2886b8: je     0x00007f003f28879f  ; OopMap{rax=Oop rsi=Oop off=1598}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@74 (line 990)

  0x00007f003f2886be: test   DWORD PTR [rip+0x1b139a3c],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2886c4: movabs rdi,0x7f003899a448  ;   {metadata(method data for {method} {0x00007f003876b108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2886ce: inc    DWORD PTR [rdi+0x300]
  0x00007f003f2886d4: mov    rdi,rdx            ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@74 (line 990)

  0x00007f003f2886d7: mov    rdx,rdi
  0x00007f003f2886da: dec    edx
  0x00007f003f2886dc: cmp    edi,0x0
  0x00007f003f2886df: movabs rdi,0x7f003899a448  ;   {metadata(method data for {method} {0x00007f003876b108} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2886e9: movabs rcx,0x2c0
  0x00007f003f2886f3: je     0x00007f003f288703
  0x00007f003f2886f9: movabs rcx,0x2d0
  0x00007f003f288703: mov    r8,QWORD PTR [rdi+rcx*1]
  0x00007f003f288707: lea    r8,[r8+0x1]
  0x00007f003f28870b: mov    QWORD PTR [rdi+rcx*1],r8
  0x00007f003f28870f: je     0x00007f003f28872b
  0x00007f003f288715: jmp    0x00007f003f288630  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@53 (line 987)

  0x00007f003f28871a: mov    eax,0x0
  0x00007f003f28871f: add    rsp,0x30
  0x00007f003f288723: pop    rbp
  0x00007f003f288724: test   DWORD PTR [rip+0x1b1399d6],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f28872a: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@70 (line 989)

  0x00007f003f28872b: mov    eax,0x1
  0x00007f003f288730: add    rsp,0x30
  0x00007f003f288734: pop    rbp
  0x00007f003f288735: test   DWORD PTR [rip+0x1b1399c5],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f28873b: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@78 (line 992)

  0x00007f003f28873c: mov    eax,0x0
  0x00007f003f288741: add    rsp,0x30
  0x00007f003f288745: pop    rbp
  0x00007f003f288746: test   DWORD PTR [rip+0x1b1399b4],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f28874c: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@80 (line 995)

  0x00007f003f28874d: mov    eax,0x1
  0x00007f003f288752: add    rsp,0x30
  0x00007f003f288756: pop    rbp
  0x00007f003f288757: test   DWORD PTR [rip+0x1b1399a3],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f28875d: ret    
  0x00007f003f28875e: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f288763: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f28876b: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop off=1776}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x00007f003f288770: jmp    0x00007f003f2880de
  0x00007f003f288775: mov    QWORD PTR [rsp],rdx
  0x00007f003f288779: call   0x00007f003f27b2c0  ; OopMap{rsi=Oop off=1790}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x00007f003f28877e: call   0x00007f003f279000  ; OopMap{rax=Oop rsi=Oop off=1795}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x00007f003f288783: call   0x00007f003f279000  ; OopMap{rsi=Oop off=1800}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x00007f003f288788: call   0x00007f003f279000  ; OopMap{rsi=Oop rax=Oop off=1805}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x00007f003f28878d: mov    QWORD PTR [rsp],rbx
  0x00007f003f288791: call   0x00007f003f278940  ; OopMap{rax=Oop rsi=Oop off=1814}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x00007f003f288796: mov    QWORD PTR [rsp],rbx
  0x00007f003f28879a: call   0x00007f003f278940  ; OopMap{rax=Oop rsi=Oop off=1823}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x00007f003f28879f: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2887a4: mov    QWORD PTR [rsp],0x4a
  0x00007f003f2887ac: call   0x00007f003f27d5e0  ; OopMap{rax=Oop rsi=Oop off=1841}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x00007f003f2887b1: jmp    0x00007f003f2886be
  0x00007f003f2887b6: nop
  0x00007f003f2887b7: nop
  0x00007f003f2887b8: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2887bf: movabs r10,0x0
  0x00007f003f2887c9: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2887d0: movabs r10,0x0
  0x00007f003f2887da: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2887e1: add    rsp,0x30
  0x00007f003f2887e5: pop    rbp
  0x00007f003f2887e6: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2887eb: hlt    
  0x00007f003f2887ec: hlt    
  0x00007f003f2887ed: hlt    
  0x00007f003f2887ee: hlt    
  0x00007f003f2887ef: hlt    
  0x00007f003f2887f0: hlt    
  0x00007f003f2887f1: hlt    
  0x00007f003f2887f2: hlt    
  0x00007f003f2887f3: hlt    
  0x00007f003f2887f4: hlt    
  0x00007f003f2887f5: hlt    
  0x00007f003f2887f6: hlt    
  0x00007f003f2887f7: hlt    
  0x00007f003f2887f8: hlt    
  0x00007f003f2887f9: hlt    
  0x00007f003f2887fa: hlt    
  0x00007f003f2887fb: hlt    
  0x00007f003f2887fc: hlt    
  0x00007f003f2887fd: hlt    
  0x00007f003f2887fe: hlt    
  0x00007f003f2887ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f288800: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f288805: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f28880a: sub    rsp,0x80
  0x00007f003f288811: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f288816: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f28881b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f288820: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f288825: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f28882a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f28882f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f288834: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f288839: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f28883e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f288843: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f288848: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f28884d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f288852: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f288857: mov    QWORD PTR [rsp],r15
  0x00007f003f28885b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f288865: movabs rsi,0x7f003f288805  ;   {internal_word}
  0x00007f003f28886f: mov    rdx,rsp
  0x00007f003f288872: and    rsp,0xfffffffffffffff0
  0x00007f003f288876: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f28887b: hlt    
[Deopt Handler Code]
  0x00007f003f28887c: movabs r10,0x7f003f28887c  ;   {section_word}
  0x00007f003f288886: push   r10
  0x00007f003f288888: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f28888d: hlt    
  0x00007f003f28888e: hlt    
  0x00007f003f28888f: hlt    
<nmethod compile_id='3' compiler='C1' level='3' entry='0x00007f003f288080' size='3240' address='0x00007f003f287ed0' relocation_offset='312' insts_offset='432' stub_offset='2352' scopes_data_offset='2504' scopes_pcs_offset='2720' dependencies_offset='3200' nul_chk_table_offset='3208' metadata_offset='2496' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='394' backedge_count='1323' iicount='394' stamp='0.058'/>
<writer thread='139639490488064'/>
----------------------------------------------------------------------
java/lang/System.arraycopy  [0x00007f003f288d20, 0x00007f003f288f28]  520 bytes
[Entry Point]
  # {method} {0x00007f0038783750} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x00007f003f288d20: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f288d24: shl    r10,0x3
  0x00007f003f288d28: cmp    rax,r10
  0x00007f003f288d2b: je     0x00007f003f288d38
  0x00007f003f288d31: jmp    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f288d36: xchg   ax,ax
[Verified Entry Point]
  0x00007f003f288d38: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f288d3f: push   rbp
  0x00007f003f288d40: mov    rbp,rsp
  0x00007f003f288d43: sub    rsp,0x50
  0x00007f003f288d47: mov    QWORD PTR [rsp],r9
  0x00007f003f288d4b: mov    r9,r8
  0x00007f003f288d4e: mov    QWORD PTR [rsp+0x18],rcx
  0x00007f003f288d53: cmp    rcx,0x0
  0x00007f003f288d57: lea    r8,[rsp+0x18]
  0x00007f003f288d5c: cmove  r8,QWORD PTR [rsp+0x18]
  0x00007f003f288d62: mov    rcx,rdx
  0x00007f003f288d65: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f288d6a: cmp    rsi,0x0
  0x00007f003f288d6e: lea    rdx,[rsp+0x8]
  0x00007f003f288d73: cmove  rdx,QWORD PTR [rsp+0x8]
  0x00007f003f288d79: movabs r14,0x670b80c78    ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007f003f288d83: mov    QWORD PTR [rsp+0x38],r14
  0x00007f003f288d88: lea    r14,[rsp+0x38]
  0x00007f003f288d8d: mov    rsi,r14            ; OopMap{[24]=Oop [8]=Oop [56]=Oop off=112}
  0x00007f003f288d90: movabs r10,0x7f003f288d90  ;   {section_word}
  0x00007f003f288d9a: mov    QWORD PTR [r15+0x1c8],r10
  0x00007f003f288da1: mov    QWORD PTR [r15+0x1c0],rsp
  0x00007f003f288da8: cmp    BYTE PTR [rip+0x1a2cbc25],0x0        # 0x00007f00595549d4
                                                ;   {external_word}
  0x00007f003f288daf: je     0x00007f003f288df3
  0x00007f003f288db5: push   rsi
  0x00007f003f288db6: push   rdx
  0x00007f003f288db7: push   rcx
  0x00007f003f288db8: push   r8
  0x00007f003f288dba: push   r9
  0x00007f003f288dbc: movabs rsi,0x7f0038783750  ;   {metadata({method} {0x00007f0038783750} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00007f003f288dc6: mov    rdi,r15
  0x00007f003f288dc9: test   esp,0xf
  0x00007f003f288dcf: je     0x00007f003f288de7
  0x00007f003f288dd5: sub    rsp,0x8
  0x00007f003f288dd9: call   0x00007f0058f49f20  ;   {runtime_call}
  0x00007f003f288dde: add    rsp,0x8
  0x00007f003f288de2: jmp    0x00007f003f288dec
  0x00007f003f288de7: call   0x00007f0058f49f20  ;   {runtime_call}
  0x00007f003f288dec: pop    r9
  0x00007f003f288dee: pop    r8
  0x00007f003f288df0: pop    rcx
  0x00007f003f288df1: pop    rdx
  0x00007f003f288df2: pop    rsi
  0x00007f003f288df3: lea    rdi,[r15+0x1e0]
  0x00007f003f288dfa: mov    DWORD PTR [r15+0x258],0x4
  0x00007f003f288e05: call   0x00007f0058c57ac0  ;   {runtime_call}
  0x00007f003f288e0a: vzeroupper 
  0x00007f003f288e0d: mov    DWORD PTR [r15+0x258],0x5
  0x00007f003f288e18: mov    ecx,r15d
  0x00007f003f288e1b: shr    ecx,0x4
  0x00007f003f288e1e: and    ecx,0xffc
  0x00007f003f288e24: movabs r10,0x7f005a3c1000  ;   {external_word}
  0x00007f003f288e2e: mov    DWORD PTR [r10+rcx*1],ecx
  0x00007f003f288e32: cmp    DWORD PTR [rip+0x1a2d6b80],0x0        # 0x00007f005955f9bc
                                                ;   {external_word}
  0x00007f003f288e3c: jne    0x00007f003f288e50
  0x00007f003f288e42: cmp    DWORD PTR [r15+0x30],0x0
  0x00007f003f288e4a: je     0x00007f003f288e69
  0x00007f003f288e50: mov    rdi,r15
  0x00007f003f288e53: mov    r12,rsp
  0x00007f003f288e56: sub    rsp,0x0
  0x00007f003f288e5a: and    rsp,0xfffffffffffffff0
  0x00007f003f288e5e: call   0x00007f0058fefce0  ;   {runtime_call}
  0x00007f003f288e63: mov    rsp,r12
  0x00007f003f288e66: xor    r12,r12
  0x00007f003f288e69: mov    DWORD PTR [r15+0x258],0x8
  0x00007f003f288e74: cmp    DWORD PTR [r15+0x2b0],0x1
  0x00007f003f288e7f: je     0x00007f003f288f07
  0x00007f003f288e85: cmp    BYTE PTR [rip+0x1a2cbb48],0x0        # 0x00007f00595549d4
                                                ;   {external_word}
  0x00007f003f288e8c: je     0x00007f003f288ec2
  0x00007f003f288e92: movabs rsi,0x7f0038783750  ;   {metadata({method} {0x00007f0038783750} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00007f003f288e9c: mov    rdi,r15
  0x00007f003f288e9f: test   esp,0xf
  0x00007f003f288ea5: je     0x00007f003f288ebd
  0x00007f003f288eab: sub    rsp,0x8
  0x00007f003f288eaf: call   0x00007f0058f49f30  ;   {runtime_call}
  0x00007f003f288eb4: add    rsp,0x8
  0x00007f003f288eb8: jmp    0x00007f003f288ec2
  0x00007f003f288ebd: call   0x00007f0058f49f30  ;   {runtime_call}
  0x00007f003f288ec2: movabs r10,0x0
  0x00007f003f288ecc: mov    QWORD PTR [r15+0x1c0],r10
  0x00007f003f288ed3: movabs r10,0x0
  0x00007f003f288edd: mov    QWORD PTR [r15+0x1c8],r10
  0x00007f003f288ee4: mov    rcx,QWORD PTR [r15+0x38]
  0x00007f003f288ee8: mov    DWORD PTR [rcx+0x100],0x0
  0x00007f003f288ef2: leave  
  0x00007f003f288ef3: cmp    QWORD PTR [r15+0x8],0x0
  0x00007f003f288efb: jne    0x00007f003f288f02
  0x00007f003f288f01: ret    
  0x00007f003f288f02: jmp    Stub::forward exception  ;   {runtime_call}
  0x00007f003f288f07: mov    r12,rsp
  0x00007f003f288f0a: sub    rsp,0x0
  0x00007f003f288f0e: and    rsp,0xfffffffffffffff0
  0x00007f003f288f12: call   0x00007f0058f521e0  ;   {runtime_call}
  0x00007f003f288f17: mov    rsp,r12
  0x00007f003f288f1a: xor    r12,r12
  0x00007f003f288f1d: jmp    0x00007f003f288e85
  0x00007f003f288f22: hlt    
  0x00007f003f288f23: hlt    
  0x00007f003f288f24: hlt    
  0x00007f003f288f25: hlt    
  0x00007f003f288f26: hlt    
  0x00007f003f288f27: hlt    
<nmethod compile_id='8' compile_kind='c2n' level='0' entry='0x00007f003f288d20' size='920' address='0x00007f003f288b90' relocation_offset='312' consts_offset='920' insts_offset='400' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='640' iicount='640' stamp='0.059'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/String.indexOf  [0x00007f003f2890e0, 0x00007f003f289468]  904 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003876c018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2890e0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2890e4: shl    r10,0x3
  0x00007f003f2890e8: cmp    r10,rax
  0x00007f003f2890eb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2890f1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2890fc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f289100: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f289107: push   rbp
  0x00007f003f289108: sub    rsp,0x30
  0x00007f003f28910c: movabs rax,0x7f003899a7a8  ;   {metadata(method data for {method} {0x00007f003876c018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f289116: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f28911c: add    edi,0x8
  0x00007f003f28911f: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f289125: movabs rax,0x7f003876c018  ;   {metadata({method} {0x00007f003876c018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28912f: and    edi,0x1ff8
  0x00007f003f289135: cmp    edi,0x0
  0x00007f003f289138: je     0x00007f003f289341  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@0 (line 1546)

  0x00007f003f28913e: mov    eax,DWORD PTR [rsi+0xc]
  0x00007f003f289141: shl    rax,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x00007f003f289145: mov    edi,DWORD PTR [rax+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x00007f003f289358
  0x00007f003f289148: cmp    ecx,0x0
  0x00007f003f28914b: movabs rbx,0x7f003899a7a8  ;   {metadata(method data for {method} {0x00007f003876c018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f289155: movabs r8,0x130
  0x00007f003f28915f: jge    0x00007f003f28916f
  0x00007f003f289165: movabs r8,0x140
  0x00007f003f28916f: mov    r9,QWORD PTR [rbx+r8*1]
  0x00007f003f289173: lea    r9,[r9+0x1]
  0x00007f003f289177: mov    QWORD PTR [rbx+r8*1],r9
  0x00007f003f28917b: jge    0x00007f003f28919b  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x00007f003f289181: movabs rcx,0x7f003899a7a8  ;   {metadata(method data for {method} {0x00007f003876c018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28918b: inc    DWORD PTR [rcx+0x150]
  0x00007f003f289191: mov    ecx,0x0
  0x00007f003f289196: jmp    0x00007f003f2891d3  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@12 (line 1548)

<writer thread='139639490488064'/>
[Loaded sun.misc.URLClassPath$FileLoader from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
  0x00007f003f28919b: cmp    ecx,edi
  0x00007f003f28919d: movabs rbx,0x7f003899a7a8  ;   {metadata(method data for {method} {0x00007f003876c018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2891a7: movabs r8,0x168
  0x00007f003f2891b1: jl     0x00007f003f2891c1
  0x00007f003f2891b7: movabs r8,0x178
  0x00007f003f2891c1: mov    r9,QWORD PTR [rbx+r8*1]
  0x00007f003f2891c5: lea    r9,[r9+0x1]
  0x00007f003f2891c9: mov    QWORD PTR [rbx+r8*1],r9
  0x00007f003f2891cd: jge    0x00007f003f289330  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x00007f003f2891d3: cmp    edx,0x10000
  0x00007f003f2891d9: movabs rbx,0x7f003899a7a8  ;   {metadata(method data for {method} {0x00007f003876c018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2891e3: movabs r8,0x188
  0x00007f003f2891ed: jge    0x00007f003f2891fd
  0x00007f003f2891f3: movabs r8,0x198
  0x00007f003f2891fd: mov    r9,QWORD PTR [rbx+r8*1]
  0x00007f003f289201: lea    r9,[r9+0x1]
  0x00007f003f289205: mov    QWORD PTR [rbx+r8*1],r9
  0x00007f003f289209: jge    0x00007f003f289308
  0x00007f003f28920f: jmp    0x00007f003f2892ab  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x00007f003f289214: nop    DWORD PTR [rax+0x0]
  0x00007f003f289218: movsxd rsi,ecx
  0x00007f003f28921b: cmp    ecx,DWORD PTR [rax+0xc]
  0x00007f003f28921e: jae    0x00007f003f28935d
  0x00007f003f289224: movzx  esi,WORD PTR [rax+rsi*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00007f003f289229: cmp    esi,edx
  0x00007f003f28922b: movabs rsi,0x7f003899a7a8  ;   {metadata(method data for {method} {0x00007f003876c018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f289235: movabs rbx,0x1c8
  0x00007f003f28923f: jne    0x00007f003f28924f
  0x00007f003f289245: movabs rbx,0x1d8
  0x00007f003f28924f: mov    r8,QWORD PTR [rsi+rbx*1]
  0x00007f003f289253: lea    r8,[r8+0x1]
  0x00007f003f289257: mov    QWORD PTR [rsi+rbx*1],r8
  0x00007f003f28925b: je     0x00007f003f2892e8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00007f003f289261: inc    ecx
  0x00007f003f289263: movabs rsi,0x7f003899a7a8  ;   {metadata(method data for {method} {0x00007f003876c018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28926d: mov    ebx,DWORD PTR [rsi+0x100]
  0x00007f003f289273: add    ebx,0x8
  0x00007f003f289276: mov    DWORD PTR [rsi+0x100],ebx
  0x00007f003f28927c: movabs rsi,0x7f003876c018  ;   {metadata({method} {0x00007f003876c018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f289286: and    ebx,0xfff8
  0x00007f003f28928c: cmp    ebx,0x0
  0x00007f003f28928f: je     0x00007f003f289366  ; OopMap{rax=Oop off=437}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x00007f003f289295: test   DWORD PTR [rip+0x1b138e65],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f28929b: movabs rsi,0x7f003899a7a8  ;   {metadata(method data for {method} {0x00007f003876c018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2892a5: inc    DWORD PTR [rsi+0x1e8]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x00007f003f2892ab: cmp    ecx,edi
  0x00007f003f2892ad: movabs rsi,0x7f003899a7a8  ;   {metadata(method data for {method} {0x00007f003876c018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2892b7: movabs rbx,0x1a8
  0x00007f003f2892c1: jge    0x00007f003f2892d1
  0x00007f003f2892c7: movabs rbx,0x1b8
  0x00007f003f2892d1: mov    r8,QWORD PTR [rsi+rbx*1]
  0x00007f003f2892d5: lea    r8,[r8+0x1]
  0x00007f003f2892d9: mov    QWORD PTR [rsi+rbx*1],r8
  0x00007f003f2892dd: jge    0x00007f003f2892f7
  0x00007f003f2892e3: jmp    0x00007f003f289218  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00007f003f2892e8: mov    rax,rcx
  0x00007f003f2892eb: add    rsp,0x30
  0x00007f003f2892ef: pop    rbp
  0x00007f003f2892f0: test   DWORD PTR [rip+0x1b138e0a],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2892f6: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@54 (line 1560)

  0x00007f003f2892f7: mov    eax,0xffffffff
  0x00007f003f2892fc: add    rsp,0x30
  0x00007f003f289300: pop    rbp
  0x00007f003f289301: test   DWORD PTR [rip+0x1b138df9],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f289307: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@62 (line 1563)

  0x00007f003f289308: mov    rdi,rsi
  0x00007f003f28930b: movabs rbx,0x7f003899a7a8  ;   {metadata(method data for {method} {0x00007f003876c018} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f289315: add    QWORD PTR [rbx+0x200],0x1
  0x00007f003f28931d: nop
  0x00007f003f28931e: nop
  0x00007f003f28931f: call   0x00007f003f1c4d60  ; OopMap{off=580}
                                                ;*invokespecial indexOfSupplementary {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@66 (line 1565)
                                                ;   {optimized virtual_call}
  0x00007f003f289324: add    rsp,0x30
  0x00007f003f289328: pop    rbp
  0x00007f003f289329: test   DWORD PTR [rip+0x1b138dd1],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f28932f: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@69 (line 1565)

  0x00007f003f289330: mov    eax,0xffffffff
  0x00007f003f289335: add    rsp,0x30
  0x00007f003f289339: pop    rbp
  0x00007f003f28933a: test   DWORD PTR [rip+0x1b138dc0],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f289340: ret    
  0x00007f003f289341: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f289346: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f28934e: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=627}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)
                                                ;   {runtime_call}
  0x00007f003f289353: jmp    0x00007f003f28913e
  0x00007f003f289358: call   0x00007f003f279000  ; OopMap{rsi=Oop rax=Oop off=637}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x00007f003f28935d: mov    QWORD PTR [rsp],rcx
  0x00007f003f289361: call   0x00007f003f278940  ; OopMap{rax=Oop off=646}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x00007f003f289366: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f28936b: mov    QWORD PTR [rsp],0x3a
  0x00007f003f289373: call   0x00007f003f27d5e0  ; OopMap{rax=Oop off=664}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@58 (line 1558)
                                                ;   {runtime_call}
  0x00007f003f289378: jmp    0x00007f003f289295
  0x00007f003f28937d: nop
  0x00007f003f28937e: nop
  0x00007f003f28937f: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f289386: movabs r10,0x0
  0x00007f003f289390: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f289397: movabs r10,0x0
  0x00007f003f2893a1: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2893a8: add    rsp,0x30
  0x00007f003f2893ac: pop    rbp
  0x00007f003f2893ad: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2893b2: hlt    
  0x00007f003f2893b3: hlt    
  0x00007f003f2893b4: hlt    
  0x00007f003f2893b5: hlt    
  0x00007f003f2893b6: hlt    
  0x00007f003f2893b7: hlt    
  0x00007f003f2893b8: hlt    
  0x00007f003f2893b9: hlt    
  0x00007f003f2893ba: hlt    
  0x00007f003f2893bb: hlt    
  0x00007f003f2893bc: hlt    
  0x00007f003f2893bd: hlt    
  0x00007f003f2893be: hlt    
  0x00007f003f2893bf: hlt    
[Stub Code]
  0x00007f003f2893c0: nop                       ;   {no_reloc}
  0x00007f003f2893c1: nop
  0x00007f003f2893c2: nop
  0x00007f003f2893c3: nop
  0x00007f003f2893c4: nop
  0x00007f003f2893c5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2893cf: jmp    0x00007f003f2893cf  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2893d4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2893d9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2893de: sub    rsp,0x80
  0x00007f003f2893e5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2893ea: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2893ef: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2893f4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2893f9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2893fe: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f289403: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f289408: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f28940d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f289412: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f289417: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f28941c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f289421: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f289426: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f28942b: mov    QWORD PTR [rsp],r15
  0x00007f003f28942f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f289439: movabs rsi,0x7f003f2893d9  ;   {internal_word}
  0x00007f003f289443: mov    rdx,rsp
  0x00007f003f289446: and    rsp,0xfffffffffffffff0
  0x00007f003f28944a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f28944f: hlt    
[Deopt Handler Code]
  0x00007f003f289450: movabs r10,0x7f003f289450  ;   {section_word}
  0x00007f003f28945a: push   r10
  0x00007f003f28945c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f289461: hlt    
  0x00007f003f289462: hlt    
  0x00007f003f289463: hlt    
  0x00007f003f289464: hlt    
  0x00007f003f289465: hlt    
  0x00007f003f289466: hlt    
  0x00007f003f289467: hlt    
<nmethod compile_id='6' compiler='C1' level='3' entry='0x00007f003f2890e0' size='1848' address='0x00007f003f288f50' relocation_offset='312' insts_offset='400' stub_offset='1136' scopes_data_offset='1312' scopes_pcs_offset='1472' dependencies_offset='1824' nul_chk_table_offset='1832' metadata_offset='1304' method='java/lang/String indexOf (II)I' bytes='70' count='189' backedge_count='6397' iicount='189' stamp='0.060'/>
----------------------------------------------------------------------
java/lang/String.charAt  [0x00007f003f289860, 0x00007f003f289ac8]  616 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003876a6b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f003f289860: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f289864: shl    r10,0x3
  0x00007f003f289868: cmp    r10,rax
  0x00007f003f28986b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f289871: data16 data16 nop WORD PTR [rax+rax*1+0x0]
<writer thread='139639490488064'/>
[Loaded sun.misc.Resource from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>

  0x00007f003f28987c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f289880: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f289887: push   rbp
  0x00007f003f289888: sub    rsp,0x30
  0x00007f003f28988c: mov    rdi,rdx
  0x00007f003f28988f: movabs rax,0x7f00389293b8  ;   {metadata(method data for {method} {0x00007f003876a6b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f289899: mov    edx,DWORD PTR [rax+0xfc]
  0x00007f003f28989f: add    edx,0x8
  0x00007f003f2898a2: mov    DWORD PTR [rax+0xfc],edx
  0x00007f003f2898a8: movabs rax,0x7f003876a6b0  ;   {metadata({method} {0x00007f003876a6b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2898b2: and    edx,0x1ff8
  0x00007f003f2898b8: cmp    edx,0x0
  0x00007f003f2898bb: je     0x00007f003f289996  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@0 (line 657)

  0x00007f003f2898c1: cmp    edi,0x0
  0x00007f003f2898c4: movabs rax,0x7f00389293b8  ;   {metadata(method data for {method} {0x00007f003876a6b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2898ce: movabs rdx,0x130
  0x00007f003f2898d8: jl     0x00007f003f2898e8
  0x00007f003f2898de: movabs rdx,0x140
  0x00007f003f2898e8: mov    rbx,QWORD PTR [rax+rdx*1]
  0x00007f003f2898ec: lea    rbx,[rbx+0x1]
  0x00007f003f2898f0: mov    QWORD PTR [rax+rdx*1],rbx
  0x00007f003f2898f4: jl     0x00007f003f289956  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@1 (line 657)

  0x00007f003f2898fa: mov    eax,DWORD PTR [rsi+0xc]
  0x00007f003f2898fd: shl    rax,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@6 (line 657)

  0x00007f003f289901: mov    edx,DWORD PTR [rax+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x00007f003f2899ad
  0x00007f003f289904: cmp    edi,edx
  0x00007f003f289906: movabs rdx,0x7f00389293b8  ;   {metadata(method data for {method} {0x00007f003876a6b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f289910: movabs rsi,0x150
  0x00007f003f28991a: jl     0x00007f003f28992a
  0x00007f003f289920: movabs rsi,0x160
  0x00007f003f28992a: mov    rbx,QWORD PTR [rdx+rsi*1]
  0x00007f003f28992e: lea    rbx,[rbx+0x1]
  0x00007f003f289932: mov    QWORD PTR [rdx+rsi*1],rbx
  0x00007f003f289936: jge    0x00007f003f289956  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@10 (line 657)

  0x00007f003f28993c: movsxd rdi,edi
  0x00007f003f28993f: movzx  eax,WORD PTR [rax+rdi*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@27 (line 660)

  0x00007f003f289944: and    eax,0xffff
  0x00007f003f28994a: add    rsp,0x30
  0x00007f003f28994e: pop    rbp
  0x00007f003f28994f: test   DWORD PTR [rip+0x1b1387ab],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f289955: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@28 (line 660)

  0x00007f003f289956: xchg   ax,ax
  0x00007f003f289958: jmp    0x00007f003f2899c1  ;   {no_reloc}
  0x00007f003f28995d: add    BYTE PTR [rax],al
  0x00007f003f28995f: add    BYTE PTR [rax],al
  0x00007f003f289961: add    cl,ch
  0x00007f003f289963: add    BYTE PTR fs:[rax],al
  0x00007f003f289966: add    BYTE PTR [rax-0x75],cl  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@13 (line 658)

  0x00007f003f289969: ror    BYTE PTR [rax-0x42],1  ;   {metadata(method data for {method} {0x00007f003876a6b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28996c: mov    eax,0x389293
  0x00007f003f289971: jg     0x00007f003f289973
  0x00007f003f289973: add    BYTE PTR [rax-0x7d],cl
  0x00007f003f289976: xchg   BYTE PTR [rax+0x1],dh
  0x00007f003f289979: add    BYTE PTR [rax],al
  0x00007f003f28997b: add    DWORD PTR [rax-0x75],ecx
  0x00007f003f28997e: xlat   BYTE PTR ds:[rbx]
  0x00007f003f28997f: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@18 (line 658)

  0x00007f003f289982: mov    QWORD PTR [rsp+0x20],rax
  0x00007f003f289987: call   0x00007f003f1c4d60  ; OopMap{[32]=Oop off=300}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ;   {optimized virtual_call}
  0x00007f003f28998c: mov    rax,QWORD PTR [rsp+0x20]
  0x00007f003f289991: jmp    0x00007f003f289a00
  0x00007f003f289996: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f28999b: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2899a3: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=328}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ;   {runtime_call}
  0x00007f003f2899a8: jmp    0x00007f003f2898c1
  0x00007f003f2899ad: call   0x00007f003f279000  ; OopMap{rax=Oop off=338}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x00007f003f2899b2: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2899bc: mov    eax,0xa050f00
  0x00007f003f2899c1: call   0x00007f003f27c5e0  ; OopMap{off=358}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x00007f003f2899c6: jmp    0x00007f003f289958
  0x00007f003f2899c8: nop
  0x00007f003f2899c9: nop
  0x00007f003f2899ca: nop
  0x00007f003f2899cb: mov    rdx,rdx
  0x00007f003f2899ce: call   0x00007f003f2794a0  ; OopMap{off=371}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x00007f003f2899d3: jmp    0x00007f003f289967
  0x00007f003f2899d5: nop
  0x00007f003f2899d6: nop
  0x00007f003f2899d7: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2899de: movabs r10,0x0
  0x00007f003f2899e8: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2899ef: movabs r10,0x0
  0x00007f003f2899f9: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f289a00: add    rsp,0x30
  0x00007f003f289a04: pop    rbp
  0x00007f003f289a05: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f289a0a: hlt    
  0x00007f003f289a0b: hlt    
  0x00007f003f289a0c: hlt    
  0x00007f003f289a0d: hlt    
  0x00007f003f289a0e: hlt    
  0x00007f003f289a0f: hlt    
  0x00007f003f289a10: hlt    
  0x00007f003f289a11: hlt    
  0x00007f003f289a12: hlt    
  0x00007f003f289a13: hlt    
  0x00007f003f289a14: hlt    
  0x00007f003f289a15: hlt    
  0x00007f003f289a16: hlt    
  0x00007f003f289a17: hlt    
  0x00007f003f289a18: hlt    
  0x00007f003f289a19: hlt    
  0x00007f003f289a1a: hlt    
  0x00007f003f289a1b: hlt    
  0x00007f003f289a1c: hlt    
  0x00007f003f289a1d: hlt    
  0x00007f003f289a1e: hlt    
  0x00007f003f289a1f: hlt    
[Stub Code]
  0x00007f003f289a20: nop                       ;   {no_reloc}
  0x00007f003f289a21: nop
  0x00007f003f289a22: nop
  0x00007f003f289a23: nop
  0x00007f003f289a24: nop
  0x00007f003f289a25: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f289a2f: jmp    0x00007f003f289a2f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f289a34: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f289a39: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f289a3e: sub    rsp,0x80
  0x00007f003f289a45: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f289a4a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f289a4f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f289a54: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f289a59: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f289a5e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f289a63: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f289a68: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f289a6d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f289a72: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f289a77: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f289a7c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f289a81: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f289a86: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f289a8b: mov    QWORD PTR [rsp],r15
  0x00007f003f289a8f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f289a99: movabs rsi,0x7f003f289a39  ;   {internal_word}
  0x00007f003f289aa3: mov    rdx,rsp
  0x00007f003f289aa6: and    rsp,0xfffffffffffffff0
  0x00007f003f289aaa: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f289aaf: hlt    
[Deopt Handler Code]
  0x00007f003f289ab0: movabs r10,0x7f003f289ab0  ;   {section_word}
  0x00007f003f289aba: push   r10
  0x00007f003f289abc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f289ac1: hlt    
  0x00007f003f289ac2: hlt    
  0x00007f003f289ac3: hlt    
  0x00007f003f289ac4: hlt    
  0x00007f003f289ac5: hlt    
  0x00007f003f289ac6: hlt    
  0x00007f003f289ac7: hlt    
<nmethod compile_id='5' compiler='C1' level='3' entry='0x00007f003f289860' size='1408' address='0x00007f003f2896d0' relocation_offset='312' insts_offset='400' stub_offset='848' scopes_data_offset='1024' scopes_pcs_offset='1128' dependencies_offset='1384' nul_chk_table_offset='1392' metadata_offset='1016' method='java/lang/String charAt (I)C' bytes='29' count='2936' iicount='2936' stamp='0.061'/>
<writer thread='139639490488064'/>
[Loaded sun.misc.URLClassPath$FileLoader$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/Object.&lt;init&gt;  [0x00007f003f289e00, 0x00007f003f289f50]  336 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f289e00: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f289e04: shl    r10,0x3
  0x00007f003f289e08: cmp    r10,rax
  0x00007f003f289e0b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f289e11: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f289e1c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f289e20: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f289e27: push   rbp
  0x00007f003f289e28: sub    rsp,0x30
  0x00007f003f289e2c: movabs rdi,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f289e36: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f289e3c: add    ebx,0x8
  0x00007f003f289e3f: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f289e45: movabs rdi,0x7f00387664d8
<writer thread='139639490488064'/>
[Loaded java.lang.Package from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f289e4f: and    ebx,0x1ff8
  0x00007f003f289e55: cmp    ebx,0x0
  0x00007f003f289e58: je     0x00007f003f289e77
  0x00007f003f289e5e: mov    rdi,rsi            ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x00007f003f289e61: mov    QWORD PTR [rsp+0x20],rsi
  0x00007f003f289e66: call   0x00007f003f279220  ; OopMap{[32]=Oop off=107}
                                                ;*return {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x00007f003f289e6b: add    rsp,0x30
  0x00007f003f289e6f: pop    rbp
  0x00007f003f289e70: test   DWORD PTR [rip+0x1b13828a],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f289e76: ret    
  0x00007f003f289e77: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f289e7c: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f289e84: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ;   {runtime_call}
  0x00007f003f289e89: jmp    0x00007f003f289e5e
  0x00007f003f289e8b: nop
  0x00007f003f289e8c: nop
  0x00007f003f289e8d: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f289e94: movabs r10,0x0
  0x00007f003f289e9e: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f289ea5: movabs r10,0x0
  0x00007f003f289eaf: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f289eb6: add    rsp,0x30
  0x00007f003f289eba: pop    rbp
  0x00007f003f289ebb: jmp    0x00007f003f2785a0  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x00007f003f289ec0: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f289ec5: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f289eca: sub    rsp,0x80
  0x00007f003f289ed1: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f289ed6: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f289edb: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f289ee0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f289ee5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f289eea: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f289eef: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f289ef4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f289ef9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f289efe: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f289f03: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f289f08: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f289f0d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f289f12: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f289f17: mov    QWORD PTR [rsp],r15
  0x00007f003f289f1b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f289f25: movabs rsi,0x7f003f289ec5  ;   {internal_word}
  0x00007f003f289f2f: mov    rdx,rsp
  0x00007f003f289f32: and    rsp,0xfffffffffffffff0
  0x00007f003f289f36: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f289f3b: hlt    
[Deopt Handler Code]
  0x00007f003f289f3c: movabs r10,0x7f003f289f3c  ;   {section_word}
  0x00007f003f289f46: push   r10
  0x00007f003f289f48: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f289f4d: hlt    
  0x00007f003f289f4e: hlt    
  0x00007f003f289f4f: hlt    
<nmethod compile_id='4' compiler='C1' level='3' entry='0x00007f003f289e00' size='832' address='0x00007f003f289c90' relocation_offset='312' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='744' dependencies_offset='824' metadata_offset='704' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1669' iicount='1669' stamp='0.061'/>
----------------------------------------------------------------------
java/lang/Math.min  [0x00007f003f28a180, 0x00007f003f28a310]  400 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f003f28a180: mov    DWORD PTR [rsp-0x14000],eax
<writer thread='139639490488064'/>
[Loaded sun.nio.ByteBuffered from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>

  0x00007f003f28a187: push   rbp
  0x00007f003f28a188: sub    rsp,0x30
  0x00007f003f28a18c: movabs rax,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f28a196: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f28a19c: add    edi,0x8
  0x00007f003f28a19f: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f28a1a5: movabs rax,0x7f003887a8b8  ;   {metadata({method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f28a1af: and    edi,0x1ff8
  0x00007f003f28a1b5: cmp    edi,0x0
  0x00007f003f28a1b8: je     0x00007f003f28a21d  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@0 (line 1336)

  0x00007f003f28a1be: cmp    esi,edx
  0x00007f003f28a1c0: movabs rax,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f28a1ca: movabs rdi,0x130
  0x00007f003f28a1d4: jg     0x00007f003f28a1e4
  0x00007f003f28a1da: movabs rdi,0x140
  0x00007f003f28a1e4: mov    rbx,QWORD PTR [rax+rdi*1]
  0x00007f003f28a1e8: lea    rbx,[rbx+0x1]
  0x00007f003f28a1ec: mov    QWORD PTR [rax+rdi*1],rbx
  0x00007f003f28a1f0: jg     0x00007f003f28a20b  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)

  0x00007f003f28a1f6: movabs rax,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f28a200: inc    DWORD PTR [rax+0x150]
  0x00007f003f28a206: jmp    0x00007f003f28a20e  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)

  0x00007f003f28a20b: mov    rsi,rdx            ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1336)

  0x00007f003f28a20e: mov    rax,rsi
  0x00007f003f28a211: add    rsp,0x30
  0x00007f003f28a215: pop    rbp
  0x00007f003f28a216: test   DWORD PTR [rip+0x1b137ee4],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f28a21c: ret    
  0x00007f003f28a21d: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f28a222: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f28a22a: call   0x00007f003f27d5e0  ; OopMap{off=175}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x00007f003f28a22f: jmp    0x00007f003f28a1be
  0x00007f003f28a231: nop
  0x00007f003f28a232: nop
  0x00007f003f28a233: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f28a23a: movabs r10,0x0
  0x00007f003f28a244: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f28a24b: movabs r10,0x0
  0x00007f003f28a255: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f28a25c: add    rsp,0x30
  0x00007f003f28a260: pop    rbp
  0x00007f003f28a261: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f28a266: hlt    
  0x00007f003f28a267: hlt    
  0x00007f003f28a268: hlt    
  0x00007f003f28a269: hlt    
  0x00007f003f28a26a: hlt    
  0x00007f003f28a26b: hlt    
  0x00007f003f28a26c: hlt    
  0x00007f003f28a26d: hlt    
  0x00007f003f28a26e: hlt    
  0x00007f003f28a26f: hlt    
  0x00007f003f28a270: hlt    
  0x00007f003f28a271: hlt    
  0x00007f003f28a272: hlt    
  0x00007f003f28a273: hlt    
  0x00007f003f28a274: hlt    
  0x00007f003f28a275: hlt    
  0x00007f003f28a276: hlt    
  0x00007f003f28a277: hlt    
  0x00007f003f28a278: hlt    
  0x00007f003f28a279: hlt    
  0x00007f003f28a27a: hlt    
  0x00007f003f28a27b: hlt    
  0x00007f003f28a27c: hlt    
  0x00007f003f28a27d: hlt    
  0x00007f003f28a27e: hlt    
  0x00007f003f28a27f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f28a280: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f28a285: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f28a28a: sub    rsp,0x80
  0x00007f003f28a291: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f28a296: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f28a29b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f28a2a0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f28a2a5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f28a2aa: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f28a2af: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f28a2b4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f28a2b9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f28a2be: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f28a2c3: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f28a2c8: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f28a2cd: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f28a2d2: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f28a2d7: mov    QWORD PTR [rsp],r15
  0x00007f003f28a2db: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f28a2e5: movabs rsi,0x7f003f28a285  ;   {internal_word}
  0x00007f003f28a2ef: mov    rdx,rsp
  0x00007f003f28a2f2: and    rsp,0xfffffffffffffff0
  0x00007f003f28a2f6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f28a2fb: hlt    
[Deopt Handler Code]
  0x00007f003f28a2fc: movabs r10,0x7f003f28a2fc  ;   {section_word}
  0x00007f003f28a306: push   r10
  0x00007f003f28a308: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f28a30d: hlt    
  0x00007f003f28a30e: hlt    
  0x00007f003f28a30f: hlt    
<nmethod compile_id='7' compiler='C1' level='3' entry='0x00007f003f28a180' size='936' address='0x00007f003f28a010' relocation_offset='312' insts_offset='368' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='816' dependencies_offset='928' metadata_offset='768' method='java/lang/Math min (II)I' bytes='11' count='726' iicount='726' stamp='0.062'/>
<writer thread='139639490488064'/>
[Loaded sun.misc.PerfCounter from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.Perf$GetPerfAction from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.Perf from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.PerfCounter$CoreCounters from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.ch.DirectBuffer from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.MappedByteBuffer from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.DirectByteBuffer from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.LongBuffer from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.DirectLongBufferU from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.security.PermissionCollection from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.security.Permissions from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<task_queued compile_id='9' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='256' iicount='256' level='3' stamp='0.063' comment='tiered' hot_count='256'/>
[Loaded java.net.URLConnection from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.net.www.URLConnection from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.FileURLConnection from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/String.&lt;init&gt;  [0x00007f003f28ae20, 0x00007f003f28b318]  1272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00387697c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     
<writer thread='139639490488064'/>
[Loaded sun.net.www.MessageHeader from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
rsi:rsi                 = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x00007f003f28ae20: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f28ae24: shl    r10,0x3
  0x00007f003f28ae28: cmp    r10,rax
  0x00007f003f28ae2b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f28ae31: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f28ae3c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f28ae40: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f28ae47: push   rbp
  0x00007f003f28ae48: sub    rsp,0x60
  0x00007f003f28ae4c: movabs rdi,0x7f00389b56a0  ;   {metadata(method data for {method} {0x00007f00387697c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28ae56: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f28ae5c: add    ebx,0x8
  0x00007f003f28ae5f: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f28ae65: movabs rdi,0x7f00387697c0  ;   {metadata({method} {0x00007f00387697c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28ae6f: and    ebx,0x1ff8
  0x00007f003f28ae75: cmp    ebx,0x0
  0x00007f003f28ae78: je     0x00007f003f28b146  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x00007f003f28ae7e: mov    rdi,rsi
  0x00007f003f28ae81: movabs rbx,0x7f00389b56a0  ;   {metadata(method data for {method} {0x00007f00387697c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28ae8b: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f28ae93: movabs rdi,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f28ae9d: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f28aea3: add    ebx,0x8
  0x00007f003f28aea6: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f28aeac: movabs rdi,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f28aeb6: and    ebx,0x7ffff8
  0x00007f003f28aebc: cmp    ebx,0x0
  0x00007f003f28aebf: je     0x00007f003f28b15d
  0x00007f003f28aec5: cmp    ecx,0x0
  0x00007f003f28aec8: movabs rdi,0x7f00389b56a0  ;   {metadata(method data for {method} {0x00007f00387697c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28aed2: movabs rbx,0x140
  0x00007f003f28aedc: jge    0x00007f003f28aeec
  0x00007f003f28aee2: movabs rbx,0x150
  0x00007f003f28aeec: mov    rax,QWORD PTR [rdi+rbx*1]
  0x00007f003f28aef0: lea    rax,[rax+0x1]
  0x00007f003f28aef4: mov    QWORD PTR [rdi+rbx*1],rax
  0x00007f003f28aef8: jl     0x00007f003f28b106  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x00007f003f28aefe: cmp    r8d,0x0
  0x00007f003f28af02: movabs rdi,0x7f00389b56a0  ;   {metadata(method data for {method} {0x00007f00387697c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28af0c: movabs rbx,0x170
  0x00007f003f28af16: jg     0x00007f003f28af26
  0x00007f003f28af1c: movabs rbx,0x180
  0x00007f003f28af26: mov    rax,QWORD PTR [rdi+rbx*1]
  0x00007f003f28af2a: lea    rax,[rax+0x1]
  0x00007f003f28af2e: mov    QWORD PTR [rdi+rbx*1],rax
  0x00007f003f28af32: jg     0x00007f003f28afad  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x00007f003f28af38: cmp    r8d,0x0
  0x00007f003f28af3c: movabs rdi,0x7f00389b56a0  ;   {metadata(method data for {method} {0x00007f00387697c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28af46: movabs rbx,0x190
  0x00007f003f28af50: jge    0x00007f003f28af60
  0x00007f003f28af56: movabs rbx,0x1a0
  0x00007f003f28af60: mov    rax,QWORD PTR [rdi+rbx*1]
  0x00007f003f28af64: lea    rax,[rax+0x1]
  0x00007f003f28af68: mov    QWORD PTR [rdi+rbx*1],rax
  0x00007f003f28af6c: jl     0x00007f003f28b0c6  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x00007f003f28af72: mov    edi,DWORD PTR [rdx+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x00007f003f28b174
  0x00007f003f28af75: cmp    ecx,edi
  0x00007f003f28af77: movabs rdi,0x7f00389b56a0  ;   {metadata(method data for {method} {0x00007f00387697c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28af81: movabs rbx,0x1c0
  0x00007f003f28af8b: jg     0x00007f003f28af9b
  0x00007f003f28af91: movabs rbx,0x1d0
  0x00007f003f28af9b: mov    rax,QWORD PTR [rdi+rbx*1]
  0x00007f003f28af9f: lea    rax,[rax+0x1]
  0x00007f003f28afa3: mov    QWORD PTR [rdi+rbx*1],rax
  0x00007f003f28afa7: jle    0x00007f003f28b042  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x00007f003f28afad: mov    edi,DWORD PTR [rdx+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x00007f003f28b179
  0x00007f003f28afb0: sub    edi,r8d
  0x00007f003f28afb3: cmp    ecx,edi
  0x00007f003f28afb5: movabs rdi,0x7f00389b56a0  ;   {metadata(method data for {method} {0x00007f00387697c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28afbf: movabs rbx,0x1e0
  0x00007f003f28afc9: jle    0x00007f003f28afd9
  0x00007f003f28afcf: movabs rbx,0x1f0
  0x00007f003f28afd9: mov    rax,QWORD PTR [rdi+rbx*1]
  0x00007f003f28afdd: lea    rax,[rax+0x1]
  0x00007f003f28afe1: mov    QWORD PTR [rdi+rbx*1],rax
  0x00007f003f28afe5: jg     0x00007f003f28b07c  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x00007f003f28afeb: mov    QWORD PTR [rsp+0x38],rsi
  0x00007f003f28aff0: movabs rdi,0x7f00389b56a0  ;   {metadata(method data for {method} {0x00007f00387697c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28affa: add    QWORD PTR [rdi+0x210],0x1
  0x00007f003f28b002: add    r8d,ecx
  0x00007f003f28b005: mov    rsi,rdx
  0x00007f003f28b008: mov    rdx,rcx
  0x00007f003f28b00b: mov    rcx,r8             ;*invokestatic copyOfRange {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x00007f003f28b00e: nop
  0x00007f003f28b00f: call   0x00007f003f1c5160  ; OopMap{[56]=Oop off=500}
                                                ;*invokestatic copyOfRange {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x00007f003f28b014: mov    rsi,QWORD PTR [rsp+0x38]
  0x00007f003f28b019: mov    r10,rax
  0x00007f003f28b01c: shr    r10,0x3
  0x00007f003f28b020: mov    DWORD PTR [rsi+0xc],r10d
  0x00007f003f28b024: shr    rsi,0x9
  0x00007f003f28b028: movabs rdx,0x7f003ae7c000
  0x00007f003f28b032: mov    BYTE PTR [rsi+rdx*1],0x0  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x00007f003f28b036: add    rsp,0x60
  0x00007f003f28b03a: pop    rbp
  0x00007f003f28b03b: test   DWORD PTR [rip+0x1b1370bf],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f28b041: ret                       ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x00007f003f28b042: movabs rdx,0x670b8a5e8    ;   {oop(&quot;&quot;)}
  0x00007f003f28b04c: mov    edx,DWORD PTR [rdx+0xc]  ; implicit exception: dispatches to 0x00007f003f28b17e
  0x00007f003f28b04f: shl    rdx,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)

  0x00007f003f28b053: mov    r10,rdx
  0x00007f003f28b056: shr    r10,0x3
  0x00007f003f28b05a: mov    DWORD PTR [rsi+0xc],r10d
  0x00007f003f28b05e: shr    rsi,0x9
  0x00007f003f28b062: movabs rdx,0x7f003ae7c000
  0x00007f003f28b06c: mov    BYTE PTR [rsi+rdx*1],0x0  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x00007f003f28b070: add    rsp,0x60
  0x00007f003f28b074: pop    rbp
  0x00007f003f28b075: test   DWORD PTR [rip+0x1b137085],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f28b07b: ret                       ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x00007f003f28b07c: nop    DWORD PTR [rax+0x0]
  0x00007f003f28b080: jmp    0x00007f003f28b192  ;   {no_reloc}
  0x00007f003f28b085: add    BYTE PTR [rax],al
  0x00007f003f28b087: add    BYTE PTR [rax],al
  0x00007f003f28b089: add    cl,ch
  0x00007f003f28b08b: or     eax,0x48000001     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x00007f003f28b090: mov    edx,eax
  0x00007f003f28b092: movabs rsi,0x7f00389b56a0  ;   {metadata(method data for {method} {0x00007f00387697c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28b09c: add    QWORD PTR [rsi+0x200],0x1
  0x00007f003f28b0a4: add    r8d,ecx
  0x00007f003f28b0a7: mov    rdx,r8
  0x00007f003f28b0aa: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x00007f003f28b0ad: mov    QWORD PTR [rsp+0x40],rax
  0x00007f003f28b0b2: nop
  0x00007f003f28b0b3: nop
  0x00007f003f28b0b4: nop
  0x00007f003f28b0b5: nop
  0x00007f003f28b0b6: nop
  0x00007f003f28b0b7: call   0x00007f003f1c4d60  ; OopMap{[64]=Oop off=668}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x00007f003f28b0bc: mov    rax,QWORD PTR [rsp+0x40]
  0x00007f003f28b0c1: jmp    0x00007f003f28b220  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x00007f003f28b0c6: xchg   ax,ax
  0x00007f003f28b0c8: jmp    0x00007f003f28b1b8  ;   {no_reloc}
  0x00007f003f28b0cd: add    BYTE PTR [rax],al
  0x00007f003f28b0cf: add    BYTE PTR [rax],al
  0x00007f003f28b0d1: add    cl,ch
  0x00007f003f28b0d3: jmp    0x00007f003f28b0d5
  0x00007f003f28b0d5: add    BYTE PTR [rax],al  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x00007f003f28b0d7: mov    rdx,rax
  0x00007f003f28b0da: movabs rsi,0x7f00389b56a0  ;   {metadata(method data for {method} {0x00007f00387697c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28b0e4: add    QWORD PTR [rsi+0x1b0],0x1
  0x00007f003f28b0ec: mov    rdx,r8
  0x00007f003f28b0ef: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x00007f003f28b0f2: mov    QWORD PTR [rsp+0x48],rax
  0x00007f003f28b0f7: call   0x00007f003f1c4d60  ; OopMap{[72]=Oop off=732}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x00007f003f28b0fc: mov    rax,QWORD PTR [rsp+0x48]
  0x00007f003f28b101: jmp    0x00007f003f28b220  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x00007f003f28b106: xchg   ax,ax
  0x00007f003f28b108: jmp    0x00007f003f28b1de  ;   {no_reloc}
  0x00007f003f28b10d: add    BYTE PTR [rax],al
  0x00007f003f28b10f: add    BYTE PTR [rax],al
  0x00007f003f28b111: add    cl,ch
  0x00007f003f28b113: rol    DWORD PTR [rax],1
  0x00007f003f28b115: add    BYTE PTR [rax],al  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x00007f003f28b117: mov    rdx,rax
  0x00007f003f28b11a: movabs rsi,0x7f00389b56a0  ;   {metadata(method data for {method} {0x00007f00387697c0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28b124: add    QWORD PTR [rsi+0x160],0x1
  0x00007f003f28b12c: mov    rdx,rcx
  0x00007f003f28b12f: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x00007f003f28b132: mov    QWORD PTR [rsp+0x50],rax
  0x00007f003f28b137: call   0x00007f003f1c4d60  ; OopMap{[80]=Oop off=796}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x00007f003f28b13c: mov    rax,QWORD PTR [rsp+0x50]
  0x00007f003f28b141: jmp    0x00007f003f28b220
  0x00007f003f28b146: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f28b14b: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f28b153: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop off=824}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x00007f003f28b158: jmp    0x00007f003f28ae7e
  0x00007f003f28b15d: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f28b162: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f28b16a: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop off=847}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x00007f003f28b16f: jmp    0x00007f003f28aec5
  0x00007f003f28b174: call   0x00007f003f279000  ; OopMap{rsi=Oop rdx=Oop off=857}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x00007f003f28b179: call   0x00007f003f279000  ; OopMap{rsi=Oop rdx=Oop off=862}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x00007f003f28b17e: call   0x00007f003f279000  ; OopMap{rsi=Oop off=867}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x00007f003f28b183: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f28b18d: mov    eax,0xa050f00
  0x00007f003f28b192: call   0x00007f003f27c5e0  ; OopMap{off=887}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x00007f003f28b197: jmp    0x00007f003f28b080
  0x00007f003f28b19c: mov    rdx,rdx
  0x00007f003f28b19f: call   0x00007f003f2794a0  ; OopMap{off=900}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x00007f003f28b1a4: jmp    0x00007f003f28b08f
  0x00007f003f28b1a9: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f28b1b3: mov    eax,0xa050f00
  0x00007f003f28b1b8: call   0x00007f003f27c5e0  ; OopMap{off=925}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x00007f003f28b1bd: jmp    0x00007f003f28b0c8
  0x00007f003f28b1c2: mov    rdx,rdx
  0x00007f003f28b1c5: call   0x00007f003f2794a0  ; OopMap{off=938}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x00007f003f28b1ca: jmp    0x00007f003f28b0d7
  0x00007f003f28b1cf: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f28b1d9: mov    eax,0xa050f00
  0x00007f003f28b1de: call   0x00007f003f27c5e0  ; OopMap{off=963}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x00007f003f28b1e3: jmp    0x00007f003f28b108
  0x00007f003f28b1e8: mov    rdx,rdx
  0x00007f003f28b1eb: call   0x00007f003f2794a0  ; OopMap{off=976}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x00007f003f28b1f0: jmp    0x00007f003f28b117
  0x00007f003f28b1f5: nop
  0x00007f003f28b1f6: nop
  0x00007f003f28b1f7: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f28b1fe: movabs r10,0x0
  0x00007f003f28b208: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f28b20f: movabs r10,0x0
  0x00007f003f28b219: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f28b220: add    rsp,0x60
  0x00007f003f28b224: pop    rbp
  0x00007f003f28b225: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f28b22a: hlt    
  0x00007f003f28b22b: hlt    
  0x00007f003f28b22c: hlt    
  0x00007f003f28b22d: hlt    
  0x00007f003f28b22e: hlt    
  0x00007f003f28b22f: hlt    
  0x00007f003f28b230: hlt    
  0x00007f003f28b231: hlt    
  0x00007f003f28b232: hlt    
  0x00007f003f28b233: hlt    
  0x00007f003f28b234: hlt    
  0x00007f003f28b235: hlt    
  0x00007f003f28b236: hlt    
  0x00007f003f28b237: hlt    
  0x00007f003f28b238: hlt    
  0x00007f003f28b239: hlt    
  0x00007f003f28b23a: hlt    
  0x00007f003f28b23b: hlt    
  0x00007f003f28b23c: hlt    
  0x00007f003f28b23d: hlt    
  0x00007f003f28b23e: hlt    
  0x00007f003f28b23f: hlt    
[Stub Code]
  0x00007f003f28b240: nop                       ;   {no_reloc}
  0x00007f003f28b241: nop
  0x00007f003f28b242: nop
  0x00007f003f28b243: nop
  0x00007f003f28b244: nop
  0x00007f003f28b245: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28b24f: jmp    0x00007f003f28b24f  ;   {runtime_call}
  0x00007f003f28b254: nop
  0x00007f003f28b255: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28b25f: jmp    0x00007f003f28b25f  ;   {runtime_call}
  0x00007f003f28b264: nop
  0x00007f003f28b265: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28b26f: jmp    0x00007f003f28b26f  ;   {runtime_call}
  0x00007f003f28b274: nop
  0x00007f003f28b275: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28b27f: jmp    0x00007f003f28b27f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f28b284: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f28b289: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f28b28e: sub    rsp,0x80
  0x00007f003f28b295: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f28b29a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f28b29f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f28b2a4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f28b2a9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f28b2ae: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f28b2b3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f28b2b8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f28b2bd: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f28b2c2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f28b2c7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f28b2cc: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f28b2d1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f28b2d6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f28b2db: mov    QWORD PTR [rsp],r15
  0x00007f003f28b2df: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f28b2e9: movabs rsi,0x7f003f28b289  ;   {internal_word}
  0x00007f003f28b2f3: mov    rdx,rsp
  0x00007f003f28b2f6: and    rsp,0xfffffffffffffff0
  0x00007f003f28b2fa: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f28b2ff: hlt    
[Deopt Handler Code]
  0x00007f003f28b300: movabs r10,0x7f003f28b300  ;   {section_word}
  0x00007f003f28b30a: push   r10
  0x00007f003f28b30c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f28b311: hlt    
  0x00007f003f28b312: hlt    
  0x00007f003f28b313: hlt    
  0x00007f003f28b314: hlt    
  0x00007f003f28b315: hlt    
  0x00007f003f28b316: hlt    
  0x00007f003f28b317: hlt    
<nmethod compile_id='9' compiler='C1' level='3' entry='0x00007f003f28ae20' size='2704' address='0x00007f003f28ac50' relocation_offset='312' insts_offset='464' stub_offset='1520' scopes_data_offset='1752' scopes_pcs_offset='2040' dependencies_offset='2664' nul_chk_table_offset='2672' metadata_offset='1736' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='256' iicount='256' stamp='0.065'/>
<writer thread='139639490488064'/>
[Loaded java.io.FilePermission from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.FilePermission$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.io.FilePermissionCollection from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.security.AllPermission from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.security.UnresolvedPermission from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.security.BasicPermissionCollection from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded com.github.marschall.charsequences.ParseUuidCompilation from file:/home/marschall/git/charsequences/target/test-classes/]
[Loaded sun.launcher.LauncherHelper$FXHelper from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Class$MethodArray from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.Void from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<task_queued compile_id='10' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='256' iicount='256' level='3' stamp='0.067' comment='tiered' hot_count='256'/>
<task_queued compile_id='11' method='java/lang/String getChars (II[CI)V' bytes='62' count='256' iicount='256' level='3' stamp='0.067' comment='tiered' hot_count='256'/>
[Loaded com.github.marschall.charsequences.CharSequences from file:/home/marschall/git/charsequences/target/classes/]
[Loaded java.lang.AssertionError from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.NumberFormatException from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ForwardingNode from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.append  [0x00007f003f28b8e0, 0x00007f003f28bf38]  1624 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00387eb6f0} &apos;append&apos; &apos;(Ljava/l
<writer thread='139639490488064'/>
[Loaded java.lang.IndexOutOfBoundsException from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
ang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0xf0]  (sp of caller)
  0x00007f003f28b8e0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f28b8e4: shl    r10,0x3
  0x00007f003f28b8e8: cmp    r10,rax
  0x00007f003f28b8eb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f28b8f1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f28b8fc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f28b900: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f28b907: push   rbp
  0x00007f003f28b908: sub    rsp,0xe0
  0x00007f003f28b90f: mov    QWORD PTR [rsp+0xb8],rsi
  0x00007f003f28b917: movabs rdi,0x7f00389cb968  ;   {metadata(method data for {method} {0x00007f00387eb6f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f28b921: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f28b927: add    ebx,0x8
  0x00007f003f28b92a: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f28b930: movabs rdi,0x7f00387eb6f0  ;   {metadata({method} {0x00007f00387eb6f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f28b93a: and    ebx,0x1ff8
  0x00007f003f28b940: cmp    ebx,0x0
  0x00007f003f28b943: je     0x00007f003f28bd73  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x00007f003f28b949: cmp    rdx,0x0
  0x00007f003f28b94d: movabs rdi,0x7f00389cb968  ;   {metadata(method data for {method} {0x00007f00387eb6f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f28b957: movabs rbx,0x130
  0x00007f003f28b961: jne    0x00007f003f28b971
  0x00007f003f28b967: movabs rbx,0x140
  0x00007f003f28b971: mov    rax,QWORD PTR [rdi+rbx*1]
  0x00007f003f28b975: lea    rax,[rax+0x1]
  0x00007f003f28b979: mov    QWORD PTR [rdi+rbx*1],rax
  0x00007f003f28b97d: je     0x00007f003f28bd43  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x00007f003f28b983: cmp    rax,QWORD PTR [rdx]  ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x00007f003f28bd8a
  0x00007f003f28b986: mov    rdi,rdx
  0x00007f003f28b989: movabs rbx,0x7f00389cb968  ;   {metadata(method data for {method} {0x00007f00387eb6f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f28b993: add    QWORD PTR [rbx+0x160],0x1
  0x00007f003f28b99b: movabs rdi,0x7f003898eaf8  ;   {metadata(method data for {method} {0x00007f003876a538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28b9a5: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f28b9ab: add    ebx,0x8
  0x00007f003f28b9ae: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f28b9b4: movabs rdi,0x7f003876a538  ;   {metadata({method} {0x00007f003876a538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28b9be: and    ebx,0x7ffff8
  0x00007f003f28b9c4: cmp    ebx,0x0
  0x00007f003f28b9c7: je     0x00007f003f28bd8f
  0x00007f003f28b9cd: mov    edi,DWORD PTR [rdx+0xc]
  0x00007f003f28b9d0: shl    rdi,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x00007f003f28b9d4: mov    edi,DWORD PTR [rdi+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x00007f003f28bda6
  0x00007f003f28b9d7: mov    DWORD PTR [rsp+0xac],edi
  0x00007f003f28b9de: mov    ebx,DWORD PTR [rsi+0xc]  ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x00007f003f28b9e1: add    ebx,edi
  0x00007f003f28b9e3: mov    rax,rsi
  0x00007f003f28b9e6: movabs rcx,0x7f00389cb968  ;   {metadata(method data for {method} {0x00007f00387eb6f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f28b9f0: add    QWORD PTR [rcx+0x1f8],0x1
  0x00007f003f28b9f8: movabs rax,0x7f00389cbde0  ;   {metadata(method data for {method} {0x00007f00387eabe0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f28ba02: mov    ecx,DWORD PTR [rax+0xfc]
  0x00007f003f28ba08: add    ecx,0x8
  0x00007f003f28ba0b: mov    DWORD PTR [rax+0xfc],ecx
  0x00007f003f28ba11: movabs rax,0x7f00387eabe0  ;   {metadata({method} {0x00007f00387eabe0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f28ba1b: and    ecx,0x7ffff8
  0x00007f003f28ba21: cmp    ecx,0x0
  0x00007f003f28ba24: je     0x00007f003f28bdab
  0x00007f003f28ba2a: mov    eax,DWORD PTR [rsi+0x10]
  0x00007f003f28ba2d: shl    rax,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007f003f28ba31: mov    ecx,DWORD PTR [rax+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x00007f003f28bdc2
  0x00007f003f28ba34: mov    r8,rbx
  0x00007f003f28ba37: sub    r8d,ecx
  0x00007f003f28ba3a: cmp    r8d,0x0
  0x00007f003f28ba3e: movabs r8,0x7f00389cbde0  ;   {metadata(method data for {method} {0x00007f00387eabe0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f28ba48: movabs r9,0x130
  0x00007f003f28ba52: jle    0x00007f003f28ba62
  0x00007f003f28ba58: movabs r9,0x140
  0x00007f003f28ba62: mov    r11,QWORD PTR [r8+r9*1]
  0x00007f003f28ba66: lea    r11,[r11+0x1]
  0x00007f003f28ba6a: mov    QWORD PTR [r8+r9*1],r11
  0x00007f003f28ba6e: jg     0x00007f003f28ba81  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007f003f28ba74: mov    QWORD PTR [rsp+0xc0],rdx
  0x00007f003f28ba7c: jmp    0x00007f003f28bcdb  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007f003f28ba81: mov    DWORD PTR [rsp+0xa8],ecx
  0x00007f003f28ba88: mov    QWORD PTR [rsp+0xb0],rax
  0x00007f003f28ba90: mov    QWORD PTR [rsp+0xc0],rdx
  0x00007f003f28ba98: mov    r8,rsi
  0x00007f003f28ba9b: movabs r9,0x7f00389cbde0  ;   {metadata(method data for {method} {0x00007f00387eabe0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f28baa5: add    QWORD PTR [r9+0x150],0x1
  0x00007f003f28baad: mov    rdx,rbx
  0x00007f003f28bab0: mov    rbx,rsi
  0x00007f003f28bab3: mov    rsi,rbx            ;*invokespecial newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007f003f28bab6: nop
  0x00007f003f28bab7: call   0x00007f003f1c4d60  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=476}
                                                ;*invokespecial newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x00007f003f28babc: mov    r8,rax             ;*invokespecial newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007f003f28babf: movabs rbx,0x7f00389cbde0  ;   {metadata(method data for {method} {0x00007f00387eabe0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f28bac9: add    QWORD PTR [rbx+0x160],0x1
  0x00007f003f28bad1: movabs rbx,0x7f00389cc188  ;   {metadata(method data for {method} {0x00007f00388a3750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f28badb: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f28bae1: add    edx,0x8
  0x00007f003f28bae4: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f28baea: movabs rbx,0x7f00388a3750  ;   {metadata({method} {0x00007f00388a3750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f28baf4: and    edx,0x7ffff8
  0x00007f003f28bafa: cmp    edx,0x0
  0x00007f003f28bafd: je     0x00007f003f28bdc7
  0x00007f003f28bb03: mov    rbx,r8
  0x00007f003f28bb06: movabs rdx,0x7c00001f8    ;   {metadata({type array char})}
  0x00007f003f28bb10: movsxd rbx,ebx
  0x00007f003f28bb13: mov    rdi,rbx
  0x00007f003f28bb16: cmp    rbx,0xffffff
  0x00007f003f28bb1d: ja     0x00007f003f28bdde
  0x00007f003f28bb23: movabs rsi,0x17
  0x00007f003f28bb2d: lea    rsi,[rsi+rbx*2]
  0x00007f003f28bb31: and    rsi,0xfffffffffffffff8
  0x00007f003f28bb35: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f28bb39: lea    rsi,[rax+rsi*1]
  0x00007f003f28bb3d: cmp    rsi,QWORD PTR [r15+0x70]
  0x00007f003f28bb41: ja     0x00007f003f28bdde
  0x00007f003f28bb47: mov    QWORD PTR [r15+0x60],rsi
  0x00007f003f28bb4b: sub    rsi,rax
  0x00007f003f28bb4e: mov    QWORD PTR [rax],0x1
  0x00007f003f28bb55: mov    rcx,rdx
  0x00007f003f28bb58: shr    rcx,0x3
  0x00007f003f28bb5c: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f28bb5f: mov    DWORD PTR [rax+0xc],ebx
  0x00007f003f28bb62: sub    rsi,0x10
  0x00007f003f28bb66: je     0x00007f003f28bb7d
  0x00007f003f28bb6c: xor    rbx,rbx
  0x00007f003f28bb6f: shr    rsi,0x3
  0x00007f003f28bb73: mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x00007f003f28bb78: dec    rsi
  0x00007f003f28bb7b: jne    0x00007f003f28bb73  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007f003f28bb7d: movabs rsi,0x7f00389cc188  ;   {metadata(method data for {method} {0x00007f00388a3750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f28bb87: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f28bb8f: movabs rsi,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f28bb99: mov    edx,DWORD PTR [rsi+0xfc]
  0x00007f003f28bb9f: add    edx,0x8
  0x00007f003f28bba2: mov    DWORD PTR [rsi+0xfc],edx
  0x00007f003f28bba8: movabs rsi,0x7f003887a8b8  ;   {metadata({method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f28bbb2: and    edx,0x7ffff8
  0x00007f003f28bbb8: cmp    edx,0x0
  0x00007f003f28bbbb: je     0x00007f003f28bde8
  0x00007f003f28bbc1: mov    ecx,DWORD PTR [rsp+0xa8]
  0x00007f003f28bbc8: cmp    ecx,r8d
  0x00007f003f28bbcb: movabs rsi,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f28bbd5: movabs rdx,0x130
  0x00007f003f28bbdf: jg     0x00007f003f28bbef
  0x00007f003f28bbe5: movabs rdx,0x140
  0x00007f003f28bbef: mov    r9,QWORD PTR [rsi+rdx*1]
  0x00007f003f28bbf3: lea    r9,[r9+0x1]
  0x00007f003f28bbf7: mov    QWORD PTR [rsi+rdx*1],r9
  0x00007f003f28bbfb: jg     0x00007f003f28bc19  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007f003f28bc01: movabs rsi,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f28bc0b: inc    DWORD PTR [rsi+0x150]
  0x00007f003f28bc11: mov    r9,rcx
  0x00007f003f28bc14: jmp    0x00007f003f28bc1c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007f003f28bc19: mov    r9,r8              ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007f003f28bc1c: mov    rsi,QWORD PTR [rsp+0xb0]
  0x00007f003f28bc24: movabs rdx,0x7f00389cc188  ;   {metadata(method data for {method} {0x00007f00388a3750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f28bc2e: add    QWORD PTR [rdx+0x140],0x1
  0x00007f003f28bc36: mov    edx,0x0
  0x00007f003f28bc3b: mov    rcx,rax
  0x00007f003f28bc3e: mov    r8d,0x0
  0x00007f003f28bc44: mov    QWORD PTR [rsp+0xc8],rax
  0x00007f003f28bc4c: lea    rdi,[rdx+r9*1]
  0x00007f003f28bc50: cmp    edi,DWORD PTR [rsi+0xc]
  0x00007f003f28bc53: ja     0x00007f003f28bdff
  0x00007f003f28bc59: lea    rdi,[r8+r9*1]
  0x00007f003f28bc5d: cmp    edi,DWORD PTR [rcx+0xc]
  0x00007f003f28bc60: ja     0x00007f003f28bdff
  0x00007f003f28bc66: test   r9d,r9d
  0x00007f003f28bc69: jl     0x00007f003f28bdff
  0x00007f003f28bc6f: je     0x00007f003f28bcab
  0x00007f003f28bc75: movsxd rdx,edx
  0x00007f003f28bc78: movsxd r8,r8d
  0x00007f003f28bc7b: lea    rdi,[rsi+rdx*2+0x10]
  0x00007f003f28bc80: lea    rsi,[rcx+r8*2+0x10]
  0x00007f003f28bc85: mov    rdx,r9
  0x00007f003f28bc88: test   esp,0xf
  0x00007f003f28bc8e: je     0x00007f003f28bca6
  0x00007f003f28bc94: sub    rsp,0x8
  0x00007f003f28bc98: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007f003f28bc9d: add    rsp,0x8
  0x00007f003f28bca1: jmp    0x00007f003f28bcab
  0x00007f003f28bca6: call   Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007f003f28bcab: mov    rax,QWORD PTR [rsp+0xc8]
  0x00007f003f28bcb3: mov    rsi,QWORD PTR [rsp+0xb8]
  0x00007f003f28bcbb: mov    r10,rax
  0x00007f003f28bcbe: shr    r10,0x3
  0x00007f003f28bcc2: mov    DWORD PTR [rsi+0x10],r10d
  0x00007f003f28bcc6: mov    rdx,rsi
  0x00007f003f28bcc9: shr    rdx,0x9
  0x00007f003f28bccd: movabs rcx,0x7f003ae7c000
  0x00007f003f28bcd7: mov    BYTE PTR [rdx+rcx*1],0x0  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007f003f28bcdb: mov    ebx,DWORD PTR [rsp+0xac]
  0x00007f003f28bce2: mov    rdi,QWORD PTR [rsp+0xc0]
  0x00007f003f28bcea: mov    r8d,DWORD PTR [rsi+0x10]
  0x00007f003f28bcee: shl    r8,0x3             ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x00007f003f28bcf2: mov    r9d,DWORD PTR [rsi+0xc]  ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x00007f003f28bcf6: mov    rdx,rdi
  0x00007f003f28bcf9: movabs rcx,0x7f00389cb968  ;   {metadata(method data for {method} {0x00007f00387eb6f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f28bd03: add    QWORD PTR [rcx+0x208],0x1
  0x00007f003f28bd0b: mov    edx,0x0
  0x00007f003f28bd10: mov    rcx,rbx
  0x00007f003f28bd13: mov    rsi,rdi            ;*invokevirtual getChars {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x00007f003f28bd16: nop
  0x00007f003f28bd17: call   0x00007f003f1c4d60  ; OopMap{[184]=Oop off=1084}
                                                ;*invokevirtual getChars {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x00007f003f28bd1c: mov    rsi,QWORD PTR [rsp+0xb8]
  0x00007f003f28bd24: mov    eax,DWORD PTR [rsi+0xc]  ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x00007f003f28bd27: add    eax,DWORD PTR [rsp+0xac]
  0x00007f003f28bd2e: mov    DWORD PTR [rsi+0xc],eax  ;*putfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x00007f003f28bd31: mov    rax,rsi
  0x00007f003f28bd34: add    rsp,0xe0
  0x00007f003f28bd3b: pop    rbp
  0x00007f003f28bd3c: test   DWORD PTR [rip+0x1b1363be],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f28bd42: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x00007f003f28bd43: mov    rdi,rsi
  0x00007f003f28bd46: movabs rbx,0x7f00389cb968  ;   {metadata(method data for {method} {0x00007f00387eb6f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f28bd50: add    QWORD PTR [rbx+0x150],0x1
  0x00007f003f28bd58: nop
  0x00007f003f28bd59: nop
  0x00007f003f28bd5a: nop
  0x00007f003f28bd5b: nop
  0x00007f003f28bd5c: nop
  0x00007f003f28bd5d: nop
  0x00007f003f28bd5e: nop
  0x00007f003f28bd5f: call   0x00007f003f1c4d60  ; OopMap{off=1156}
                                                ;*invokespecial appendNull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x00007f003f28bd64: add    rsp,0xe0
  0x00007f003f28bd6b: pop    rbp
  0x00007f003f28bd6c: test   DWORD PTR [rip+0x1b13638e],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f28bd72: ret    
  0x00007f003f28bd73: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f28bd78: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f28bd80: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1189}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x00007f003f28bd85: jmp    0x00007f003f28b949
  0x00007f003f28bd8a: call   0x00007f003f279000  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1199}
                                                ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00007f003f28bd8f: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f28bd94: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f28bd9c: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1217}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00007f003f28bda1: jmp    0x00007f003f28b9cd
  0x00007f003f28bda6: call   0x00007f003f279000  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1227}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00007f003f28bdab: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f28bdb0: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f28bdb8: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1245}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007f003f28bdbd: jmp    0x00007f003f28ba2a
  0x00007f003f28bdc2: call   0x00007f003f279000  ; OopMap{rsi=Oop [184]=Oop rdx=Oop rax=Oop off=1255}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007f003f28bdc7: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f28bdcc: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f28bdd4: call   0x00007f003f27d5e0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1273}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007f003f28bdd9: jmp    0x00007f003f28bb03
  0x00007f003f28bdde: call   0x00007f003f27a020  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1283}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007f003f28bde3: jmp    0x00007f003f28bb7d
  0x00007f003f28bde8: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f28bded: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f28bdf5: call   0x00007f003f27d5e0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1306}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007f003f28bdfa: jmp    0x00007f003f28bbc1
  0x00007f003f28bdff: call   0x00007f003f1c5160  ; OopMap{[184]=Oop [192]=Oop [200]=Oop off=1316}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x00007f003f28be04: jmp    0x00007f003f28bcab
  0x00007f003f28be09: nop
  0x00007f003f28be0a: nop
  0x00007f003f28be0b: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f28be12: movabs r10,0x0
  0x00007f003f28be1c: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f28be23: movabs r10,0x0
  0x00007f003f28be2d: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f28be34: add    rsp,0xe0
  0x00007f003f28be3b: pop    rbp
  0x00007f003f28be3c: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f28be41: hlt    
  0x00007f003f28be42: hlt    
  0x00007f003f28be43: hlt    
  0x00007f003f28be44: hlt    
  0x00007f003f28be45: hlt    
  0x00007f003f28be46: hlt    
  0x00007f003f28be47: hlt    
  0x00007f003f28be48: hlt    
  0x00007f003f28be49: hlt    
  0x00007f003f28be4a: hlt    
  0x00007f003f28be4b: hlt    
  0x00007f003f28be4c: hlt    
  0x00007f003f28be4d: hlt    
  0x00007f003f28be4e: hlt    
  0x00007f003f28be4f: hlt    
  0x00007f003f28be50: hlt    
  0x00007f003f28be51: hlt    
  0x00007f003f28be52: hlt    
  0x00007f003f28be53: hlt    
  0x00007f003f28be54: hlt    
  0x00007f003f28be55: hlt    
  0x00007f003f28be56: hlt    
  0x00007f003f28be57: hlt    
  0x00007f003f28be58: hlt    
  0x00007f003f28be59: hlt    
  0x00007f003f28be5a: hlt    
  0x00007f003f28be5b: hlt    
  0x00007f003f28be5c: hlt    
  0x00007f003f28be5d: hlt    
  0x00007f003f28be5e: hlt    
  0x00007f003f28be5f: hlt    
[Stub Code]
  0x00007f003f28be60: nop                       ;   {no_reloc}
  0x00007f003f28be61: nop
  0x00007f003f28be62: nop
  0x00007f003f28be63: nop
  0x00007f003f28be64: nop
  0x00007f003f28be65: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28be6f: jmp    0x00007f003f28be6f  ;   {runtime_call}
  0x00007f003f28be74: nop
  0x00007f003f28be75: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28be7f: jmp    0x00007f003f28be7f  ;   {runtime_call}
  0x00007f003f28be84: nop
  0x00007f003f28be85: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28be8f: jmp    0x00007f003f28be8f  ;   {runtime_call}
  0x00007f003f28be94: nop
  0x00007f003f28be95: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28be9f: jmp    0x00007f003f28be9f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f28bea4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f28bea9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f28beae: sub    rsp,0x80
  0x00007f003f28beb5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f28beba: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f28bebf: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f28bec4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f28bec9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f28bece: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f28bed3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f28bed8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f28bedd: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f28bee2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f28bee7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f28beec: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f28bef1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f28bef6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f28befb: mov    QWORD PTR [rsp],r15
  0x00007f003f28beff: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f28bf09: movabs rsi,0x7f003f28bea9  ;   {internal_word}
  0x00007f003f28bf13: mov    rdx,rsp
  0x00007f003f28bf16: and    rsp,0xfffffffffffffff0
  0x00007f003f28bf1a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f28bf1f: hlt    
[Deopt Handler Code]
  0x00007f003f28bf20: movabs r10,0x7f003f28bf20  ;   {section_word}
  0x00007f003f28bf2a: push   r10
  0x00007f003f28bf2c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f28bf31: hlt    
  0x00007f003f28bf32: hlt    
  0x00007f003f28bf33: hlt    
  0x00007f003f28bf34: hlt    
  0x00007f003f28bf35: hlt    
  0x00007f003f28bf36: hlt    
  0x00007f003f28bf37: hlt    
<nmethod compile_id='10' compiler='C1' level='3' entry='0x00007f003f28b8e0' size='3200' address='0x00007f003f28b710' relocation_offset='312' insts_offset='464' stub_offset='1872' scopes_data_offset='2128' scopes_pcs_offset='2536' dependencies_offset='3160' nul_chk_table_offset='3168' metadata_offset='2088' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='262' iicount='262' stamp='0.070'/>
<writer thread='139639490488064'/>
[Loaded java.util.UUID from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/String.getChars  [0x00007f003f28c5a0, 0x00007f003f28c9d8]  1080 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003876abf8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8:r8     = &apos;[C&apos;
  # parm3:    r9        = int
  #           [sp+0x70]  (sp of caller)
  0x00007f003f28c5a0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f28c5a4: shl    r10,0x3
  0x00007f003f28c5a8: cmp    r10,rax
  0x00007f003f28c5ab: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f28c5b1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f28c5bc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f28c5c0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f28c5c7: push   rbp
  0x00007f003f28c5c8: sub    rsp,0x60
  0x00007f003f28c5cc: mov    rdi,rdx
  0x00007f003f28c5cf: movabs rdx,0x7f00389cc320  ;   {metadata(method data for {method} {0x00007f003876abf8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28c5d9: mov    ebx,DWORD PTR [rdx+0xfc]
  0x00007f003f28c5df: add    ebx,0x8
  0x00007f003f28c5e2: mov    DWORD PTR [rdx+0xfc],ebx
  0x00007f003f28c5e8: movabs rdx,0x7f003876abf8  ;   {metadata({method} {0x00007f003876abf8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28c5f2: and    ebx,0x1ff8
  0x00007f003f28c5f8: cmp    ebx,0x0
  0x00007f003f28c5fb: je     0x00007f003f28c826  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@0 (line 817)

  0x00007f003f28c601: cmp    edi,0x0
  0x00007f003f28c604: movabs rdx,0x7f00389cc320  ;   {metadata(method data for {method} {0x00007f003876abf8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28c60e: movabs rbx,0x130
  0x00007f003f28c618: jge    0x00007f003f28c628
  0x00007f003f28c61e: movabs rbx,0x140
  0x00007f003f28c628: mov    rax,QWORD PTR [rdx+rbx*1]
  0x00007f003f28c62c: lea    rax,[rax+0x1]
  0x00007f003f28c630: mov    QWORD PTR [rdx+rbx*1],rax
  0x00007f003f28c634: jl     0x00007f003f28c7e6  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@1 (line 817)

  0x00007f003f28c63a: mov    esi,DWORD PTR [rsi+0xc]
  0x00007f003f28c63d: shl    rsi,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@15 (line 820)

  0x00007f003f28c641: mov    edx,DWORD PTR [rsi+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x00007f003f28c83d
  0x00007f003f28c644: cmp    ecx,edx
  0x00007f003f28c646: movabs rdx,0x7f00389cc320  ;   {metadata(method data for {method} {0x00007f003876abf8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28c650: movabs rbx,0x160
  0x00007f003f28c65a: jle    0x00007f003f28c66a
  0x00007f003f28c660: movabs rbx,0x170
  0x00007f003f28c66a: mov    rax,QWORD PTR [rdx+rbx*1]
  0x00007f003f28c66e: lea    rax,[rax+0x1]
  0x00007f003f28c672: mov    QWORD PTR [rdx+rbx*1],rax
  0x00007f003f28c676: jg     0x00007f003f28c7a6  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@19 (line 820)

  0x00007f003f28c67c: cmp    edi,ecx
  0x00007f003f28c67e: movabs rdx,0x7f00389cc320  ;   {metadata(method data for {method} {0x00007f003876abf8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28c688: movabs rbx,0x190
  0x00007f003f28c692: jle    0x00007f003f28c6a2
  0x00007f003f28c698: movabs rbx,0x1a0
  0x00007f003f28c6a2: mov    rax,QWORD PTR [rdx+rbx*1]
  0x00007f003f28c6a6: lea    rax,[rax+0x1]
  0x00007f003f28c6aa: mov    QWORD PTR [rdx+rbx*1],rax
  0x00007f003f28c6ae: jg     0x00007f003f28c75c  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@33 (line 823)

  0x00007f003f28c6b4: movabs rdx,0x7f00389cc320  ;   {metadata(method data for {method} {0x00007f003876abf8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28c6be: add    QWORD PTR [rdx+0x1c0],0x1
  0x00007f003f28c6c6: mov    rbx,rcx
  0x00007f003f28c6c9: sub    ebx,edi
  0x00007f003f28c6cb: mov    rdx,rdi
  0x00007f003f28c6ce: mov    rcx,r8
  0x00007f003f28c6d1: mov    r8,r9
  0x00007f003f28c6d4: mov    r9,rbx
  0x00007f003f28c6d7: test   rcx,rcx
  0x00007f003f28c6da: je     0x00007f003f28c842
  0x00007f003f28c6e0: test   edx,edx
  0x00007f003f28c6e2: jl     0x00007f003f28c842
  0x00007f003f28c6e8: test   r8d,r8d
  0x00007f003f28c6eb: jl     0x00007f003f28c842
  0x00007f003f28c6f1: lea    rdi,[rdx+r9*1]
  0x00007f003f28c6f5: cmp    edi,DWORD PTR [rsi+0xc]
  0x00007f003f28c6f8: ja     0x00007f003f28c842
  0x00007f003f28c6fe: lea    rdi,[r8+r9*1]
  0x00007f003f28c702: cmp    edi,DWORD PTR [rcx+0xc]
  0x00007f003f28c705: ja     0x00007f003f28c842
  0x00007f003f28c70b: test   r9d,r9d
  0x00007f003f28c70e: jl     0x00007f003f28c842
  0x00007f003f28c714: je     0x00007f003f28c750
  0x00007f003f28c71a: movsxd rdx,edx
  0x00007f003f28c71d: movsxd r8,r8d
  0x00007f003f28c720: lea    rdi,[rsi+rdx*2+0x10]
  0x00007f003f28c725: lea    rsi,[rcx+r8*2+0x10]
  0x00007f003f28c72a: mov    rdx,r9
  0x00007f003f28c72d: test   esp,0xf
  0x00007f003f28c733: je     0x00007f003f28c74b
  0x00007f003f28c739: sub    rsp,0x8
  0x00007f003f28c73d: call   Stub::jshort_arraycopy  ;   {runtime_call}
  0x00007f003f28c742: add    rsp,0x8
  0x00007f003f28c746: jmp    0x00007f003f28c750
  0x00007f003f28c74b: call   Stub::jshort_arraycopy  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {runtime_call}
  0x00007f003f28c750: add    rsp,0x60
  0x00007f003f28c754: pop    rbp
  0x00007f003f28c755: test   DWORD PTR [rip+0x1b1359a5],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f28c75b: ret                       ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@61 (line 827)

  0x00007f003f28c75c: nop    DWORD PTR [rax+0x0]
  0x00007f003f28c760: jmp    0x00007f003f28c860  ;   {no_reloc}
  0x00007f003f28c765: add    BYTE PTR [rax],al
  0x00007f003f28c767: add    BYTE PTR [rax],al
  0x00007f003f28c769: add    cl,ch
  0x00007f003f28c76b: sti    
  0x00007f003f28c76c: add    BYTE PTR [rax],al
  0x00007f003f28c76e: add    BYTE PTR [rax-0x75],cl  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@36 (line 824)

  0x00007f003f28c771: ror    BYTE PTR [rax-0x42],1  ;   {metadata(method data for {method} {0x00007f003876abf8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28c774: and    bl,al
  0x00007f003f28c776: pushf  
  0x00007f003f28c777: cmp    BYTE PTR [rax],al
  0x00007f003f28c779: jg     0x00007f003f28c77b
  0x00007f003f28c77b: add    BYTE PTR [rax-0x7d],cl
  0x00007f003f28c77e: xchg   BYTE PTR [rax+0x1000001],dh
  0x00007f003f28c784: sub    ecx,edi
  0x00007f003f28c786: mov    rdx,rcx
  0x00007f003f28c789: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@43 (line 824)

  0x00007f003f28c78c: mov    QWORD PTR [rsp+0x38],rax
  0x00007f003f28c791: nop
  0x00007f003f28c792: nop
  0x00007f003f28c793: nop
  0x00007f003f28c794: nop
  0x00007f003f28c795: nop
  0x00007f003f28c796: nop
  0x00007f003f28c797: call   0x00007f003f1c4d60  ; OopMap{[56]=Oop off=508}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x00007f003f28c79c: mov    rax,QWORD PTR [rsp+0x38]
  0x00007f003f28c7a1: jmp    0x00007f003f28c8ee  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@46 (line 824)

  0x00007f003f28c7a6: xchg   ax,ax
  0x00007f003f28c7a8: jmp    0x00007f003f28c886  ;   {no_reloc}
  0x00007f003f28c7ad: add    BYTE PTR [rax],al
  0x00007f003f28c7af: add    BYTE PTR [rax],al
  0x00007f003f28c7b1: add    cl,ch
  0x00007f003f28c7b3: fld    DWORD PTR [rax]
  0x00007f003f28c7b5: add    BYTE PTR [rax],al  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@22 (line 821)

  0x00007f003f28c7b7: mov    rdx,rax
  0x00007f003f28c7ba: movabs rsi,0x7f00389cc320  ;   {metadata(method data for {method} {0x00007f003876abf8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28c7c4: add    QWORD PTR [rsi+0x180],0x1
  0x00007f003f28c7cc: mov    rdx,rcx
  0x00007f003f28c7cf: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@27 (line 821)

  0x00007f003f28c7d2: mov    QWORD PTR [rsp+0x40],rax
  0x00007f003f28c7d7: call   0x00007f003f1c4d60  ; OopMap{[64]=Oop off=572}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x00007f003f28c7dc: mov    rax,QWORD PTR [rsp+0x40]
  0x00007f003f28c7e1: jmp    0x00007f003f28c8ee  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@30 (line 821)

  0x00007f003f28c7e6: xchg   ax,ax
  0x00007f003f28c7e8: jmp    0x00007f003f28c8ac  ;   {no_reloc}
  0x00007f003f28c7ed: add    BYTE PTR [rax],al
  0x00007f003f28c7ef: add    BYTE PTR [rax],al
  0x00007f003f28c7f1: add    cl,ch
  0x00007f003f28c7f3: mov    edi,0x48000000     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@4 (line 818)

  0x00007f003f28c7f8: mov    edx,eax
  0x00007f003f28c7fa: movabs rsi,0x7f00389cc320  ;   {metadata(method data for {method} {0x00007f003876abf8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f28c804: add    QWORD PTR [rsi+0x150],0x1
  0x00007f003f28c80c: mov    rdx,rdi
  0x00007f003f28c80f: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@9 (line 818)

  0x00007f003f28c812: mov    QWORD PTR [rsp+0x48],rax
  0x00007f003f28c817: call   0x00007f003f1c4d60  ; OopMap{[72]=Oop off=636}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x00007f003f28c81c: mov    rax,QWORD PTR [rsp+0x48]
  0x00007f003f28c821: jmp    0x00007f003f28c8ee
  0x00007f003f28c826: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f28c82b: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f28c833: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop r8=Oop off=664}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x00007f003f28c838: jmp    0x00007f003f28c601
  0x00007f003f28c83d: call   0x00007f003f279000  ; OopMap{r8=Oop rsi=Oop off=674}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x00007f003f28c842: nop
  0x00007f003f28c843: nop
  0x00007f003f28c844: nop
  0x00007f003f28c845: nop
  0x00007f003f28c846: nop
  0x00007f003f28c847: call   0x00007f003f1c5160  ; OopMap{off=684}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x00007f003f28c84c: jmp    0x00007f003f28c750
  0x00007f003f28c851: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f28c85b: mov    eax,0xa050f00
  0x00007f003f28c860: call   0x00007f003f27c5e0  ; OopMap{off=709}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x00007f003f28c865: jmp    0x00007f003f28c760
  0x00007f003f28c86a: mov    rdx,rdx
  0x00007f003f28c86d: call   0x00007f003f2794a0  ; OopMap{off=722}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x00007f003f28c872: jmp    0x00007f003f28c76f
  0x00007f003f28c877: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f28c881: mov    eax,0xa050f00
  0x00007f003f28c886: call   0x00007f003f27c5e0  ; OopMap{off=747}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x00007f003f28c88b: jmp    0x00007f003f28c7a8
  0x00007f003f28c890: mov    rdx,rdx
  0x00007f003f28c893: call   0x00007f003f2794a0  ; OopMap{off=760}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x00007f003f28c898: jmp    0x00007f003f28c7b7
  0x00007f003f28c89d: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f28c8a7: mov    eax,0xa050f00
  0x00007f003f28c8ac: call   0x00007f003f27c5e0  ; OopMap{off=785}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x00007f003f28c8b1: jmp    0x00007f003f28c7e8
  0x00007f003f28c8b6: mov    rdx,rdx
  0x00007f003f28c8b9: call   0x00007f003f2794a0  ; OopMap{off=798}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x00007f003f28c8be: jmp    0x00007f003f28c7f7
  0x00007f003f28c8c3: nop
  0x00007f003f28c8c4: nop
  0x00007f003f28c8c5: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f28c8cc: movabs r10,0x0
  0x00007f003f28c8d6: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f28c8dd: movabs r10,0x0
  0x00007f003f28c8e7: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f28c8ee: add    rsp,0x60
  0x00007f003f28c8f2: pop    rbp
  0x00007f003f28c8f3: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f28c8f8: hlt    
  0x00007f003f28c8f9: hlt    
  0x00007f003f28c8fa: hlt    
  0x00007f003f28c8fb: hlt    
  0x00007f003f28c8fc: hlt    
  0x00007f003f28c8fd: hlt    
  0x00007f003f28c8fe: hlt    
  0x00007f003f28c8ff: hlt    
[Stub Code]
  0x00007f003f28c900: nop                       ;   {no_reloc}
  0x00007f003f28c901: nop
  0x00007f003f28c902: nop
  0x00007f003f28c903: nop
  0x00007f003f28c904: nop
  0x00007f003f28c905: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28c90f: jmp    0x00007f003f28c90f  ;   {runtime_call}
  0x00007f003f28c914: nop
  0x00007f003f28c915: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28c91f: jmp    0x00007f003f28c91f  ;   {runtime_call}
  0x00007f003f28c924: nop
  0x00007f003f28c925: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28c92f: jmp    0x00007f003f28c92f  ;   {runtime_call}
  0x00007f003f28c934: nop
  0x00007f003f28c935: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28c93f: jmp    0x00007f003f28c93f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f28c944: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f28c949: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f28c94e: sub    rsp,0x80
  0x00007f003f28c955: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f28c95a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f28c95f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f28c964: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f28c969: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f28c96e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f28c973: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f28c978: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f28c97d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f28c982: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f28c987: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f28c98c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f28c991: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f28c996: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f28c99b: mov    QWORD PTR [rsp],r15
  0x00007f003f28c99f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f28c9a9: movabs rsi,0x7f003f28c949  ;   {internal_word}
  0x00007f003f28c9b3: mov    rdx,rsp
  0x00007f003f28c9b6: and    rsp,0xfffffffffffffff0
  0x00007f003f28c9ba: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f28c9bf: hlt    
[Deopt Handler Code]
  0x00007f003f28c9c0: movabs r10,0x7f003f28c9c0  ;   {section_word}
  0x00007f003f28c9ca: push   r10
  0x00007f003f28c9cc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f28c9d1: hlt    
  0x00007f003f28c9d2: hlt    
  0x00007f003f28c9d3: hlt    
  0x00007f003f28c9d4: hlt    
  0x00007f003f28c9d5: hlt    
  0x00007f003f28c9d6: hlt    
  0x00007f003f28c9d7: hlt    
<nmethod compile_id='11' compiler='C1' level='3' entry='0x00007f003f28c5a0' size='2288' address='0x00007f003f28c3d0' relocation_offset='312' insts_offset='464' stub_offset='1328' scopes_data_offset='1552' scopes_pcs_offset='1784' dependencies_offset='2264' nul_chk_table_offset='2272' metadata_offset='1544' method='java/lang/String getChars (II[CI)V' bytes='62' count='262' iicount='262' stamp='0.071'/>
<writer thread='139639490488064'/>
<task_queued compile_id='12' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='65' count='256' iicount='256' level='3' stamp='0.071' comment='tiered' hot_count='256'/>
<task_queued compile_id='13' method='java/lang/String charAt (I)C' bytes='29' count='5632' iicount='5632' level='4' stamp='0.072' comment='tiered' hot_count='5632'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
com/github/marschall/charsequences/CharSequences.hexDigit  [0x00007f003f28ce60, 0x00007f003f28d1c8]  872 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f0038b68330} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;
  # parm0:    rsi       = char
  #           [sp+0x40]  (sp of caller)
  0x00007f003f28ce60: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f28ce67: push   rbp
  0x00007f003f28ce68: sub    rsp,0x30
  0x00007f003f28ce6c: movabs rax,0x7f0038b68788  ;   {metadata(method data for {method} {0x00007f0038b68330} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28ce76: mov    edx,DWORD PTR [rax+0xfc]
  0x00007f003f28ce7c: add    edx,0x8
  0x00007f003f28ce7f: mov    DWORD PTR [rax+0xfc],edx
  0x00007f003f28ce85: movabs rax,0x7f0038b68330  ;   {metadata({method} {0x00007f0038b68330} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28ce8f: and    edx,0x1ff8
  0x00007f003f28ce95: cmp    edx,0x0
  0x00007f003f28ce98: je     0x00007f003f28d0a6  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@0 (line 484)

  0x00007f003f28ce9e: cmp    esi,0x30
  0x00007f003f28cea1: movabs rax,0x7f0038b68788  ;   {metadata(method data for {method} {0x00007f0038b68330} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28ceab: movabs rdx,0x130
  0x00007f003f28ceb5: jl     0x00007f003f28cec5
  0x00007f003f28cebb: movabs rdx,0x140
  0x00007f003f28cec5: mov    rdi,QWORD PTR [rax+rdx*1]
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.services.JVMCIClassLoaderFactory from /home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci-services.jar]
<writer thread='139637817480960'/>
  0x00007f003f28cec9: lea    rdi,[rdi+0x1]
  0x00007f003f28cecd: mov    QWORD PTR [rax+rdx*1],rdi
  0x00007f003f28ced1: jl     0x00007f003f28cf10  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 484)

  0x00007f003f28ced7: cmp    esi,0x39
  0x00007f003f28ceda: movabs rax,0x7f0038b68788  ;   {metadata(method data for {method} {0x00007f0038b68330} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28cee4: movabs rdx,0x150
  0x00007f003f28ceee: jg     0x00007f003f28cefe
  0x00007f003f28cef4: movabs rdx,0x160
  0x00007f003f28cefe: mov    rdi,QWORD PTR [rax+rdx*1]
  0x00007f003f28cf02: lea    rdi,[rdi+0x1]
  0x00007f003f28cf06: mov    QWORD PTR [rax+rdx*1],rdi
  0x00007f003f28cf0a: jle    0x00007f003f28d01e  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 484)

  0x00007f003f28cf10: cmp    esi,0x61
  0x00007f003f28cf13: movabs rax,0x7f0038b68788  ;   {metadata(method data for {method} {0x00007f0038b68330} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28cf1d: movabs rdx,0x170
  0x00007f003f28cf27: jl     0x00007f003f28cf37
  0x00007f003f28cf2d: movabs rdx,0x180
  0x00007f003f28cf37: mov    rdi,QWORD PTR [rax+rdx*1]
  0x00007f003f28cf3b: lea    rdi,[rdi+0x1]
  0x00007f003f28cf3f: mov    QWORD PTR [rax+rdx*1],rdi
  0x00007f003f28cf43: jl     0x00007f003f28cf82  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 487)

  0x00007f003f28cf49: cmp    esi,0x66
  0x00007f003f28cf4c: movabs rax,0x7f0038b68788  ;   {metadata(method data for {method} {0x00007f0038b68330} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28cf56: movabs rdx,0x190
  0x00007f003f28cf60: jg     0x00007f003f28cf70
  0x00007f003f28cf66: movabs rdx,0x1a0
  0x00007f003f28cf70: mov    rdi,QWORD PTR [rax+rdx*1]
  0x00007f003f28cf74: lea    rdi,[rdi+0x1]
  0x00007f003f28cf78: mov    QWORD PTR [rax+rdx*1],rdi
  0x00007f003f28cf7c: jle    0x00007f003f28d009  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 487)

  0x00007f003f28cf82: cmp    esi,0x41
  0x00007f003f28cf85: movabs rax,0x7f0038b68788  ;   {metadata(method data for {method} {0x00007f0038b68330} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28cf8f: movabs rdx,0x1b0
  0x00007f003f28cf99: jl     0x00007f003f28cfa9
  0x00007f003f28cf9f: movabs rdx,0x1c0
  0x00007f003f28cfa9: mov    rdi,QWORD PTR [rax+rdx*1]
  0x00007f003f28cfad: lea    rdi,[rdi+0x1]
  0x00007f003f28cfb1: mov    QWORD PTR [rax+rdx*1],rdi
  0x00007f003f28cfb5: jl     0x00007f003f28d030  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@40 (line 490)

  0x00007f003f28cfbb: cmp    esi,0x46
  0x00007f003f28cfbe: movabs rax,0x7f0038b68788  ;   {metadata(method data for {method} {0x00007f0038b68330} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28cfc8: movabs rdx,0x1d0
  0x00007f003f28cfd2: jg     0x00007f003f28cfe2
  0x00007f003f28cfd8: movabs rdx,0x1e0
  0x00007f003f28cfe2: mov    rdi,QWORD PTR [rax+rdx*1]
  0x00007f003f28cfe6: lea    rdi,[rdi+0x1]
  0x00007f003f28cfea: mov    QWORD PTR [rax+rdx*1],rdi
  0x00007f003f28cfee: jg     0x00007f003f28d030  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@46 (line 490)

  0x00007f003f28cff4: sub    esi,0x41
  0x00007f003f28cff7: add    esi,0xa
  0x00007f003f28cffa: mov    rax,rsi
  0x00007f003f28cffd: add    rsp,0x30
  0x00007f003f28d001: pop    rbp
  0x00007f003f28d002: test   DWORD PTR [rip+0x1b1350f8],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f28d008: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@56 (line 491)

  0x00007f003f28d009: sub    esi,0x61
  0x00007f003f28d00c: add    esi,0xa
  0x00007f003f28d00f: mov    rax,rsi
  0x00007f003f28d012: add    rsp,0x30
  0x00007f003f28d016: pop    rbp
  0x00007f003f28d017: test   DWORD PTR [rip+0x1b1350e3],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f28d01d: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@36 (line 488)

  0x00007f003f28d01e: sub    esi,0x30
  0x00007f003f28d021: mov    rax,rsi
  0x00007f003f28d024: add    rsp,0x30
  0x00007f003f28d028: pop    rbp
  0x00007f003f28d029: test   DWORD PTR [rip+0x1b1350d1],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f28d02f: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@16 (line 485)

  0x00007f003f28d030: jmp    0x00007f003f28d0cc  ;   {no_reloc}
  0x00007f003f28d035: add    BYTE PTR [rax],al
  0x00007f003f28d037: add    BYTE PTR [rax],al
  0x00007f003f28d039: add    BYTE PTR [rcx-0x75],cl
  0x00007f003f28d03c: rex.RXB (bad) 
  0x00007f003f28d03e: lea    rdi,[rax+0x20]
  0x00007f003f28d042: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f28d046: ja     0x00007f003f28d0d6
  0x00007f003f28d04c: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f28d050: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f28d057: mov    QWORD PTR [rax],rcx
  0x00007f003f28d05a: mov    rcx,rdx
  0x00007f003f28d05d: shr    rcx,0x3
  0x00007f003f28d061: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f28d064: xor    rcx,rcx
  0x00007f003f28d067: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f28d06a: xor    rcx,rcx
  0x00007f003f28d06d: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f28d071: mov    QWORD PTR [rax+0x18],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@57 (line 493)

  0x00007f003f28d075: mov    rsi,rax
  0x00007f003f28d078: movabs rdi,0x7f0038b68788  ;   {metadata(method data for {method} {0x00007f0038b68330} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28d082: add    QWORD PTR [rdi+0x1f0],0x1
  0x00007f003f28d08a: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@61 (line 493)

  0x00007f003f28d08d: mov    QWORD PTR [rsp+0x20],rax
  0x00007f003f28d092: nop
  0x00007f003f28d093: nop
  0x00007f003f28d094: nop
  0x00007f003f28d095: nop
  0x00007f003f28d096: nop
  0x00007f003f28d097: call   0x00007f003f1c4d60  ; OopMap{[32]=Oop off=572}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@61 (line 493)
                                                ;   {optimized virtual_call}
  0x00007f003f28d09c: mov    rax,QWORD PTR [rsp+0x20]
  0x00007f003f28d0a1: jmp    0x00007f003f28d10b
  0x00007f003f28d0a6: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f28d0ab: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f28d0b3: call   0x00007f003f27d5e0  ; OopMap{off=600}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@-1 (line 484)
                                                ;   {runtime_call}
  0x00007f003f28d0b8: jmp    0x00007f003f28ce9e
  0x00007f003f28d0bd: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f28d0c7: mov    eax,0xa050f00
  0x00007f003f28d0cc: call   0x00007f003f27c5e0  ; OopMap{off=625}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@57 (line 493)
                                                ;   {runtime_call}
  0x00007f003f28d0d1: jmp    0x00007f003f28d030
  0x00007f003f28d0d6: mov    rdx,rdx
  0x00007f003f28d0d9: call   0x00007f003f279760  ; OopMap{off=638}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@57 (line 493)
                                                ;   {runtime_call}
  0x00007f003f28d0de: jmp    0x00007f003f28d075
  0x00007f003f28d0e0: nop
  0x00007f003f28d0e1: nop
  0x00007f003f28d0e2: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f28d0e9: movabs r10,0x0
  0x00007f003f28d0f3: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f28d0fa: movabs r10,0x0
  0x00007f003f28d104: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f28d10b: add    rsp,0x30
  0x00007f003f28d10f: pop    rbp
  0x00007f003f28d110: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f28d115: hlt    
  0x00007f003f28d116: hlt    
  0x00007f003f28d117: hlt    
  0x00007f003f28d118: hlt    
  0x00007f003f28d119: hlt    
  0x00007f003f28d11a: hlt    
  0x00007f003f28d11b: hlt    
  0x00007f003f28d11c: hlt    
  0x00007f003f28d11d: hlt    
  0x00007f003f28d11e: hlt    
  0x00007f003f28d11f: hlt    
[Stub Code]
  0x00007f003f28d120: nop                       ;   {no_reloc}
  0x00007f003f28d121: nop
  0x00007f003f28d122: nop
  0x00007f003f28d123: nop
  0x00007f003f28d124: nop
  0x00007f003f28d125: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28d12f: jmp    0x00007f003f28d12f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f28d134: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f28d139: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f28d13e: sub    rsp,0x80
  0x00007f003f28d145: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f28d14a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f28d14f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f28d154: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f28d159: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f28d15e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f28d163: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f28d168: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f28d16d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f28d172: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f28d177: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f28d17c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f28d181: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f28d186: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f28d18b: mov    QWORD PTR [rsp],r15
  0x00007f003f28d18f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f28d199: movabs rsi,0x7f003f28d139  ;   {internal_word}
  0x00007f003f28d1a3: mov    rdx,rsp
  0x00007f003f28d1a6: and    rsp,0xfffffffffffffff0
  0x00007f003f28d1aa: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f28d1af: hlt    
[Deopt Handler Code]
  0x00007f003f28d1b0: movabs r10,0x7f003f28d1b0  ;   {section_word}
  0x00007f003f28d1ba: push   r10
  0x00007f003f28d1bc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f28d1c1: hlt    
  0x00007f003f28d1c2: hlt    
  0x00007f003f28d1c3: hlt    
  0x00007f003f28d1c4: hlt    
  0x00007f003f28d1c5: hlt    
  0x00007f003f28d1c6: hlt    
  0x00007f003f28d1c7: hlt    
<nmethod compile_id='12' compiler='C1' level='3' entry='0x00007f003f28ce60' size='1688' address='0x00007f003f28ccd0' relocation_offset='312' insts_offset='400' stub_offset='1104' scopes_data_offset='1288' scopes_pcs_offset='1392' dependencies_offset='1680' oops_offset='1272' metadata_offset='1280' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='65' count='3744' iicount='3744' stamp='0.073'/>
<writer thread='139639490488064'/>
<task_queued compile_id='14' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='227' count='118' backedge_count='4096' iicount='118' level='3' stamp='0.073' comment='tiered' hot_count='118'/>
<writer thread='139637818533632'/>
[Loaded java.nio.file.Paths from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139639490488064'/>
<task_queued compile_id='15' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='65' count='5632' iicount='5632' level='4' stamp='0.073' comment='tiered' hot_count='5632'/>
<writer thread='139637818533632'/>
[Loaded java.nio.file.FileSystems from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.file.FileSystems$DefaultFileSystemHolder from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.file.FileSystems$DefaultFileSystemHolder$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139639490488064'/>
<task_queued compile_id='16' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='256' iicount='256' level='3' stamp='0.073' comment='tiered' hot_count='256'/>
<task_queued compile_id='17' method='java/util/UUID &lt;init&gt; (JJ)V' bytes='15' count='256' iicount='256' level='3' stamp='0.073' comment='tiered' hot_count='256'/>
<writer thread='139637818533632'/>
[Loaded sun.nio.fs.DefaultFileSystemProvider from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139639490488064'/>
----------------------------------------------------------------------
java/lang/System.identityHashCode  [0x00007f003f28d520, 0x00007f003f28d750]  560 bytes
[Entry Point]
  # {method} {0x00007f00387837e8} &apos;identityHashCode&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f003f28d520: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f28d524: shl    r10,0x3
  0x00007f003f28d528: cmp    rax,r10
  0x00007f003f28d52b: je     0x00007f003f28d538
  0x00007f003f28d531: jmp    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f28d536: xchg   ax,ax
[Verified Entry Point]
  0x00007f003f28d538: cmp    rsi,0x0
  0x00007f003f28d53c: jne    0x00007f003f28d546
  0x00007f003f28d542: xor    rax,rax
  0x00007f003f28d545: ret    
  0x00007f003f28d546: mov    rax,QWORD PTR [rsi]
  0x00007f003f28d549: test   rax,0x1
  0x00007f003f28d54f: je     0x00007f003f28d573
  0x00007f003f28d555: test   rax,0x4
  0x00007f003f28d55b: jne    0x00007f003f28d573
  0x00007f003f28d561: shr    rax,0x8
  0x00007f003f28d565: and    rax,0x7fffffff
  0x00007f003f28d56c: je     0x00007f003f28d573
  0x00007f003f28d572: ret    
  0x00007f003f28d573: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f28d57a: push   rbp
  0x00007f003f28d57b: mov    rbp,rsp
  0x00007f003f28d57e: sub    rsp,0x40
  0x00007f003f28d582: mov    QWORD PTR [rsp],rsi
  0x00007f003f28d586: cmp    rsi,0x0
  0x00007f003f28d58a: lea    rdx,[rsp]
  0x00007f003f28d58e: cmove  rdx,QWORD PTR [rsp]
<writer thread='139637818533632'/>
[Loaded java.nio.file.spi.FileSystemProvider from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139639490488064'/>
  0x00007f003f28d593: movabs r14,0x670b80c78    ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007f003f28d59d: mov    QWORD PTR [rsp+0x30],r14
  0x00007f003f28d5a2: lea    r14,[rsp+0x30]
  0x00007f003f28d5a7: mov    rsi,r14            ; OopMap{[0]=Oop [48]=Oop off=138}
  0x00007f003f28d5aa: movabs r10,0x7f003f28d5aa  ;   {section_word}
  0x00007f003f28d5b4: mov    QWORD PTR [r15+0x1c8],r10
  0x00007f003f28d5bb: mov    QWORD PTR [r15+0x1c0],rsp
  0x00007f003f28d5c2: cmp    BYTE PTR [rip+0x1a2c740b],0x0        # 0x00007f00595549d4
                                                ;   {external_word}
  0x00007f003f28d5c9: je     0x00007f003f28d603
  0x00007f003f28d5cf: push   rsi
  0x00007f003f28d5d0: push   rdx
  0x00007f003f28d5d1: movabs rsi,0x7f00387837e8  ;   {metadata({method} {0x00007f00387837e8} &apos;identityHashCode&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/lang/System&apos;)}
  0x00007f003f28d5db: mov    rdi,r15
  0x00007f003f28d5de: test   esp,0xf
  0x00007f003f28d5e4: je     0x00007f003f28d5fc
  0x00007f003f28d5ea: sub    rsp,0x8
  0x00007f003f28d5ee: call   0x00007f0058f49f20  ;   {runtime_call}
  0x00007f003f28d5f3: add    rsp,0x8
  0x00007f003f28d5f7: jmp    0x00007f003f28d601
  0x00007f003f28d5fc: call   0x00007f0058f49f20  ;   {runtime_call}
  0x00007f003f28d601: pop    rdx
  0x00007f003f28d602: pop    rsi
  0x00007f003f28d603: lea    rdi,[r15+0x1e0]
  0x00007f003f28d60a: mov    DWORD PTR [r15+0x258],0x4
  0x00007f003f28d615: call   0x00007f0053bd8e50  ;   {runtime_call}
  0x00007f003f28d61a: vzeroupper 
  0x00007f003f28d61d: mov    DWORD PTR [r15+0x258],0x5
  0x00007f003f28d628: mov    ecx,r15d
  0x00007f003f28d62b: shr    ecx,0x4
  0x00007f003f28d62e: and    ecx,0xffc
  0x00007f003f28d634: movabs r10,0x7f005a3c1000  ;   {external_word}
  0x00007f003f28d63e: mov    DWORD PTR [r10+rcx*1],ecx
  0x00007f003f28d642: cmp    DWORD PTR [rip+0x1a2d2370],0x0        # 0x00007f005955f9bc
                                                ;   {external_word}
  0x00007f003f28d64c: jne    0x00007f003f28d660
  0x00007f003f28d652: cmp    DWORD PTR [r15+0x30],0x0
  0x00007f003f28d65a: je     0x00007f003f28d681
  0x00007f003f28d660: mov    QWORD PTR [rbp-0x8],rax
  0x00007f003f28d664: mov    rdi,r15
  0x00007f003f28d667: mov    r12,rsp
  0x00007f003f28d66a: sub    rsp,0x0
  0x00007f003f28d66e: and    rsp,0xfffffffffffffff0
  0x00007f003f28d672: call   0x00007f0058fefce0  ;   {runtime_call}
  0x00007f003f28d677: mov    rsp,r12
  0x00007f003f28d67a: xor    r12,r12
  0x00007f003f28d67d: mov    rax,QWORD PTR [rbp-0x8]
  0x00007f003f28d681: mov    DWORD PTR [r15+0x258],0x8
  0x00007f003f28d68c: cmp    DWORD PTR [r15+0x2b0],0x1
  0x00007f003f28d697: je     0x00007f003f28d727
  0x00007f003f28d69d: cmp    BYTE PTR [rip+0x1a2c7330],0x0        # 0x00007f00595549d4
                                                ;   {external_word}
  0x00007f003f28d6a4: je     0x00007f003f28d6e2
  0x00007f003f28d6aa: mov    QWORD PTR [rbp-0x8],rax
  0x00007f003f28d6ae: movabs rsi,0x7f00387837e8  ;   {metadata({method} {0x00007f00387837e8} &apos;identityHashCode&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/lang/System&apos;)}
  0x00007f003f28d6b8: mov    rdi,r15
  0x00007f003f28d6bb: test   esp,0xf
  0x00007f003f28d6c1: je     0x00007f003f28d6d9
  0x00007f003f28d6c7: sub    rsp,0x8
  0x00007f003f28d6cb: call   0x00007f0058f49f30  ;   {runtime_call}
  0x00007f003f28d6d0: add    rsp,0x8
  0x00007f003f28d6d4: jmp    0x00007f003f28d6de
  0x00007f003f28d6d9: call   0x00007f0058f49f30  ;   {runtime_call}
  0x00007f003f28d6de: mov    rax,QWORD PTR [rbp-0x8]
  0x00007f003f28d6e2: movabs r10,0x0
  0x00007f003f28d6ec: mov    QWORD PTR [r15+0x1c0],r10
  0x00007f003f28d6f3: movabs r10,0x0
  0x00007f003f28d6fd: mov    QWORD PTR [r15+0x1c8],r10
  0x00007f003f28d704: mov    rcx,QWORD PTR [r15+0x38]
  0x00007f003f28d708: mov    DWORD PTR [rcx+0x100],0x0
  0x00007f003f28d712: leave  
  0x00007f003f28d713: cmp    QWORD PTR [r15+0x8],0x0
  0x00007f003f28d71b: jne    0x00007f003f28d722
  0x00007f003f28d721: ret    
  0x00007f003f28d722: jmp    Stub::forward exception  ;   {runtime_call}
  0x00007f003f28d727: mov    QWORD PTR [rbp-0x8],rax
  0x00007f003f28d72b: mov    r12,rsp
  0x00007f003f28d72e: sub    rsp,0x0
  0x00007f003f28d732: and    rsp,0xfffffffffffffff0
  0x00007f003f28d736: call   0x00007f0058f521e0  ;   {runtime_call}
  0x00007f003f28d73b: mov    rsp,r12
  0x00007f003f28d73e: xor    r12,r12
  0x00007f003f28d741: mov    rax,QWORD PTR [rbp-0x8]
  0x00007f003f28d745: jmp    0x00007f003f28d69d
  0x00007f003f28d74a: hlt    
  0x00007f003f28d74b: hlt    
  0x00007f003f28d74c: hlt    
  0x00007f003f28d74d: hlt    
  0x00007f003f28d74e: hlt    
  0x00007f003f28d74f: hlt    
<nmethod compile_id='18' compile_kind='c2n' level='0' entry='0x00007f003f28d520' size='960' address='0x00007f003f28d390' relocation_offset='312' consts_offset='960' insts_offset='400' method='java/lang/System identityHashCode (Ljava/lang/Object;)I' bytes='0' count='384' iicount='384' stamp='0.074'/>
<writer thread='139637818533632'/>
[Loaded sun.nio.fs.AbstractFileSystemProvider from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
com/github/marschall/charsequences/CharSequences.uuidFromCharSequence  [0x00007f003f28da60, 0x00007f003f28fa88]  8232 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/CharSequence&apos;
  #           [sp+0xc0]  (sp of caller)
  0x00007f003f28da60: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f28da67: push   rbp
  0x00007f003f28da68: sub    rsp,0xb0
  0x00007f003f28da6f: mov    QWORD PTR [rsp+0x60],rsi
  0x00007f003f28da74: movabs rdi,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28da7e: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f28da84: add    ebx,0x8
  0x00007f003f28da87: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f28da8d: movabs rdi,0x7f0038b68228  ;   {metadata({method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28da97: and    ebx,0x1ff8
  0x00007f003f28da9d: cmp    ebx,0x0
  0x00007f003f28daa0: je     0x00007f003f28f779  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@0 (line 455)

  0x00007f003f28daa6: cmp    rax,QWORD PTR [rsi]  ; implicit exception: dispatches to 0x00007f003f28f790
  0x00007f003f28daa9: mov    rdi,rsi
  0x00007f003f28daac: movabs rbx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28dab6: mov    edi,DWORD PTR [rdi+0x8]
  0x00007f003f28dab9: shl    rdi,0x3
  0x00007f003f28dabd: cmp    rdi,QWORD PTR [rbx+0x140]
  0x00007f003f28dac4: jne    0x00007f003f28dad3
  0x00007f003f28dac6: add    QWORD PTR [rbx+0x148],0x1
  0x00007f003f28dace: jmp    0x00007f003f28dc95
  0x00007f003f28dad3: cmp    rdi,QWORD PTR [rbx+0x150]
  0x00007f003f28dada: jne    0x00007f003f28dae9
  0x00007f003f28dadc: add    QWORD PTR [rbx+0x158],0x1
  0x00007f003f28dae4: jmp    0x00007f003f28dc95
  0x00007f003f28dae9: cmp    rdi,QWORD PTR [rbx+0x160]
  0x00007f003f28daf0: jne    0x00007f003f28daff
  0x00007f003f28daf2: add    QWORD PTR [rbx+0x168],0x1
  0x00007f003f28dafa: jmp    0x00007f003f28dc95
  0x00007f003f28daff: cmp    rdi,QWORD PTR [rbx+0x170]
  0x00007f003f28db06: jne    0x00007f003f28db15
  0x00007f003f28db08: add    QWORD PTR [rbx+0x178],0x1
  0x00007f003f28db10: jmp    0x00007f003f28dc95
  0x00007f003f28db15: cmp    rdi,QWORD PTR [rbx+0x180]
  0x00007f003f28db1c: jne    0x00007f003f28db2b
  0x00007f003f28db1e: add    QWORD PTR [rbx+0x188],0x1
  0x00007f003f28db26: jmp    0x00007f003f28dc95
  0x00007f003f28db2b: cmp    rdi,QWORD PTR [rbx+0x190]
  0x00007f003f28db32: jne    0x00007f003f28db41
  0x00007f003f28db34: add    QWORD PTR [rbx+0x198],0x1
  0x00007f003f28db3c: jmp    0x00007f003f28dc95
  0x00007f003f28db41: cmp    rdi,QWORD PTR [rbx+0x1a0]
  0x00007f003f28db48: jne    0x00007f003f28db57
  0x00007f003f28db4a: add    QWORD PTR [rbx+0x1a8],0x1
  0x00007f003f28db52: jmp    0x00007f003f28dc95
  0x00007f003f28db57: cmp    rdi,QWORD PTR [rbx+0x1b0]
  0x00007f003f28db5e: jne    0x00007f003f28db6d
  0x00007f003f28db60: add    QWORD PTR [rbx+0x1b8],0x1
  0x00007f003f28db68: jmp    0x00007f003f28dc95
  0x00007f003f28db6d: cmp    QWORD PTR [rbx+0x140],0x0
  0x00007f003f28db78: jne    0x00007f003f28db91
  0x00007f003f28db7a: mov    QWORD PTR [rbx+0x140],rdi
  0x00007f003f28db81: mov    QWORD PTR [rbx+0x148],0x1
  0x00007f003f28db8c: jmp    0x00007f003f28dc95
  0x00007f003f28db91: cmp    QWORD PTR [rbx+0x150],0x0
  0x00007f003f28db9c: jne    0x00007f003f28dbb5
  0x00007f003f28db9e: mov    QWORD PTR [rbx+0x150],rdi
  0x00007f003f28dba5: mov    QWORD PTR [rbx+0x158],0x1
  0x00007f003f28dbb0: jmp    0x00007f003f28dc95
  0x00007f003f28dbb5: cmp    QWORD PTR [rbx+0x160],0x0
  0x00007f003f28dbc0: jne    0x00007f003f28dbd9
  0x00007f003f28dbc2: mov    QWORD PTR [rbx+0x160],rdi
  0x00007f003f28dbc9: mov    QWORD PTR [rbx+0x168],0x1
  0x00007f003f28dbd4: jmp    0x00007f003f28dc95
  0x00007f003f28dbd9: cmp    QWORD PTR [rbx+0x170],0x0
  0x00007f003f28dbe4: jne    0x00007f003f28dbfd
  0x00007f003f28dbe6: mov    QWORD PTR [rbx+0x170],rdi
  0x00007f003f28dbed: mov    QWORD PTR [rbx+0x178],0x1
  0x00007f003f28dbf8: jmp    0x00007f003f28dc95
  0x00007f003f28dbfd: cmp    QWORD PTR [rbx+0x180],0x0
  0x00007f003f28dc08: jne    0x00007f003f28dc21
  0x00007f003f28dc0a: mov    QWORD PTR [rbx+0x180],rdi
  0x00007f003f28dc11: mov    QWORD PTR [rbx+0x188],0x1
  0x00007f003f28dc1c: jmp    0x00007f003f28dc95
  0x00007f003f28dc21: cmp    QWORD PTR [rbx+0x190],0x0
  0x00007f003f28dc2c: jne    0x00007f003f28dc45
  0x00007f003f28dc2e: mov    QWORD PTR [rbx+0x190],rdi
  0x00007f003f28dc35: mov    QWORD PTR [rbx+0x198],0x1
  0x00007f003f28dc40: jmp    0x00007f003f28dc95
  0x00007f003f28dc45: cmp    QWORD PTR [rbx+0x1a0],0x0
  0x00007f003f28dc50: jne    0x00007f003f28dc69
  0x00007f003f28dc52: mov    QWORD PTR [rbx+0x1a0],rdi
  0x00007f003f28dc59: mov    QWORD PTR [rbx+0x1a8],0x1
  0x00007f003f28dc64: jmp    0x00007f003f28dc95
  0x00007f003f28dc69: cmp    QWORD PTR [rbx+0x1b0],0x0
  0x00007f003f28dc74: jne    0x00007f003f28dc8d
  0x00007f003f28dc76: mov    QWORD PTR [rbx+0x1b0],rdi
  0x00007f003f28dc7d: mov    QWORD PTR [rbx+0x1b8],0x1
  0x00007f003f28dc88: jmp    0x00007f003f28dc95
  0x00007f003f28dc8d: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f28dc95: mov    rdi,rsi
  0x00007f003f28dc98: mov    rsi,rdi            ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)

  0x00007f003f28dc9b: nop
  0x00007f003f28dc9c: nop
  0x00007f003f28dc9d: movabs rax,0xffffffffffffffff
  0x00007f003f28dca7: call   0x00007f003f1c4f60  ; OopMap{[96]=Oop off=588}
                                                ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ;   {virtual_call}
  0x00007f003f28dcac: cmp    eax,0x24
  0x00007f003f28dcaf: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28dcb9: movabs rsi,0x1c8
  0x00007f003f28dcc3: je     0x00007f003f28dcd3
  0x00007f003f28dcc9: movabs rsi,0x1d8
  0x00007f003f28dcd3: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f28dcd7: lea    rdi,[rdi+0x1]
  0x00007f003f28dcdb: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f28dcdf: jne    0x00007f003f28f289  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@8 (line 455)

  0x00007f003f28dce5: mov    rsi,QWORD PTR [rsp+0x60]
  0x00007f003f28dcea: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28dcf4: mov    esi,DWORD PTR [rsi+0x8]
  0x00007f003f28dcf7: shl    rsi,0x3
  0x00007f003f28dcfb: cmp    rsi,QWORD PTR [rdx+0x348]
  0x00007f003f28dd02: jne    0x00007f003f28dd11
  0x00007f003f28dd04: add    QWORD PTR [rdx+0x350],0x1
  0x00007f003f28dd0c: jmp    0x00007f003f28ded3
  0x00007f003f28dd11: cmp    rsi,QWORD PTR [rdx+0x358]
  0x00007f003f28dd18: jne    0x00007f003f28dd27
  0x00007f003f28dd1a: add    QWORD PTR [rdx+0x360],0x1
  0x00007f003f28dd22: jmp    0x00007f003f28ded3
  0x00007f003f28dd27: cmp    rsi,QWORD PTR [rdx+0x368]
  0x00007f003f28dd2e: jne    0x00007f003f28dd3d
  0x00007f003f28dd30: add    QWORD PTR [rdx+0x370],0x1
  0x00007f003f28dd38: jmp    0x00007f003f28ded3
  0x00007f003f28dd3d: cmp    rsi,QWORD PTR [rdx+0x378]
  0x00007f003f28dd44: jne    0x00007f003f28dd53
  0x00007f003f28dd46: add    QWORD PTR [rdx+0x380],0x1
  0x00007f003f28dd4e: jmp    0x00007f003f28ded3
  0x00007f003f28dd53: cmp    rsi,QWORD PTR [rdx+0x388]
  0x00007f003f28dd5a: jne    0x00007f003f28dd69
  0x00007f003f28dd5c: add    QWORD PTR [rdx+0x390],0x1
  0x00007f003f28dd64: jmp    0x00007f003f28ded3
  0x00007f003f28dd69: cmp    rsi,QWORD PTR [rdx+0x398]
  0x00007f003f28dd70: jne    0x00007f003f28dd7f
  0x00007f003f28dd72: add    QWORD PTR [rdx+0x3a0],0x1
  0x00007f003f28dd7a: jmp    0x00007f003f28ded3
  0x00007f003f28dd7f: cmp    rsi,QWORD PTR [rdx+0x3a8]
  0x00007f003f28dd86: jne    0x00007f003f28dd95
  0x00007f003f28dd88: add    QWORD PTR [rdx+0x3b0],0x1
  0x00007f003f28dd90: jmp    0x00007f003f28ded3
  0x00007f003f28dd95: cmp    rsi,QWORD PTR [rdx+0x3b8]
  0x00007f003f28dd9c: jne    0x00007f003f28ddab
  0x00007f003f28dd9e: add    QWORD PTR [rdx+0x3c0],0x1
  0x00007f003f28dda6: jmp    0x00007f003f28ded3
  0x00007f003f28ddab: cmp    QWORD PTR [rdx+0x348],0x0
  0x00007f003f28ddb6: jne    0x00007f003f28ddcf
  0x00007f003f28ddb8: mov    QWORD PTR [rdx+0x348],rsi
  0x00007f003f28ddbf: mov    QWORD PTR [rdx+0x350],0x1
  0x00007f003f28ddca: jmp    0x00007f003f28ded3
  0x00007f003f28ddcf: cmp    QWORD PTR [rdx+0x358],0x0
  0x00007f003f28ddda: jne    0x00007f003f28ddf3
  0x00007f003f28dddc: mov    QWORD PTR [rdx+0x358],rsi
  0x00007f003f28dde3: mov    QWORD PTR [rdx+0x360],0x1
  0x00007f003f28ddee: jmp    0x00007f003f28ded3
  0x00007f003f28ddf3: cmp    QWORD PTR [rdx+0x368],0x0
  0x00007f003f28ddfe: jne    0x00007f003f28de17
  0x00007f003f28de00: mov    QWORD PTR [rdx+0x368],rsi
  0x00007f003f28de07: mov    QWORD PTR [rdx+0x370],0x1
  0x00007f003f28de12: jmp    0x00007f003f28ded3
  0x00007f003f28de17: cmp    QWORD PTR [rdx+0x378],0x0
  0x00007f003f28de22: jne    0x00007f003f28de3b
  0x00007f003f28de24: mov    QWORD PTR [rdx+0x378],rsi
  0x00007f003f28de2b: mov    QWORD PTR [rdx+0x380],0x1
  0x00007f003f28de36: jmp    0x00007f003f28ded3
  0x00007f003f28de3b: cmp    QWORD PTR [rdx+0x388],0x0
  0x00007f003f28de46: jne    0x00007f003f28de5f
  0x00007f003f28de48: mov    QWORD PTR [rdx+0x388],rsi
  0x00007f003f28de4f: mov    QWORD PTR [rdx+0x390],0x1
  0x00007f003f28de5a: jmp    0x00007f003f28ded3
  0x00007f003f28de5f: cmp    QWORD PTR [rdx+0x398],0x0
  0x00007f003f28de6a: jne    0x00007f003f28de83
  0x00007f003f28de6c: mov    QWORD PTR [rdx+0x398],rsi
  0x00007f003f28de73: mov    QWORD PTR [rdx+0x3a0],0x1
  0x00007f003f28de7e: jmp    0x00007f003f28ded3
  0x00007f003f28de83: cmp    QWORD PTR [rdx+0x3a8],0x0
  0x00007f003f28de8e: jne    0x00007f003f28dea7
  0x00007f003f28de90: mov    QWORD PTR [rdx+0x3a8],rsi
  0x00007f003f28de97: mov    QWORD PTR [rdx+0x3b0],0x1
  0x00007f003f28dea2: jmp    0x00007f003f28ded3
  0x00007f003f28dea7: cmp    QWORD PTR [rdx+0x3b8],0x0
  0x00007f003f28deb2: jne    0x00007f003f28decb
  0x00007f003f28deb4: mov    QWORD PTR [rdx+0x3b8],rsi
  0x00007f003f28debb: mov    QWORD PTR [rdx+0x3c0],0x1
  0x00007f003f28dec6: jmp    0x00007f003f28ded3
  0x00007f003f28decb: add    QWORD PTR [rdx+0x338],0x1
  0x00007f003f28ded3: mov    edx,0x8
  0x00007f003f28ded8: mov    rsi,QWORD PTR [rsp+0x60]  ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@38 (line 458)

  0x00007f003f28dedd: movabs rax,0xffffffffffffffff
  0x00007f003f28dee7: call   0x00007f003f1c4f60  ; OopMap{[96]=Oop off=1164}
                                                ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@38 (line 458)
                                                ;   {virtual_call}
  0x00007f003f28deec: cmp    eax,0x2d
  0x00007f003f28deef: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28def9: movabs rsi,0x3d0
  0x00007f003f28df03: jne    0x00007f003f28df13
  0x00007f003f28df09: movabs rsi,0x3e0
  0x00007f003f28df13: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f28df17: lea    rdi,[rdi+0x1]
  0x00007f003f28df1b: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f28df1f: jne    0x00007f003f28ed99  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@45 (line 458)

  0x00007f003f28df25: mov    rsi,QWORD PTR [rsp+0x60]
  0x00007f003f28df2a: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28df34: mov    esi,DWORD PTR [rsi+0x8]
  0x00007f003f28df37: shl    rsi,0x3
  0x00007f003f28df3b: cmp    rsi,QWORD PTR [rdx+0x400]
  0x00007f003f28df42: jne    0x00007f003f28df51
  0x00007f003f28df44: add    QWORD PTR [rdx+0x408],0x1
  0x00007f003f28df4c: jmp    0x00007f003f28e113
  0x00007f003f28df51: cmp    rsi,QWORD PTR [rdx+0x410]
  0x00007f003f28df58: jne    0x00007f003f28df67
  0x00007f003f28df5a: add    QWORD PTR [rdx+0x418],0x1
  0x00007f003f28df62: jmp    0x00007f003f28e113
  0x00007f003f28df67: cmp    rsi,QWORD PTR [rdx+0x420]
  0x00007f003f28df6e: jne    0x00007f003f28df7d
  0x00007f003f28df70: add    QWORD PTR [rdx+0x428],0x1
  0x00007f003f28df78: jmp    0x00007f003f28e113
  0x00007f003f28df7d: cmp    rsi,QWORD PTR [rdx+0x430]
  0x00007f003f28df84: jne    0x00007f003f28df93
  0x00007f003f28df86: add    QWORD PTR [rdx+0x438],0x1
  0x00007f003f28df8e: jmp    0x00007f003f28e113
  0x00007f003f28df93: cmp    rsi,QWORD PTR [rdx+0x440]
  0x00007f003f28df9a: jne    0x00007f003f28dfa9
  0x00007f003f28df9c: add    QWORD PTR [rdx+0x448],0x1
  0x00007f003f28dfa4: jmp    0x00007f003f28e113
  0x00007f003f28dfa9: cmp    rsi,QWORD PTR [rdx+0x450]
  0x00007f003f28dfb0: jne    0x00007f003f28dfbf
  0x00007f003f28dfb2: add    QWORD PTR [rdx+0x458],0x1
  0x00007f003f28dfba: jmp    0x00007f003f28e113
  0x00007f003f28dfbf: cmp    rsi,QWORD PTR [rdx+0x460]
  0x00007f003f28dfc6: jne    0x00007f003f28dfd5
  0x00007f003f28dfc8: add    QWORD PTR [rdx+0x468],0x1
  0x00007f003f28dfd0: jmp    0x00007f003f28e113
  0x00007f003f28dfd5: cmp    rsi,QWORD PTR [rdx+0x470]
  0x00007f003f28dfdc: jne    0x00007f003f28dfeb
  0x00007f003f28dfde: add    QWORD PTR [rdx+0x478],0x1
  0x00007f003f28dfe6: jmp    0x00007f003f28e113
  0x00007f003f28dfeb: cmp    QWORD PTR [rdx+0x400],0x0
  0x00007f003f28dff6: jne    0x00007f003f28e00f
  0x00007f003f28dff8: mov    QWORD PTR [rdx+0x400],rsi
  0x00007f003f28dfff: mov    QWORD PTR [rdx+0x408],0x1
  0x00007f003f28e00a: jmp    0x00007f003f28e113
  0x00007f003f28e00f: cmp    QWORD PTR [rdx+0x410],0x0
  0x00007f003f28e01a: jne    0x00007f003f28e033
  0x00007f003f28e01c: mov    QWORD PTR [rdx+0x410],rsi
  0x00007f003f28e023: mov    QWORD PTR [rdx+0x418],0x1
  0x00007f003f28e02e: jmp    0x00007f003f28e113
  0x00007f003f28e033: cmp    QWORD PTR [rdx+0x420],0x0
  0x00007f003f28e03e: jne    0x00007f003f28e057
  0x00007f003f28e040: mov    QWORD PTR [rdx+0x420],rsi
  0x00007f003f28e047: mov    QWORD PTR [rdx+0x428],0x1
  0x00007f003f28e052: jmp    0x00007f003f28e113
  0x00007f003f28e057: cmp    QWORD PTR [rdx+0x430],0x0
  0x00007f003f28e062: jne    0x00007f003f28e07b
  0x00007f003f28e064: mov    QWORD PTR [rdx+0x430],rsi
  0x00007f003f28e06b: mov    QWORD PTR [rdx+0x438],0x1
  0x00007f003f28e076: jmp    0x00007f003f28e113
  0x00007f003f28e07b: cmp    QWORD PTR [rdx+0x440],0x0
  0x00007f003f28e086: jne    0x00007f003f28e09f
  0x00007f003f28e088: mov    QWORD PTR [rdx+0x440],rsi
  0x00007f003f28e08f: mov    QWORD PTR [rdx+0x448],0x1
  0x00007f003f28e09a: jmp    0x00007f003f28e113
  0x00007f003f28e09f: cmp    QWORD PTR [rdx+0x450],0x0
  0x00007f003f28e0aa: jne    0x00007f003f28e0c3
  0x00007f003f28e0ac: mov    QWORD PTR [rdx+0x450],rsi
  0x00007f003f28e0b3: mov    QWORD PTR [rdx+0x458],0x1
  0x00007f003f28e0be: jmp    0x00007f003f28e113
  0x00007f003f28e0c3: cmp    QWORD PTR [rdx+0x460],0x0
  0x00007f003f28e0ce: jne    0x00007f003f28e0e7
  0x00007f003f28e0d0: mov    QWORD PTR [rdx+0x460],rsi
  0x00007f003f28e0d7: mov    QWORD PTR [rdx+0x468],0x1
  0x00007f003f28e0e2: jmp    0x00007f003f28e113
  0x00007f003f28e0e7: cmp    QWORD PTR [rdx+0x470],0x0
  0x00007f003f28e0f2: jne    0x00007f003f28e10b
  0x00007f003f28e0f4: mov    QWORD PTR [rdx+0x470],rsi
  0x00007f003f28e0fb: mov    QWORD PTR [rdx+0x478],0x1
  0x00007f003f28e106: jmp    0x00007f003f28e113
  0x00007f003f28e10b: add    QWORD PTR [rdx+0x3f0],0x1
  0x00007f003f28e113: mov    edx,0xd
  0x00007f003f28e118: mov    rsi,QWORD PTR [rsp+0x60]  ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@51 (line 458)

  0x00007f003f28e11d: movabs rax,0xffffffffffffffff
  0x00007f003f28e127: call   0x00007f003f1c4f60  ; OopMap{[96]=Oop off=1740}
                                                ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@51 (line 458)
                                                ;   {virtual_call}
  0x00007f003f28e12c: cmp    eax,0x2d
  0x00007f003f28e12f: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28e139: movabs rsi,0x488
  0x00007f003f28e143: jne    0x00007f003f28e153
  0x00007f003f28e149: movabs rsi,0x498
  0x00007f003f28e153: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f28e157: lea    rdi,[rdi+0x1]
  0x00007f003f28e15b: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f28e15f: jne    0x00007f003f28ed99  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@58 (line 458)

  0x00007f003f28e165: mov    rsi,QWORD PTR [rsp+0x60]
  0x00007f003f28e16a: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28e174: mov    esi,DWORD PTR [rsi+0x8]
  0x00007f003f28e177: shl    rsi,0x3
  0x00007f003f28e17b: cmp    rsi,QWORD PTR [rdx+0x4b8]
  0x00007f003f28e182: jne    0x00007f003f28e191
  0x00007f003f28e184: add    QWORD PTR [rdx+0x4c0],0x1
  0x00007f003f28e18c: jmp    0x00007f003f28e353
  0x00007f003f28e191: cmp    rsi,QWORD PTR [rdx+0x4c8]
  0x00007f003f28e198: jne    0x00007f003f28e1a7
  0x00007f003f28e19a: add    QWORD PTR [rdx+0x4d0],0x1
  0x00007f003f28e1a2: jmp    0x00007f003f28e353
  0x00007f003f28e1a7: cmp    rsi,QWORD PTR [rdx+0x4d8]
  0x00007f003f28e1ae: jne    0x00007f003f28e1bd
  0x00007f003f28e1b0: add    QWORD PTR [rdx+0x4e0],0x1
  0x00007f003f28e1b8: jmp    0x00007f003f28e353
  0x00007f003f28e1bd: cmp    rsi,QWORD PTR [rdx+0x4e8]
  0x00007f003f28e1c4: jne    0x00007f003f28e1d3
  0x00007f003f28e1c6: add    QWORD PTR [rdx+0x4f0],0x1
  0x00007f003f28e1ce: jmp    0x00007f003f28e353
  0x00007f003f28e1d3: cmp    rsi,QWORD PTR [rdx+0x4f8]
  0x00007f003f28e1da: jne    0x00007f003f28e1e9
  0x00007f003f28e1dc: add    QWORD PTR [rdx+0x500],0x1
  0x00007f003f28e1e4: jmp    0x00007f003f28e353
  0x00007f003f28e1e9: cmp    rsi,QWORD PTR [rdx+0x508]
  0x00007f003f28e1f0: jne    0x00007f003f28e1ff
  0x00007f003f28e1f2: add    QWORD PTR [rdx+0x510],0x1
  0x00007f003f28e1fa: jmp    0x00007f003f28e353
  0x00007f003f28e1ff: cmp    rsi,QWORD PTR [rdx+0x518]
  0x00007f003f28e206: jne    0x00007f003f28e215
  0x00007f003f28e208: add    QWORD PTR [rdx+0x520],0x1
  0x00007f003f28e210: jmp    0x00007f003f28e353
  0x00007f003f28e215: cmp    rsi,QWORD PTR [rdx+0x528]
  0x00007f003f28e21c: jne    0x00007f003f28e22b
  0x00007f003f28e21e: add    QWORD PTR [rdx+0x530],0x1
  0x00007f003f28e226: jmp    0x00007f003f28e353
  0x00007f003f28e22b: cmp    QWORD PTR [rdx+0x4b8],0x0
  0x00007f003f28e236: jne    0x00007f003f28e24f
  0x00007f003f28e238: mov    QWORD PTR [rdx+0x4b8],rsi
  0x00007f003f28e23f: mov    QWORD PTR [rdx+0x4c0],0x1
  0x00007f003f28e24a: jmp    0x00007f003f28e353
  0x00007f003f28e24f: cmp    QWORD PTR [rdx+0x4c8],0x0
  0x00007f003f28e25a: jne    0x00007f003f28e273
  0x00007f003f28e25c: mov    QWORD PTR [rdx+0x4c8],rsi
  0x00007f003f28e263: mov    QWORD PTR [rdx+0x4d0],0x1
  0x00007f003f28e26e: jmp    0x00007f003f28e353
  0x00007f003f28e273: cmp    QWORD PTR [rdx+0x4d8],0x0
  0x00007f003f28e27e: jne    0x00007f003f28e297
  0x00007f003f28e280: mov    QWORD PTR [rdx+0x4d8],rsi
  0x00007f003f28e287: mov    QWORD PTR [rdx+0x4e0],0x1
  0x00007f003f28e292: jmp    0x00007f003f28e353
  0x00007f003f28e297: cmp    QWORD PTR [rdx+0x4e8],0x0
  0x00007f003f28e2a2: jne    0x00007f003f28e2bb
  0x00007f003f28e2a4: mov    QWORD PTR [rdx+0x4e8],rsi
  0x00007f003f28e2ab: mov    QWORD PTR [rdx+0x4f0],0x1
  0x00007f003f28e2b6: jmp    0x00007f003f28e353
  0x00007f003f28e2bb: cmp    QWORD PTR [rdx+0x4f8],0x0
  0x00007f003f28e2c6: jne    0x00007f003f28e2df
  0x00007f003f28e2c8: mov    QWORD PTR [rdx+0x4f8],rsi
  0x00007f003f28e2cf: mov    QWORD PTR [rdx+0x500],0x1
  0x00007f003f28e2da: jmp    0x00007f003f28e353
  0x00007f003f28e2df: cmp    QWORD PTR [rdx+0x508],0x0
  0x00007f003f28e2ea: jne    0x00007f003f28e303
  0x00007f003f28e2ec: mov    QWORD PTR [rdx+0x508],rsi
  0x00007f003f28e2f3: mov    QWORD PTR [rdx+0x510],0x1
  0x00007f003f28e2fe: jmp    0x00007f003f28e353
  0x00007f003f28e303: cmp    QWORD PTR [rdx+0x518],0x0
  0x00007f003f28e30e: jne    0x00007f003f28e327
  0x00007f003f28e310: mov    QWORD PTR [rdx+0x518],rsi
  0x00007f003f28e317: mov    QWORD PTR [rdx+0x520],0x1
  0x00007f003f28e322: jmp    0x00007f003f28e353
  0x00007f003f28e327: cmp    QWORD PTR [rdx+0x528],0x0
  0x00007f003f28e332: jne    0x00007f003f28e34b
  0x00007f003f28e334: mov    QWORD PTR [rdx+0x528],rsi
  0x00007f003f28e33b: mov    QWORD PTR [rdx+0x530],0x1
  0x00007f003f28e346: jmp    0x00007f003f28e353
  0x00007f003f28e34b: add    QWORD PTR [rdx+0x4a8],0x1
  0x00007f003f28e353: mov    edx,0x12
  0x00007f003f28e358: mov    rsi,QWORD PTR [rsp+0x60]  ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@64 (line 458)

  0x00007f003f28e35d: movabs rax,0xffffffffffffffff
  0x00007f003f28e367: call   0x00007f003f1c4f60  ; OopMap{[96]=Oop off=2316}
                                                ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@64 (line 458)
                                                ;   {virtual_call}
  0x00007f003f28e36c: cmp    eax,0x2d
  0x00007f003f28e36f: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28e379: movabs rsi,0x540
  0x00007f003f28e383: jne    0x00007f003f28e393
  0x00007f003f28e389: movabs rsi,0x550
  0x00007f003f28e393: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f28e397: lea    rdi,[rdi+0x1]
  0x00007f003f28e39b: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f28e39f: jne    0x00007f003f28ed99  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@71 (line 458)

  0x00007f003f28e3a5: mov    rsi,QWORD PTR [rsp+0x60]
  0x00007f003f28e3aa: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28e3b4: mov    esi,DWORD PTR [rsi+0x8]
  0x00007f003f28e3b7: shl    rsi,0x3
  0x00007f003f28e3bb: cmp    rsi,QWORD PTR [rdx+0x570]
  0x00007f003f28e3c2: jne    0x00007f003f28e3d1
  0x00007f003f28e3c4: add    QWORD PTR [rdx+0x578],0x1
  0x00007f003f28e3cc: jmp    0x00007f003f28e593
  0x00007f003f28e3d1: cmp    rsi,QWORD PTR [rdx+0x580]
  0x00007f003f28e3d8: jne    0x00007f003f28e3e7
  0x00007f003f28e3da: add    QWORD PTR [rdx+0x588],0x1
  0x00007f003f28e3e2: jmp    0x00007f003f28e593
  0x00007f003f28e3e7: cmp    rsi,QWORD PTR [rdx+0x590]
  0x00007f003f28e3ee: jne    0x00007f003f28e3fd
  0x00007f003f28e3f0: add    QWORD PTR [rdx+0x598],0x1
  0x00007f003f28e3f8: jmp    0x00007f003f28e593
  0x00007f003f28e3fd: cmp    rsi,QWORD PTR [rdx+0x5a0]
  0x00007f003f28e404: jne    0x00007f003f28e413
  0x00007f003f28e406: add    QWORD PTR [rdx+0x5a8],0x1
  0x00007f003f28e40e: jmp    0x00007f003f28e593
  0x00007f003f28e413: cmp    rsi,QWORD PTR [rdx+0x5b0]
  0x00007f003f28e41a: jne    0x00007f003f28e429
  0x00007f003f28e41c: add    QWORD PTR [rdx+0x5b8],0x1
  0x00007f003f28e424: jmp    0x00007f003f28e593
  0x00007f003f28e429: cmp    rsi,QWORD PTR [rdx+0x5c0]
  0x00007f003f28e430: jne    0x00007f003f28e43f
  0x00007f003f28e432: add    QWORD PTR [rdx+0x5c8],0x1
  0x00007f003f28e43a: jmp    0x00007f003f28e593
  0x00007f003f28e43f: cmp    rsi,QWORD PTR [rdx+0x5d0]
  0x00007f003f28e446: jne    0x00007f003f28e455
  0x00007f003f28e448: add    QWORD PTR [rdx+0x5d8],0x1
  0x00007f003f28e450: jmp    0x00007f003f28e593
  0x00007f003f28e455: cmp    rsi,QWORD PTR [rdx+0x5e0]
  0x00007f003f28e45c: jne    0x00007f003f28e46b
  0x00007f003f28e45e: add    QWORD PTR [rdx+0x5e8],0x1
  0x00007f003f28e466: jmp    0x00007f003f28e593
  0x00007f003f28e46b: cmp    QWORD PTR [rdx+0x570],0x0
  0x00007f003f28e476: jne    0x00007f003f28e48f
  0x00007f003f28e478: mov    QWORD PTR [rdx+0x570],rsi
  0x00007f003f28e47f: mov    QWORD PTR [rdx+0x578],0x1
  0x00007f003f28e48a: jmp    0x00007f003f28e593
  0x00007f003f28e48f: cmp    QWORD PTR [rdx+0x580],0x0
  0x00007f003f28e49a: jne    0x00007f003f28e4b3
  0x00007f003f28e49c: mov    QWORD PTR [rdx+0x580],rsi
  0x00007f003f28e4a3: mov    QWORD PTR [rdx+0x588],0x1
  0x00007f003f28e4ae: jmp    0x00007f003f28e593
  0x00007f003f28e4b3: cmp    QWORD PTR [rdx+0x590],0x0
  0x00007f003f28e4be: jne    0x00007f003f28e4d7
  0x00007f003f28e4c0: mov    QWORD PTR [rdx+0x590],rsi
  0x00007f003f28e4c7: mov    QWORD PTR [rdx+0x598],0x1
  0x00007f003f28e4d2: jmp    0x00007f003f28e593
  0x00007f003f28e4d7: cmp    QWORD PTR [rdx+0x5a0],0x0
  0x00007f003f28e4e2: jne    0x00007f003f28e4fb
  0x00007f003f28e4e4: mov    QWORD PTR [rdx+0x5a0],rsi
  0x00007f003f28e4eb: mov    QWORD PTR [rdx+0x5a8],0x1
  0x00007f003f28e4f6: jmp    0x00007f003f28e593
  0x00007f003f28e4fb: cmp    QWORD PTR [rdx+0x5b0],0x0
  0x00007f003f28e506: jne    0x00007f003f28e51f
  0x00007f003f28e508: mov    QWORD PTR [rdx+0x5b0],rsi
  0x00007f003f28e50f: mov    QWORD PTR [rdx+0x5b8],0x1
  0x00007f003f28e51a: jmp    0x00007f003f28e593
  0x00007f003f28e51f: cmp    QWORD PTR [rdx+0x5c0],0x0
  0x00007f003f28e52a: jne    0x00007f003f28e543
  0x00007f003f28e52c: mov    QWORD PTR [rdx+0x5c0],rsi
  0x00007f003f28e533: mov    QWORD PTR [rdx+0x5c8],0x1
  0x00007f003f28e53e: jmp    0x00007f003f28e593
  0x00007f003f28e543: cmp    QWORD PTR [rdx+0x5d0],0x0
  0x00007f003f28e54e: jne    0x00007f003f28e567
  0x00007f003f28e550: mov    QWORD PTR [rdx+0x5d0],rsi
  0x00007f003f28e557: mov    QWORD PTR [rdx+0x5d8],0x1
  0x00007f003f28e562: jmp    0x00007f003f28e593
  0x00007f003f28e567: cmp    QWORD PTR [rdx+0x5e0],0x0
  0x00007f003f28e572: jne    0x00007f003f28e58b
  0x00007f003f28e574: mov    QWORD PTR [rdx+0x5e0],rsi
  0x00007f003f28e57b: mov    QWORD PTR [rdx+0x5e8],0x1
  0x00007f003f28e586: jmp    0x00007f003f28e593
  0x00007f003f28e58b: add    QWORD PTR [rdx+0x560],0x1
  0x00007f003f28e593: mov    edx,0x17
  0x00007f003f28e598: mov    rsi,QWORD PTR [rsp+0x60]  ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@77 (line 458)

  0x00007f003f28e59d: movabs rax,0xffffffffffffffff
  0x00007f003f28e5a7: call   0x00007f003f1c4f60  ; OopMap{[96]=Oop off=2892}
                                                ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@77 (line 458)
                                                ;   {virtual_call}
  0x00007f003f28e5ac: cmp    eax,0x2d
  0x00007f003f28e5af: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28e5b9: movabs rsi,0x5f8
  0x00007f003f28e5c3: je     0x00007f003f28e5d3
  0x00007f003f28e5c9: movabs rsi,0x608
  0x00007f003f28e5d3: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f28e5d7: lea    rdi,[rdi+0x1]
  0x00007f003f28e5db: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f28e5df: jne    0x00007f003f28ed99  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@84 (line 458)

  0x00007f003f28e5e5: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28e5ef: inc    DWORD PTR [rdx+0x768]
  0x00007f003f28e5f5: mov    edi,0x0
  0x00007f003f28e5fa: movabs rbx,0x0            ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@118 (line 464)

  0x00007f003f28e604: nop    DWORD PTR [rax+0x0]
  0x00007f003f28e608: mov    rsi,QWORD PTR [rsp+0x60]
  0x00007f003f28e60d: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28e617: mov    eax,DWORD PTR [rdx+0x100]
  0x00007f003f28e61d: add    eax,0x8
  0x00007f003f28e620: mov    DWORD PTR [rdx+0x100],eax
  0x00007f003f28e626: movabs rdx,0x7f0038b68228  ;   {metadata({method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28e630: and    eax,0xfff8
  0x00007f003f28e636: cmp    eax,0x0
  0x00007f003f28e639: je     0x00007f003f28f795  ; OopMap{rsi=Oop [96]=Oop off=3039}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@166 (line 464)

  0x00007f003f28e63f: test   DWORD PTR [rip+0x1b133abb],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f28e645: cmp    edi,0x12
  0x00007f003f28e648: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28e652: movabs rax,0x880
  0x00007f003f28e65c: jl     0x00007f003f28e66c
  0x00007f003f28e662: movabs rax,0x890
  0x00007f003f28e66c: mov    rcx,QWORD PTR [rdx+rax*1]
  0x00007f003f28e670: lea    rcx,[rcx+0x1]
  0x00007f003f28e674: mov    QWORD PTR [rdx+rax*1],rcx
  0x00007f003f28e678: jge    0x00007f003f28e962  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@166 (line 464)

  0x00007f003f28e67e: cmp    edi,0x8
  0x00007f003f28e681: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28e68b: movabs rax,0x780
  0x00007f003f28e695: je     0x00007f003f28e6a5
  0x00007f003f28e69b: movabs rax,0x790
  0x00007f003f28e6a5: mov    rcx,QWORD PTR [rdx+rax*1]
  0x00007f003f28e6a9: lea    rcx,[rcx+0x1]
  0x00007f003f28e6ad: mov    QWORD PTR [rdx+rax*1],rcx
  0x00007f003f28e6b1: jne    0x00007f003f28e6c0  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@125 (line 465)

  0x00007f003f28e6b7: mov    DWORD PTR [rsp+0x70],edi
  0x00007f003f28e6bb: jmp    0x00007f003f28e957  ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@159 (line 464)

  0x00007f003f28e6c0: cmp    edi,0xd
  0x00007f003f28e6c3: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28e6cd: movabs rax,0x7a0
  0x00007f003f28e6d7: jne    0x00007f003f28e6e7
  0x00007f003f28e6dd: movabs rax,0x7b0
  0x00007f003f28e6e7: mov    rcx,QWORD PTR [rdx+rax*1]
  0x00007f003f28e6eb: lea    rcx,[rcx+0x1]
  0x00007f003f28e6ef: mov    QWORD PTR [rdx+rax*1],rcx
  0x00007f003f28e6f3: jne    0x00007f003f28e712  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@132 (line 465)

  0x00007f003f28e6f9: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28e703: inc    DWORD PTR [rdx+0x7c0]
  0x00007f003f28e709: mov    DWORD PTR [rsp+0x70],edi
  0x00007f003f28e70d: jmp    0x00007f003f28e957  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@135 (line 466)

  0x00007f003f28e712: mov    QWORD PTR [rsp+0x68],rbx
  0x00007f003f28e717: mov    rdx,rsi
  0x00007f003f28e71a: movabs rax,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28e724: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f28e727: shl    rdx,0x3
  0x00007f003f28e72b: cmp    rdx,QWORD PTR [rax+0x7e8]
  0x00007f003f28e732: jne    0x00007f003f28e741
  0x00007f003f28e734: add    QWORD PTR [rax+0x7f0],0x1
  0x00007f003f28e73c: jmp    0x00007f003f28e903
  0x00007f003f28e741: cmp    rdx,QWORD PTR [rax+0x7f8]
  0x00007f003f28e748: jne    0x00007f003f28e757
  0x00007f003f28e74a: add    QWORD PTR [rax+0x800],0x1
  0x00007f003f28e752: jmp    0x00007f003f28e903
  0x00007f003f28e757: cmp    rdx,QWORD PTR [rax+0x808]
  0x00007f003f28e75e: jne    0x00007f003f28e76d
  0x00007f003f28e760: add    QWORD PTR [rax+0x810],0x1
  0x00007f003f28e768: jmp    0x00007f003f28e903
  0x00007f003f28e76d: cmp    rdx,QWORD PTR [rax+0x818]
  0x00007f003f28e774: jne    0x00007f003f28e783
  0x00007f003f28e776: add    QWORD PTR [rax+0x820],0x1
  0x00007f003f28e77e: jmp    0x00007f003f28e903
  0x00007f003f28e783: cmp    rdx,QWORD PTR [rax+0x828]
  0x00007f003f28e78a: jne    0x00007f003f28e799
  0x00007f003f28e78c: add    QWORD PTR [rax+0x830],0x1
  0x00007f003f28e794: jmp    0x00007f003f28e903
  0x00007f003f28e799: cmp    rdx,QWORD PTR [rax+0x838]
  0x00007f003f28e7a0: jne    0x00007f003f28e7af
  0x00007f003f28e7a2: add    QWORD PTR [rax+0x840],0x1
  0x00007f003f28e7aa: jmp    0x00007f003f28e903
  0x00007f003f28e7af: cmp    rdx,QWORD PTR [rax+0x848]
  0x00007f003f28e7b6: jne    0x00007f003f28e7c5
  0x00007f003f28e7b8: add    QWORD PTR [rax+0x850],0x1
  0x00007f003f28e7c0: jmp    0x00007f003f28e903
  0x00007f003f28e7c5: cmp    rdx,QWORD PTR [rax+0x858]
  0x00007f003f28e7cc: jne    0x00007f003f28e7db
  0x00007f003f28e7ce: add    QWORD PTR [rax+0x860],0x1
  0x00007f003f28e7d6: jmp    0x00007f003f28e903
  0x00007f003f28e7db: cmp    QWORD PTR [rax+0x7e8],0x0
  0x00007f003f28e7e6: jne    0x00007f003f28e7ff
  0x00007f003f28e7e8: mov    QWORD PTR [rax+0x7e8],rdx
  0x00007f003f28e7ef: mov    QWORD PTR [rax+0x7f0],0x1
  0x00007f003f28e7fa: jmp    0x00007f003f28e903
  0x00007f003f28e7ff: cmp    QWORD PTR [rax+0x7f8],0x0
  0x00007f003f28e80a: jne    0x00007f003f28e823
  0x00007f003f28e80c: mov    QWORD PTR [rax+0x7f8],rdx
  0x00007f003f28e813: mov    QWORD PTR [rax+0x800],0x1
  0x00007f003f28e81e: jmp    0x00007f003f28e903
  0x00007f003f28e823: cmp    QWORD PTR [rax+0x808],0x0
  0x00007f003f28e82e: jne    0x00007f003f28e847
  0x00007f003f28e830: mov    QWORD PTR [rax+0x808],rdx
  0x00007f003f28e837: mov    QWORD PTR [rax+0x810],0x1
  0x00007f003f28e842: jmp    0x00007f003f28e903
  0x00007f003f28e847: cmp    QWORD PTR [rax+0x818],0x0
  0x00007f003f28e852: jne    0x00007f003f28e86b
  0x00007f003f28e854: mov    QWORD PTR [rax+0x818],rdx
  0x00007f003f28e85b: mov    QWORD PTR [rax+0x820],0x1
  0x00007f003f28e866: jmp    0x00007f003f28e903
  0x00007f003f28e86b: cmp    QWORD PTR [rax+0x828],0x0
  0x00007f003f28e876: jne    0x00007f003f28e88f
  0x00007f003f28e878: mov    QWORD PTR [rax+0x828],rdx
  0x00007f003f28e87f: mov    QWORD PTR [rax+0x830],0x1
  0x00007f003f28e88a: jmp    0x00007f003f28e903
  0x00007f003f28e88f: cmp    QWORD PTR [rax+0x838],0x0
  0x00007f003f28e89a: jne    0x00007f003f28e8b3
  0x00007f003f28e89c: mov    QWORD PTR [rax+0x838],rdx
  0x00007f003f28e8a3: mov    QWORD PTR [rax+0x840],0x1
  0x00007f003f28e8ae: jmp    0x00007f003f28e903
  0x00007f003f28e8b3: cmp    QWORD PTR [rax+0x848],0x0
  0x00007f003f28e8be: jne    0x00007f003f28e8d7
  0x00007f003f28e8c0: mov    QWORD PTR [rax+0x848],rdx
  0x00007f003f28e8c7: mov    QWORD PTR [rax+0x850],0x1
  0x00007f003f28e8d2: jmp    0x00007f003f28e903
  0x00007f003f28e8d7: cmp    QWORD PTR [rax+0x858],0x0
  0x00007f003f28e8e2: jne    0x00007f003f28e8fb
  0x00007f003f28e8e4: mov    QWORD PTR [rax+0x858],rdx
  0x00007f003f28e8eb: mov    QWORD PTR [rax+0x860],0x1
  0x00007f003f28e8f6: jmp    0x00007f003f28e903
  0x00007f003f28e8fb: add    QWORD PTR [rax+0x7d8],0x1
  0x00007f003f28e903: mov    rdx,rdi
  0x00007f003f28e906: mov    rax,rsi
  0x00007f003f28e909: mov    rsi,rax            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@141 (line 468)

  0x00007f003f28e90c: mov    DWORD PTR [rsp+0x70],edi
  0x00007f003f28e910: nop
  0x00007f003f28e911: nop
  0x00007f003f28e912: nop
  0x00007f003f28e913: nop
  0x00007f003f28e914: nop
  0x00007f003f28e915: movabs rax,0xffffffffffffffff
  0x00007f003f28e91f: call   0x00007f003f1c4f60  ; OopMap{[96]=Oop off=3780}
                                                ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@141 (line 468)
                                                ;   {virtual_call}
  0x00007f003f28e924: movabs rsi,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28e92e: add    QWORD PTR [rsi+0x870],0x1
  0x00007f003f28e936: mov    rsi,rax            ;*invokestatic hexDigit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@146 (line 468)

  0x00007f003f28e939: nop
  0x00007f003f28e93a: nop
  0x00007f003f28e93b: nop
  0x00007f003f28e93c: nop
  0x00007f003f28e93d: nop
  0x00007f003f28e93e: nop
  0x00007f003f28e93f: call   0x00007f003f1c5160  ; OopMap{[96]=Oop off=3812}
                                                ;*invokestatic hexDigit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@146 (line 468)
                                                ;   {static_call}
  0x00007f003f28e944: mov    ecx,0x4
  0x00007f003f28e949: mov    rbx,QWORD PTR [rsp+0x68]
  0x00007f003f28e94e: shl    rbx,cl
  0x00007f003f28e951: movsxd rax,eax
  0x00007f003f28e954: or     rbx,rax
  0x00007f003f28e957: mov    edi,DWORD PTR [rsp+0x70]
  0x00007f003f28e95b: inc    edi
  0x00007f003f28e95d: jmp    0x00007f003f28e608  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 464)

  0x00007f003f28e962: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28e96c: inc    DWORD PTR [rdx+0x8a0]
  0x00007f003f28e972: mov    edi,0x13
  0x00007f003f28e977: movabs rax,0x0
  0x00007f003f28e981: mov    QWORD PTR [rsp+0x68],rbx
  0x00007f003f28e986: jmp    0x00007f003f28ec36  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@173 (line 472)

  0x00007f003f28e98b: nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f003f28e990: cmp    edi,0x17
  0x00007f003f28e993: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28e99d: movabs rsi,0x8b8
  0x00007f003f28e9a7: jne    0x00007f003f28e9b7
  0x00007f003f28e9ad: movabs rsi,0x8c8
  0x00007f003f28e9b7: mov    rcx,QWORD PTR [rdx+rsi*1]
  0x00007f003f28e9bb: lea    rcx,[rcx+0x1]
  0x00007f003f28e9bf: mov    QWORD PTR [rdx+rsi*1],rcx
  0x00007f003f28e9c3: jne    0x00007f003f28e9e2  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@180 (line 473)

  0x00007f003f28e9c9: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28e9d3: inc    DWORD PTR [rdx+0x8d8]
  0x00007f003f28e9d9: mov    DWORD PTR [rsp+0x74],edi
  0x00007f003f28e9dd: jmp    0x00007f003f28ec2a  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@183 (line 474)

  0x00007f003f28e9e2: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f28e9e7: mov    rsi,QWORD PTR [rsp+0x60]
  0x00007f003f28e9ec: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28e9f6: mov    esi,DWORD PTR [rsi+0x8]
  0x00007f003f28e9f9: shl    rsi,0x3
  0x00007f003f28e9fd: cmp    rsi,QWORD PTR [rdx+0x900]
  0x00007f003f28ea04: jne    0x00007f003f28ea13
  0x00007f003f28ea06: add    QWORD PTR [rdx+0x908],0x1
  0x00007f003f28ea0e: jmp    0x00007f003f28ebd5
  0x00007f003f28ea13: cmp    rsi,QWORD PTR [rdx+0x910]
  0x00007f003f28ea1a: jne    0x00007f003f28ea29
  0x00007f003f28ea1c: add    QWORD PTR [rdx+0x918],0x1
  0x00007f003f28ea24: jmp    0x00007f003f28ebd5
  0x00007f003f28ea29: cmp    rsi,QWORD PTR [rdx+0x920]
  0x00007f003f28ea30: jne    0x00007f003f28ea3f
  0x00007f003f28ea32: add    QWORD PTR [rdx+0x928],0x1
  0x00007f003f28ea3a: jmp    0x00007f003f28ebd5
  0x00007f003f28ea3f: cmp    rsi,QWORD PTR [rdx+0x930]
  0x00007f003f28ea46: jne    0x00007f003f28ea55
  0x00007f003f28ea48: add    QWORD PTR [rdx+0x938],0x1
  0x00007f003f28ea50: jmp    0x00007f003f28ebd5
  0x00007f003f28ea55: cmp    rsi,QWORD PTR [rdx+0x940]
  0x00007f003f28ea5c: jne    0x00007f003f28ea6b
  0x00007f003f28ea5e: add    QWORD PTR [rdx+0x948],0x1
  0x00007f003f28ea66: jmp    0x00007f003f28ebd5
  0x00007f003f28ea6b: cmp    rsi,QWORD PTR [rdx+0x950]
  0x00007f003f28ea72: jne    0x00007f003f28ea81
  0x00007f003f28ea74: add    QWORD PTR [rdx+0x958],0x1
  0x00007f003f28ea7c: jmp    0x00007f003f28ebd5
  0x00007f003f28ea81: cmp    rsi,QWORD PTR [rdx+0x960]
  0x00007f003f28ea88: jne    0x00007f003f28ea97
  0x00007f003f28ea8a: add    QWORD PTR [rdx+0x968],0x1
  0x00007f003f28ea92: jmp    0x00007f003f28ebd5
  0x00007f003f28ea97: cmp    rsi,QWORD PTR [rdx+0x970]
  0x00007f003f28ea9e: jne    0x00007f003f28eaad
  0x00007f003f28eaa0: add    QWORD PTR [rdx+0x978],0x1
  0x00007f003f28eaa8: jmp    0x00007f003f28ebd5
  0x00007f003f28eaad: cmp    QWORD PTR [rdx+0x900],0x0
  0x00007f003f28eab8: jne    0x00007f003f28ead1
  0x00007f003f28eaba: mov    QWORD PTR [rdx+0x900],rsi
  0x00007f003f28eac1: mov    QWORD PTR [rdx+0x908],0x1
  0x00007f003f28eacc: jmp    0x00007f003f28ebd5
  0x00007f003f28ead1: cmp    QWORD PTR [rdx+0x910],0x0
  0x00007f003f28eadc: jne    0x00007f003f28eaf5
  0x00007f003f28eade: mov    QWORD PTR [rdx+0x910],rsi
  0x00007f003f28eae5: mov    QWORD PTR [rdx+0x918],0x1
  0x00007f003f28eaf0: jmp    0x00007f003f28ebd5
  0x00007f003f28eaf5: cmp    QWORD PTR [rdx+0x920],0x0
  0x00007f003f28eb00: jne    0x00007f003f28eb19
  0x00007f003f28eb02: mov    QWORD PTR [rdx+0x920],rsi
  0x00007f003f28eb09: mov    QWORD PTR [rdx+0x928],0x1
  0x00007f003f28eb14: jmp    0x00007f003f28ebd5
  0x00007f003f28eb19: cmp    QWORD PTR [rdx+0x930],0x0
  0x00007f003f28eb24: jne    0x00007f003f28eb3d
  0x00007f003f28eb26: mov    QWORD PTR [rdx+0x930],rsi
  0x00007f003f28eb2d: mov    QWORD PTR [rdx+0x938],0x1
  0x00007f003f28eb38: jmp    0x00007f003f28ebd5
  0x00007f003f28eb3d: cmp    QWORD PTR [rdx+0x940],0x0
  0x00007f003f28eb48: jne    0x00007f003f28eb61
  0x00007f003f28eb4a: mov    QWORD PTR [rdx+0x940],rsi
  0x00007f003f28eb51: mov    QWORD PTR [rdx+0x948],0x1
  0x00007f003f28eb5c: jmp    0x00007f003f28ebd5
  0x00007f003f28eb61: cmp    QWORD PTR [rdx+0x950],0x0
  0x00007f003f28eb6c: jne    0x00007f003f28eb85
  0x00007f003f28eb6e: mov    QWORD PTR [rdx+0x950],rsi
  0x00007f003f28eb75: mov    QWORD PTR [rdx+0x958],0x1
  0x00007f003f28eb80: jmp    0x00007f003f28ebd5
  0x00007f003f28eb85: cmp    QWORD PTR [rdx+0x960],0x0
  0x00007f003f28eb90: jne    0x00007f003f28eba9
  0x00007f003f28eb92: mov    QWORD PTR [rdx+0x960],rsi
  0x00007f003f28eb99: mov    QWORD PTR [rdx+0x968],0x1
  0x00007f003f28eba4: jmp    0x00007f003f28ebd5
  0x00007f003f28eba9: cmp    QWORD PTR [rdx+0x970],0x0
  0x00007f003f28ebb4: jne    0x00007f003f28ebcd
  0x00007f003f28ebb6: mov    QWORD PTR [rdx+0x970],rsi
  0x00007f003f28ebbd: mov    QWORD PTR [rdx+0x978],0x1
  0x00007f003f28ebc8: jmp    0x00007f003f28ebd5
  0x00007f003f28ebcd: add    QWORD PTR [rdx+0x8f0],0x1
  0x00007f003f28ebd5: mov    rdx,rdi
  0x00007f003f28ebd8: mov    rsi,QWORD PTR [rsp+0x60]  ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@189 (line 476)

  0x00007f003f28ebdd: mov    DWORD PTR [rsp+0x74],edi
  0x00007f003f28ebe1: nop
  0x00007f003f28ebe2: nop
  0x00007f003f28ebe3: nop
  0x00007f003f28ebe4: nop
  0x00007f003f28ebe5: movabs rax,0xffffffffffffffff
  0x00007f003f28ebef: call   0x00007f003f1c4f60  ; OopMap{[96]=Oop off=4500}
                                                ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@189 (line 476)
                                                ;   {virtual_call}
  0x00007f003f28ebf4: movabs rsi,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28ebfe: add    QWORD PTR [rsi+0x988],0x1
  0x00007f003f28ec06: mov    rsi,rax            ;*invokestatic hexDigit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@194 (line 476)

  0x00007f003f28ec09: nop
  0x00007f003f28ec0a: nop
  0x00007f003f28ec0b: nop
  0x00007f003f28ec0c: nop
  0x00007f003f28ec0d: nop
  0x00007f003f28ec0e: nop
  0x00007f003f28ec0f: call   0x00007f003f1c5160  ; OopMap{[96]=Oop off=4532}
                                                ;*invokestatic hexDigit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@194 (line 476)
                                                ;   {static_call}
  0x00007f003f28ec14: mov    ecx,0x4
  0x00007f003f28ec19: mov    rdx,QWORD PTR [rsp+0x78]
  0x00007f003f28ec1e: shl    rdx,cl
  0x00007f003f28ec21: movsxd rax,eax
  0x00007f003f28ec24: or     rdx,rax
  0x00007f003f28ec27: mov    rax,rdx            ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@207 (line 472)

  0x00007f003f28ec2a: mov    edi,DWORD PTR [rsp+0x74]
  0x00007f003f28ec2e: inc    edi
  0x00007f003f28ec30: mov    rbx,rax            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@210 (line 472)

  0x00007f003f28ec33: mov    rax,rbx
  0x00007f003f28ec36: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28ec40: mov    esi,DWORD PTR [rdx+0x100]
  0x00007f003f28ec46: add    esi,0x8
  0x00007f003f28ec49: mov    DWORD PTR [rdx+0x100],esi
  0x00007f003f28ec4f: movabs rdx,0x7f0038b68228  ;   {metadata({method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28ec59: and    esi,0xfff8
  0x00007f003f28ec5f: cmp    esi,0x0
  0x00007f003f28ec62: je     0x00007f003f28f7ac  ; OopMap{[96]=Oop off=4616}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@214 (line 472)

  0x00007f003f28ec68: test   DWORD PTR [rip+0x1b133492],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f28ec6e: cmp    edi,0x24
  0x00007f003f28ec71: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28ec7b: movabs rsi,0x998
  0x00007f003f28ec85: jl     0x00007f003f28ec95
  0x00007f003f28ec8b: movabs rsi,0x9a8
  0x00007f003f28ec95: mov    rcx,QWORD PTR [rdx+rsi*1]
  0x00007f003f28ec99: lea    rcx,[rcx+0x1]
  0x00007f003f28ec9d: mov    QWORD PTR [rdx+rsi*1],rcx
  0x00007f003f28eca1: jl     0x00007f003f28e990  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@214 (line 472)

  0x00007f003f28eca7: mov    rbx,rax
  0x00007f003f28ecaa: mov    r8,QWORD PTR [rsp+0x68]
  0x00007f003f28ecaf: movabs rdx,0x7c0040b08    ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007f003f28ecb9: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f28ecbd: lea    rdi,[rax+0x20]
  0x00007f003f28ecc1: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f28ecc5: ja     0x00007f003f28f7c3
  0x00007f003f28eccb: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f28eccf: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f28ecd6: mov    QWORD PTR [rax],rcx
  0x00007f003f28ecd9: mov    rcx,rdx
  0x00007f003f28ecdc: shr    rcx,0x3
  0x00007f003f28ece0: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f28ece3: xor    rcx,rcx
  0x00007f003f28ece6: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f28ece9: xor    rcx,rcx
  0x00007f003f28ecec: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f28ecf0: mov    QWORD PTR [rax+0x18],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@217 (line 480)

  0x00007f003f28ecf4: mov    rdx,rax
  0x00007f003f28ecf7: movabs rsi,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28ed01: add    QWORD PTR [rsi+0x9b8],0x1
  0x00007f003f28ed09: movabs rdx,0x7f00389d3fe0  ;   {metadata(method data for {method} {0x00007f00389ce900} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007f003f28ed13: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f28ed19: add    esi,0x8
  0x00007f003f28ed1c: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f28ed22: movabs rdx,0x7f00389ce900  ;   {metadata({method} {0x00007f00389ce900} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007f003f28ed2c: and    esi,0x7ffff8
  0x00007f003f28ed32: cmp    esi,0x0
  0x00007f003f28ed35: je     0x00007f003f28f7d0
  0x00007f003f28ed3b: mov    rdx,rax
  0x00007f003f28ed3e: movabs rsi,0x7f00389d3fe0  ;   {metadata(method data for {method} {0x00007f00389ce900} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007f003f28ed48: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f28ed50: movabs rdx,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f28ed5a: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f28ed60: add    esi,0x8
  0x00007f003f28ed63: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f28ed69: movabs rdx,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f28ed73: and    esi,0x7ffff8
  0x00007f003f28ed79: cmp    esi,0x0
  0x00007f003f28ed7c: je     0x00007f003f28f7e7
  0x00007f003f28ed82: mov    QWORD PTR [rax+0x10],r8  ;*putfield mostSigBits {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.UUID::&lt;init&gt;@6 (line 129)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@223 (line 480)

  0x00007f003f28ed86: mov    QWORD PTR [rax+0x18],rbx  ;*putfield leastSigBits {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.UUID::&lt;init&gt;@11 (line 130)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@223 (line 480)

  0x00007f003f28ed8a: add    rsp,0xb0
  0x00007f003f28ed91: pop    rbp
  0x00007f003f28ed92: test   DWORD PTR [rip+0x1b133368],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f28ed98: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@226 (line 480)

  0x00007f003f28ed99: nop    DWORD PTR [rax+0x0]
  0x00007f003f28eda0: jmp    0x00007f003f28f80d  ;   {no_reloc}
  0x00007f003f28eda5: add    BYTE PTR [rax],al
  0x00007f003f28eda7: add    BYTE PTR [rax],al
  0x00007f003f28eda9: add    BYTE PTR [rcx-0x75],cl
  0x00007f003f28edac: rex.RXB (bad) 
  0x00007f003f28edae: lea    rdi,[rax+0x20]
  0x00007f003f28edb2: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f28edb6: ja     0x00007f003f28f817
  0x00007f003f28edbc: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f28edc0: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f28edc7: mov    QWORD PTR [rax],rcx
  0x00007f003f28edca: mov    rcx,rdx
  0x00007f003f28edcd: shr    rcx,0x3
  0x00007f003f28edd1: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f28edd4: xor    rcx,rcx
  0x00007f003f28edd7: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f28edda: xor    rcx,rcx
  0x00007f003f28eddd: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f28ede1: mov    QWORD PTR [rax+0x18],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@87 (line 459)

  0x00007f003f28ede5: data16 xchg ax,ax
  0x00007f003f28ede8: jmp    0x00007f003f28f833  ;   {no_reloc}
  0x00007f003f28eded: add    BYTE PTR [rax],al
  0x00007f003f28edef: add    BYTE PTR [rax],al
  0x00007f003f28edf1: add    BYTE PTR [rax-0x77],cl
  0x00007f003f28edf4: test   BYTE PTR [rax+rcx*4],ah
  0x00007f003f28edf7: add    BYTE PTR [rax],al
  0x00007f003f28edf9: add    cl,ch
  0x00007f003f28edfb: or     al,BYTE PTR ds:[rax]
  0x00007f003f28edfe: add    BYTE PTR [rax-0x75],cl  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 459)

  0x00007f003f28ee01: ror    BYTE PTR [rax-0x42],1  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28ee04: sub    BYTE PTR [rax+0x7f0038b6],dl
  0x00007f003f28ee0a: add    BYTE PTR [rax],al
  0x00007f003f28ee0c: add    QWORD PTR [rsi+0x618],0x1
  0x00007f003f28ee14: movabs rdx,0x671594820    ;   {oop(&quot;Invalid UUID string: &quot;)}
  0x00007f003f28ee1e: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@97 (line 459)

  0x00007f003f28ee21: mov    QWORD PTR [rsp+0x80],rax
  0x00007f003f28ee29: nop
  0x00007f003f28ee2a: nop
  0x00007f003f28ee2b: nop
  0x00007f003f28ee2c: nop
  0x00007f003f28ee2d: nop
  0x00007f003f28ee2e: nop
  0x00007f003f28ee2f: call   0x00007f003f1c4d60  ; OopMap{[96]=Oop [128]=Oop [136]=Oop off=5076}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@97 (line 459)
                                                ;   {optimized virtual_call}
  0x00007f003f28ee34: mov    rax,QWORD PTR [rsp+0x80]
  0x00007f003f28ee3c: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28ee46: mov    eax,DWORD PTR [rax+0x8]
  0x00007f003f28ee49: shl    rax,0x3
  0x00007f003f28ee4d: cmp    rax,QWORD PTR [rdx+0x638]
  0x00007f003f28ee54: jne    0x00007f003f28ee63
  0x00007f003f28ee56: add    QWORD PTR [rdx+0x640],0x1
  0x00007f003f28ee5e: jmp    0x00007f003f28f025
  0x00007f003f28ee63: cmp    rax,QWORD PTR [rdx+0x648]
  0x00007f003f28ee6a: jne    0x00007f003f28ee79
  0x00007f003f28ee6c: add    QWORD PTR [rdx+0x650],0x1
  0x00007f003f28ee74: jmp    0x00007f003f28f025
  0x00007f003f28ee79: cmp    rax,QWORD PTR [rdx+0x658]
  0x00007f003f28ee80: jne    0x00007f003f28ee8f
  0x00007f003f28ee82: add    QWORD PTR [rdx+0x660],0x1
  0x00007f003f28ee8a: jmp    0x00007f003f28f025
  0x00007f003f28ee8f: cmp    rax,QWORD PTR [rdx+0x668]
  0x00007f003f28ee96: jne    0x00007f003f28eea5
  0x00007f003f28ee98: add    QWORD PTR [rdx+0x670],0x1
  0x00007f003f28eea0: jmp    0x00007f003f28f025
  0x00007f003f28eea5: cmp    rax,QWORD PTR [rdx+0x678]
  0x00007f003f28eeac: jne    0x00007f003f28eebb
  0x00007f003f28eeae: add    QWORD PTR [rdx+0x680],0x1
  0x00007f003f28eeb6: jmp    0x00007f003f28f025
  0x00007f003f28eebb: cmp    rax,QWORD PTR [rdx+0x688]
  0x00007f003f28eec2: jne    0x00007f003f28eed1
  0x00007f003f28eec4: add    QWORD PTR [rdx+0x690],0x1
  0x00007f003f28eecc: jmp    0x00007f003f28f025
  0x00007f003f28eed1: cmp    rax,QWORD PTR [rdx+0x698]
  0x00007f003f28eed8: jne    0x00007f003f28eee7
  0x00007f003f28eeda: add    QWORD PTR [rdx+0x6a0],0x1
  0x00007f003f28eee2: jmp    0x00007f003f28f025
  0x00007f003f28eee7: cmp    rax,QWORD PTR [rdx+0x6a8]
  0x00007f003f28eeee: jne    0x00007f003f28eefd
  0x00007f003f28eef0: add    QWORD PTR [rdx+0x6b0],0x1
  0x00007f003f28eef8: jmp    0x00007f003f28f025
  0x00007f003f28eefd: cmp    QWORD PTR [rdx+0x638],0x0
  0x00007f003f28ef08: jne    0x00007f003f28ef21
  0x00007f003f28ef0a: mov    QWORD PTR [rdx+0x638],rax
  0x00007f003f28ef11: mov    QWORD PTR [rdx+0x640],0x1
  0x00007f003f28ef1c: jmp    0x00007f003f28f025
  0x00007f003f28ef21: cmp    QWORD PTR [rdx+0x648],0x0
  0x00007f003f28ef2c: jne    0x00007f003f28ef45
  0x00007f003f28ef2e: mov    QWORD PTR [rdx+0x648],rax
  0x00007f003f28ef35: mov    QWORD PTR [rdx+0x650],0x1
  0x00007f003f28ef40: jmp    0x00007f003f28f025
  0x00007f003f28ef45: cmp    QWORD PTR [rdx+0x658],0x0
  0x00007f003f28ef50: jne    0x00007f003f28ef69
  0x00007f003f28ef52: mov    QWORD PTR [rdx+0x658],rax
  0x00007f003f28ef59: mov    QWORD PTR [rdx+0x660],0x1
  0x00007f003f28ef64: jmp    0x00007f003f28f025
  0x00007f003f28ef69: cmp    QWORD PTR [rdx+0x668],0x0
  0x00007f003f28ef74: jne    0x00007f003f28ef8d
  0x00007f003f28ef76: mov    QWORD PTR [rdx+0x668],rax
  0x00007f003f28ef7d: mov    QWORD PTR [rdx+0x670],0x1
  0x00007f003f28ef88: jmp    0x00007f003f28f025
  0x00007f003f28ef8d: cmp    QWORD PTR [rdx+0x678],0x0
  0x00007f003f28ef98: jne    0x00007f003f28efb1
  0x00007f003f28ef9a: mov    QWORD PTR [rdx+0x678],rax
  0x00007f003f28efa1: mov    QWORD PTR [rdx+0x680],0x1
  0x00007f003f28efac: jmp    0x00007f003f28f025
  0x00007f003f28efb1: cmp    QWORD PTR [rdx+0x688],0x0
  0x00007f003f28efbc: jne    0x00007f003f28efd5
  0x00007f003f28efbe: mov    QWORD PTR [rdx+0x688],rax
  0x00007f003f28efc5: mov    QWORD PTR [rdx+0x690],0x1
  0x00007f003f28efd0: jmp    0x00007f003f28f025
  0x00007f003f28efd5: cmp    QWORD PTR [rdx+0x698],0x0
  0x00007f003f28efe0: jne    0x00007f003f28eff9
  0x00007f003f28efe2: mov    QWORD PTR [rdx+0x698],rax
  0x00007f003f28efe9: mov    QWORD PTR [rdx+0x6a0],0x1
  0x00007f003f28eff4: jmp    0x00007f003f28f025
  0x00007f003f28eff9: cmp    QWORD PTR [rdx+0x6a8],0x0
  0x00007f003f28f004: jne    0x00007f003f28f01d
  0x00007f003f28f006: mov    QWORD PTR [rdx+0x6a8],rax
  0x00007f003f28f00d: mov    QWORD PTR [rdx+0x6b0],0x1
  0x00007f003f28f018: jmp    0x00007f003f28f025
  0x00007f003f28f01d: add    QWORD PTR [rdx+0x628],0x1
  0x00007f003f28f025: mov    rdx,QWORD PTR [rsp+0x60]
  0x00007f003f28f02a: mov    rsi,QWORD PTR [rsp+0x80]  ;*invokevirtual append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@101 (line 459)

  0x00007f003f28f032: nop
  0x00007f003f28f033: nop
  0x00007f003f28f034: nop
  0x00007f003f28f035: movabs rax,0xffffffffffffffff
  0x00007f003f28f03f: call   0x00007f003f1c4f60  ; OopMap{[136]=Oop off=5604}
                                                ;*invokevirtual append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@101 (line 459)
                                                ;   {virtual_call}
  0x00007f003f28f044: cmp    rax,QWORD PTR [rax]  ; implicit exception: dispatches to 0x00007f003f28f84a
  0x00007f003f28f047: mov    rsi,rax
  0x00007f003f28f04a: movabs rdi,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28f054: mov    esi,DWORD PTR [rsi+0x8]
  0x00007f003f28f057: shl    rsi,0x3
  0x00007f003f28f05b: cmp    rsi,QWORD PTR [rdi+0x6d0]
  0x00007f003f28f062: jne    0x00007f003f28f071
  0x00007f003f28f064: add    QWORD PTR [rdi+0x6d8],0x1
  0x00007f003f28f06c: jmp    0x00007f003f28f233
  0x00007f003f28f071: cmp    rsi,QWORD PTR [rdi+0x6e0]
  0x00007f003f28f078: jne    0x00007f003f28f087
  0x00007f003f28f07a: add    QWORD PTR [rdi+0x6e8],0x1
  0x00007f003f28f082: jmp    0x00007f003f28f233
  0x00007f003f28f087: cmp    rsi,QWORD PTR [rdi+0x6f0]
  0x00007f003f28f08e: jne    0x00007f003f28f09d
  0x00007f003f28f090: add    QWORD PTR [rdi+0x6f8],0x1
  0x00007f003f28f098: jmp    0x00007f003f28f233
  0x00007f003f28f09d: cmp    rsi,QWORD PTR [rdi+0x700]
  0x00007f003f28f0a4: jne    0x00007f003f28f0b3
  0x00007f003f28f0a6: add    QWORD PTR [rdi+0x708],0x1
  0x00007f003f28f0ae: jmp    0x00007f003f28f233
  0x00007f003f28f0b3: cmp    rsi,QWORD PTR [rdi+0x710]
  0x00007f003f28f0ba: jne    0x00007f003f28f0c9
  0x00007f003f28f0bc: add    QWORD PTR [rdi+0x718],0x1
  0x00007f003f28f0c4: jmp    0x00007f003f28f233
  0x00007f003f28f0c9: cmp    rsi,QWORD PTR [rdi+0x720]
  0x00007f003f28f0d0: jne    0x00007f003f28f0df
  0x00007f003f28f0d2: add    QWORD PTR [rdi+0x728],0x1
  0x00007f003f28f0da: jmp    0x00007f003f28f233
  0x00007f003f28f0df: cmp    rsi,QWORD PTR [rdi+0x730]
  0x00007f003f28f0e6: jne    0x00007f003f28f0f5
  0x00007f003f28f0e8: add    QWORD PTR [rdi+0x738],0x1
  0x00007f003f28f0f0: jmp    0x00007f003f28f233
  0x00007f003f28f0f5: cmp    rsi,QWORD PTR [rdi+0x740]
  0x00007f003f28f0fc: jne    0x00007f003f28f10b
  0x00007f003f28f0fe: add    QWORD PTR [rdi+0x748],0x1
  0x00007f003f28f106: jmp    0x00007f003f28f233
  0x00007f003f28f10b: cmp    QWORD PTR [rdi+0x6d0],0x0
  0x00007f003f28f116: jne    0x00007f003f28f12f
  0x00007f003f28f118: mov    QWORD PTR [rdi+0x6d0],rsi
  0x00007f003f28f11f: mov    QWORD PTR [rdi+0x6d8],0x1
  0x00007f003f28f12a: jmp    0x00007f003f28f233
  0x00007f003f28f12f: cmp    QWORD PTR [rdi+0x6e0],0x0
  0x00007f003f28f13a: jne    0x00007f003f28f153
  0x00007f003f28f13c: mov    QWORD PTR [rdi+0x6e0],rsi
  0x00007f003f28f143: mov    QWORD PTR [rdi+0x6e8],0x1
  0x00007f003f28f14e: jmp    0x00007f003f28f233
  0x00007f003f28f153: cmp    QWORD PTR [rdi+0x6f0],0x0
  0x00007f003f28f15e: jne    0x00007f003f28f177
  0x00007f003f28f160: mov    QWORD PTR [rdi+0x6f0],rsi
  0x00007f003f28f167: mov    QWORD PTR [rdi+0x6f8],0x1
  0x00007f003f28f172: jmp    0x00007f003f28f233
  0x00007f003f28f177: cmp    QWORD PTR [rdi+0x700],0x0
  0x00007f003f28f182: jne    0x00007f003f28f19b
  0x00007f003f28f184: mov    QWORD PTR [rdi+0x700],rsi
  0x00007f003f28f18b: mov    QWORD PTR [rdi+0x708],0x1
  0x00007f003f28f196: jmp    0x00007f003f28f233
  0x00007f003f28f19b: cmp    QWORD PTR [rdi+0x710],0x0
  0x00007f003f28f1a6: jne    0x00007f003f28f1bf
  0x00007f003f28f1a8: mov    QWORD PTR [rdi+0x710],rsi
  0x00007f003f28f1af: mov    QWORD PTR [rdi+0x718],0x1
  0x00007f003f28f1ba: jmp    0x00007f003f28f233
  0x00007f003f28f1bf: cmp    QWORD PTR [rdi+0x720],0x0
  0x00007f003f28f1ca: jne    0x00007f003f28f1e3
  0x00007f003f28f1cc: mov    QWORD PTR [rdi+0x720],rsi
  0x00007f003f28f1d3: mov    QWORD PTR [rdi+0x728],0x1
  0x00007f003f28f1de: jmp    0x00007f003f28f233
  0x00007f003f28f1e3: cmp    QWORD PTR [rdi+0x730],0x0
  0x00007f003f28f1ee: jne    0x00007f003f28f207
  0x00007f003f28f1f0: mov    QWORD PTR [rdi+0x730],rsi
  0x00007f003f28f1f7: mov    QWORD PTR [rdi+0x738],0x1
  0x00007f003f28f202: jmp    0x00007f003f28f233
  0x00007f003f28f207: cmp    QWORD PTR [rdi+0x740],0x0
  0x00007f003f28f212: jne    0x00007f003f28f22b
  0x00007f003f28f214: mov    QWORD PTR [rdi+0x740],rsi
  0x00007f003f28f21b: mov    QWORD PTR [rdi+0x748],0x1
  0x00007f003f28f226: jmp    0x00007f003f28f233
  0x00007f003f28f22b: add    QWORD PTR [rdi+0x6c0],0x1
  0x00007f003f28f233: mov    rsi,rax            ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 459)

  0x00007f003f28f236: nop
  0x00007f003f28f237: nop
  0x00007f003f28f238: nop
  0x00007f003f28f239: nop
  0x00007f003f28f23a: nop
  0x00007f003f28f23b: nop
  0x00007f003f28f23c: nop
  0x00007f003f28f23d: movabs rax,0xffffffffffffffff
  0x00007f003f28f247: call   0x00007f003f1c4f60  ; OopMap{[136]=Oop off=6124}
                                                ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 459)
                                                ;   {virtual_call}
  0x00007f003f28f24c: mov    rdx,QWORD PTR [rsp+0x88]
  0x00007f003f28f254: movabs rsi,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28f25e: add    QWORD PTR [rsi+0x758],0x1
  0x00007f003f28f266: mov    rdx,rax
  0x00007f003f28f269: mov    rsi,QWORD PTR [rsp+0x88]  ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@107 (line 459)

  0x00007f003f28f271: nop
  0x00007f003f28f272: nop
  0x00007f003f28f273: nop
  0x00007f003f28f274: nop
  0x00007f003f28f275: nop
  0x00007f003f28f276: nop
  0x00007f003f28f277: call   0x00007f003f1c4d60  ; OopMap{[136]=Oop off=6172}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@107 (line 459)
                                                ;   {optimized virtual_call}
  0x00007f003f28f27c: mov    rax,QWORD PTR [rsp+0x88]
  0x00007f003f28f284: jmp    0x00007f003f28f8cb  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@110 (line 459)

  0x00007f003f28f289: nop    DWORD PTR [rax+0x0]
  0x00007f003f28f290: jmp    0x00007f003f28f85e  ;   {no_reloc}
  0x00007f003f28f295: add    BYTE PTR [rax],al
  0x00007f003f28f297: add    BYTE PTR [rax],al
  0x00007f003f28f299: add    BYTE PTR [rcx-0x75],cl
  0x00007f003f28f29c: rex.RXB (bad) 
  0x00007f003f28f29e: lea    rdi,[rax+0x20]
  0x00007f003f28f2a2: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f28f2a6: ja     0x00007f003f28f868
  0x00007f003f28f2ac: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f28f2b0: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f28f2b7: mov    QWORD PTR [rax],rcx
  0x00007f003f28f2ba: mov    rcx,rdx
  0x00007f003f28f2bd: shr    rcx,0x3
  0x00007f003f28f2c1: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f28f2c4: xor    rcx,rcx
  0x00007f003f28f2c7: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f28f2ca: xor    rcx,rcx
  0x00007f003f28f2cd: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f28f2d1: mov    QWORD PTR [rax+0x18],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@11 (line 456)

  0x00007f003f28f2d5: data16 xchg ax,ax
  0x00007f003f28f2d8: jmp    0x00007f003f28f884  ;   {no_reloc}
  0x00007f003f28f2dd: add    BYTE PTR [rax],al
  0x00007f003f28f2df: add    BYTE PTR [rax],al
  0x00007f003f28f2e1: add    BYTE PTR [rax-0x77],cl
  0x00007f003f28f2e4: test   BYTE PTR [rax+rbx*4],ah
  0x00007f003f28f2e7: add    BYTE PTR [rax],al
  0x00007f003f28f2e9: add    cl,ch
  0x00007f003f28f2eb: lahf   
  0x00007f003f28f2ec: add    eax,0x8b480000     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@15 (line 456)

  0x00007f003f28f2f1: ror    BYTE PTR [rax-0x42],1  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28f2f4: sub    BYTE PTR [rax+0x7f0038b6],dl
  0x00007f003f28f2fa: add    BYTE PTR [rax],al
  0x00007f003f28f2fc: add    QWORD PTR [rsi+0x1e8],0x1
  0x00007f003f28f304: movabs rdx,0x671594820    ;   {oop(&quot;Invalid UUID string: &quot;)}
  0x00007f003f28f30e: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@21 (line 456)

  0x00007f003f28f311: mov    QWORD PTR [rsp+0x90],rax
  0x00007f003f28f319: nop
  0x00007f003f28f31a: nop
  0x00007f003f28f31b: nop
  0x00007f003f28f31c: nop
  0x00007f003f28f31d: nop
  0x00007f003f28f31e: nop
  0x00007f003f28f31f: call   0x00007f003f1c4d60  ; OopMap{[144]=Oop [152]=Oop [96]=Oop off=6340}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@21 (line 456)
                                                ;   {optimized virtual_call}
  0x00007f003f28f324: mov    rax,QWORD PTR [rsp+0x90]
  0x00007f003f28f32c: movabs rdx,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28f336: mov    eax,DWORD PTR [rax+0x8]
  0x00007f003f28f339: shl    rax,0x3
  0x00007f003f28f33d: cmp    rax,QWORD PTR [rdx+0x208]
  0x00007f003f28f344: jne    0x00007f003f28f353
  0x00007f003f28f346: add    QWORD PTR [rdx+0x210],0x1
  0x00007f003f28f34e: jmp    0x00007f003f28f515
  0x00007f003f28f353: cmp    rax,QWORD PTR [rdx+0x218]
  0x00007f003f28f35a: jne    0x00007f003f28f369
  0x00007f003f28f35c: add    QWORD PTR [rdx+0x220],0x1
  0x00007f003f28f364: jmp    0x00007f003f28f515
  0x00007f003f28f369: cmp    rax,QWORD PTR [rdx+0x228]
  0x00007f003f28f370: jne    0x00007f003f28f37f
  0x00007f003f28f372: add    QWORD PTR [rdx+0x230],0x1
  0x00007f003f28f37a: jmp    0x00007f003f28f515
  0x00007f003f28f37f: cmp    rax,QWORD PTR [rdx+0x238]
  0x00007f003f28f386: jne    0x00007f003f28f395
  0x00007f003f28f388: add    QWORD PTR [rdx+0x240],0x1
  0x00007f003f28f390: jmp    0x00007f003f28f515
  0x00007f003f28f395: cmp    rax,QWORD PTR [rdx+0x248]
  0x00007f003f28f39c: jne    0x00007f003f28f3ab
  0x00007f003f28f39e: add    QWORD PTR [rdx+0x250],0x1
  0x00007f003f28f3a6: jmp    0x00007f003f28f515
  0x00007f003f28f3ab: cmp    rax,QWORD PTR [rdx+0x258]
  0x00007f003f28f3b2: jne    0x00007f003f28f3c1
  0x00007f003f28f3b4: add    QWORD PTR [rdx+0x260],0x1
  0x00007f003f28f3bc: jmp    0x00007f003f28f515
  0x00007f003f28f3c1: cmp    rax,QWORD PTR [rdx+0x268]
  0x00007f003f28f3c8: jne    0x00007f003f28f3d7
  0x00007f003f28f3ca: add    QWORD PTR [rdx+0x270],0x1
  0x00007f003f28f3d2: jmp    0x00007f003f28f515
  0x00007f003f28f3d7: cmp    rax,QWORD PTR [rdx+0x278]
  0x00007f003f28f3de: jne    0x00007f003f28f3ed
  0x00007f003f28f3e0: add    QWORD PTR [rdx+0x280],0x1
  0x00007f003f28f3e8: jmp    0x00007f003f28f515
  0x00007f003f28f3ed: cmp    QWORD PTR [rdx+0x208],0x0
  0x00007f003f28f3f8: jne    0x00007f003f28f411
  0x00007f003f28f3fa: mov    QWORD PTR [rdx+0x208],rax
  0x00007f003f28f401: mov    QWORD PTR [rdx+0x210],0x1
  0x00007f003f28f40c: jmp    0x00007f003f28f515
  0x00007f003f28f411: cmp    QWORD PTR [rdx+0x218],0x0
  0x00007f003f28f41c: jne    0x00007f003f28f435
  0x00007f003f28f41e: mov    QWORD PTR [rdx+0x218],rax
  0x00007f003f28f425: mov    QWORD PTR [rdx+0x220],0x1
  0x00007f003f28f430: jmp    0x00007f003f28f515
  0x00007f003f28f435: cmp    QWORD PTR [rdx+0x228],0x0
  0x00007f003f28f440: jne    0x00007f003f28f459
  0x00007f003f28f442: mov    QWORD PTR [rdx+0x228],rax
  0x00007f003f28f449: mov    QWORD PTR [rdx+0x230],0x1
  0x00007f003f28f454: jmp    0x00007f003f28f515
  0x00007f003f28f459: cmp    QWORD PTR [rdx+0x238],0x0
  0x00007f003f28f464: jne    0x00007f003f28f47d
  0x00007f003f28f466: mov    QWORD PTR [rdx+0x238],rax
  0x00007f003f28f46d: mov    QWORD PTR [rdx+0x240],0x1
  0x00007f003f28f478: jmp    0x00007f003f28f515
  0x00007f003f28f47d: cmp    QWORD PTR [rdx+0x248],0x0
  0x00007f003f28f488: jne    0x00007f003f28f4a1
  0x00007f003f28f48a: mov    QWORD PTR [rdx+0x248],rax
  0x00007f003f28f491: mov    QWORD PTR [rdx+0x250],0x1
  0x00007f003f28f49c: jmp    0x00007f003f28f515
  0x00007f003f28f4a1: cmp    QWORD PTR [rdx+0x258],0x0
  0x00007f003f28f4ac: jne    0x00007f003f28f4c5
  0x00007f003f28f4ae: mov    QWORD PTR [rdx+0x258],rax
  0x00007f003f28f4b5: mov    QWORD PTR [rdx+0x260],0x1
  0x00007f003f28f4c0: jmp    0x00007f003f28f515
  0x00007f003f28f4c5: cmp    QWORD PTR [rdx+0x268],0x0
  0x00007f003f28f4d0: jne    0x00007f003f28f4e9
  0x00007f003f28f4d2: mov    QWORD PTR [rdx+0x268],rax
  0x00007f003f28f4d9: mov    QWORD PTR [rdx+0x270],0x1
  0x00007f003f28f4e4: jmp    0x00007f003f28f515
  0x00007f003f28f4e9: cmp    QWORD PTR [rdx+0x278],0x0
  0x00007f003f28f4f4: jne    0x00007f003f28f50d
  0x00007f003f28f4f6: mov    QWORD PTR [rdx+0x278],rax
  0x00007f003f28f4fd: mov    QWORD PTR [rdx+0x280],0x1
  0x00007f003f28f508: jmp    0x00007f003f28f515
  0x00007f003f28f50d: add    QWORD PTR [rdx+0x1f8],0x1
  0x00007f003f28f515: mov    rdx,QWORD PTR [rsp+0x60]
  0x00007f003f28f51a: mov    rsi,QWORD PTR [rsp+0x90]  ;*invokevirtual append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@25 (line 456)

  0x00007f003f28f522: nop
  0x00007f003f28f523: nop
  0x00007f003f28f524: nop
  0x00007f003f28f525: movabs rax,0xffffffffffffffff
  0x00007f003f28f52f: call   0x00007f003f1c4f60  ; OopMap{[152]=Oop off=6868}
                                                ;*invokevirtual append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@25 (line 456)
                                                ;   {virtual_call}
  0x00007f003f28f534: cmp    rax,QWORD PTR [rax]  ; implicit exception: dispatches to 0x00007f003f28f89b
  0x00007f003f28f537: mov    rsi,rax
  0x00007f003f28f53a: movabs rdi,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28f544: mov    esi,DWORD PTR [rsi+0x8]
  0x00007f003f28f547: shl    rsi,0x3
  0x00007f003f28f54b: cmp    rsi,QWORD PTR [rdi+0x2a0]
  0x00007f003f28f552: jne    0x00007f003f28f561
  0x00007f003f28f554: add    QWORD PTR [rdi+0x2a8],0x1
  0x00007f003f28f55c: jmp    0x00007f003f28f723
  0x00007f003f28f561: cmp    rsi,QWORD PTR [rdi+0x2b0]
  0x00007f003f28f568: jne    0x00007f003f28f577
  0x00007f003f28f56a: add    QWORD PTR [rdi+0x2b8],0x1
  0x00007f003f28f572: jmp    0x00007f003f28f723
  0x00007f003f28f577: cmp    rsi,QWORD PTR [rdi+0x2c0]
  0x00007f003f28f57e: jne    0x00007f003f28f58d
  0x00007f003f28f580: add    QWORD PTR [rdi+0x2c8],0x1
  0x00007f003f28f588: jmp    0x00007f003f28f723
  0x00007f003f28f58d: cmp    rsi,QWORD PTR [rdi+0x2d0]
  0x00007f003f28f594: jne    0x00007f003f28f5a3
  0x00007f003f28f596: add    QWORD PTR [rdi+0x2d8],0x1
  0x00007f003f28f59e: jmp    0x00007f003f28f723
  0x00007f003f28f5a3: cmp    rsi,QWORD PTR [rdi+0x2e0]
  0x00007f003f28f5aa: jne    0x00007f003f28f5b9
  0x00007f003f28f5ac: add    QWORD PTR [rdi+0x2e8],0x1
  0x00007f003f28f5b4: jmp    0x00007f003f28f723
  0x00007f003f28f5b9: cmp    rsi,QWORD PTR [rdi+0x2f0]
  0x00007f003f28f5c0: jne    0x00007f003f28f5cf
  0x00007f003f28f5c2: add    QWORD PTR [rdi+0x2f8],0x1
  0x00007f003f28f5ca: jmp    0x00007f003f28f723
  0x00007f003f28f5cf: cmp    rsi,QWORD PTR [rdi+0x300]
  0x00007f003f28f5d6: jne    0x00007f003f28f5e5
  0x00007f003f28f5d8: add    QWORD PTR [rdi+0x308],0x1
  0x00007f003f28f5e0: jmp    0x00007f003f28f723
  0x00007f003f28f5e5: cmp    rsi,QWORD PTR [rdi+0x310]
  0x00007f003f28f5ec: jne    0x00007f003f28f5fb
  0x00007f003f28f5ee: add    QWORD PTR [rdi+0x318],0x1
  0x00007f003f28f5f6: jmp    0x00007f003f28f723
  0x00007f003f28f5fb: cmp    QWORD PTR [rdi+0x2a0],0x0
  0x00007f003f28f606: jne    0x00007f003f28f61f
  0x00007f003f28f608: mov    QWORD PTR [rdi+0x2a0],rsi
  0x00007f003f28f60f: mov    QWORD PTR [rdi+0x2a8],0x1
  0x00007f003f28f61a: jmp    0x00007f003f28f723
  0x00007f003f28f61f: cmp    QWORD PTR [rdi+0x2b0],0x0
  0x00007f003f28f62a: jne    0x00007f003f28f643
  0x00007f003f28f62c: mov    QWORD PTR [rdi+0x2b0],rsi
  0x00007f003f28f633: mov    QWORD PTR [rdi+0x2b8],0x1
  0x00007f003f28f63e: jmp    0x00007f003f28f723
  0x00007f003f28f643: cmp    QWORD PTR [rdi+0x2c0],0x0
  0x00007f003f28f64e: jne    0x00007f003f28f667
  0x00007f003f28f650: mov    QWORD PTR [rdi+0x2c0],rsi
  0x00007f003f28f657: mov    QWORD PTR [rdi+0x2c8],0x1
  0x00007f003f28f662: jmp    0x00007f003f28f723
  0x00007f003f28f667: cmp    QWORD PTR [rdi+0x2d0],0x0
  0x00007f003f28f672: jne    0x00007f003f28f68b
  0x00007f003f28f674: mov    QWORD PTR [rdi+0x2d0],rsi
  0x00007f003f28f67b: mov    QWORD PTR [rdi+0x2d8],0x1
  0x00007f003f28f686: jmp    0x00007f003f28f723
  0x00007f003f28f68b: cmp    QWORD PTR [rdi+0x2e0],0x0
  0x00007f003f28f696: jne    0x00007f003f28f6af
  0x00007f003f28f698: mov    QWORD PTR [rdi+0x2e0],rsi
  0x00007f003f28f69f: mov    QWORD PTR [rdi+0x2e8],0x1
  0x00007f003f28f6aa: jmp    0x00007f003f28f723
  0x00007f003f28f6af: cmp    QWORD PTR [rdi+0x2f0],0x0
  0x00007f003f28f6ba: jne    0x00007f003f28f6d3
  0x00007f003f28f6bc: mov    QWORD PTR [rdi+0x2f0],rsi
  0x00007f003f28f6c3: mov    QWORD PTR [rdi+0x2f8],0x1
  0x00007f003f28f6ce: jmp    0x00007f003f28f723
  0x00007f003f28f6d3: cmp    QWORD PTR [rdi+0x300],0x0
  0x00007f003f28f6de: jne    0x00007f003f28f6f7
  0x00007f003f28f6e0: mov    QWORD PTR [rdi+0x300],rsi
  0x00007f003f28f6e7: mov    QWORD PTR [rdi+0x308],0x1
  0x00007f003f28f6f2: jmp    0x00007f003f28f723
  0x00007f003f28f6f7: cmp    QWORD PTR [rdi+0x310],0x0
  0x00007f003f28f702: jne    0x00007f003f28f71b
  0x00007f003f28f704: mov    QWORD PTR [rdi+0x310],rsi
  0x00007f003f28f70b: mov    QWORD PTR [rdi+0x318],0x1
  0x00007f003f28f716: jmp    0x00007f003f28f723
  0x00007f003f28f71b: add    QWORD PTR [rdi+0x290],0x1
  0x00007f003f28f723: mov    rsi,rax            ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@28 (line 456)

  0x00007f003f28f726: nop
  0x00007f003f28f727: nop
  0x00007f003f28f728: nop
  0x00007f003f28f729: nop
  0x00007f003f28f72a: nop
  0x00007f003f28f72b: nop
  0x00007f003f28f72c: nop
  0x00007f003f28f72d: movabs rax,0xffffffffffffffff
  0x00007f003f28f737: call   0x00007f003f1c4f60  ; OopMap{[152]=Oop off=7388}
                                                ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@28 (line 456)
                                                ;   {virtual_call}
  0x00007f003f28f73c: mov    rdx,QWORD PTR [rsp+0x98]
  0x00007f003f28f744: movabs rsi,0x7f0038b69028  ;   {metadata(method data for {method} {0x00007f0038b68228} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f003f28f74e: add    QWORD PTR [rsi+0x328],0x1
  0x00007f003f28f756: mov    rdx,rax
  0x00007f003f28f759: mov    rsi,QWORD PTR [rsp+0x98]  ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@31 (line 456)

  0x00007f003f28f761: nop
  0x00007f003f28f762: nop
  0x00007f003f28f763: nop
  0x00007f003f28f764: nop
  0x00007f003f28f765: nop
  0x00007f003f28f766: nop
  0x00007f003f28f767: call   0x00007f003f1c4d60  ; OopMap{[152]=Oop off=7436}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@31 (line 456)
                                                ;   {optimized virtual_call}
  0x00007f003f28f76c: mov    rax,QWORD PTR [rsp+0x98]
  0x00007f003f28f774: jmp    0x00007f003f28f8cb
  0x00007f003f28f779: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f28f77e: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f28f786: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [96]=Oop off=7467}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@-1 (line 455)
                                                ;   {runtime_call}
  0x00007f003f28f78b: jmp    0x00007f003f28daa6
  0x00007f003f28f790: call   0x00007f003f279000  ; OopMap{rsi=Oop [96]=Oop off=7477}
                                                ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ;   {runtime_call}
  0x00007f003f28f795: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f28f79a: mov    QWORD PTR [rsp],0xa6
  0x00007f003f28f7a2: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [96]=Oop off=7495}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@166 (line 464)
                                                ;   {runtime_call}
  0x00007f003f28f7a7: jmp    0x00007f003f28e63f
  0x00007f003f28f7ac: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f28f7b1: mov    QWORD PTR [rsp],0xd6
  0x00007f003f28f7b9: call   0x00007f003f27d5e0  ; OopMap{[96]=Oop off=7518}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@214 (line 472)
                                                ;   {runtime_call}
  0x00007f003f28f7be: jmp    0x00007f003f28ec68
  0x00007f003f28f7c3: mov    rdx,rdx
  0x00007f003f28f7c6: call   0x00007f003f279760  ; OopMap{off=7531}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@217 (line 480)
                                                ;   {runtime_call}
  0x00007f003f28f7cb: jmp    0x00007f003f28ecf4
  0x00007f003f28f7d0: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f28f7d5: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f28f7dd: call   0x00007f003f27d5e0  ; OopMap{rax=Oop off=7554}
                                                ;*synchronization entry
                                                ; - java.util.UUID::&lt;init&gt;@-1 (line 128)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@223 (line 480)
                                                ;   {runtime_call}
  0x00007f003f28f7e2: jmp    0x00007f003f28ed3b
  0x00007f003f28f7e7: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f28f7ec: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f28f7f4: call   0x00007f003f27d5e0  ; OopMap{rax=Oop off=7577}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.UUID::&lt;init&gt;@1 (line 128)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@223 (line 480)
                                                ;   {runtime_call}
  0x00007f003f28f7f9: jmp    0x00007f003f28ed82
  0x00007f003f28f7fe: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f28f808: mov    eax,0xa050f00
  0x00007f003f28f80d: call   0x00007f003f27c5e0  ; OopMap{[96]=Oop off=7602}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@87 (line 459)
                                                ;   {runtime_call}
  0x00007f003f28f812: jmp    0x00007f003f28eda0
  0x00007f003f28f817: mov    rdx,rdx
  0x00007f003f28f81a: call   0x00007f003f279760  ; OopMap{[96]=Oop off=7615}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@87 (line 459)
                                                ;   {runtime_call}
  0x00007f003f28f81f: jmp    0x00007f003f28ede5
  0x00007f003f28f824: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f28f82e: mov    eax,0xa050f00
  0x00007f003f28f833: call   0x00007f003f27c5e0  ; OopMap{[96]=Oop rax=Oop off=7640}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 459)
                                                ;   {runtime_call}
  0x00007f003f28f838: jmp    0x00007f003f28ede8
  0x00007f003f28f83d: mov    rdx,rdx
  0x00007f003f28f840: call   0x00007f003f2794a0  ; OopMap{[96]=Oop [136]=Oop off=7653}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 459)
                                                ;   {runtime_call}
  0x00007f003f28f845: jmp    0x00007f003f28edff
  0x00007f003f28f84a: call   0x00007f003f279000  ; OopMap{[136]=Oop rax=Oop off=7663}
                                                ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 459)
                                                ;   {runtime_call}
  0x00007f003f28f84f: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f28f859: mov    eax,0xa050f00
  0x00007f003f28f85e: call   0x00007f003f27c5e0  ; OopMap{[96]=Oop off=7683}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@11 (line 456)
                                                ;   {runtime_call}
  0x00007f003f28f863: jmp    0x00007f003f28f290
  0x00007f003f28f868: mov    rdx,rdx
  0x00007f003f28f86b: call   0x00007f003f279760  ; OopMap{[96]=Oop off=7696}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@11 (line 456)
                                                ;   {runtime_call}
  0x00007f003f28f870: jmp    0x00007f003f28f2d5
  0x00007f003f28f875: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f28f87f: mov    eax,0xa050f00
  0x00007f003f28f884: call   0x00007f003f27c5e0  ; OopMap{[96]=Oop rax=Oop off=7721}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@15 (line 456)
                                                ;   {runtime_call}
  0x00007f003f28f889: jmp    0x00007f003f28f2d8
  0x00007f003f28f88e: mov    rdx,rdx
  0x00007f003f28f891: call   0x00007f003f2794a0  ; OopMap{[96]=Oop [152]=Oop off=7734}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@15 (line 456)
                                                ;   {runtime_call}
  0x00007f003f28f896: jmp    0x00007f003f28f2ef
  0x00007f003f28f89b: call   0x00007f003f279000  ; OopMap{[152]=Oop rax=Oop off=7744}
                                                ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@28 (line 456)
                                                ;   {runtime_call}
  0x00007f003f28f8a0: nop
  0x00007f003f28f8a1: nop
  0x00007f003f28f8a2: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f28f8a9: movabs r10,0x0
  0x00007f003f28f8b3: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f28f8ba: movabs r10,0x0
  0x00007f003f28f8c4: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f28f8cb: add    rsp,0xb0
  0x00007f003f28f8d2: pop    rbp
  0x00007f003f28f8d3: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f28f8d8: hlt    
  0x00007f003f28f8d9: hlt    
  0x00007f003f28f8da: hlt    
  0x00007f003f28f8db: hlt    
  0x00007f003f28f8dc: hlt    
  0x00007f003f28f8dd: hlt    
  0x00007f003f28f8de: hlt    
  0x00007f003f28f8df: hlt    
[Stub Code]
  0x00007f003f28f8e0: nop                       ;   {no_reloc}
  0x00007f003f28f8e1: nop
  0x00007f003f28f8e2: nop
  0x00007f003f28f8e3: nop
  0x00007f003f28f8e4: nop
  0x00007f003f28f8e5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28f8ef: jmp    0x00007f003f28f8ef  ;   {runtime_call}
  0x00007f003f28f8f4: nop
  0x00007f003f28f8f5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28f8ff: jmp    0x00007f003f28f8ff  ;   {runtime_call}
  0x00007f003f28f904: nop
  0x00007f003f28f905: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28f90f: jmp    0x00007f003f28f90f  ;   {runtime_call}
  0x00007f003f28f914: nop
  0x00007f003f28f915: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28f91f: jmp    0x00007f003f28f91f  ;   {runtime_call}
  0x00007f003f28f924: nop
  0x00007f003f28f925: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28f92f: jmp    0x00007f003f28f92f  ;   {runtime_call}
  0x00007f003f28f934: nop
  0x00007f003f28f935: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28f93f: jmp    0x00007f003f28f93f  ;   {runtime_call}
  0x00007f003f28f944: nop
  0x00007f003f28f945: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28f94f: jmp    0x00007f003f28f94f  ;   {runtime_call}
  0x00007f003f28f954: nop
  0x00007f003f28f955: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28f95f: jmp    0x00007f003f28f95f  ;   {runtime_call}
  0x00007f003f28f964: nop
  0x00007f003f28f965: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28f96f: jmp    0x00007f003f28f96f  ;   {runtime_call}
  0x00007f003f28f974: nop
  0x00007f003f28f975: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28f97f: jmp    0x00007f003f28f97f  ;   {runtime_call}
  0x00007f003f28f984: nop
  0x00007f003f28f985: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28f98f: jmp    0x00007f003f28f98f  ;   {runtime_call}
  0x00007f003f28f994: nop
  0x00007f003f28f995: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28f99f: jmp    0x00007f003f28f99f  ;   {runtime_call}
  0x00007f003f28f9a4: nop
  0x00007f003f28f9a5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28f9af: jmp    0x00007f003f28f9af  ;   {runtime_call}
  0x00007f003f28f9b4: nop
  0x00007f003f28f9b5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28f9bf: jmp    0x00007f003f28f9bf  ;   {runtime_call}
  0x00007f003f28f9c4: nop
  0x00007f003f28f9c5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28f9cf: jmp    0x00007f003f28f9cf  ;   {runtime_call}
  0x00007f003f28f9d4: nop
  0x00007f003f28f9d5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28f9df: jmp    0x00007f003f28f9df  ;   {runtime_call}
  0x00007f003f28f9e4: nop
  0x00007f003f28f9e5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f28f9ef: jmp    0x00007f003f28f9ef  ;   {runtime_call}
[Exception Handler]
  0x00007f003f28f9f4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f28f9f9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f28f9fe: sub    rsp,0x80
  0x00007f003f28fa05: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f28fa0a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f28fa0f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f28fa14: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f28fa19: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f28fa1e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f28fa23: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f28fa28: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f28fa2d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f28fa32: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f28fa37: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f28fa3c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f28fa41: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f28fa46: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f28fa4b: mov    QWORD PTR [rsp],r15
  0x00007f003f28fa4f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f28fa59: movabs rsi,0x7f003f28f9f9  ;   {internal_word}
  0x00007f003f28fa63: mov    rdx,rsp
  0x00007f003f28fa66: and    rsp,0xfffffffffffffff0
  0x00007f003f28fa6a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f28fa6f: hlt    
[Deopt Handler Code]
  0x00007f003f28fa70: movabs r10,0x7f003f28fa70  ;   {section_word}
  0x00007f003f28fa7a: push   r10
  0x00007f003f28fa7c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f28fa81: hlt    
  0x00007f003f28fa82: hlt    
  0x00007f003f28fa83: hlt    
  0x00007f003f28fa84: hlt    
  0x00007f003f28fa85: hlt    
  0x00007f003f28fa86: hlt    
  0x00007f003f28fa87: hlt    
<nmethod compile_id='14' compiler='C1' level='3' entry='0x00007f003f28da60' size='11096' address='0x00007f003f28d790' relocation_offset='312' insts_offset='720' stub_offset='8528' scopes_data_offset='8984' scopes_pcs_offset='9728' dependencies_offset='11056' nul_chk_table_offset='11064' oops_offset='8952' metadata_offset='8960' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='227' count='627' backedge_count='21945' iicount='627' stamp='0.113'/>
<writer thread='139639490488064'/>
<task_queued compile_id='19' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='2560' iicount='2560' level='1' stamp='0.113' comment='tiered' hot_count='2560'/>
<writer thread='139637818533632'/>
[Loaded sun.nio.fs.UnixFileSystemProvider from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.fs.LinuxFileSystemProvider from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139639490488064'/>
<task_queued compile_id='20' method='java/lang/String length ()I' bytes='6' count='1410' iicount='1410' level='1' stamp='0.114' comment='tiered' hot_count='1410'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/Object.&lt;init&gt;  [0x00007f003f290480, 0x00007f003f290590]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f290480: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f290484: shl    r10,0x3
  0x00007f003f290488: cmp    r10,rax
  0x00007f003f29048b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f290491: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f29049c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2904a0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2904a7: push   rbp
  0x00007f003f2904a8: sub    rsp,0x30
  0x00007f003f2904ac: mov    rdi,rsi            ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x00007f003f2904af: mov    QWORD PTR [rsp+0x20],rsi
  0x00007f003f2904b4: call   0x00007f003f279220  ; OopMap{[32]=Oop off=57}
                                                ;*return {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x00007f003f2904b9: add    rsp,0x30
  0x00007f003f2904bd: pop    rbp
  0x00007f003f2904be: test   DWORD PTR [rip+0x1b131c3c],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2904c4: ret    
  0x00007f003f2904c5: nop
<writer thread='139637818533632'/>
[Loaded java.nio.file.FileSystem from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
  0x00007f003f2904c6: nop
  0x00007f003f2904c7: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2904ce: movabs r10,0x0
  0x00007f003f2904d8: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2904df: movabs r10,0x0
  0x00007f003f2904e9: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2904f0: add    rsp,0x30
  0x00007f003f2904f4: pop    rbp
  0x00007f003f2904f5: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2904fa: hlt    
  0x00007f003f2904fb: hlt    
  0x00007f003f2904fc: hlt    
  0x00007f003f2904fd: hlt    
  0x00007f003f2904fe: hlt    
  0x00007f003f2904ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f290500: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f290505: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f29050a: sub    rsp,0x80
  0x00007f003f290511: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f290516: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29051b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f290520: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f290525: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f29052a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f29052f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f290534: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f290539: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f29053e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f290543: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f290548: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f29054d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f290552: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f290557: mov    QWORD PTR [rsp],r15
  0x00007f003f29055b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f290565: movabs rsi,0x7f003f290505  ;   {internal_word}
  0x00007f003f29056f: mov    rdx,rsp
  0x00007f003f290572: and    rsp,0xfffffffffffffff0
  0x00007f003f290576: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29057b: hlt    
[Deopt Handler Code]
  0x00007f003f29057c: movabs r10,0x7f003f29057c  ;   {section_word}
  0x00007f003f290586: push   r10
  0x00007f003f290588: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f29058d: hlt    
  0x00007f003f29058e: hlt    
  0x00007f003f29058f: hlt    
<nmethod compile_id='19' compiler='C1' level='1' entry='0x00007f003f290480' size='744' address='0x00007f003f290310' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='672' dependencies_offset='736' metadata_offset='640' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='2773' iicount='2773' stamp='0.114'/>
<make_not_entrant thread='139637817480960' compile_id='4' compiler='C1' level='3' stamp='0.114'/>
<writer thread='139639490488064'/>
<task_queued compile_id='21' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='227' count='833' backedge_count='29566' iicount='833' level='4' stamp='0.114' comment='tiered' hot_count='833'/>
<writer thread='139637818533632'/>
[Loaded sun.nio.fs.UnixFileSystem from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.fs.LinuxFileSystem from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/String.length  [0x00007f003f290780, 0x00007f003f290890]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003876a538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f290780: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f290784: shl    r10,0x3
  0x00007f003f290788: cmp    r10,rax
  0x00007f003f29078b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f290791: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f29079c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2907a0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2907a7: push   rbp
  0x00007f003f2907a8: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@0 (line 623)

  0x00007f003f2907ac: mov    eax,DWORD PTR [rsi+0xc]
  0x00007f003f2907af: shl    rax,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 623)

  0x00007f003f2907b3: mov    eax,DWORD PTR [rax+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x00007f003f2907c2
  0x00007f003f2907b6: add    rsp,0x30
  0x00007f003f2907ba: pop    rbp
  0x00007f003f2907bb: test   DWORD PTR [rip+0x1b13193f],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2907c1: ret    
  0x00007f003f2907c2: call   0x00007f003f279000  ; OopMap{off=71}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x00007f003f2907c7: nop
  0x00007f003f2907c8: nop
  0x00007f003f2907c9: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2907d0: movabs r10,0x0
  0x00007f003f2907da: mov    QWORD PTR [r15+0x2c0],
<writer thread='139637818533632'/>
[Loaded sun.nio.fs.AbstractPath from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
r10
  0x00007f003f2907e1: movabs r10,0x0
  0x00007f003f2907eb: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2907f2: add    rsp,0x30
  0x00007f003f2907f6: pop    rbp
  0x00007f003f2907f7: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2907fc: hlt    
  0x00007f003f2907fd: hlt    
  0x00007f003f2907fe: hlt    
  0x00007f003f2907ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f290800: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f290805: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f29080a: sub    rsp,0x80
  0x00007f003f290811: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f290816: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29081b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f290820: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f290825: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f29082a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f29082f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f290834: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f290839: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f29083e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f290843: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f290848: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f29084d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f290852: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f290857: mov    QWORD PTR [rsp],r15
  0x00007f003f29085b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f290865: movabs rsi,0x7f003f290805  ;   {internal_word}
  0x00007f003f29086f: mov    rdx,rsp
  0x00007f003f290872: and    rsp,0xfffffffffffffff0
  0x00007f003f290876: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29087b: hlt    
[Deopt Handler Code]
  0x00007f003f29087c: movabs r10,0x7f003f29087c  ;   {section_word}
  0x00007f003f290886: push   r10
  0x00007f003f290888: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f29088d: hlt    
  0x00007f003f29088e: hlt    
  0x00007f003f29088f: hlt    
<nmethod compile_id='20' compiler='C1' level='1' entry='0x00007f003f290780' size='800' address='0x00007f003f290610' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='680' dependencies_offset='776' nul_chk_table_offset='784' metadata_offset='640' method='java/lang/String length ()I' bytes='6' count='2297' iicount='2298' stamp='0.115'/>
<make_not_entrant thread='139637817480960' compile_id='2' compiler='C1' level='3' stamp='0.115'/>
<writer thread='139637818533632'/>
[Loaded sun.nio.fs.UnixPath from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
com/github/marschall/charsequences/ParseUuidCompilation.parse  [0x00007f003f290ac0, 0x00007f003f290c48]  392 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038b66428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f290ac0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f290ac4: shl    r10,0x3
  0x00007f003f290ac8: cmp    r10,rax
  0x00007f003f290acb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f290ad1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f290adc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f290ae0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f290ae7: push   rbp
  0x00007f003f290ae8: sub    rsp,0x30
  0x00007f003f290aec: movabs rdi,0x7f0038b69a30  ;   {metadata(method data for {method} {0x00007f0038b66428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f290af6: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f290afc: add    ebx,0x8
<writer thread='139637818533632'/>
[Loaded sun.nio.fs.Util from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>

  0x00007f003f290aff: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f290b05: movabs rdi,0x7f0038b66428  ;   {metadata({method} {0x00007f0038b66428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f290b0f: and    ebx,0x1ff8
  0x00007f003f290b15: cmp    ebx,0x0
  0x00007f003f290b18: je     0x00007f003f290b50  ;*ldc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@0 (line 21)

  0x00007f003f290b1e: movabs rsi,0x7f0038b69a30  ;   {metadata(method data for {method} {0x00007f0038b66428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f290b28: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f290b30: movabs rsi,0x670be2918    ;*invokestatic uuidFromCharSequence {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {oop(&quot;ba226cf7-d156-4b18-a78a-094736208cc9&quot;)}
  0x00007f003f290b3a: nop
  0x00007f003f290b3b: nop
  0x00007f003f290b3c: nop
  0x00007f003f290b3d: nop
  0x00007f003f290b3e: nop
  0x00007f003f290b3f: call   0x00007f003f1c5160  ; OopMap{off=132}
                                                ;*invokestatic uuidFromCharSequence {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {static_call}
  0x00007f003f290b44: add    rsp,0x30
  0x00007f003f290b48: pop    rbp
  0x00007f003f290b49: test   DWORD PTR [rip+0x1b1315b1],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f290b4f: ret    
  0x00007f003f290b50: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f290b55: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f290b5d: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=162}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@-1 (line 21)
                                                ;   {runtime_call}
  0x00007f003f290b62: jmp    0x00007f003f290b1e
  0x00007f003f290b64: nop
  0x00007f003f290b65: nop
  0x00007f003f290b66: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f290b6d: movabs r10,0x0
  0x00007f003f290b77: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f290b7e: movabs r10,0x0
  0x00007f003f290b88: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f290b8f: add    rsp,0x30
  0x00007f003f290b93: pop    rbp
  0x00007f003f290b94: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f290b99: hlt    
  0x00007f003f290b9a: hlt    
  0x00007f003f290b9b: hlt    
  0x00007f003f290b9c: hlt    
  0x00007f003f290b9d: hlt    
  0x00007f003f290b9e: hlt    
  0x00007f003f290b9f: hlt    
[Stub Code]
  0x00007f003f290ba0: nop                       ;   {no_reloc}
  0x00007f003f290ba1: nop
  0x00007f003f290ba2: nop
  0x00007f003f290ba3: nop
  0x00007f003f290ba4: nop
  0x00007f003f290ba5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f290baf: jmp    0x00007f003f290baf  ;   {runtime_call}
[Exception Handler]
  0x00007f003f290bb4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f290bb9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f290bbe: sub    rsp,0x80
  0x00007f003f290bc5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f290bca: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f290bcf: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f290bd4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f290bd9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f290bde: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f290be3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f290be8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f290bed: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f290bf2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f290bf7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f290bfc: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f290c01: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f290c06: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f290c0b: mov    QWORD PTR [rsp],r15
  0x00007f003f290c0f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f290c19: movabs rsi,0x7f003f290bb9  ;   {internal_word}
  0x00007f003f290c23: mov    rdx,rsp
  0x00007f003f290c26: and    rsp,0xfffffffffffffff0
  0x00007f003f290c2a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f290c2f: hlt    
[Deopt Handler Code]
  0x00007f003f290c30: movabs r10,0x7f003f290c30  ;   {section_word}
  0x00007f003f290c3a: push   r10
  0x00007f003f290c3c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f290c41: hlt    
  0x00007f003f290c42: hlt    
  0x00007f003f290c43: hlt    
  0x00007f003f290c44: hlt    
  0x00007f003f290c45: hlt    
  0x00007f003f290c46: hlt    
  0x00007f003f290c47: hlt    
<nmethod compile_id='16' compiler='C1' level='3' entry='0x00007f003f290ac0' size='912' address='0x00007f003f290950' relocation_offset='312' insts_offset='368' stub_offset='592' scopes_data_offset='776' scopes_pcs_offset='808' dependencies_offset='904' oops_offset='760' metadata_offset='768' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='2455' iicount='2456' stamp='0.115'/>
----------------------------------------------------------------------
java/util/UUID.&lt;init&gt;  [0x00007f003f290e80, 0x00007f003f291030]  432 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00389ce900} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;
  # this:     rsi:rsi   = &apos;java/util/UUID&apos;
  # parm0:    rdx:rdx   = long
  # parm1:    rcx:rcx   = long
  #           [sp+0x40]  (sp of caller)
  0x00007f003f290e80: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f290e84: shl    r10,0x3
  0x00007f003f290e88: cmp    r10,rax
  0x00007f003f290e8b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f290e91: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f290e9c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f290ea0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f290ea7: push   rbp
  0x00007f003f290ea8: sub    rsp,0x30
  0x00007f003f290eac: movabs rdi,0x7f00389d3fe0  ;   {metadata(method data for {method} {0x00007f00389ce900} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007f003f290eb6: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f290ebc: add    ebx,0x8
  0x00007f003f290ebf: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f290ec5: movabs rdi,0x7f00389ce900  ;   {metadata({method} {0x00007f00389ce900} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007f003f290ecf: and    ebx,0x1ff8
  0x00007f003f290ed5: cmp    ebx,0x0
  0x00007f003f290ed8: je     0x00007f003f290f39  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.UUID::&lt;init&gt;@0 (line 128)
<writer thread='139637818533632'/>
[Loaded sun.nio.fs.UnixNativeDispatcher from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>

  0x00007f003f290ede: mov    rdi,rsi
  0x00007f003f290ee1: movabs rbx,0x7f00389d3fe0  ;   {metadata(method data for {method} {0x00007f00389ce900} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007f003f290eeb: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f290ef3: movabs rdi,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f290efd: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f290f03: add    ebx,0x8
  0x00007f003f290f06: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f290f0c: movabs rdi,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f290f16: and    ebx,0x7ffff8
  0x00007f003f290f1c: cmp    ebx,0x0
  0x00007f003f290f1f: je     0x00007f003f290f4d
  0x00007f003f290f25: mov    QWORD PTR [rsi+0x10],rdx  ;*putfield mostSigBits {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.UUID::&lt;init&gt;@6 (line 129)

  0x00007f003f290f29: mov    QWORD PTR [rsi+0x18],rcx  ;*putfield leastSigBits {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.UUID::&lt;init&gt;@11 (line 130)

  0x00007f003f290f2d: add    rsp,0x30
  0x00007f003f290f31: pop    rbp
  0x00007f003f290f32: test   DWORD PTR [rip+0x1b1311c8],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f290f38: ret    
  0x00007f003f290f39: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f290f3e: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f290f46: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=203}
                                                ;*synchronization entry
                                                ; - java.util.UUID::&lt;init&gt;@-1 (line 128)
                                                ;   {runtime_call}
  0x00007f003f290f4b: jmp    0x00007f003f290ede
  0x00007f003f290f4d: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f290f52: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f290f5a: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=223}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.UUID::&lt;init&gt;@1 (line 128)
                                                ;   {runtime_call}
  0x00007f003f290f5f: jmp    0x00007f003f290f25
  0x00007f003f290f61: nop
  0x00007f003f290f62: nop
  0x00007f003f290f63: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f290f6a: movabs r10,0x0
  0x00007f003f290f74: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f290f7b: movabs r10,0x0
  0x00007f003f290f85: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f290f8c: add    rsp,0x30
  0x00007f003f290f90: pop    rbp
  0x00007f003f290f91: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f290f96: hlt    
  0x00007f003f290f97: hlt    
  0x00007f003f290f98: hlt    
  0x00007f003f290f99: hlt    
  0x00007f003f290f9a: hlt    
  0x00007f003f290f9b: hlt    
  0x00007f003f290f9c: hlt    
  0x00007f003f290f9d: hlt    
  0x00007f003f290f9e: hlt    
  0x00007f003f290f9f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f290fa0: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f290fa5: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f290faa: sub    rsp,0x80
  0x00007f003f290fb1: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f290fb6: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f290fbb: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f290fc0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f290fc5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f290fca: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f290fcf: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f290fd4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f290fd9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f290fde: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f290fe3: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f290fe8: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f290fed: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f290ff2: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f290ff7: mov    QWORD PTR [rsp],r15
  0x00007f003f290ffb: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f291005: movabs rsi,0x7f003f290fa5  ;   {internal_word}
  0x00007f003f29100f: mov    rdx,rsp
  0x00007f003f291012: and    rsp,0xfffffffffffffff0
  0x00007f003f291016: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29101b: hlt    
[Deopt Handler Code]
  0x00007f003f29101c: movabs r10,0x7f003f29101c  ;   {section_word}
  0x00007f003f291026: push   r10
  0x00007f003f291028: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f29102d: hlt    
  0x00007f003f29102e: hlt    
  0x00007f003f29102f: hlt    
<nmethod compile_id='17' compiler='C1' level='3' entry='0x00007f003f290e80' size='992' address='0x00007f003f290d10' relocation_offset='312' insts_offset='368' stub_offset='656' scopes_data_offset='816' scopes_pcs_offset='872' dependencies_offset='984' metadata_offset='800' method='java/util/UUID &lt;init&gt; (JJ)V' bytes='15' count='3214' iicount='3215' stamp='0.116'/>
<writer thread='139637818533632'/>
[Loaded sun.nio.fs.UnixNativeDispatcher$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.file.attribute.BasicFileAttributes from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.file.attribute.PosixFileAttributes from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.fs.UnixFileAttributes from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.fs.UnixFileStoreAttributes from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.fs.UnixMountEntry from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.net.URI from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.net.URI$Parser from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<task_queued compile_id='22' method='java/lang/String indexOf (I)I' bytes='7' count='256' iicount='256' level='3' stamp='0.118' comment='tiered' hot_count='256'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/String.indexOf  [0x00007f003f293200, 0x00007f003f293388]  392 bytes
[Entry Point]
<writer thread='139637818533632'/>
[Loaded java.nio.file.OpenOption from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
[Constants]
  # {method} {0x00007f003876bee8} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f003f293200: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f293204: shl    r10,0x3
  0x00007f003f293208: cmp    r10,rax
  0x00007f003f29320b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f293211: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f29321c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f293220: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f293227: push   rbp
  0x00007f003f293228: sub    rsp,0x30
  0x00007f003f29322c: movabs rcx,0x7f0038a014d0  ;   {metadata(method data for {method} {0x00007f003876bee8} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f293236: mov    edi,DWORD PTR [rcx+0xfc]
  0x00007f003f29323c: add    edi,0x8
  0x00007f003f29323f: mov    DWORD PTR [rcx+0xfc],edi
  0x00007f003f293245: movabs rcx,0x7f003876bee8  ;   {metadata({method} {0x00007f003876bee8} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f29324f: and    edi,0x1ff8
  0x00007f003f293255: cmp    edi,0x0
  0x00007f003f293258: je     0x00007f003f293290  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x00007f003f29325e: mov    rcx,rsi
  0x00007f003f293261: movabs rdi,0x7f0038a014d0  ;   {metadata(method data for {method} {0x00007f003876bee8} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f29326b: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f293273: mov    ecx,0x0            ;*invokevirtual indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x00007f003f293278: nop
  0x00007f003f293279: nop
  0x00007f003f29327a: nop
  0x00007f003f29327b: nop
  0x00007f003f29327c: nop
  0x00007f003f29327d: nop
  0x00007f003f29327e: nop
  0x00007f003f29327f: call   0x00007f003f1c4d60  ; OopMap{off=132}
                                                ;*invokevirtual indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x00007f003f293284: add    rsp,0x30
  0x00007f003f293288: pop    rbp
  0x00007f003f293289: test   DWORD PTR [rip+0x1b12ee71],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29328f: ret    
  0x00007f003f293290: mov    QWORD PTR [rsp+0x8],rcx
  0x00007f003f293295: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f29329d: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=162}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x00007f003f2932a2: jmp    0x00007f003f29325e
  0x00007f003f2932a4: nop
  0x00007f003f2932a5: nop
  0x00007f003f2932a6: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2932ad: movabs r10,0x0
  0x00007f003f2932b7: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2932be: movabs r10,0x0
  0x00007f003f2932c8: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2932cf: add    rsp,0x30
  0x00007f003f2932d3: pop    rbp
  0x00007f003f2932d4: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2932d9: hlt    
  0x00007f003f2932da: hlt    
  0x00007f003f2932db: hlt    
  0x00007f003f2932dc: hlt    
  0x00007f003f2932dd: hlt    
  0x00007f003f2932de: hlt    
  0x00007f003f2932df: hlt    
[Stub Code]
  0x00007f003f2932e0: nop                       ;   {no_reloc}
  0x00007f003f2932e1: nop
  0x00007f003f2932e2: nop
  0x00007f003f2932e3: nop
  0x00007f003f2932e4: nop
  0x00007f003f2932e5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2932ef: jmp    0x00007f003f2932ef  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2932f4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2932f9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2932fe: sub    rsp,0x80
  0x00007f003f293305: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f29330a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29330f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f293314: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f293319: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f29331e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f293323: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f293328: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f29332d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f293332: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f293337: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f29333c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f293341: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f293346: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f29334b: mov    QWORD PTR [rsp],r15
  0x00007f003f29334f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f293359: movabs rsi,0x7f003f2932f9  ;   {internal_word}
  0x00007f003f293363: mov    rdx,rsp
  0x00007f003f293366: and    rsp,0xfffffffffffffff0
  0x00007f003f29336a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29336f: hlt    
[Deopt Handler Code]
  0x00007f003f293370: movabs r10,0x7f003f293370  ;   {section_word}
  0x00007f003f29337a: push   r10
  0x00007f003f29337c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f293381: hlt    
  0x00007f003f293382: hlt    
  0x00007f003f293383: hlt    
  0x00007f003f293384: hlt    
  0x00007f003f293385: hlt    
  0x00007f003f293386: hlt    
  0x00007f003f293387: hlt    
<nmethod compile_id='22' compiler='C1' level='3' entry='0x00007f003f293200' size='912' address='0x00007f003f293090' relocation_offset='312' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='808' dependencies_offset='904' metadata_offset='760' method='java/lang/String indexOf (I)I' bytes='7' count='268' iicount='268' stamp='0.118'/>
<writer thread='139639490488064'/>
<task_queued compile_id='23' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='5632' iicount='5632' level='4' stamp='0.118' comment='tiered' hot_count='5632'/>
<writer thread='139637818533632'/>
[Loaded java.nio.file.CopyOption from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.file.LinkOption from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.file.Files from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.file.attribute.DosFileAttributes from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.file.attribute.AttributeView from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.file.attribute.FileAttributeView from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.file.attribute.BasicFileAttributeView from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.file.attribute.DosFileAttributeView from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.file.attribute.UserDefinedFileAttributeView from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.fs.UnixFileAttributeViews from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.fs.DynamicFileAttributeView from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.fs.AbstractBasicFileAttributeView from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.fs.UnixFileAttributeViews$Basic from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.fs.NativeBuffers from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.fs.NativeBuffer from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.fs.NativeBuffer$Deallocator from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.fs.UnixFileAttributes$UnixAsBasicFileAttributes from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.file.AccessMode from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.fs.UnixUriUtils from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<task_queued compile_id='24' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='477' iicount='477' level='3' stamp='0.120' comment='tiered' hot_count='477'/>
<task_queued compile_id='25' method='java/net/URI$Parser charAt (I)C' bytes='9' count='256' iicount='256' level='3' stamp='0.120' comment='tiered' hot_count='256'/>
<task_queued compile_id='26' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='256' iicount='256' level='3' stamp='0.120' comment='tiered' hot_count='256'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.ensureCapacityInternal  [0x00007f003f293600, 0x00007f003f293a78]  1144 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00387eabe0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = int
  #           [sp+0xb0]  (sp of caller)
  0x00007f003f293600: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f293604: shl    r10,0x3
<writer thread='139637818533632'/>
[Loaded java.nio.file.attribute.FileAttribute from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>

  0x00007f003f293608: cmp    r10,rax
  0x00007f003f29360b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f293611: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f29361c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f293620: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f293627: push   rbp
  0x00007f003f293628: sub    rsp,0xa0
  0x00007f003f29362f: movabs rdi,0x7f00389cbde0  ;   {metadata(method data for {method} {0x00007f00387eabe0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f293639: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f29363f: add    ebx,0x8
  0x00007f003f293642: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f293648: movabs rdi,0x7f00387eabe0  ;   {metadata({method} {0x00007f00387eabe0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f293652: and    ebx,0x1ff8
  0x00007f003f293658: cmp    ebx,0x0
  0x00007f003f29365b: je     0x00007f003f29390f  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 123)

  0x00007f003f293661: mov    edi,DWORD PTR [rsi+0x10]
  0x00007f003f293664: shl    rdi,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x00007f003f293668: mov    ebx,DWORD PTR [rdi+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x00007f003f293926
  0x00007f003f29366b: mov    rax,rdx
  0x00007f003f29366e: sub    eax,ebx
  0x00007f003f293670: cmp    eax,0x0
  0x00007f003f293673: movabs rax,0x7f00389cbde0  ;   {metadata(method data for {method} {0x00007f00387eabe0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f29367d: movabs rcx,0x130
  0x00007f003f293687: jle    0x00007f003f293697
  0x00007f003f29368d: movabs rcx,0x140
  0x00007f003f293697: mov    r8,QWORD PTR [rax+rcx*1]
  0x00007f003f29369b: lea    r8,[r8+0x1]
  0x00007f003f29369f: mov    QWORD PTR [rax+rcx*1],r8
  0x00007f003f2936a3: jle    0x00007f003f293900  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)

  0x00007f003f2936a9: mov    DWORD PTR [rsp+0x78],ebx
  0x00007f003f2936ad: mov    QWORD PTR [rsp+0x80],rdi
  0x00007f003f2936b5: mov    rax,rsi
  0x00007f003f2936b8: movabs rcx,0x7f00389cbde0  ;   {metadata(method data for {method} {0x00007f00387eabe0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2936c2: add    QWORD PTR [rcx+0x150],0x1
  0x00007f003f2936ca: mov    rax,rsi
  0x00007f003f2936cd: mov    rsi,rax            ;*invokespecial newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00007f003f2936d0: mov    QWORD PTR [rsp+0x88],rax
  0x00007f003f2936d8: nop
  0x00007f003f2936d9: nop
  0x00007f003f2936da: nop
  0x00007f003f2936db: nop
  0x00007f003f2936dc: nop
  0x00007f003f2936dd: nop
  0x00007f003f2936de: nop
  0x00007f003f2936df: call   0x00007f003f1c4d60  ; OopMap{[136]=Oop [128]=Oop off=228}
                                                ;*invokespecial newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x00007f003f2936e4: mov    r8,rax             ;*invokespecial newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00007f003f2936e7: movabs rbx,0x7f00389cbde0  ;   {metadata(method data for {method} {0x00007f00387eabe0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2936f1: add    QWORD PTR [rbx+0x160],0x1
  0x00007f003f2936f9: movabs rbx,0x7f00389cc188  ;   {metadata(method data for {method} {0x00007f00388a3750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f293703: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f293709: add    edx,0x8
  0x00007f003f29370c: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f293712: movabs rbx,0x7f00388a3750  ;   {metadata({method} {0x00007f00388a3750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f29371c: and    edx,0x7ffff8
  0x00007f003f293722: cmp    edx,0x0
  0x00007f003f293725: je     0x00007f003f29392b
  0x00007f003f29372b: mov    rbx,r8
  0x00007f003f29372e: movabs rdx,0x7c00001f8    ;   {metadata({type array char})}
  0x00007f003f293738: movsxd rbx,ebx
  0x00007f003f29373b: mov    rdi,rbx
  0x00007f003f29373e: cmp    rbx,0xffffff
  0x00007f003f293745: ja     0x00007f003f293942
  0x00007f003f29374b: movabs rsi,0x17
  0x00007f003f293755: lea    rsi,[rsi+rbx*2]
  0x00007f003f293759: and    rsi,0xfffffffffffffff8
  0x00007f003f29375d: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f293761: lea    rsi,[rax+rsi*1]
  0x00007f003f293765: cmp    rsi,QWORD PTR [r15+0x70]
  0x00007f003f293769: ja     0x00007f003f293942
  0x00007f003f29376f: mov    QWORD PTR [r15+0x60],rsi
  0x00007f003f293773: sub    rsi,rax
  0x00007f003f293776: mov    QWORD PTR [rax],0x1
  0x00007f003f29377d: mov    rcx,rdx
  0x00007f003f293780: shr    rcx,0x3
  0x00007f003f293784: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f293787: mov    DWORD PTR [rax+0xc],ebx
  0x00007f003f29378a: sub    rsi,0x10
  0x00007f003f29378e: je     0x00007f003f2937a5
  0x00007f003f293794: xor    rbx,rbx
  0x00007f003f293797: shr    rsi,0x3
  0x00007f003f29379b: mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x00007f003f2937a0: dec    rsi
  0x00007f003f2937a3: jne    0x00007f003f29379b  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00007f003f2937a5: movabs rsi,0x7f00389cc188  ;   {metadata(method data for {method} {0x00007f00388a3750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f2937af: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2937b7: movabs rsi,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2937c1: mov    edx,DWORD PTR [rsi+0xfc]
  0x00007f003f2937c7: add    edx,0x8
  0x00007f003f2937ca: mov    DWORD PTR [rsi+0xfc],edx
  0x00007f003f2937d0: movabs rsi,0x7f003887a8b8  ;   {metadata({method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2937da: and    edx,0x7ffff8
  0x00007f003f2937e0: cmp    edx,0x0
  0x00007f003f2937e3: je     0x00007f003f29394c
  0x00007f003f2937e9: mov    ebx,DWORD PTR [rsp+0x78]
  0x00007f003f2937ed: cmp    ebx,r8d
  0x00007f003f2937f0: movabs rsi,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2937fa: movabs rdx,0x130
  0x00007f003f293804: jg     0x00007f003f293814
  0x00007f003f29380a: movabs rdx,0x140
  0x00007f003f293814: mov    rcx,QWORD PTR [rsi+rdx*1]
  0x00007f003f293818: lea    rcx,[rcx+0x1]
  0x00007f003f29381c: mov    QWORD PTR [rsi+rdx*1],rcx
  0x00007f003f293820: jg     0x00007f003f29383b  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00007f003f293826: movabs rsi,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f293830: inc    DWORD PTR [rsi+0x150]
  0x00007f003f293836: jmp    0x00007f003f29383e  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00007f003f29383b: mov    rbx,r8             ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00007f003f29383e: mov    rdi,QWORD PTR [rsp+0x80]
  0x00007f003f293846: movabs rsi,0x7f00389cc188  ;   {metadata(method data for {method} {0x00007f00388a3750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f293850: add    QWORD PTR [rsi+0x140],0x1
  0x00007f003f293858: mov    rsi,rdi
  0x00007f003f29385b: mov    edx,0x0
  0x00007f003f293860: mov    rcx,rax
  0x00007f003f293863: mov    r8d,0x0
  0x00007f003f293869: mov    r9,rbx
  0x00007f003f29386c: mov    QWORD PTR [rsp+0x90],rax
  0x00007f003f293874: lea    rdi,[rdx+r9*1]
  0x00007f003f293878: cmp    edi,DWORD PTR [rsi+0xc]
  0x00007f003f29387b: ja     0x00007f003f293963
  0x00007f003f293881: lea    rdi,[r8+r9*1]
  0x00007f003f293885: cmp    edi,DWORD PTR [rcx+0xc]
  0x00007f003f293888: ja     0x00007f003f293963
  0x00007f003f29388e: test   r9d,r9d
  0x00007f003f293891: jl     0x00007f003f293963
  0x00007f003f293897: je     0x00007f003f2938d3
  0x00007f003f29389d: movsxd rdx,edx
  0x00007f003f2938a0: movsxd r8,r8d
  0x00007f003f2938a3: lea    rdi,[rsi+rdx*2+0x10]
  0x00007f003f2938a8: lea    rsi,[rcx+r8*2+0x10]
  0x00007f003f2938ad: mov    rdx,r9
  0x00007f003f2938b0: test   esp,0xf
  0x00007f003f2938b6: je     0x00007f003f2938ce
  0x00007f003f2938bc: sub    rsp,0x8
  0x00007f003f2938c0: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007f003f2938c5: add    rsp,0x8
  0x00007f003f2938c9: jmp    0x00007f003f2938d3
  0x00007f003f2938ce: call   Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00007f003f2938d3: mov    rax,QWORD PTR [rsp+0x90]
  0x00007f003f2938db: mov    rsi,QWORD PTR [rsp+0x88]
  0x00007f003f2938e3: mov    r10,rax
  0x00007f003f2938e6: shr    r10,0x3
  0x00007f003f2938ea: mov    DWORD PTR [rsi+0x10],r10d
  0x00007f003f2938ee: shr    rsi,0x9
  0x00007f003f2938f2: movabs rdi,0x7f003ae7c000
  0x00007f003f2938fc: mov    BYTE PTR [rsi+rdi*1],0x0  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x00007f003f293900: add    rsp,0xa0
  0x00007f003f293907: pop    rbp
  0x00007f003f293908: test   DWORD PTR [rip+0x1b12e7f2],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29390e: ret    
  0x00007f003f29390f: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f293914: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f29391c: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=801}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ;   {runtime_call}
  0x00007f003f293921: jmp    0x00007f003f293661
  0x00007f003f293926: call   0x00007f003f279000  ; OopMap{rsi=Oop rdi=Oop off=811}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x00007f003f29392b: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f293930: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f293938: call   0x00007f003f27d5e0  ; OopMap{[136]=Oop [128]=Oop off=829}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00007f003f29393d: jmp    0x00007f003f29372b
  0x00007f003f293942: call   0x00007f003f27a020  ; OopMap{[136]=Oop [128]=Oop off=839}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00007f003f293947: jmp    0x00007f003f2937a5
  0x00007f003f29394c: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f293951: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f293959: call   0x00007f003f27d5e0  ; OopMap{[136]=Oop [128]=Oop rax=Oop off=862}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00007f003f29395e: jmp    0x00007f003f2937e9
  0x00007f003f293963: nop
  0x00007f003f293964: nop
  0x00007f003f293965: nop
  0x00007f003f293966: nop
  0x00007f003f293967: call   0x00007f003f1c5160  ; OopMap{[136]=Oop [144]=Oop off=876}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {static_call}
  0x00007f003f29396c: jmp    0x00007f003f2938d3
  0x00007f003f293971: nop
  0x00007f003f293972: nop
  0x00007f003f293973: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f29397a: movabs r10,0x0
  0x00007f003f293984: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f29398b: movabs r10,0x0
  0x00007f003f293995: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f29399c: add    rsp,0xa0
  0x00007f003f2939a3: pop    rbp
  0x00007f003f2939a4: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2939a9: hlt    
  0x00007f003f2939aa: hlt    
  0x00007f003f2939ab: hlt    
  0x00007f003f2939ac: hlt    
  0x00007f003f2939ad: hlt    
  0x00007f003f2939ae: hlt    
  0x00007f003f2939af: hlt    
  0x00007f003f2939b0: hlt    
  0x00007f003f2939b1: hlt    
  0x00007f003f2939b2: hlt    
  0x00007f003f2939b3: hlt    
  0x00007f003f2939b4: hlt    
  0x00007f003f2939b5: hlt    
  0x00007f003f2939b6: hlt    
  0x00007f003f2939b7: hlt    
  0x00007f003f2939b8: hlt    
  0x00007f003f2939b9: hlt    
  0x00007f003f2939ba: hlt    
  0x00007f003f2939bb: hlt    
  0x00007f003f2939bc: hlt    
  0x00007f003f2939bd: hlt    
  0x00007f003f2939be: hlt    
  0x00007f003f2939bf: hlt    
[Stub Code]
  0x00007f003f2939c0: nop                       ;   {no_reloc}
  0x00007f003f2939c1: nop
  0x00007f003f2939c2: nop
  0x00007f003f2939c3: nop
  0x00007f003f2939c4: nop
  0x00007f003f2939c5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2939cf: jmp    0x00007f003f2939cf  ;   {runtime_call}
  0x00007f003f2939d4: nop
  0x00007f003f2939d5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2939df: jmp    0x00007f003f2939df  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2939e4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2939e9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2939ee: sub    rsp,0x80
  0x00007f003f2939f5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2939fa: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2939ff: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f293a04: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f293a09: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f293a0e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f293a13: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f293a18: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f293a1d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f293a22: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f293a27: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f293a2c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f293a31: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f293a36: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f293a3b: mov    QWORD PTR [rsp],r15
  0x00007f003f293a3f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f293a49: movabs rsi,0x7f003f2939e9  ;   {internal_word}
  0x00007f003f293a53: mov    rdx,rsp
  0x00007f003f293a56: and    rsp,0xfffffffffffffff0
  0x00007f003f293a5a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f293a5f: hlt    
[Deopt Handler Code]
  0x00007f003f293a60: movabs r10,0x7f003f293a60  ;   {section_word}
  0x00007f003f293a6a: push   r10
  0x00007f003f293a6c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f293a71: hlt    
  0x00007f003f293a72: hlt    
  0x00007f003f293a73: hlt    
  0x00007f003f293a74: hlt    
  0x00007f003f293a75: hlt    
  0x00007f003f293a76: hlt    
  0x00007f003f293a77: hlt    
<nmethod compile_id='24' compiler='C1' level='3' entry='0x00007f003f293600' size='2160' address='0x00007f003f293450' relocation_offset='312' insts_offset='432' stub_offset='1392' scopes_data_offset='1600' scopes_pcs_offset='1800' dependencies_offset='2136' nul_chk_table_offset='2144' metadata_offset='1576' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='630' iicount='630' stamp='0.122'/>
<writer thread='139637818533632'/>
[Loaded sun.nio.fs.UnixFileModeAttribute from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.fs.UnixChannelFactory from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/net/URI$Parser.charAt  [0x00007f003f294060, 0x00007f003f294348]  744 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00389fec70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/net/URI$Parser&apos;
  # this:     rsi:rsi   = &apos;j
<writer thread='139637818533632'/>
[Loaded sun.nio.fs.UnixChannelFactory$Flags from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
ava/net/URI$Parser&apos;
  # parm0:    rdx       = int
  #           [sp+0x60]  (sp of caller)
  0x00007f003f294060: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f294064: shl    r10,0x3
  0x00007f003f294068: cmp    r10,rax
  0x00007f003f29406b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f294071: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f29407c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f294080: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f294087: push   rbp
  0x00007f003f294088: sub    rsp,0x50
  0x00007f003f29408c: mov    rdi,rdx
  0x00007f003f29408f: movabs rax,0x7f0038a14168  ;   {metadata(method data for {method} {0x00007f00389fec70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/net/URI$Parser&apos;)}
  0x00007f003f294099: mov    edx,DWORD PTR [rax+0xfc]
  0x00007f003f29409f: add    edx,0x8
  0x00007f003f2940a2: mov    DWORD PTR [rax+0xfc],edx
  0x00007f003f2940a8: movabs rax,0x7f00389fec70  ;   {metadata({method} {0x00007f00389fec70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/net/URI$Parser&apos;)}
  0x00007f003f2940b2: and    edx,0x1ff8
  0x00007f003f2940b8: cmp    edx,0x0
  0x00007f003f2940bb: je     0x00007f003f2941ee  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI$Parser::charAt@0 (line 2876)

  0x00007f003f2940c1: mov    eax,DWORD PTR [rsi+0x14]
  0x00007f003f2940c4: shl    rax,0x3            ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI$Parser::charAt@1 (line 2876)

  0x00007f003f2940c8: cmp    rax,QWORD PTR [rax]  ;*invokevirtual charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)
                                                ; implicit exception: dispatches to 0x00007f003f294205
  0x00007f003f2940cb: mov    rdx,rax
  0x00007f003f2940ce: movabs rsi,0x7f0038a14168  ;   {metadata(method data for {method} {0x00007f00389fec70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/net/URI$Parser&apos;)}
  0x00007f003f2940d8: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2940e0: movabs rdx,0x7f00389293b8  ;   {metadata(method data for {method} {0x00007f003876a6b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2940ea: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2940f0: add    esi,0x8
  0x00007f003f2940f3: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2940f9: movabs rdx,0x7f003876a6b0  ;   {metadata({method} {0x00007f003876a6b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f294103: and    esi,0x7ffff8
  0x00007f003f294109: cmp    esi,0x0
  0x00007f003f29410c: je     0x00007f003f29420a
  0x00007f003f294112: cmp    edi,0x0
  0x00007f003f294115: movabs rdx,0x7f00389293b8  ;   {metadata(method data for {method} {0x00007f003876a6b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f29411f: movabs rsi,0x130
  0x00007f003f294129: jl     0x00007f003f294139
  0x00007f003f29412f: movabs rsi,0x140
  0x00007f003f294139: mov    rbx,QWORD PTR [rdx+rsi*1]
  0x00007f003f29413d: lea    rbx,[rbx+0x1]
  0x00007f003f294141: mov    QWORD PTR [rdx+rsi*1],rbx
  0x00007f003f294145: jl     0x00007f003f2941ad  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)

  0x00007f003f29414b: mov    eax,DWORD PTR [rax+0xc]
  0x00007f003f29414e: shl    rax,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)

  0x00007f003f294152: mov    edx,DWORD PTR [rax+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)
                                                ; implicit exception: dispatches to 0x00007f003f294221
  0x00007f003f294155: cmp    edi,edx
  0x00007f003f294157: movabs rdx,0x7f00389293b8  ;   {metadata(method data for {method} {0x00007f003876a6b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f294161: movabs rsi,0x150
  0x00007f003f29416b: jl     0x00007f003f29417b
  0x00007f003f294171: movabs rsi,0x160
  0x00007f003f29417b: mov    rbx,QWORD PTR [rdx+rsi*1]
  0x00007f003f29417f: lea    rbx,[rbx+0x1]
  0x00007f003f294183: mov    QWORD PTR [rdx+rsi*1],rbx
  0x00007f003f294187: jge    0x00007f003f2941ad  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)

  0x00007f003f29418d: movsxd rdi,edi
  0x00007f003f294190: movzx  eax,WORD PTR [rax+rdi*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)

  0x00007f003f294195: and    eax,0xffff
  0x00007f003f29419b: and    eax,0xffff
  0x00007f003f2941a1: add    rsp,0x50
  0x00007f003f2941a5: pop    rbp
  0x00007f003f2941a6: test   DWORD PTR [rip+0x1b12df54],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2941ac: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI$Parser::charAt@8 (line 2876)

  0x00007f003f2941ad: data16 xchg ax,ax
  0x00007f003f2941b0: jmp    0x00007f003f294235  ;   {no_reloc}
  0x00007f003f2941b5: add    BYTE PTR [rax],al
  0x00007f003f2941b7: add    BYTE PTR [rax],al
  0x00007f003f2941b9: add    cl,ch
  0x00007f003f2941bb: add    BYTE PTR [rax],0x0
  0x00007f003f2941be: add    BYTE PTR [rax-0x75],cl  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)

  0x00007f003f2941c1: ror    BYTE PTR [rax-0x42],1  ;   {metadata(method data for {method} {0x00007f003876a6b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2941c4: mov    eax,0x389293
  0x00007f003f2941c9: jg     0x00007f003f2941cb
  0x00007f003f2941cb: add    BYTE PTR [rax-0x7d],cl
  0x00007f003f2941ce: xchg   BYTE PTR [rax+0x1],dh
  0x00007f003f2941d1: add    BYTE PTR [rax],al
  0x00007f003f2941d3: add    DWORD PTR [rax-0x75],ecx
  0x00007f003f2941d6: xlat   BYTE PTR ds:[rbx]
  0x00007f003f2941d7: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)

  0x00007f003f2941da: mov    QWORD PTR [rsp+0x38],rax
  0x00007f003f2941df: call   0x00007f003f1c4d60  ; OopMap{[56]=Oop off=388}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)
                                                ;   {optimized virtual_call}
  0x00007f003f2941e4: mov    rax,QWORD PTR [rsp+0x38]
  0x00007f003f2941e9: jmp    0x00007f003f294277
  0x00007f003f2941ee: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2941f3: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2941fb: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=416}
                                                ;*synchronization entry
                                                ; - java.net.URI$Parser::charAt@-1 (line 2876)
                                                ;   {runtime_call}
  0x00007f003f294200: jmp    0x00007f003f2940c1
  0x00007f003f294205: call   0x00007f003f279000  ; OopMap{rax=Oop off=426}
                                                ;*invokevirtual charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)
                                                ;   {runtime_call}
  0x00007f003f29420a: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f29420f: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f294217: call   0x00007f003f27d5e0  ; OopMap{rax=Oop off=444}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)
                                                ;   {runtime_call}
  0x00007f003f29421c: jmp    0x00007f003f294112
  0x00007f003f294221: call   0x00007f003f279000  ; OopMap{rax=Oop off=454}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)
                                                ;   {runtime_call}
  0x00007f003f294226: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f294230: mov    eax,0xa050f00
  0x00007f003f294235: call   0x00007f003f27c5e0  ; OopMap{off=474}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)
                                                ;   {runtime_call}
  0x00007f003f29423a: jmp    0x00007f003f2941b0
  0x00007f003f29423f: mov    rdx,rdx
  0x00007f003f294242: call   0x00007f003f2794a0  ; OopMap{off=487}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.net.URI$Parser::charAt@5 (line 2876)
                                                ;   {runtime_call}
  0x00007f003f294247: jmp    0x00007f003f2941bf
  0x00007f003f29424c: nop
  0x00007f003f29424d: nop
  0x00007f003f29424e: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f294255: movabs r10,0x0
  0x00007f003f29425f: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f294266: movabs r10,0x0
  0x00007f003f294270: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f294277: add    rsp,0x50
  0x00007f003f29427b: pop    rbp
  0x00007f003f29427c: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f294281: hlt    
  0x00007f003f294282: hlt    
  0x00007f003f294283: hlt    
  0x00007f003f294284: hlt    
  0x00007f003f294285: hlt    
  0x00007f003f294286: hlt    
  0x00007f003f294287: hlt    
  0x00007f003f294288: hlt    
  0x00007f003f294289: hlt    
  0x00007f003f29428a: hlt    
  0x00007f003f29428b: hlt    
  0x00007f003f29428c: hlt    
  0x00007f003f29428d: hlt    
  0x00007f003f29428e: hlt    
  0x00007f003f29428f: hlt    
  0x00007f003f294290: hlt    
  0x00007f003f294291: hlt    
  0x00007f003f294292: hlt    
  0x00007f003f294293: hlt    
  0x00007f003f294294: hlt    
  0x00007f003f294295: hlt    
  0x00007f003f294296: hlt    
  0x00007f003f294297: hlt    
  0x00007f003f294298: hlt    
  0x00007f003f294299: hlt    
  0x00007f003f29429a: hlt    
  0x00007f003f29429b: hlt    
  0x00007f003f29429c: hlt    
  0x00007f003f29429d: hlt    
  0x00007f003f29429e: hlt    
  0x00007f003f29429f: hlt    
[Stub Code]
  0x00007f003f2942a0: nop                       ;   {no_reloc}
  0x00007f003f2942a1: nop
  0x00007f003f2942a2: nop
  0x00007f003f2942a3: nop
  0x00007f003f2942a4: nop
  0x00007f003f2942a5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2942af: jmp    0x00007f003f2942af  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2942b4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2942b9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2942be: sub    rsp,0x80
  0x00007f003f2942c5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2942ca: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2942cf: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2942d4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2942d9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2942de: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2942e3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2942e8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2942ed: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2942f2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2942f7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2942fc: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f294301: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f294306: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f29430b: mov    QWORD PTR [rsp],r15
  0x00007f003f29430f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f294319: movabs rsi,0x7f003f2942b9  ;   {internal_word}
  0x00007f003f294323: mov    rdx,rsp
  0x00007f003f294326: and    rsp,0xfffffffffffffff0
  0x00007f003f29432a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29432f: hlt    
[Deopt Handler Code]
  0x00007f003f294330: movabs r10,0x7f003f294330  ;   {section_word}
  0x00007f003f29433a: push   r10
  0x00007f003f29433c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f294341: hlt    
  0x00007f003f294342: hlt    
  0x00007f003f294343: hlt    
  0x00007f003f294344: hlt    
  0x00007f003f294345: hlt    
  0x00007f003f294346: hlt    
  0x00007f003f294347: hlt    
<nmethod compile_id='25' compiler='C1' level='3' entry='0x00007f003f294060' size='1648' address='0x00007f003f293ed0' relocation_offset='312' insts_offset='400' stub_offset='976' scopes_data_offset='1160' scopes_pcs_offset='1296' dependencies_offset='1616' nul_chk_table_offset='1624' metadata_offset='1144' method='java/net/URI$Parser charAt (I)C' bytes='9' count='606' iicount='606' stamp='0.123'/>
<writer thread='139637818533632'/>
[Loaded java.util.HashMap$KeySet from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.HashMap$HashIterator from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.HashMap$KeyIterator from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<task_queued compile_id='27' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='256' iicount='256' level='3' stamp='0.124' comment='tiered' hot_count='256'/>
<task_queued compile_id='28' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='384' iicount='384' level='1' stamp='0.124' comment='tiered' hot_count='384'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/StringBuilder.append  [0x00007f003f294720, 0x00007f003f294cb8]  1432 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00387ef870} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/StringBuilder&apos;
  # parm0:    rdx       = char
  #           [sp+0x100]  (sp of caller)
  0x00007f003f294720: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f294724: shl    r10,0x3
<writer thread='139637818533632'/>
[Loaded java.nio.channels.Channel from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
  0x00007f003f294728: cmp    r10,rax
  0x00007f003f29472b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f294731: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f29473c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f294740: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f294747: push   rbp
  0x00007f003f294748: sub    rsp,0xf0
  0x00007f003f29474f: movabs rdi,0x7f0038a174d8  ;   {metadata(method data for {method} {0x00007f00387ef870} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f294759: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f29475f: add    ebx,0x8
  0x00007f003f294762: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f294768: movabs rdi,0x7f00387ef870  ;   {metadata({method} {0x00007f00387ef870} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f294772: and    ebx,0x1ff8
  0x00007f003f294778: cmp    ebx,0x0
  0x00007f003f29477b: je     0x00007f003f294b0a  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@0 (line 202)

  0x00007f003f294781: mov    rdi,rsi
  0x00007f003f294784: movabs rbx,0x7f0038a174d8  ;   {metadata(method data for {method} {0x00007f00387ef870} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f29478e: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f294796: movabs rdi,0x7f0038a180e0  ;   {metadata(method data for {method} {0x00007f00387ec048} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2947a0: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2947a6: add    ebx,0x8
  0x00007f003f2947a9: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2947af: movabs rdi,0x7f00387ec048  ;   {metadata({method} {0x00007f00387ec048} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2947b9: and    ebx,0x7ffff8
  0x00007f003f2947bf: cmp    ebx,0x0
  0x00007f003f2947c2: je     0x00007f003f294b21
  0x00007f003f2947c8: mov    edi,DWORD PTR [rsi+0xc]  ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007f003f2947cb: inc    edi
  0x00007f003f2947cd: mov    rbx,rsi
  0x00007f003f2947d0: movabs rax,0x7f0038a180e0  ;   {metadata(method data for {method} {0x00007f00387ec048} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2947da: add    QWORD PTR [rax+0x130],0x1
  0x00007f003f2947e2: movabs rbx,0x7f00389cbde0  ;   {metadata(method data for {method} {0x00007f00387eabe0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2947ec: mov    eax,DWORD PTR [rbx+0xfc]
  0x00007f003f2947f2: add    eax,0x8
  0x00007f003f2947f5: mov    DWORD PTR [rbx+0xfc],eax
  0x00007f003f2947fb: movabs rbx,0x7f00387eabe0  ;   {metadata({method} {0x00007f00387eabe0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f294805: and    eax,0x7ffff8
  0x00007f003f29480b: cmp    eax,0x0
  0x00007f003f29480e: je     0x00007f003f294b38
  0x00007f003f294814: mov    ebx,DWORD PTR [rsi+0x10]
  0x00007f003f294817: shl    rbx,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007f003f29481b: mov    eax,DWORD PTR [rbx+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; implicit exception: dispatches to 0x00007f003f294b4f
  0x00007f003f29481e: mov    rcx,rdi
  0x00007f003f294821: sub    ecx,eax
  0x00007f003f294823: cmp    ecx,0x0
  0x00007f003f294826: movabs rcx,0x7f00389cbde0  ;   {metadata(method data for {method} {0x00007f00387eabe0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f294830: movabs r8,0x130
  0x00007f003f29483a: jle    0x00007f003f29484a
  0x00007f003f294840: movabs r8,0x140
  0x00007f003f29484a: mov    r9,QWORD PTR [rcx+r8*1]
  0x00007f003f29484e: lea    r9,[r9+0x1]
  0x00007f003f294852: mov    QWORD PTR [rcx+r8*1],r9
  0x00007f003f294856: jg     0x00007f003f294868  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007f003f29485c: mov    DWORD PTR [rsp+0xc4],edx
  0x00007f003f294863: jmp    0x00007f003f294ace  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007f003f294868: mov    DWORD PTR [rsp+0xc0],eax
  0x00007f003f29486f: mov    QWORD PTR [rsp+0xc8],rbx
  0x00007f003f294877: mov    DWORD PTR [rsp+0xc4],edx
  0x00007f003f29487e: mov    rcx,rsi
  0x00007f003f294881: movabs r8,0x7f00389cbde0  ;   {metadata(method data for {method} {0x00007f00387eabe0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f29488b: add    QWORD PTR [r8+0x150],0x1
  0x00007f003f294893: mov    rdx,rdi
  0x00007f003f294896: mov    rdi,rsi
  0x00007f003f294899: mov    rsi,rdi            ;*invokespecial newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007f003f29489c: mov    QWORD PTR [rsp+0xd0],rdi
  0x00007f003f2948a4: nop
  0x00007f003f2948a5: nop
  0x00007f003f2948a6: nop
  0x00007f003f2948a7: call   0x00007f003f1c4d60  ; OopMap{[208]=Oop [200]=Oop off=396}
                                                ;*invokespecial newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {optimized virtual_call}
  0x00007f003f2948ac: mov    r8,rax             ;*invokespecial newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007f003f2948af: movabs rbx,0x7f00389cbde0  ;   {metadata(method data for {method} {0x00007f00387eabe0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2948b9: add    QWORD PTR [rbx+0x160],0x1
  0x00007f003f2948c1: movabs rbx,0x7f00389cc188  ;   {metadata(method data for {method} {0x00007f00388a3750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f2948cb: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f2948d1: add    edx,0x8
  0x00007f003f2948d4: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f2948da: movabs rbx,0x7f00388a3750  ;   {metadata({method} {0x00007f00388a3750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f2948e4: and    edx,0x7ffff8
  0x00007f003f2948ea: cmp    edx,0x0
  0x00007f003f2948ed: je     0x00007f003f294b54
  0x00007f003f2948f3: mov    rbx,r8
  0x00007f003f2948f6: movabs rdx,0x7c00001f8    ;   {metadata({type array char})}
  0x00007f003f294900: movsxd rbx,ebx
  0x00007f003f294903: mov    rdi,rbx
  0x00007f003f294906: cmp    rbx,0xffffff
  0x00007f003f29490d: ja     0x00007f003f294b6b
  0x00007f003f294913: movabs rsi,0x17
  0x00007f003f29491d: lea    rsi,[rsi+rbx*2]
  0x00007f003f294921: and    rsi,0xfffffffffffffff8
  0x00007f003f294925: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f294929: lea    rsi,[rax+rsi*1]
  0x00007f003f29492d: cmp    rsi,QWORD PTR [r15+0x70]
  0x00007f003f294931: ja     0x00007f003f294b6b
  0x00007f003f294937: mov    QWORD PTR [r15+0x60],rsi
  0x00007f003f29493b: sub    rsi,rax
  0x00007f003f29493e: mov    QWORD PTR [rax],0x1
  0x00007f003f294945: mov    rcx,rdx
  0x00007f003f294948: shr    rcx,0x3
  0x00007f003f29494c: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f29494f: mov    DWORD PTR [rax+0xc],ebx
  0x00007f003f294952: sub    rsi,0x10
  0x00007f003f294956: je     0x00007f003f29496d
  0x00007f003f29495c: xor    rbx,rbx
  0x00007f003f29495f: shr    rsi,0x3
  0x00007f003f294963: mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x00007f003f294968: dec    rsi
  0x00007f003f29496b: jne    0x00007f003f294963  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007f003f29496d: movabs rsi,0x7f00389cc188  ;   {metadata(method data for {method} {0x00007f00388a3750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f294977: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f29497f: movabs rsi,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f294989: mov    edx,DWORD PTR [rsi+0xfc]
  0x00007f003f29498f: add    edx,0x8
  0x00007f003f294992: mov    DWORD PTR [rsi+0xfc],edx
  0x00007f003f294998: movabs rsi,0x7f003887a8b8  ;   {metadata({method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2949a2: and    edx,0x7ffff8
  0x00007f003f2949a8: cmp    edx,0x0
  0x00007f003f2949ab: je     0x00007f003f294b75
  0x00007f003f2949b1: mov    esi,DWORD PTR [rsp+0xc0]
  0x00007f003f2949b8: cmp    esi,r8d
  0x00007f003f2949bb: movabs rdx,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2949c5: movabs rcx,0x130
  0x00007f003f2949cf: jg     0x00007f003f2949df
  0x00007f003f2949d5: movabs rcx,0x140
  0x00007f003f2949df: mov    r9,QWORD PTR [rdx+rcx*1]
  0x00007f003f2949e3: lea    r9,[r9+0x1]
  0x00007f003f2949e7: mov    QWORD PTR [rdx+rcx*1],r9
  0x00007f003f2949eb: jg     0x00007f003f294a09  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007f003f2949f1: movabs rdx,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2949fb: inc    DWORD PTR [rdx+0x150]
  0x00007f003f294a01: mov    r9,rsi
  0x00007f003f294a04: jmp    0x00007f003f294a0c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007f003f294a09: mov    r9,r8              ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007f003f294a0c: mov    rbx,QWORD PTR [rsp+0xc8]
  0x00007f003f294a14: movabs rsi,0x7f00389cc188  ;   {metadata(method data for {method} {0x00007f00388a3750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f294a1e: add    QWORD PTR [rsi+0x140],0x1
  0x00007f003f294a26: mov    rsi,rbx
  0x00007f003f294a29: mov    edx,0x0
  0x00007f003f294a2e: mov    rcx,rax
  0x00007f003f294a31: mov    r8d,0x0
  0x00007f003f294a37: mov    QWORD PTR [rsp+0xd8],rax
  0x00007f003f294a3f: lea    rdi,[rdx+r9*1]
  0x00007f003f294a43: cmp    edi,DWORD PTR [rsi+0xc]
  0x00007f003f294a46: ja     0x00007f003f294b8c
  0x00007f003f294a4c: lea    rdi,[r8+r9*1]
  0x00007f003f294a50: cmp    edi,DWORD PTR [rcx+0xc]
  0x00007f003f294a53: ja     0x00007f003f294b8c
  0x00007f003f294a59: test   r9d,r9d
  0x00007f003f294a5c: jl     0x00007f003f294b8c
  0x00007f003f294a62: je     0x00007f003f294a9e
  0x00007f003f294a68: movsxd rdx,edx
  0x00007f003f294a6b: movsxd r8,r8d
  0x00007f003f294a6e: lea    rdi,[rsi+rdx*2+0x10]
  0x00007f003f294a73: lea    rsi,[rcx+r8*2+0x10]
  0x00007f003f294a78: mov    rdx,r9
  0x00007f003f294a7b: test   esp,0xf
  0x00007f003f294a81: je     0x00007f003f294a99
  0x00007f003f294a87: sub    rsp,0x8
  0x00007f003f294a8b: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007f003f294a90: add    rsp,0x8
  0x00007f003f294a94: jmp    0x00007f003f294a9e
  0x00007f003f294a99: call   Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00007f003f294a9e: mov    rax,QWORD PTR [rsp+0xd8]
  0x00007f003f294aa6: mov    rsi,QWORD PTR [rsp+0xd0]
  0x00007f003f294aae: mov    r10,rax
  0x00007f003f294ab1: shr    r10,0x3
  0x00007f003f294ab5: mov    DWORD PTR [rsi+0x10],r10d
  0x00007f003f294ab9: mov    rax,rsi
  0x00007f003f294abc: shr    rax,0x9
  0x00007f003f294ac0: movabs rdi,0x7f003ae7c000
  0x00007f003f294aca: mov    BYTE PTR [rax+rdi*1],0x0  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007f003f294ace: mov    edx,DWORD PTR [rsp+0xc4]
  0x00007f003f294ad5: mov    eax,DWORD PTR [rsi+0x10]
  0x00007f003f294ad8: shl    rax,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007f003f294adc: mov    edi,DWORD PTR [rsi+0xc]  ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007f003f294adf: mov    rbx,rdi
  0x00007f003f294ae2: inc    ebx
  0x00007f003f294ae4: mov    DWORD PTR [rsi+0xc],ebx  ;*putfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007f003f294ae7: movsxd rbx,edi
  0x00007f003f294aea: cmp    edi,DWORD PTR [rax+0xc]  ; implicit exception: dispatches to 0x00007f003f294b99
  0x00007f003f294aed: jae    0x00007f003f294ba3
  0x00007f003f294af3: mov    WORD PTR [rax+rbx*2+0x10],dx
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00007f003f294af8: mov    rax,rsi
  0x00007f003f294afb: add    rsp,0xf0
  0x00007f003f294b02: pop    rbp
  0x00007f003f294b03: test   DWORD PTR [rip+0x1b12d5f7],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f294b09: ret    
  0x00007f003f294b0a: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f294b0f: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f294b17: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=1020}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 202)
                                                ;   {runtime_call}
  0x00007f003f294b1c: jmp    0x00007f003f294781
  0x00007f003f294b21: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f294b26: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f294b2e: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=1043}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00007f003f294b33: jmp    0x00007f003f2947c8
  0x00007f003f294b38: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f294b3d: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f294b45: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=1066}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00007f003f294b4a: jmp    0x00007f003f294814
  0x00007f003f294b4f: call   0x00007f003f279000  ; OopMap{rsi=Oop rbx=Oop off=1076}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00007f003f294b54: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f294b59: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f294b61: call   0x00007f003f27d5e0  ; OopMap{[208]=Oop [200]=Oop off=1094}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00007f003f294b66: jmp    0x00007f003f2948f3
  0x00007f003f294b6b: call   0x00007f003f27a020  ; OopMap{[208]=Oop [200]=Oop off=1104}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00007f003f294b70: jmp    0x00007f003f29496d
  0x00007f003f294b75: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f294b7a: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f294b82: call   0x00007f003f27d5e0  ; OopMap{[208]=Oop [200]=Oop rax=Oop off=1127}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00007f003f294b87: jmp    0x00007f003f2949b1
  0x00007f003f294b8c: nop
  0x00007f003f294b8d: nop
  0x00007f003f294b8e: nop
  0x00007f003f294b8f: call   0x00007f003f1c5160  ; OopMap{[208]=Oop [216]=Oop off=1140}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {static_call}
  0x00007f003f294b94: jmp    0x00007f003f294a9e
  0x00007f003f294b99: call   0x00007f003f279000  ; OopMap{rsi=Oop rax=Oop off=1150}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00007f003f294b9e: call   0x00007f003f279000  ; OopMap{rsi=Oop rax=Oop off=1155}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00007f003f294ba3: mov    QWORD PTR [rsp],rdi
  0x00007f003f294ba7: call   0x00007f003f278940  ; OopMap{rsi=Oop rax=Oop off=1164}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00007f003f294bac: nop
  0x00007f003f294bad: nop
  0x00007f003f294bae: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f294bb5: movabs r10,0x0
  0x00007f003f294bbf: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f294bc6: movabs r10,0x0
  0x00007f003f294bd0: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f294bd7: add    rsp,0xf0
  0x00007f003f294bde: pop    rbp
  0x00007f003f294bdf: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f294be4: hlt    
  0x00007f003f294be5: hlt    
  0x00007f003f294be6: hlt    
  0x00007f003f294be7: hlt    
  0x00007f003f294be8: hlt    
  0x00007f003f294be9: hlt    
  0x00007f003f294bea: hlt    
  0x00007f003f294beb: hlt    
  0x00007f003f294bec: hlt    
  0x00007f003f294bed: hlt    
  0x00007f003f294bee: hlt    
  0x00007f003f294bef: hlt    
  0x00007f003f294bf0: hlt    
  0x00007f003f294bf1: hlt    
  0x00007f003f294bf2: hlt    
  0x00007f003f294bf3: hlt    
  0x00007f003f294bf4: hlt    
  0x00007f003f294bf5: hlt    
  0x00007f003f294bf6: hlt    
  0x00007f003f294bf7: hlt    
  0x00007f003f294bf8: hlt    
  0x00007f003f294bf9: hlt    
  0x00007f003f294bfa: hlt    
  0x00007f003f294bfb: hlt    
  0x00007f003f294bfc: hlt    
  0x00007f003f294bfd: hlt    
  0x00007f003f294bfe: hlt    
  0x00007f003f294bff: hlt    
[Stub Code]
  0x00007f003f294c00: nop                       ;   {no_reloc}
  0x00007f003f294c01: nop
  0x00007f003f294c02: nop
  0x00007f003f294c03: nop
  0x00007f003f294c04: nop
  0x00007f003f294c05: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f294c0f: jmp    0x00007f003f294c0f  ;   {runtime_call}
  0x00007f003f294c14: nop
  0x00007f003f294c15: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f294c1f: jmp    0x00007f003f294c1f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f294c24: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f294c29: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f294c2e: sub    rsp,0x80
  0x00007f003f294c35: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f294c3a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f294c3f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f294c44: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f294c49: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f294c4e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f294c53: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f294c58: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f294c5d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f294c62: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f294c67: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f294c6c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f294c71: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f294c76: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f294c7b: mov    QWORD PTR [rsp],r15
  0x00007f003f294c7f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f294c89: movabs rsi,0x7f003f294c29  ;   {internal_word}
  0x00007f003f294c93: mov    rdx,rsp
  0x00007f003f294c96: and    rsp,0xfffffffffffffff0
  0x00007f003f294c9a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f294c9f: hlt    
[Deopt Handler Code]
  0x00007f003f294ca0: movabs r10,0x7f003f294ca0  ;   {section_word}
  0x00007f003f294caa: push   r10
  0x00007f003f294cac: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f294cb1: hlt    
  0x00007f003f294cb2: hlt    
  0x00007f003f294cb3: hlt    
  0x00007f003f294cb4: hlt    
  0x00007f003f294cb5: hlt    
  0x00007f003f294cb6: hlt    
  0x00007f003f294cb7: hlt    
<nmethod compile_id='26' compiler='C1' level='3' entry='0x00007f003f294720' size='2816' address='0x00007f003f294550' relocation_offset='312' insts_offset='464' stub_offset='1712' scopes_data_offset='1936' scopes_pcs_offset='2264' dependencies_offset='2776' nul_chk_table_offset='2784' metadata_offset='1896' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='355' iicount='355' stamp='0.144'/>
<writer thread='139637818533632'/>
[Loaded java.nio.channels.ReadableByteChannel from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.channels.WritableByteChannel from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.channels.ByteChannel from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.channels.SeekableByteChannel from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.channels.GatheringByteChannel from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.channels.ScatteringByteChannel from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/ref/Reference.get  [0x00007f003f295200, 0x00007f003f295310]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00387943f8} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/r
<writer thread='139637818533632'/>
[Loaded java.nio.channels.InterruptibleChannel from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
ef/Reference&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f295200: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f295204: shl    r10,0x3
  0x00007f003f295208: cmp    r10,rax
  0x00007f003f29520b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f295211: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f29521c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f295220: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f295227: push   rbp
  0x00007f003f295228: sub    rsp,0x30
  0x00007f003f29522c: mov    eax,DWORD PTR [rsi+0xc]
  0x00007f003f29522f: shl    rax,0x3            ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.Reference::get@0 (line 254)

  0x00007f003f295233: add    rsp,0x30
  0x00007f003f295237: pop    rbp
  0x00007f003f295238: test   DWORD PTR [rip+0x1b12cec2],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29523e: ret    
  0x00007f003f29523f: nop
  0x00007f003f295240: nop
  0x00007f003f295241: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f295248: movabs r10,0x0
  0x00007f003f295252: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f295259: movabs r10,0x0
  0x00007f003f295263: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f29526a: add    rsp,0x30
  0x00007f003f29526e: pop    rbp
  0x00007f003f29526f: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f295274: hlt    
  0x00007f003f295275: hlt    
  0x00007f003f295276: hlt    
  0x00007f003f295277: hlt    
  0x00007f003f295278: hlt    
  0x00007f003f295279: hlt    
  0x00007f003f29527a: hlt    
  0x00007f003f29527b: hlt    
  0x00007f003f29527c: hlt    
  0x00007f003f29527d: hlt    
  0x00007f003f29527e: hlt    
  0x00007f003f29527f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f295280: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f295285: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f29528a: sub    rsp,0x80
  0x00007f003f295291: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f295296: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29529b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2952a0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2952a5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2952aa: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2952af: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2952b4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2952b9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2952be: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2952c3: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2952c8: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2952cd: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2952d2: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2952d7: mov    QWORD PTR [rsp],r15
  0x00007f003f2952db: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2952e5: movabs rsi,0x7f003f295285  ;   {internal_word}
  0x00007f003f2952ef: mov    rdx,rsp
  0x00007f003f2952f2: and    rsp,0xfffffffffffffff0
  0x00007f003f2952f6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2952fb: hlt    
[Deopt Handler Code]
  0x00007f003f2952fc: movabs r10,0x7f003f2952fc  ;   {section_word}
  0x00007f003f295306: push   r10
  0x00007f003f295308: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f29530d: hlt    
  0x00007f003f29530e: hlt    
  0x00007f003f29530f: hlt    
<nmethod compile_id='28' compiler='C1' level='1' entry='0x00007f003f295200' size='712' address='0x00007f003f295090' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='656' dependencies_offset='704' metadata_offset='640' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='384' iicount='384' stamp='0.145'/>
----------------------------------------------------------------------
java/lang/System.getSecurityManager  [0x00007f003f295500, 0x00007f003f295650]  336 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f0038783598} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f295500: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f295507: push   rbp
  0x00007f003f295508: sub    rsp,0x30
  0x00007f003f29550c: movabs rax,0x7f0038a22260  ;   {metadata(method data for {method} {0x00007f0038783598} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00007f003f295516: mov    esi,DWORD PTR [rax+0xfc]
  0x00007f003f29551c: add    esi,0x8
  0x00007f003f29551f: mov    DWORD PTR [rax+0xfc],esi
  0x00007f003f295525: movabs rax,0x7f0038783598  ;   {metadata({method} {0x00007f0038783598} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00007f003f29552f: and    esi,0x1ff8
  0x00007f003f295535: cmp    esi,0x0
  0x00007f003f295538: je     0x00007f003f29555b
  0x00007f003f29553e: movabs rax,0x670b80c78    ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007f003f295548: mov    eax,DWORD PTR [rax+0x74]
  0x00007f003f29554b: shl    rax,0x3            ;*getstatic security {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x00007f003f29554f: add    rsp,0x30
  0x00007f003f295553: pop    rbp
  0x00007f003f295554: test   DWORD PTR [rip+0x1b12cba6],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29555a: ret    
  0x00007f003f29555b: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f295560: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f295568: call   0x00007f003f27d5e0  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x00007f003f29556d: jmp    0x00007f003f29553e
  0x00007f003f29556f: nop
  0x00007f003f295570: nop
  0x00007f003f295571: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f295578: movabs r10,0x0
  0x00007f003f295582: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f295589: movabs r10,0x0
  0x00007f003f295593: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f29559a: add    rsp,0x30
  0x00007f003f29559e: pop    rbp
  0x00007f003f29559f: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2955a4: hlt    
  0x00007f003f2955a5: hlt    
  0x00007f003f2955a6: hlt    
  0x00007f003f2955a7: hlt    
  0x00007f003f2955a8: hlt    
  0x00007f003f2955a9: hlt    
  0x00007f003f2955aa: hlt    
  0x00007f003f2955ab: hlt    
  0x00007f003f2955ac: hlt    
  0x00007f003f2955ad: hlt    
  0x00007f003f2955ae: hlt    
  0x00007f003f2955af: hlt    
  0x00007f003f2955b0: hlt    
  0x00007f003f2955b1: hlt    
  0x00007f003f2955b2: hlt    
  0x00007f003f2955b3: hlt    
  0x00007f003f2955b4: hlt    
  0x00007f003f2955b5: hlt    
  0x00007f003f2955b6: hlt    
  0x00007f003f2955b7: hlt    
  0x00007f003f2955b8: hlt    
  0x00007f003f2955b9: hlt    
  0x00007f003f2955ba: hlt    
  0x00007f003f2955bb: hlt    
  0x00007f003f2955bc: hlt    
  0x00007f003f2955bd: hlt    
  0x00007f003f2955be: hlt    
  0x00007f003f2955bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2955c0: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2955c5: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2955ca: sub    rsp,0x80
  0x00007f003f2955d1: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2955d6: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2955db: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2955e0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2955e5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2955ea: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2955ef: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2955f4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2955f9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2955fe: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f295603: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f295608: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f29560d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f295612: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f295617: mov    QWORD PTR [rsp],r15
  0x00007f003f29561b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f295625: movabs rsi,0x7f003f2955c5  ;   {internal_word}
  0x00007f003f29562f: mov    rdx,rsp
  0x00007f003f295632: and    rsp,0xfffffffffffffff0
  0x00007f003f295636: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29563b: hlt    
[Deopt Handler Code]
  0x00007f003f29563c: movabs r10,0x7f003f29563c  ;   {section_word}
  0x00007f003f295646: push   r10
  0x00007f003f295648: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f29564d: hlt    
  0x00007f003f29564e: hlt    
  0x00007f003f29564f: hlt    
<nmethod compile_id='27' compiler='C1' level='3' entry='0x00007f003f295500' size='800' address='0x00007f003f295390' relocation_offset='312' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='258' iicount='258' stamp='0.146'/>
<writer thread='139637818533632'/>
[Loaded java.nio.channels.spi.AbstractInterruptibleChannel from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.channels.FileChannel from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.ch.FileChannelImpl from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.ch.IOUtil from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.ch.IOUtil$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.ch.NativeThreadSet from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.ch.NativeDispatcher from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.ch.FileDispatcher from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.ch.FileDispatcherImpl from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.channels.Channels from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.ch.ChannelInputStream from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.ch.Interruptible from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.channels.spi.AbstractInterruptibleChannel$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.ch.NativeThread from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.ch.IOStatus from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.channels.SelectableChannel from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.ch.Util from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.ch.Util$2 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.ch.Util$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.ch.Util$BufferCache from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.DirectByteBuffer$Deallocator from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.ArrayList$SubList from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.ListIterator from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.ArrayList$SubList$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<task_queued compile_id='29' method='sun/nio/fs/UnixUriUtils match (CJJ)Z' bytes='50' count='384' iicount='384' level='3' stamp='0.149' comment='tiered' hot_count='384'/>
<task_queued compile_id='30' method='java/net/URI access$300 (CJJ)Z' bytes='7' count='384' iicount='384' level='3' stamp='0.149' comment='tiered' hot_count='384'/>
<task_queued compile_id='31' method='java/net/URI match (CJJ)Z' bytes='56' count='384' iicount='384' level='3' stamp='0.149' comment='tiered' hot_count='384'/>
[Loaded java.net.URLClassLoader$5 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.net.FactoryURLClassLoader from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/net/URI.access$300  [0x00007f003f297100, 0x00007f003f297268]  360 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f00389faa10} &apos;access$300&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;
  # parm0:    rsi       = char
  # parm1:    rdx:rdx   = long
  # parm2:    rcx:rcx   = long
  #           [sp+0x50]  (sp of caller)
  0x00007f003f297100: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f297107: push   rbp
  0x00007f003f297108: sub    rsp,0x40
  0x00007f003f29710c: movabs rdi,0x7f0038a37910  ;   {metadata(method data for {method} {0x00007f00389faa10} &apos;access$300&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007f003f297116: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f29711c: add    ebx,0x8
  0x00007f003f29711f: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f297125: movabs rdi,0x7f00389faa10
<writer thread='139637818533632'/>
[Loaded sun.misc.URLClassPath$JarLoader$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
  ;   {metadata({method} {0x00007f00389faa10} &apos;access$300&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007f003f29712f: and    ebx,0x1ff8
  0x00007f003f297135: cmp    ebx,0x0
  0x00007f003f297138: je     0x00007f003f29716b  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::access$300@0 (line 464)

  0x00007f003f29713e: movabs rdi,0x7f0038a37910  ;   {metadata(method data for {method} {0x00007f00389faa10} &apos;access$300&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007f003f297148: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f297150: nop
  0x00007f003f297151: nop
  0x00007f003f297152: nop
  0x00007f003f297153: nop
  0x00007f003f297154: nop
  0x00007f003f297155: nop
  0x00007f003f297156: nop
  0x00007f003f297157: call   0x00007f003f1c5160  ; OopMap{off=92}
                                                ;*invokestatic match {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::access$300@3 (line 464)
                                                ;   {static_call}
  0x00007f003f29715c: and    eax,0x1
  0x00007f003f29715f: add    rsp,0x40
  0x00007f003f297163: pop    rbp
  0x00007f003f297164: test   DWORD PTR [rip+0x1b12af96],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29716a: ret    
  0x00007f003f29716b: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f297170: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f297178: call   0x00007f003f27d5e0  ; OopMap{off=125}
                                                ;*synchronization entry
                                                ; - java.net.URI::access$300@-1 (line 464)
                                                ;   {runtime_call}
  0x00007f003f29717d: jmp    0x00007f003f29713e
  0x00007f003f29717f: nop
  0x00007f003f297180: nop
  0x00007f003f297181: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f297188: movabs r10,0x0
  0x00007f003f297192: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f297199: movabs r10,0x0
  0x00007f003f2971a3: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2971aa: add    rsp,0x40
  0x00007f003f2971ae: pop    rbp
  0x00007f003f2971af: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2971b4: hlt    
  0x00007f003f2971b5: hlt    
  0x00007f003f2971b6: hlt    
  0x00007f003f2971b7: hlt    
  0x00007f003f2971b8: hlt    
  0x00007f003f2971b9: hlt    
  0x00007f003f2971ba: hlt    
  0x00007f003f2971bb: hlt    
  0x00007f003f2971bc: hlt    
  0x00007f003f2971bd: hlt    
  0x00007f003f2971be: hlt    
  0x00007f003f2971bf: hlt    
[Stub Code]
  0x00007f003f2971c0: nop                       ;   {no_reloc}
  0x00007f003f2971c1: nop
  0x00007f003f2971c2: nop
  0x00007f003f2971c3: nop
  0x00007f003f2971c4: nop
  0x00007f003f2971c5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2971cf: jmp    0x00007f003f2971cf  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2971d4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2971d9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2971de: sub    rsp,0x80
  0x00007f003f2971e5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2971ea: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2971ef: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2971f4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2971f9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2971fe: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f297203: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f297208: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f29720d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f297212: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f297217: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f29721c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f297221: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f297226: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f29722b: mov    QWORD PTR [rsp],r15
  0x00007f003f29722f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f297239: movabs rsi,0x7f003f2971d9  ;   {internal_word}
  0x00007f003f297243: mov    rdx,rsp
  0x00007f003f297246: and    rsp,0xfffffffffffffff0
  0x00007f003f29724a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29724f: hlt    
[Deopt Handler Code]
  0x00007f003f297250: movabs r10,0x7f003f297250  ;   {section_word}
  0x00007f003f29725a: push   r10
  0x00007f003f29725c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f297261: hlt    
  0x00007f003f297262: hlt    
  0x00007f003f297263: hlt    
  0x00007f003f297264: hlt    
  0x00007f003f297265: hlt    
  0x00007f003f297266: hlt    
  0x00007f003f297267: hlt    
<nmethod compile_id='30' compiler='C1' level='3' entry='0x00007f003f297100' size='872' address='0x00007f003f296f90' relocation_offset='312' insts_offset='368' stub_offset='560' scopes_data_offset='736' scopes_pcs_offset='784' dependencies_offset='864' metadata_offset='728' method='java/net/URI access$300 (CJJ)Z' bytes='7' count='611' iicount='611' stamp='0.150'/>
<writer thread='139637818533632'/>
[Loaded sun.misc.FileURLMapper from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/net/URI.match  [0x00007f003f2974a0, 0x00007f003f2977b0]  784 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f00389f9cc8} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;jav
<writer thread='139637818533632'/>
[Loaded java.util.jar.JarFile from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
a/net/URI&apos;
  # parm0:    rsi       = char
  # parm1:    rdx:rdx   = long
  # parm2:    rcx:rcx   = long
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2974a0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2974a7: push   rbp
  0x00007f003f2974a8: sub    rsp,0x30
  0x00007f003f2974ac: mov    rax,rcx
  0x00007f003f2974af: movabs rcx,0x7f0038a37ab0  ;   {metadata(method data for {method} {0x00007f00389f9cc8} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007f003f2974b9: mov    edi,DWORD PTR [rcx+0xfc]
  0x00007f003f2974bf: add    edi,0x8
  0x00007f003f2974c2: mov    DWORD PTR [rcx+0xfc],edi
  0x00007f003f2974c8: movabs rcx,0x7f00389f9cc8  ;   {metadata({method} {0x00007f00389f9cc8} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007f003f2974d2: and    edi,0x1ff8
  0x00007f003f2974d8: cmp    edi,0x0
  0x00007f003f2974db: je     0x00007f003f2976c1  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@0 (line 2515)

  0x00007f003f2974e1: cmp    esi,0x0
  0x00007f003f2974e4: movabs rcx,0x7f0038a37ab0  ;   {metadata(method data for {method} {0x00007f00389f9cc8} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007f003f2974ee: movabs rdi,0x130
  0x00007f003f2974f8: jne    0x00007f003f297508
  0x00007f003f2974fe: movabs rdi,0x140
  0x00007f003f297508: mov    rbx,QWORD PTR [rcx+rdi*1]
  0x00007f003f29750c: lea    rbx,[rbx+0x1]
  0x00007f003f297510: mov    QWORD PTR [rcx+rdi*1],rbx
  0x00007f003f297514: je     0x00007f003f2976b0  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@1 (line 2515)

  0x00007f003f29751a: cmp    esi,0x40
  0x00007f003f29751d: movabs rcx,0x7f0038a37ab0  ;   {metadata(method data for {method} {0x00007f00389f9cc8} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007f003f297527: movabs rdi,0x150
  0x00007f003f297531: jge    0x00007f003f297541
  0x00007f003f297537: movabs rdi,0x160
  0x00007f003f297541: mov    rbx,QWORD PTR [rcx+rdi*1]
  0x00007f003f297545: lea    rbx,[rbx+0x1]
  0x00007f003f297549: mov    QWORD PTR [rcx+rdi*1],rbx
  0x00007f003f29754d: jge    0x00007f003f2975ae  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@9 (line 2517)

  0x00007f003f297553: mov    rcx,rsi
  0x00007f003f297556: movabs rax,0x1
  0x00007f003f297560: shl    rax,cl
  0x00007f003f297563: and    rax,rdx
  0x00007f003f297566: movabs rcx,0x0
  0x00007f003f297570: cmp    rax,rcx
  0x00007f003f297573: movabs rcx,0x7f0038a37ab0  ;   {metadata(method data for {method} {0x00007f00389f9cc8} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007f003f29757d: movabs rax,0x180
  0x00007f003f297587: jne    0x00007f003f297597
  0x00007f003f29758d: movabs rax,0x170
  0x00007f003f297597: mov    rsi,QWORD PTR [rcx+rax*1]
  0x00007f003f29759b: lea    rsi,[rsi+0x1]
  0x00007f003f29759f: mov    QWORD PTR [rcx+rax*1],rsi
  0x00007f003f2975a3: jne    0x00007f003f29768c
  0x00007f003f2975a9: jmp    0x00007f003f297682  ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@18 (line 2518)

  0x00007f003f2975ae: cmp    esi,0x80
  0x00007f003f2975b4: movabs rcx,0x7f0038a37ab0  ;   {metadata(method data for {method} {0x00007f00389f9cc8} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007f003f2975be: movabs rdi,0x1a8
  0x00007f003f2975c8: jge    0x00007f003f2975d8
  0x00007f003f2975ce: movabs rdi,0x1b8
  0x00007f003f2975d8: mov    rbx,QWORD PTR [rcx+rdi*1]
  0x00007f003f2975dc: lea    rbx,[rbx+0x1]
  0x00007f003f2975e0: mov    QWORD PTR [rcx+rdi*1],rbx
  0x00007f003f2975e4: jge    0x00007f003f297671  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@32 (line 2519)

  0x00007f003f2975ea: sub    esi,0x40
  0x00007f003f2975ed: mov    rcx,rsi
  0x00007f003f2975f0: movabs rsi,0x1
  0x00007f003f2975fa: shl    rsi,cl
  0x00007f003f2975fd: and    rsi,rax
  0x00007f003f297600: movabs rax,0x0
  0x00007f003f29760a: cmp    rsi,rax
  0x00007f003f29760d: movabs rax,0x7f0038a37ab0  ;   {metadata(method data for {method} {0x00007f00389f9cc8} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007f003f297617: movabs rsi,0x1d8
  0x00007f003f297621: jne    0x00007f003f297631
  0x00007f003f297627: movabs rsi,0x1c8
  0x00007f003f297631: mov    rdi,QWORD PTR [rax+rsi*1]
  0x00007f003f297635: lea    rdi,[rdi+0x1]
  0x00007f003f297639: mov    QWORD PTR [rax+rsi*1],rdi
  0x00007f003f29763d: jne    0x00007f003f29764d  ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@44 (line 2520)

  0x00007f003f297643: mov    eax,0x0
  0x00007f003f297648: jmp    0x00007f003f297662  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@53 (line 2520)

  0x00007f003f29764d: movabs rax,0x7f0038a37ab0  ;   {metadata(method data for {method} {0x00007f00389f9cc8} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007f003f297657: inc    DWORD PTR [rax+0x1e8]
  0x00007f003f29765d: mov    eax,0x1            ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@49 (line 2520)

  0x00007f003f297662: and    eax,0x1
  0x00007f003f297665: add    rsp,0x30
  0x00007f003f297669: pop    rbp
  0x00007f003f29766a: test   DWORD PTR [rip+0x1b12aa90],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f297670: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@53 (line 2520)

  0x00007f003f297671: mov    eax,0x0
  0x00007f003f297676: add    rsp,0x30
  0x00007f003f29767a: pop    rbp
  0x00007f003f29767b: test   DWORD PTR [rip+0x1b12aa7f],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f297681: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@55 (line 2521)

  0x00007f003f297682: mov    eax,0x0
  0x00007f003f297687: jmp    0x00007f003f2976a1  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@27 (line 2518)

  0x00007f003f29768c: movabs rax,0x7f0038a37ab0  ;   {metadata(method data for {method} {0x00007f00389f9cc8} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;java/net/URI&apos;)}
  0x00007f003f297696: inc    DWORD PTR [rax+0x190]
  0x00007f003f29769c: mov    eax,0x1            ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@23 (line 2518)

  0x00007f003f2976a1: and    eax,0x1
  0x00007f003f2976a4: add    rsp,0x30
  0x00007f003f2976a8: pop    rbp
  0x00007f003f2976a9: test   DWORD PTR [rip+0x1b12aa51],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2976af: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URI::match@27 (line 2518)

  0x00007f003f2976b0: mov    eax,0x0
  0x00007f003f2976b5: add    rsp,0x30
  0x00007f003f2976b9: pop    rbp
  0x00007f003f2976ba: test   DWORD PTR [rip+0x1b12aa40],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2976c0: ret    
  0x00007f003f2976c1: mov    QWORD PTR [rsp+0x8],rcx
  0x00007f003f2976c6: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2976ce: call   0x00007f003f27d5e0  ; OopMap{off=563}
                                                ;*synchronization entry
                                                ; - java.net.URI::match@-1 (line 2515)
                                                ;   {runtime_call}
  0x00007f003f2976d3: jmp    0x00007f003f2974e1
  0x00007f003f2976d8: nop
  0x00007f003f2976d9: nop
  0x00007f003f2976da: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2976e1: movabs r10,0x0
  0x00007f003f2976eb: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2976f2: movabs r10,0x0
  0x00007f003f2976fc: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f297703: add    rsp,0x30
  0x00007f003f297707: pop    rbp
  0x00007f003f297708: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f29770d: hlt    
  0x00007f003f29770e: hlt    
  0x00007f003f29770f: hlt    
  0x00007f003f297710: hlt    
  0x00007f003f297711: hlt    
  0x00007f003f297712: hlt    
  0x00007f003f297713: hlt    
  0x00007f003f297714: hlt    
  0x00007f003f297715: hlt    
  0x00007f003f297716: hlt    
  0x00007f003f297717: hlt    
  0x00007f003f297718: hlt    
  0x00007f003f297719: hlt    
  0x00007f003f29771a: hlt    
  0x00007f003f29771b: hlt    
  0x00007f003f29771c: hlt    
  0x00007f003f29771d: hlt    
  0x00007f003f29771e: hlt    
  0x00007f003f29771f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f297720: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f297725: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f29772a: sub    rsp,0x80
  0x00007f003f297731: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f297736: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29773b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f297740: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f297745: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f29774a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f29774f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f297754: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f297759: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f29775e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f297763: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f297768: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f29776d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f297772: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f297777: mov    QWORD PTR [rsp],r15
  0x00007f003f29777b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f297785: movabs rsi,0x7f003f297725  ;   {internal_word}
  0x00007f003f29778f: mov    rdx,rsp
  0x00007f003f297792: and    rsp,0xfffffffffffffff0
  0x00007f003f297796: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29779b: hlt    
[Deopt Handler Code]
  0x00007f003f29779c: movabs r10,0x7f003f29779c  ;   {section_word}
  0x00007f003f2977a6: push   r10
  0x00007f003f2977a8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2977ad: hlt    
  0x00007f003f2977ae: hlt    
  0x00007f003f2977af: hlt    
<nmethod compile_id='31' compiler='C1' level='3' entry='0x00007f003f2974a0' size='1544' address='0x00007f003f297310' relocation_offset='312' insts_offset='400' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1280' dependencies_offset='1536' metadata_offset='1184' method='java/net/URI match (CJJ)Z' bytes='56' count='611' iicount='611' stamp='0.152'/>
<writer thread='139637818533632'/>
[Loaded sun.misc.JavaUtilJarAccess from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.jar.JavaUtilJarAccessImpl from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.nio.charset.StandardCharsets from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.cs.US_ASCII from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
sun/nio/fs/UnixUriUtils.match  [0x00007f003f297ac0, 0x00007f003f297d90]  720 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f0038a13430} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;sun/nio/fs/UnixUriUtils&apos;
  # parm0:    rsi       = char
  # parm1:    rdx:rdx   = long
  # parm2:    rcx:rcx   = long
  #           [sp+0x40]  (sp of caller)
  0x00007f003f297ac0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f297ac7: push   rbp
  0x00007f003f297ac8: sub    rsp,0x30
  0x00007f003f297acc: mov    rax,rcx
  0x00007f003f297acf: movabs rcx,0x7f0038a37d00  ;   {metadata(method data for {method} {0x00007f0038a13430} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;sun/nio/fs/UnixUriUtils&apos;)}
  0x00007f003f297ad9: mov    edi,DWORD PTR [rcx+0xfc]
  0x00007f003f297adf: add    edi,0x8
  0x00007f003f297ae2: mov    DWORD PTR [rcx+0xfc],edi
  0x00007f003f297ae8: movabs rcx,0x7f0038a13430  ;   {metadata({method} {0x00007f0038a13430} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;sun/nio/fs/UnixUriUtils&apos;)}
  0x00007f003f297af2: and    edi,0x1ff8
  0x00007f003f297af8: cmp    edi,0x0
  0x00007f003f297afb: je     0x00007f003f297c97  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@0 (line 182)

  0x00007f003f297b01: cmp    esi,0x40
  0x00007f003f297b04: movabs rcx,0x7f0038a37d00  ;   {metadata(method data for {method} {0x00007f0038a13430} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;sun/nio/fs/UnixUriUtils&apos;)}
  0x00007f003f297b0e: movabs rdi,0x130
  0x00007f003f297b18: jge    0x00007f003f297b28
  0x00007f003f297b1e: movabs rdi,0x140
  0x00007f003f297b28: mov    rbx,QWORD PTR [rcx+rdi*1]
  0x00007f003f297b2c: lea    rbx,[rbx+0x1]
  0x00007f003f297b30: mov    QWORD PTR [rcx+rdi*1],rbx
  0x00007f003f297b34: jge    0x00007f003f297b95  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@3 (line 182)

  0x00007f003f297b3a: mov    rcx,rsi
  0x00007f003f297b3d: movabs rax,0x1
  0x00007f003f297b47: shl    rax,cl
  0x00007f003f297b4a: and    rax,rdx
  0x00007f003f297b4d: movabs rcx,0x0
  0x00007f003f297b57: cmp    rax,rcx
  0x00007f003f297b5a: movabs rcx,0x7f0038a37d00  ;   {metadata(method data for {method} {0x00007f0038a13430} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;sun/nio/fs/UnixUriUtils&apos;)}
  0x00007f003f297b64: movabs rax,0x160
  0x00007f003f297b6e: jne    0x00007f003f297b7e
  0x00007f003f297b74: movabs rax,0x150
  0x00007f003f297b7e: mov    rsi,QWORD PTR [rcx+rax*1]
  0x00007f003f297b82: lea    rsi,[rsi+0x1]
  0x00007f003f297b86: mov    QWORD PTR [rcx+rax*1],rsi
  0x00007f003f297b8a: jne    0x00007f003f297c73
  0x00007f003f297b90: jmp    0x00007f003f297c69  ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@12 (line 183)

  0x00007f003f297b95: cmp    esi,0x80
  0x00007f003f297b9b: movabs rcx,0x7f0038a37d00  ;   {metadata(method data for {method} {0x00007f0038a13430} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;sun/nio/fs/UnixUriUtils&apos;)}
  0x00007f003f297ba5: movabs rdi,0x188
  0x00007f003f297baf: jge    0x00007f003f297bbf
  0x00007f003f297bb5: movabs rdi,0x198
  0x00007f003f297bbf: mov    rbx,QWORD PTR [rcx+rdi*1]
  0x00007f003f297bc3: lea    rbx,[rbx+0x1]
  0x00007f003f297bc7: mov    QWORD PTR [rcx+rdi*1],rbx
  0x00007f003f297bcb: jge    0x00007f003f297c58  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@26 (line 184)

  0x00007f003f297bd1: sub    esi,0x40
  0x00007f003f297bd4: mov    rcx,rsi
  0x00007f003f297bd7: movabs rsi,0x1
  0x00007f003f297be1: shl    rsi,cl
  0x00007f003f297be4: and    rsi,rax
  0x00007f003f297be7: movabs rax,0x0
  0x00007f003f297bf1: cmp    rsi,rax
  0x00007f003f297bf4: movabs rax,0x7f0038a37d00  ;   {metadata(method data for {method} {0x00007f0038a13430} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;sun/nio/fs/UnixUriUtils&apos;)}
  0x00007f003f297bfe: movabs rsi,0x1b8
  0x00007f003f297c08: jne    0x00007f003f297c18
  0x00007f003f297c0e: movabs rsi,0x1a8
  0x00007f003f297c18: mov    rdi,QWORD PTR [rax+rsi*1]
  0x00007f003f297c1c: lea    rdi,[rdi+0x1]
  0x00007f003f297c20: mov    QWORD PTR [rax+rsi*1],rdi
  0x00007f003f297c24: jne    0x00007f003f297c34  ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@38 (line 185)

  0x00007f003f297c2a: mov    eax,0x0
  0x00007f003f297c2f: jmp    0x00007f003f297c49  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@47 (line 185)

  0x00007f003f297c34: movabs rax,0x7f0038a37d00  ;   {metadata(method data for {method} {0x00007f0038a13430} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;sun/nio/fs/UnixUriUtils&apos;)}
  0x00007f003f297c3e: inc    DWORD PTR [rax+0x1c8]
  0x00007f003f297c44: mov    eax,0x1            ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@43 (line 185)

  0x00007f003f297c49: and    eax,0x1
  0x00007f003f297c4c: add    rsp,0x30
  0x00007f003f297c50: pop    rbp
  0x00007f003f297c51: test   DWORD PTR [rip+0x1b12a4a9],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f297c57: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@47 (line 185)

  0x00007f003f297c58: mov    eax,0x0
  0x00007f003f297c5d: add    rsp,0x30
  0x00007f003f297c61: pop    rbp
  0x00007f003f297c62: test   DWORD PTR [rip+0x1b12a498],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f297c68: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@49 (line 186)

  0x00007f003f297c69: mov    eax,0x0
  0x00007f003f297c6e: jmp    0x00007f003f297c88  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@21 (line 183)

  0x00007f003f297c73: movabs rax,0x7f0038a37d00  ;   {metadata(method data for {method} {0x00007f0038a13430} &apos;match&apos; &apos;(CJJ)Z&apos; in &apos;sun/nio/fs/UnixUriUtils&apos;)}
  0x00007f003f297c7d: inc    DWORD PTR [rax+0x170]
  0x00007f003f297c83: mov    eax,0x1            ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.fs.UnixUriUtils::match@17 (line 183)

  0x00007f003f297c88: and    eax,0x1
  0x00007f003f297c8b: add    rsp,0x30
  0x00007f003f297c8f: pop    rbp
  0x00007f003f297c90: test   DWORD PTR [rip+0x1b12a46a],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f297c96: ret    
  0x00007f003f297c97: mov    QWORD PTR [rsp+0x8],rcx
  0x00007f003f297c9c: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f297ca4: call   0x00007f003f27d5e0  ; OopMap{off=489}
                                                ;*synchronization entry
                                                ; - sun.nio.fs.UnixUriUtils::match@-1 (line 182)
                                                ;   {runtime_call}
  0x00007f003f297ca9: jmp    0x00007f003f297b01
  0x00007f003f297cae: nop
  0x00007f003f297caf: nop
  0x00007f003f297cb0: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f297cb7: movabs r10,0x0
  0x00007f003f297cc1: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f297cc8: movabs r10,0x0
  0x00007f003f297cd2: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f297cd9: add    rsp,0x30
  0x00007f003f297cdd: pop    rbp
  0x00007f003f297cde: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f297ce3: hlt    
  0x00007f003f297ce4: hlt    
  0x00007f003f297ce5: hlt    
  0x00007f003f297ce6: hlt    
  0x00007f003f297ce7: hlt    
  0x00007f003f297ce8: hlt    
  0x00007f003f297ce9: hlt    
  0x00007f003f297cea: hlt    
  0x00007f003f297ceb: hlt    
  0x00007f003f297cec: hlt    
  0x00007f003f297ced: hlt    
  0x00007f003f297cee: hlt    
  0x00007f003f297cef: hlt    
  0x00007f003f297cf0: hlt    
  0x00007f003f297cf1: hlt    
  0x00007f003f297cf2: hlt    
  0x00007f003f297cf3: hlt    
  0x00007f003f297cf4: hlt    
  0x00007f003f297cf5: hlt    
  0x00007f003f297cf6: hlt    
  0x00007f003f297cf7: hlt    
  0x00007f003f297cf8: hlt    
  0x00007f003f297cf9: hlt    
  0x00007f003f297cfa: hlt    
  0x00007f003f297cfb: hlt    
  0x00007f003f297cfc: hlt    
  0x00007f003f297cfd: hlt    
  0x00007f003f297cfe: hlt    
  0x00007f003f297cff: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f297d00: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f297d05: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f297d0a: sub    rsp,0x80
  0x00007f003f297d11: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f297d16: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f297d1b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f297d20: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f297d25: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f297d2a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f297d2f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f297d34: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f297d39: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f297d3e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f297d43: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f297d48: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f297d4d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f297d52: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f297d57: mov    QWORD PTR [rsp],r15
  0x00007f003f297d5b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f297d65: movabs rsi,0x7f003f297d05  ;   {internal_word}
  0x00007f003f297d6f: mov    rdx,rsp
  0x00007f003f297d72: and    rsp,0xfffffffffffffff0
  0x00007f003f297d76: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f297d7b: hlt    
[Deopt Handler Code]
  0x00007f003f297d7c: movabs r10,0x7f003f297d7c  ;   {section_word}
  0x00007f003f297d86: push   r10
  0x00007f003f297d88: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f297d8d: hlt    
  0x00007f003f297d8e: hlt    
  0x00007f003f297d8f: hlt    
<nmethod compile_id='29' compiler='C1' level='3' entry='0x00007f003f297ac0' size='1408' address='0x00007f003f297950' relocation_offset='312' insts_offset='368' stub_offset='944' scopes_data_offset='1096' scopes_pcs_offset='1176' dependencies_offset='1400' metadata_offset='1088' method='sun/nio/fs/UnixUriUtils match (CJJ)Z' bytes='50' count='566' iicount='566' stamp='0.153'/>
<writer thread='139639490488064'/>
<task_queued compile_id='32' compile_kind='osr' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='62464' iicount='1' osr_bci='9' level='3' stamp='0.153' comment='tiered' hot_count='62464'/>
<writer thread='139637818533632'/>
[Loaded sun.nio.cs.ISO_8859_1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16BE from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16LE from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<task_queued compile_id='33' method='java/lang/String lastIndexOf (II)I' bytes='52' count='111' backedge_count='3072' iicount='111' level='3' stamp='0.154' comment='tiered' hot_count='111'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
com/github/marschall/charsequences/ParseUuidCompilation.&lt;init&gt;  [0x00007f003f2980e0, 0x00007f003f2986e8]  1544 bytes
<writer thread='139637818533632'/>
[Loaded sun.nio.cs.UTF_16 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
[Entry Point]
[Constants]
  # {method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;
  0x00007f003f2980e0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2980e4: shl    r10,0x3
  0x00007f003f2980e8: cmp    r10,rax
  0x00007f003f2980eb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2980f1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2980fc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f298100: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f298107: push   rbp
  0x00007f003f298108: sub    rsp,0x50
  0x00007f003f29810c: movabs rdi,0x7f0038b69bb0  ;   {metadata(method data for {method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f298116: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f29811c: add    ebx,0x8
  0x00007f003f29811f: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f298125: movabs rdi,0x7f0038b66370  ;   {metadata({method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f29812f: and    ebx,0x1ff8
  0x00007f003f298135: cmp    ebx,0x0
  0x00007f003f298138: je     0x00007f003f298568  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@0 (line 9)

  0x00007f003f29813e: mov    rdi,rsi
  0x00007f003f298141: movabs rbx,0x7f0038b69bb0  ;   {metadata(method data for {method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f29814b: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f298153: movabs rdi,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f29815d: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f298163: add    ebx,0x8
  0x00007f003f298166: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f29816c: movabs rdi,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f298176: and    ebx,0x7ffff8
  0x00007f003f29817c: cmp    ebx,0x0
  0x00007f003f29817f: je     0x00007f003f29857f
  0x00007f003f298185: movabs rdi,0x7f0038b69bb0  ;   {metadata(method data for {method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f29818f: inc    DWORD PTR [rdi+0x140]
  0x00007f003f298195: mov    edi,0x0            ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@6 (line 11)

  0x00007f003f29819a: nop    WORD PTR [rax+rax*1+0x0]
  0x00007f003f2981a0: movabs rbx,0x7f0038b69bb0  ;   {metadata(method data for {method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f2981aa: mov    eax,DWORD PTR [rbx+0x100]
  0x00007f003f2981b0: add    eax,0x8
  0x00007f003f2981b3: mov    DWORD PTR [rbx+0x100],eax
  0x00007f003f2981b9: movabs rbx,0x7f0038b66370  ;   {metadata({method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f2981c3: and    eax,0xfff8
  0x00007f003f2981c9: cmp    eax,0x0
  0x00007f003f2981cc: je     0x00007f003f298596  ; OopMap{rsi=Oop off=242}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)

  0x00007f003f2981d2: test   DWORD PTR [rip+0x1b129f28],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2981d8: cmp    edi,0xf4240
  0x00007f003f2981de: movabs rbx,0x7f0038b69bb0  ;   {metadata(method data for {method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f2981e8: movabs rax,0x2b8
  0x00007f003f2981f2: jl     0x00007f003f298202
  0x00007f003f2981f8: movabs rax,0x2c8
  0x00007f003f298202: mov    rdx,QWORD PTR [rbx+rax*1]
  0x00007f003f298206: lea    rdx,[rdx+0x1]
  0x00007f003f29820a: mov    QWORD PTR [rbx+rax*1],rdx
  0x00007f003f29820e: jge    0x00007f003f298524  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)

  0x00007f003f298214: mov    DWORD PTR [rsp+0x2c],edi
  0x00007f003f298218: cmp    rax,QWORD PTR [rsi]  ;*invokevirtual parse {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ; implicit exception: dispatches to 0x00007f003f2985ad
  0x00007f003f29821b: mov    rbx,rsi
  0x00007f003f29821e: movabs rax,0x7f0038b69bb0  ;   {metadata(method data for {method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f298228: movabs r10,0x7c0060028    ;   {metadata(&apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f298232: mov    QWORD PTR [rax+0x168],r10
  0x00007f003f298239: add    QWORD PTR [rax+0x170],0x1
  0x00007f003f298241: movabs rbx,0x7f0038b69a30  ;   {metadata(method data for {method} {0x00007f0038b66428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f29824b: mov    eax,DWORD PTR [rbx+0xfc]
  0x00007f003f298251: add    eax,0x8
  0x00007f003f298254: mov    DWORD PTR [rbx+0xfc],eax
  0x00007f003f29825a: movabs rbx,0x7f0038b66428  ;   {metadata({method} {0x00007f0038b66428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f298264: and    eax,0x7ffff8
  0x00007f003f29826a: cmp    eax,0x0
  0x00007f003f29826d: je     0x00007f003f2985b2
  0x00007f003f298273: movabs rbx,0x7f0038b69a30  ;   {metadata(method data for {method} {0x00007f0038b66428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f29827d: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f298285: mov    QWORD PTR [rsp+0x38],rsi
  0x00007f003f29828a: movabs rsi,0x670be2918    ;*invokestatic uuidFromCharSequence {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {oop(&quot;ba226cf7-d156-4b18-a78a-094736208cc9&quot;)}
  0x00007f003f298294: nop
  0x00007f003f298295: nop
  0x00007f003f298296: nop
  0x00007f003f298297: call   0x00007f003f1c5160  ; OopMap{[56]=Oop off=444}
                                                ;*invokestatic uuidFromCharSequence {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {static_call}
  0x00007f003f29829c: movabs rsi,0x7f0038b69bb0  ;   {metadata(method data for {method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f2982a6: add    QWORD PTR [rsi+0x1f0],0x1
  0x00007f003f2982ae: mov    rsi,rax            ;*invokestatic identityHashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)

  0x00007f003f2982b1: nop
  0x00007f003f2982b2: nop
  0x00007f003f2982b3: nop
  0x00007f003f2982b4: nop
  0x00007f003f2982b5: nop
  0x00007f003f2982b6: nop
  0x00007f003f2982b7: call   0x00007f003f1c5160  ; OopMap{[56]=Oop off=476}
                                                ;*invokestatic identityHashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)
                                                ;   {static_call}
  0x00007f003f2982bc: cmp    eax,0x1
  0x00007f003f2982bf: movabs rdx,0x7f0038b69bb0  ;   {metadata(method data for {method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f2982c9: movabs rsi,0x200
  0x00007f003f2982d3: jne    0x00007f003f2982e3
  0x00007f003f2982d9: movabs rsi,0x210
  0x00007f003f2982e3: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2982e7: lea    rdi,[rdi+0x1]
  0x00007f003f2982eb: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2982ef: jne    0x00007f003f298514  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@19 (line 13)

  0x00007f003f2982f5: movabs rdx,0x670b80c78    ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007f003f2982ff: mov    esi,DWORD PTR [rdx+0x6c]
  0x00007f003f298302: shl    rsi,0x3            ;*getstatic out {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@22 (line 14)

  0x00007f003f298306: cmp    rax,QWORD PTR [rsi]  ; implicit exception: dispatches to 0x00007f003f2985c9
  0x00007f003f298309: mov    rdx,rsi
  0x00007f003f29830c: movabs rdi,0x7f0038b69bb0  ;   {metadata(method data for {method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f298316: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f298319: shl    rdx,0x3
  0x00007f003f29831d: cmp    rdx,QWORD PTR [rdi+0x230]
  0x00007f003f298324: jne    0x00007f003f298333
  0x00007f003f298326: add    QWORD PTR [rdi+0x238],0x1
  0x00007f003f29832e: jmp    0x00007f003f2984f5
  0x00007f003f298333: cmp    rdx,QWORD PTR [rdi+0x240]
  0x00007f003f29833a: jne    0x00007f003f298349
  0x00007f003f29833c: add    QWORD PTR [rdi+0x248],0x1
  0x00007f003f298344: jmp    0x00007f003f2984f5
  0x00007f003f298349: cmp    rdx,QWORD PTR [rdi+0x250]
  0x00007f003f298350: jne    0x00007f003f29835f
  0x00007f003f298352: add    QWORD PTR [rdi+0x258],0x1
  0x00007f003f29835a: jmp    0x00007f003f2984f5
  0x00007f003f29835f: cmp    rdx,QWORD PTR [rdi+0x260]
  0x00007f003f298366: jne    0x00007f003f298375
  0x00007f003f298368: add    QWORD PTR [rdi+0x268],0x1
  0x00007f003f298370: jmp    0x00007f003f2984f5
  0x00007f003f298375: cmp    rdx,QWORD PTR [rdi+0x270]
  0x00007f003f29837c: jne    0x00007f003f29838b
  0x00007f003f29837e: add    QWORD PTR [rdi+0x278],0x1
  0x00007f003f298386: jmp    0x00007f003f2984f5
  0x00007f003f29838b: cmp    rdx,QWORD PTR [rdi+0x280]
  0x00007f003f298392: jne    0x00007f003f2983a1
  0x00007f003f298394: add    QWORD PTR [rdi+0x288],0x1
  0x00007f003f29839c: jmp    0x00007f003f2984f5
  0x00007f003f2983a1: cmp    rdx,QWORD PTR [rdi+0x290]
  0x00007f003f2983a8: jne    0x00007f003f2983b7
  0x00007f003f2983aa: add    QWORD PTR [rdi+0x298],0x1
  0x00007f003f2983b2: jmp    0x00007f003f2984f5
  0x00007f003f2983b7: cmp    rdx,QWORD PTR [rdi+0x2a0]
  0x00007f003f2983be: jne    0x00007f003f2983cd
  0x00007f003f2983c0: add    QWORD PTR [rdi+0x2a8],0x1
  0x00007f003f2983c8: jmp    0x00007f003f2984f5
  0x00007f003f2983cd: cmp    QWORD PTR [rdi+0x230],0x0
  0x00007f003f2983d8: jne    0x00007f003f2983f1
  0x00007f003f2983da: mov    QWORD PTR [rdi+0x230],rdx
  0x00007f003f2983e1: mov    QWORD PTR [rdi+0x238],0x1
  0x00007f003f2983ec: jmp    0x00007f003f2984f5
  0x00007f003f2983f1: cmp    QWORD PTR [rdi+0x240],0x0
  0x00007f003f2983fc: jne    0x00007f003f298415
  0x00007f003f2983fe: mov    QWORD PTR [rdi+0x240],rdx
  0x00007f003f298405: mov    QWORD PTR [rdi+0x248],0x1
  0x00007f003f298410: jmp    0x00007f003f2984f5
  0x00007f003f298415: cmp    QWORD PTR [rdi+0x250],0x0
  0x00007f003f298420: jne    0x00007f003f298439
  0x00007f003f298422: mov    QWORD PTR [rdi+0x250],rdx
  0x00007f003f298429: mov    QWORD PTR [rdi+0x258],0x1
  0x00007f003f298434: jmp    0x00007f003f2984f5
  0x00007f003f298439: cmp    QWORD PTR [rdi+0x260],0x0
  0x00007f003f298444: jne    0x00007f003f29845d
  0x00007f003f298446: mov    QWORD PTR [rdi+0x260],rdx
  0x00007f003f29844d: mov    QWORD PTR [rdi+0x268],0x1
  0x00007f003f298458: jmp    0x00007f003f2984f5
  0x00007f003f29845d: cmp    QWORD PTR [rdi+0x270],0x0
  0x00007f003f298468: jne    0x00007f003f298481
  0x00007f003f29846a: mov    QWORD PTR [rdi+0x270],rdx
  0x00007f003f298471: mov    QWORD PTR [rdi+0x278],0x1
  0x00007f003f29847c: jmp    0x00007f003f2984f5
  0x00007f003f298481: cmp    QWORD PTR [rdi+0x280],0x0
  0x00007f003f29848c: jne    0x00007f003f2984a5
  0x00007f003f29848e: mov    QWORD PTR [rdi+0x280],rdx
  0x00007f003f298495: mov    QWORD PTR [rdi+0x288],0x1
  0x00007f003f2984a0: jmp    0x00007f003f2984f5
  0x00007f003f2984a5: cmp    QWORD PTR [rdi+0x290],0x0
  0x00007f003f2984b0: jne    0x00007f003f2984c9
  0x00007f003f2984b2: mov    QWORD PTR [rdi+0x290],rdx
  0x00007f003f2984b9: mov    QWORD PTR [rdi+0x298],0x1
  0x00007f003f2984c4: jmp    0x00007f003f2984f5
  0x00007f003f2984c9: cmp    QWORD PTR [rdi+0x2a0],0x0
  0x00007f003f2984d4: jne    0x00007f003f2984ed
  0x00007f003f2984d6: mov    QWORD PTR [rdi+0x2a0],rdx
  0x00007f003f2984dd: mov    QWORD PTR [rdi+0x2a8],0x1
  0x00007f003f2984e8: jmp    0x00007f003f2984f5
  0x00007f003f2984ed: add    QWORD PTR [rdi+0x220],0x1
  0x00007f003f2984f5: movabs rdx,0x671594878    ;*invokevirtual println {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {oop(&quot;X&quot;)}
  0x00007f003f2984ff: nop
  0x00007f003f298500: nop
  0x00007f003f298501: nop
  0x00007f003f298502: nop
  0x00007f003f298503: nop
  0x00007f003f298504: nop
  0x00007f003f298505: movabs rax,0xffffffffffffffff
  0x00007f003f29850f: call   0x00007f003f1c4f60  ; OopMap{[56]=Oop off=1076}
                                                ;*invokevirtual println {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {virtual_call}
  0x00007f003f298514: mov    edi,DWORD PTR [rsp+0x2c]
  0x00007f003f298518: mov    rsi,QWORD PTR [rsp+0x38]
  0x00007f003f29851d: inc    edi
  0x00007f003f29851f: jmp    0x00007f003f2981a0  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@33 (line 11)

  0x00007f003f298524: add    rsp,0x50
  0x00007f003f298528: pop    rbp
  0x00007f003f298529: test   DWORD PTR [rip+0x1b129bd1],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29852f: ret                       ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@39 (line 18)

  0x00007f003f298530: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f298537: push   rbp
  0x00007f003f298538: sub    rsp,0x50
  0x00007f003f29853c: mov    rbx,QWORD PTR [rsi+0x10]
  0x00007f003f298540: mov    eax,DWORD PTR [rsi+0x8]
  0x00007f003f298543: mov    rdi,rsi
  0x00007f003f298546: mov    QWORD PTR [rsp+0x30],rbx
  0x00007f003f29854b: mov    DWORD PTR [rsp+0x28],eax
  0x00007f003f29854f: call   0x00007f0058f53ba0  ;   {runtime_call}
  0x00007f003f298554: mov    eax,DWORD PTR [rsp+0x28]
  0x00007f003f298558: mov    rdi,rax
  0x00007f003f29855b: mov    rbx,QWORD PTR [rsp+0x30]
  0x00007f003f298560: mov    rsi,rbx
  0x00007f003f298563: jmp    0x00007f003f298214
  0x00007f003f298568: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f29856d: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f298575: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=1178}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@-1 (line 9)
                                                ;   {runtime_call}
  0x00007f003f29857a: jmp    0x00007f003f29813e
  0x00007f003f29857f: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f298584: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f29858c: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=1201}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@1 (line 9)
                                                ;   {runtime_call}
  0x00007f003f298591: jmp    0x00007f003f298185
  0x00007f003f298596: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f29859b: mov    QWORD PTR [rsp],0x24
  0x00007f003f2985a3: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=1224}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)
                                                ;   {runtime_call}
  0x00007f003f2985a8: jmp    0x00007f003f2981d2
  0x00007f003f2985ad: call   0x00007f003f279000  ; OopMap{rsi=Oop off=1234}
                                                ;*invokevirtual parse {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {runtime_call}
  0x00007f003f2985b2: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2985b7: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2985bf: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=1252}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@-1 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {runtime_call}
  0x00007f003f2985c4: jmp    0x00007f003f298273
  0x00007f003f2985c9: call   0x00007f003f279000  ; OopMap{[56]=Oop rsi=Oop off=1262}
                                                ;*invokevirtual println {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {runtime_call}
  0x00007f003f2985ce: nop
  0x00007f003f2985cf: nop
  0x00007f003f2985d0: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2985d7: movabs r10,0x0
  0x00007f003f2985e1: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2985e8: movabs r10,0x0
  0x00007f003f2985f2: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2985f9: add    rsp,0x50
  0x00007f003f2985fd: pop    rbp
  0x00007f003f2985fe: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f298603: hlt    
  0x00007f003f298604: hlt    
  0x00007f003f298605: hlt    
  0x00007f003f298606: hlt    
  0x00007f003f298607: hlt    
  0x00007f003f298608: hlt    
  0x00007f003f298609: hlt    
  0x00007f003f29860a: hlt    
  0x00007f003f29860b: hlt    
  0x00007f003f29860c: hlt    
  0x00007f003f29860d: hlt    
  0x00007f003f29860e: hlt    
  0x00007f003f29860f: hlt    
  0x00007f003f298610: hlt    
  0x00007f003f298611: hlt    
  0x00007f003f298612: hlt    
  0x00007f003f298613: hlt    
  0x00007f003f298614: hlt    
  0x00007f003f298615: hlt    
  0x00007f003f298616: hlt    
  0x00007f003f298617: hlt    
  0x00007f003f298618: hlt    
  0x00007f003f298619: hlt    
  0x00007f003f29861a: hlt    
  0x00007f003f29861b: hlt    
  0x00007f003f29861c: hlt    
  0x00007f003f29861d: hlt    
  0x00007f003f29861e: hlt    
  0x00007f003f29861f: hlt    
[Stub Code]
  0x00007f003f298620: nop                       ;   {no_reloc}
  0x00007f003f298621: nop
  0x00007f003f298622: nop
  0x00007f003f298623: nop
  0x00007f003f298624: nop
  0x00007f003f298625: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f29862f: jmp    0x00007f003f29862f  ;   {runtime_call}
  0x00007f003f298634: nop
  0x00007f003f298635: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f29863f: jmp    0x00007f003f29863f  ;   {runtime_call}
  0x00007f003f298644: nop
  0x00007f003f298645: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f29864f: jmp    0x00007f003f29864f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f298654: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f298659: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f29865e: sub    rsp,0x80
  0x00007f003f298665: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f29866a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29866f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f298674: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f298679: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f29867e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f298683: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f298688: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f29868d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f298692: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f298697: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f29869c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2986a1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2986a6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2986ab: mov    QWORD PTR [rsp],r15
  0x00007f003f2986af: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2986b9: movabs rsi,0x7f003f298659  ;   {internal_word}
  0x00007f003f2986c3: mov    rdx,rsp
  0x00007f003f2986c6: and    rsp,0xfffffffffffffff0
  0x00007f003f2986ca: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2986cf: hlt    
[Deopt Handler Code]
  0x00007f003f2986d0: movabs r10,0x7f003f2986d0  ;   {section_word}
  0x00007f003f2986da: push   r10
  0x00007f003f2986dc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2986e1: hlt    
  0x00007f003f2986e2: hlt    
  0x00007f003f2986e3: hlt    
  0x00007f003f2986e4: hlt    
  0x00007f003f2986e5: hlt    
  0x00007f003f2986e6: hlt    
  0x00007f003f2986e7: hlt    
<nmethod compile_id='32' compile_kind='osr' compiler='C1' level='3' entry='0x00007f003f2980e0' size='2648' address='0x00007f003f297f10' relocation_offset='312' insts_offset='464' stub_offset='1808' scopes_data_offset='2048' scopes_pcs_offset='2248' dependencies_offset='2616' nul_chk_table_offset='2624' oops_offset='2008' metadata_offset='2016' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='65671' iicount='1' stamp='0.156'/>
<writer thread='139637818533632'/>
[Loaded java.util.Queue from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Deque from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/String.lastIndexOf  [0x00007f003f298b40, 0x00007f003f298ec8]  904 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003876c328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;ja
<writer thread='139637818533632'/>
[Loaded java.util.ArrayDeque from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
va/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x00007f003f298b40: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f298b44: shl    r10,0x3
  0x00007f003f298b48: cmp    r10,rax
  0x00007f003f298b4b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f298b51: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f298b5c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f298b60: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f298b67: push   rbp
  0x00007f003f298b68: sub    rsp,0x40
  0x00007f003f298b6c: movabs rax,0x7f0038a41870  ;   {metadata(method data for {method} {0x00007f003876c328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f298b76: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f298b7c: add    edi,0x8
  0x00007f003f298b7f: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f298b85: movabs rax,0x7f003876c328  ;   {metadata({method} {0x00007f003876c328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f298b8f: and    edi,0x1ff8
  0x00007f003f298b95: cmp    edi,0x0
  0x00007f003f298b98: je     0x00007f003f298d98  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@0 (line 1649)

  0x00007f003f298b9e: cmp    edx,0x10000
  0x00007f003f298ba4: movabs rax,0x7f0038a41870  ;   {metadata(method data for {method} {0x00007f003876c328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f298bae: movabs rdi,0x130
  0x00007f003f298bb8: jge    0x00007f003f298bc8
  0x00007f003f298bbe: movabs rdi,0x140
  0x00007f003f298bc8: mov    rbx,QWORD PTR [rax+rdi*1]
  0x00007f003f298bcc: lea    rbx,[rbx+0x1]
  0x00007f003f298bd0: mov    QWORD PTR [rax+rdi*1],rbx
  0x00007f003f298bd4: jge    0x00007f003f298d71  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)

  0x00007f003f298bda: mov    eax,DWORD PTR [rsi+0xc]
  0x00007f003f298bdd: shl    rax,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@7 (line 1652)

  0x00007f003f298be1: mov    esi,DWORD PTR [rax+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ; implicit exception: dispatches to 0x00007f003f298daf
  0x00007f003f298be4: dec    esi
  0x00007f003f298be6: movabs rdi,0x7f0038a41870  ;   {metadata(method data for {method} {0x00007f003876c328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f298bf0: add    QWORD PTR [rdi+0x150],0x1
  0x00007f003f298bf8: movabs rdi,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f298c02: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f298c08: add    ebx,0x8
  0x00007f003f298c0b: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f298c11: movabs rdi,0x7f003887a8b8  ;   {metadata({method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f298c1b: and    ebx,0x7ffff8
  0x00007f003f298c21: cmp    ebx,0x0
  0x00007f003f298c24: je     0x00007f003f298db4
  0x00007f003f298c2a: cmp    ecx,esi
  0x00007f003f298c2c: movabs rdi,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f298c36: movabs rbx,0x130
  0x00007f003f298c40: jg     0x00007f003f298c50
  0x00007f003f298c46: movabs rbx,0x140
  0x00007f003f298c50: mov    r8,QWORD PTR [rdi+rbx*1]
  0x00007f003f298c54: lea    r8,[r8+0x1]
  0x00007f003f298c58: mov    QWORD PTR [rdi+rbx*1],r8
  0x00007f003f298c5c: jg     0x00007f003f298c77  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x00007f003f298c62: movabs rsi,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f298c6c: inc    DWORD PTR [rsi+0x150]
  0x00007f003f298c72: jmp    0x00007f003f298d13  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x00007f003f298c77: mov    rcx,rsi
  0x00007f003f298c7a: jmp    0x00007f003f298d13  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x00007f003f298c7f: nop
  0x00007f003f298c80: movsxd rsi,ecx
  0x00007f003f298c83: cmp    ecx,DWORD PTR [rax+0xc]
  0x00007f003f298c86: jae    0x00007f003f298dcb
  0x00007f003f298c8c: movzx  esi,WORD PTR [rax+rsi*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x00007f003f298c91: cmp    esi,edx
  0x00007f003f298c93: movabs rsi,0x7f0038a41870  ;   {metadata(method data for {method} {0x00007f003876c328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f298c9d: movabs rdi,0x180
  0x00007f003f298ca7: jne    0x00007f003f298cb7
  0x00007f003f298cad: movabs rdi,0x190
  0x00007f003f298cb7: mov    rbx,QWORD PTR [rsi+rdi*1]
  0x00007f003f298cbb: lea    rbx,[rbx+0x1]
  0x00007f003f298cbf: mov    QWORD PTR [rsi+rdi*1],rbx
  0x00007f003f298cc3: je     0x00007f003f298d51  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x00007f003f298cc9: dec    ecx
  0x00007f003f298ccb: movabs rsi,0x7f0038a41870  ;   {metadata(method data for {method} {0x00007f003876c328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f298cd5: mov    edi,DWORD PTR [rsi+0x100]
  0x00007f003f298cdb: add    edi,0x8
  0x00007f003f298cde: mov    DWORD PTR [rsi+0x100],edi
  0x00007f003f298ce4: movabs rsi,0x7f003876c328  ;   {metadata({method} {0x00007f003876c328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f298cee: and    edi,0xfff8
  0x00007f003f298cf4: cmp    edi,0x0
  0x00007f003f298cf7: je     0x00007f003f298dd4  ; OopMap{rax=Oop off=445}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x00007f003f298cfd: test   DWORD PTR [rip+0x1b1293fd],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f298d03: movabs rsi,0x7f0038a41870  ;   {metadata(method data for {method} {0x00007f003876c328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f298d0d: inc    DWORD PTR [rsi+0x1a0]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x00007f003f298d13: cmp    ecx,0x0
  0x00007f003f298d16: movabs rsi,0x7f0038a41870  ;   {metadata(method data for {method} {0x00007f003876c328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f298d20: movabs rdi,0x160
  0x00007f003f298d2a: jl     0x00007f003f298d3a
  0x00007f003f298d30: movabs rdi,0x170
  0x00007f003f298d3a: mov    rbx,QWORD PTR [rsi+rdi*1]
  0x00007f003f298d3e: lea    rbx,[rbx+0x1]
  0x00007f003f298d42: mov    QWORD PTR [rsi+rdi*1],rbx
  0x00007f003f298d46: jl     0x00007f003f298d60
  0x00007f003f298d4c: jmp    0x00007f003f298c80  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x00007f003f298d51: mov    rax,rcx
  0x00007f003f298d54: add    rsp,0x40
  0x00007f003f298d58: pop    rbp
  0x00007f003f298d59: test   DWORD PTR [rip+0x1b1293a1],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f298d5f: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@36 (line 1656)

  0x00007f003f298d60: mov    eax,0xffffffff
  0x00007f003f298d65: add    rsp,0x40
  0x00007f003f298d69: pop    rbp
  0x00007f003f298d6a: test   DWORD PTR [rip+0x1b129390],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f298d70: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@44 (line 1659)

  0x00007f003f298d71: mov    rdi,rsi
  0x00007f003f298d74: movabs rbx,0x7f0038a41870  ;   {metadata(method data for {method} {0x00007f003876c328} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f298d7e: add    QWORD PTR [rbx+0x1b8],0x1
  0x00007f003f298d86: nop
  0x00007f003f298d87: call   0x00007f003f1c4d60  ; OopMap{off=588}
                                                ;*invokespecial lastIndexOfSupplementary {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@48 (line 1661)
                                                ;   {optimized virtual_call}
  0x00007f003f298d8c: add    rsp,0x40
  0x00007f003f298d90: pop    rbp
  0x00007f003f298d91: test   DWORD PTR [rip+0x1b129369],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f298d97: ret    
  0x00007f003f298d98: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f298d9d: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f298da5: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=618}
                                                ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1649)
                                                ;   {runtime_call}
  0x00007f003f298daa: jmp    0x00007f003f298b9e
  0x00007f003f298daf: call   0x00007f003f279000  ; OopMap{rax=Oop off=628}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ;   {runtime_call}
  0x00007f003f298db4: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f298db9: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f298dc1: call   0x00007f003f27d5e0  ; OopMap{rax=Oop off=646}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)
                                                ;   {runtime_call}
  0x00007f003f298dc6: jmp    0x00007f003f298c2a
  0x00007f003f298dcb: mov    QWORD PTR [rsp],rcx
  0x00007f003f298dcf: call   0x00007f003f278940  ; OopMap{rax=Oop off=660}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)
                                                ;   {runtime_call}
  0x00007f003f298dd4: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f298dd9: mov    QWORD PTR [rsp],0x28
  0x00007f003f298de1: call   0x00007f003f27d5e0  ; OopMap{rax=Oop off=678}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)
                                                ;   {runtime_call}
  0x00007f003f298de6: jmp    0x00007f003f298cfd
  0x00007f003f298deb: nop
  0x00007f003f298dec: nop
  0x00007f003f298ded: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f298df4: movabs r10,0x0
  0x00007f003f298dfe: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f298e05: movabs r10,0x0
  0x00007f003f298e0f: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f298e16: add    rsp,0x40
  0x00007f003f298e1a: pop    rbp
  0x00007f003f298e1b: jmp    0x00007f003f2785a0  ;   {runtime_call}
[Stub Code]
  0x00007f003f298e20: nop                       ;   {no_reloc}
  0x00007f003f298e21: nop
  0x00007f003f298e22: nop
  0x00007f003f298e23: nop
  0x00007f003f298e24: nop
  0x00007f003f298e25: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f298e2f: jmp    0x00007f003f298e2f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f298e34: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f298e39: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f298e3e: sub    rsp,0x80
  0x00007f003f298e45: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f298e4a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f298e4f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f298e54: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f298e59: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f298e5e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f298e63: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f298e68: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f298e6d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f298e72: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f298e77: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f298e7c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f298e81: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f298e86: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f298e8b: mov    QWORD PTR [rsp],r15
  0x00007f003f298e8f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f298e99: movabs rsi,0x7f003f298e39  ;   {internal_word}
  0x00007f003f298ea3: mov    rdx,rsp
  0x00007f003f298ea6: and    rsp,0xfffffffffffffff0
  0x00007f003f298eaa: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f298eaf: hlt    
[Deopt Handler Code]
  0x00007f003f298eb0: movabs r10,0x7f003f298eb0  ;   {section_word}
  0x00007f003f298eba: push   r10
  0x00007f003f298ebc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f298ec1: hlt    
  0x00007f003f298ec2: hlt    
  0x00007f003f298ec3: hlt    
  0x00007f003f298ec4: hlt    
  0x00007f003f298ec5: hlt    
  0x00007f003f298ec6: hlt    
  0x00007f003f298ec7: hlt    
<nmethod compile_id='33' compiler='C1' level='3' entry='0x00007f003f298b40' size='1912' address='0x00007f003f298990' relocation_offset='312' insts_offset='432' stub_offset='1168' scopes_data_offset='1352' scopes_pcs_offset='1536' dependencies_offset='1888' nul_chk_table_offset='1896' metadata_offset='1336' method='java/lang/String lastIndexOf (II)I' bytes='52' count='113' backedge_count='3097' iicount='113' stamp='0.158'/>
<writer thread='139637818533632'/>
[Loaded java.util.zip.ZipCoder from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.JarIndex from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.ExtensionDependency from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139639490488064'/>
<task_queued compile_id='34' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='66589' iicount='1' level='3' stamp='0.159' comment='tiered' hot_count='1'/>
<writer thread='139637818533632'/>
<task_queued compile_id='35' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='395' iicount='395' level='3' stamp='0.159' comment='tiered' hot_count='395'/>
<task_queued compile_id='36' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='384' iicount='384' level='3' stamp='0.159' comment='tiered' hot_count='384'/>
<task_queued compile_id='37' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='384' iicount='384' level='3' stamp='0.159' comment='tiered' hot_count='384'/>
<task_queued compile_id='38' method='java/lang/Character toUpperCaseEx (I)I' bytes='30' count='384' iicount='384' level='3' stamp='0.159' comment='tiered' hot_count='384'/>
<task_queued compile_id='39' method='java/lang/CharacterDataLatin1 toUpperCaseEx (I)I' bytes='71' count='512' iicount='512' level='3' stamp='0.159' comment='tiered' hot_count='512'/>
[Loaded java.util.zip.ZipEntry from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
com/github/marschall/charsequences/ParseUuidCompilation.&lt;init&gt;  [0x00007f003f299320, 0x00007f003f2998c8]  1448 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f003f299320: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f299324: shl    r10,0x3
  0x00007f003f299328: cmp    r10,rax
  0x00007f003f29932b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f299331: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f29933c: data16 data16 xchg ax,ax
<writer thread='139637818533632'/>
[Loaded java.util.jar.JarEntry from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>

[Verified Entry Point]
  0x00007f003f299340: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f299347: push   rbp
  0x00007f003f299348: sub    rsp,0x40
  0x00007f003f29934c: mov    QWORD PTR [rsp+0x30],rsi
  0x00007f003f299351: movabs rdi,0x7f0038b69bb0  ;   {metadata(method data for {method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f29935b: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f299361: add    ebx,0x8
  0x00007f003f299364: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f29936a: movabs rdi,0x7f0038b66370  ;   {metadata({method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f299374: and    ebx,0x1ff8
  0x00007f003f29937a: cmp    ebx,0x0
  0x00007f003f29937d: je     0x00007f003f299757  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@0 (line 9)

  0x00007f003f299383: mov    rdi,rsi
  0x00007f003f299386: movabs rbx,0x7f0038b69bb0  ;   {metadata(method data for {method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f299390: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f299398: movabs rdi,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2993a2: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2993a8: add    ebx,0x8
  0x00007f003f2993ab: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2993b1: movabs rdi,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2993bb: and    ebx,0x7ffff8
  0x00007f003f2993c1: cmp    ebx,0x0
  0x00007f003f2993c4: je     0x00007f003f29976e
  0x00007f003f2993ca: movabs rdi,0x7f0038b69bb0  ;   {metadata(method data for {method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f2993d4: inc    DWORD PTR [rdi+0x140]
  0x00007f003f2993da: mov    edi,0x0
  0x00007f003f2993df: jmp    0x00007f003f2996d7  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@6 (line 11)

  0x00007f003f2993e4: nop    DWORD PTR [rax+0x0]
  0x00007f003f2993e8: mov    DWORD PTR [rsp+0x28],edi
  0x00007f003f2993ec: mov    rbx,rsi
  0x00007f003f2993ef: movabs rax,0x7f0038b69bb0  ;   {metadata(method data for {method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f2993f9: add    QWORD PTR [rax+0x170],0x1
  0x00007f003f299401: movabs rbx,0x7f0038b69a30  ;   {metadata(method data for {method} {0x00007f0038b66428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f29940b: mov    eax,DWORD PTR [rbx+0xfc]
  0x00007f003f299411: add    eax,0x8
  0x00007f003f299414: mov    DWORD PTR [rbx+0xfc],eax
  0x00007f003f29941a: movabs rbx,0x7f0038b66428  ;   {metadata({method} {0x00007f0038b66428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f299424: and    eax,0x7ffff8
  0x00007f003f29942a: cmp    eax,0x0
  0x00007f003f29942d: je     0x00007f003f299785
  0x00007f003f299433: movabs rbx,0x7f0038b69a30  ;   {metadata(method data for {method} {0x00007f0038b66428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f29943d: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f299445: movabs rsi,0x670be2918    ;*invokestatic uuidFromCharSequence {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {oop(&quot;ba226cf7-d156-4b18-a78a-094736208cc9&quot;)}
  0x00007f003f29944f: call   0x00007f003f1c5160  ; OopMap{[48]=Oop off=308}
                                                ;*invokestatic uuidFromCharSequence {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {static_call}
  0x00007f003f299454: movabs rsi,0x7f0038b69bb0  ;   {metadata(method data for {method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f29945e: add    QWORD PTR [rsi+0x1f0],0x1
  0x00007f003f299466: mov    rsi,rax            ;*invokestatic identityHashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)

  0x00007f003f299469: nop
  0x00007f003f29946a: nop
  0x00007f003f29946b: nop
  0x00007f003f29946c: nop
  0x00007f003f29946d: nop
  0x00007f003f29946e: nop
  0x00007f003f29946f: call   0x00007f003f1c5160  ; OopMap{[48]=Oop off=340}
                                                ;*invokestatic identityHashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)
                                                ;   {static_call}
  0x00007f003f299474: cmp    eax,0x1
  0x00007f003f299477: movabs rdx,0x7f0038b69bb0  ;   {metadata(method data for {method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f299481: movabs rsi,0x200
  0x00007f003f29948b: jne    0x00007f003f29949b
  0x00007f003f299491: movabs rsi,0x210
  0x00007f003f29949b: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f29949f: lea    rdi,[rdi+0x1]
  0x00007f003f2994a3: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2994a7: jne    0x00007f003f2996cc  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@19 (line 13)

  0x00007f003f2994ad: movabs rdx,0x670b80c78    ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007f003f2994b7: mov    esi,DWORD PTR [rdx+0x6c]
  0x00007f003f2994ba: shl    rsi,0x3            ;*getstatic out {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@22 (line 14)

  0x00007f003f2994be: cmp    rax,QWORD PTR [rsi]  ; implicit exception: dispatches to 0x00007f003f29979c
  0x00007f003f2994c1: mov    rdx,rsi
  0x00007f003f2994c4: movabs rdi,0x7f0038b69bb0  ;   {metadata(method data for {method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f2994ce: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2994d1: shl    rdx,0x3
  0x00007f003f2994d5: cmp    rdx,QWORD PTR [rdi+0x230]
  0x00007f003f2994dc: jne    0x00007f003f2994eb
  0x00007f003f2994de: add    QWORD PTR [rdi+0x238],0x1
  0x00007f003f2994e6: jmp    0x00007f003f2996ad
  0x00007f003f2994eb: cmp    rdx,QWORD PTR [rdi+0x240]
  0x00007f003f2994f2: jne    0x00007f003f299501
  0x00007f003f2994f4: add    QWORD PTR [rdi+0x248],0x1
  0x00007f003f2994fc: jmp    0x00007f003f2996ad
  0x00007f003f299501: cmp    rdx,QWORD PTR [rdi+0x250]
  0x00007f003f299508: jne    0x00007f003f299517
  0x00007f003f29950a: add    QWORD PTR [rdi+0x258],0x1
  0x00007f003f299512: jmp    0x00007f003f2996ad
  0x00007f003f299517: cmp    rdx,QWORD PTR [rdi+0x260]
  0x00007f003f29951e: jne    0x00007f003f29952d
  0x00007f003f299520: add    QWORD PTR [rdi+0x268],0x1
  0x00007f003f299528: jmp    0x00007f003f2996ad
  0x00007f003f29952d: cmp    rdx,QWORD PTR [rdi+0x270]
  0x00007f003f299534: jne    0x00007f003f299543
  0x00007f003f299536: add    QWORD PTR [rdi+0x278],0x1
  0x00007f003f29953e: jmp    0x00007f003f2996ad
  0x00007f003f299543: cmp    rdx,QWORD PTR [rdi+0x280]
  0x00007f003f29954a: jne    0x00007f003f299559
  0x00007f003f29954c: add    QWORD PTR [rdi+0x288],0x1
  0x00007f003f299554: jmp    0x00007f003f2996ad
  0x00007f003f299559: cmp    rdx,QWORD PTR [rdi+0x290]
  0x00007f003f299560: jne    0x00007f003f29956f
  0x00007f003f299562: add    QWORD PTR [rdi+0x298],0x1
  0x00007f003f29956a: jmp    0x00007f003f2996ad
  0x00007f003f29956f: cmp    rdx,QWORD PTR [rdi+0x2a0]
  0x00007f003f299576: jne    0x00007f003f299585
  0x00007f003f299578: add    QWORD PTR [rdi+0x2a8],0x1
  0x00007f003f299580: jmp    0x00007f003f2996ad
  0x00007f003f299585: cmp    QWORD PTR [rdi+0x230],0x0
  0x00007f003f299590: jne    0x00007f003f2995a9
  0x00007f003f299592: mov    QWORD PTR [rdi+0x230],rdx
  0x00007f003f299599: mov    QWORD PTR [rdi+0x238],0x1
  0x00007f003f2995a4: jmp    0x00007f003f2996ad
  0x00007f003f2995a9: cmp    QWORD PTR [rdi+0x240],0x0
  0x00007f003f2995b4: jne    0x00007f003f2995cd
  0x00007f003f2995b6: mov    QWORD PTR [rdi+0x240],rdx
  0x00007f003f2995bd: mov    QWORD PTR [rdi+0x248],0x1
  0x00007f003f2995c8: jmp    0x00007f003f2996ad
  0x00007f003f2995cd: cmp    QWORD PTR [rdi+0x250],0x0
  0x00007f003f2995d8: jne    0x00007f003f2995f1
  0x00007f003f2995da: mov    QWORD PTR [rdi+0x250],rdx
  0x00007f003f2995e1: mov    QWORD PTR [rdi+0x258],0x1
  0x00007f003f2995ec: jmp    0x00007f003f2996ad
  0x00007f003f2995f1: cmp    QWORD PTR [rdi+0x260],0x0
  0x00007f003f2995fc: jne    0x00007f003f299615
  0x00007f003f2995fe: mov    QWORD PTR [rdi+0x260],rdx
  0x00007f003f299605: mov    QWORD PTR [rdi+0x268],0x1
  0x00007f003f299610: jmp    0x00007f003f2996ad
  0x00007f003f299615: cmp    QWORD PTR [rdi+0x270],0x0
  0x00007f003f299620: jne    0x00007f003f299639
  0x00007f003f299622: mov    QWORD PTR [rdi+0x270],rdx
  0x00007f003f299629: mov    QWORD PTR [rdi+0x278],0x1
  0x00007f003f299634: jmp    0x00007f003f2996ad
  0x00007f003f299639: cmp    QWORD PTR [rdi+0x280],0x0
  0x00007f003f299644: jne    0x00007f003f29965d
  0x00007f003f299646: mov    QWORD PTR [rdi+0x280],rdx
  0x00007f003f29964d: mov    QWORD PTR [rdi+0x288],0x1
  0x00007f003f299658: jmp    0x00007f003f2996ad
  0x00007f003f29965d: cmp    QWORD PTR [rdi+0x290],0x0
  0x00007f003f299668: jne    0x00007f003f299681
  0x00007f003f29966a: mov    QWORD PTR [rdi+0x290],rdx
  0x00007f003f299671: mov    QWORD PTR [rdi+0x298],0x1
  0x00007f003f29967c: jmp    0x00007f003f2996ad
  0x00007f003f299681: cmp    QWORD PTR [rdi+0x2a0],0x0
  0x00007f003f29968c: jne    0x00007f003f2996a5
  0x00007f003f29968e: mov    QWORD PTR [rdi+0x2a0],rdx
  0x00007f003f299695: mov    QWORD PTR [rdi+0x2a8],0x1
  0x00007f003f2996a0: jmp    0x00007f003f2996ad
  0x00007f003f2996a5: add    QWORD PTR [rdi+0x220],0x1
  0x00007f003f2996ad: movabs rdx,0x671594878    ;*invokevirtual println {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {oop(&quot;X&quot;)}
  0x00007f003f2996b7: nop
  0x00007f003f2996b8: nop
  0x00007f003f2996b9: nop
  0x00007f003f2996ba: nop
  0x00007f003f2996bb: nop
  0x00007f003f2996bc: nop
  0x00007f003f2996bd: movabs rax,0xffffffffffffffff
  0x00007f003f2996c7: call   0x00007f003f1c4f60  ; OopMap{[48]=Oop off=940}
                                                ;*invokevirtual println {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {virtual_call}
  0x00007f003f2996cc: mov    edi,DWORD PTR [rsp+0x28]
  0x00007f003f2996d0: inc    edi
  0x00007f003f2996d2: mov    rsi,QWORD PTR [rsp+0x30]
  0x00007f003f2996d7: movabs rbx,0x7f0038b69bb0  ;   {metadata(method data for {method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f2996e1: mov    eax,DWORD PTR [rbx+0x100]
  0x00007f003f2996e7: add    eax,0x8
  0x00007f003f2996ea: mov    DWORD PTR [rbx+0x100],eax
  0x00007f003f2996f0: movabs rbx,0x7f0038b66370  ;   {metadata({method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f2996fa: and    eax,0xfff8
  0x00007f003f299700: cmp    eax,0x0
  0x00007f003f299703: je     0x00007f003f2997a1  ; OopMap{rsi=Oop [48]=Oop off=1001}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)

  0x00007f003f299709: test   DWORD PTR [rip+0x1b1289f1],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f29970f: cmp    edi,0xf4240
  0x00007f003f299715: movabs rbx,0x7f0038b69bb0  ;   {metadata(method data for {method} {0x00007f0038b66370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f003f29971f: movabs rax,0x2b8
  0x00007f003f299729: jl     0x00007f003f299739
  0x00007f003f29972f: movabs rax,0x2c8
  0x00007f003f299739: mov    rdx,QWORD PTR [rbx+rax*1]
  0x00007f003f29973d: lea    rdx,[rdx+0x1]
  0x00007f003f299741: mov    QWORD PTR [rbx+rax*1],rdx
  0x00007f003f299745: jl     0x00007f003f2993e8  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)

  0x00007f003f29974b: add    rsp,0x40
  0x00007f003f29974f: pop    rbp
  0x00007f003f299750: test   DWORD PTR [rip+0x1b1289aa],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f299756: ret    
  0x00007f003f299757: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f29975c: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f299764: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [48]=Oop off=1097}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@-1 (line 9)
                                                ;   {runtime_call}
  0x00007f003f299769: jmp    0x00007f003f299383
  0x00007f003f29976e: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f299773: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f29977b: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [48]=Oop off=1120}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@1 (line 9)
                                                ;   {runtime_call}
  0x00007f003f299780: jmp    0x00007f003f2993ca
  0x00007f003f299785: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f29978a: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f299792: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [48]=Oop off=1143}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@-1 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {runtime_call}
  0x00007f003f299797: jmp    0x00007f003f299433
  0x00007f003f29979c: call   0x00007f003f279000  ; OopMap{[48]=Oop rsi=Oop off=1153}
                                                ;*invokevirtual println {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {runtime_call}
  0x00007f003f2997a1: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2997a6: mov    QWORD PTR [rsp],0x24
  0x00007f003f2997ae: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [48]=Oop off=1171}
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)
                                                ;   {runtime_call}
  0x00007f003f2997b3: jmp    0x00007f003f299709
  0x00007f003f2997b8: nop
  0x00007f003f2997b9: nop
  0x00007f003f2997ba: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2997c1: movabs r10,0x0
  0x00007f003f2997cb: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2997d2: movabs r10,0x0
  0x00007f003f2997dc: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2997e3: add    rsp,0x40
  0x00007f003f2997e7: pop    rbp
  0x00007f003f2997e8: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2997ed: hlt    
  0x00007f003f2997ee: hlt    
  0x00007f003f2997ef: hlt    
  0x00007f003f2997f0: hlt    
  0x00007f003f2997f1: hlt    
  0x00007f003f2997f2: hlt    
  0x00007f003f2997f3: hlt    
  0x00007f003f2997f4: hlt    
  0x00007f003f2997f5: hlt    
  0x00007f003f2997f6: hlt    
  0x00007f003f2997f7: hlt    
  0x00007f003f2997f8: hlt    
  0x00007f003f2997f9: hlt    
  0x00007f003f2997fa: hlt    
  0x00007f003f2997fb: hlt    
  0x00007f003f2997fc: hlt    
  0x00007f003f2997fd: hlt    
  0x00007f003f2997fe: hlt    
  0x00007f003f2997ff: hlt    
[Stub Code]
  0x00007f003f299800: nop                       ;   {no_reloc}
  0x00007f003f299801: nop
  0x00007f003f299802: nop
  0x00007f003f299803: nop
  0x00007f003f299804: nop
  0x00007f003f299805: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f29980f: jmp    0x00007f003f29980f  ;   {runtime_call}
  0x00007f003f299814: nop
  0x00007f003f299815: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f29981f: jmp    0x00007f003f29981f  ;   {runtime_call}
  0x00007f003f299824: nop
  0x00007f003f299825: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f29982f: jmp    0x00007f003f29982f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f299834: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f299839: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f29983e: sub    rsp,0x80
  0x00007f003f299845: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f29984a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29984f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f299854: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f299859: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f29985e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f299863: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f299868: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f29986d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f299872: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f299877: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f29987c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f299881: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f299886: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f29988b: mov    QWORD PTR [rsp],r15
  0x00007f003f29988f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f299899: movabs rsi,0x7f003f299839  ;   {internal_word}
  0x00007f003f2998a3: mov    rdx,rsp
  0x00007f003f2998a6: and    rsp,0xfffffffffffffff0
  0x00007f003f2998aa: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2998af: hlt    
[Deopt Handler Code]
  0x00007f003f2998b0: movabs r10,0x7f003f2998b0  ;   {section_word}
  0x00007f003f2998ba: push   r10
  0x00007f003f2998bc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2998c1: hlt    
  0x00007f003f2998c2: hlt    
  0x00007f003f2998c3: hlt    
  0x00007f003f2998c4: hlt    
  0x00007f003f2998c5: hlt    
  0x00007f003f2998c6: hlt    
  0x00007f003f2998c7: hlt    
<nmethod compile_id='34' compiler='C1' level='3' entry='0x00007f003f299320' size='2464' address='0x00007f003f299150' relocation_offset='312' insts_offset='464' stub_offset='1712' scopes_data_offset='1952' scopes_pcs_offset='2136' dependencies_offset='2440' nul_chk_table_offset='2448' oops_offset='1912' metadata_offset='1920' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='72475' iicount='1' stamp='0.162'/>
<writer thread='139637818533632'/>
[Loaded java.util.jar.JarFile$JarFileEntry from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader$2 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/CharacterData.of  [0x00007f003f299ce0, 0x00007f003f29a250]  1392 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f0038960658} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f003f299ce0: mov    DWORD PTR [rsp-0x14000],
<writer thread='139637818533632'/>
[Loaded java.util.zip.ZipFile$ZipFileInputStream from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
eax
  0x00007f003f299ce7: push   rbp
  0x00007f003f299ce8: sub    rsp,0x30
  0x00007f003f299cec: movabs rax,0x7f0038a4f620  ;   {metadata(method data for {method} {0x00007f0038960658} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x00007f003f299cf6: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f299cfc: add    edi,0x8
  0x00007f003f299cff: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f299d05: movabs rax,0x7f0038960658  ;   {metadata({method} {0x00007f0038960658} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x00007f003f299d0f: and    edi,0x1ff8
  0x00007f003f299d15: cmp    edi,0x0
  0x00007f003f299d18: je     0x00007f003f299e9c  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@0 (line 77)

  0x00007f003f299d1e: mov    rax,rsi
  0x00007f003f299d21: shr    eax,0x8
  0x00007f003f299d24: cmp    eax,0x0
  0x00007f003f299d27: movabs rax,0x7f0038a4f620  ;   {metadata(method data for {method} {0x00007f0038960658} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x00007f003f299d31: movabs rdi,0x130
  0x00007f003f299d3b: jne    0x00007f003f299d4b
  0x00007f003f299d41: movabs rdi,0x140
  0x00007f003f299d4b: mov    rbx,QWORD PTR [rax+rdi*1]
  0x00007f003f299d4f: lea    rbx,[rbx+0x1]
  0x00007f003f299d53: mov    QWORD PTR [rax+rdi*1],rbx
  0x00007f003f299d57: je     0x00007f003f299e86  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x00007f003f299d5d: shr    esi,0x10
  0x00007f003f299d60: cmp    esi,0x0
  0x00007f003f299d63: je     0x00007f003f299e5e
  0x00007f003f299d69: cmp    esi,0x1
  0x00007f003f299d6c: je     0x00007f003f299e36
  0x00007f003f299d72: cmp    esi,0x2
  0x00007f003f299d75: je     0x00007f003f299e0e
  0x00007f003f299d7b: cmp    esi,0xe
  0x00007f003f299d7e: je     0x00007f003f299de6
  0x00007f003f299d84: cmp    esi,0xf
  0x00007f003f299d87: je     0x00007f003f299d96
  0x00007f003f299d8d: cmp    esi,0x10
  0x00007f003f299d90: jne    0x00007f003f299dbe  ;*tableswitch {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@15 (line 80)

  0x00007f003f299d96: xchg   ax,ax
  0x00007f003f299d98: jmp    0x00007f003f299f08  ;   {no_reloc}
  0x00007f003f299d9d: add    BYTE PTR [rax],al
  0x00007f003f299d9f: add    BYTE PTR [rax],al
  0x00007f003f299da1: add    BYTE PTR [rsi+0xf],ah
  0x00007f003f299da4: (bad)  
  0x00007f003f299da5: add    BYTE PTR [rax],r8b
  0x00007f003f299da8: jmp    0x00007f003f299f22  ; implicit exception: dispatches to 0x00007f003f299f12
  0x00007f003f299dad: nop
  0x00007f003f299dae: shl    rax,0x3            ;*getstatic instance {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x00007f003f299db2: add    rsp,0x30
  0x00007f003f299db6: pop    rbp
  0x00007f003f299db7: test   DWORD PTR [rip+0x1b128343],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f299dbd: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@115 (line 91)

  0x00007f003f299dbe: xchg   ax,ax
  0x00007f003f299dc0: jmp    0x00007f003f299f81  ;   {no_reloc}
  0x00007f003f299dc5: add    BYTE PTR [rax],al
  0x00007f003f299dc7: add    BYTE PTR [rax],al
  0x00007f003f299dc9: add    BYTE PTR [rsi+0xf],ah
  0x00007f003f299dcc: (bad)  
  0x00007f003f299dcd: add    BYTE PTR [rax],r8b
  0x00007f003f299dd0: jmp    0x00007f003f299f9b  ; implicit exception: dispatches to 0x00007f003f299f8b
  0x00007f003f299dd5: nop
  0x00007f003f299dd6: shl    rax,0x3            ;*getstatic instance {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@116 (line 93)

  0x00007f003f299dda: add    rsp,0x30
  0x00007f003f299dde: pop    rbp
  0x00007f003f299ddf: test   DWORD PTR [rip+0x1b12831b],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f299de5: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@119 (line 93)

  0x00007f003f299de6: xchg   ax,ax
  0x00007f003f299de8: jmp    0x00007f003f299ffa  ;   {no_reloc}
  0x00007f003f299ded: add    BYTE PTR [rax],al
  0x00007f003f299def: add    BYTE PTR [rax],al
  0x00007f003f299df1: add    BYTE PTR [rsi+0xf],ah
  0x00007f003f299df4: (bad)  
  0x00007f003f299df5: add    BYTE PTR [rax],r8b
  0x00007f003f299df8: jmp    0x00007f003f29a014  ; implicit exception: dispatches to 0x00007f003f29a004
  0x00007f003f299dfd: nop
  0x00007f003f299dfe: shl    rax,0x3            ;*getstatic instance {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@108 (line 88)

  0x00007f003f299e02: add    rsp,0x30
  0x00007f003f299e06: pop    rbp
  0x00007f003f299e07: test   DWORD PTR [rip+0x1b1282f3],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f299e0d: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@111 (line 88)

  0x00007f003f299e0e: xchg   ax,ax
  0x00007f003f299e10: jmp    0x00007f003f29a073  ;   {no_reloc}
  0x00007f003f299e15: add    BYTE PTR [rax],al
  0x00007f003f299e17: add    BYTE PTR [rax],al
  0x00007f003f299e19: add    BYTE PTR [rsi+0xf],ah
  0x00007f003f299e1c: (bad)  
  0x00007f003f299e1d: add    BYTE PTR [rax],r8b
  0x00007f003f299e20: jmp    0x00007f003f29a08d  ; implicit exception: dispatches to 0x00007f003f29a07d
  0x00007f003f299e25: nop
  0x00007f003f299e26: shl    rax,0x3            ;*getstatic instance {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@104 (line 86)

  0x00007f003f299e2a: add    rsp,0x30
  0x00007f003f299e2e: pop    rbp
  0x00007f003f299e2f: test   DWORD PTR [rip+0x1b1282cb],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f299e35: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@107 (line 86)

  0x00007f003f299e36: xchg   ax,ax
  0x00007f003f299e38: jmp    0x00007f003f29a0ec  ;   {no_reloc}
  0x00007f003f299e3d: add    BYTE PTR [rax],al
  0x00007f003f299e3f: add    BYTE PTR [rax],al
  0x00007f003f299e41: add    BYTE PTR [rsi+0xf],ah
  0x00007f003f299e44: (bad)  
  0x00007f003f299e45: add    BYTE PTR [rax],r8b
  0x00007f003f299e48: jmp    0x00007f003f29a106  ; implicit exception: dispatches to 0x00007f003f29a0f6
  0x00007f003f299e4d: nop
  0x00007f003f299e4e: shl    rax,0x3            ;*getstatic instance {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@100 (line 84)

  0x00007f003f299e52: add    rsp,0x30
  0x00007f003f299e56: pop    rbp
  0x00007f003f299e57: test   DWORD PTR [rip+0x1b1282a3],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f299e5d: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@103 (line 84)

  0x00007f003f299e5e: xchg   ax,ax
  0x00007f003f299e60: jmp    0x00007f003f29a165  ;   {no_reloc}
  0x00007f003f299e65: add    BYTE PTR [rax],al
  0x00007f003f299e67: add    BYTE PTR [rax],al
  0x00007f003f299e69: add    BYTE PTR [rsi+0xf],ah
  0x00007f003f299e6c: (bad)  
  0x00007f003f299e6d: add    BYTE PTR [rax],r8b
  0x00007f003f299e70: jmp    0x00007f003f29a17f  ; implicit exception: dispatches to 0x00007f003f29a16f
  0x00007f003f299e75: nop
  0x00007f003f299e76: shl    rax,0x3            ;*getstatic instance {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@96 (line 82)

  0x00007f003f299e7a: add    rsp,0x30
  0x00007f003f299e7e: pop    rbp
  0x00007f003f299e7f: test   DWORD PTR [rip+0x1b12827b],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f299e85: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@99 (line 82)

  0x00007f003f299e86: movabs rax,0x670bc4918    ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f299e90: add    rsp,0x30
  0x00007f003f299e94: pop    rbp
  0x00007f003f299e95: test   DWORD PTR [rip+0x1b128265],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f299e9b: ret    
  0x00007f003f299e9c: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f299ea1: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f299ea9: call   0x00007f003f27d5e0  ; OopMap{off=462}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)
                                                ;   {runtime_call}
  0x00007f003f299eae: jmp    0x00007f003f299d1e
  0x00007f003f299eb3: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f299ebd: push   rax
  0x00007f003f299ebe: push   rbx
  0x00007f003f299ebf: mov    rbx,QWORD PTR [rax+0x48]
  0x00007f003f299ec3: push   rdi
  0x00007f003f299ec4: push   rsi
  0x00007f003f299ec5: push   rdx
  0x00007f003f299ec6: push   rcx
  0x00007f003f299ec7: push   r8
  0x00007f003f299ec9: push   r9
  0x00007f003f299ecb: push   r10
  0x00007f003f299ecd: mov    r10,rsp
  0x00007f003f299ed0: and    rsp,0xfffffffffffffff0
  0x00007f003f299ed4: push   r10
  0x00007f003f299ed6: push   r11
  0x00007f003f299ed8: mov    edi,0x1
  0x00007f003f299edd: call   0x00007f0059f91470  ;   {runtime_call}
  0x00007f003f299ee2: pop    r11
  0x00007f003f299ee4: pop    rsp
  0x00007f003f299ee5: pop    r10
  0x00007f003f299ee7: pop    r9
  0x00007f003f299ee9: pop    r8
  0x00007f003f299eeb: pop    rcx
  0x00007f003f299eec: pop    rdx
  0x00007f003f299eed: pop    rsi
  0x00007f003f299eee: pop    rdi
  0x00007f003f299eef: cmp    rax,QWORD PTR [rbx+0x108]
  0x00007f003f299ef6: pop    rbx
  0x00007f003f299ef7: pop    rax
  0x00007f003f299ef8: jne    0x00007f003f299f08
  0x00007f003f299efe: jmp    0x00007f003f299da2
  0x00007f003f299f03: mov    eax,0xa4b5500
  0x00007f003f299f08: call   0x00007f003f27c9e0  ; OopMap{off=557}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x00007f003f299f0d: jmp    0x00007f003f299d98
  0x00007f003f299f12: call   0x00007f003f279000  ; OopMap{rax=Oop off=567}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x00007f003f299f17: mov    eax,DWORD PTR [rax+0x0]
  0x00007f003f299f1d: mov    eax,0x6050b00
  0x00007f003f299f22: call   0x00007f003f27c1e0  ; OopMap{rax=Oop off=583}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x00007f003f299f27: jmp    0x00007f003f299da8
  0x00007f003f299f2c: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f299f36: push   rax
  0x00007f003f299f37: push   rbx
  0x00007f003f299f38: mov    rbx,QWORD PTR [rax+0x48]
  0x00007f003f299f3c: push   rdi
  0x00007f003f299f3d: push   rsi
  0x00007f003f299f3e: push   rdx
  0x00007f003f299f3f: push   rcx
  0x00007f003f299f40: push   r8
  0x00007f003f299f42: push   r9
  0x00007f003f299f44: push   r10
  0x00007f003f299f46: mov    r10,rsp
  0x00007f003f299f49: and    rsp,0xfffffffffffffff0
  0x00007f003f299f4d: push   r10
  0x00007f003f299f4f: push   r11
  0x00007f003f299f51: mov    edi,0x1
  0x00007f003f299f56: call   0x00007f0059f91470  ;   {runtime_call}
  0x00007f003f299f5b: pop    r11
  0x00007f003f299f5d: pop    rsp
  0x00007f003f299f5e: pop    r10
  0x00007f003f299f60: pop    r9
  0x00007f003f299f62: pop    r8
  0x00007f003f299f64: pop    rcx
  0x00007f003f299f65: pop    rdx
  0x00007f003f299f66: pop    rsi
  0x00007f003f299f67: pop    rdi
  0x00007f003f299f68: cmp    rax,QWORD PTR [rbx+0x108]
  0x00007f003f299f6f: pop    rbx
  0x00007f003f299f70: pop    rax
  0x00007f003f299f71: jne    0x00007f003f299f81
  0x00007f003f299f77: jmp    0x00007f003f299dca
  0x00007f003f299f7c: mov    eax,0xa4b5500
  0x00007f003f299f81: call   0x00007f003f27c9e0  ; OopMap{off=678}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x00007f003f299f86: jmp    0x00007f003f299dc0
  0x00007f003f299f8b: call   0x00007f003f279000  ; OopMap{rax=Oop off=688}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x00007f003f299f90: mov    eax,DWORD PTR [rax+0x0]
  0x00007f003f299f96: mov    eax,0x6050b00
  0x00007f003f299f9b: call   0x00007f003f27c1e0  ; OopMap{rax=Oop off=704}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x00007f003f299fa0: jmp    0x00007f003f299dd0
  0x00007f003f299fa5: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f299faf: push   rax
  0x00007f003f299fb0: push   rbx
  0x00007f003f299fb1: mov    rbx,QWORD PTR [rax+0x48]
  0x00007f003f299fb5: push   rdi
  0x00007f003f299fb6: push   rsi
  0x00007f003f299fb7: push   rdx
  0x00007f003f299fb8: push   rcx
  0x00007f003f299fb9: push   r8
  0x00007f003f299fbb: push   r9
  0x00007f003f299fbd: push   r10
  0x00007f003f299fbf: mov    r10,rsp
  0x00007f003f299fc2: and    rsp,0xfffffffffffffff0
  0x00007f003f299fc6: push   r10
  0x00007f003f299fc8: push   r11
  0x00007f003f299fca: mov    edi,0x1
  0x00007f003f299fcf: call   0x00007f0059f91470  ;   {runtime_call}
  0x00007f003f299fd4: pop    r11
  0x00007f003f299fd6: pop    rsp
  0x00007f003f299fd7: pop    r10
  0x00007f003f299fd9: pop    r9
  0x00007f003f299fdb: pop    r8
  0x00007f003f299fdd: pop    rcx
  0x00007f003f299fde: pop    rdx
  0x00007f003f299fdf: pop    rsi
  0x00007f003f299fe0: pop    rdi
  0x00007f003f299fe1: cmp    rax,QWORD PTR [rbx+0x108]
  0x00007f003f299fe8: pop    rbx
  0x00007f003f299fe9: pop    rax
  0x00007f003f299fea: jne    0x00007f003f299ffa
  0x00007f003f299ff0: jmp    0x00007f003f299df2
  0x00007f003f299ff5: mov    eax,0xa4b5500
  0x00007f003f299ffa: call   0x00007f003f27c9e0  ; OopMap{off=799}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x00007f003f299fff: jmp    0x00007f003f299de8
  0x00007f003f29a004: call   0x00007f003f279000  ; OopMap{rax=Oop off=809}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x00007f003f29a009: mov    eax,DWORD PTR [rax+0x0]
  0x00007f003f29a00f: mov    eax,0x6050b00
  0x00007f003f29a014: call   0x00007f003f27c1e0  ; OopMap{rax=Oop off=825}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x00007f003f29a019: jmp    0x00007f003f299df8
  0x00007f003f29a01e: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f29a028: push   rax
  0x00007f003f29a029: push   rbx
  0x00007f003f29a02a: mov    rbx,QWORD PTR [rax+0x48]
  0x00007f003f29a02e: push   rdi
  0x00007f003f29a02f: push   rsi
  0x00007f003f29a030: push   rdx
  0x00007f003f29a031: push   rcx
  0x00007f003f29a032: push   r8
  0x00007f003f29a034: push   r9
  0x00007f003f29a036: push   r10
  0x00007f003f29a038: mov    r10,rsp
  0x00007f003f29a03b: and    rsp,0xfffffffffffffff0
  0x00007f003f29a03f: push   r10
  0x00007f003f29a041: push   r11
  0x00007f003f29a043: mov    edi,0x1
  0x00007f003f29a048: call   0x00007f0059f91470  ;   {runtime_call}
  0x00007f003f29a04d: pop    r11
  0x00007f003f29a04f: pop    rsp
  0x00007f003f29a050: pop    r10
  0x00007f003f29a052: pop    r9
  0x00007f003f29a054: pop    r8
  0x00007f003f29a056: pop    rcx
  0x00007f003f29a057: pop    rdx
  0x00007f003f29a058: pop    rsi
  0x00007f003f29a059: pop    rdi
  0x00007f003f29a05a: cmp    rax,QWORD PTR [rbx+0x108]
  0x00007f003f29a061: pop    rbx
  0x00007f003f29a062: pop    rax
  0x00007f003f29a063: jne    0x00007f003f29a073
  0x00007f003f29a069: jmp    0x00007f003f299e1a
  0x00007f003f29a06e: mov    eax,0xa4b5500
  0x00007f003f29a073: call   0x00007f003f27c9e0  ; OopMap{off=920}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x00007f003f29a078: jmp    0x00007f003f299e10
  0x00007f003f29a07d: call   0x00007f003f279000  ; OopMap{rax=Oop off=930}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x00007f003f29a082: mov    eax,DWORD PTR [rax+0x0]
  0x00007f003f29a088: mov    eax,0x6050b00
  0x00007f003f29a08d: call   0x00007f003f27c1e0  ; OopMap{rax=Oop off=946}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x00007f003f29a092: jmp    0x00007f003f299e20
  0x00007f003f29a097: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f29a0a1: push   rax
  0x00007f003f29a0a2: push   rbx
  0x00007f003f29a0a3: mov    rbx,QWORD PTR [rax+0x48]
  0x00007f003f29a0a7: push   rdi
  0x00007f003f29a0a8: push   rsi
  0x00007f003f29a0a9: push   rdx
  0x00007f003f29a0aa: push   rcx
  0x00007f003f29a0ab: push   r8
  0x00007f003f29a0ad: push   r9
  0x00007f003f29a0af: push   r10
  0x00007f003f29a0b1: mov    r10,rsp
  0x00007f003f29a0b4: and    rsp,0xfffffffffffffff0
  0x00007f003f29a0b8: push   r10
  0x00007f003f29a0ba: push   r11
  0x00007f003f29a0bc: mov    edi,0x1
  0x00007f003f29a0c1: call   0x00007f0059f91470  ;   {runtime_call}
  0x00007f003f29a0c6: pop    r11
  0x00007f003f29a0c8: pop    rsp
  0x00007f003f29a0c9: pop    r10
  0x00007f003f29a0cb: pop    r9
  0x00007f003f29a0cd: pop    r8
  0x00007f003f29a0cf: pop    rcx
  0x00007f003f29a0d0: pop    rdx
  0x00007f003f29a0d1: pop    rsi
  0x00007f003f29a0d2: pop    rdi
  0x00007f003f29a0d3: cmp    rax,QWORD PTR [rbx+0x108]
  0x00007f003f29a0da: pop    rbx
  0x00007f003f29a0db: pop    rax
  0x00007f003f29a0dc: jne    0x00007f003f29a0ec
  0x00007f003f29a0e2: jmp    0x00007f003f299e42
  0x00007f003f29a0e7: mov    eax,0xa4b5500
  0x00007f003f29a0ec: call   0x00007f003f27c9e0  ; OopMap{off=1041}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x00007f003f29a0f1: jmp    0x00007f003f299e38
  0x00007f003f29a0f6: call   0x00007f003f279000  ; OopMap{rax=Oop off=1051}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x00007f003f29a0fb: mov    eax,DWORD PTR [rax+0x0]
  0x00007f003f29a101: mov    eax,0x6050b00
  0x00007f003f29a106: call   0x00007f003f27c1e0  ; OopMap{rax=Oop off=1067}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x00007f003f29a10b: jmp    0x00007f003f299e48
  0x00007f003f29a110: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f29a11a: push   rax
  0x00007f003f29a11b: push   rbx
  0x00007f003f29a11c: mov    rbx,QWORD PTR [rax+0x48]
  0x00007f003f29a120: push   rdi
  0x00007f003f29a121: push   rsi
  0x00007f003f29a122: push   rdx
  0x00007f003f29a123: push   rcx
  0x00007f003f29a124: push   r8
  0x00007f003f29a126: push   r9
  0x00007f003f29a128: push   r10
  0x00007f003f29a12a: mov    r10,rsp
  0x00007f003f29a12d: and    rsp,0xfffffffffffffff0
  0x00007f003f29a131: push   r10
  0x00007f003f29a133: push   r11
  0x00007f003f29a135: mov    edi,0x1
  0x00007f003f29a13a: call   0x00007f0059f91470  ;   {runtime_call}
  0x00007f003f29a13f: pop    r11
  0x00007f003f29a141: pop    rsp
  0x00007f003f29a142: pop    r10
  0x00007f003f29a144: pop    r9
  0x00007f003f29a146: pop    r8
  0x00007f003f29a148: pop    rcx
  0x00007f003f29a149: pop    rdx
  0x00007f003f29a14a: pop    rsi
  0x00007f003f29a14b: pop    rdi
  0x00007f003f29a14c: cmp    rax,QWORD PTR [rbx+0x108]
  0x00007f003f29a153: pop    rbx
  0x00007f003f29a154: pop    rax
  0x00007f003f29a155: jne    0x00007f003f29a165
  0x00007f003f29a15b: jmp    0x00007f003f299e6a
  0x00007f003f29a160: mov    eax,0xa4b5500
  0x00007f003f29a165: call   0x00007f003f27c9e0  ; OopMap{off=1162}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x00007f003f29a16a: jmp    0x00007f003f299e60
  0x00007f003f29a16f: call   0x00007f003f279000  ; OopMap{rax=Oop off=1172}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x00007f003f29a174: mov    eax,DWORD PTR [rax+0x0]
  0x00007f003f29a17a: mov    eax,0x6050b00
  0x00007f003f29a17f: call   0x00007f003f27c1e0  ; OopMap{rax=Oop off=1188}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x00007f003f29a184: jmp    0x00007f003f299e70
  0x00007f003f29a189: nop
  0x00007f003f29a18a: nop
  0x00007f003f29a18b: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f29a192: movabs r10,0x0
  0x00007f003f29a19c: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f29a1a3: movabs r10,0x0
  0x00007f003f29a1ad: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f29a1b4: add    rsp,0x30
  0x00007f003f29a1b8: pop    rbp
  0x00007f003f29a1b9: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f29a1be: hlt    
  0x00007f003f29a1bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f29a1c0: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f29a1c5: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f29a1ca: sub    rsp,0x80
  0x00007f003f29a1d1: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f29a1d6: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29a1db: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f29a1e0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f29a1e5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f29a1ea: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f29a1ef: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f29a1f4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f29a1f9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f29a1fe: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f29a203: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f29a208: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f29a20d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f29a212: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f29a217: mov    QWORD PTR [rsp],r15
  0x00007f003f29a21b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f29a225: movabs rsi,0x7f003f29a1c5  ;   {internal_word}
  0x00007f003f29a22f: mov    rdx,rsp
  0x00007f003f29a232: and    rsp,0xfffffffffffffff0
  0x00007f003f29a236: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29a23b: hlt    
[Deopt Handler Code]
  0x00007f003f29a23c: movabs r10,0x7f003f29a23c  ;   {section_word}
  0x00007f003f29a246: push   r10
  0x00007f003f29a248: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f29a24d: hlt    
  0x00007f003f29a24e: hlt    
  0x00007f003f29a24f: hlt    
<nmethod compile_id='36' compiler='C1' level='3' entry='0x00007f003f299ce0' size='2648' address='0x00007f003f299b10' relocation_offset='312' insts_offset='464' stub_offset='1712' scopes_data_offset='1864' scopes_pcs_offset='2008' dependencies_offset='2584' nul_chk_table_offset='2592' metadata_offset='1856' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='1059' iicount='1059' stamp='0.166'/>
----------------------------------------------------------------------
java/lang/Character.toUpperCaseEx  [0x00007f003f29a720, 0x00007f003f29aab8]  920 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f0038817be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f003f29a720: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f29a727: push   rbp
  0x00007f003f29a728: sub    rsp,0x30
  0x00007f003f29a72c: movabs rdi,0x7f0038a4fa30  ;   {metadata(method data for {method} {0x00007f0038817be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f29a736: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f29a73c: add    ebx,0x8
  0x00007f003f29a73f: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f29a745: movabs rdi,0x7f0038817be0  ;   {metadata({method} {0x00007f0038817be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f29a74f: and    ebx,0x1ff8
  0x00007f003f29a755: cmp    ebx,0x0
  0x00007f003f29a758: je     0x00007f003f29a9a8  ;*getstatic $assertionsDisabled {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@0 (line 7137)

  0x00007f003f29a75e: movabs rdi,0x7f0038a4fa30  ;   {metadata(method data for {method} {0x00007f0038817be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f29a768: inc    DWORD PTR [rdi+0x130]  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@3 (line 7137)

  0x00007f003f29a76e: movabs rdi,0x7f0038a4fa30  ;   {metadata(method data for {method} {0x00007f0038817be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f29a778: add    QWORD PTR [rdi+0x190],0x1
  0x00007f003f29a780: mov    rdi,rsi
  0x00007f003f29a783: mov    rsi,rdi            ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@22 (line 7138)

  0x00007f003f29a786: mov    DWORD PTR [rsp+0x20],edi
  0x00007f003f29a78a: nop
  0x00007f003f29a78b: nop
  0x00007f003f29a78c: nop
  0x00007f003f29a78d: nop
  0x00007f003f29a78e: nop
  0x00007f003f29a78f: call   0x00007f003f1c5160  ; OopMap{off=116}
                                                ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@22 (line 7138)
                                                ;   {static_call}
  0x00007f003f29a794: cmp    rax,QWORD PTR [rax]  ; implicit exception: dispatches to 0x00007f003f29a9bf
  0x00007f003f29a797: mov    rdx,rax
  0x00007f003f29a79a: movabs rsi,0x7f0038a4fa30  ;   {metadata(method data for {method} {0x00007f0038817be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f29a7a4: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f29a7a7: shl    rdx,0x3
  0x00007f003f29a7ab: cmp    rdx,QWORD PTR [rsi+0x1b0]
  0x00007f003f29a7b2: jne    0x00007f003f29a7c1
  0x00007f003f29a7b4: add    QWORD PTR [rsi+0x1b8],0x1
  0x00007f003f29a7bc: jmp    0x00007f003f29a983
  0x00007f003f29a7c1: cmp    rdx,QWORD PTR [rsi+0x1c0]
  0x00007f003f29a7c8: jne    0x00007f003f29a7d7
  0x00007f003f29a7ca: add    QWORD PTR [rsi+0x1c8],0x1
  0x00007f003f29a7d2: jmp    0x00007f003f29a983
  0x00007f003f29a7d7: cmp    rdx,QWORD PTR [rsi+0x1d0]
  0x00007f003f29a7de: jne    0x00007f003f29a7ed
  0x00007f003f29a7e0: add    QWORD PTR [rsi+0x1d8],0x1
  0x00007f003f29a7e8: jmp    0x00007f003f29a983
  0x00007f003f29a7ed: cmp    rdx,QWORD PTR [rsi+0x1e0]
  0x00007f003f29a7f4: jne    0x00007f003f29a803
  0x00007f003f29a7f6: add    QWORD PTR [rsi+0x1e8],0x1
  0x00007f003f29a7fe: jmp    0x00007f003f29a983
  0x00007f003f29a803: cmp    rdx,QWORD PTR [rsi+0x1f0]
  0x00007f003f29a80a: jne    0x00007f003f29a819
  0x00007f003f29a80c: add    QWORD PTR [rsi+0x1f8],0x1
  0x00007f003f29a814: jmp    0x00007f003f29a983
  0x00007f003f29a819: cmp    rdx,QWORD PTR [rsi+0x200]
  0x00007f003f29a820: jne    0x00007f003f29a82f
  0x00007f003f29a822: add    QWORD PTR [rsi+0x208],0x1
  0x00007f003f29a82a: jmp    0x00007f003f29a983
  0x00007f003f29a82f: cmp    rdx,QWORD PTR [rsi+0x210]
  0x00007f003f29a836: jne    0x00007f003f29a845
  0x00007f003f29a838: add    QWORD PTR [rsi+0x218],0x1
  0x00007f003f29a840: jmp    0x00007f003f29a983
  0x00007f003f29a845: cmp    rdx,QWORD PTR [rsi+0x220]
  0x00007f003f29a84c: jne    0x00007f003f29a85b
  0x00007f003f29a84e: add    QWORD PTR [rsi+0x228],0x1
  0x00007f003f29a856: jmp    0x00007f003f29a983
  0x00007f003f29a85b: cmp    QWORD PTR [rsi+0x1b0],0x0
  0x00007f003f29a866: jne    0x00007f003f29a87f
  0x00007f003f29a868: mov    QWORD PTR [rsi+0x1b0],rdx
  0x00007f003f29a86f: mov    QWORD PTR [rsi+0x1b8],0x1
  0x00007f003f29a87a: jmp    0x00007f003f29a983
  0x00007f003f29a87f: cmp    QWORD PTR [rsi+0x1c0],0x0
  0x00007f003f29a88a: jne    0x00007f003f29a8a3
  0x00007f003f29a88c: mov    QWORD PTR [rsi+0x1c0],rdx
  0x00007f003f29a893: mov    QWORD PTR [rsi+0x1c8],0x1
  0x00007f003f29a89e: jmp    0x00007f003f29a983
  0x00007f003f29a8a3: cmp    QWORD PTR [rsi+0x1d0],0x0
  0x00007f003f29a8ae: jne    0x00007f003f29a8c7
  0x00007f003f29a8b0: mov    QWORD PTR [rsi+0x1d0],rdx
  0x00007f003f29a8b7: mov    QWORD PTR [rsi+0x1d8],0x1
  0x00007f003f29a8c2: jmp    0x00007f003f29a983
  0x00007f003f29a8c7: cmp    QWORD PTR [rsi+0x1e0],0x0
  0x00007f003f29a8d2: jne    0x00007f003f29a8eb
  0x00007f003f29a8d4: mov    QWORD PTR [rsi+0x1e0],rdx
  0x00007f003f29a8db: mov    QWORD PTR [rsi+0x1e8],0x1
  0x00007f003f29a8e6: jmp    0x00007f003f29a983
  0x00007f003f29a8eb: cmp    QWORD PTR [rsi+0x1f0],0x0
  0x00007f003f29a8f6: jne    0x00007f003f29a90f
  0x00007f003f29a8f8: mov    QWORD PTR [rsi+0x1f0],rdx
  0x00007f003f29a8ff: mov    QWORD PTR [rsi+0x1f8],0x1
  0x00007f003f29a90a: jmp    0x00007f003f29a983
  0x00007f003f29a90f: cmp    QWORD PTR [rsi+0x200],0x0
  0x00007f003f29a91a: jne    0x00007f003f29a933
  0x00007f003f29a91c: mov    QWORD PTR [rsi+0x200],rdx
  0x00007f003f29a923: mov    QWORD PTR [rsi+0x208],0x1
  0x00007f003f29a92e: jmp    0x00007f003f29a983
  0x00007f003f29a933: cmp    QWORD PTR [rsi+0x210],0x0
  0x00007f003f29a93e: jne    0x00007f003f29a957
  0x00007f003f29a940: mov    QWORD PTR [rsi+0x210],rdx
  0x00007f003f29a947: mov    QWORD PTR [rsi+0x218],0x1
  0x00007f003f29a952: jmp    0x00007f003f29a983
  0x00007f003f29a957: cmp    QWORD PTR [rsi+0x220],0x0
  0x00007f003f29a962: jne    0x00007f003f29a97b
  0x00007f003f29a964: mov    QWORD PTR [rsi+0x220],rdx
  0x00007f003f29a96b: mov    QWORD PTR [rsi+0x228],0x1
  0x00007f003f29a976: jmp    0x00007f003f29a983
  0x00007f003f29a97b: add    QWORD PTR [rsi+0x1a0],0x1
  0x00007f003f29a983: mov    edx,DWORD PTR [rsp+0x20]
  0x00007f003f29a987: mov    rsi,rax            ;*invokevirtual toUpperCaseEx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@26 (line 7138)

  0x00007f003f29a98a: nop
  0x00007f003f29a98b: nop
  0x00007f003f29a98c: nop
  0x00007f003f29a98d: movabs rax,0xffffffffffffffff
  0x00007f003f29a997: call   0x00007f003f1c4f60  ; OopMap{off=636}
                                                ;*invokevirtual toUpperCaseEx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@26 (line 7138)
                                                ;   {virtual_call}
  0x00007f003f29a99c: add    rsp,0x30
  0x00007f003f29a9a0: pop    rbp
  0x00007f003f29a9a1: test   DWORD PTR [rip+0x1b127759],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29a9a7: ret    
  0x00007f003f29a9a8: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f29a9ad: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f29a9b5: call   0x00007f003f27d5e0  ; OopMap{off=666}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCaseEx@-1 (line 7137)
                                                ;   {runtime_call}
  0x00007f003f29a9ba: jmp    0x00007f003f29a75e
  0x00007f003f29a9bf: call   0x00007f003f279000  ; OopMap{rax=Oop off=676}
                                                ;*invokevirtual toUpperCaseEx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@26 (line 7138)
                                                ;   {runtime_call}
  0x00007f003f29a9c4: nop
  0x00007f003f29a9c5: nop
  0x00007f003f29a9c6: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f29a9cd: movabs r10,0x0
  0x00007f003f29a9d7: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f29a9de: movabs r10,0x0
  0x00007f003f29a9e8: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f29a9ef: add    rsp,0x30
  0x00007f003f29a9f3: pop    rbp
  0x00007f003f29a9f4: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f29a9f9: hlt    
  0x00007f003f29a9fa: hlt    
  0x00007f003f29a9fb: hlt    
  0x00007f003f29a9fc: hlt    
  0x00007f003f29a9fd: hlt    
  0x00007f003f29a9fe: hlt    
  0x00007f003f29a9ff: hlt    
[Stub Code]
  0x00007f003f29aa00: nop                       ;   {no_reloc}
  0x00007f003f29aa01: nop
  0x00007f003f29aa02: nop
  0x00007f003f29aa03: nop
  0x00007f003f29aa04: nop
  0x00007f003f29aa05: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f29aa0f: jmp    0x00007f003f29aa0f  ;   {runtime_call}
  0x00007f003f29aa14: nop
  0x00007f003f29aa15: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f29aa1f: jmp    0x00007f003f29aa1f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f29aa24: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f29aa29: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f29aa2e: sub    rsp,0x80
  0x00007f003f29aa35: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f29aa3a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29aa3f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f29aa44: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f29aa49: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f29aa4e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f29aa53: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f29aa58: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f29aa5d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f29aa62: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f29aa67: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f29aa6c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f29aa71: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f29aa76: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f29aa7b: mov    QWORD PTR [rsp],r15
  0x00007f003f29aa7f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f29aa89: movabs rsi,0x7f003f29aa29  ;   {internal_word}
  0x00007f003f29aa93: mov    rdx,rsp
  0x00007f003f29aa96: and    rsp,0xfffffffffffffff0
  0x00007f003f29aa9a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29aa9f: hlt    
[Deopt Handler Code]
  0x00007f003f29aaa0: movabs r10,0x7f003f29aaa0  ;   {section_word}
  0x00007f003f29aaaa: push   r10
  0x00007f003f29aaac: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f29aab1: hlt    
  0x00007f003f29aab2: hlt    
  0x00007f003f29aab3: hlt    
  0x00007f003f29aab4: hlt    
  0x00007f003f29aab5: hlt    
  0x00007f003f29aab6: hlt    
  0x00007f003f29aab7: hlt    
<nmethod compile_id='38' compiler='C1' level='3' entry='0x00007f003f29a720' size='1568' address='0x00007f003f29a590' relocation_offset='312' insts_offset='400' stub_offset='1136' scopes_data_offset='1328' scopes_pcs_offset='1384' dependencies_offset='1544' nul_chk_table_offset='1552' metadata_offset='1320' method='java/lang/Character toUpperCaseEx (I)I' bytes='30' count='761' iicount='761' stamp='0.167'/>
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.runtime.JVMCI from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<task_queued compile_id='40' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='256' iicount='256' level='1' stamp='0.167' comment='tiered' hot_count='256'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/CharacterDataLatin1.toUpperCaseEx  [0x00007f003f29ad60, 0x00007f003f29b010]  688 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038961f70} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rsi:rsi   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x00007f003f29ad60: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f29ad64: shl    r10,0x3
  0x00007f003f29ad68: cmp    r10,rax
  0x00007f003f29ad6b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f29ad71: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f29ad7c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f29ad80: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f29ad87: push   rbp
  0x00007f003f29ad88: sub    rsp,0x40
  0x00007f003f29ad8c: movabs rax,0x7f0038a4fca8  ;   {metadata(method data for {method} {0x00007f0038961f70} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f29ad96: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f29ad9c: add    edi,0x8
  0x00007f003f29ad9f: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f29ada5: movabs rax,0x7f0038961f70  ;   {metadata({method} {0x00007f0038961f70} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f29adaf: and    edi,0x1ff8
  0x00007f003f29adb5: cmp    edi,0x0
  0x00007f003f29adb8: je     0x00007f003f29af03  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@0 (line 222)

  0x00007f003f29adbe: movabs rax,0x7f0038a4fca8  ;   {metadata(method data for {method} {0x00007f0038961f70} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f29adc8: add    QWORD PTR [rax+0x148],0x1
  0x00007f003f29add0: movabs rax,0x7f0038a4f8d0  ;   {metadata(method data for {method} {0x00007f0038960e08} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f29adda: mov    esi,DWORD PTR [rax+0xfc]
  0x00007f003f29ade0: add    esi,0x8
  0x00007f003f29ade3: mov    DWORD PTR [rax+0xfc],esi
  0x00007f003f29ade9: movabs rax,0x7f0038960e08  ;   {metadata({method} {0x00007f0038960e08} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f29adf3: and    esi,0x7ffff8
  0x00007f003f29adf9: cmp    esi,0x0
  0x00007f003f29adfc: je     0x00007f003f29af1a
  0x00007f003f29ae02: mov    rax,rdx
  0x00007f003f29ae05: and    eax,0xffff
  0x00007f003f29ae0b: movabs rsi,0x670bc4928    ;   {oop([I)}
  0x00007f003f29ae15: movsxd rdi,eax
  0x00007f003f29ae18: cmp    eax,DWORD PTR [rsi+0xc]  ; implicit exception: dispatches to 0x00007f003f29af31
  0x00007f003f29ae1b: jae    0x00007f003f29af3b
  0x00007f003f29ae21: mov    eax,DWORD PTR [rsi+rdi*4+0x10]
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@4 (line 223)

  0x00007f003f29ae25: mov    rsi,rax
  0x00007f003f29ae28: and    esi,0x10000
  0x00007f003f29ae2e: cmp    esi,0x0
  0x00007f003f29ae31: movabs rsi,0x7f0038a4fca8  ;   {metadata(method data for {method} {0x00007f0038961f70} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f29ae3b: movabs rdi,0x1c8
  0x00007f003f29ae45: je     0x00007f003f29ae55
  0x00007f003f29ae4b: movabs rdi,0x1d8
  0x00007f003f29ae55: mov    rbx,QWORD PTR [rsi+rdi*1]
  0x00007f003f29ae59: lea    rbx,[rbx+0x1]
  0x00007f003f29ae5d: mov    QWORD PTR [rsi+rdi*1],rbx
  0x00007f003f29ae61: je     0x00007f003f29aef4  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@12 (line 225)

  0x00007f003f29ae67: mov    rsi,rax
  0x00007f003f29ae6a: and    esi,0x7fc0000
  0x00007f003f29ae70: cmp    esi,0x7fc0000
  0x00007f003f29ae76: movabs rsi,0x7f0038a4fca8  ;   {metadata(method data for {method} {0x00007f0038961f70} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f29ae80: movabs rdi,0x1e8
  0x00007f003f29ae8a: je     0x00007f003f29ae9a
  0x00007f003f29ae90: movabs rdi,0x1f8
  0x00007f003f29ae9a: mov    rbx,QWORD PTR [rsi+rdi*1]
  0x00007f003f29ae9e: lea    rbx,[rbx+0x1]
  0x00007f003f29aea2: mov    QWORD PTR [rsi+rdi*1],rbx
  0x00007f003f29aea6: jne    0x00007f003f29aedc  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@21 (line 226)

  0x00007f003f29aeac: cmp    edx,0xb5
  0x00007f003f29aeb2: je     0x00007f003f29aec2  ;*lookupswitch {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@41 (line 231)

  0x00007f003f29aeb8: mov    edx,0xffffffff
  0x00007f003f29aebd: jmp    0x00007f003f29aef4  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@69 (line 238)

  0x00007f003f29aec2: movabs rax,0x7f0038a4fca8  ;   {metadata(method data for {method} {0x00007f0038961f70} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f29aecc: inc    DWORD PTR [rax+0x250]
  0x00007f003f29aed2: mov    edx,0x39c
  0x00007f003f29aed7: jmp    0x00007f003f29aef4  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@64 (line 233)

  0x00007f003f29aedc: shl    eax,0x5
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.code.CompiledCode from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>

  0x00007f003f29aedf: sar    eax,0x17
  0x00007f003f29aee2: sub    edx,eax
  0x00007f003f29aee4: movabs rax,0x7f0038a4fca8  ;   {metadata(method data for {method} {0x00007f0038961f70} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f29aeee: inc    DWORD PTR [rax+0x208]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@37 (line 229)

  0x00007f003f29aef4: mov    rax,rdx
  0x00007f003f29aef7: add    rsp,0x40
  0x00007f003f29aefb: pop    rbp
  0x00007f003f29aefc: test   DWORD PTR [rip+0x1b1271fe],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29af02: ret    
  0x00007f003f29af03: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f29af08: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f29af10: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=437}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@-1 (line 222)
                                                ;   {runtime_call}
  0x00007f003f29af15: jmp    0x00007f003f29adbe
  0x00007f003f29af1a: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f29af1f: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f29af27: call   0x00007f003f27d5e0  ; OopMap{off=460}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@4 (line 223)
                                                ;   {runtime_call}
  0x00007f003f29af2c: jmp    0x00007f003f29ae02
  0x00007f003f29af31: call   0x00007f003f279000  ; OopMap{rsi=Oop off=470}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@4 (line 223)
                                                ;   {runtime_call}
  0x00007f003f29af36: call   0x00007f003f279000  ; OopMap{rsi=Oop off=475}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@4 (line 223)
                                                ;   {runtime_call}
  0x00007f003f29af3b: mov    QWORD PTR [rsp],rax
  0x00007f003f29af3f: call   0x00007f003f278940  ; OopMap{rsi=Oop off=484}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@4 (line 223)
                                                ;   {runtime_call}
  0x00007f003f29af44: nop
  0x00007f003f29af45: nop
  0x00007f003f29af46: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f29af4d: movabs r10,0x0
  0x00007f003f29af57: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f29af5e: movabs r10,0x0
  0x00007f003f29af68: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f29af6f: add    rsp,0x40
  0x00007f003f29af73: pop    rbp
  0x00007f003f29af74: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f29af79: hlt    
  0x00007f003f29af7a: hlt    
  0x00007f003f29af7b: hlt    
  0x00007f003f29af7c: hlt    
  0x00007f003f29af7d: hlt    
  0x00007f003f29af7e: hlt    
  0x00007f003f29af7f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f29af80: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f29af85: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f29af8a: sub    rsp,0x80
  0x00007f003f29af91: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f29af96: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29af9b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f29afa0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f29afa5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f29afaa: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f29afaf: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f29afb4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f29afb9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f29afbe: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f29afc3: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f29afc8: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f29afcd: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f29afd2: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f29afd7: mov    QWORD PTR [rsp],r15
  0x00007f003f29afdb: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f29afe5: movabs rsi,0x7f003f29af85  ;   {internal_word}
  0x00007f003f29afef: mov    rdx,rsp
  0x00007f003f29aff2: and    rsp,0xfffffffffffffff0
  0x00007f003f29aff6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29affb: hlt    
[Deopt Handler Code]
  0x00007f003f29affc: movabs r10,0x7f003f29affc  ;   {section_word}
  0x00007f003f29b006: push   r10
  0x00007f003f29b008: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f29b00d: hlt    
  0x00007f003f29b00e: hlt    
  0x00007f003f29b00f: hlt    
<nmethod compile_id='39' compiler='C1' level='3' entry='0x00007f003f29ad60' size='1504' address='0x00007f003f29abd0' relocation_offset='312' insts_offset='400' stub_offset='944' scopes_data_offset='1112' scopes_pcs_offset='1232' dependencies_offset='1472' nul_chk_table_offset='1480' metadata_offset='1088' method='java/lang/CharacterDataLatin1 toUpperCaseEx (I)I' bytes='71' count='950' iicount='950' stamp='0.197'/>
<writer thread='139639490488064'/>
<task_queued compile_id='41' compile_kind='osr' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='111645' iicount='1' osr_bci='9' level='4' stamp='0.197' comment='tiered' hot_count='111645'/>
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.HotSpotCompiledCode from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/CharacterDataLatin1.getProperties  [0x00007f003f29b340, 0x00007f003f29b4d0]  400 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038960e08} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rsi:rsi   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f003f29b340: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f29b344: shl    r10,0x3
  0x00007f003f29b348: cmp    r10,rax
  0x00007f003f29b34b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f29b351: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f29b35c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f29b360: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f29b367: push   rbp
  0x00007f003f29b368: sub    rsp,0x30
  0x00007f003f29b36c: movabs rax,0x7f0038a4f8d0  ;   {metadata(method data for {method} {0x00007f0038960e08} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f29b376: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f29b37c: add    edi,0x8
  0x00007f003f29b37f: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f29b385: movabs rax,0x7f0038960e08  ;   {metadata({method} {0x00007f0038960e08} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f29b38f: and    edi,0x1ff8
  0x00007f003f29b395: cmp    edi,0x0
  0x00007f003f29b398: je     0x00007f003f29b3ca  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x00007f003f29b39e: and    edx,0xffff
  0x00007f003f29b3a4: movabs rax,0x670bc4928    ;   {oop([I)}
  0x00007f003f29b3ae: movsxd rsi,edx
  0x00007f003f29b3b1: cmp    edx,DWORD PTR [rax+0xc]  ; implicit exception: dispatches to 0x00007f003f29b3de
  0x00007f003f29b3b4: jae    0x00007f003f29b3e8
  0x00007f003f29b3ba: mov    eax,DWORD PTR [rax+rsi*4+0x10]
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x00007f003f29b3be: add    rsp,0x30
  0x00007f003f29b3c2: pop    rbp
  0x00007f003f29b3c3: test   DWORD PTR [rip+0x1b126d37],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29b3c9: ret    
  0x00007f003f29b3ca: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f29b3cf: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f29b3d7: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=156}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ;   {runtime_call}
  0x00007f003f29b3dc: jmp    0x00007f003f29b39e
  0x00007f003f29b3de: call   0x00007f003f279000  ; OopMap{rax=Oop off=163}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00007f003f29b3e3: call   0x00007f003f279000  ; OopMap{rax=Oop off=168}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00007f003f29b3e8: mov    QWORD PTR [rsp],rdx
  0x00007f003f29b3ec: call   0x00007f003f278940  ; OopMap{rax=Oop off=177}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00007f003f29b3f1: nop
  0x00007f003f29b3f2: nop
  0x00007f003f29b3f3: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f29b3fa: movabs r10,0x0
  0x00007f003f29b404: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f29b40b: movabs r10,0x0
  0x00007f003f29b415: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f29b41c: add    rsp,0x30
  0x00007f003f29b420: pop    rbp
  0x00007f003f29b421: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f29b426: hlt    
  0x00007f003f29b427: hlt    
  0x00007f003f29b428: hlt    
  0x00007f003f29b429: hlt    
  0x00007f003f29b42a: hlt    
  0x00007f003f29b42b: hlt    
  0x00007f003f29b42c: hlt    
  0x00007f003f29b42d: hlt    
  0x00007f003f29b42e: hlt    
  0x00007f003f29b42f: hlt    
  0x00007f003f29b430: hlt    
  0x00007f003f29b431: hlt    
  0x00007f003f29b432: hlt    
  0x00007f003f29b433: hlt    
  0x00007f003f29b434: hlt    
  0x00007f003f29b435: hlt    
  0x00007f003f29b436: hlt    
  0x00007f003f29b437: hlt    
  0x00007f003f29b438: hlt    
  0x00007f003f29b439: hlt    
  0x00007f003f29b43a: hlt    
  0x00007f003f29b43b: hlt    
  0x00007f003f29b43c: hlt    
  0x00007f003f29b43d: hlt    
  0x00007f003f29b43e: hlt    
  0x00007f003f29b43f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f29b440: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f29b445: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f29b44a: sub    rsp,0x80
  0x00007f003f29b451: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f29b456: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29b45b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f29b460: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f29b465: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f29b46a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f29b46f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f29b474: mov    QWORD PTR [rsp+0x38],r8
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.HotSpotCompiledCode$Comment from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
  0x00007f003f29b479: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f29b47e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f29b483: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f29b488: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f29b48d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f29b492: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f29b497: mov    QWORD PTR [rsp],r15
  0x00007f003f29b49b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f29b4a5: movabs rsi,0x7f003f29b445  ;   {internal_word}
  0x00007f003f29b4af: mov    rdx,rsp
  0x00007f003f29b4b2: and    rsp,0xfffffffffffffff0
  0x00007f003f29b4b6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29b4bb: hlt    
[Deopt Handler Code]
  0x00007f003f29b4bc: movabs r10,0x7f003f29b4bc  ;   {section_word}
  0x00007f003f29b4c6: push   r10
  0x00007f003f29b4c8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f29b4cd: hlt    
  0x00007f003f29b4ce: hlt    
  0x00007f003f29b4cf: hlt    
<nmethod compile_id='37' compiler='C1' level='3' entry='0x00007f003f29b340' size='984' address='0x00007f003f29b1d0' relocation_offset='312' insts_offset='368' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='824' dependencies_offset='952' nul_chk_table_offset='960' metadata_offset='768' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='1342' iicount='1342' stamp='0.198'/>
<writer thread='139637818533632'/>
<task_queued compile_id='42' method='java/net/URL getProtocol ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.198' comment='tiered' hot_count='128'/>
[Loaded jdk.vm.ci.hotspot.HotSpotCompiledNmethod from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='43' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='148' backedge_count='8192' iicount='148' level='3' stamp='0.199' comment='tiered' hot_count='148'/>
[Loaded jdk.vm.ci.meta.InvokeTarget from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotForeignCallTarget from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/Arrays.copyOfRange  [0x00007f003f29b800, 0x00007f003f29c138]  2360 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f00388a4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0xb0]  (sp of caller)
  0x00007f003f29b800: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f29b807: push   rbp
  0x00007f003f29b808: sub    rsp,0xa0
  0x00007f003f29b80f: mov    r8,rsi
  0x00007f003f29b812: mov    r9,rdx
  0x00007f003f29b815: movabs rbx,0x7f00389b9490  ;   {metadata(method data for {method} {0x00007f00388a4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f29b81f: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f29b825: add    edx,0x8
  0x00007f003f29b828: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f29b82e: movabs rbx,0x7f00388a4140  ;   {metadata({method} {0x00007f00388a4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f29b838: and    edx,0x1ff8
  0x00007f003f29b83e: cmp    edx,0x0
  0x00007f003f29b841: je     0x00007f003f29beb9  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x00007f003f29b847: mov    r11,rcx
  0x00007f003f29b84a: sub    r11d,r9d
  0x00007f003f29b84d: cmp    r11d,0x0
  0x00007f003f29b851: movabs rbx,0x7f00389b9490  ;   {metadata(method data for {method} {0x00007f00388a4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f29b85b: movabs rdx,0x130
  0x00007f003f29b865: jge    0x00007f003f29b875
  0x00007f003f29b86b: movabs rdx,0x140
  0x00007f003f29b875: mov    rsi,QWORD PTR [rbx+rdx*1]
  0x00007f003f29b879: lea    rsi,[rsi+0x1]
  0x00007f003f29b87d: mov    QWORD PTR [rbx+rdx*1],rsi
  0x00007f003f29b881: jl     0x00007f003f29ba44  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x00007f003f29b887: mov    rbx,r11
  0x00007f003f29b88a: movabs rdx,0x7c00001f8    ;   {metadata({type array char})}
  0x00007f003f29b894: movsxd rbx,ebx
  0x00007f003f29b897: mov    rdi,rbx
  0x00007f003f29b89a: cmp    rbx,0xffffff
  0x00007f003f29b8a1: ja     0x00007f003f29bed0
  0x00007f003f29b8a7: movabs rsi,0x17
  0x00007f003f29b8b1: lea    rsi,[rsi+rbx*2]
  0x00007f003f29b8b5: and    rsi,0xfffffffffffffff8
  0x00007f003f29b8b9: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f29b8bd: lea    rsi,[rax+rsi*1]
  0x00007f003f29b8c1: cmp    rsi,QWORD PTR [r15+0x70]
  0x00007f003f29b8c5: ja     0x00007f003f29bed0
  0x00007f003f29b8cb: mov    QWORD PTR [r15+0x60],rsi
  0x00007f003f29b8cf: sub    rsi,rax
  0x00007f003f29b8d2: mov    QWORD PTR [rax],0x1
  0x00007f003f29b8d9: mov    rcx,rdx
  0x00007f003f29b8dc: shr    rcx,0x3
  0x00007f003f29b8e0: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f29b8e3: mov    DWORD PTR [rax+0xc],ebx
  0x00007f003f29b8e6: sub    rsi,0x10
  0x00007f003f29b8ea: je     0x00007f003f29b901
  0x00007f003f29b8f0: xor    rbx,rbx
  0x00007f003f29b8f3: shr    rsi,0x3
  0x00007f003f29b8f7: mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x00007f003f29b8fc: dec    rsi
  0x00007f003f29b8ff: jne    0x00007f003f29b8f7  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x00007f003f29b901: mov    esi,DWORD PTR [r8+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x00007f003f29beda
  0x00007f003f29b905: sub    esi,r9d
  0x00007f003f29b908: movabs rdx,0x7f00389b9490  ;   {metadata(method data for {method} {0x00007f00388a4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f29b912: add    QWORD PTR [rdx+0x3d0],0x1
  0x00007f003f29b91a: movabs rdx,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f29b924: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f29b92a: add    ecx,0x8
  0x00007f003f29b92d: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f29b933: movabs rdx,0x7f003887a8b8  ;   {metadata({method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f29b93d: and    ecx,0x7ffff8
  0x00007f003f29b943: cmp    ecx,0x0
  0x00007f003f29b946: je     0x00007f003f29bedf
  0x00007f003f29b94c: cmp    esi,r11d
  0x00007f003f29b94f: movabs rdx,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f29b959: movabs rcx,0x130
  0x00007f003f29b963: jg     0x00007f003f29b973
  0x00007f003f29b969: movabs rcx,0x140
  0x00007f003f29b973: mov    rdi,QWORD PTR [rdx+rcx*1]
  0x00007f003f29b977: lea    rdi,[rdi+0x1]
  0x00007f003f29b97b: mov    QWORD PTR [rdx+rcx*1],rdi
  0x00007f003f29b97f: jg     0x00007f003f29b99d  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00007f003f29b985: movabs rdx,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f29b98f: inc    DWORD PTR [rdx+0x150]
  0x00007f003f29b995: mov    rdi,rsi
  0x00007f003f29b998: jmp    0x00007f003f29b9a0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00007f003f29b99d: mov    rdi,r11            ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00007f003f29b9a0: movabs rsi,0x7f00389b9490  ;   {metadata(method data for {method} {0x00007f00388a4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f29b9aa: add    QWORD PTR [rsi+0x3e0],0x1
  0x00007f003f29b9b2: mov    rsi,r8
  0x00007f003f29b9b5: mov    rdx,r9
  0x00007f003f29b9b8: mov    rcx,rax
  0x00007f003f29b9bb: mov    r8d,0x0
  0x00007f003f29b9c1: mov    r9,rdi
  0x00007f003f29b9c4: mov    QWORD PTR [rsp+0x70],rax
  0x00007f003f29b9c9: test   edx,edx
  0x00007f003f29b9cb: jl     0x00007f003f29bef6
  0x00007f003f29b9d1: lea    rdi,[rdx+r9*1]
  0x00007f003f29b9d5: cmp    edi,DWORD PTR [rsi+0xc]
  0x00007f003f29b9d8: ja     0x00007f003f29bef6
  0x00007f003f29b9de: lea    rdi,[r8+r9*1]
  0x00007f003f29b9e2: cmp    edi,DWORD PTR [rcx+0xc]
  0x00007f003f29b9e5: ja     0x00007f003f29bef6
  0x00007f003f29b9eb: test   r9d,r9d
  0x00007f003f29b9ee: jl     0x00007f003f29bef6
  0x00007f003f29b9f4: je     0x00007f003f29ba30
  0x00007f003f29b9fa: movsxd rdx,edx
  0x00007f003f29b9fd: movsxd r8,r8d
  0x00007f003f29ba00: lea    rdi,[rsi+rdx*2+0x10]
  0x00007f003f29ba05: lea    rsi,[rcx+r8*2+0x10]
  0x00007f003f29ba0a: mov    rdx,r9
  0x00007f003f29ba0d: test   esp,0xf
  0x00007f003f29ba13: je     0x00007f003f29ba2b
  0x00007f003f29ba19: sub    rsp,0x8
  0x00007f003f29ba1d: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007f003f29ba22: add    rsp,0x8
  0x00007f003f29ba26: jmp    0x00007f003f29ba30
  0x00007f003f29ba2b: call   Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x00007f003f29ba30: mov    rax,QWORD PTR [rsp+0x70]
  0x00007f003f29ba35: add    rsp,0xa0
  0x00007f003f29ba3c: pop    rbp
  0x00007f003f29ba3d: test   DWORD PTR [rip+0x1b1266bd],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29ba43: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x00007f003f29ba44: mov    DWORD PTR [rsp+0x80],ecx
  0x00007f003f29ba4b: nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f003f29ba50: jmp    0x00007f003f29bf10  ;   {no_reloc}
  0x00007f003f29ba55: add    BYTE PTR [rax],al
  0x00007f003f29ba57: add    BYTE PTR [rax],al
  0x00007f003f29ba59: add    BYTE PTR [rcx-0x75],cl
  0x00007f003f29ba5c: rex.RXB (bad) 
  0x00007f003f29ba5e: lea    rdi,[rax+0x20]
  0x00007f003f29ba62: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f29ba66: ja     0x00007f003f29bf1a
  0x00007f003f29ba6c: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f29ba70: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f29ba77: mov    QWORD PTR [rax],rcx
  0x00007f003f29ba7a: mov    rcx,rdx
  0x00007f003f29ba7d: shr    rcx,0x3
  0x00007f003f29ba81: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f29ba84: xor    rcx,rcx
  0x00007f003f29ba87: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f29ba8a: xor    rcx,rcx
  0x00007f003f29ba8d: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f29ba91: mov    QWORD PTR [rax+0x18],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x00007f003f29ba95: data16 xchg ax,ax
  0x00007f003f29ba98: jmp    0x00007f003f29bf36  ;   {no_reloc}
  0x00007f003f29ba9d: add    BYTE PTR [rax],al
  0x00007f003f29ba9f: add    BYTE PTR [rax],al
  0x00007f003f29baa1: add    BYTE PTR [rax-0x77],cl
  0x00007f003f29baa4: test   BYTE PTR [rax+rcx*4],ah
  0x00007f003f29baa7: add    BYTE PTR [rax],al
  0x00007f003f29baa9: add    BYTE PTR [rcx-0x75],cl
  0x00007f003f29baac: rex.RXB (bad) 
  0x00007f003f29baae: lea    rdi,[rax+0x18]
  0x00007f003f29bab2: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f29bab6: ja     0x00007f003f29bf40
  0x00007f003f29babc: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f29bac0: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f29bac7: mov    QWORD PTR [rax],rcx
  0x00007f003f29baca: mov    rcx,rdx
  0x00007f003f29bacd: shr    rcx,0x3
  0x00007f003f29bad1: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f29bad4: xor    rcx,rcx
  0x00007f003f29bad7: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f29bada: xor    rcx,rcx
  0x00007f003f29badd: mov    QWORD PTR [rax+0x10],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x00007f003f29bae1: mov    rbx,rax
  0x00007f003f29bae4: movabs rdx,0x7f00389b9490  ;   {metadata(method data for {method} {0x00007f00388a4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f29baee: add    QWORD PTR [rdx+0x150],0x1
  0x00007f003f29baf6: movabs rbx,0x7f0038a558d8  ;   {metadata(method data for {method} {0x00007f00387eefd0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f29bb00: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f29bb06: add    edx,0x8
  0x00007f003f29bb09: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f29bb0f: movabs rbx,0x7f00387eefd0  ;   {metadata({method} {0x00007f00387eefd0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f29bb19: and    edx,0x7ffff8
  0x00007f003f29bb1f: cmp    edx,0x0
  0x00007f003f29bb22: je     0x00007f003f29bf4d
  0x00007f003f29bb28: mov    rbx,rax
  0x00007f003f29bb2b: movabs rdx,0x7f0038a558d8  ;   {metadata(method data for {method} {0x00007f00387eefd0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f29bb35: add    QWORD PTR [rdx+0x130],0x1
  0x00007f003f29bb3d: movabs rbx,0x7f0038a55a38  ;   {metadata(method data for {method} {0x00007f00387ea920} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f29bb47: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f29bb4d: add    edx,0x8
  0x00007f003f29bb50: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f29bb56: movabs rbx,0x7f00387ea920  ;   {metadata({method} {0x00007f00387ea920} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f29bb60: and    edx,0x7ffff8
  0x00007f003f29bb66: cmp    edx,0x0
  0x00007f003f29bb69: je     0x00007f003f29bf64
  0x00007f003f29bb6f: mov    rbx,rax
  0x00007f003f29bb72: movabs rdx,0x7f0038a55a38  ;   {metadata(method data for {method} {0x00007f00387ea920} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f29bb7c: add    QWORD PTR [rdx+0x130],0x1
  0x00007f003f29bb84: movabs rbx,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f29bb8e: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f29bb94: add    edx,0x8
  0x00007f003f29bb97: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f29bb9d: movabs rbx,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f29bba7: and    edx,0x7ffff8
  0x00007f003f29bbad: cmp    edx,0x0
  0x00007f003f29bbb0: je     0x00007f003f29bf7b
  0x00007f003f29bbb6: mov    ebx,0x10
  0x00007f003f29bbbb: movabs rdx,0x7c00001f8    ;   {metadata({type array char})}
  0x00007f003f29bbc5: mov    r13,rax
  0x00007f003f29bbc8: movsxd rbx,ebx
  0x00007f003f29bbcb: mov    rdi,rbx
  0x00007f003f29bbce: cmp    rbx,0xffffff
  0x00007f003f29bbd5: ja     0x00007f003f29bf92
  0x00007f003f29bbdb: movabs rsi,0x17
  0x00007f003f29bbe5: lea    rsi,[rsi+rbx*2]
  0x00007f003f29bbe9: and    rsi,0xfffffffffffffff8
  0x00007f003f29bbed: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f29bbf1: lea    rsi,[rax+rsi*1]
  0x00007f003f29bbf5: cmp    rsi,QWORD PTR [r15+0x70]
  0x00007f003f29bbf9: ja     0x00007f003f29bf92
  0x00007f003f29bbff: mov    QWORD PTR [r15+0x60],rsi
  0x00007f003f29bc03: sub    rsi,rax
  0x00007f003f29bc06: mov    QWORD PTR [rax],0x1
  0x00007f003f29bc0d: mov    rcx,rdx
  0x00007f003f29bc10: shr    rcx,0x3
  0x00007f003f29bc14: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f29bc17: mov    DWORD PTR [rax+0xc],ebx
  0x00007f003f29bc1a: sub    rsi,0x10
  0x00007f003f29bc1e: je     0x00007f003f29bc35
  0x00007f003f29bc24: xor    rbx,rbx
  0x00007f003f29bc27: shr    rsi,0x3
  0x00007f003f29bc2b: mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x00007f003f29bc30: dec    rsi
  0x00007f003f29bc33: jne    0x00007f003f29bc2b  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x00007f003f29bc35: mov    r10,rax
  0x00007f003f29bc38: shr    r10,0x3
  0x00007f003f29bc3c: mov    DWORD PTR [r13+0x10],r10d
  0x00007f003f29bc40: mov    rax,r13
  0x00007f003f29bc43: shr    rax,0x9
  0x00007f003f29bc47: movabs rdx,0x7f003ae7c000
  0x00007f003f29bc51: mov    BYTE PTR [rax+rdx*1],0x0  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x00007f003f29bc55: mov    rax,r13
  0x00007f003f29bc58: movabs rdx,0x7f00389b9490  ;   {metadata(method data for {method} {0x00007f00388a4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f29bc62: add    QWORD PTR [rdx+0x160],0x1
  0x00007f003f29bc6a: movabs rdx,0x7f0038a55bb0  ;   {metadata(method data for {method} {0x00007f00387ef920} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f29bc74: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f29bc7a: add    esi,0x8
  0x00007f003f29bc7d: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f29bc83: movabs rdx,0x7f00387ef920  ;   {metadata({method} {0x00007f00387ef920} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f29bc8d: and    esi,0x7ffff8
  0x00007f003f29bc93: cmp    esi,0x0
  0x00007f003f29bc96: je     0x00007f003f29bf9c
  0x00007f003f29bc9c: mov    rax,r13
  0x00007f003f29bc9f: movabs rdx,0x7f0038a55bb0  ;   {metadata(method data for {method} {0x00007f00387ef920} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f29bca9: add    QWORD PTR [rdx+0x130],0x1
  0x00007f003f29bcb1: mov    rdx,r9
  0x00007f003f29bcb4: mov    rsi,r13            ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x00007f003f29bcb7: mov    QWORD PTR [rsp+0x78],r13
  0x00007f003f29bcbc: nop
  0x00007f003f29bcbd: nop
  0x00007f003f29bcbe: nop
  0x00007f003f29bcbf: call   0x00007f003f1c4d60  ; OopMap{[120]=Oop [136]=Oop off=1220}
                                                ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007f003f29bcc4: mov    rax,QWORD PTR [rsp+0x78]
  0x00007f003f29bcc9: movabs rdx,0x7f00389b9490  ;   {metadata(method data for {method} {0x00007f00388a4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f29bcd3: add    QWORD PTR [rdx+0x1f8],0x1
  0x00007f003f29bcdb: movabs rdx,0x7f0038a55fc8  ;   {metadata(method data for {method} {0x00007f00387ef360} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f29bce5: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f29bceb: add    esi,0x8
  0x00007f003f29bcee: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f29bcf4: movabs rdx,0x7f00387ef360  ;   {metadata({method} {0x00007f00387ef360} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f29bcfe: and    esi,0x7ffff8
  0x00007f003f29bd04: cmp    esi,0x0
  0x00007f003f29bd07: je     0x00007f003f29bfb3
  0x00007f003f29bd0d: mov    rax,QWORD PTR [rsp+0x78]
  0x00007f003f29bd12: movabs rdx,0x7f0038a55fc8  ;   {metadata(method data for {method} {0x00007f00387ef360} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f29bd1c: add    QWORD PTR [rdx+0x130],0x1
  0x00007f003f29bd24: movabs rdx,0x6715948a8    ;   {oop(&quot; &gt; &quot;)}
  0x00007f003f29bd2e: mov    rsi,QWORD PTR [rsp+0x78]  ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x00007f003f29bd33: nop
  0x00007f003f29bd34: nop
  0x00007f003f29bd35: nop
  0x00007f003f29bd36: nop
  0x00007f003f29bd37: call   0x00007f003f1c4d60  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007f003f29bd3c: mov    rax,QWORD PTR [rsp+0x78]
  0x00007f003f29bd41: movabs rdx,0x7f00389b9490  ;   {metadata(method data for {method} {0x00007f00388a4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f29bd4b: add    QWORD PTR [rdx+0x290],0x1
  0x00007f003f29bd53: movabs rdx,0x7f0038a55bb0  ;   {metadata(method data for {method} {0x00007f00387ef920} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f29bd5d: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f29bd63: add    esi,0x8
  0x00007f003f29bd66: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f29bd6c: movabs rdx,0x7f00387ef920  ;   {metadata({method} {0x00007f00387ef920} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f29bd76: and    esi,0x7ffff8
  0x00007f003f29bd7c: cmp    esi,0x0
  0x00007f003f29bd7f: je     0x00007f003f29bfca
  0x00007f003f29bd85: mov    rax,QWORD PTR [rsp+0x78]
  0x00007f003f29bd8a: movabs rdx,0x7f0038a55bb0  ;   {metadata(method data for {method} {0x00007f00387ef920} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f29bd94: add    QWORD PTR [rdx+0x130],0x1
  0x00007f003f29bd9c: mov    edx,DWORD PTR [rsp+0x80]
  0x00007f003f29bda3: mov    rsi,QWORD PTR [rsp+0x78]  ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x00007f003f29bda8: nop
  0x00007f003f29bda9: nop
  0x00007f003f29bdaa: nop
  0x00007f003f29bdab: nop
  0x00007f003f29bdac: nop
  0x00007f003f29bdad: nop
  0x00007f003f29bdae: nop
  0x00007f003f29bdaf: call   0x00007f003f1c4d60  ; OopMap{[120]=Oop [136]=Oop off=1460}
                                                ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007f003f29bdb4: mov    rax,QWORD PTR [rsp+0x78]
  0x00007f003f29bdb9: movabs rdx,0x7f00389b9490  ;   {metadata(method data for {method} {0x00007f00388a4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f29bdc3: add    QWORD PTR [rdx+0x328],0x1
  0x00007f003f29bdcb: movabs rdx,0x7f0038a56138  ;   {metadata(method data for {method} {0x00007f00387f0b88} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f29bdd5: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f29bddb: add    esi,0x8
  0x00007f003f29bdde: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f29bde4: movabs rdx,0x7f00387f0b88  ;   {metadata({method} {0x00007f00387f0b88} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f29bdee: and    esi,0x7ffff8
  0x00007f003f29bdf4: cmp    esi,0x0
  0x00007f003f29bdf7: je     0x00007f003f29bfe1
  0x00007f003f29bdfd: movabs rdx,0x7c0001610    ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007f003f29be07: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f29be0b: lea    rdi,[rax+0x18]
  0x00007f003f29be0f: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f29be13: ja     0x00007f003f29bff8
  0x00007f003f29be19: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f29be1d: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f29be24: mov    QWORD PTR [rax],rcx
  0x00007f003f29be27: mov    rcx,rdx
  0x00007f003f29be2a: shr    rcx,0x3
  0x00007f003f29be2e: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f29be31: xor    rcx,rcx
  0x00007f003f29be34: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f29be37: xor    rcx,rcx
  0x00007f003f29be3a: mov    QWORD PTR [rax+0x10],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007f003f29be3e: mov    rdx,QWORD PTR [rsp+0x78]
  0x00007f003f29be43: mov    ecx,DWORD PTR [rdx+0x10]
  0x00007f003f29be46: shl    rcx,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007f003f29be4a: mov    r8d,DWORD PTR [rdx+0xc]  ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007f003f29be4e: mov    rdx,rax
  0x00007f003f29be51: movabs rsi,0x7f0038a56138  ;   {metadata(method data for {method} {0x00007f00387f0b88} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f29be5b: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f29be63: mov    rdx,rcx
  0x00007f003f29be66: mov    ecx,0x0
  0x00007f003f29be6b: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007f003f29be6e: mov    QWORD PTR [rsp+0x90],rax
  0x00007f003f29be76: nop
  0x00007f003f29be77: call   0x00007f003f1c4d60  ; OopMap{[136]=Oop [144]=Oop off=1660}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007f003f29be7c: mov    rax,QWORD PTR [rsp+0x88]
  0x00007f003f29be84: movabs rdx,0x7f00389b9490  ;   {metadata(method data for {method} {0x00007f00388a4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f29be8e: add    QWORD PTR [rdx+0x3c0],0x1
  0x00007f003f29be96: mov    rdx,QWORD PTR [rsp+0x90]
  0x00007f003f29be9e: mov    rsi,QWORD PTR [rsp+0x88]  ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x00007f003f29bea6: nop
  0x00007f003f29bea7: call   0x00007f003f1c4d60  ; OopMap{[136]=Oop off=1708}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007f003f29beac: mov    rax,QWORD PTR [rsp+0x88]
  0x00007f003f29beb4: jmp    0x00007f003f29c030
  0x00007f003f29beb9: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f29bebe: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f29bec6: call   0x00007f003f27d5e0  ; OopMap{r8=Oop off=1739}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x00007f003f29becb: jmp    0x00007f003f29b847
  0x00007f003f29bed0: call   0x00007f003f27a020  ; OopMap{r8=Oop off=1749}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x00007f003f29bed5: jmp    0x00007f003f29b901
  0x00007f003f29beda: call   0x00007f003f279000  ; OopMap{r8=Oop rax=Oop off=1759}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x00007f003f29bedf: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f29bee4: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f29beec: call   0x00007f003f27d5e0  ; OopMap{r8=Oop rax=Oop off=1777}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x00007f003f29bef1: jmp    0x00007f003f29b94c
  0x00007f003f29bef6: nop
  0x00007f003f29bef7: call   0x00007f003f1c5160  ; OopMap{[112]=Oop off=1788}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x00007f003f29befc: jmp    0x00007f003f29ba30
  0x00007f003f29bf01: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f29bf0b: mov    eax,0xa050f00
  0x00007f003f29bf10: call   0x00007f003f27c5e0  ; OopMap{off=1813}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x00007f003f29bf15: jmp    0x00007f003f29ba50
  0x00007f003f29bf1a: mov    rdx,rdx
  0x00007f003f29bf1d: call   0x00007f003f279760  ; OopMap{off=1826}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x00007f003f29bf22: jmp    0x00007f003f29ba95
  0x00007f003f29bf27: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f29bf31: mov    eax,0xa050f00
  0x00007f003f29bf36: call   0x00007f003f27c5e0  ; OopMap{rax=Oop off=1851}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x00007f003f29bf3b: jmp    0x00007f003f29ba98
  0x00007f003f29bf40: mov    rdx,rdx
  0x00007f003f29bf43: call   0x00007f003f279760  ; OopMap{[136]=Oop off=1864}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x00007f003f29bf48: jmp    0x00007f003f29bae1
  0x00007f003f29bf4d: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f29bf52: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f29bf5a: call   0x00007f003f27d5e0  ; OopMap{[136]=Oop rax=Oop off=1887}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007f003f29bf5f: jmp    0x00007f003f29bb28
  0x00007f003f29bf64: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f29bf69: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f29bf71: call   0x00007f003f27d5e0  ; OopMap{[136]=Oop rax=Oop off=1910}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007f003f29bf76: jmp    0x00007f003f29bb6f
  0x00007f003f29bf7b: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f29bf80: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f29bf88: call   0x00007f003f27d5e0  ; OopMap{[136]=Oop rax=Oop off=1933}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007f003f29bf8d: jmp    0x00007f003f29bbb6
  0x00007f003f29bf92: call   0x00007f003f27a020  ; OopMap{[136]=Oop r13=Oop off=1943}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007f003f29bf97: jmp    0x00007f003f29bc35
  0x00007f003f29bf9c: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f29bfa1: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f29bfa9: call   0x00007f003f27d5e0  ; OopMap{[136]=Oop r13=Oop off=1966}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x00007f003f29bfae: jmp    0x00007f003f29bc9c
  0x00007f003f29bfb3: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f29bfb8: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f29bfc0: call   0x00007f003f27d5e0  ; OopMap{[120]=Oop [136]=Oop off=1989}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x00007f003f29bfc5: jmp    0x00007f003f29bd0d
  0x00007f003f29bfca: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f29bfcf: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f29bfd7: call   0x00007f003f27d5e0  ; OopMap{[120]=Oop [136]=Oop off=2012}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x00007f003f29bfdc: jmp    0x00007f003f29bd85
  0x00007f003f29bfe1: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f29bfe6: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f29bfee: call   0x00007f003f27d5e0  ; OopMap{[120]=Oop [136]=Oop off=2035}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x00007f003f29bff3: jmp    0x00007f003f29bdfd
  0x00007f003f29bff8: mov    rdx,rdx
  0x00007f003f29bffb: call   0x00007f003f279760  ; OopMap{[120]=Oop [136]=Oop off=2048}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x00007f003f29c000: jmp    0x00007f003f29be3e
  0x00007f003f29c005: nop
  0x00007f003f29c006: nop
  0x00007f003f29c007: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f29c00e: movabs r10,0x0
  0x00007f003f29c018: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f29c01f: movabs r10,0x0
  0x00007f003f29c029: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f29c030: add    rsp,0xa0
  0x00007f003f29c037: pop    rbp
  0x00007f003f29c038: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f29c03d: hlt    
  0x00007f003f29c03e: hlt    
  0x00007f003f29c03f: hlt    
[Stub Code]
  0x00007f003f29c040: nop                       ;   {no_reloc}
  0x00007f003f29c041: nop
  0x00007f003f29c042: nop
  0x00007f003f29c043: nop
  0x00007f003f29c044: nop
  0x00007f003f29c045: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f29c04f: jmp    0x00007f003f29c04f  ;   {runtime_call}
  0x00007f003f29c054: nop
  0x00007f003f29c055: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f29c05f: jmp    0x00007f003f29c05f  ;   {runtime_call}
  0x00007f003f29c064: nop
  0x00007f003f29c065: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f29c06f: jmp    0x00007f003f29c06f  ;   {runtime_call}
  0x00007f003f29c074: nop
  0x00007f003f29c075: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f29c07f: jmp    0x00007f003f29c07f  ;   {runtime_call}
  0x00007f003f29c084: nop
  0x00007f003f29c085: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f29c08f: jmp    0x00007f003f29c08f  ;   {runtime_call}
  0x00007f003f29c094: nop
  0x00007f003f29c095: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f29c09f: jmp    0x00007f003f29c09f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f29c0a4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f29c0a9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f29c0ae: sub    rsp,0x80
  0x00007f003f29c0b5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f29c0ba: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29c0bf: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f29c0c4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f29c0c9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f29c0ce: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f29c0d3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f29c0d8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f29c0dd: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f29c0e2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f29c0e7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f29c0ec: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f29c0f1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f29c0f6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f29c0fb: mov    QWORD PTR [rsp],r15
  0x00007f003f29c0ff: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f29c109: movabs rsi,0x7f003f29c0a9  ;   {internal_word}
  0x00007f003f29c113: mov    rdx,rsp
  0x00007f003f29c116: and    rsp,0xfffffffffffffff0
  0x00007f003f29c11a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29c11f: hlt    
[Deopt Handler Code]
  0x00007f003f29c120: movabs r10,0x7f003f29c120  ;   {section_word}
  0x00007f003f29c12a: push   r10
  0x00007f003f29c12c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f29c131: hlt    
  0x00007f003f29c132: hlt    
  0x00007f003f29c133: hlt    
  0x00007f003f29c134: hlt    
  0x00007f003f29c135: hlt    
  0x00007f003f29c136: hlt    
  0x00007f003f29c137: hlt    
<nmethod compile_id='35' compiler='C1' level='3' entry='0x00007f003f29b800' size='4360' address='0x00007f003f29b5d0' relocation_offset='312' insts_offset='560' stub_offset='2672' scopes_data_offset='2992' scopes_pcs_offset='3600' dependencies_offset='4336' nul_chk_table_offset='4344' oops_offset='2920' metadata_offset='2928' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='511' iicount='511' stamp='0.203'/>
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.code.ReferenceMap from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotReferenceMap from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='44' method='java/util/ArrayList size ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.204' comment='tiered' hot_count='128'/>
<task_queued compile_id='45' method='java/net/URL getPath ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.204' comment='tiered' hot_count='128'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
sun/nio/cs/UTF_8$Encoder.encode  [0x00007f003f29c920, 0x00007f003f29d718]  3576 bytes
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.code.InstalledCode from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
[Entry Point]
[Constants]
  # {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # this:     rsi:rsi   = &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  # parm3:    r9:r9     = &apos;[B&apos;
  #           [sp+0x90]  (sp of caller)
  0x00007f003f29c920: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f29c924: shl    r10,0x3
  0x00007f003f29c928: cmp    r10,rax
  0x00007f003f29c92b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f29c931: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f29c93c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f29c940: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f29c947: push   rbp
  0x00007f003f29c948: sub    rsp,0x80
  0x00007f003f29c94f: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f29c954: mov    QWORD PTR [rsp+0x60],rdx
  0x00007f003f29c959: mov    QWORD PTR [rsp+0x70],r9
  0x00007f003f29c95e: movabs rax,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29c968: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f29c96e: add    edi,0x8
  0x00007f003f29c971: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f29c977: movabs rax,0x7f00388de1c0  ;   {metadata({method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29c981: and    edi,0x1ff8
  0x00007f003f29c987: cmp    edi,0x0
  0x00007f003f29c98a: je     0x00007f003f29d4d9  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@0 (line 704)

  0x00007f003f29c990: mov    rdi,rcx
  0x00007f003f29c993: add    edi,r8d
  0x00007f003f29c996: mov    DWORD PTR [rsp+0x68],edi
  0x00007f003f29c99a: mov    eax,DWORD PTR [r9+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ; implicit exception: dispatches to 0x00007f003f29d4f0
  0x00007f003f29c99e: movabs rbx,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29c9a8: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f29c9b0: movabs rbx,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f29c9ba: mov    r11d,DWORD PTR [rbx+0xfc]
  0x00007f003f29c9c1: add    r11d,0x8
  0x00007f003f29c9c5: mov    DWORD PTR [rbx+0xfc],r11d
  0x00007f003f29c9cc: movabs rbx,0x7f003887a8b8  ;   {metadata({method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f29c9d6: and    r11d,0x7ffff8
  0x00007f003f29c9dd: cmp    r11d,0x0
  0x00007f003f29c9e1: je     0x00007f003f29d4f5
  0x00007f003f29c9e7: cmp    r8d,eax
  0x00007f003f29c9ea: movabs rbx,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f29c9f4: movabs r11,0x130
  0x00007f003f29c9fe: jg     0x00007f003f29ca0e
  0x00007f003f29ca04: movabs r11,0x140
  0x00007f003f29ca0e: mov    r13,QWORD PTR [rbx+r11*1]
  0x00007f003f29ca12: lea    r13,[r13+0x1]
  0x00007f003f29ca16: mov    QWORD PTR [rbx+r11*1],r13
  0x00007f003f29ca1a: jg     0x00007f003f29ca35  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x00007f003f29ca20: movabs rax,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f29ca2a: inc    DWORD PTR [rax+0x150]
  0x00007f003f29ca30: jmp    0x00007f003f29ca38  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x00007f003f29ca35: mov    r8,rax             ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x00007f003f29ca38: mov    eax,0x0
  0x00007f003f29ca3d: jmp    0x00007f003f29cafa  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)

  0x00007f003f29ca42: nop    WORD PTR [rax+rax*1+0x0]
  0x00007f003f29ca48: movsxd rbx,ecx
  0x00007f003f29ca4b: cmp    ecx,DWORD PTR [rdx+0xc]  ; implicit exception: dispatches to 0x00007f003f29d50c
  0x00007f003f29ca4e: jae    0x00007f003f29d516
  0x00007f003f29ca54: movzx  ebx,WORD PTR [rdx+rbx*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x00007f003f29ca59: cmp    ebx,0x80
  0x00007f003f29ca5f: movabs r11,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29ca69: movabs r13,0x160
  0x00007f003f29ca73: jge    0x00007f003f29ca83
  0x00007f003f29ca79: movabs r13,0x170
  0x00007f003f29ca83: mov    r14,QWORD PTR [r11+r13*1]
  0x00007f003f29ca87: lea    r14,[r14+0x1]
  0x00007f003f29ca8b: mov    QWORD PTR [r11+r13*1],r14
  0x00007f003f29ca8f: jge    0x00007f003f29cb38  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x00007f003f29ca95: mov    r11,rax
  0x00007f003f29ca98: inc    r11d
  0x00007f003f29ca9b: inc    ecx
  0x00007f003f29ca9d: movsxd r13,eax
  0x00007f003f29caa0: cmp    eax,DWORD PTR [r9+0xc]
  0x00007f003f29caa4: jae    0x00007f003f29d51f
  0x00007f003f29caaa: mov    BYTE PTR [r9+r13*1+0x10],bl
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x00007f003f29caaf: movabs rax,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29cab9: mov    ebx,DWORD PTR [rax+0x100]
  0x00007f003f29cabf: add    ebx,0x8
  0x00007f003f29cac2: mov    DWORD PTR [rax+0x100],ebx
  0x00007f003f29cac8: movabs rax,0x7f00388de1c0  ;   {metadata({method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29cad2: and    ebx,0xfff8
  0x00007f003f29cad8: cmp    ebx,0x0
  0x00007f003f29cadb: je     0x00007f003f29d528  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=449}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)

  0x00007f003f29cae1: test   DWORD PTR [rip+0x1b125619],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f29cae7: movabs rax,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29caf1: inc    DWORD PTR [rax+0x180]
  0x00007f003f29caf7: mov    rax,r11            ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)

  0x00007f003f29cafa: cmp    eax,r8d
  0x00007f003f29cafd: movabs rbx,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29cb07: movabs r11,0x140
  0x00007f003f29cb11: jge    0x00007f003f29cb21
  0x00007f003f29cb17: movabs r11,0x150
  0x00007f003f29cb21: mov    r13,QWORD PTR [rbx+r11*1]
  0x00007f003f29cb25: lea    r13,[r13+0x1]
  0x00007f003f29cb29: mov    QWORD PTR [rbx+r11*1],r13
  0x00007f003f29cb2d: jl     0x00007f003f29ca48  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x00007f003f29cb33: nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f003f29cb38: cmp    ecx,edi
  0x00007f003f29cb3a: movabs rbx,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29cb44: movabs r8,0x198
  0x00007f003f29cb4e: jge    0x00007f003f29cb5e
  0x00007f003f29cb54: movabs r8,0x1a8
  0x00007f003f29cb5e: mov    r11,QWORD PTR [rbx+r8*1]
  0x00007f003f29cb62: lea    r11,[r11+0x1]
  0x00007f003f29cb66: mov    QWORD PTR [rbx+r8*1],r11
  0x00007f003f29cb6a: jge    0x00007f003f29d4c4  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)

  0x00007f003f29cb70: mov    rbx,rcx
  0x00007f003f29cb73: inc    ebx
  0x00007f003f29cb75: movsxd r8,ecx
  0x00007f003f29cb78: cmp    ecx,DWORD PTR [rdx+0xc]  ; implicit exception: dispatches to 0x00007f003f29d53f
  0x00007f003f29cb7b: jae    0x00007f003f29d549
  0x00007f003f29cb81: movzx  ecx,WORD PTR [rdx+r8*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)

  0x00007f003f29cb87: cmp    ecx,0x80
  0x00007f003f29cb8d: movabs r8,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29cb97: movabs r11,0x1b8
  0x00007f003f29cba1: jge    0x00007f003f29cbb1
  0x00007f003f29cba7: movabs r11,0x1c8
  0x00007f003f29cbb1: mov    r13,QWORD PTR [r8+r11*1]
  0x00007f003f29cbb5: lea    r13,[r13+0x1]
  0x00007f003f29cbb9: mov    QWORD PTR [r8+r11*1],r13
  0x00007f003f29cbbd: jge    0x00007f003f29cbf0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@73 (line 714)

  0x00007f003f29cbc3: mov    r8,rax
  0x00007f003f29cbc6: inc    r8d
  0x00007f003f29cbc9: movsxd r11,eax
  0x00007f003f29cbcc: cmp    eax,DWORD PTR [r9+0xc]
  0x00007f003f29cbd0: jae    0x00007f003f29d552
  0x00007f003f29cbd6: mov    BYTE PTR [r9+r11*1+0x10],cl
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@86 (line 716)

  0x00007f003f29cbdb: movabs rax,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29cbe5: inc    DWORD PTR [rax+0x1d8]
  0x00007f003f29cbeb: jmp    0x00007f003f29d451  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@87 (line 716)

  0x00007f003f29cbf0: cmp    ecx,0x800
  0x00007f003f29cbf6: movabs r8,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29cc00: movabs r11,0x1f0
  0x00007f003f29cc0a: jge    0x00007f003f29cc1a
  0x00007f003f29cc10: movabs r11,0x200
  0x00007f003f29cc1a: mov    r13,QWORD PTR [r8+r11*1]
  0x00007f003f29cc1e: lea    r13,[r13+0x1]
  0x00007f003f29cc22: mov    QWORD PTR [r8+r11*1],r13
  0x00007f003f29cc26: jge    0x00007f003f29cc84  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@95 (line 717)

  0x00007f003f29cc2c: mov    r8,rcx
  0x00007f003f29cc2f: sar    r8d,0x6
  0x00007f003f29cc33: or     r8d,0xc0
  0x00007f003f29cc3a: movsxd r11,eax
  0x00007f003f29cc3d: cmp    eax,DWORD PTR [r9+0xc]
  0x00007f003f29cc41: jae    0x00007f003f29d55b
  0x00007f003f29cc47: mov    BYTE PTR [r9+r11*1+0x10],r8b
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@115 (line 719)

  0x00007f003f29cc4c: inc    eax
  0x00007f003f29cc4e: mov    r8,rax
  0x00007f003f29cc51: inc    r8d
  0x00007f003f29cc54: and    ecx,0x3f
  0x00007f003f29cc57: or     ecx,0x80
  0x00007f003f29cc5d: movsxd r11,eax
  0x00007f003f29cc60: cmp    eax,DWORD PTR [r9+0xc]
  0x00007f003f29cc64: jae    0x00007f003f29d564
  0x00007f003f29cc6a: mov    BYTE PTR [r9+r11*1+0x10],cl
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@133 (line 720)

  0x00007f003f29cc6f: movabs rax,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29cc79: inc    DWORD PTR [rax+0x210]
  0x00007f003f29cc7f: jmp    0x00007f003f29d451  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@134 (line 720)

  0x00007f003f29cc84: movabs r8,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29cc8e: add    QWORD PTR [r8+0x228],0x1
  0x00007f003f29cc96: movabs r8,0x7f0038a56758  ;   {metadata(method data for {method} {0x00007f0038814238} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f29cca0: mov    r11d,DWORD PTR [r8+0xfc]
  0x00007f003f29cca7: add    r11d,0x8
  0x00007f003f29ccab: mov    DWORD PTR [r8+0xfc],r11d
  0x00007f003f29ccb2: movabs r8,0x7f0038814238  ;   {metadata({method} {0x00007f0038814238} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f29ccbc: and    r11d,0x7ffff8
  0x00007f003f29ccc3: cmp    r11d,0x0
  0x00007f003f29ccc7: je     0x00007f003f29d56d
  0x00007f003f29cccd: cmp    ecx,0xd800
  0x00007f003f29ccd3: movabs r8,0x7f0038a56758  ;   {metadata(method data for {method} {0x00007f0038814238} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f29ccdd: movabs r11,0x130
  0x00007f003f29cce7: jl     0x00007f003f29ccf7
  0x00007f003f29cced: movabs r11,0x140
  0x00007f003f29ccf7: mov    r13,QWORD PTR [r8+r11*1]
  0x00007f003f29ccfb: lea    r13,[r13+0x1]
  0x00007f003f29ccff: mov    QWORD PTR [r8+r11*1],r13
  0x00007f003f29cd03: jl     0x00007f003f29cd45  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::isSurrogate@3 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x00007f003f29cd09: cmp    ecx,0xe000
  0x00007f003f29cd0f: movabs r8,0x7f0038a56758  ;   {metadata(method data for {method} {0x00007f0038814238} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f29cd19: movabs r11,0x150
  0x00007f003f29cd23: jge    0x00007f003f29cd33
  0x00007f003f29cd29: movabs r11,0x160
  0x00007f003f29cd33: mov    r13,QWORD PTR [r8+r11*1]
  0x00007f003f29cd37: lea    r13,[r13+0x1]
  0x00007f003f29cd3b: mov    QWORD PTR [r8+r11*1],r13
  0x00007f003f29cd3f: jl     0x00007f003f29cd50  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::isSurrogate@9 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x00007f003f29cd45: mov    r8d,0x0
  0x00007f003f29cd4b: jmp    0x00007f003f29cd67  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::isSurrogate@17 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x00007f003f29cd50: movabs r8,0x7f0038a56758  ;   {metadata(method data for {method} {0x00007f0038814238} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f29cd5a: inc    DWORD PTR [r8+0x170]
  0x00007f003f29cd61: mov    r8d,0x1            ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::isSurrogate@13 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x00007f003f29cd67: and    r8d,0x1
  0x00007f003f29cd6b: cmp    r8d,0x0
  0x00007f003f29cd6f: movabs r8,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29cd79: movabs r11,0x238
  0x00007f003f29cd83: je     0x00007f003f29cd93
  0x00007f003f29cd89: movabs r11,0x248
  0x00007f003f29cd93: mov    r13,QWORD PTR [r8+r11*1]
  0x00007f003f29cd97: lea    r13,[r13+0x1]
  0x00007f003f29cd9b: mov    QWORD PTR [r8+r11*1],r13
  0x00007f003f29cd9f: je     0x00007f003f29d3e5  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@142 (line 721)

  0x00007f003f29cda5: mov    r8d,DWORD PTR [rsi+0x30]
  0x00007f003f29cda9: shl    r8,0x3             ;*getfield sgp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@146 (line 722)

  0x00007f003f29cdad: cmp    r8,0x0
  0x00007f003f29cdb1: movabs r8,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29cdbb: movabs r11,0x258
  0x00007f003f29cdc5: jne    0x00007f003f29cdd5
  0x00007f003f29cdcb: movabs r11,0x268
  0x00007f003f29cdd5: mov    r13,QWORD PTR [r8+r11*1]
  0x00007f003f29cdd9: lea    r13,[r13+0x1]
  0x00007f003f29cddd: mov    QWORD PTR [r8+r11*1],r13
  0x00007f003f29cde1: mov    DWORD PTR [rsp+0x5c],ecx
  0x00007f003f29cde5: mov    DWORD PTR [rsp+0x58],ebx
  0x00007f003f29cde9: mov    DWORD PTR [rsp+0x6c],eax
  0x00007f003f29cded: jne    0x00007f003f29ce56  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@149 (line 722)

  0x00007f003f29cdf3: nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f003f29cdf8: jmp    0x00007f003f29d593  ;   {no_reloc}
  0x00007f003f29cdfd: add    BYTE PTR [rax],al
  0x00007f003f29cdff: add    BYTE PTR [rax],al
  0x00007f003f29ce01: add    cl,ch
  0x00007f003f29ce03: xchg   esi,eax
  0x00007f003f29ce04: (bad)  
  0x00007f003f29ce05: add    BYTE PTR [rax],al  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)

  0x00007f003f29ce07: mov    rdx,rax
  0x00007f003f29ce0a: movabs r13,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29ce14: add    QWORD PTR [r13+0x278],0x1
  0x00007f003f29ce1c: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@157 (line 723)

  0x00007f003f29ce1f: mov    QWORD PTR [rsp+0x50],rax
  0x00007f003f29ce24: nop
  0x00007f003f29ce25: nop
  0x00007f003f29ce26: nop
  0x00007f003f29ce27: call   0x00007f003f1c4d60  ; OopMap{[72]=Oop [80]=Oop [96]=Oop [112]=Oop off=1292}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@157 (line 723)
                                                ;   {optimized virtual_call}
  0x00007f003f29ce2c: mov    rsi,QWORD PTR [rsp+0x48]
  0x00007f003f29ce31: mov    rax,QWORD PTR [rsp+0x50]
  0x00007f003f29ce36: mov    r10,rax
  0x00007f003f29ce39: shr    r10,0x3
  0x00007f003f29ce3d: mov    DWORD PTR [rsi+0x30],r10d
  0x00007f003f29ce41: mov    rdx,rsi
  0x00007f003f29ce44: shr    rdx,0x9
  0x00007f003f29ce48: movabs rcx,0x7f003ae7c000
  0x00007f003f29ce52: mov    BYTE PTR [rdx+rcx*1],0x0  ;*putfield sgp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@160 (line 723)

  0x00007f003f29ce56: mov    edi,DWORD PTR [rsi+0x30]
  0x00007f003f29ce59: shl    rdi,0x3            ;*getfield sgp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@164 (line 724)

  0x00007f003f29ce5d: cmp    rax,QWORD PTR [rdi]  ; implicit exception: dispatches to 0x00007f003f29d5aa
  0x00007f003f29ce60: mov    rdx,rdi
  0x00007f003f29ce63: movabs rcx,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29ce6d: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f29ce70: shl    rdx,0x3
  0x00007f003f29ce74: cmp    rdx,QWORD PTR [rcx+0x298]
  0x00007f003f29ce7b: jne    0x00007f003f29ce8a
  0x00007f003f29ce7d: add    QWORD PTR [rcx+0x2a0],0x1
  0x00007f003f29ce85: jmp    0x00007f003f29d04c
  0x00007f003f29ce8a: cmp    rdx,QWORD PTR [rcx+0x2a8]
  0x00007f003f29ce91: jne    0x00007f003f29cea0
  0x00007f003f29ce93: add    QWORD PTR [rcx+0x2b0],0x1
  0x00007f003f29ce9b: jmp    0x00007f003f29d04c
  0x00007f003f29cea0: cmp    rdx,QWORD PTR [rcx+0x2b8]
  0x00007f003f29cea7: jne    0x00007f003f29ceb6
  0x00007f003f29cea9: add    QWORD PTR [rcx+0x2c0],0x1
  0x00007f003f29ceb1: jmp    0x00007f003f29d04c
  0x00007f003f29ceb6: cmp    rdx,QWORD PTR [rcx+0x2c8]
  0x00007f003f29cebd: jne    0x00007f003f29cecc
  0x00007f003f29cebf: add    QWORD PTR [rcx+0x2d0],0x1
  0x00007f003f29cec7: jmp    0x00007f003f29d04c
  0x00007f003f29cecc: cmp    rdx,QWORD PTR [rcx+0x2d8]
  0x00007f003f29ced3: jne    0x00007f003f29cee2
  0x00007f003f29ced5: add    QWORD PTR [rcx+0x2e0],0x1
  0x00007f003f29cedd: jmp    0x00007f003f29d04c
  0x00007f003f29cee2: cmp    rdx,QWORD PTR [rcx+0x2e8]
  0x00007f003f29cee9: jne    0x00007f003f29cef8
  0x00007f003f29ceeb: add    QWORD PTR [rcx+0x2f0],0x1
  0x00007f003f29cef3: jmp    0x00007f003f29d04c
  0x00007f003f29cef8: cmp    rdx,QWORD PTR [rcx+0x2f8]
  0x00007f003f29ceff: jne    0x00007f003f29cf0e
  0x00007f003f29cf01: add    QWORD PTR [rcx+0x300],0x1
  0x00007f003f29cf09: jmp    0x00007f003f29d04c
  0x00007f003f29cf0e: cmp    rdx,QWORD PTR [rcx+0x308]
  0x00007f003f29cf15: jne    0x00007f003f29cf24
  0x00007f003f29cf17: add    QWORD PTR [rcx+0x310],0x1
  0x00007f003f29cf1f: jmp    0x00007f003f29d04c
  0x00007f003f29cf24: cmp    QWORD PTR [rcx+0x298],0x0
  0x00007f003f29cf2f: jne    0x00007f003f29cf48
  0x00007f003f29cf31: mov    QWORD PTR [rcx+0x298],rdx
  0x00007f003f29cf38: mov    QWORD PTR [rcx+0x2a0],0x1
  0x00007f003f29cf43: jmp    0x00007f003f29d04c
  0x00007f003f29cf48: cmp    QWORD PTR [rcx+0x2a8],0x0
  0x00007f003f29cf53: jne    0x00007f003f29cf6c
  0x00007f003f29cf55: mov    QWORD PTR [rcx+0x2a8],rdx
  0x00007f003f29cf5c: mov    QWORD PTR [rcx+0x2b0],0x1
  0x00007f003f29cf67: jmp    0x00007f003f29d04c
  0x00007f003f29cf6c: cmp    QWORD PTR [rcx+0x2b8],0x0
  0x00007f003f29cf77: jne    0x00007f003f29cf90
  0x00007f003f29cf79: mov    QWORD PTR [rcx+0x2b8],rdx
  0x00007f003f29cf80: mov    QWORD PTR [rcx+0x2c0],0x1
  0x00007f003f29cf8b: jmp    0x00007f003f29d04c
  0x00007f003f29cf90: cmp    QWORD PTR [rcx+0x2c8],0x0
  0x00007f003f29cf9b: jne    0x00007f003f29cfb4
  0x00007f003f29cf9d: mov    QWORD PTR [rcx+0x2c8],rdx
  0x00007f003f29cfa4: mov    QWORD PTR [rcx+0x2d0],0x1
  0x00007f003f29cfaf: jmp    0x00007f003f29d04c
  0x00007f003f29cfb4: cmp    QWORD PTR [rcx+0x2d8],0x0
  0x00007f003f29cfbf: jne    0x00007f003f29cfd8
  0x00007f003f29cfc1: mov    QWORD PTR [rcx+0x2d8],rdx
  0x00007f003f29cfc8: mov    QWORD PTR [rcx+0x2e0],0x1
  0x00007f003f29cfd3: jmp    0x00007f003f29d04c
  0x00007f003f29cfd8: cmp    QWORD PTR [rcx+0x2e8],0x0
  0x00007f003f29cfe3: jne    0x00007f003f29cffc
  0x00007f003f29cfe5: mov    QWORD PTR [rcx+0x2e8],rdx
  0x00007f003f29cfec: mov    QWORD PTR [rcx+0x2f0],0x1
  0x00007f003f29cff7: jmp    0x00007f003f29d04c
  0x00007f003f29cffc: cmp    QWORD PTR [rcx+0x2f8],0x0
  0x00007f003f29d007: jne    0x00007f003f29d020
  0x00007f003f29d009: mov    QWORD PTR [rcx+0x2f8],rdx
  0x00007f003f29d010: mov    QWORD PTR [rcx+0x300],0x1
  0x00007f003f29d01b: jmp    0x00007f003f29d04c
  0x00007f003f29d020: cmp    QWORD PTR [rcx+0x308],0x0
  0x00007f003f29d02b: jne    0x00007f003f29d044
  0x00007f003f29d02d: mov    QWORD PTR [rcx+0x308],rdx
  0x00007f003f29d034: mov    QWORD PTR [rcx+0x310],0x1
  0x00007f003f29d03f: jmp    0x00007f003f29d04c
  0x00007f003f29d044: add    QWORD PTR [rcx+0x288],0x1
  0x00007f003f29d04c: mov    ebx,DWORD PTR [rsp+0x58]
  0x00007f003f29d050: dec    ebx
  0x00007f003f29d052: mov    edx,DWORD PTR [rsp+0x5c]
  0x00007f003f29d056: mov    rcx,QWORD PTR [rsp+0x60]
  0x00007f003f29d05b: mov    r8,rbx
  0x00007f003f29d05e: mov    r9d,DWORD PTR [rsp+0x68]
  0x00007f003f29d063: mov    rsi,rdi            ;*invokevirtual parse {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)

  0x00007f003f29d066: nop
  0x00007f003f29d067: nop
  0x00007f003f29d068: nop
  0x00007f003f29d069: nop
  0x00007f003f29d06a: nop
  0x00007f003f29d06b: nop
  0x00007f003f29d06c: nop
  0x00007f003f29d06d: movabs rax,0xffffffffffffffff
  0x00007f003f29d077: call   0x00007f003f1c4f60  ; OopMap{[96]=Oop [112]=Oop [72]=Oop off=1884}
                                                ;*invokevirtual parse {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)
                                                ;   {virtual_call}
  0x00007f003f29d07c: cmp    eax,0x0
  0x00007f003f29d07f: movabs rsi,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29d089: movabs rdi,0x320
  0x00007f003f29d093: jge    0x00007f003f29d0a3
  0x00007f003f29d099: movabs rdi,0x330
  0x00007f003f29d0a3: mov    rbx,QWORD PTR [rsi+rdi*1]
  0x00007f003f29d0a7: lea    rbx,[rbx+0x1]
  0x00007f003f29d0ab: mov    QWORD PTR [rsi+rdi*1],rbx
  0x00007f003f29d0af: jge    0x00007f003f29d32d  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@182 (line 725)

  0x00007f003f29d0b5: mov    rsi,QWORD PTR [rsp+0x48]
  0x00007f003f29d0ba: mov    rax,rsi
  0x00007f003f29d0bd: movabs rdi,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29d0c7: mov    eax,DWORD PTR [rax+0x8]
  0x00007f003f29d0ca: shl    rax,0x3
  0x00007f003f29d0ce: cmp    rax,QWORD PTR [rdi+0x350]
  0x00007f003f29d0d5: jne    0x00007f003f29d0e4
  0x00007f003f29d0d7: add    QWORD PTR [rdi+0x358],0x1
  0x00007f003f29d0df: jmp    0x00007f003f29d2a6
  0x00007f003f29d0e4: cmp    rax,QWORD PTR [rdi+0x360]
  0x00007f003f29d0eb: jne    0x00007f003f29d0fa
  0x00007f003f29d0ed: add    QWORD PTR [rdi+0x368],0x1
  0x00007f003f29d0f5: jmp    0x00007f003f29d2a6
  0x00007f003f29d0fa: cmp    rax,QWORD PTR [rdi+0x370]
  0x00007f003f29d101: jne    0x00007f003f29d110
  0x00007f003f29d103: add    QWORD PTR [rdi+0x378],0x1
  0x00007f003f29d10b: jmp    0x00007f003f29d2a6
  0x00007f003f29d110: cmp    rax,QWORD PTR [rdi+0x380]
  0x00007f003f29d117: jne    0x00007f003f29d126
  0x00007f003f29d119: add    QWORD PTR [rdi+0x388],0x1
  0x00007f003f29d121: jmp    0x00007f003f29d2a6
  0x00007f003f29d126: cmp    rax,QWORD PTR [rdi+0x390]
  0x00007f003f29d12d: jne    0x00007f003f29d13c
  0x00007f003f29d12f: add    QWORD PTR [rdi+0x398],0x1
  0x00007f003f29d137: jmp    0x00007f003f29d2a6
  0x00007f003f29d13c: cmp    rax,QWORD PTR [rdi+0x3a0]
  0x00007f003f29d143: jne    0x00007f003f29d152
  0x00007f003f29d145: add    QWORD PTR [rdi+0x3a8],0x1
  0x00007f003f29d14d: jmp    0x00007f003f29d2a6
  0x00007f003f29d152: cmp    rax,QWORD PTR [rdi+0x3b0]
  0x00007f003f29d159: jne    0x00007f003f29d168
  0x00007f003f29d15b: add    QWORD PTR [rdi+0x3b8],0x1
  0x00007f003f29d163: jmp    0x00007f003f29d2a6
  0x00007f003f29d168: cmp    rax,QWORD PTR [rdi+0x3c0]
  0x00007f003f29d16f: jne    0x00007f003f29d17e
  0x00007f003f29d171: add    QWORD PTR [rdi+0x3c8],0x1
  0x00007f003f29d179: jmp    0x00007f003f29d2a6
  0x00007f003f29d17e: cmp    QWORD PTR [rdi+0x350],0x0
  0x00007f003f29d189: jne    0x00007f003f29d1a2
  0x00007f003f29d18b: mov    QWORD PTR [rdi+0x350],rax
  0x00007f003f29d192: mov    QWORD PTR [rdi+0x358],0x1
  0x00007f003f29d19d: jmp    0x00007f003f29d2a6
  0x00007f003f29d1a2: cmp    QWORD PTR [rdi+0x360],0x0
  0x00007f003f29d1ad: jne    0x00007f003f29d1c6
  0x00007f003f29d1af: mov    QWORD PTR [rdi+0x360],rax
  0x00007f003f29d1b6: mov    QWORD PTR [rdi+0x368],0x1
  0x00007f003f29d1c1: jmp    0x00007f003f29d2a6
  0x00007f003f29d1c6: cmp    QWORD PTR [rdi+0x370],0x0
  0x00007f003f29d1d1: jne    0x00007f003f29d1ea
  0x00007f003f29d1d3: mov    QWORD PTR [rdi+0x370],rax
  0x00007f003f29d1da: mov    QWORD PTR [rdi+0x378],0x1
  0x00007f003f29d1e5: jmp    0x00007f003f29d2a6
  0x00007f003f29d1ea: cmp    QWORD PTR [rdi+0x380],0x0
  0x00007f003f29d1f5: jne    0x00007f003f29d20e
  0x00007f003f29d1f7: mov    QWORD PTR [rdi+0x380],rax
  0x00007f003f29d1fe: mov    QWORD PTR [rdi+0x388],0x1
  0x00007f003f29d209: jmp    0x00007f003f29d2a6
  0x00007f003f29d20e: cmp    QWORD PTR [rdi+0x390],0x0
  0x00007f003f29d219: jne    0x00007f003f29d232
  0x00007f003f29d21b: mov    QWORD PTR [rdi+0x390],rax
  0x00007f003f29d222: mov    QWORD PTR [rdi+0x398],0x1
  0x00007f003f29d22d: jmp    0x00007f003f29d2a6
  0x00007f003f29d232: cmp    QWORD PTR [rdi+0x3a0],0x0
  0x00007f003f29d23d: jne    0x00007f003f29d256
  0x00007f003f29d23f: mov    QWORD PTR [rdi+0x3a0],rax
  0x00007f003f29d246: mov    QWORD PTR [rdi+0x3a8],0x1
  0x00007f003f29d251: jmp    0x00007f003f29d2a6
  0x00007f003f29d256: cmp    QWORD PTR [rdi+0x3b0],0x0
  0x00007f003f29d261: jne    0x00007f003f29d27a
  0x00007f003f29d263: mov    QWORD PTR [rdi+0x3b0],rax
  0x00007f003f29d26a: mov    QWORD PTR [rdi+0x3b8],0x1
  0x00007f003f29d275: jmp    0x00007f003f29d2a6
  0x00007f003f29d27a: cmp    QWORD PTR [rdi+0x3c0],0x0
  0x00007f003f29d285: jne    0x00007f003f29d29e
  0x00007f003f29d287: mov    QWORD PTR [rdi+0x3c0],rax
  0x00007f003f29d28e: mov    QWORD PTR [rdi+0x3c8],0x1
  0x00007f003f29d299: jmp    0x00007f003f29d2a6
  0x00007f003f29d29e: add    QWORD PTR [rdi+0x340],0x1
  0x00007f003f29d2a6: mov    eax,DWORD PTR [rsi+0x20]
  0x00007f003f29d2a9: shl    rax,0x3            ;*getfield malformedInputAction {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::malformedInputAction@1 (line 365)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@186 (line 726)

  0x00007f003f29d2ad: movabs r10,0x670b968c0    ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00007f003f29d2b7: cmp    rax,r10
  0x00007f003f29d2ba: movabs rax,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29d2c4: movabs rdi,0x3d8
  0x00007f003f29d2ce: je     0x00007f003f29d2de
  0x00007f003f29d2d4: movabs rdi,0x3e8
  0x00007f003f29d2de: mov    rbx,QWORD PTR [rax+rdi*1]
  0x00007f003f29d2e2: lea    rbx,[rbx+0x1]
  0x00007f003f29d2e6: mov    QWORD PTR [rax+rdi*1],rbx
  0x00007f003f29d2ea: jne    0x00007f003f29d4b0  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@192 (line 726)

  0x00007f003f29d2f0: mov    edi,DWORD PTR [rsp+0x6c]
  0x00007f003f29d2f4: mov    r9,QWORD PTR [rsp+0x70]
  0x00007f003f29d2f9: mov    rax,rdi
  0x00007f003f29d2fc: inc    eax
  0x00007f003f29d2fe: movsx  ebx,BYTE PTR [rsi+0x2c]  ;*getfield repl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@205 (line 728)

  0x00007f003f29d302: movsxd rdx,edi
  0x00007f003f29d305: cmp    edi,DWORD PTR [r9+0xc]
  0x00007f003f29d309: jae    0x00007f003f29d5af
  0x00007f003f29d30f: mov    BYTE PTR [r9+rdx*1+0x10],bl
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@208 (line 728)

  0x00007f003f29d314: movabs rdi,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29d31e: inc    DWORD PTR [rdi+0x3f8]
  0x00007f003f29d324: mov    ebx,DWORD PTR [rsp+0x58]
  0x00007f003f29d328: jmp    0x00007f003f29d3cd  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@209 (line 728)

  0x00007f003f29d32d: mov    edi,DWORD PTR [rsp+0x6c]
  0x00007f003f29d331: mov    r9,QWORD PTR [rsp+0x70]
  0x00007f003f29d336: mov    rsi,QWORD PTR [rsp+0x48]
  0x00007f003f29d33b: mov    rbx,rax
  0x00007f003f29d33e: sar    ebx,0x12
  0x00007f003f29d341: or     ebx,0xf0
  0x00007f003f29d347: movsxd rdx,edi
  0x00007f003f29d34a: cmp    edi,DWORD PTR [r9+0xc]
  0x00007f003f29d34e: jae    0x00007f003f29d5b8
  0x00007f003f29d354: mov    BYTE PTR [r9+rdx*1+0x10],bl
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@229 (line 730)

  0x00007f003f29d359: inc    edi
  0x00007f003f29d35b: mov    rbx,rax
  0x00007f003f29d35e: sar    ebx,0xc
  0x00007f003f29d361: and    ebx,0x3f
  0x00007f003f29d364: or     ebx,0x80
  0x00007f003f29d36a: movsxd rdx,edi
  0x00007f003f29d36d: cmp    edi,DWORD PTR [r9+0xc]
  0x00007f003f29d371: jae    0x00007f003f29d5c1
  0x00007f003f29d377: mov    BYTE PTR [r9+rdx*1+0x10],bl
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@250 (line 731)

  0x00007f003f29d37c: inc    edi
  0x00007f003f29d37e: mov    rbx,rax
  0x00007f003f29d381: sar    ebx,0x6
  0x00007f003f29d384: and    ebx,0x3f
  0x00007f003f29d387: or     ebx,0x80
  0x00007f003f29d38d: movsxd rdx,edi
  0x00007f003f29d390: cmp    edi,DWORD PTR [r9+0xc]
  0x00007f003f29d394: jae    0x00007f003f29d5ca
  0x00007f003f29d39a: mov    BYTE PTR [r9+rdx*1+0x10],bl
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@271 (line 732)

  0x00007f003f29d39f: inc    edi
  0x00007f003f29d3a1: mov    rbx,rdi
  0x00007f003f29d3a4: inc    ebx
  0x00007f003f29d3a6: and    eax,0x3f
  0x00007f003f29d3a9: or     eax,0x80
  0x00007f003f29d3af: movsxd rdx,edi
  0x00007f003f29d3b2: cmp    edi,DWORD PTR [r9+0xc]
  0x00007f003f29d3b6: jae    0x00007f003f29d5d3
  0x00007f003f29d3bc: mov    BYTE PTR [r9+rdx*1+0x10],al
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@289 (line 733)

  0x00007f003f29d3c1: mov    edi,DWORD PTR [rsp+0x58]
  0x00007f003f29d3c5: inc    edi
  0x00007f003f29d3c7: mov    rax,rbx
  0x00007f003f29d3ca: mov    rbx,rdi
  0x00007f003f29d3cd: movabs rdi,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29d3d7: inc    DWORD PTR [rdi+0x410]
  0x00007f003f29d3dd: mov    r8,rax
  0x00007f003f29d3e0: jmp    0x00007f003f29d451  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@293 (line 736)

  0x00007f003f29d3e5: mov    rdi,rax
  0x00007f003f29d3e8: mov    rax,rcx
  0x00007f003f29d3eb: sar    eax,0xc
  0x00007f003f29d3ee: or     eax,0xe0
  0x00007f003f29d3f4: movsxd rdx,edi
  0x00007f003f29d3f7: cmp    edi,DWORD PTR [r9+0xc]
  0x00007f003f29d3fb: jae    0x00007f003f29d5dc
  0x00007f003f29d401: mov    BYTE PTR [r9+rdx*1+0x10],al
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@313 (line 738)

  0x00007f003f29d406: mov    rax,rdi
  0x00007f003f29d409: inc    eax
  0x00007f003f29d40b: mov    rdi,rcx
  0x00007f003f29d40e: sar    edi,0x6
  0x00007f003f29d411: and    edi,0x3f
  0x00007f003f29d414: or     edi,0x80
  0x00007f003f29d41a: movsxd rdx,eax
  0x00007f003f29d41d: cmp    eax,DWORD PTR [r9+0xc]
  0x00007f003f29d421: jae    0x00007f003f29d5e5
  0x00007f003f29d427: mov    BYTE PTR [r9+rdx*1+0x10],dil
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@334 (line 739)

  0x00007f003f29d42c: inc    eax
  0x00007f003f29d42e: mov    rdi,rax
  0x00007f003f29d431: inc    edi
  0x00007f003f29d433: and    ecx,0x3f
  0x00007f003f29d436: or     ecx,0x80
  0x00007f003f29d43c: movsxd rdx,eax
  0x00007f003f29d43f: cmp    eax,DWORD PTR [r9+0xc]
  0x00007f003f29d443: jae    0x00007f003f29d5ee
  0x00007f003f29d449: mov    BYTE PTR [r9+rdx*1+0x10],cl
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@352 (line 740)

  0x00007f003f29d44e: mov    r8,rdi             ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x00007f003f29d451: movabs rax,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29d45b: mov    edi,DWORD PTR [rax+0x100]
  0x00007f003f29d461: add    edi,0x8
  0x00007f003f29d464: mov    DWORD PTR [rax+0x100],edi
  0x00007f003f29d46a: movabs rax,0x7f00388de1c0  ;   {metadata({method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29d474: and    edi,0xfff8
  0x00007f003f29d47a: cmp    edi,0x0
  0x00007f003f29d47d: je     0x00007f003f29d5f7  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2915}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x00007f003f29d483: test   DWORD PTR [rip+0x1b124c77],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f29d489: movabs rax,0x7f0038a562a8  ;   {metadata(method data for {method} {0x00007f00388de1c0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f29d493: inc    DWORD PTR [rax+0x428]
  0x00007f003f29d499: mov    rdi,r8
  0x00007f003f29d49c: mov    rcx,rbx
  0x00007f003f29d49f: mov    rax,rdi
  0x00007f003f29d4a2: mov    edi,DWORD PTR [rsp+0x68]
  0x00007f003f29d4a6: mov    rdx,QWORD PTR [rsp+0x60]
  0x00007f003f29d4ab: jmp    0x00007f003f29cb38  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x00007f003f29d4b0: mov    eax,0xffffffff
  0x00007f003f29d4b5: add    rsp,0x80
  0x00007f003f29d4bc: pop    rbp
  0x00007f003f29d4bd: test   DWORD PTR [rip+0x1b124c3d],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29d4c3: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@196 (line 727)

  0x00007f003f29d4c4: mov    rdi,rax
  0x00007f003f29d4c7: mov    rax,rdi
  0x00007f003f29d4ca: add    rsp,0x80
  0x00007f003f29d4d1: pop    rbp
  0x00007f003f29d4d2: test   DWORD PTR [rip+0x1b124c28],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29d4d8: ret    
  0x00007f003f29d4d9: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f29d4de: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f29d4e6: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3019}
                                                ;*synchronization entry
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@-1 (line 704)
                                                ;   {runtime_call}
  0x00007f003f29d4eb: jmp    0x00007f003f29c990
  0x00007f003f29d4f0: call   0x00007f003f279000  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3029}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ;   {runtime_call}
  0x00007f003f29d4f5: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f29d4fa: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f29d502: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3047}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)
                                                ;   {runtime_call}
  0x00007f003f29d507: jmp    0x00007f003f29c9e7
  0x00007f003f29d50c: call   0x00007f003f279000  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3057}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x00007f003f29d511: call   0x00007f003f279000  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3062}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x00007f003f29d516: mov    QWORD PTR [rsp],rcx
  0x00007f003f29d51a: call   0x00007f003f278940  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3071}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x00007f003f29d51f: mov    QWORD PTR [rsp],rax
  0x00007f003f29d523: call   0x00007f003f278940  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3080}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x00007f003f29d528: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f29d52d: mov    QWORD PTR [rsp],0x33
  0x00007f003f29d535: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3098}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)
                                                ;   {runtime_call}
  0x00007f003f29d53a: jmp    0x00007f003f29cae1
  0x00007f003f29d53f: call   0x00007f003f279000  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3108}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x00007f003f29d544: call   0x00007f003f279000  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3113}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x00007f003f29d549: mov    QWORD PTR [rsp],rcx
  0x00007f003f29d54d: call   0x00007f003f278940  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3122}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x00007f003f29d552: mov    QWORD PTR [rsp],rax
  0x00007f003f29d556: call   0x00007f003f278940  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3131}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@86 (line 716)
                                                ;   {runtime_call}
  0x00007f003f29d55b: mov    QWORD PTR [rsp],rax
  0x00007f003f29d55f: call   0x00007f003f278940  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3140}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@115 (line 719)
                                                ;   {runtime_call}
  0x00007f003f29d564: mov    QWORD PTR [rsp],rax
  0x00007f003f29d568: call   0x00007f003f278940  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3149}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@133 (line 720)
                                                ;   {runtime_call}
  0x00007f003f29d56d: mov    QWORD PTR [rsp+0x8],r8
  0x00007f003f29d572: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f29d57a: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=3167}
                                                ;*synchronization entry
                                                ; - java.lang.Character::isSurrogate@-1 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)
                                                ;   {runtime_call}
  0x00007f003f29d57f: jmp    0x00007f003f29cccd
  0x00007f003f29d584: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f29d58e: mov    eax,0xa050f00
  0x00007f003f29d593: call   0x00007f003f27c5e0  ; OopMap{[112]=Oop [72]=Oop [96]=Oop off=3192}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)
                                                ;   {runtime_call}
  0x00007f003f29d598: jmp    0x00007f003f29cdf8
  0x00007f003f29d59d: mov    rdx,rdx
  0x00007f003f29d5a0: call   0x00007f003f2794a0  ; OopMap{[112]=Oop [72]=Oop [96]=Oop off=3205}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)
                                                ;   {runtime_call}
  0x00007f003f29d5a5: jmp    0x00007f003f29ce07
  0x00007f003f29d5aa: call   0x00007f003f279000  ; OopMap{[96]=Oop [112]=Oop rsi=Oop [72]=Oop rdi=Oop off=3215}
                                                ;*invokevirtual parse {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)
                                                ;   {runtime_call}
  0x00007f003f29d5af: mov    QWORD PTR [rsp],rdi
  0x00007f003f29d5b3: call   0x00007f003f278940  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=3224}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@208 (line 728)
                                                ;   {runtime_call}
  0x00007f003f29d5b8: mov    QWORD PTR [rsp],rdi
  0x00007f003f29d5bc: call   0x00007f003f278940  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=3233}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@229 (line 730)
                                                ;   {runtime_call}
  0x00007f003f29d5c1: mov    QWORD PTR [rsp],rdi
  0x00007f003f29d5c5: call   0x00007f003f278940  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=3242}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@250 (line 731)
                                                ;   {runtime_call}
  0x00007f003f29d5ca: mov    QWORD PTR [rsp],rdi
  0x00007f003f29d5ce: call   0x00007f003f278940  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=3251}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@271 (line 732)
                                                ;   {runtime_call}
  0x00007f003f29d5d3: mov    QWORD PTR [rsp],rdi
  0x00007f003f29d5d7: call   0x00007f003f278940  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=3260}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@289 (line 733)
                                                ;   {runtime_call}
  0x00007f003f29d5dc: mov    QWORD PTR [rsp],rdi
  0x00007f003f29d5e0: call   0x00007f003f278940  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=3269}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@313 (line 738)
                                                ;   {runtime_call}
  0x00007f003f29d5e5: mov    QWORD PTR [rsp],rax
  0x00007f003f29d5e9: call   0x00007f003f278940  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=3278}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@334 (line 739)
                                                ;   {runtime_call}
  0x00007f003f29d5ee: mov    QWORD PTR [rsp],rax
  0x00007f003f29d5f2: call   0x00007f003f278940  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=3287}
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@352 (line 740)
                                                ;   {runtime_call}
  0x00007f003f29d5f7: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f29d5fc: mov    QWORD PTR [rsp],0x161
  0x00007f003f29d604: call   0x00007f003f27d5e0  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=3305}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)
                                                ;   {runtime_call}
  0x00007f003f29d609: jmp    0x00007f003f29d483
  0x00007f003f29d60e: nop
  0x00007f003f29d60f: nop
  0x00007f003f29d610: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f29d617: movabs r10,0x0
  0x00007f003f29d621: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f29d628: movabs r10,0x0
  0x00007f003f29d632: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f29d639: add    rsp,0x80
  0x00007f003f29d640: pop    rbp
  0x00007f003f29d641: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f29d646: hlt    
  0x00007f003f29d647: hlt    
  0x00007f003f29d648: hlt    
  0x00007f003f29d649: hlt    
  0x00007f003f29d64a: hlt    
  0x00007f003f29d64b: hlt    
  0x00007f003f29d64c: hlt    
  0x00007f003f29d64d: hlt    
  0x00007f003f29d64e: hlt    
  0x00007f003f29d64f: hlt    
  0x00007f003f29d650: hlt    
  0x00007f003f29d651: hlt    
  0x00007f003f29d652: hlt    
  0x00007f003f29d653: hlt    
  0x00007f003f29d654: hlt    
  0x00007f003f29d655: hlt    
  0x00007f003f29d656: hlt    
  0x00007f003f29d657: hlt    
  0x00007f003f29d658: hlt    
  0x00007f003f29d659: hlt    
  0x00007f003f29d65a: hlt    
  0x00007f003f29d65b: hlt    
  0x00007f003f29d65c: hlt    
  0x00007f003f29d65d: hlt    
  0x00007f003f29d65e: hlt    
  0x00007f003f29d65f: hlt    
[Stub Code]
  0x00007f003f29d660: nop                       ;   {no_reloc}
  0x00007f003f29d661: nop
  0x00007f003f29d662: nop
  0x00007f003f29d663: nop
  0x00007f003f29d664: nop
  0x00007f003f29d665: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f29d66f: jmp    0x00007f003f29d66f  ;   {runtime_call}
  0x00007f003f29d674: nop
  0x00007f003f29d675: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f29d67f: jmp    0x00007f003f29d67f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f29d684: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f29d689: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f29d68e: sub    rsp,0x80
  0x00007f003f29d695: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f29d69a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29d69f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f29d6a4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f29d6a9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f29d6ae: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f29d6b3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f29d6b8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f29d6bd: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f29d6c2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f29d6c7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f29d6cc: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f29d6d1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f29d6d6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f29d6db: mov    QWORD PTR [rsp],r15
  0x00007f003f29d6df: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f29d6e9: movabs rsi,0x7f003f29d689  ;   {internal_word}
  0x00007f003f29d6f3: mov    rdx,rsp
  0x00007f003f29d6f6: and    rsp,0xfffffffffffffff0
  0x00007f003f29d6fa: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29d6ff: hlt    
[Deopt Handler Code]
  0x00007f003f29d700: movabs r10,0x7f003f29d700  ;   {section_word}
  0x00007f003f29d70a: push   r10
  0x00007f003f29d70c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f29d711: hlt    
  0x00007f003f29d712: hlt    
  0x00007f003f29d713: hlt    
  0x00007f003f29d714: hlt    
  0x00007f003f29d715: hlt    
  0x00007f003f29d716: hlt    
  0x00007f003f29d717: hlt    
<nmethod compile_id='43' compiler='C1' level='3' entry='0x00007f003f29c920' size='6256' address='0x00007f003f29c710' relocation_offset='312' insts_offset='528' stub_offset='3920' scopes_data_offset='4136' scopes_pcs_offset='4880' dependencies_offset='6192' nul_chk_table_offset='6200' metadata_offset='4104' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='190' backedge_count='9718' iicount='190' stamp='0.211'/>
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.HotSpotInstalledCode from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='46' method='java/net/URL getHost ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.211' comment='tiered' hot_count='128'/>
<task_queued compile_id='47' method='java/net/URL getAuthority ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.211' comment='tiered' hot_count='128'/>
[Loaded jdk.vm.ci.hotspot.HotSpotNmethod from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.meta.JavaMethod from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.meta.ModifiersProvider from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.meta.ResolvedJavaMethod from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotResolvedJavaMethod from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.hotspot.MetaspaceWrapperObject from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded java.util.Formattable from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotMethod from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='48' method='java/net/URL getRef ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.214' comment='tiered' hot_count='128'/>
<task_queued compile_id='49' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='512' iicount='512' level='3' stamp='0.214' comment='tiered' hot_count='512'/>
<task_queued compile_id='50' method='java/net/URL getFile ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.215' comment='tiered' hot_count='128'/>
[Loaded jdk.vm.ci.meta.JavaType from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/net/URL.getHost  [0x00007f003f29e100, 0x00007f003f29e210]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038805cb8} &apos;getHost&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f29e100: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f29e104: shl    r10,0x3
  0x00007f003f29e108: cmp    r10,rax
  0x00007f003f29e10b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f29e111: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f29e11c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f29e120: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f29e127: push   rbp
  0x00007f003f29e128: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getHost@0 (line 811)

  0x00007f003f29e12c: mov    eax,DWORD PTR [rsi+0x18]
  0x00007f003f29e12f: shl    rax,0x3            ;*getfield host {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getHost@1 (line 811)

  0x00007f003f29e133: add    rsp,0x30
  0x00007f003f29e137: pop    rbp
  0x00007f003f29e138: test   DWORD PTR [rip+0x1b123fc2],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29e13e: ret    
  0x00007f003f29e13f: nop
  0x00007f003f29e140: nop
  0x00007f003f29e141: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f29e148: movabs r10,0x0
  0x00007f003f29e152: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f29e159: movabs r10,0x0
  0x00007f003f29e163: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f29e16a: add    rsp,0x30
  0x00007f003f29e16e: pop    rbp
  0x00007f003f29e16f: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f29e174: hlt    
  0x00007f003f29e175: hlt    
  0x00007f003f29e176: hlt    
  0x00007f003f29e177: hlt    
  0x00007f003f29e178: hlt    
  0x00007f003f29e179: hlt    
  0x00007f003f29e17a: hlt    
  0x00007f003f29e17b: hlt    
  0x00007f003f29e17c: hlt    
  0x00007f003f29e17d: hlt    
  0x00007f003f29e17e: hlt    
  0x00007f003f29e17f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f29e180: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f29e185: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f29e18a: sub    rsp,0x80
  0x00007f003f29e191: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f29e196: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29e19b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f29e1a0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f29e1a5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f29e1aa: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f29e1af: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f29e1b4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f29e1b9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f29e1be: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f29e1c3: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f29e1c8: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f29e1cd: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f29e1d2: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f29e1d7: mov    QWORD PTR [rsp],r15
  0x00007f003f29e1db: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f29e1e5: movabs rsi,0x7f003f29e185  ;   {internal_word}
  0x00007f003f29e1ef: mov    rdx,rsp
  0x00007f003f29e1f2: and    rsp,0xfffffffffffffff0
  0x00007f003f29e1f6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29e1fb: hlt    
[Deopt Handler Code]
  0x00007f003f29e1fc: movabs r10,0x7f003f29e1fc  ;   {section_word}
  0x00007f003f29e206: push   r10
  0x00007f003f29e208: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f29e20d: hlt    
  0x00007f003f29e20e: hlt    
  0x00007f003f29e20f: hlt    
<nmethod compile_id='46' compiler='C1' level='1' entry='0x00007f003f29e100' size='736' address='0x00007f003f29df90' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/net/URL getHost ()Ljava/lang/String;' bytes='5' count='217' iicount='217' stamp='0.215'/>
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.meta.ResolvedJavaType from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.tabAt  [0x00007f003f29e400, 0x00007f003f29e790]  912 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f0038947f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rsi:rsi
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.HotSpotResolvedObjectType from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
                        = &apos;[Ljava/util/concurrent/ConcurrentHashMap$Node;&apos;
  # parm1:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x00007f003f29e400: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f29e407: push   rbp
  0x00007f003f29e408: sub    rsp,0x40
  0x00007f003f29e40c: movabs rcx,0x7f0038a56a90  ;   {metadata(method data for {method} {0x00007f0038947f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f29e416: mov    eax,DWORD PTR [rcx+0xfc]
  0x00007f003f29e41c: add    eax,0x8
  0x00007f003f29e41f: mov    DWORD PTR [rcx+0xfc],eax
  0x00007f003f29e425: movabs rcx,0x7f0038947f90  ;   {metadata({method} {0x00007f0038947f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f29e42f: and    eax,0x1ff8
  0x00007f003f29e435: cmp    eax,0x0
  0x00007f003f29e438: je     0x00007f003f29e6a5  ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0 (line 755)

  0x00007f003f29e43e: movsxd rdx,edx
  0x00007f003f29e441: mov    ecx,0x2
  0x00007f003f29e446: shl    rdx,cl
  0x00007f003f29e449: movabs r10,0x10
  0x00007f003f29e453: add    rdx,r10
  0x00007f003f29e456: mov    eax,DWORD PTR [rsi+rdx*1]
  0x00007f003f29e459: shl    rax,0x3
  0x00007f003f29e45d: cmp    rax,0x0
  0x00007f003f29e461: jne    0x00007f003f29e47c
  0x00007f003f29e463: movabs rdi,0x7f0038a56a90  ;   {metadata(method data for {method} {0x00007f0038947f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f29e46d: or     DWORD PTR [rdi+0x1c0],0x100
  0x00007f003f29e477: jmp    0x00007f003f29e699
  0x00007f003f29e47c: movabs rbx,0x7c0033a30    ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007f003f29e486: mov    edi,DWORD PTR [rax+0x8]
  0x00007f003f29e489: shl    rdi,0x3
  0x00007f003f29e48d: cmp    rbx,QWORD PTR [rdi+0x30]
  0x00007f003f29e491: jne    0x00007f003f29e67d
  0x00007f003f29e497: movabs rdi,0x7f0038a56a90  ;   {metadata(method data for {method} {0x00007f0038947f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f29e4a1: mov    ebx,DWORD PTR [rax+0x8]
  0x00007f003f29e4a4: shl    rbx,0x3
  0x00007f003f29e4a8: cmp    rbx,QWORD PTR [rdi+0x1d8]
  0x00007f003f29e4af: jne    0x00007f003f29e4be
  0x00007f003f29e4b1: add    QWORD PTR [rdi+0x1e0],0x1
  0x00007f003f29e4b9: jmp    0x00007f003f29e699
  0x00007f003f29e4be: cmp    rbx,QWORD PTR [rdi+0x1e8]
  0x00007f003f29e4c5: jne    0x00007f003f29e4d4
  0x00007f003f29e4c7: add    QWORD PTR [rdi+0x1f0],0x1
  0x00007f003f29e4cf: jmp    0x00007f003f29e699
  0x00007f003f29e4d4: cmp    rbx,QWORD PTR [rdi+0x1f8]
  0x00007f003f29e4db: jne    0x00007f003f29e4ea
  0x00007f003f29e4dd: add    QWORD PTR [rdi+0x200],0x1
  0x00007f003f29e4e5: jmp    0x00007f003f29e699
  0x00007f003f29e4ea: cmp    rbx,QWORD PTR [rdi+0x208]
  0x00007f003f29e4f1: jne    0x00007f003f29e500
  0x00007f003f29e4f3: add    QWORD PTR [rdi+0x210],0x1
  0x00007f003f29e4fb: jmp    0x00007f003f29e699
  0x00007f003f29e500: cmp    rbx,QWORD PTR [rdi+0x218]
  0x00007f003f29e507: jne    0x00007f003f29e516
  0x00007f003f29e509: add    QWORD PTR [rdi+0x220],0x1
  0x00007f003f29e511: jmp    0x00007f003f29e699
  0x00007f003f29e516: cmp    rbx,QWORD PTR [rdi+0x228]
  0x00007f003f29e51d: jne    0x00007f003f29e52c
  0x00007f003f29e51f: add    QWORD PTR [rdi+0x230],0x1
  0x00007f003f29e527: jmp    0x00007f003f29e699
  0x00007f003f29e52c: cmp    rbx,QWORD PTR [rdi+0x238]
  0x00007f003f29e533: jne    0x00007f003f29e542
  0x00007f003f29e535: add    QWORD PTR [rdi+0x240],0x1
  0x00007f003f29e53d: jmp    0x00007f003f29e699
  0x00007f003f29e542: cmp    rbx,QWORD PTR [rdi+0x248]
  0x00007f003f29e549: jne    0x00007f003f29e558
  0x00007f003f29e54b: add    QWORD PTR [rdi+0x250],0x1
  0x00007f003f29e553: jmp    0x00007f003f29e699
  0x00007f003f29e558: cmp    QWORD PTR [rdi+0x1d8],0x0
  0x00007f003f29e563: jne    0x00007f003f29e57c
  0x00007f003f29e565: mov    QWORD PTR [rdi+0x1d8],rbx
  0x00007f003f29e56c: mov    QWORD PTR [rdi+0x1e0],0x1
  0x00007f003f29e577: jmp    0x00007f003f29e699
  0x00007f003f29e57c: cmp    QWORD PTR [rdi+0x1e8],0x0
  0x00007f003f29e587: jne    0x00007f003f29e5a0
  0x00007f003f29e589: mov    QWORD PTR [rdi+0x1e8],rbx
  0x00007f003f29e590: mov    QWORD PTR [rdi+0x1f0],0x1
  0x00007f003f29e59b: jmp    0x00007f003f29e699
  0x00007f003f29e5a0: cmp    QWORD PTR [rdi+0x1f8],0x0
  0x00007f003f29e5ab: jne    0x00007f003f29e5c4
  0x00007f003f29e5ad: mov    QWORD PTR [rdi+0x1f8],rbx
  0x00007f003f29e5b4: mov    QWORD PTR [rdi+0x200],0x1
  0x00007f003f29e5bf: jmp    0x00007f003f29e699
  0x00007f003f29e5c4: cmp    QWORD PTR [rdi+0x208],0x0
  0x00007f003f29e5cf: jne    0x00007f003f29e5e8
  0x00007f003f29e5d1: mov    QWORD PTR [rdi+0x208],rbx
  0x00007f003f29e5d8: mov    QWORD PTR [rdi+0x210],0x1
  0x00007f003f29e5e3: jmp    0x00007f003f29e699
  0x00007f003f29e5e8: cmp    QWORD PTR [rdi+0x218],0x0
  0x00007f003f29e5f3: jne    0x00007f003f29e60c
  0x00007f003f29e5f5: mov    QWORD PTR [rdi+0x218],rbx
  0x00007f003f29e5fc: mov    QWORD PTR [rdi+0x220],0x1
  0x00007f003f29e607: jmp    0x00007f003f29e699
  0x00007f003f29e60c: cmp    QWORD PTR [rdi+0x228],0x0
  0x00007f003f29e617: jne    0x00007f003f29e630
  0x00007f003f29e619: mov    QWORD PTR [rdi+0x228],rbx
  0x00007f003f29e620: mov    QWORD PTR [rdi+0x230],0x1
  0x00007f003f29e62b: jmp    0x00007f003f29e699
  0x00007f003f29e630: cmp    QWORD PTR [rdi+0x238],0x0
  0x00007f003f29e63b: jne    0x00007f003f29e654
  0x00007f003f29e63d: mov    QWORD PTR [rdi+0x238],rbx
  0x00007f003f29e644: mov    QWORD PTR [rdi+0x240],0x1
  0x00007f003f29e64f: jmp    0x00007f003f29e699
  0x00007f003f29e654: cmp    QWORD PTR [rdi+0x248],0x0
  0x00007f003f29e65f: jne    0x00007f003f29e678
  0x00007f003f29e661: mov    QWORD PTR [rdi+0x248],rbx
  0x00007f003f29e668: mov    QWORD PTR [rdi+0x250],0x1
  0x00007f003f29e673: jmp    0x00007f003f29e699
  0x00007f003f29e678: jmp    0x00007f003f29e699
  0x00007f003f29e67d: movabs rdi,0x7f0038a56a90  ;   {metadata(method data for {method} {0x00007f0038947f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f29e687: sub    QWORD PTR [rdi+0x1c8],0x1
  0x00007f003f29e68f: jmp    0x00007f003f29e6bc
  0x00007f003f29e694: jmp    0x00007f003f29e699  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)

  0x00007f003f29e699: add    rsp,0x40
  0x00007f003f29e69d: pop    rbp
  0x00007f003f29e69e: test   DWORD PTR [rip+0x1b123a5c],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29e6a4: ret    
  0x00007f003f29e6a5: mov    QWORD PTR [rsp+0x8],rcx
  0x00007f003f29e6aa: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f29e6b2: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=695}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 755)
                                                ;   {runtime_call}
  0x00007f003f29e6b7: jmp    0x00007f003f29e43e
  0x00007f003f29e6bc: mov    QWORD PTR [rsp],rax
  0x00007f003f29e6c0: call   0x00007f003f27b2c0  ; OopMap{off=709}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ;   {runtime_call}
  0x00007f003f29e6c5: nop
  0x00007f003f29e6c6: nop
  0x00007f003f29e6c7: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f29e6ce: movabs r10,0x0
  0x00007f003f29e6d8: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f29e6df: movabs r10,0x0
  0x00007f003f29e6e9: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f29e6f0: add    rsp,0x40
  0x00007f003f29e6f4: pop    rbp
  0x00007f003f29e6f5: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f29e6fa: hlt    
  0x00007f003f29e6fb: hlt    
  0x00007f003f29e6fc: hlt    
  0x00007f003f29e6fd: hlt    
  0x00007f003f29e6fe: hlt    
  0x00007f003f29e6ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f29e700: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f29e705: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f29e70a: sub    rsp,0x80
  0x00007f003f29e711: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f29e716: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29e71b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f29e720: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f29e725: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f29e72a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f29e72f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f29e734: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f29e739: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f29e73e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f29e743: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f29e748: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f29e74d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f29e752: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f29e757: mov    QWORD PTR [rsp],r15
  0x00007f003f29e75b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f29e765: movabs rsi,0x7f003f29e705  ;   {internal_word}
  0x00007f003f29e76f: mov    rdx,rsp
  0x00007f003f29e772: and    rsp,0xfffffffffffffff0
  0x00007f003f29e776: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29e77b: hlt    
[Deopt Handler Code]
  0x00007f003f29e77c: movabs r10,0x7f003f29e77c  ;   {section_word}
  0x00007f003f29e786: push   r10
  0x00007f003f29e788: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f29e78d: hlt    
  0x00007f003f29e78e: hlt    
  0x00007f003f29e78f: hlt    
<nmethod compile_id='49' compiler='C1' level='3' entry='0x00007f003f29e400' size='1432' address='0x00007f003f29e290' relocation_offset='312' insts_offset='368' stub_offset='1136' scopes_data_offset='1288' scopes_pcs_offset='1328' dependencies_offset='1424' metadata_offset='1280' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='545' iicount='545' stamp='0.217'/>
----------------------------------------------------------------------
java/net/URL.getProtocol  [0x00007f003f29e9c0, 0x00007f003f29ead0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038805c18} &apos;getProtocol&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f29e9c0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f29e9c4: shl    r10,0x3
  0x00007f003f29e9c8: cmp    r10,rax
  0x00007f003f29e9cb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f29e9d1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f29e9dc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f29e9e0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f29e9e7: push   rbp
  0x00007f003f29e9e8: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getProtocol@0 (line 799)

  0x00007f003f29e9ec: mov    eax,DWORD PTR [rsi+0x14]
  0x00007f003f29e9ef: shl    rax,0x3            ;*getfield protocol {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getProtocol@1 (line 799)

  0x00007f003f29e9f3: add    rsp,0x30
  0x00007f003f29e9f7: pop    rbp
  0x00007f003f29e9f8: test   DWORD PTR [rip+0x1b123702],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29e9fe: ret    
  0x00007f003f29e9ff: nop
  0x00007f003f29ea00: nop
  0x00007f003f29ea01: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f29ea08: movabs r10,0x0
  0x00007f003f29ea12: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f29ea19: movabs r10,0x0
  0x00007f003f29ea23: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f29ea2a: add    rsp,0x30
  0x00007f003f29ea2e: pop    rbp
  0x00007f003f29ea2f: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f29ea34: hlt    
  0x00007f003f29ea35: hlt    
  0x00007f003f29ea36: hlt    
  0x00007f003f29ea37: hlt    
  0x00007f003f29ea38: hlt    
  0x00007f003f29ea39: hlt    
  0x00007f003f29ea3a: hlt    
  0x00007f003f29ea3b: hlt    
  0x00007f003f29ea3c: hlt    
  0x00007f003f29ea3d: hlt    
  0x00007f003f29ea3e: hlt    
  0x00007f003f29ea3f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f29ea40: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f29ea45: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f29ea4a: sub    rsp,0x80
  0x00007f003f29ea51: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f29ea56: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29ea5b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f29ea60: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f29ea65: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f29ea6a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f29ea6f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f29ea74: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f29ea79: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f29ea7e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f29ea83: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f29ea88: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f29ea8d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f29ea92: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f29ea97: mov    QWORD PTR [rsp],r15
  0x00007f003f29ea9b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f29eaa5: movabs rsi,0x7f003f29ea45  ;   {internal_word}
  0x00007f003f29eaaf: mov    rdx,rsp
  0x00007f003f29eab2: and    rsp,0xfffffffffffffff0
  0x00007f003f29eab6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29eabb: hlt    
[Deopt Handler Code]
  0x00007f003f29eabc: movabs r10,0x7f003f29eabc  ;   {section_word}
  0x00007f003f29eac6: push   r10
  0x00007f003f29eac8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f29eacd: hlt    
  0x00007f003f29eace: hlt    
  0x00007f003f29eacf: hlt    
<nmethod compile_id='42' compiler='C1' level='1' entry='0x00007f003f29e9c0' size='736' address='0x00007f003f29e850' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/net/URL getProtocol ()Ljava/lang/String;' bytes='5' count='219' iicount='219' stamp='0.217'/>
----------------------------------------------------------------------
java/net/URL.getPath  [0x00007f003f29ecc0, 0x00007f003f29edd0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00388058f0} &apos;getPath&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f29ecc0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f29ecc4: shl    r10,0x3
  0x00007f003f29ecc8: cmp    r10,rax
  0x00007f003f29eccb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f29ecd1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f29ecdc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f29ece0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f29ece7: push   rbp
  0x00007f003f29ece8: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getPath@0 (line 747)

  0x00007f003f29ecec: mov    eax,DWORD PTR [rsi+0x28]
  0x00007f003f29ecef: shl    rax,0x3            ;*getfield path {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getPath@1 (line 747)

  0x00007f003f29ecf3: add    rsp,0x30
  0x00007f003f29ecf7: pop    rbp
  0x00007f003f29ecf8: test   DWORD PTR [rip+0x1b123402],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29ecfe: ret    
  0x00007f003f29ecff: nop
  0x00007f003f29ed00: nop
  0x00007f003f29ed01: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f29ed08: movabs r10,0x0
  0x00007f003f29ed12: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f29ed19: movabs r10,0x0
  0x00007f003f29ed23: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f29ed2a: add    rsp,0x30
  0x00007f003f29ed2e: pop    rbp
  0x00007f003f29ed2f: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f29ed34: hlt    
  0x00007f003f29ed35: hlt    
  0x00007f003f29ed36: hlt    
  0x00007f003f29ed37: hlt    
  0x00007f003f29ed38: hlt    
  0x00007f003f29ed39: hlt    
  0x00007f003f29ed3a: hlt    
  0x00007f003f29ed3b: hlt    
  0x00007f003f29ed3c: hlt    
  0x00007f003f29ed3d: hlt    
  0x00007f003f29ed3e: hlt    
  0x00007f003f29ed3f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f29ed40: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f29ed45: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f29ed4a: sub    rsp,0x80
  0x00007f003f29ed51: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f29ed56: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29ed5b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f29ed60: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f29ed65: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f29ed6a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f29ed6f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f29ed74: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f29ed79: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f29ed7e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f29ed83: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f29ed88: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f29ed8d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f29ed92: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f29ed97: mov    QWORD PTR [rsp],r15
  0x00007f003f29ed9b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f29eda5: movabs rsi,0x7f003f29ed45  ;   {internal_word}
  0x00007f003f29edaf: mov    rdx,rsp
  0x00007f003f29edb2: and    rsp,0xfffffffffffffff0
  0x00007f003f29edb6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29edbb: hlt    
[Deopt Handler Code]
  0x00007f003f29edbc: movabs r10,0x7f003f29edbc  ;   {section_word}
  0x00007f003f29edc6: push   r10
  0x00007f003f29edc8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f29edcd: hlt    
  0x00007f003f29edce: hlt    
  0x00007f003f29edcf: hlt    
<nmethod compile_id='45' compiler='C1' level='1' entry='0x00007f003f29ecc0' size='736' address='0x00007f003f29eb50' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/net/URL getPath ()Ljava/lang/String;' bytes='5' count='182' iicount='182' stamp='0.218'/>
----------------------------------------------------------------------
java/net/URL.getAuthority  [0x00007f003f29efc0, 0x00007f003f29f0d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038805a30} &apos;getAuthority&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f29efc0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f29efc4: shl    r10,0x3
  0x00007f003f29efc8: cmp    r10,rax
  0x00007f003f29efcb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f29efd1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f29efdc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f29efe0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f29efe7: push   rbp
  0x00007f003f29efe8: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getAuthority@0 (line 768)

  0x00007f003f29efec: mov    eax,DWORD PTR [rsi+0x24]
  0x00007f003f29efef: shl    rax,0x3            ;*getfield authority {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getAuthority@1 (line 768)

  0x00007f003f29eff3: add    rsp,0x30
  0x00007f003f29eff7: pop    rbp
  0x00007f003f29eff8: test   DWORD PTR [rip+0x1b123102],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29effe: ret    
  0x00007f003f29efff: nop
  0x00007f003f29f000: nop
  0x00007f003f29f001: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f29f008: movabs r10,0x0
  0x00007f003f29f012: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f29f019: movabs r10,0x0
  0x00007f003f29f023: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f29f02a: add    rsp,0x30
  0x00007f003f29f02e: pop    rbp
  0x00007f003f29f02f: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f29f034: hlt    
  0x00007f003f29f035: hlt    
  0x00007f003f29f036: hlt    
  0x00007f003f29f037: hlt    
  0x00007f003f29f038: hlt    
  0x00007f003f29f039: hlt    
  0x00007f003f29f03a: hlt    
  0x00007f003f29f03b: hlt    
  0x00007f003f29f03c: hlt    
  0x00007f003f29f03d: hlt    
  0x00007f003f29f03e: hlt    
  0x00007f003f29f03f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f29f040: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f29f045: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f29f04a: sub    rsp,0x80
  0x00007f003f29f051: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f29f056: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29f05b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f29f060: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f29f065: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f29f06a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f29f06f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f29f074: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f29f079: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f29f07e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f29f083: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f29f088: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f29f08d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f29f092: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f29f097: mov    QWORD PTR [rsp],r15
  0x00007f003f29f09b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f29f0a5: movabs rsi,0x7f003f29f045  ;   {internal_word}
  0x00007f003f29f0af: mov    rdx,rsp
  0x00007f003f29f0b2: and    rsp,0xfffffffffffffff0
  0x00007f003f29f0b6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29f0bb: hlt    
[Deopt Handler Code]
  0x00007f003f29f0bc: movabs r10,0x7f003f29f0bc  ;   {section_word}
  0x00007f003f29f0c6: push   r10
  0x00007f003f29f0c8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f29f0cd: hlt    
  0x00007f003f29f0ce: hlt    
  0x00007f003f29f0cf: hlt    
<nmethod compile_id='47' compiler='C1' level='1' entry='0x00007f003f29efc0' size='736' address='0x00007f003f29ee50' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/net/URL getAuthority ()Ljava/lang/String;' bytes='5' count='174' iicount='174' stamp='0.218'/>
----------------------------------------------------------------------
java/net/URL.getRef  [0x00007f003f29f2c0, 0x00007f003f29f3d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038805df8} &apos;getRef&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f29f2c0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f29f2c4: shl    r10,0x3
  0x00007f003f29f2c8: cmp    r10,rax
  0x00007f003f29f2cb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f29f2d1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f29f2dc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f29f2e0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f29f2e7: push   rbp
  0x00007f003f29f2e8: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getRef@0 (line 837)

  0x00007f003f29f2ec: mov    eax,DWORD PTR [rsi+0x30]
  0x00007f003f29f2ef: shl    rax,0x3            ;*getfield ref {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getRef@1 (line 837)

  0x00007f003f29f2f3: add    rsp,0x30
  0x00007f003f29f2f7: pop    rbp
  0x00007f003f29f2f8: test   DWORD PTR [rip+0x1b122e02],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29f2fe: ret    
  0x00007f003f29f2ff: nop
  0x00007f003f29f300: nop
  0x00007f003f29f301: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f29f308: movabs r10,0x0
  0x00007f003f29f312: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f29f319: movabs r10,0x0
  0x00007f003f29f323: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f29f32a: add    rsp,0x30
  0x00007f003f29f32e: pop    rbp
  0x00007f003f29f32f: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f29f334: hlt    
  0x00007f003f29f335: hlt    
  0x00007f003f29f336: hlt    
  0x00007f003f29f337: hlt    
  0x00007f003f29f338: hlt    
  0x00007f003f29f339: hlt    
  0x00007f003f29f33a: hlt    
  0x00007f003f29f33b: hlt    
  0x00007f003f29f33c: hlt    
  0x00007f003f29f33d: hlt    
  0x00007f003f29f33e: hlt    
  0x00007f003f29f33f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f29f340: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f29f345: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f29f34a: sub    rsp,0x80
  0x00007f003f29f351: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f29f356: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29f35b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f29f360: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f29f365: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f29f36a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f29f36f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f29f374: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f29f379: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f29f37e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f29f383: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f29f388: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f29f38d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f29f392: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f29f397: mov    QWORD PTR [rsp],r15
  0x00007f003f29f39b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f29f3a5: movabs rsi,0x7f003f29f345  ;   {internal_word}
  0x00007f003f29f3af: mov    rdx,rsp
  0x00007f003f29f3b2: and    rsp,0xfffffffffffffff0
  0x00007f003f29f3b6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29f3bb: hlt    
[Deopt Handler Code]
  0x00007f003f29f3bc: movabs r10,0x7f003f29f3bc  ;   {section_word}
  0x00007f003f29f3c6: push   r10
  0x00007f003f29f3c8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f29f3cd: hlt    
  0x00007f003f29f3ce: hlt    
  0x00007f003f29f3cf: hlt    
<nmethod compile_id='48' compiler='C1' level='1' entry='0x00007f003f29f2c0' size='736' address='0x00007f003f29f150' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/net/URL getRef ()Ljava/lang/String;' bytes='5' count='140' iicount='140' stamp='0.219'/>
----------------------------------------------------------------------
java/net/URL.getFile  [0x00007f003f29f5c0, 0x00007f003f29f6d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038805d58} &apos;getFile&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f29f5c0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f29f5c4: shl    r10,0x3
  0x00007f003f29f5c8: cmp    r10,rax
  0x00007f003f29f5cb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f29f5d1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f29f5dc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f29f5e0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f29f5e7: push   rbp
  0x00007f003f29f5e8: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getFile@0 (line 826)

  0x00007f003f29f5ec: mov    eax,DWORD PTR [rsi+0x1c]
  0x00007f003f29f5ef: shl    rax,0x3            ;*getfield file {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getFile@1 (line 826)

  0x00007f003f29f5f3: add    rsp,0x30
  0x00007f003f29f5f7: pop    rbp
  0x00007f003f29f5f8: test   DWORD PTR [rip+0x1b122b02],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29f5fe: ret    
  0x00007f003f29f5ff: nop
  0x00007f003f29f600: nop
  0x00007f003f29f601: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f29f608: movabs r10,0x0
  0x00007f003f29f612: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f29f619: movabs r10,0x0
  0x00007f003f29f623: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f29f62a: add    rsp,0x30
  0x00007f003f29f62e: pop    rbp
  0x00007f003f29f62f: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f29f634: hlt    
  0x00007f003f29f635: hlt    
  0x00007f003f29f636: hlt    
  0x00007f003f29f637: hlt    
  0x00007f003f29f638: hlt    
  0x00007f003f29f639: hlt    
  0x00007f003f29f63a: hlt    
  0x00007f003f29f63b: hlt    
  0x00007f003f29f63c: hlt    
  0x00007f003f29f63d: hlt    
  0x00007f003f29f63e: hlt    
  0x00007f003f29f63f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f29f640: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f29f645: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f29f64a: sub    rsp,0x80
  0x00007f003f29f651: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f29f656: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29f65b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f29f660: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f29f665: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f29f66a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f29f66f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f29f674: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f29f679: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f29f67e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f29f683: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f29f688: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f29f68d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f29f692: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f29f697: mov    QWORD PTR [rsp],r15
  0x00007f003f29f69b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f29f6a5: movabs rsi,0x7f003f29f645  ;   {internal_word}
  0x00007f003f29f6af: mov    rdx,rsp
  0x00007f003f29f6b2: and    rsp,0xfffffffffffffff0
  0x00007f003f29f6b6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29f6bb: hlt    
[Deopt Handler Code]
  0x00007f003f29f6bc: movabs r10,0x7f003f29f6bc  ;   {section_word}
  0x00007f003f29f6c6: push   r10
  0x00007f003f29f6c8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f29f6cd: hlt    
  0x00007f003f29f6ce: hlt    
  0x00007f003f29f6cf: hlt    
<nmethod compile_id='50' compiler='C1' level='1' entry='0x00007f003f29f5c0' size='736' address='0x00007f003f29f450' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/net/URL getFile ()Ljava/lang/String;' bytes='5' count='138' iicount='138' stamp='0.220'/>
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.HotSpotJavaType from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/ArrayList.size  [0x00007f003f29f8c0, 0x00007f003f29f9d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038850190} &apos;size&apos; &apos;()I&apos; in &apos;java/util/ArrayList&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f29f8c0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f29f8c4: shl    r10,0x3
  0x00007f003f29f8c8: cmp    r10,rax
  0x00007f003f29f8cb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f29f8d1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f29f8dc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f29f8e0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f29f8e7: push   rbp
  0x00007f003f29f8e8: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::size@0 (line 278)

  0x00007f003f29f8ec: mov    eax,DWORD PTR [rsi+0x10]  ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::size@1 (line 278)

  0x00007f003f29f8ef: add    rsp,0x30
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.HotSpotResolvedJavaType from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>

  0x00007f003f29f8f3: pop    rbp
  0x00007f003f29f8f4: test   DWORD PTR [rip+0x1b122806],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29f8fa: ret    
  0x00007f003f29f8fb: nop
  0x00007f003f29f8fc: nop
  0x00007f003f29f8fd: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f29f904: movabs r10,0x0
  0x00007f003f29f90e: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f29f915: movabs r10,0x0
  0x00007f003f29f91f: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f29f926: add    rsp,0x30
  0x00007f003f29f92a: pop    rbp
  0x00007f003f29f92b: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f29f930: hlt    
  0x00007f003f29f931: hlt    
  0x00007f003f29f932: hlt    
  0x00007f003f29f933: hlt    
  0x00007f003f29f934: hlt    
  0x00007f003f29f935: hlt    
  0x00007f003f29f936: hlt    
  0x00007f003f29f937: hlt    
  0x00007f003f29f938: hlt    
  0x00007f003f29f939: hlt    
  0x00007f003f29f93a: hlt    
  0x00007f003f29f93b: hlt    
  0x00007f003f29f93c: hlt    
  0x00007f003f29f93d: hlt    
  0x00007f003f29f93e: hlt    
  0x00007f003f29f93f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f29f940: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f29f945: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f29f94a: sub    rsp,0x80
  0x00007f003f29f951: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f29f956: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29f95b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f29f960: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f29f965: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f29f96a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f29f96f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f29f974: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f29f979: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f29f97e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f29f983: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f29f988: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f29f98d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f29f992: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f29f997: mov    QWORD PTR [rsp],r15
  0x00007f003f29f99b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f29f9a5: movabs rsi,0x7f003f29f945  ;   {internal_word}
  0x00007f003f29f9af: mov    rdx,rsp
  0x00007f003f29f9b2: and    rsp,0xfffffffffffffff0
  0x00007f003f29f9b6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29f9bb: hlt    
[Deopt Handler Code]
  0x00007f003f29f9bc: movabs r10,0x7f003f29f9bc  ;   {section_word}
  0x00007f003f29f9c6: push   r10
  0x00007f003f29f9c8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f29f9cd: hlt    
  0x00007f003f29f9ce: hlt    
  0x00007f003f29f9cf: hlt    
<nmethod compile_id='44' compiler='C1' level='1' entry='0x00007f003f29f8c0' size='736' address='0x00007f003f29f750' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/util/ArrayList size ()I' bytes='5' count='233' iicount='233' stamp='0.220'/>
----------------------------------------------------------------------
java/lang/ThreadLocal.access$400  [0x00007f003f29fbc0, 0x00007f003f29fcb0]  240 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f003888a740} &apos;access$400&apos; 
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
&apos;(Ljava/lang/ThreadLocal;)I&apos; in &apos;java/lang/ThreadLocal&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/ThreadLocal&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f29fbc0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f29fbc7: push   rbp
  0x00007f003f29fbc8: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal::access$400@0 (line 74)

  0x00007f003f29fbcc: mov    eax,DWORD PTR [rsi+0xc]  ;*getfield threadLocalHashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal::access$400@1 (line 74)
                                                ; implicit exception: dispatches to 0x00007f003f29fbdb
  0x00007f003f29fbcf: add    rsp,0x30
  0x00007f003f29fbd3: pop    rbp
  0x00007f003f29fbd4: test   DWORD PTR [rip+0x1b122526],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29fbda: ret    
  0x00007f003f29fbdb: call   0x00007f003f279000  ; OopMap{off=32}
                                                ;*getfield threadLocalHashCode {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.ThreadLocal::access$400@1 (line 74)
                                                ;   {runtime_call}
  0x00007f003f29fbe0: nop
  0x00007f003f29fbe1: nop
  0x00007f003f29fbe2: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f29fbe9: movabs r10,0x0
  0x00007f003f29fbf3: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f29fbfa: movabs r10,0x0
  0x00007f003f29fc04: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f29fc0b: add    rsp,0x30
  0x00007f003f29fc0f: pop    rbp
  0x00007f003f29fc10: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f29fc15: hlt    
  0x00007f003f29fc16: hlt    
  0x00007f003f29fc17: hlt    
  0x00007f003f29fc18: hlt    
  0x00007f003f29fc19: hlt    
  0x00007f003f29fc1a: hlt    
  0x00007f003f29fc1b: hlt    
  0x00007f003f29fc1c: hlt    
  0x00007f003f29fc1d: hlt    
  0x00007f003f29fc1e: hlt    
  0x00007f003f29fc1f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f29fc20: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f29fc25: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f29fc2a: sub    rsp,0x80
  0x00007f003f29fc31: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f29fc36: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f29fc3b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f29fc40: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f29fc45: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f29fc4a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f29fc4f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f29fc54: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f29fc59: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f29fc5e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f29fc63: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f29fc68: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f29fc6d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f29fc72: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f29fc77: mov    QWORD PTR [rsp],r15
  0x00007f003f29fc7b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f29fc85: movabs rsi,0x7f003f29fc25  ;   {internal_word}
  0x00007f003f29fc8f: mov    rdx,rsp
  0x00007f003f29fc92: and    rsp,0xfffffffffffffff0
  0x00007f003f29fc96: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f29fc9b: hlt    
[Deopt Handler Code]
  0x00007f003f29fc9c: movabs r10,0x7f003f29fc9c  ;   {section_word}
  0x00007f003f29fca6: push   r10
  0x00007f003f29fca8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f29fcad: hlt    
  0x00007f003f29fcae: hlt    
  0x00007f003f29fcaf: hlt    
<nmethod compile_id='40' compiler='C1' level='1' entry='0x00007f003f29fbc0' size='744' address='0x00007f003f29fa50' relocation_offset='312' insts_offset='368' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='640' dependencies_offset='720' nul_chk_table_offset='728' metadata_offset='608' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='256' iicount='256' stamp='0.221'/>
<writer thread='139637818533632'/>
<task_queued compile_id='51' method='java/util/Vector size ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.221' comment='tiered' hot_count='128'/>
<task_queued compile_id='52' method='java/util/Arrays copyOf ([BI)[B' bytes='19' count='384' iicount='384' level='3' stamp='0.221' comment='tiered' hot_count='384'/>
<task_queued compile_id='53' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='384' backedge_count='885' iicount='384' level='3' stamp='0.221' comment='tiered' hot_count='384'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/Vector.size  [0x00007f003f29fec0, 0x00007f003f2a0130]  624 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038842000} &apos;size&apos; &apos;()I&apos; in &apos;java/util/Vector&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f003f29fec0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f29fec4: shl    r10,0x3
  0x00007f003f29fec8: cmp    r10,rax
  0x00007f003f29fecb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f29fed1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f29fedc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f29fee0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f29fee7: push   rbp
  0x00007f003f29fee8: sub    rsp,0x40
  0x00007f003f29feec: lea    rdi,[rsp+0x20]
  0x00007f003f29fef1: mov    QWORD PTR [rdi+0x8],rsi
  0x00007f003f29fef5: mov    rax,QWORD PTR [rsi]
  0x00007f003f29fef8: mov    rbx,rax
  0x00007f003f29fefb: and    rbx,0x7
  0x00007f003f29feff: cmp    rbx,0x5
  0x00007f003f29ff03: jne    0x00007f003f29ff8a
  0x00007f003f29ff09: mov    ebx,DWORD PTR [rsi+0x8]
  0x00007f003f29ff0c: shl    rbx,0x3
  0x00007f003f29ff10: mov    rbx,QWORD PTR [rbx+0xa8]
  0x00007f003f29ff17: or     rbx,r15
  0x00007f003f29ff1a: xor    rbx,rax
  0x00007f003f29ff1d: and    rbx,0xffffffffffffff87
  0x00007f003f29ff21: je     0x00007f003f29ffb2
  0x00007f003f29ff27: test   rbx,0x7
  0x00007f003f29ff2e: jne    0x00007f003f29ff77
  0x00007f003f29ff30: test   rbx,0x300
  0x00007f003f29ff37: jne    0x00007f003f29ff56
  0x00007f003f29ff39: and    rax,0x37f
  0x00007f003f29ff40: mov    rbx,rax
  0x00007f003f29ff43: or     rbx,r15
  0x00007f003f29ff46: lock cmpxchg QWORD PTR [rsi],rbx
  0x00007f003f29ff4b: jne    0x00007f003f29fff5
  0x00007f003f29ff51: jmp    0x00007f003f29ffb2
  0x00007f003f29ff56: mov    ebx,DWORD PTR [rsi+0x8]
  0x00007f003f29ff59: shl    rbx,0x3
  0x00007f003f29ff5d: mov    rbx,QWORD PTR [rbx+0xa8]
  0x00007f003f29ff64: or     rbx,r15
  0x00007f003f29ff67: lock cmpxchg QWORD PTR [rsi],rbx
  0x00007f003f29ff6c: jne    0x00007f003f29fff5
  0x00007f003f29ff72: jmp    0x00007f003f29ffb2
  0x00007f003f29ff77: mov    ebx,DWORD PTR [rsi+0x8]
  0x00007f003f29ff7a: shl    rbx,0x3
  0x00007f003f29ff7e: mov    rbx,QWORD PTR [rbx+0xa8]
  0x00007f003f29ff85: lock cmpxchg QWORD PTR [rsi],rbx
  0x00007f003f29ff8a: mov    rax,QWORD PTR [rsi]
  0x00007f003f29ff8d: or     rax,0x1
  0x00007f003f29ff91: mov    QWORD PTR [rdi],rax
  0x00007f003f29ff94: lock cmpxchg QWORD PTR [rsi],rdi
  0x00007f003f29ff99: je     0x00007f003f29ffb2
  0x00007f003f29ff9f: sub    rax,rsp
  0x00007f003f29ffa2: and    rax,0xfffffffffffff007
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.meta.Constant from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>

  0x00007f003f29ffa9: mov    QWORD PTR [rdi],rax
  0x00007f003f29ffac: jne    0x00007f003f29fff5  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Vector::size@0 (line 315)

  0x00007f003f29ffb2: mov    esi,DWORD PTR [rsi+0x10]  ;*getfield elementCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Vector::size@1 (line 315)

  0x00007f003f29ffb5: lea    rax,[rsp+0x20]
  0x00007f003f29ffba: mov    rbx,QWORD PTR [rax+0x8]
  0x00007f003f29ffbe: mov    rdi,QWORD PTR [rbx]
  0x00007f003f29ffc1: and    rdi,0x7
  0x00007f003f29ffc5: cmp    rdi,0x5
  0x00007f003f29ffc9: je     0x00007f003f29ffe6
  0x00007f003f29ffcf: mov    rdi,QWORD PTR [rax]
  0x00007f003f29ffd2: test   rdi,rdi
  0x00007f003f29ffd5: je     0x00007f003f29ffe6
  0x00007f003f29ffdb: lock cmpxchg QWORD PTR [rbx],rdi
  0x00007f003f29ffe0: jne    0x00007f003f2a0005  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Vector::size@4 (line 315)

  0x00007f003f29ffe6: mov    rax,rsi
  0x00007f003f29ffe9: add    rsp,0x40
  0x00007f003f29ffed: pop    rbp
  0x00007f003f29ffee: test   DWORD PTR [rip+0x1b12210c],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f29fff4: ret    
  0x00007f003f29fff5: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f29fffa: mov    QWORD PTR [rsp],rdi
  0x00007f003f29fffe: call   0x00007f003f27ba60  ; OopMap{rsi=Oop [40]=Oop off=323}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ;   {runtime_call}
  0x00007f003f2a0003: jmp    0x00007f003f29ffb2
  0x00007f003f2a0005: lea    rax,[rsp+0x20]
  0x00007f003f2a000a: mov    QWORD PTR [rsp],rax
  0x00007f003f2a000e: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2a0013: jmp    0x00007f003f29ffe6
  0x00007f003f2a0015: nop
  0x00007f003f2a0016: nop
  0x00007f003f2a0017: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a001e: movabs r10,0x0
  0x00007f003f2a0028: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a002f: movabs r10,0x0
  0x00007f003f2a0039: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a0040: mov    rbx,rax
  0x00007f003f2a0043: lea    rax,[rsp+0x20]
  0x00007f003f2a0048: mov    rsi,QWORD PTR [rax+0x8]
  0x00007f003f2a004c: mov    rdi,QWORD PTR [rsi]
  0x00007f003f2a004f: and    rdi,0x7
  0x00007f003f2a0053: cmp    rdi,0x5
  0x00007f003f2a0057: je     0x00007f003f2a0074
  0x00007f003f2a005d: mov    rdi,QWORD PTR [rax]
  0x00007f003f2a0060: test   rdi,rdi
  0x00007f003f2a0063: je     0x00007f003f2a0074
  0x00007f003f2a0069: lock cmpxchg QWORD PTR [rsi],rdi
  0x00007f003f2a006e: jne    0x00007f003f2a0081
  0x00007f003f2a0074: mov    rax,rbx
  0x00007f003f2a0077: add    rsp,0x40
  0x00007f003f2a007b: pop    rbp
  0x00007f003f2a007c: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a0081: lea    rax,[rsp+0x20]
  0x00007f003f2a0086: mov    QWORD PTR [rsp],rax
  0x00007f003f2a008a: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2a008f: jmp    0x00007f003f2a0074
  0x00007f003f2a0091: hlt    
  0x00007f003f2a0092: hlt    
  0x00007f003f2a0093: hlt    
  0x00007f003f2a0094: hlt    
  0x00007f003f2a0095: hlt    
  0x00007f003f2a0096: hlt    
  0x00007f003f2a0097: hlt    
  0x00007f003f2a0098: hlt    
  0x00007f003f2a0099: hlt    
  0x00007f003f2a009a: hlt    
  0x00007f003f2a009b: hlt    
  0x00007f003f2a009c: hlt    
  0x00007f003f2a009d: hlt    
  0x00007f003f2a009e: hlt    
  0x00007f003f2a009f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2a00a0: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2a00a5: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a00aa: sub    rsp,0x80
  0x00007f003f2a00b1: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a00b6: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a00bb: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a00c0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a00c5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a00ca: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a00cf: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a00d4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a00d9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a00de: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a00e3: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a00e8: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a00ed: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a00f2: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a00f7: mov    QWORD PTR [rsp],r15
  0x00007f003f2a00fb: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a0105: movabs rsi,0x7f003f2a00a5  ;   {internal_word}
  0x00007f003f2a010f: mov    rdx,rsp
  0x00007f003f2a0112: and    rsp,0xfffffffffffffff0
  0x00007f003f2a0116: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a011b: hlt    
[Deopt Handler Code]
  0x00007f003f2a011c: movabs r10,0x7f003f2a011c  ;   {section_word}
  0x00007f003f2a0126: push   r10
  0x00007f003f2a0128: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a012d: hlt    
  0x00007f003f2a012e: hlt    
  0x00007f003f2a012f: hlt    
<nmethod compile_id='51' compiler='C1' level='1' entry='0x00007f003f29fec0' size='1144' address='0x00007f003f29fd50' relocation_offset='312' insts_offset='368' stub_offset='848' scopes_data_offset='1000' scopes_pcs_offset='1040' dependencies_offset='1136' metadata_offset='992' method='java/util/Vector size ()I' bytes='5' count='130' iicount='130' stamp='0.237'/>
----------------------------------------------------------------------
java/lang/String.startsWith  [0x00007f003f2a03a0, 0x00007f003f2a06d0]  816 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003876bbd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2a03a0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2a03a4: shl    r10,0x3
  0x00007f003f2a03a8: cmp    r10,rax
  0x00007f003f2a03ab: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2a03b1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2a03bc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2a03c0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a03c7: push   rbp
  0x00007f003f2a03c8: sub    rsp,0x30
  0x00007f003f2a03cc: movabs rax,0x7f0038a56d38  ;   {metadata(method data for {method} {0x00007f003876bbd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a03d6: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f2a03dc: add    edi,0x8
  0x00007f003f2a03df: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f2a03e5: movabs rax,0x7f003876bbd0  ;   {metadata({method} {0x00007f003876bbd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a03ef: and    edi,0x1ff8
  0x00007f003f2a03f5: cmp    edi,0x0
  0x00007f003f2a03f8: je     0x00007f003f2a05ad  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x00007f003f2a03fe: mov    eax,DWORD PTR [rsi+0xc]
  0x00007f003f2a0401: shl    rax,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x00007f003f2a0405: mov    esi,DWORD PTR [rdx+0xc]  ; implicit exception: dispatches to 0x00007f003f2a05c4
  0x00007f003f2a0408: shl    rsi,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x00007f003f2a040c: mov    edi,DWORD PTR [rsi+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x00007f003f2a05c9
  0x00007f003f2a040f: cmp    ecx,0x0
  0x00007f003f2a0412: movabs rbx,0x7f0038a56d38  ;   {metadata(method data for {method} {0x00007f003876bbd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a041c: movabs rdx,0x130
  0x00007f003f2a0426: jl     0x00007f003f2a0436
  0x00007f003f2a042c: movabs rdx,0x140
  0x00007f003f2a0436: mov    r8,QWORD PTR [rbx+rdx*1]
  0x00007f003f2a043a: lea    r8,[r8+0x1]
  0x00007f003f2a043e: mov    QWORD PTR [rbx+rdx*1],r8
  0x00007f003f2a0442: jl     0x00007f003f2a057a  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x00007f003f2a0448: mov    ebx,DWORD PTR [rax+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x00007f003f2a05ce
  0x00007f003f2a044b: sub    ebx,edi
  0x00007f003f2a044d: cmp    ecx,ebx
  0x00007f003f2a044f: movabs rbx,0x7f0038a56d38  ;   {metadata(method data for {method} {0x00007f003876bbd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a0459: movabs rdx,0x150
  0x00007f003f2a0463: jle    0x00007f003f2a0473
  0x00007f003f2a0469: movabs rdx,0x160
  0x00007f003f2a0473: mov    r8,QWORD PTR [rbx+rdx*1]
  0x00007f003f2a0477: lea    r8,[r8+0x1]
  0x00007f003f2a047b: mov    QWORD PTR [rbx+rdx*1],r8
  0x00007f003f2a047f: jg     0x00007f003f2a057a  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x00007f003f2a0485: mov    ebx,0x0
  0x00007f003f2a048a: jmp    0x00007f003f2a053a  ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x00007f003f2a048f: nop
  0x00007f003f2a0490: mov    rdx,rcx
  0x00007f003f2a0493: inc    edx
  0x00007f003f2a0495: movsxd r8,ecx
  0x00007f003f2a0498: cmp    ecx,DWORD PTR [rax+0xc]
  0x00007f003f2a049b: jae    0x00007f003f2a05d3
  0x00007f003f2a04a1: movzx  ecx,WORD PTR [rax+r8*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x00007f003f2a04a7: mov    r8,rbx
  0x00007f003f2a04aa: inc    r8d
  0x00007f003f2a04ad: movsxd r9,ebx
  0x00007f003f2a04b0: cmp    ebx,DWORD PTR [rsi+0xc]
  0x00007f003f2a04b3: jae    0x00007f003f2a05dc
  0x00007f003f2a04b9: movzx  ebx,WORD PTR [rsi+r9*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x00007f003f2a04bf: movabs r9,0x7f0038a56d38  ;   {metadata(method data for {method} {0x00007f003876bbd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a04c9: mov    r11d,DWORD PTR [r9+0x100]
  0x00007f003f2a04d0: add    r11d,0x8
  0x00007f003f2a04d4: mov    DWORD PTR [r9+0x100],r11d
  0x00007f003f2a04db: movabs r9,0x7f003876bbd0  ;   {metadata({method} {0x00007f003876bbd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a04e5: and    r11d,0xfff8
  0x00007f003f2a04ec: cmp    r11d,0x0
  0x00007f003f2a04f0: je     0x00007f003f2a05e5  ; OopMap{rsi=Oop rax=Oop off=342}
                                                ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x00007f003f2a04f6: test   DWORD PTR [rip+0x1b121c04],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2a04fc: cmp    ecx,ebx
  0x00007f003f2a04fe: movabs rbx,0x7f0038a56d38  ;   {metadata(method data for {method} {0x00007f003876bbd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a0508: movabs rcx,0x190
  0x00007f003f2a0512: je     0x00007f003f2a0522
  0x00007f003f2a0518: movabs rcx,0x1a0
  0x00007f003f2a0522: mov    r9,QWORD PTR [rbx+rcx*1]
  0x00007f003f2a0526: lea    r9,[r9+0x1]
  0x00007f003f2a052a: mov    QWORD PTR [rbx+rcx*1],r9
  0x00007f003f2a052e: jne    0x00007f003f2a058b  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x00007f003f2a0534: mov    rbx,r8
  0x00007f003f2a0537: mov    rcx,rdx            ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x00007f003f2a053a: dec    edi
  0x00007f003f2a053c: cmp    edi,0x0
  0x00007f003f2a053f: movabs rdx,0x7f0038a56d38  ;   {metadata(method data for {method} {0x00007f003876bbd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a0549: movabs r8,0x170
  0x00007f003f2a0553: jl     0x00007f003f2a0563
  0x00007f003f2a0559: movabs r8,0x180
  0x00007f003f2a0563: mov    r9,QWORD PTR [rdx+r8*1]
  0x00007f003f2a0567: lea    r9,[r9+0x1]
  0x00007f003f2a056b: mov    QWORD PTR [rdx+r8*1],r9
  0x00007f003f2a056f: jl     0x00007f003f2a059c
  0x00007f003f2a0575: jmp    0x00007f003f2a0490  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x00007f003f2a057a: mov    eax,0x0
  0x00007f003f2a057f: add    rsp,0x30
  0x00007f003f2a0583: pop    rbp
  0x00007f003f2a0584: test   DWORD PTR [rip+0x1b121b76],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a058a: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x00007f003f2a058b: mov    eax,0x0
  0x00007f003f2a0590: add    rsp,0x30
  0x00007f003f2a0594: pop    rbp
  0x00007f003f2a0595: test   DWORD PTR [rip+0x1b121b65],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a059b: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x00007f003f2a059c: mov    eax,0x1
  0x00007f003f2a05a1: add    rsp,0x30
  0x00007f003f2a05a5: pop    rbp
  0x00007f003f2a05a6: test   DWORD PTR [rip+0x1b121b54],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a05ac: ret    
  0x00007f003f2a05ad: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2a05b2: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a05ba: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop off=543}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x00007f003f2a05bf: jmp    0x00007f003f2a03fe
  0x00007f003f2a05c4: call   0x00007f003f279000  ; OopMap{rax=Oop off=553}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x00007f003f2a05c9: call   0x00007f003f279000  ; OopMap{rax=Oop rsi=Oop off=558}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x00007f003f2a05ce: call   0x00007f003f279000  ; OopMap{rsi=Oop rax=Oop off=563}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x00007f003f2a05d3: mov    QWORD PTR [rsp],rcx
  0x00007f003f2a05d7: call   0x00007f003f278940  ; OopMap{rsi=Oop rax=Oop off=572}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x00007f003f2a05dc: mov    QWORD PTR [rsp],rbx
  0x00007f003f2a05e0: call   0x00007f003f278940  ; OopMap{rsi=Oop rax=Oop off=581}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x00007f003f2a05e5: mov    QWORD PTR [rsp+0x8],r9
  0x00007f003f2a05ea: mov    QWORD PTR [rsp],0x41
  0x00007f003f2a05f2: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rax=Oop off=599}
                                                ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x00007f003f2a05f7: jmp    0x00007f003f2a04f6
  0x00007f003f2a05fc: nop
  0x00007f003f2a05fd: nop
  0x00007f003f2a05fe: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a0605: movabs r10,0x0
  0x00007f003f2a060f: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a0616: movabs r10,0x0
  0x00007f003f2a0620: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a0627: add    rsp,0x30
  0x00007f003f2a062b: pop    rbp
  0x00007f003f2a062c: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a0631: hlt    
  0x00007f003f2a0632: hlt    
  0x00007f003f2a0633: hlt    
  0x00007f003f2a0634: hlt    
  0x00007f003f2a0635: hlt    
  0x00007f003f2a0636: hlt    
  0x00007f003f2a0637: hlt    
  0x00007f003f2a0638: hlt    
  0x00007f003f2a0639: hlt    
  0x00007f003f2a063a: hlt    
  0x00007f003f2a063b: hlt    
  0x00007f003f2a063c: hlt    
  0x00007f003f2a063d: hlt    
  0x00007f003f2a063e: hlt    
  0x00007f003f2a063f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2a0640: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2a0645: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a064a: sub    rsp,0x80
  0x00007f003f2a0651: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a0656: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a065b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a0660: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a0665: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a066a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a066f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a0674: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a0679: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a067e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a0683: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a0688: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a068d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a0692: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a0697: mov    QWORD PTR [rsp],r15
  0x00007f003f2a069b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a06a5: movabs rsi,0x7f003f2a0645  ;   {internal_word}
  0x00007f003f2a06af: mov    rdx,rsp
  0x00007f003f2a06b2: and    rsp,0xfffffffffffffff0
  0x00007f003f2a06b6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a06bb: hlt    
[Deopt Handler Code]
  0x00007f003f2a06bc: movabs r10,0x7f003f2a06bc  ;   {section_word}
  0x00007f003f2a06c6: push   r10
  0x00007f003f2a06c8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a06cd: hlt    
  0x00007f003f2a06ce: hlt    
  0x00007f003f2a06cf: hlt    
<nmethod compile_id='53' compiler='C1' level='3' entry='0x00007f003f2a03a0' size='1856' address='0x00007f003f2a0210' relocation_offset='312' insts_offset='400' stub_offset='1072' scopes_data_offset='1224' scopes_pcs_offset='1416' dependencies_offset='1816' nul_chk_table_offset='1824' metadata_offset='1216' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='406' backedge_count='892' iicount='406' stamp='0.239'/>
----------------------------------------------------------------------
java/util/Arrays.copyOf  [0x00007f003f2a0b20, 0x00007f003f2a0e48]  808 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f00388a3410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  # parm1:    rdx       = int
  #           [sp+0x70]  (sp of caller)
  0x00007f003f2a0b20: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a0b27: push   rbp
  0x00007f003f2a0b28: sub    rsp,0x60
  0x00007f003f2a0b2c: mov    r8,rsi
  0x00007f003f2a0b2f: mov    r9,rdx
  0x00007f003f2a0b32: movabs rbx,0x7f0038a56f28  ;   {metadata(method data for {method} {0x00007f00388a3410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f2a0b3c: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f2a0b42: add    edx,0x8
  0x00007f003f2a0b45: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f2a0b4b: movabs rbx,0x7f00388a3410  ;   {metadata({method} {0x00007f00388a3410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f2a0b55: and    edx,0x1ff8
  0x00007f003f2a0b5b: cmp    edx,0x0
  0x00007f003f2a0b5e: je     0x00007f003f2a0d0a  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@0 (line 3236)

  0x00007f003f2a0b64: mov    rbx,r9
  0x00007f003f2a0b67: movabs rdx,0x7c0000768    ;   {metadata({type array byte})}
  0x00007f003f2a0b71: movsxd rbx,ebx
  0x00007f003f2a0b74: mov    rdi,rbx
  0x00007f003f2a0b77: cmp    rbx,0xffffff
  0x00007f003f2a0b7e: ja     0x00007f003f2a0d21
  0x00007f003f2a0b84: movabs rsi,0x17
  0x00007f003f2a0b8e: lea    rsi,[rsi+rbx*1]
  0x00007f003f2a0b92: and    rsi,0xfffffffffffffff8
  0x00007f003f2a0b96: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2a0b9a: lea    rsi,[rax+rsi*1]
  0x00007f003f2a0b9e: cmp    rsi,QWORD PTR [r15+0x70]
  0x00007f003f2a0ba2: ja     0x00007f003f2a0d21
  0x00007f003f2a0ba8: mov    QWORD PTR [r15+0x60],rsi
  0x00007f003f2a0bac: sub    rsi,rax
  0x00007f003f2a0baf: mov    QWORD PTR [rax],0x1
  0x00007f003f2a0bb6: mov    rcx,rdx
  0x00007f003f2a0bb9: shr    rcx,0x3
  0x00007f003f2a0bbd: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2a0bc0: mov    DWORD PTR [rax+0xc],ebx
  0x00007f003f2a0bc3: sub    rsi,0x10
  0x00007f003f2a0bc7: je     0x00007f003f2a0bde
  0x00007f003f2a0bcd: xor    rbx,rbx
  0x00007f003f2a0bd0: shr    rsi,0x3
  0x00007f003f2a0bd4: mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x00007f003f2a0bd9: dec    rsi
  0x00007f003f2a0bdc: jne    0x00007f003f2a0bd4  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3236)

  0x00007f003f2a0bde: mov    esi,DWORD PTR [r8+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@9 (line 3237)
                                                ; implicit exception: dispatches to 0x00007f003f2a0d2b
  0x00007f003f2a0be2: movabs rdx,0x7f0038a56f28  ;   {metadata(method data for {method} {0x00007f00388a3410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f2a0bec: add    QWORD PTR [rdx+0x130],0x1
  0x00007f003f2a0bf4: movabs rdx,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2a0bfe: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2a0c04: add    ecx,0x8
  0x00007f003f2a0c07: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2a0c0d: movabs rdx,0x7f003887a8b8  ;   {metadata({method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2a0c17: and    ecx,0x7ffff8
  0x00007f003f2a0c1d: cmp    ecx,0x0
  0x00007f003f2a0c20: je     0x00007f003f2a0d30
  0x00007f003f2a0c26: cmp    esi,r9d
  0x00007f003f2a0c29: movabs rdx,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2a0c33: movabs rcx,0x130
  0x00007f003f2a0c3d: jg     0x00007f003f2a0c4d
  0x00007f003f2a0c43: movabs rcx,0x140
  0x00007f003f2a0c4d: mov    rdi,QWORD PTR [rdx+rcx*1]
  0x00007f003f2a0c51: lea    rdi,[rdi+0x1]
  0x00007f003f2a0c55: mov    QWORD PTR [rdx+rcx*1],rdi
  0x00007f003f2a0c59: jg     0x00007f003f2a0c72  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)

  0x00007f003f2a0c5f: movabs rdx,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2a0c69: inc    DWORD PTR [rdx+0x150]
  0x00007f003f2a0c6f: mov    r9,rsi             ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)

  0x00007f003f2a0c72: movabs rsi,0x7f0038a56f28  ;   {metadata(method data for {method} {0x00007f00388a3410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f2a0c7c: add    QWORD PTR [rsi+0x140],0x1
  0x00007f003f2a0c84: mov    rsi,r8
  0x00007f003f2a0c87: mov    edx,0x0
  0x00007f003f2a0c8c: mov    rcx,rax
  0x00007f003f2a0c8f: mov    r8d,0x0
  0x00007f003f2a0c95: mov    QWORD PTR [rsp+0x50],rax
  0x00007f003f2a0c9a: lea    rdi,[rdx+r9*1]
  0x00007f003f2a0c9e: cmp    edi,DWORD PTR [rsi+0xc]
  0x00007f003f2a0ca1: ja     0x00007f003f2a0d47
  0x00007f003f2a0ca7: lea    rdi,[r8+r9*1]
  0x00007f003f2a0cab: cmp    edi,DWORD PTR [rcx+0xc]
  0x00007f003f2a0cae: ja     0x00007f003f2a0d47
  0x00007f003f2a0cb4: test   r9d,r9d
  0x00007f003f2a0cb7: jl     0x00007f003f2a0d47
  0x00007f003f2a0cbd: je     0x00007f003f2a0cf9
  0x00007f003f2a0cc3: movsxd rdx,edx
  0x00007f003f2a0cc6: movsxd r8,r8d
  0x00007f003f2a0cc9: lea    rdi,[rsi+rdx*1+0x10]
  0x00007f003f2a0cce: lea    rsi,[rcx+r8*1+0x10]
  0x00007f003f2a0cd3: mov    rdx,r9
  0x00007f003f2a0cd6: test   esp,0xf
  0x00007f003f2a0cdc: je     0x00007f003f2a0cf4
  0x00007f003f2a0ce2: sub    rsp,0x8
  0x00007f003f2a0ce6: call   Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007f003f2a0ceb: add    rsp,0x8
  0x00007f003f2a0cef: jmp    0x00007f003f2a0cf9
  0x00007f003f2a0cf4: call   Stub::jbyte_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ;   {runtime_call}
  0x00007f003f2a0cf9: mov    rax,QWORD PTR [rsp+0x50]
  0x00007f003f2a0cfe: add    rsp,0x60
  0x00007f003f2a0d02: pop    rbp
  0x00007f003f2a0d03: test   DWORD PTR [rip+0x1b1213f7],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a0d09: ret    
  0x00007f003f2a0d0a: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2a0d0f: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a0d17: call   0x00007f003f27d5e0  ; OopMap{r8=Oop off=508}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3236)
                                                ;   {runtime_call}
  0x00007f003f2a0d1c: jmp    0x00007f003f2a0b64
  0x00007f003f2a0d21: call   0x00007f003f27a020  ; OopMap{r8=Oop off=518}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3236)
                                                ;   {runtime_call}
  0x00007f003f2a0d26: jmp    0x00007f003f2a0bde
  0x00007f003f2a0d2b: call   0x00007f003f279000  ; OopMap{r8=Oop rax=Oop off=528}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@9 (line 3237)
                                                ;   {runtime_call}
  0x00007f003f2a0d30: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2a0d35: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a0d3d: call   0x00007f003f27d5e0  ; OopMap{r8=Oop rax=Oop off=546}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ;   {runtime_call}
  0x00007f003f2a0d42: jmp    0x00007f003f2a0c26
  0x00007f003f2a0d47: call   0x00007f003f1c5160  ; OopMap{[80]=Oop off=556}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ;   {static_call}
  0x00007f003f2a0d4c: jmp    0x00007f003f2a0cf9
  0x00007f003f2a0d4e: nop
  0x00007f003f2a0d4f: nop
  0x00007f003f2a0d50: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a0d57: movabs r10,0x0
  0x00007f003f2a0d61: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a0d68: movabs r10,0x0
  0x00007f003f2a0d72: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a0d79: add    rsp,0x60
  0x00007f003f2a0d7d: pop    rbp
  0x00007f003f2a0d7e: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a0d83: hlt    
  0x00007f003f2a0d84: hlt    
  0x00007f003f2a0d85: hlt    
  0x00007f003f2a0d86: hlt    
  0x00007f003f2a0d87: hlt    
  0x00007f003f2a0d88: hlt    
  0x00007f003f2a0d89: hlt    
  0x00007f003f2a0d8a: hlt    
  0x00007f003f2a0d8b: hlt    
  0x00007f003f2a0d8c: hlt    
  0x00007f003f2a0d8d: hlt    
  0x00007f003f2a0d8e: hlt    
  0x00007f003f2a0d8f: hlt    
  0x00007f003f2a0d90: hlt    
  0x00007f003f2a0d91: hlt    
  0x00007f003f2a0d92: hlt    
  0x00007f003f2a0d93: hlt    
  0x00007f003f2a0d94: hlt    
  0x00007f003f2a0d95: hlt    
  0x00007f003f2a0d96: hlt    
  0x00007f003f2a0d97: hlt    
  0x00007f003f2a0d98: hlt    
  0x00007f003f2a0d99: hlt    
  0x00007f003f2a0d9a: hlt    
  0x00007f003f2a0d9b: hlt    
  0x00007f003f2a0d9c: hlt    
  0x00007f003f2a0d9d: hlt    
  0x00007f003f2a0d9e: hlt    
  0x00007f003f2a0d9f: hlt    
[Stub Code]
  0x00007f003f2a0da0: nop                       ;   {no_reloc}
  0x00007f003f2a0da1: nop
  0x00007f003f2a0da2: nop
  0x00007f003f2a0da3: nop
  0x00007f003f2a0da4: nop
  0x00007f003f2a0da5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2a0daf: jmp    0x00007f003f2a0daf  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2a0db4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2a0db9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a0dbe: sub    rsp,0x80
  0x00007f003f2a0dc5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a0dca: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a0dcf: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a0dd4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a0dd9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a0dde: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a0de3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a0de8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a0ded: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a0df2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a0df7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a0dfc: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a0e01: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a0e06: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a0e0b: mov    QWORD PTR [rsp],r15
  0x00007f003f2a0e0f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a0e19: movabs rsi,0x7f003f2a0db9  ;   {internal_word}
  0x00007f003f2a0e23: mov    rdx,rsp
  0x00007f003f2a0e26: and    rsp,0xfffffffffffffff0
  0x00007f003f2a0e2a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a0e2f: hlt    
[Deopt Handler Code]
  0x00007f003f2a0e30: movabs r10,0x7f003f2a0e30  ;   {section_word}
  0x00007f003f2a0e3a: push   r10
  0x00007f003f2a0e3c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a0e41: hlt    
  0x00007f003f2a0e42: hlt    
  0x00007f003f2a0e43: hlt    
  0x00007f003f2a0e44: hlt    
  0x00007f003f2a0e45: hlt    
  0x00007f003f2a0e46: hlt    
  0x00007f003f2a0e47: hlt    
<nmethod compile_id='52' compiler='C1' level='3' entry='0x00007f003f2a0b20' size='1584' address='0x00007f003f2a0990' relocation_offset='312' insts_offset='400' stub_offset='1040' scopes_data_offset='1224' scopes_pcs_offset='1352' dependencies_offset='1560' nul_chk_table_offset='1568' metadata_offset='1208' method='java/util/Arrays copyOf ([BI)[B' bytes='19' count='414' iicount='414' stamp='0.241'/>
<writer thread='139637818533632'/>
----------------------------------------------------------------------
java/lang/System.nanoTime  [0x00007f003f2a1160, 0x00007f003f2a1340]  480 bytes
[Entry Point]
  # {method} {0x00007f00387836b8} &apos;nanoTime&apos; &apos;()J&apos; in &apos;java/lang/System&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2a1160: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2a1164: shl    r10,0x3
  0x00007f003f2a1168: cmp    rax,r10
  0x00007f003f2a116b: je     0x00007f003f2a1178
  0x00007f003f2a1171: jmp    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2a1176: xchg   ax,ax
[Verified Entry Point]
  0x00007f003f2a1178: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a117f: push   rbp
  0x00007f003f2a1180: mov    rbp,rsp
  0x00007f003f2a1183: sub    rsp,0x40
  0x00007f003f2a1187: movabs r14,0x670b80c78    ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007f003f2a1191: mov    QWORD PTR [rsp+0x30],r14
  0x00007f003f2a1196: lea    r14,[rsp+0x30]
  0x00007f003f2a119b: mov    rsi,r14            ; OopMap{[48]=Oop off=62}
  0x00007f003f2a119e: movabs r10,0x7f003f2a119e  ;   {section_word}
  0x00007f003f2a11a8: mov    QWORD PTR [r15+0x1c8],r10
  0x00007f003f2a11af: mov    QWORD PTR [r15+0x1c0],rsp
  0x00007f003f2a11b6: cmp    BYTE PTR [rip+0x1a2b3817],0x0        # 0x00007f00595549d4
                                                ;   {external_word}
  0x00007f003f2a11bd: je     0x00007f003f2a11f5
  0x00007f003f2a11c3: push   rsi
  0x00007f003f2a11c4: movabs rsi,0x7f00387836b8  ;   {metadata({method} {0x00007f00387836b8} &apos;nanoTime&apos; &apos;()J&apos; in &apos;java/lang/System&apos;)}
  0x00007f003f2a11ce: mov    rdi,r15
  0x00007f003f2a11d1: test   esp,0xf
  0x00007f003f2a11d7: je     0x00007f003f2a11ef
  0x00007f003f2a11dd: sub    rsp,0x8
  0x00007f003f2a11e1: call   0x00007f0058f49f20  ;   {runtime_call}
  0x00007f003f2a11e6: add    rsp,0x8
  0x00007f003f2a11ea: jmp    0x00007f003f2a11f4
  0x00007f003f2a11ef: call   0x00007f0058f49f20  ;   {runtime_call}
  0x00007f003f2a11f4: pop    rsi
  0x00007f003f2a11f5: lea    rdi,[r15+0x1e0]
  0x00007f003f2a11fc: mov    DWORD PTR [r15+0x258],0x4
  0x00007f003f2a1207: call   0x00007f0058c57a90  ;   {runtime_call}
  0x00007f003f2a120c: vzeroupper 
  0x00007f003f2a120f: mov    DWORD PTR [r15+0x258],0x5
  0x00007f003f2a121a: mov    ecx,r15d
  0x00007f003f2a121d: shr    ecx,0x4
  0x00007f003f2a1220: and    ecx,0xffc
  0x00007f003f2a1226: movabs r10,0x7f005a3c1000  ;   {external_word}
  0x00007f003f2a1230: mov    DWORD PTR [r10+rcx*1],ecx
  0x00007f003f2a1234: cmp    DWORD PTR [rip+0x1a2be77e],0x0        # 0x00007f005955f9bc
                                                ;   {external_word}
  0x00007f003f2a123e: jne    0x00007f003f2a1252
  0x00007f003f2a1244: cmp    DWORD PTR [r15+0x30],0x0
  0x00007f003f2a124c: je     0x00007f003f2a1273
  0x00007f003f2a1252: mov    QWORD PTR [rbp-0x8],rax
  0x00007f003f2a1256: mov    rdi,r15
  0x00007f003f2a1259: mov    r12,rsp
  0x00007f003f2a125c: sub    rsp,0x0
  0x00007f003f2a1260: and    rsp,0xfffffffffffffff0
  0x00007f003f2a1264: call   0x00007f0058fefce0  ;   {runtime_call}
  0x00007f003f2a1269: mov    rsp,r12
  0x00007f003f2a126c: xor    r12,r12
  0x00007f003f2a126f: mov    rax,QWORD PTR [rbp-0x8]
  0x00007f003f2a1273: mov    DWORD PTR [r15+0x258],0x8
  0x00007f003f2a127e: cmp    DWORD PTR [r15+0x2b0],0x1
  0x00007f003f2a1289: je     0x00007f003f2a1319
  0x00007f003f2a128f: cmp    BYTE PTR [rip+0x1a2b373e],0x0        # 0x00007f00595549d4
                                                ;   {external_word}
  0x00007f003f2a1296: je     0x00007f003f2a12d4
  0x00007f003f2a129c: mov    QWORD PTR [rbp-0x8],rax
  0x00007f003f2a12a0: movabs rsi,0x7f00387836b8  ;   {metadata({method} {0x00007f00387836b8} &apos;nanoTime&apos; &apos;()J&apos; in &apos;java/lang/System&apos;)}
  0x00007f003f2a12aa: mov    rdi,r15
  0x00007f003f2a12ad: test   esp,0xf
  0x00007f003f2a12b3: je     0x00007f003f2a12cb
  0x00007f003f2a12b9: sub    rsp,0x8
  0x00007f003f2a12bd: call   0x00007f0058f49f30  ;   {runtime_call}
  0x00007f003f2a12c2: add    rsp,0x8
  0x00007f003f2a12c6: jmp    0x00007f003f2a12d0
  0x00007f003f2a12cb: call   0x00007f0058f49f30  ;   {runtime_call}
  0x00007f003f2a12d0: mov    rax,QWORD PTR [rbp-0x8]
  0x00007f003f2a12d4: movabs r10,0x0
  0x00007f003f2a12de: mov    QWORD PTR [r15+0x1c0],r10
  0x00007f003f2a12e5: movabs r10,0x0
  0x00007f003f2a12ef: mov    QWORD PTR [r15+0x1c8],r10
  0x00007f003f2a12f6: mov    rcx,QWORD PTR [r15+0x38]
  0x00007f003f2a12fa: mov    DWORD PTR [rcx+0x100],0x0
  0x00007f003f2a1304: leave  
  0x00007f003f2a1305: cmp    QWORD PTR [r15+0x8],0x0
  0x00007f003f2a130d: jne    0x00007f003f2a1314
  0x00007f003f2a1313: ret    
  0x00007f003f2a1314: jmp    Stub::forward exception  ;   {runtime_call}
  0x00007f003f2a1319: mov    QWORD PTR [rbp-0x8],rax
  0x00007f003f2a131d: mov    r12,rsp
  0x00007f003f2a1320: sub    rsp,0x0
  0x00007f003f2a1324: and    rsp,0xfffffffffffffff0
  0x00007f003f2a1328: call   0x00007f0058f521e0  ;   {runtime_call}
  0x00007f003f2a132d: mov    rsp,r12
  0x00007f003f2a1330: xor    r12,r12
  0x00007f003f2a1333: mov    rax,QWORD PTR [rbp-0x8]
  0x00007f003f2a1337: jmp    0x00007f003f2a128f
  0x00007f003f2a133c: hlt    
  0x00007f003f2a133d: hlt    
  0x00007f003f2a133e: hlt    
  0x00007f003f2a133f: hlt    
<nmethod compile_id='54' compile_kind='c2n' level='0' entry='0x00007f003f2a1160' size='880' address='0x00007f003f2a0fd0' relocation_offset='312' consts_offset='880' insts_offset='400' method='java/lang/System nanoTime ()J' bytes='0' count='256' iicount='256' stamp='0.244'/>
[Loaded jdk.vm.ci.meta.JavaValue from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<task_queued compile_id='55' method='java/nio/Buffer checkIndex (I)I' bytes='22' count='256' iicount='256' level='3' stamp='0.244' comment='tiered' hot_count='256'/>
<task_queued compile_id='56' method='java/nio/DirectLongBufferU ix (I)J' bytes='10' count='256' iicount='256' level='3' stamp='0.244' comment='tiered' hot_count='256'/>
[Loaded jdk.vm.ci.meta.JavaConstant from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotConstant from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotCompressedNullConstant from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='57' method='java/security/ProtectionDomain getCodeSource ()Ljava/security/CodeSource;' bytes='5' count='128' iicount='128' level='1' stamp='0.245' comment='tiered' hot_count='128'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/nio/Buffer.checkIndex  [0x00007f003f2a14e0, 0x00007f003f2a1768]  648 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038810978} &apos;checkIndex&apos; &apos;(I)I&apos; in &apos;java/nio/Buffer&apos;
  # this:     rsi:rsi   = &apos;java/nio/Buffer&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2a14e0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2a14e4: shl    r10,0x3
  0x00007f003f2a14e8: cmp    r10,rax
  0x00007f003f2a14eb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2a14f1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2a14fc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2a1500: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a1507: push   rbp
  0x00007f003f2a1508: sub    rsp,0x30
  0x00007f003f2a150c: movabs rax,0x7f0038a570c0  ;   {metadata(method data for {method} {0x00007f0038810978} &apos;checkIndex&apos; &apos;(I)I&apos; in &apos;java/nio/Buffer&apos;)}
  0x00007f003f2a1516: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f2a151c: add    edi,0x8
  0x00007f003f2a151f: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f2a1525: movabs rax,0x7f0038810978  ;   {metadata({method} {0x00007f0038810978} &apos;checkIndex&apos; &apos;(I)I&apos; in &apos;java/nio/Buffer&apos;)}
  0x00007f003f2a152f: and    edi,0x1ff8
  0x00007f003f2a1535: cmp    edi,0x0
  0x00007f003f2a1538: je     0x00007f003f2a1646  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@0 (line 539)

  0x00007f003f2a153e: cmp    edx,0x0
  0x00007f003f2a1541: movabs rax,0x7f0038a570c0  ;   {metadata(method data for {method} {0x00007f0038810978} &apos;checkIndex&apos; &apos;(I)I&apos; in &apos;java/nio/Buffer&apos;)}
  0x00007f003f2a154b: movabs rdi,0x130
  0x00007f003f2a1555: jl     0x00007f003f2a1565
  0x00007f003f2a155b: movabs rdi,0x140
  0x00007f003f2a1565: mov    rcx,QWORD PTR [rax+rdi*1]
  0x00007f003f2a1569: lea    rcx,[rcx+0x1]
  0x00007f003f2a156d: mov    QWORD PTR [rax+rdi*1],rcx
  0x00007f003f2a1571: jl     0x00007f003f2a15c1  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@1 (line 539)

  0x00007f003f2a1577: mov    eax,DWORD PTR [rsi+0x1c]  ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@6 (line 539)

  0x00007f003f2a157a: cmp    edx,eax
  0x00007f003f2a157c: movabs rax,0x7f0038a570c0  ;   {metadata(method data for {method} {0x00007f0038810978} &apos;checkIndex&apos; &apos;(I)I&apos; in &apos;java/nio/Buffer&apos;)}
  0x00007f003f2a1586: movabs rsi,0x150
  0x00007f003f2a1590: jl     0x00007f003f2a15a0
  0x00007f003f2a1596: movabs rsi,0x160
  0x00007f003f2a15a0: mov    rdi,QWORD PTR [rax+rsi*1]
  0x00007f003f2a15a4: lea    rdi,[rdi+0x1]
  0x00007f003f2a15a8: mov    QWORD PTR [rax+rsi*1],rdi
  0x00007f003f2a15ac: jge    0x00007f003f2a15c1  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@9 (line 539)

  0x00007f003f2a15b2: mov    rax,rdx
  0x00007f003f2a15b5: add    rsp,0x30
  0x00007f003f2a15b9: pop    rbp
  0x00007f003f2a15ba: test   DWORD PTR [rip+0x1b120b40],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a15c0: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@21 (line 541)

  0x00007f003f2a15c1: nop    DWORD PTR [rax+0x0]
  0x00007f003f2a15c8: jmp    0x00007f003f2a166c  ;   {no_reloc}
  0x00007f003f2a15cd: add    BYTE PTR [rax],al
  0x00007f003f2a15cf: add    BYTE PTR [rax],al
  0x00007f003f2a15d1: add    BYTE PTR [rax+0x162ba],al
  0x00007f003f2a15d7: add    BYTE PTR [rdi+rcx*1],al
  0x00007f003f2a15da: test   DWORD PTR [rax+rax*1-0x74b70000],ebx
  0x00007f003f2a15e1: rex.RXB (bad) 
  0x00007f003f2a15e3: lea    rdi,[rax+0x20]
  0x00007f003f2a15e7: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2a15eb: 
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.meta.VMConstant from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
ja     0x00007f003f2a167b
  0x00007f003f2a15f1: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2a15f5: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2a15fc: mov    QWORD PTR [rax],rcx
  0x00007f003f2a15ff: mov    rcx,rdx
  0x00007f003f2a1602: shr    rcx,0x3
  0x00007f003f2a1606: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2a1609: xor    rcx,rcx
  0x00007f003f2a160c: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2a160f: xor    rcx,rcx
  0x00007f003f2a1612: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f2a1616: mov    QWORD PTR [rax+0x18],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@12 (line 540)

  0x00007f003f2a161a: mov    rsi,rax
  0x00007f003f2a161d: movabs rdi,0x7f0038a570c0  ;   {metadata(method data for {method} {0x00007f0038810978} &apos;checkIndex&apos; &apos;(I)I&apos; in &apos;java/nio/Buffer&apos;)}
  0x00007f003f2a1627: add    QWORD PTR [rdi+0x170],0x1
  0x00007f003f2a162f: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@16 (line 540)

  0x00007f003f2a1632: mov    QWORD PTR [rsp+0x20],rax
  0x00007f003f2a1637: call   0x00007f003f1c4d60  ; OopMap{[32]=Oop off=348}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@16 (line 540)
                                                ;   {optimized virtual_call}
  0x00007f003f2a163c: mov    rax,QWORD PTR [rsp+0x20]
  0x00007f003f2a1641: jmp    0x00007f003f2a16b0
  0x00007f003f2a1646: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2a164b: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a1653: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=376}
                                                ;*synchronization entry
                                                ; - java.nio.Buffer::checkIndex@-1 (line 539)
                                                ;   {runtime_call}
  0x00007f003f2a1658: jmp    0x00007f003f2a153e
  0x00007f003f2a165d: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2a1667: mov    eax,0xa050f00
  0x00007f003f2a166c: call   0x00007f003f27c5e0  ; OopMap{off=401}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@12 (line 540)
                                                ;   {runtime_call}
  0x00007f003f2a1671: jmp    0x00007f003f2a15c8
  0x00007f003f2a1676: call   0x00007f003f279000  ; OopMap{off=411}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@12 (line 540)
                                                ;   {runtime_call}
  0x00007f003f2a167b: mov    rdx,rdx
  0x00007f003f2a167e: call   0x00007f003f279ba0  ; OopMap{off=419}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::checkIndex@12 (line 540)
                                                ;   {runtime_call}
  0x00007f003f2a1683: jmp    0x00007f003f2a161a
  0x00007f003f2a1685: nop
  0x00007f003f2a1686: nop
  0x00007f003f2a1687: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a168e: movabs r10,0x0
  0x00007f003f2a1698: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a169f: movabs r10,0x0
  0x00007f003f2a16a9: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a16b0: add    rsp,0x30
  0x00007f003f2a16b4: pop    rbp
  0x00007f003f2a16b5: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a16ba: hlt    
  0x00007f003f2a16bb: hlt    
  0x00007f003f2a16bc: hlt    
  0x00007f003f2a16bd: hlt    
  0x00007f003f2a16be: hlt    
  0x00007f003f2a16bf: hlt    
[Stub Code]
  0x00007f003f2a16c0: nop                       ;   {no_reloc}
  0x00007f003f2a16c1: nop
  0x00007f003f2a16c2: nop
  0x00007f003f2a16c3: nop
  0x00007f003f2a16c4: nop
  0x00007f003f2a16c5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2a16cf: jmp    0x00007f003f2a16cf  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2a16d4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2a16d9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a16de: sub    rsp,0x80
  0x00007f003f2a16e5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a16ea: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a16ef: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a16f4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a16f9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a16fe: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a1703: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a1708: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a170d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a1712: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a1717: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a171c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a1721: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a1726: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a172b: mov    QWORD PTR [rsp],r15
  0x00007f003f2a172f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a1739: movabs rsi,0x7f003f2a16d9  ;   {internal_word}
  0x00007f003f2a1743: mov    rdx,rsp
  0x00007f003f2a1746: and    rsp,0xfffffffffffffff0
  0x00007f003f2a174a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a174f: hlt    
[Deopt Handler Code]
  0x00007f003f2a1750: movabs r10,0x7f003f2a1750  ;   {section_word}
  0x00007f003f2a175a: push   r10
  0x00007f003f2a175c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a1761: hlt    
  0x00007f003f2a1762: hlt    
  0x00007f003f2a1763: hlt    
  0x00007f003f2a1764: hlt    
  0x00007f003f2a1765: hlt    
  0x00007f003f2a1766: hlt    
  0x00007f003f2a1767: hlt    
<nmethod compile_id='55' compiler='C1' level='3' entry='0x00007f003f2a14e0' size='1384' address='0x00007f003f2a1350' relocation_offset='312' insts_offset='400' stub_offset='880' scopes_data_offset='1056' scopes_pcs_offset='1136' dependencies_offset='1360' nul_chk_table_offset='1368' metadata_offset='1048' method='java/nio/Buffer checkIndex (I)I' bytes='22' count='286' iicount='286' stamp='0.246'/>
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.HotSpotObjectConstant from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/nio/DirectLongBufferU.ix  [0x00007f003f2a1a40, 0x00007f003f2a1bb0]  368 bytes
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.HotSpotObjectConstantImpl from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
[Entry Point]
[Constants]
  # {method} {0x00007f00389ad530} &apos;ix&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;
  # this:     rsi:rsi   = &apos;java/nio/DirectLongBufferU&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2a1a40: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2a1a44: shl    r10,0x3
  0x00007f003f2a1a48: cmp    r10,rax
  0x00007f003f2a1a4b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2a1a51: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2a1a5c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2a1a60: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a1a67: push   rbp
  0x00007f003f2a1a68: sub    rsp,0x40
  0x00007f003f2a1a6c: movabs rcx,0x7f0038a57278  ;   {metadata(method data for {method} {0x00007f00389ad530} &apos;ix&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007f003f2a1a76: mov    eax,DWORD PTR [rcx+0xfc]
  0x00007f003f2a1a7c: add    eax,0x8
  0x00007f003f2a1a7f: mov    DWORD PTR [rcx+0xfc],eax
  0x00007f003f2a1a85: movabs rcx,0x7f00389ad530  ;   {metadata({method} {0x00007f00389ad530} &apos;ix&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007f003f2a1a8f: and    eax,0x1ff8
  0x00007f003f2a1a95: cmp    eax,0x0
  0x00007f003f2a1a98: je     0x00007f003f2a1abc  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::ix@0 (line 245)

  0x00007f003f2a1a9e: mov    rax,QWORD PTR [rsi+0x10]  ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::ix@1 (line 245)

  0x00007f003f2a1aa2: movsxd rdx,edx
  0x00007f003f2a1aa5: mov    ecx,0x3
  0x00007f003f2a1aaa: shl    rdx,cl
  0x00007f003f2a1aad: add    rax,rdx
  0x00007f003f2a1ab0: add    rsp,0x40
  0x00007f003f2a1ab4: pop    rbp
  0x00007f003f2a1ab5: test   DWORD PTR [rip+0x1b120645],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a1abb: ret    
  0x00007f003f2a1abc: mov    QWORD PTR [rsp+0x8],rcx
  0x00007f003f2a1ac1: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a1ac9: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=142}
                                                ;*synchronization entry
                                                ; - java.nio.DirectLongBufferU::ix@-1 (line 245)
                                                ;   {runtime_call}
  0x00007f003f2a1ace: jmp    0x00007f003f2a1a9e
  0x00007f003f2a1ad0: nop
  0x00007f003f2a1ad1: nop
  0x00007f003f2a1ad2: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a1ad9: movabs r10,0x0
  0x00007f003f2a1ae3: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a1aea: movabs r10,0x0
  0x00007f003f2a1af4: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a1afb: add    rsp,0x40
  0x00007f003f2a1aff: pop    rbp
  0x00007f003f2a1b00: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a1b05: hlt    
  0x00007f003f2a1b06: hlt    
  0x00007f003f2a1b07: hlt    
  0x00007f003f2a1b08: hlt    
  0x00007f003f2a1b09: hlt    
  0x00007f003f2a1b0a: hlt    
  0x00007f003f2a1b0b: hlt    
  0x00007f003f2a1b0c: hlt    
  0x00007f003f2a1b0d: hlt    
  0x00007f003f2a1b0e: hlt    
  0x00007f003f2a1b0f: hlt    
  0x00007f003f2a1b10: hlt    
  0x00007f003f2a1b11: hlt    
  0x00007f003f2a1b12: hlt    
  0x00007f003f2a1b13: hlt    
  0x00007f003f2a1b14: hlt    
  0x00007f003f2a1b15: hlt    
  0x00007f003f2a1b16: hlt    
  0x00007f003f2a1b17: hlt    
  0x00007f003f2a1b18: hlt    
  0x00007f003f2a1b19: hlt    
  0x00007f003f2a1b1a: hlt    
  0x00007f003f2a1b1b: hlt    
  0x00007f003f2a1b1c: hlt    
  0x00007f003f2a1b1d: hlt    
  0x00007f003f2a1b1e: hlt    
  0x00007f003f2a1b1f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2a1b20: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2a1b25: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a1b2a: sub    rsp,0x80
  0x00007f003f2a1b31: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a1b36: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a1b3b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a1b40: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a1b45: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a1b4a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a1b4f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a1b54: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a1b59: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a1b5e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a1b63: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a1b68: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a1b6d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a1b72: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a1b77: mov    QWORD PTR [rsp],r15
  0x00007f003f2a1b7b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a1b85: movabs rsi,0x7f003f2a1b25  ;   {internal_word}
  0x00007f003f2a1b8f: mov    rdx,rsp
  0x00007f003f2a1b92: and    rsp,0xfffffffffffffff0
  0x00007f003f2a1b96: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a1b9b: hlt    
[Deopt Handler Code]
  0x00007f003f2a1b9c: movabs r10,0x7f003f2a1b9c  ;   {section_word}
  0x00007f003f2a1ba6: push   r10
  0x00007f003f2a1ba8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a1bad: hlt    
  0x00007f003f2a1bae: hlt    
  0x00007f003f2a1baf: hlt    
<nmethod compile_id='56' compiler='C1' level='3' entry='0x00007f003f2a1a40' size='864' address='0x00007f003f2a18d0' relocation_offset='312' insts_offset='368' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='776' dependencies_offset='856' metadata_offset='736' method='java/nio/DirectLongBufferU ix (I)J' bytes='10' count='298' iicount='298' stamp='0.247'/>
----------------------------------------------------------------------
java/security/ProtectionDomain.getCodeSource  [0x00007f003f2a1dc0, 0x00007f003f2a1ed0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003878d0d0} &apos;getCodeSource&apos; &apos;()Ljava/security/CodeSource;&apos; in &apos;java/security/ProtectionDomain&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2a1dc0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2a1dc4: shl    r10,0x3
  0x00007f003f2a1dc8: cmp    r10,rax
  0x00007f003f2a1dcb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2a1dd1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2a1ddc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2a1de0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a1de7: push   rbp
  0x00007f003f2a1de8: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.security.ProtectionDomain::getCodeSource@0 (line 212)

  0x00007f003f2a1dec: mov    eax,DWORD PTR [rsi+0x10]
  0x00007f003f2a1def: shl    rax,0x3            ;*getfield codesource {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.security.ProtectionDomain::getCodeSource@1 (line 212)

  0x00007f003f2a1df3: add    rsp,0x30
  0x00007f003f2a1df7: pop    rbp
  0x00007f003f2a1df8: test   DWORD PTR [rip+0x1b120302],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a1dfe: ret    
  0x00007f003f2a1dff: nop
  0x00007f003f2a1e00: nop
  0x00007f003f2a1e01: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a1e08: movabs r10,0x0
  0x00007f003f2a1e12: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a1e19: movabs r10,0x0
  0x00007f003f2a1e23: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a1e2a: add    rsp,0x30
  0x00007f003f2a1e2e: pop    rbp
  0x00007f003f2a1e2f: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a1e34: hlt    
  0x00007f003f2a1e35: hlt    
  0x00007f003f2a1e36: hlt    
  0x00007f003f2a1e37: hlt    
  0x00007f003f2a1e38: hlt    
  0x00007f003f2a1e39: hlt    
  0x00007f003f2a1e3a: hlt    
  0x00007f003f2a1e3b: hlt    
  0x00007f003f2a1e3c: hlt    
  0x00007f003f2a1e3d: hlt    
  0x00007f003f2a1e3e: hlt    
  0x00007f003f2a1e3f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2a1e40: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2a1e45: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a1e4a: sub    rsp,0x80
  0x00007f003f2a1e51: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a1e56: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a1e5b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a1e60: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a1e65: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a1e6a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a1e6f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a1e74: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a1e79: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a1e7e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a1e83: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a1e88: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a1e8d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a1e92: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a1e97: mov    QWORD PTR [rsp],r15
  0x00007f003f2a1e9b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a1ea5: movabs rsi,0x7f003f2a1e45  ;   {internal_word}
  0x00007f003f2a1eaf: mov    rdx,rsp
  0x00007f003f2a1eb2: and    rsp,0xfffffffffffffff0
  0x00007f003f2a1eb6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a1ebb: hlt    
[Deopt Handler Code]
  0x00007f003f2a1ebc: movabs r10,0x7f003f2a1ebc  ;   {section_word}
  0x00007f003f2a1ec6: push   r10
  0x00007f003f2a1ec8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a1ecd: hlt    
  0x00007f003f2a1ece: hlt    
  0x00007f003f2a1ecf: hlt    
<nmethod compile_id='57' compiler='C1' level='1' entry='0x00007f003f2a1dc0' size='736' address='0x00007f003f2a1c50' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/security/ProtectionDomain getCodeSource ()Ljava/security/CodeSource;' bytes='5' count='140' iicount='140' stamp='0.248'/>
<writer thread='139637818533632'/>
<task_queued compile_id='58' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='115' backedge_count='5120' iicount='115' level='3' stamp='0.248' comment='tiered' hot_count='115'/>
<task_queued compile_id='59' method='java/nio/charset/CharsetEncoder maxBytesPerChar ()F' bytes='5' count='384' iicount='384' level='3' stamp='0.248' comment='tiered' hot_count='384'/>
[Loaded jdk.vm.ci.hotspot.HotSpotMetaspaceConstant from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotMetaspaceConstantImpl from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='60' method='java/lang/Character toLowerCase (C)C' bytes='6' count='384' iicount='384' level='3' stamp='0.248' comment='tiered' hot_count='384'/>
<task_queued compile_id='61' method='java/lang/Character toLowerCase (I)I' bytes='9' count='384' iicount='384' level='3' stamp='0.248' comment='tiered' hot_count='384'/>
<task_queued compile_id='62' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='384' iicount='384' level='3' stamp='0.248' comment='tiered' hot_count='384'/>
<task_queued compile_id='63' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='474' iicount='474' level='3' stamp='0.249' comment='tiered' hot_count='474'/>
[Loaded jdk.vm.ci.code.stack.InspectedFrame from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotStackFrameReference from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/String.indexOf  [0x00007f003f2a2100, 0x00007f003f2a2750]  1616 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8:r8     = &apos;[C&apos;
  # parm4:    r9        = int
  # parm5:    rdi       = int
  # parm6:    [sp+0x50]   = int  (sp of caller)
  0x00007f003f2a2100: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a2107: push   rbp
  0x00007f003f2a2108: sub    rsp,0x40
  0x00007f003f2a210c: mov    DWORD PTR [rsp+0x20],edx
  0x00007f003f2a2110: mov    DWORD PTR [rsp+0x24],edi
  0x00007f003f2a2114: movabs rax,0x7f0038a573d8  ;   {metadata(method data for {method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a211e: mov    ebx,DWORD PTR [rax+0xfc]
  0x00007f003f2a2124: add    ebx,0x8
  0x00007f003f2a2127: mov    DWORD PTR [rax+0xfc],ebx
  0x00007f003f2a212d: movabs rax,0x7f003876c8a8  ;   {metadata({method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a2137: and    ebx,0x1ff8
  0x00007f003f2a213d: cmp    ebx,0x0
  0x00007f003f2a2140: je     0x00007f003f2a25d4  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.meta.ConstantPool from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
                ; - java.lang.String::indexOf@0 (line 1756)

  0x00007f003f2a2146: mov    eax,DWORD PTR [rsp+0x50]
  0x00007f003f2a214a: cmp    eax,ecx
  0x00007f003f2a214c: movabs rbx,0x7f0038a573d8  ;   {metadata(method data for {method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a2156: movabs r11,0x130
  0x00007f003f2a2160: jl     0x00007f003f2a2170
  0x00007f003f2a2166: movabs r11,0x140
  0x00007f003f2a2170: mov    r13,QWORD PTR [rbx+r11*1]
  0x00007f003f2a2174: lea    r13,[r13+0x1]
  0x00007f003f2a2178: mov    QWORD PTR [rbx+r11*1],r13
  0x00007f003f2a217c: jl     0x00007f003f2a21c0  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@3 (line 1756)

  0x00007f003f2a2182: cmp    edi,0x0
  0x00007f003f2a2185: movabs rax,0x7f0038a573d8  ;   {metadata(method data for {method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a218f: movabs rsi,0x150
  0x00007f003f2a2199: jne    0x00007f003f2a21a9
  0x00007f003f2a219f: movabs rsi,0x160
  0x00007f003f2a21a9: mov    rdi,QWORD PTR [rax+rsi*1]
  0x00007f003f2a21ad: lea    rdi,[rdi+0x1]
  0x00007f003f2a21b1: mov    QWORD PTR [rax+rsi*1],rdi
  0x00007f003f2a21b5: jne    0x00007f003f2a25c0
  0x00007f003f2a21bb: jmp    0x00007f003f2a25ab  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@8 (line 1757)

  0x00007f003f2a21c0: cmp    eax,0x0
  0x00007f003f2a21c3: movabs rbx,0x7f0038a573d8  ;   {metadata(method data for {method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a21cd: movabs r11,0x188
  0x00007f003f2a21d7: jge    0x00007f003f2a21e7
  0x00007f003f2a21dd: movabs r11,0x198
  0x00007f003f2a21e7: mov    r13,QWORD PTR [rbx+r11*1]
  0x00007f003f2a21eb: lea    r13,[r13+0x1]
  0x00007f003f2a21ef: mov    QWORD PTR [rbx+r11*1],r13
  0x00007f003f2a21f3: jge    0x00007f003f2a21fe  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@19 (line 1759)

  0x00007f003f2a21f9: mov    eax,0x0            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@25 (line 1762)

  0x00007f003f2a21fe: cmp    edi,0x0
  0x00007f003f2a2201: movabs rbx,0x7f0038a573d8  ;   {metadata(method data for {method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a220b: movabs r11,0x1a8
  0x00007f003f2a2215: jne    0x00007f003f2a2225
  0x00007f003f2a221b: movabs r11,0x1b8
  0x00007f003f2a2225: mov    r13,QWORD PTR [rbx+r11*1]
  0x00007f003f2a2229: lea    r13,[r13+0x1]
  0x00007f003f2a222d: mov    QWORD PTR [rbx+r11*1],r13
  0x00007f003f2a2231: je     0x00007f003f2a259f  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@27 (line 1762)

  0x00007f003f2a2237: movsxd rbx,r9d
  0x00007f003f2a223a: cmp    r9d,DWORD PTR [r8+0xc]  ; implicit exception: dispatches to 0x00007f003f2a25eb
  0x00007f003f2a223e: jae    0x00007f003f2a25f5
  0x00007f003f2a2244: movzx  ebx,WORD PTR [r8+rbx*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@36 (line 1766)

  0x00007f003f2a224a: mov    DWORD PTR [rsp+0x28],ebx
  0x00007f003f2a224e: sub    ecx,edi
  0x00007f003f2a2250: add    ecx,edx
  0x00007f003f2a2252: add    eax,edx
  0x00007f003f2a2254: nop    DWORD PTR [rax+0x0]
  0x00007f003f2a2258: cmp    eax,ecx
  0x00007f003f2a225a: movabs r11,0x7f0038a573d8  ;   {metadata(method data for {method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a2264: movabs r13,0x1c8
  0x00007f003f2a226e: jg     0x00007f003f2a227e
  0x00007f003f2a2274: movabs r13,0x1d8
  0x00007f003f2a227e: mov    r14,QWORD PTR [r11+r13*1]
  0x00007f003f2a2282: lea    r14,[r14+0x1]
  0x00007f003f2a2286: mov    QWORD PTR [r11+r13*1],r14
  0x00007f003f2a228a: jg     0x00007f003f2a258e  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x00007f003f2a2290: movsxd r11,eax
  0x00007f003f2a2293: cmp    eax,DWORD PTR [rsi+0xc]  ; implicit exception: dispatches to 0x00007f003f2a25fe
  0x00007f003f2a2296: jae    0x00007f003f2a2608
  0x00007f003f2a229c: movzx  r11d,WORD PTR [rsi+r11*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x00007f003f2a22a2: cmp    r11d,ebx
  0x00007f003f2a22a5: movabs r11,0x7f0038a573d8  ;   {metadata(method data for {method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a22af: movabs r13,0x1e8
  0x00007f003f2a22b9: je     0x00007f003f2a22c9
  0x00007f003f2a22bf: movabs r13,0x1f8
  0x00007f003f2a22c9: mov    r14,QWORD PTR [r11+r13*1]
  0x00007f003f2a22cd: lea    r14,[r14+0x1]
  0x00007f003f2a22d1: mov    QWORD PTR [r11+r13*1],r14
  0x00007f003f2a22d5: je     0x00007f003f2a23b3
  0x00007f003f2a22db: jmp    0x00007f003f2a2379  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@66 (line 1771)

  0x00007f003f2a22e0: movsxd r11,eax
  0x00007f003f2a22e3: cmp    eax,DWORD PTR [rsi+0xc]
  0x00007f003f2a22e6: jae    0x00007f003f2a2611
  0x00007f003f2a22ec: movzx  r11d,WORD PTR [rsi+r11*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x00007f003f2a22f2: cmp    r11d,ebx
  0x00007f003f2a22f5: movabs r11,0x7f0038a573d8  ;   {metadata(method data for {method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a22ff: movabs r13,0x228
  0x00007f003f2a2309: je     0x00007f003f2a2319
  0x00007f003f2a230f: movabs r13,0x238
  0x00007f003f2a2319: mov    r14,QWORD PTR [r11+r13*1]
  0x00007f003f2a231d: lea    r14,[r14+0x1]
  0x00007f003f2a2321: mov    QWORD PTR [r11+r13*1],r14
  0x00007f003f2a2325: je     0x00007f003f2a23b3  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x00007f003f2a232b: movabs r11,0x7f0038a573d8  ;   {metadata(method data for {method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a2335: mov    r13d,DWORD PTR [r11+0x100]
  0x00007f003f2a233c: add    r13d,0x8
  0x00007f003f2a2340: mov    DWORD PTR [r11+0x100],r13d
  0x00007f003f2a2347: movabs r11,0x7f003876c8a8  ;   {metadata({method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a2351: and    r13d,0xfff8
  0x00007f003f2a2358: cmp    r13d,0x0
  0x00007f003f2a235c: je     0x00007f003f2a261a  ; OopMap{r8=Oop rsi=Oop off=610}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x00007f003f2a2362: test   DWORD PTR [rip+0x1b11fd98],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2a2368: movabs r11,0x7f0038a573d8  ;   {metadata(method data for {method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a2372: inc    DWORD PTR [r11+0x248]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x00007f003f2a2379: inc    eax
  0x00007f003f2a237b: cmp    eax,ecx
  0x00007f003f2a237d: movabs r11,0x7f0038a573d8  ;   {metadata(method data for {method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a2387: movabs r13,0x208
  0x00007f003f2a2391: jg     0x00007f003f2a23a1
  0x00007f003f2a2397: movabs r13,0x218
  0x00007f003f2a23a1: mov    r14,QWORD PTR [r11+r13*1]
  0x00007f003f2a23a5: lea    r14,[r14+0x1]
  0x00007f003f2a23a9: mov    QWORD PTR [r11+r13*1],r14
  0x00007f003f2a23ad: jle    0x00007f003f2a22e0  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x00007f003f2a23b3: cmp    eax,ecx
  0x00007f003f2a23b5: movabs r11,0x7f0038a573d8  ;   {metadata(method data for {method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a23bf: movabs r13,0x260
  0x00007f003f2a23c9: jg     0x00007f003f2a23d9
  0x00007f003f2a23cf: movabs r13,0x270
  0x00007f003f2a23d9: mov    r14,QWORD PTR [r11+r13*1]
  0x00007f003f2a23dd: lea    r14,[r14+0x1]
  0x00007f003f2a23e1: mov    QWORD PTR [r11+r13*1],r14
  0x00007f003f2a23e5: jg     0x00007f003f2a2525  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x00007f003f2a23eb: mov    r11,rax
  0x00007f003f2a23ee: inc    r11d
  0x00007f003f2a23f1: mov    r13,r11
  0x00007f003f2a23f4: add    r13d,edi
  0x00007f003f2a23f7: dec    r13d
  0x00007f003f2a23fa: mov    r14,r9
  0x00007f003f2a23fd: inc    r14d
  0x00007f003f2a2400: jmp    0x00007f003f2a24b3  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@119 (line 1779)

  0x00007f003f2a2405: data16 xchg ax,ax
  0x00007f003f2a2408: movsxd rdi,r11d
  0x00007f003f2a240b: cmp    r11d,DWORD PTR [rsi+0xc]
  0x00007f003f2a240f: jae    0x00007f003f2a2631
  0x00007f003f2a2415: movzx  edi,WORD PTR [rsi+rdi*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x00007f003f2a241a: movsxd rbx,r14d
  0x00007f003f2a241d: cmp    r14d,DWORD PTR [r8+0xc]
  0x00007f003f2a2421: jae    0x00007f003f2a263a
  0x00007f003f2a2427: movzx  ebx,WORD PTR [r8+rbx*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x00007f003f2a242d: cmp    edi,ebx
  0x00007f003f2a242f: movabs rdi,0x7f0038a573d8  ;   {metadata(method data for {method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a2439: movabs rbx,0x2a0
  0x00007f003f2a2443: jne    0x00007f003f2a2453
  0x00007f003f2a2449: movabs rbx,0x2b0
  0x00007f003f2a2453: mov    rdx,QWORD PTR [rdi+rbx*1]
  0x00007f003f2a2457: lea    rdx,[rdx+0x1]
  0x00007f003f2a245b: mov    QWORD PTR [rdi+rbx*1],rdx
  0x00007f003f2a245f: jne    0x00007f003f2a24ec  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@134 (line 1779)

  0x00007f003f2a2465: inc    r11d
  0x00007f003f2a2468: inc    r14d
  0x00007f003f2a246b: movabs rdi,0x7f0038a573d8  ;   {metadata(method data for {method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a2475: mov    ebx,DWORD PTR [rdi+0x100]
  0x00007f003f2a247b: add    ebx,0x8
  0x00007f003f2a247e: mov    DWORD PTR [rdi+0x100],ebx
  0x00007f003f2a2484: movabs rdi,0x7f003876c8a8  ;   {metadata({method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a248e: and    ebx,0xfff8
  0x00007f003f2a2494: cmp    ebx,0x0
  0x00007f003f2a2497: je     0x00007f003f2a2643  ; OopMap{r8=Oop rsi=Oop off=925}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@143 (line 1780)

  0x00007f003f2a249d: test   DWORD PTR [rip+0x1b11fc5d],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2a24a3: movabs rdi,0x7f0038a573d8  ;   {metadata(method data for {method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a24ad: inc    DWORD PTR [rdi+0x2c0]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@143 (line 1780)

  0x00007f003f2a24b3: cmp    r11d,r13d
  0x00007f003f2a24b6: movabs rdx,0x7f0038a573d8  ;   {metadata(method data for {method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a24c0: movabs rdi,0x280
  0x00007f003f2a24ca: jge    0x00007f003f2a24da
  0x00007f003f2a24d0: movabs rdi,0x290
  0x00007f003f2a24da: mov    rbx,QWORD PTR [rdx+rdi*1]
  0x00007f003f2a24de: lea    rbx,[rbx+0x1]
  0x00007f003f2a24e2: mov    QWORD PTR [rdx+rdi*1],rbx
  0x00007f003f2a24e6: jl     0x00007f003f2a2408  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x00007f003f2a24ec: cmp    r11d,r13d
  0x00007f003f2a24ef: movabs rdi,0x7f0038a573d8  ;   {metadata(method data for {method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a24f9: movabs rbx,0x2d8
  0x00007f003f2a2503: jne    0x00007f003f2a2513
  0x00007f003f2a2509: movabs rbx,0x2e8
  0x00007f003f2a2513: mov    rdx,QWORD PTR [rdi+rbx*1]
  0x00007f003f2a2517: lea    rdx,[rdx+0x1]
  0x00007f003f2a251b: mov    QWORD PTR [rdi+rbx*1],rdx
  0x00007f003f2a251f: je     0x00007f003f2a257c  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@150 (line 1782)

  0x00007f003f2a2525: inc    eax
  0x00007f003f2a2527: movabs rdi,0x7f0038a573d8  ;   {metadata(method data for {method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a2531: mov    ebx,DWORD PTR [rdi+0x100]
  0x00007f003f2a2537: add    ebx,0x8
  0x00007f003f2a253a: mov    DWORD PTR [rdi+0x100],ebx
  0x00007f003f2a2540: movabs rdi,0x7f003876c8a8  ;   {metadata({method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a254a: and    ebx,0xfff8
  0x00007f003f2a2550: cmp    ebx,0x0
  0x00007f003f2a2553: je     0x00007f003f2a265a  ; OopMap{r8=Oop rsi=Oop off=1113}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x00007f003f2a2559: test   DWORD PTR [rip+0x1b11fba1],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2a255f: movabs rdi,0x7f0038a573d8  ;   {metadata(method data for {method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a2569: inc    DWORD PTR [rdi+0x2f8]
  0x00007f003f2a256f: mov    ebx,DWORD PTR [rsp+0x28]
  0x00007f003f2a2573: mov    edi,DWORD PTR [rsp+0x24]
  0x00007f003f2a2577: jmp    0x00007f003f2a2258  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x00007f003f2a257c: mov    edx,DWORD PTR [rsp+0x20]
  0x00007f003f2a2580: sub    eax,edx
  0x00007f003f2a2582: add    rsp,0x40
  0x00007f003f2a2586: pop    rbp
  0x00007f003f2a2587: test   DWORD PTR [rip+0x1b11fb73],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a258d: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@157 (line 1784)

  0x00007f003f2a258e: mov    eax,0xffffffff
  0x00007f003f2a2593: add    rsp,0x40
  0x00007f003f2a2597: pop    rbp
  0x00007f003f2a2598: test   DWORD PTR [rip+0x1b11fb62],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a259e: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@165 (line 1788)

  0x00007f003f2a259f: add    rsp,0x40
  0x00007f003f2a25a3: pop    rbp
  0x00007f003f2a25a4: test   DWORD PTR [rip+0x1b11fb56],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a25aa: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@32 (line 1763)

  0x00007f003f2a25ab: movabs rax,0x7f0038a573d8  ;   {metadata(method data for {method} {0x00007f003876c8a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a25b5: inc    DWORD PTR [rax+0x170]
  0x00007f003f2a25bb: jmp    0x00007f003f2a25c5  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@12 (line 1757)

  0x00007f003f2a25c0: mov    ecx,0xffffffff     ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@16 (line 1757)

  0x00007f003f2a25c5: mov    rax,rcx
  0x00007f003f2a25c8: add    rsp,0x40
  0x00007f003f2a25cc: pop    rbp
  0x00007f003f2a25cd: test   DWORD PTR [rip+0x1b11fb2d],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a25d3: ret    
  0x00007f003f2a25d4: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2a25d9: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a25e1: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop r8=Oop off=1254}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1756)
                                                ;   {runtime_call}
  0x00007f003f2a25e6: jmp    0x00007f003f2a2146
  0x00007f003f2a25eb: call   0x00007f003f279000  ; OopMap{r8=Oop rsi=Oop off=1264}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x00007f003f2a25f0: call   0x00007f003f279000  ; OopMap{r8=Oop rsi=Oop off=1269}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x00007f003f2a25f5: mov    QWORD PTR [rsp],r9
  0x00007f003f2a25f9: call   0x00007f003f278940  ; OopMap{r8=Oop rsi=Oop off=1278}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x00007f003f2a25fe: call   0x00007f003f279000  ; OopMap{r8=Oop rsi=Oop off=1283}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x00007f003f2a2603: call   0x00007f003f279000  ; OopMap{r8=Oop rsi=Oop off=1288}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x00007f003f2a2608: mov    QWORD PTR [rsp],rax
  0x00007f003f2a260c: call   0x00007f003f278940  ; OopMap{r8=Oop rsi=Oop off=1297}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x00007f003f2a2611: mov    QWORD PTR [rsp],rax
  0x00007f003f2a2615: call   0x00007f003f278940  ; OopMap{r8=Oop rsi=Oop off=1306}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@82 (line 1772)
                                                ;   {runtime_call}
  0x00007f003f2a261a: mov    QWORD PTR [rsp+0x8],r11
  0x00007f003f2a261f: mov    QWORD PTR [rsp],0x58
  0x00007f003f2a2627: call   0x00007f003f27d5e0  ; OopMap{r8=Oop rsi=Oop off=1324}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@88 (line 1772)
                                                ;   {runtime_call}
  0x00007f003f2a262c: jmp    0x00007f003f2a2362
  0x00007f003f2a2631: mov    QWORD PTR [rsp],r11
  0x00007f003f2a2635: call   0x00007f003f278940  ; OopMap{r8=Oop rsi=Oop off=1338}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x00007f003f2a263a: mov    QWORD PTR [rsp],r14
  0x00007f003f2a263e: call   0x00007f003f278940  ; OopMap{r8=Oop rsi=Oop off=1347}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x00007f003f2a2643: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2a2648: mov    QWORD PTR [rsp],0x8f
  0x00007f003f2a2650: call   0x00007f003f27d5e0  ; OopMap{r8=Oop rsi=Oop off=1365}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@143 (line 1780)
                                                ;   {runtime_call}
  0x00007f003f2a2655: jmp    0x00007f003f2a249d
  0x00007f003f2a265a: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2a265f: mov    QWORD PTR [rsp],0xa1
  0x00007f003f2a2667: call   0x00007f003f27d5e0  ; OopMap{r8=Oop rsi=Oop off=1388}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {runtime_call}
  0x00007f003f2a266c: jmp    0x00007f003f2a2559
  0x00007f003f2a2671: nop
  0x00007f003f2a2672: nop
  0x00007f003f2a2673: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a267a: movabs r10,0x0
  0x00007f003f2a2684: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a268b: movabs r10,0x0
  0x00007f003f2a2695: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a269c: add    rsp,0x40
  0x00007f003f2a26a0: pop    rbp
  0x00007f003f2a26a1: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a26a6: hlt    
  0x00007f003f2a26a7: hlt    
  0x00007f003f2a26a8: hlt    
  0x00007f003f2a26a9: hlt    
  0x00007f003f2a26aa: hlt    
  0x00007f003f2a26ab: hlt    
  0x00007f003f2a26ac: hlt    
  0x00007f003f2a26ad: hlt    
  0x00007f003f2a26ae: hlt    
  0x00007f003f2a26af: hlt    
  0x00007f003f2a26b0: hlt    
  0x00007f003f2a26b1: hlt    
  0x00007f003f2a26b2: hlt    
  0x00007f003f2a26b3: hlt    
  0x00007f003f2a26b4: hlt    
  0x00007f003f2a26b5: hlt    
  0x00007f003f2a26b6: hlt    
  0x00007f003f2a26b7: hlt    
  0x00007f003f2a26b8: hlt    
  0x00007f003f2a26b9: hlt    
  0x00007f003f2a26ba: hlt    
  0x00007f003f2a26bb: hlt    
  0x00007f003f2a26bc: hlt    
  0x00007f003f2a26bd: hlt    
  0x00007f003f2a26be: hlt    
  0x00007f003f2a26bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2a26c0: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2a26c5: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a26ca: sub    rsp,0x80
  0x00007f003f2a26d1: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a26d6: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a26db: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a26e0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a26e5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a26ea: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a26ef: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a26f4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a26f9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a26fe: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a2703: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a2708: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a270d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a2712: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a2717: mov    QWORD PTR [rsp],r15
  0x00007f003f2a271b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a2725: movabs rsi,0x7f003f2a26c5  ;   {internal_word}
  0x00007f003f2a272f: mov    rdx,rsp
  0x00007f003f2a2732: and    rsp,0xfffffffffffffff0
  0x00007f003f2a2736: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a273b: hlt    
[Deopt Handler Code]
  0x00007f003f2a273c: movabs r10,0x7f003f2a273c  ;   {section_word}
  0x00007f003f2a2746: push   r10
  0x00007f003f2a2748: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a274d: hlt    
  0x00007f003f2a274e: hlt    
  0x00007f003f2a274f: hlt    
<nmethod compile_id='58' compiler='C1' level='3' entry='0x00007f003f2a2100' size='3232' address='0x00007f003f2a1f50' relocation_offset='312' insts_offset='432' stub_offset='1904' scopes_data_offset='2056' scopes_pcs_offset='2448' dependencies_offset='3184' nul_chk_table_offset='3192' metadata_offset='2048' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='125' backedge_count='5538' iicount='125' stamp='0.251'/>
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.HotSpotConstantPool from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/nio/charset/CharsetEncoder.maxBytesPerChar  [0x00007f003f2a2d80, 0x00007f003f2a2ed0]  336 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00388dfeb8} &apos;maxBytesPerChar&apos; &apos;()F&apos; in &apos;java/nio/charset/CharsetEncoder&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2a2d80: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2a2d84: shl    r10,0x3
  0x00007f003f2a2d88: cmp    r10,rax
  0x00007f003f2a2d8b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2a2d91: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2a2d9c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2a2da0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a2da7: push   rbp
  0x00007f003f2a2da8: sub    rsp,0x30
  0x00007f003f2a2dac: movabs rdi,0x7f0038a57748  ;   {metadata(method data for {method} {0x00007f00388dfeb8} &apos;maxBytesPerChar&apos; &apos;()F&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2a2db6: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2a2dbc: add    ebx,0x8
  0x00007f003f2a2dbf: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2a2dc5: movabs rdi,0x7f00388dfeb8  ;   {metadata({method} {0x00007f00388dfeb8} &apos;maxBytesPerChar&apos; &apos;()F&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2a2dcf: and    ebx,0x1ff8
  0x00007f003f2a2dd5: cmp    ebx,0x0
  0x00007f003f2a2dd8: je     0x00007f003f2a2def  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::maxBytesPerChar@0 (line 465)

  0x00007f003f2a2dde: vmovss xmm0,DWORD PTR [rsi+0x10]
                                                ;*getfield maxBytesPerChar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::maxBytesPerChar@1 (line 465)

  0x00007f003f2a2de3: add    rsp,0x30
  0x00007f003f2a2de7: pop    rbp
  0x00007f003f2a2de8: test   DWORD PTR [rip+0x1b11f312],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a2dee: ret    
  0x00007f003f2a2def: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2a2df4: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a2dfc: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=129}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::maxBytesPerChar@-1 (line 465)
                                                ;   {runtime_call}
  0x00007f003f2a2e01: jmp    0x00007f003f2a2dde
  0x00007f003f2a2e03: nop
  0x00007f003f2a2e04: nop
  0x00007f003f2a2e05: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a2e0c: movabs r10,0x0
  0x00007f003f2a2e16: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a2e1d: movabs r10,0x0
  0x00007f003f2a2e27: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a2e2e: add    rsp,0x30
  0x00007f003f2a2e32: pop    rbp
  0x00007f003f2a2e33: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a2e38: hlt    
  0x00007f003f2a2e39: hlt    
  0x00007f003f2a2e3a: hlt    
  0x00007f003f2a2e3b: hlt    
  0x00007f003f2a2e3c: hlt    
  0x00007f003f2a2e3d: hlt    
  0x00007f003f2a2e3e: hlt    
  0x00007f003f2a2e3f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2a2e40: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2a2e45: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a2e4a: sub    rsp,0x80
  0x00007f003f2a2e51: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a2e56: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a2e5b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a2e60: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a2e65: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a2e6a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a2e6f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a2e74: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a2e79: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a2e7e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a2e83: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a2e88: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a2e8d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a2e92: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a2e97: mov    QWORD PTR [rsp],r15
  0x00007f003f2a2e9b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a2ea5: movabs rsi,0x7f003f2a2e45  ;   {internal_word}
  0x00007f003f2a2eaf: mov    rdx,rsp
  0x00007f003f2a2eb2: and    rsp,0xfffffffffffffff0
  0x00007f003f2a2eb6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a2ebb: hlt    
[Deopt Handler Code]
  0x00007f003f2a2ebc: movabs r10,0x7f003f2a2ebc  ;   {section_word}
  0x00007f003f2a2ec6: push   r10
  0x00007f003f2a2ec8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a2ecd: hlt    
  0x00007f003f2a2ece: hlt    
  0x00007f003f2a2ecf: hlt    
<nmethod compile_id='59' compiler='C1' level='3' entry='0x00007f003f2a2d80' size='824' address='0x00007f003f2a2c10' relocation_offset='312' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='736' dependencies_offset='816' metadata_offset='704' method='java/nio/charset/CharsetEncoder maxBytesPerChar ()F' bytes='5' count='414' iicount='414' stamp='0.252'/>
<writer thread='139637818533632'/>
<task_queued compile_id='64' method='java/lang/String toCharArray ()[C' bytes='25' count='384' iicount='384' level='3' stamp='0.252' comment='tiered' hot_count='384'/>
<task_queued compile_id='65' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='384' iicount='384' level='3' stamp='0.252' comment='tiered' hot_count='384'/>
<task_queued compile_id='66' method='java/net/URL getQuery ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.252' comment='tiered' hot_count='128'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/Character.toLowerCase  [0x00007f003f2a3120, 0x00007f003f2a3518]  1016 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f0038816a08} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.HotSpotJVMCIMetaAccessContext from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
  # parm0:    rsi       = char
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2a3120: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a3127: push   rbp
  0x00007f003f2a3128: sub    rsp,0x40
  0x00007f003f2a312c: movabs rdi,0x7f0038a578a0  ;   {metadata(method data for {method} {0x00007f0038816a08} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2a3136: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2a313c: add    ebx,0x8
  0x00007f003f2a313f: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2a3145: movabs rdi,0x7f0038816a08  ;   {metadata({method} {0x00007f0038816a08} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2a314f: and    ebx,0x1ff8
  0x00007f003f2a3155: cmp    ebx,0x0
  0x00007f003f2a3158: je     0x00007f003f2a33e4  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@0 (line 6309)

  0x00007f003f2a315e: movabs rdi,0x7f0038a578a0  ;   {metadata(method data for {method} {0x00007f0038816a08} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2a3168: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f2a3170: movabs rdi,0x7f0038a57a20  ;   {metadata(method data for {method} {0x00007f0038816ab0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2a317a: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2a3180: add    ebx,0x8
  0x00007f003f2a3183: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2a3189: movabs rdi,0x7f0038816ab0  ;   {metadata({method} {0x00007f0038816ab0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2a3193: and    ebx,0x7ffff8
  0x00007f003f2a3199: cmp    ebx,0x0
  0x00007f003f2a319c: je     0x00007f003f2a33fb
  0x00007f003f2a31a2: movabs rdi,0x7f0038a57a20  ;   {metadata(method data for {method} {0x00007f0038816ab0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2a31ac: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f2a31b4: mov    rdi,rsi
  0x00007f003f2a31b7: mov    rsi,rdi            ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)

  0x00007f003f2a31ba: mov    DWORD PTR [rsp+0x28],edi
  0x00007f003f2a31be: nop
  0x00007f003f2a31bf: call   0x00007f003f1c5160  ; OopMap{off=164}
                                                ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {static_call}
  0x00007f003f2a31c4: cmp    rax,QWORD PTR [rax]  ; implicit exception: dispatches to 0x00007f003f2a3412
  0x00007f003f2a31c7: mov    rdx,rax
  0x00007f003f2a31ca: movabs rsi,0x7f0038a57a20  ;   {metadata(method data for {method} {0x00007f0038816ab0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2a31d4: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2a31d7: shl    rdx,0x3
  0x00007f003f2a31db: cmp    rdx,QWORD PTR [rsi+0x150]
  0x00007f003f2a31e2: jne    0x00007f003f2a31f1
  0x00007f003f2a31e4: add    QWORD PTR [rsi+0x158],0x1
  0x00007f003f2a31ec: jmp    0x00007f003f2a33b3
  0x00007f003f2a31f1: cmp    rdx,QWORD PTR [rsi+0x160]
  0x00007f003f2a31f8: jne    0x00007f003f2a3207
  0x00007f003f2a31fa: add    QWORD PTR [rsi+0x168],0x1
  0x00007f003f2a3202: jmp    0x00007f003f2a33b3
  0x00007f003f2a3207: cmp    rdx,QWORD PTR [rsi+0x170]
  0x00007f003f2a320e: jne    0x00007f003f2a321d
  0x00007f003f2a3210: add    QWORD PTR [rsi+0x178],0x1
  0x00007f003f2a3218: jmp    0x00007f003f2a33b3
  0x00007f003f2a321d: cmp    rdx,QWORD PTR [rsi+0x180]
  0x00007f003f2a3224: jne    0x00007f003f2a3233
  0x00007f003f2a3226: add    QWORD PTR [rsi+0x188],0x1
  0x00007f003f2a322e: jmp    0x00007f003f2a33b3
  0x00007f003f2a3233: cmp    rdx,QWORD PTR [rsi+0x190]
  0x00007f003f2a323a: jne    0x00007f003f2a3249
  0x00007f003f2a323c: add    QWORD PTR [rsi+0x198],0x1
  0x00007f003f2a3244: jmp    0x00007f003f2a33b3
  0x00007f003f2a3249: cmp    rdx,QWORD PTR [rsi+0x1a0]
  0x00007f003f2a3250: jne    0x00007f003f2a325f
  0x00007f003f2a3252: add    QWORD PTR [rsi+0x1a8],0x1
  0x00007f003f2a325a: jmp    0x00007f003f2a33b3
  0x00007f003f2a325f: cmp    rdx,QWORD PTR [rsi+0x1b0]
  0x00007f003f2a3266: jne    0x00007f003f2a3275
  0x00007f003f2a3268: add    QWORD PTR [rsi+0x1b8],0x1
  0x00007f003f2a3270: jmp    0x00007f003f2a33b3
  0x00007f003f2a3275: cmp    rdx,QWORD PTR [rsi+0x1c0]
  0x00007f003f2a327c: jne    0x00007f003f2a328b
  0x00007f003f2a327e: add    QWORD PTR [rsi+0x1c8],0x1
  0x00007f003f2a3286: jmp    0x00007f003f2a33b3
  0x00007f003f2a328b: cmp    QWORD PTR [rsi+0x150],0x0
  0x00007f003f2a3296: jne    0x00007f003f2a32af
  0x00007f003f2a3298: mov    QWORD PTR [rsi+0x150],rdx
  0x00007f003f2a329f: mov    QWORD PTR [rsi+0x158],0x1
  0x00007f003f2a32aa: jmp    0x00007f003f2a33b3
  0x00007f003f2a32af: cmp    QWORD PTR [rsi+0x160],0x0
  0x00007f003f2a32ba: jne    0x00007f003f2a32d3
  0x00007f003f2a32bc: mov    QWORD PTR [rsi+0x160],rdx
  0x00007f003f2a32c3: mov    QWORD PTR [rsi+0x168],0x1
  0x00007f003f2a32ce: jmp    0x00007f003f2a33b3
  0x00007f003f2a32d3: cmp    QWORD PTR [rsi+0x170],0x0
  0x00007f003f2a32de: jne    0x00007f003f2a32f7
  0x00007f003f2a32e0: mov    QWORD PTR [rsi+0x170],rdx
  0x00007f003f2a32e7: mov    QWORD PTR [rsi+0x178],0x1
  0x00007f003f2a32f2: jmp    0x00007f003f2a33b3
  0x00007f003f2a32f7: cmp    QWORD PTR [rsi+0x180],0x0
  0x00007f003f2a3302: jne    0x00007f003f2a331b
  0x00007f003f2a3304: mov    QWORD PTR [rsi+0x180],rdx
  0x00007f003f2a330b: mov    QWORD PTR [rsi+0x188],0x1
  0x00007f003f2a3316: jmp    0x00007f003f2a33b3
  0x00007f003f2a331b: cmp    QWORD PTR [rsi+0x190],0x0
  0x00007f003f2a3326: jne    0x00007f003f2a333f
  0x00007f003f2a3328: mov    QWORD PTR [rsi+0x190],rdx
  0x00007f003f2a332f: mov    QWORD PTR [rsi+0x198],0x1
  0x00007f003f2a333a: jmp    0x00007f003f2a33b3
  0x00007f003f2a333f: cmp    QWORD PTR [rsi+0x1a0],0x0
  0x00007f003f2a334a: jne    0x00007f003f2a3363
  0x00007f003f2a334c: mov    QWORD PTR [rsi+0x1a0],rdx
  0x00007f003f2a3353: mov    QWORD PTR [rsi+0x1a8],0x1
  0x00007f003f2a335e: jmp    0x00007f003f2a33b3
  0x00007f003f2a3363: cmp    QWORD PTR [rsi+0x1b0],0x0
  0x00007f003f2a336e: jne    0x00007f003f2a3387
  0x00007f003f2a3370: mov    QWORD PTR [rsi+0x1b0],rdx
  0x00007f003f2a3377: mov    QWORD PTR [rsi+0x1b8],0x1
  0x00007f003f2a3382: jmp    0x00007f003f2a33b3
  0x00007f003f2a3387: cmp    QWORD PTR [rsi+0x1c0],0x0
  0x00007f003f2a3392: jne    0x00007f003f2a33ab
  0x00007f003f2a3394: mov    QWORD PTR [rsi+0x1c0],rdx
  0x00007f003f2a339b: mov    QWORD PTR [rsi+0x1c8],0x1
  0x00007f003f2a33a6: jmp    0x00007f003f2a33b3
  0x00007f003f2a33ab: add    QWORD PTR [rsi+0x140],0x1
  0x00007f003f2a33b3: mov    edx,DWORD PTR [rsp+0x28]
  0x00007f003f2a33b7: mov    rsi,rax            ;*invokevirtual toLowerCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)

  0x00007f003f2a33ba: nop
  0x00007f003f2a33bb: nop
  0x00007f003f2a33bc: nop
  0x00007f003f2a33bd: movabs rax,0xffffffffffffffff
  0x00007f003f2a33c7: call   0x00007f003f1c4f60  ; OopMap{off=684}
                                                ;*invokevirtual toLowerCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {virtual_call}
  0x00007f003f2a33cc: and    eax,0xffff
  0x00007f003f2a33d2: and    eax,0xffff
  0x00007f003f2a33d8: add    rsp,0x40
  0x00007f003f2a33dc: pop    rbp
  0x00007f003f2a33dd: test   DWORD PTR [rip+0x1b11ed1d],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a33e3: ret    
  0x00007f003f2a33e4: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2a33e9: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a33f1: call   0x00007f003f27d5e0  ; OopMap{off=726}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6309)
                                                ;   {runtime_call}
  0x00007f003f2a33f6: jmp    0x00007f003f2a315e
  0x00007f003f2a33fb: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2a3400: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a3408: call   0x00007f003f27d5e0  ; OopMap{off=749}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {runtime_call}
  0x00007f003f2a340d: jmp    0x00007f003f2a31a2
  0x00007f003f2a3412: call   0x00007f003f279000  ; OopMap{rax=Oop off=759}
                                                ;*invokevirtual toLowerCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {runtime_call}
  0x00007f003f2a3417: nop
  0x00007f003f2a3418: nop
  0x00007f003f2a3419: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a3420: movabs r10,0x0
  0x00007f003f2a342a: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a3431: movabs r10,0x0
  0x00007f003f2a343b: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a3442: add    rsp,0x40
  0x00007f003f2a3446: pop    rbp
  0x00007f003f2a3447: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a344c: hlt    
  0x00007f003f2a344d: hlt    
  0x00007f003f2a344e: hlt    
  0x00007f003f2a344f: hlt    
  0x00007f003f2a3450: hlt    
  0x00007f003f2a3451: hlt    
  0x00007f003f2a3452: hlt    
  0x00007f003f2a3453: hlt    
  0x00007f003f2a3454: hlt    
  0x00007f003f2a3455: hlt    
  0x00007f003f2a3456: hlt    
  0x00007f003f2a3457: hlt    
  0x00007f003f2a3458: hlt    
  0x00007f003f2a3459: hlt    
  0x00007f003f2a345a: hlt    
  0x00007f003f2a345b: hlt    
  0x00007f003f2a345c: hlt    
  0x00007f003f2a345d: hlt    
  0x00007f003f2a345e: hlt    
  0x00007f003f2a345f: hlt    
[Stub Code]
  0x00007f003f2a3460: nop                       ;   {no_reloc}
  0x00007f003f2a3461: nop
  0x00007f003f2a3462: nop
  0x00007f003f2a3463: nop
  0x00007f003f2a3464: nop
  0x00007f003f2a3465: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2a346f: jmp    0x00007f003f2a346f  ;   {runtime_call}
  0x00007f003f2a3474: nop
  0x00007f003f2a3475: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2a347f: jmp    0x00007f003f2a347f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2a3484: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2a3489: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a348e: sub    rsp,0x80
  0x00007f003f2a3495: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a349a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a349f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a34a4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a34a9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a34ae: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a34b3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a34b8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a34bd: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a34c2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a34c7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a34cc: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a34d1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a34d6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a34db: mov    QWORD PTR [rsp],r15
  0x00007f003f2a34df: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a34e9: movabs rsi,0x7f003f2a3489  ;   {internal_word}
  0x00007f003f2a34f3: mov    rdx,rsp
  0x00007f003f2a34f6: and    rsp,0xfffffffffffffff0
  0x00007f003f2a34fa: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a34ff: hlt    
[Deopt Handler Code]
  0x00007f003f2a3500: movabs r10,0x7f003f2a3500  ;   {section_word}
  0x00007f003f2a350a: push   r10
  0x00007f003f2a350c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a3511: hlt    
  0x00007f003f2a3512: hlt    
  0x00007f003f2a3513: hlt    
  0x00007f003f2a3514: hlt    
  0x00007f003f2a3515: hlt    
  0x00007f003f2a3516: hlt    
  0x00007f003f2a3517: hlt    
<nmethod compile_id='60' compiler='C1' level='3' entry='0x00007f003f2a3120' size='1688' address='0x00007f003f2a2f90' relocation_offset='312' insts_offset='400' stub_offset='1232' scopes_data_offset='1432' scopes_pcs_offset='1504' dependencies_offset='1664' nul_chk_table_offset='1672' metadata_offset='1416' method='java/lang/Character toLowerCase (C)C' bytes='6' count='403' iicount='403' stamp='0.254'/>
----------------------------------------------------------------------
java/lang/String.toCharArray  [0x00007f003f2a37e0, 0x00007f003f2a3a68]  648 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003876e640} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2a37e0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2a37e4: shl    r10,0x3
  0x00007f003f2a37e8: cmp    r10,rax
  0x00007f003f2a37eb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2a37f1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2a37fc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2a3800: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a3807: push   rbp
  0x00007f003f2a3808: sub    rsp,0x40
  0x00007f003f2a380c: mov    r8,rsi
  0x00007f003f2a380f: movabs rbx,0x7f0038a57c38  ;   {metadata(method data for {method} {0x00007f003876e640} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a3819: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f2a381f: add    edx,0x8
  0x00007f003f2a3822: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f2a3828: movabs rbx,0x7f003876e640  ;   {metadata({method} {0x00007f003876e640} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a3832: and    edx,0x1ff8
  0x00007f003f2a3838: cmp    edx,0x0
  0x00007f003f2a383b: je     0x00007f003f2a3946  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@0 (line 2899)

  0x00007f003f2a3841: mov    r9d,DWORD PTR [r8+0xc]
  0x00007f003f2a3845: shl    r9,0x3             ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@1 (line 2899)

  0x00007f003f2a3849: mov    r11d,DWORD PTR [r9+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@4 (line 2899)
                                                ; implicit exception: dispatches to 0x00007f003f2a395d
  0x00007f003f2a384d: mov    rbx,r11
  0x00007f003f2a3850: movabs rdx,0x7c00001f8    ;   {metadata({type array char})}
  0x00007f003f2a385a: movsxd rbx,ebx
  0x00007f003f2a385d: mov    rdi,rbx
  0x00007f003f2a3860: cmp    rbx,0xffffff
  0x00007f003f2a3867: ja     0x00007f003f2a3962
  0x00007f003f2a386d: movabs rsi,0x17
  0x00007f003f2a3877: lea    rsi,[rsi+rbx*2]
  0x00007f003f2a387b: and    rsi,0xfffffffffffffff8
  0x00007f003f2a387f: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2a3883: lea    rsi,[rax+rsi*1]
  0x00007f003f2a3887: cmp    rsi,QWORD PTR [r15+0x70]
  0x00007f003f2a388b: ja     0x00007f003f2a3962
  0x00007f003f2a3891: mov    QWORD PTR [r15+0x60],rsi
  0x00007f003f2a3895: sub    rsi,rax
  0x00007f003f2a3898: mov    QWORD PTR [rax],0x1
  0x00007f003f2a389f: mov    rcx,rdx
  0x00007f003f2a38a2: shr    rcx,0x3
  0x00007f003f2a38a6: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2a38a9: mov    DWORD PTR [rax+0xc],ebx
  0x00007f003f2a38ac: sub    rsi,0x10
  0x00007f003f2a38b0: je     0x00007f003f2a38c7
  0x00007f003f2a38b6: xor    rbx,rbx
  0x00007f003f2a38b9: shr    rsi,0x3
  0x00007f003f2a38bd: mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x00007f003f2a38c2: dec    rsi
  0x00007f003f2a38c5: jne    0x00007f003f2a38bd  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@5 (line 2899)

  0x00007f003f2a38c7: movabs rsi,0x7f0038a57c38  ;   {metadata(method data for {method} {0x00007f003876e640} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a38d1: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2a38d9: mov    rsi,r9
  0x00007f003f2a38dc: mov    edx,0x0
  0x00007f003f2a38e1: mov    rcx,rax
  0x00007f003f2a38e4: mov    r8d,0x0
  0x00007f003f2a38ea: mov    r9,r11
  0x00007f003f2a38ed: mov    QWORD PTR [rsp+0x30],rax
  0x00007f003f2a38f2: lea    rdi,[r8+r9*1]
  0x00007f003f2a38f6: cmp    edi,DWORD PTR [rcx+0xc]
  0x00007f003f2a38f9: ja     0x00007f003f2a396c
  0x00007f003f2a38ff: movsxd rdx,edx
  0x00007f003f2a3902: movsxd r8,r8d
  0x00007f003f2a3905: lea    rdi,[rsi+rdx*2+0x10]
  0x00007f003f2a390a: lea    rsi,[rcx+r8*2+0x10]
  0x00007f003f2a390f: mov    rdx,r9
  0x00007f003f2a3912: test   esp,0xf
  0x00007f003f2a3918: 
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.runtime.JVMCIRuntime from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
je     0x00007f003f2a3930
  0x00007f003f2a391e: sub    rsp,0x8
  0x00007f003f2a3922: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007f003f2a3927: add    rsp,0x8
  0x00007f003f2a392b: jmp    0x00007f003f2a3935
  0x00007f003f2a3930: call   Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@20 (line 2900)
                                                ;   {runtime_call}
  0x00007f003f2a3935: mov    rax,QWORD PTR [rsp+0x30]
  0x00007f003f2a393a: add    rsp,0x40
  0x00007f003f2a393e: pop    rbp
  0x00007f003f2a393f: test   DWORD PTR [rip+0x1b11e7bb],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a3945: ret    
  0x00007f003f2a3946: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2a394b: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a3953: call   0x00007f003f27d5e0  ; OopMap{r8=Oop off=376}
                                                ;*synchronization entry
                                                ; - java.lang.String::toCharArray@-1 (line 2899)
                                                ;   {runtime_call}
  0x00007f003f2a3958: jmp    0x00007f003f2a3841
  0x00007f003f2a395d: call   0x00007f003f279000  ; OopMap{r8=Oop r9=Oop off=386}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@4 (line 2899)
                                                ;   {runtime_call}
  0x00007f003f2a3962: call   0x00007f003f27a020  ; OopMap{r8=Oop r9=Oop off=391}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@5 (line 2899)
                                                ;   {runtime_call}
  0x00007f003f2a3967: jmp    0x00007f003f2a38c7
  0x00007f003f2a396c: nop
  0x00007f003f2a396d: nop
  0x00007f003f2a396e: nop
  0x00007f003f2a396f: call   0x00007f003f1c5160  ; OopMap{[48]=Oop off=404}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@20 (line 2900)
                                                ;   {static_call}
  0x00007f003f2a3974: jmp    0x00007f003f2a3935
  0x00007f003f2a3976: nop
  0x00007f003f2a3977: nop
  0x00007f003f2a3978: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a397f: movabs r10,0x0
  0x00007f003f2a3989: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a3990: movabs r10,0x0
  0x00007f003f2a399a: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a39a1: add    rsp,0x40
  0x00007f003f2a39a5: pop    rbp
  0x00007f003f2a39a6: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a39ab: hlt    
  0x00007f003f2a39ac: hlt    
  0x00007f003f2a39ad: hlt    
  0x00007f003f2a39ae: hlt    
  0x00007f003f2a39af: hlt    
  0x00007f003f2a39b0: hlt    
  0x00007f003f2a39b1: hlt    
  0x00007f003f2a39b2: hlt    
  0x00007f003f2a39b3: hlt    
  0x00007f003f2a39b4: hlt    
  0x00007f003f2a39b5: hlt    
  0x00007f003f2a39b6: hlt    
  0x00007f003f2a39b7: hlt    
  0x00007f003f2a39b8: hlt    
  0x00007f003f2a39b9: hlt    
  0x00007f003f2a39ba: hlt    
  0x00007f003f2a39bb: hlt    
  0x00007f003f2a39bc: hlt    
  0x00007f003f2a39bd: hlt    
  0x00007f003f2a39be: hlt    
  0x00007f003f2a39bf: hlt    
[Stub Code]
  0x00007f003f2a39c0: nop                       ;   {no_reloc}
  0x00007f003f2a39c1: nop
  0x00007f003f2a39c2: nop
  0x00007f003f2a39c3: nop
  0x00007f003f2a39c4: nop
  0x00007f003f2a39c5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2a39cf: jmp    0x00007f003f2a39cf  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2a39d4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2a39d9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a39de: sub    rsp,0x80
  0x00007f003f2a39e5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a39ea: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a39ef: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a39f4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a39f9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a39fe: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a3a03: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a3a08: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a3a0d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a3a12: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a3a17: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a3a1c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a3a21: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a3a26: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a3a2b: mov    QWORD PTR [rsp],r15
  0x00007f003f2a3a2f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a3a39: movabs rsi,0x7f003f2a39d9  ;   {internal_word}
  0x00007f003f2a3a43: mov    rdx,rsp
  0x00007f003f2a3a46: and    rsp,0xfffffffffffffff0
  0x00007f003f2a3a4a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a3a4f: hlt    
[Deopt Handler Code]
  0x00007f003f2a3a50: movabs r10,0x7f003f2a3a50  ;   {section_word}
  0x00007f003f2a3a5a: push   r10
  0x00007f003f2a3a5c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a3a61: hlt    
  0x00007f003f2a3a62: hlt    
  0x00007f003f2a3a63: hlt    
  0x00007f003f2a3a64: hlt    
  0x00007f003f2a3a65: hlt    
  0x00007f003f2a3a66: hlt    
  0x00007f003f2a3a67: hlt    
<nmethod compile_id='64' compiler='C1' level='3' entry='0x00007f003f2a37e0' size='1328' address='0x00007f003f2a3650' relocation_offset='312' insts_offset='400' stub_offset='880' scopes_data_offset='1056' scopes_pcs_offset='1128' dependencies_offset='1304' nul_chk_table_offset='1312' metadata_offset='1048' method='java/lang/String toCharArray ()[C' bytes='25' count='418' iicount='418' stamp='0.255'/>
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.HotSpotJVMCIRuntimeProvider from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotJVMCIRuntime from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/StringBuilder.append  [0x00007f003f2a3d00, 0x00007f003f2a3e88]  392 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00387ef360} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/StringBuilder&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2a3d00: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2a3d04: shl    r10,0x3
  0x00007f003f2a3d08: cmp    r10,rax
  0x00007f003f2a3d0b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2a3d11: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2a3d1c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2a3d20: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a3d27: push   rbp
  0x00007f003f2a3d28: sub    rsp,0x30
  0x00007f003f2a3d2c: movabs rdi,0x7f0038a55fc8  ;   {metadata(method data for {method} {0x00007f00387ef360} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f2a3d36: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2a3d3c: add    ebx,0x8
  0x00007f003f2a3d3f: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2a3d45: movabs rdi,0x7f00387ef360  ;   {metadata({method} {0x00007f00387ef360} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f2a3d4f: and    ebx,0x1ff8
  0x00007f003f2a3d55: cmp    ebx,0x0
  0x00007f003f2a3d58: je     0x00007f003f2a3d95  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@0 (line 136)

  0x00007f003f2a3d5e: mov    rdi,rsi
  0x00007f003f2a3d61: movabs rbx,0x7f0038a55fc8  ;   {metadata(method data for {method} {0x00007f00387ef360} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f2a3d6b: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f2a3d73: mov    rdi,rsi
  0x00007f003f2a3d76: mov    rsi,rdi            ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x00007f003f2a3d79: mov    QWORD PTR [rsp+0x20],rdi
  0x00007f003f2a3d7e: nop
  0x00007f003f2a3d7f: call   0x00007f003f1c4d60  ; OopMap{[32]=Oop off=132}
                                                ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {optimized virtual_call}
  0x00007f003f2a3d84: mov    rax,QWORD PTR [rsp+0x20]
  0x00007f003f2a3d89: add    rsp,0x30
  0x00007f003f2a3d8d: pop    rbp
  0x00007f003f2a3d8e: test   DWORD PTR [rip+0x1b11e36c],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a3d94: ret    
  0x00007f003f2a3d95: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2a3d9a: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a3da2: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop off=167}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ;   {runtime_call}
  0x00007f003f2a3da7: jmp    0x00007f003f2a3d5e
  0x00007f003f2a3da9: nop
  0x00007f003f2a3daa: nop
  0x00007f003f2a3dab: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a3db2: movabs r10,0x0
  0x00007f003f2a3dbc: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a3dc3: movabs r10,0x0
  0x00007f003f2a3dcd: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a3dd4: add    rsp,0x30
  0x00007f003f2a3dd8: pop    rbp
  0x00007f003f2a3dd9: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a3dde: hlt    
  0x00007f003f2a3ddf: hlt    
[Stub Code]
  0x00007f003f2a3de0: nop                       ;   {no_reloc}
  0x00007f003f2a3de1: nop
  0x00007f003f2a3de2: nop
  0x00007f003f2a3de3: nop
  0x00007f003f2a3de4: nop
  0x00007f003f2a3de5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2a3def: jmp    0x00007f003f2a3def  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2a3df4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2a3df9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a3dfe: sub    rsp,0x80
  0x00007f003f2a3e05: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a3e0a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a3e0f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a3e14: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a3e19: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a3e1e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a3e23: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a3e28: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a3e2d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a3e32: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a3e37: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a3e3c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a3e41: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a3e46: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a3e4b: mov    QWORD PTR [rsp],r15
  0x00007f003f2a3e4f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a3e59: movabs rsi,0x7f003f2a3df9  ;   {internal_word}
  0x00007f003f2a3e63: mov    rdx,rsp
  0x00007f003f2a3e66: and    rsp,0xfffffffffffffff0
  0x00007f003f2a3e6a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a3e6f: hlt    
[Deopt Handler Code]
  0x00007f003f2a3e70: movabs r10,0x7f003f2a3e70  ;   {section_word}
  0x00007f003f2a3e7a: push   r10
  0x00007f003f2a3e7c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a3e81: hlt    
  0x00007f003f2a3e82: hlt    
  0x00007f003f2a3e83: hlt    
  0x00007f003f2a3e84: hlt    
  0x00007f003f2a3e85: hlt    
  0x00007f003f2a3e86: hlt    
  0x00007f003f2a3e87: hlt    
<nmethod compile_id='63' compiler='C1' level='3' entry='0x00007f003f2a3d00' size='912' address='0x00007f003f2a3b90' relocation_offset='312' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='808' dependencies_offset='904' metadata_offset='760' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='502' iicount='502' stamp='0.255'/>
<writer thread='139637818533632'/>
<task_queued compile_id='67' method='java/util/concurrent/ConcurrentHashMap setTabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V' bytes='19' count='384' iicount='384' level='3' stamp='0.255' comment='tiered' hot_count='384'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/Character.toLowerCase  [0x00007f003f2a40e0, 0x00007f003f2a4478]  920 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.meta.SpeculationLog from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
  # {method} {0x00007f0038816ab0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2a40e0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a40e7: push   rbp
  0x00007f003f2a40e8: sub    rsp,0x30
  0x00007f003f2a40ec: movabs rdi,0x7f0038a57a20  ;   {metadata(method data for {method} {0x00007f0038816ab0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2a40f6: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2a40fc: add    ebx,0x8
  0x00007f003f2a40ff: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2a4105: movabs rdi,0x7f0038816ab0  ;   {metadata({method} {0x00007f0038816ab0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2a410f: and    ebx,0x1ff8
  0x00007f003f2a4115: cmp    ebx,0x0
  0x00007f003f2a4118: je     0x00007f003f2a4358  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@0 (line 6338)

  0x00007f003f2a411e: movabs rdi,0x7f0038a57a20  ;   {metadata(method data for {method} {0x00007f0038816ab0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2a4128: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f2a4130: mov    rdi,rsi
  0x00007f003f2a4133: mov    rsi,rdi            ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x00007f003f2a4136: mov    DWORD PTR [rsp+0x20],edi
  0x00007f003f2a413a: nop
  0x00007f003f2a413b: nop
  0x00007f003f2a413c: nop
  0x00007f003f2a413d: nop
  0x00007f003f2a413e: nop
  0x00007f003f2a413f: call   0x00007f003f1c5160  ; OopMap{off=100}
                                                ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ;   {static_call}
  0x00007f003f2a4144: cmp    rax,QWORD PTR [rax]  ; implicit exception: dispatches to 0x00007f003f2a436f
  0x00007f003f2a4147: mov    rdx,rax
  0x00007f003f2a414a: movabs rsi,0x7f0038a57a20  ;   {metadata(method data for {method} {0x00007f0038816ab0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2a4154: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2a4157: shl    rdx,0x3
  0x00007f003f2a415b: cmp    rdx,QWORD PTR [rsi+0x150]
  0x00007f003f2a4162: jne    0x00007f003f2a4171
  0x00007f003f2a4164: add    QWORD PTR [rsi+0x158],0x1
  0x00007f003f2a416c: jmp    0x00007f003f2a4333
  0x00007f003f2a4171: cmp    rdx,QWORD PTR [rsi+0x160]
  0x00007f003f2a4178: jne    0x00007f003f2a4187
  0x00007f003f2a417a: add    QWORD PTR [rsi+0x168],0x1
  0x00007f003f2a4182: jmp    0x00007f003f2a4333
  0x00007f003f2a4187: cmp    rdx,QWORD PTR [rsi+0x170]
  0x00007f003f2a418e: jne    0x00007f003f2a419d
  0x00007f003f2a4190: add    QWORD PTR [rsi+0x178],0x1
  0x00007f003f2a4198: jmp    0x00007f003f2a4333
  0x00007f003f2a419d: cmp    rdx,QWORD PTR [rsi+0x180]
  0x00007f003f2a41a4: jne    0x00007f003f2a41b3
  0x00007f003f2a41a6: add    QWORD PTR [rsi+0x188],0x1
  0x00007f003f2a41ae: jmp    0x00007f003f2a4333
  0x00007f003f2a41b3: cmp    rdx,QWORD PTR [rsi+0x190]
  0x00007f003f2a41ba: jne    0x00007f003f2a41c9
  0x00007f003f2a41bc: add    QWORD PTR [rsi+0x198],0x1
  0x00007f003f2a41c4: jmp    0x00007f003f2a4333
  0x00007f003f2a41c9: cmp    rdx,QWORD PTR [rsi+0x1a0]
  0x00007f003f2a41d0: jne    0x00007f003f2a41df
  0x00007f003f2a41d2: add    QWORD PTR [rsi+0x1a8],0x1
  0x00007f003f2a41da: jmp    0x00007f003f2a4333
  0x00007f003f2a41df: cmp    rdx,QWORD PTR [rsi+0x1b0]
  0x00007f003f2a41e6: jne    0x00007f003f2a41f5
  0x00007f003f2a41e8: add    QWORD PTR [rsi+0x1b8],0x1
  0x00007f003f2a41f0: jmp    0x00007f003f2a4333
  0x00007f003f2a41f5: cmp    rdx,QWORD PTR [rsi+0x1c0]
  0x00007f003f2a41fc: jne    0x00007f003f2a420b
  0x00007f003f2a41fe: add    QWORD PTR [rsi+0x1c8],0x1
  0x00007f003f2a4206: jmp    0x00007f003f2a4333
  0x00007f003f2a420b: cmp    QWORD PTR [rsi+0x150],0x0
  0x00007f003f2a4216: jne    0x00007f003f2a422f
  0x00007f003f2a4218: mov    QWORD PTR [rsi+0x150],rdx
  0x00007f003f2a421f: mov    QWORD PTR [rsi+0x158],0x1
  0x00007f003f2a422a: jmp    0x00007f003f2a4333
  0x00007f003f2a422f: cmp    QWORD PTR [rsi+0x160],0x0
  0x00007f003f2a423a: jne    0x00007f003f2a4253
  0x00007f003f2a423c: mov    QWORD PTR [rsi+0x160],rdx
  0x00007f003f2a4243: mov    QWORD PTR [rsi+0x168],0x1
  0x00007f003f2a424e: jmp    0x00007f003f2a4333
  0x00007f003f2a4253: cmp    QWORD PTR [rsi+0x170],0x0
  0x00007f003f2a425e: jne    0x00007f003f2a4277
  0x00007f003f2a4260: mov    QWORD PTR [rsi+0x170],rdx
  0x00007f003f2a4267: mov    QWORD PTR [rsi+0x178],0x1
  0x00007f003f2a4272: jmp    0x00007f003f2a4333
  0x00007f003f2a4277: cmp    QWORD PTR [rsi+0x180],0x0
  0x00007f003f2a4282: jne    0x00007f003f2a429b
  0x00007f003f2a4284: mov    QWORD PTR [rsi+0x180],rdx
  0x00007f003f2a428b: mov    QWORD PTR [rsi+0x188],0x1
  0x00007f003f2a4296: jmp    0x00007f003f2a4333
  0x00007f003f2a429b: cmp    QWORD PTR [rsi+0x190],0x0
  0x00007f003f2a42a6: jne    0x00007f003f2a42bf
  0x00007f003f2a42a8: mov    QWORD PTR [rsi+0x190],rdx
  0x00007f003f2a42af: mov    QWORD PTR [rsi+0x198],0x1
  0x00007f003f2a42ba: jmp    0x00007f003f2a4333
  0x00007f003f2a42bf: cmp    QWORD PTR [rsi+0x1a0],0x0
  0x00007f003f2a42ca: jne    0x00007f003f2a42e3
  0x00007f003f2a42cc: mov    QWORD PTR [rsi+0x1a0],rdx
  0x00007f003f2a42d3: mov    QWORD PTR [rsi+0x1a8],0x1
  0x00007f003f2a42de: jmp    0x00007f003f2a4333
  0x00007f003f2a42e3: cmp    QWORD PTR [rsi+0x1b0],0x0
  0x00007f003f2a42ee: jne    0x00007f003f2a4307
  0x00007f003f2a42f0: mov    QWORD PTR [rsi+0x1b0],rdx
  0x00007f003f2a42f7: mov    QWORD PTR [rsi+0x1b8],0x1
  0x00007f003f2a4302: jmp    0x00007f003f2a4333
  0x00007f003f2a4307: cmp    QWORD PTR [rsi+0x1c0],0x0
  0x00007f003f2a4312: jne    0x00007f003f2a432b
  0x00007f003f2a4314: mov    QWORD PTR [rsi+0x1c0],rdx
  0x00007f003f2a431b: mov    QWORD PTR [rsi+0x1c8],0x1
  0x00007f003f2a4326: jmp    0x00007f003f2a4333
  0x00007f003f2a432b: add    QWORD PTR [rsi+0x140],0x1
  0x00007f003f2a4333: mov    edx,DWORD PTR [rsp+0x20]
  0x00007f003f2a4337: mov    rsi,rax            ;*invokevirtual toLowerCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x00007f003f2a433a: nop
  0x00007f003f2a433b: nop
  0x00007f003f2a433c: nop
  0x00007f003f2a433d: movabs rax,0xffffffffffffffff
  0x00007f003f2a4347: call   0x00007f003f1c4f60  ; OopMap{off=620}
                                                ;*invokevirtual toLowerCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {virtual_call}
  0x00007f003f2a434c: add    rsp,0x30
  0x00007f003f2a4350: pop    rbp
  0x00007f003f2a4351: test   DWORD PTR [rip+0x1b11dda9],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a4357: ret    
  0x00007f003f2a4358: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2a435d: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a4365: call   0x00007f003f27d5e0  ; OopMap{off=650}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ;   {runtime_call}
  0x00007f003f2a436a: jmp    0x00007f003f2a411e
  0x00007f003f2a436f: call   0x00007f003f279000  ; OopMap{rax=Oop off=660}
                                                ;*invokevirtual toLowerCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {runtime_call}
  0x00007f003f2a4374: nop
  0x00007f003f2a4375: nop
  0x00007f003f2a4376: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a437d: movabs r10,0x0
  0x00007f003f2a4387: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a438e: movabs r10,0x0
  0x00007f003f2a4398: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a439f: add    rsp,0x30
  0x00007f003f2a43a3: pop    rbp
  0x00007f003f2a43a4: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a43a9: hlt    
  0x00007f003f2a43aa: hlt    
  0x00007f003f2a43ab: hlt    
  0x00007f003f2a43ac: hlt    
  0x00007f003f2a43ad: hlt    
  0x00007f003f2a43ae: hlt    
  0x00007f003f2a43af: hlt    
  0x00007f003f2a43b0: hlt    
  0x00007f003f2a43b1: hlt    
  0x00007f003f2a43b2: hlt    
  0x00007f003f2a43b3: hlt    
  0x00007f003f2a43b4: hlt    
  0x00007f003f2a43b5: hlt    
  0x00007f003f2a43b6: hlt    
  0x00007f003f2a43b7: hlt    
  0x00007f003f2a43b8: hlt    
  0x00007f003f2a43b9: hlt    
  0x00007f003f2a43ba: hlt    
  0x00007f003f2a43bb: hlt    
  0x00007f003f2a43bc: hlt    
  0x00007f003f2a43bd: hlt    
  0x00007f003f2a43be: hlt    
  0x00007f003f2a43bf: hlt    
[Stub Code]
  0x00007f003f2a43c0: nop                       ;   {no_reloc}
  0x00007f003f2a43c1: nop
  0x00007f003f2a43c2: nop
  0x00007f003f2a43c3: nop
  0x00007f003f2a43c4: nop
  0x00007f003f2a43c5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2a43cf: jmp    0x00007f003f2a43cf  ;   {runtime_call}
  0x00007f003f2a43d4: nop
  0x00007f003f2a43d5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2a43df: jmp    0x00007f003f2a43df  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2a43e4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2a43e9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a43ee: sub    rsp,0x80
  0x00007f003f2a43f5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a43fa: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a43ff: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a4404: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a4409: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a440e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a4413: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a4418: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a441d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a4422: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a4427: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a442c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a4431: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a4436: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a443b: mov    QWORD PTR [rsp],r15
  0x00007f003f2a443f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a4449: movabs rsi,0x7f003f2a43e9  ;   {internal_word}
  0x00007f003f2a4453: mov    rdx,rsp
  0x00007f003f2a4456: and    rsp,0xfffffffffffffff0
  0x00007f003f2a445a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a445f: hlt    
[Deopt Handler Code]
  0x00007f003f2a4460: movabs r10,0x7f003f2a4460  ;   {section_word}
  0x00007f003f2a446a: push   r10
  0x00007f003f2a446c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a4471: hlt    
  0x00007f003f2a4472: hlt    
  0x00007f003f2a4473: hlt    
  0x00007f003f2a4474: hlt    
  0x00007f003f2a4475: hlt    
  0x00007f003f2a4476: hlt    
  0x00007f003f2a4477: hlt    
<nmethod compile_id='61' compiler='C1' level='3' entry='0x00007f003f2a40e0' size='1544' address='0x00007f003f2a3f50' relocation_offset='312' insts_offset='400' stub_offset='1136' scopes_data_offset='1328' scopes_pcs_offset='1376' dependencies_offset='1520' nul_chk_table_offset='1528' metadata_offset='1320' method='java/lang/Character toLowerCase (I)I' bytes='9' count='423' iicount='423' stamp='0.256'/>
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.HotSpotSpeculationLog from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.setTabAt  [0x00007f003f2a4700, 0x00007f003f2a4870]  368 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f0038948138} &apos;setTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rsi:rsi   = &apos;[Ljava/util/concurrent/ConcurrentHashMap$Node;&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2a4700: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a4707: push   rbp
  0x00007f003f2a4708: sub    rsp,0x40
  0x00007f003f2a470c: mov    rdi,rcx
  0x00007f003f2a470f: movabs rcx,0x7f0038a57db8  ;   {metadata(method data for {method} {0x00007f0038948138} &apos;setTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2a4719: mov    ebx,DWORD PTR [rcx+0xfc]
  0x00007f003f2a471f: add    ebx,0x8
  0x00007f003f2a4722: mov    DWORD PTR [rcx+0xfc],ebx
  0x00007f003f2a4728: movabs rcx,0x7f0038948138  ;   {metadata({method} {0x00007f0038948138} &apos;setTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2a4732: and    ebx,0x1ff8
  0x00007f003f2a4738: cmp    ebx,0x0
  0x00007f003f2a473b: je     0x00007f003f2a478b  ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::setTabAt@0 (line 764)

  0x00007f003f2a4741: movsxd rdx,edx
  0x00007f003f2a4744: mov    ecx,0x2
  0x00007f003f2a4749: shl    rdx,cl
  0x00007f003f2a474c: movabs r10,0x10
  0x00007f003f2a4756: add    rdx,r10
  0x00007f003f2a4759: mov    r10,rdi
  0x00007f003f2a475c: shr    r10,0x3
  0x00007f003f2a4760: mov    DWORD PTR [rsi+rdx*1],r10d
  0x00007f003f2a4764: lea    rsi,[rsi+rdx*1]
  0x00007f003f2a4768: shr    rsi,0x9
  0x00007f003f2a476c: movabs rdi,0x7f003ae7c000
  0x00007f003f2a4776: mov    BYTE PTR [rsi+rdi*1],0x0
  0x00007f003f2a477a: lock add DWORD PTR [rsp],0x0
  0x00007f003f2a477f: add    rsp,0x40
  0x00007f003f2a4783: pop    rbp
  0x00007f003f2a4784: test   DWORD PTR [rip+0x1b11d976],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a478a: ret    
  0x00007f003f2a478b: mov    QWORD PTR [rsp+0x8],rcx
  0x00007f003f2a4790: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a4798: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdi=Oop off=157}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::setTabAt@-1 (line 764)
                                                ;   {runtime_call}
  0x00007f003f2a479d: jmp    0x00007f003f2a4741
  0x00007f003f2a479f: nop
  0x00007f003f2a47a0: nop
  0x00007f003f2a47a1: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a47a8: movabs r10,0x0
  0x00007f003f2a47b2: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a47b9: movabs r10,0x0
  0x00007f003f2a47c3: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a47ca: add    rsp,0x40
  0x00007f003f2a47ce: pop    rbp
  0x00007f003f2a47cf: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a47d4: hlt    
  0x00007f003f2a47d5: hlt    
  0x00007f003f2a47d6: hlt    
  0x00007f003f2a47d7: hlt    
  0x00007f003f2a47d8: hlt    
  0x00007f003f2a47d9: hlt    
  0x00007f003f2a47da: hlt    
  0x00007f003f2a47db: hlt    
  0x00007f003f2a47dc: hlt    
  0x00007f003f2a47dd: hlt    
  0x00007f003f2a47de: hlt    
  0x00007f003f2a47df: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2a47e0: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2a47e5: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a47ea: sub    rsp,0x80
  0x00007f003f2a47f1: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a47f6: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a47fb: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a4800: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a4805: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a480a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a480f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a4814: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a4819: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a481e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a4823: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a4828: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a482d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a4832: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a4837: mov    QWORD PTR [rsp],r15
  0x00007f003f2a483b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a4845: movabs rsi,0x7f003f2a47e5  ;   {internal_word}
  0x00007f003f2a484f: mov    rdx,rsp
  0x00007f003f2a4852: and    rsp,0xfffffffffffffff0
  0x00007f003f2a4856: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a485b: hlt    
[Deopt Handler Code]
  0x00007f003f2a485c: movabs r10,0x7f003f2a485c  ;   {section_word}
  0x00007f003f2a4866: push   r10
  0x00007f003f2a4868: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a486d: hlt    
  0x00007f003f2a486e: hlt    
  0x00007f003f2a486f: hlt    
<nmethod compile_id='67' compiler='C1' level='3' entry='0x00007f003f2a4700' size='840' address='0x00007f003f2a4590' relocation_offset='312' insts_offset='368' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='768' dependencies_offset='832' metadata_offset='736' method='java/util/concurrent/ConcurrentHashMap setTabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V' bytes='19' count='426' iicount='426' stamp='0.257'/>
<writer thread='139637818533632'/>
<task_queued compile_id='68' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='332' iicount='332' level='3' stamp='0.257' comment='tiered' hot_count='332'/>
[Loaded jdk.vm.ci.code.CompilationRequestResult from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotCompilationRequestResult from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='69' method='java/nio/charset/CharsetEncoder reset ()Ljava/nio/charset/CharsetEncoder;' bytes='11' count='384' iicount='384' level='3' stamp='0.257' comment='tiered' hot_count='384'/>
<task_queued compile_id='70' method='java/nio/charset/CharsetEncoder implReset ()V' bytes='1' count='384' iicount='384' level='3' stamp='0.257' comment='tiered' hot_count='384'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/CharacterDataLatin1.toLowerCase  [0x00007f003f2a4aa0, 0x00007f003f2a4d30]  656 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00389617b0} &apos;t
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.VMField from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
oLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rsi:rsi   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2a4aa0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2a4aa4: shl    r10,0x3
  0x00007f003f2a4aa8: cmp    r10,rax
  0x00007f003f2a4aab: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2a4ab1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2a4abc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2a4ac0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a4ac7: push   rbp
  0x00007f003f2a4ac8: sub    rsp,0x40
  0x00007f003f2a4acc: movabs rax,0x7f0038a57fd0  ;   {metadata(method data for {method} {0x00007f00389617b0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f2a4ad6: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f2a4adc: add    edi,0x8
  0x00007f003f2a4adf: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f2a4ae5: movabs rax,0x7f00389617b0  ;   {metadata({method} {0x00007f00389617b0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f2a4aef: and    edi,0x1ff8
  0x00007f003f2a4af5: cmp    edi,0x0
  0x00007f003f2a4af8: je     0x00007f003f2a4c17  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@0 (line 133)

  0x00007f003f2a4afe: movabs rax,0x7f0038a57fd0  ;   {metadata(method data for {method} {0x00007f00389617b0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f2a4b08: movabs r10,0x7c0035d98    ;   {metadata(&apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f2a4b12: mov    QWORD PTR [rax+0x140],r10
  0x00007f003f2a4b19: add    QWORD PTR [rax+0x148],0x1
  0x00007f003f2a4b21: movabs rax,0x7f0038a4f8d0  ;   {metadata(method data for {method} {0x00007f0038960e08} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f2a4b2b: mov    esi,DWORD PTR [rax+0xfc]
  0x00007f003f2a4b31: add    esi,0x8
  0x00007f003f2a4b34: mov    DWORD PTR [rax+0xfc],esi
  0x00007f003f2a4b3a: movabs rax,0x7f0038960e08  ;   {metadata({method} {0x00007f0038960e08} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f2a4b44: and    esi,0x7ffff8
  0x00007f003f2a4b4a: cmp    esi,0x0
  0x00007f003f2a4b4d: je     0x00007f003f2a4c2e
  0x00007f003f2a4b53: mov    rax,rdx
  0x00007f003f2a4b56: and    eax,0xffff
  0x00007f003f2a4b5c: movabs rsi,0x670bc4928    ;   {oop([I)}
  0x00007f003f2a4b66: movsxd rdi,eax
  0x00007f003f2a4b69: cmp    eax,DWORD PTR [rsi+0xc]  ; implicit exception: dispatches to 0x00007f003f2a4c45
  0x00007f003f2a4b6c: jae    0x00007f003f2a4c4f
  0x00007f003f2a4b72: mov    eax,DWORD PTR [rsi+rdi*4+0x10]
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x00007f003f2a4b76: mov    rsi,rax
  0x00007f003f2a4b79: and    esi,0x20000
  0x00007f003f2a4b7f: cmp    esi,0x0
  0x00007f003f2a4b82: movabs rsi,0x7f0038a57fd0  ;   {metadata(method data for {method} {0x00007f00389617b0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f2a4b8c: movabs rdi,0x1c8
  0x00007f003f2a4b96: je     0x00007f003f2a4ba6
  0x00007f003f2a4b9c: movabs rdi,0x1d8
  0x00007f003f2a4ba6: mov    rbx,QWORD PTR [rsi+rdi*1]
  0x00007f003f2a4baa: lea    rbx,[rbx+0x1]
  0x00007f003f2a4bae: mov    QWORD PTR [rsi+rdi*1],rbx
  0x00007f003f2a4bb2: je     0x00007f003f2a4c08  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)

  0x00007f003f2a4bb8: mov    rsi,rax
  0x00007f003f2a4bbb: and    esi,0x7fc0000
  0x00007f003f2a4bc1: cmp    esi,0x7fc0000
  0x00007f003f2a4bc7: movabs rsi,0x7f0038a57fd0  ;   {metadata(method data for {method} {0x00007f00389617b0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f2a4bd1: movabs rdi,0x1e8
  0x00007f003f2a4bdb: je     0x00007f003f2a4beb
  0x00007f003f2a4be1: movabs rdi,0x1f8
  0x00007f003f2a4beb: mov    rbx,QWORD PTR [rsi+rdi*1]
  0x00007f003f2a4bef: lea    rbx,[rbx+0x1]
  0x00007f003f2a4bf3: mov    QWORD PTR [rsi+rdi*1],rbx
  0x00007f003f2a4bf7: je     0x00007f003f2a4c08  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x00007f003f2a4bfd: shl    eax,0x5
  0x00007f003f2a4c00: sar    eax,0x17
  0x00007f003f2a4c03: add    eax,edx
  0x00007f003f2a4c05: mov    rdx,rax            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)

  0x00007f003f2a4c08: mov    rax,rdx
  0x00007f003f2a4c0b: add    rsp,0x40
  0x00007f003f2a4c0f: pop    rbp
  0x00007f003f2a4c10: test   DWORD PTR [rip+0x1b11d4ea],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a4c16: ret    
  0x00007f003f2a4c17: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2a4c1c: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a4c24: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=393}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 133)
                                                ;   {runtime_call}
  0x00007f003f2a4c29: jmp    0x00007f003f2a4afe
  0x00007f003f2a4c2e: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2a4c33: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a4c3b: call   0x00007f003f27d5e0  ; OopMap{off=416}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00007f003f2a4c40: jmp    0x00007f003f2a4b53
  0x00007f003f2a4c45: call   0x00007f003f279000  ; OopMap{rsi=Oop off=426}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00007f003f2a4c4a: call   0x00007f003f279000  ; OopMap{rsi=Oop off=431}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00007f003f2a4c4f: mov    QWORD PTR [rsp],rax
  0x00007f003f2a4c53: call   0x00007f003f278940  ; OopMap{rsi=Oop off=440}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00007f003f2a4c58: nop
  0x00007f003f2a4c59: nop
  0x00007f003f2a4c5a: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a4c61: movabs r10,0x0
  0x00007f003f2a4c6b: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a4c72: movabs r10,0x0
  0x00007f003f2a4c7c: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a4c83: add    rsp,0x40
  0x00007f003f2a4c87: pop    rbp
  0x00007f003f2a4c88: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a4c8d: hlt    
  0x00007f003f2a4c8e: hlt    
  0x00007f003f2a4c8f: hlt    
  0x00007f003f2a4c90: hlt    
  0x00007f003f2a4c91: hlt    
  0x00007f003f2a4c92: hlt    
  0x00007f003f2a4c93: hlt    
  0x00007f003f2a4c94: hlt    
  0x00007f003f2a4c95: hlt    
  0x00007f003f2a4c96: hlt    
  0x00007f003f2a4c97: hlt    
  0x00007f003f2a4c98: hlt    
  0x00007f003f2a4c99: hlt    
  0x00007f003f2a4c9a: hlt    
  0x00007f003f2a4c9b: hlt    
  0x00007f003f2a4c9c: hlt    
  0x00007f003f2a4c9d: hlt    
  0x00007f003f2a4c9e: hlt    
  0x00007f003f2a4c9f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2a4ca0: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2a4ca5: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a4caa: sub    rsp,0x80
  0x00007f003f2a4cb1: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a4cb6: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a4cbb: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a4cc0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a4cc5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a4cca: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a4ccf: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a4cd4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a4cd9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a4cde: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a4ce3: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a4ce8: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a4ced: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a4cf2: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a4cf7: mov    QWORD PTR [rsp],r15
  0x00007f003f2a4cfb: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a4d05: movabs rsi,0x7f003f2a4ca5  ;   {internal_word}
  0x00007f003f2a4d0f: mov    rdx,rsp
  0x00007f003f2a4d12: and    rsp,0xfffffffffffffff0
  0x00007f003f2a4d16: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a4d1b: hlt    
[Deopt Handler Code]
  0x00007f003f2a4d1c: movabs r10,0x7f003f2a4d1c  ;   {section_word}
  0x00007f003f2a4d26: push   r10
  0x00007f003f2a4d28: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a4d2d: hlt    
  0x00007f003f2a4d2e: hlt    
  0x00007f003f2a4d2f: hlt    
<nmethod compile_id='62' compiler='C1' level='3' entry='0x00007f003f2a4aa0' size='1408' address='0x00007f003f2a4910' relocation_offset='312' insts_offset='400' stub_offset='912' scopes_data_offset='1080' scopes_pcs_offset='1184' dependencies_offset='1376' nul_chk_table_offset='1384' metadata_offset='1056' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='435' iicount='435' stamp='0.258'/>
<writer thread='139637818533632'/>
<task_queued compile_id='71' method='java/lang/AbstractStringBuilder newCapacity (I)I' bytes='39' count='428' iicount='428' level='3' stamp='0.258' comment='tiered' hot_count='428'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/nio/charset/CharsetEncoder.reset  [0x00007f003f2a5040, 0x00007f003f2a53d0]  912 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00388e0358} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2a5040: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2a5044: shl    r10,0x3
  0x00007f003f2a5048: cmp    r10,rax
  0x00007f003f2a504b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2a5051: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2a505c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2a5060: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a5067: push   rbp
  0x00007f003f2a5068: sub    rsp,0x30
  0x00007f003f2a506c: movabs rax,0x7f0038a58220  ;   {metadata(method data for {method} {0x00007f00388e0358} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2a5076: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f2a507c: add    edi,0x8
  0x00007f003f2a507f: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f2a5085: movabs rax,0x7f00388e0358  ;   {metadata({method} {0x00007f00388e0358} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2a508f: and    edi,0x1ff8
  0x00007f003f2a5095: cmp    edi,0x0
  0x00007f003f2a5098: je     0x00007f003f2a52d2  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::reset@0 (line 709)

  0x00007f003f2a509e: mov    rax,rsi
  0x00007f003f2a50a1: movabs rdi,0x7f0038a58220  ;   {metadata(method data for {method} {0x00007f00388e0358} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2a50ab: mov    eax,DWORD PTR [rax+0x8]
  0x00007f003f2a50ae: shl    rax,0x3
  0x00007f003f2a50b2: cmp    rax,QWORD PTR [rdi+0x140]
  0x00007f003f2a50b9: jne    0x00007f003f2a50c8
  0x00007f003f2a50bb: add    QWORD PTR [rdi+0x148],0x1
  0x00007f003f2a50c3: jmp    0x00007f003f2a528a
  0x00007f003f2a50c8: cmp    rax,QWORD PTR [rdi+0x150]
  0x00007f003f2a50cf: jne    0x00007f003f2a50de
  0x00007f003f2a50d1: add    QWORD PTR [rdi+0x158],0x1
  0x00007f003f2a50d9: jmp    0x00007f003f2a528a
  0x00007f003f2a50de: cmp    rax,QWORD PTR [rdi+0x160]
  0x00007f003f2a50e5: jne    0x00007f003f2a50f4
  0x00007f003f2a50e7: add    QWORD PTR [rdi+0x168],0x1
  0x00007f003f2a50ef: jmp    0x00007f003f2a528a
  0x00007f003f2a50f4: cmp    rax,QWORD PTR [rdi+0x170]
  0x00007f003f2a50fb: jne    0x00007f003f2a510a
  0x00007f003f2a50fd: add    QWORD PTR [rdi+0x178],0x1
  0x00007f003f2a5105: jmp    0x00007f003f2a528a
  0x00007f003f2a510a: cmp    rax,QWORD PTR [rdi+0x180]
  0x00007f003f2a5111: jne    0x00007f003f2a5120
  0x00007f003f2a5113: add    QWORD PTR [rdi+0x188],0x1
  0x00007f003f2a511b: jmp    0x00007f003f2a528a
  0x00007f003f2a5120: cmp    rax,QWORD PTR [rdi+0x190]
  0x00007f003f2a5127: jne    0x00007f003f2a5136
  0x00007f003f2a5129: add    QWORD PTR [rdi+0x198],0x1
  0x00007f003f2a5131: jmp    0x00007f003f2a528a
  0x00007f003f2a5136: cmp    rax,QWORD PTR [rdi+0x1a0]
  0x00007f003f2a513d: jne    0x00007f003f2a514c
  0x00007f003f2a513f: add    QWORD PTR [rdi+0x1a8],0x1
  0x00007f003f2a5147: jmp    0x00007f003f2a528a
  0x00007f003f2a514c: cmp    rax,QWORD PTR [rdi+0x1b0]
  0x00007f003f2a5153: jne    0x00007f003f2a5162
  0x00007f003f2a5155: add    QWORD PTR [rdi+0x1b8],0x1
  0x00007f003f2a515d: jmp    0x00007f003f2a528a
  0x00007f003f2a5162: cmp    QWORD PTR [rdi+0x140],0x0
  0x00007f003f2a516d: jne    0x00007f003f2a5186
  0x00007f003f2a516f: mov    QWORD PTR [rdi+0x140],rax
  0x00007f003f2a5176: mov    QWORD PTR [rdi+0x148],0x1
  0x00007f003f2a5181: jmp    0x00007f003f2a528a
  0x00007f003f2a5186: cmp    QWORD PTR [rdi+0x150],0x0
  0x00007f003f2a5191: jne    0x00007f003f2a51aa
  0x00007f003f2a5193: mov    QWORD PTR [rdi+0x150],rax
  0x00007f003f2a519a: mov    QWORD PTR [rdi+0x158],0x1
  0x00007f003f2a51a5: jmp    0x00007f003f2a528a
  0x00007f003f2a51aa: cmp    QWORD PTR [rdi+0x160],0x0
  0x00007f003f2a51b5: jne    0x00007f003f2a51ce
  0x00007f003f2a51b7: mov    QWORD PTR [rdi+0x160],rax
  0x00007f003f2a51be: mov    QWORD PTR [rdi+0x168],0x1
  0x00007f003f2a51c9: jmp    0x00007f003f2a528a
  0x00007f003f2a51ce: cmp    QWORD PTR [rdi+0x170],0x0
  0x00007f003f2a51d9: jne    0x00007f003f2a51f2
  0x00007f003f2a51db: mov    QWORD PTR [rdi+0x170],rax
  0x00007f003f2a51e2: mov    QWORD PTR [rdi+0x178],0x1
  0x00007f003f2a51ed: jmp    0x00007f003f2a528a
  0x00007f003f2a51f2: cmp    QWORD PTR [rdi+0x180],0x0
  0x00007f003f2a51fd: jne    0x00007f003f2a5216
  0x00007f003f2a51ff: mov    QWORD PTR [rdi+0x180],rax
  0x00007f003f2a5206: mov    QWORD PTR [rdi+0x188],0x1
  0x00007f003f2a5211: jmp    0x00007f003f2a528a
  0x00007f003f2a5216: cmp    QWORD PTR [rdi+0x190],0x0
  0x00007f003f2a5221: jne    0x00007f003f2a523a
  0x00007f003f2a5223: mov    QWORD PTR [rdi+0x190],rax
  0x00007f003f2a522a: mov    QWORD PTR [rdi+0x198],0x1
  0x00007f003f2a5235: jmp    0x00007f003f2a528a
  0x00007f003f2a523a: cmp    QWORD PTR [rdi+0x1a0],0x0
  0x00007f003f2a5245: jne    0x00007f003f2a525e
  0x00007f003f2a5247: mov    QWORD PTR [rdi+0x1a0],rax
  0x00007f003f2a524e: mov    QWORD PTR [rdi+0x1a8],0x1
  0x00007f003f2a5259: jmp    0x00007f003f2a528a
  0x00007f003f2a525e: cmp    QWORD PTR [rdi+0x1b0],0x0
  0x00007f003f2a5269: jne    0x00007f003f2a5282
  0x00007f003f2a526b: mov    QWORD PTR [rdi+0x1b0],rax
  0x00007f003f2a5272: mov    QWORD PTR [rdi+0x1b8],0x1
  0x00007f003f2a527d: jmp    0x00007f003f2a528a
  0x00007f003f2a5282: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f2a528a: movabs rax,0x7f0038a58428  ;   {metadata(method data for {method} {0x00007f00388e03f8} &apos;implReset&apos; &apos;()V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2a5294: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f2a529a: add    edi,0x8
  0x00007f003f2a529d: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f2a52a3: movabs rax,0x7f00388e03f8  ;   {metadata({method} {0x00007f00388e03f8} &apos;implReset&apos; &apos;()V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2a52ad: and    edi,0x7ffff8
  0x00007f003f2a52b3: cmp    edi,0x0
  0x00007f003f2a52b6: je     0x00007f003f2a52e9
  0x00007f003f2a52bc: mov    DWORD PTR [rsi+0x14],0x0  ;*putfield state {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::reset@6 (line 710)

  0x00007f003f2a52c3: mov    rax,rsi
  0x00007f003f2a52c6: add    rsp,0x30
  0x00007f003f2a52ca: pop    rbp
  0x00007f003f2a52cb: test   DWORD PTR [rip+0x1b11ce2f],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a52d1: ret    
  0x00007f003f2a52d2: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2a52d7: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a52df: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=676}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::reset@-1 (line 709)
                                                ;   {runtime_call}
  0x00007f003f2a52e4: jmp    0x00007f003f2a509e
  0x00007f003f2a52e9: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2a52ee: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a52f6: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=699}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::implReset@-1 (line 720)
                                                ; - java.nio.charset.CharsetEncoder::reset@1 (line 709)
                                                ;   {runtime_call}
  0x00007f003f2a52fb: jmp    0x00007f003f2a52bc
  0x00007f003f2a52fd: nop
  0x00007f003f2a52fe: nop
  0x00007f003f2a52ff: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a5306: movabs r10,0x0
  0x00007f003f2a5310: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a5317: movabs r10,0x0
  0x00007f003f2a5321: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a5328: add    rsp,0x30
  0x00007f003f2a532c: pop    rbp
  0x00007f003f2a532d: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a5332: hlt    
  0x00007f003f2a5333: hlt    
  0x00007f003f2a5334: hlt    
  0x00007f003f2a5335: hlt    
  0x00007f003f2a5336: hlt    
  0x00007f003f2a5337: hlt    
  0x00007f003f2a5338: hlt    
  0x00007f003f2a5339: hlt    
  0x00007f003f2a533a: hlt    
  0x00007f003f2a533b: hlt    
  0x00007f003f2a533c: hlt    
  0x00007f003f2a533d: hlt    
  0x00007f003f2a533e: hlt    
  0x00007f003f2a533f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2a5340: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2a5345: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a534a: sub    rsp,0x80
  0x00007f003f2a5351: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a5356: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a535b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a5360: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a5365: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a536a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a536f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a5374: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a5379: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a537e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a5383: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a5388: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a538d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a5392: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a5397: mov    QWORD PTR [rsp],r15
  0x00007f003f2a539b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a53a5: movabs rsi,0x7f003f2a5345  ;   {internal_word}
  0x00007f003f2a53af: mov    rdx,rsp
  0x00007f003f2a53b2: and    rsp,0xfffffffffffffff0
  0x00007f003f2a53b6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a53bb: hlt    
[Deopt Handler Code]
  0x00007f003f2a53bc: movabs r10,0x7f003f2a53bc  ;   {section_word}
  0x00007f003f2a53c6: push   r10
  0x00007f003f2a53c8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a53cd: hlt    
  0x00007f003f2a53ce: hlt    
  0x00007f003f2a53cf: hlt    
<nmethod compile_id='69' compiler='C1' level='3' entry='0x00007f003f2a5040' size='1440' address='0x00007f003f2a4ed0' relocation_offset='312' insts_offset='368' stub_offset='1136' scopes_data_offset='1296' scopes_pcs_offset='1336' dependencies_offset='1432' metadata_offset='1280' method='java/nio/charset/CharsetEncoder reset ()Ljava/nio/charset/CharsetEncoder;' bytes='11' count='397' iicount='397' stamp='0.259'/>
<writer thread='139637818533632'/>
<task_queued compile_id='72' method='java/net/URL getPort ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.259' comment='tiered' hot_count='128'/>
[Loaded jdk.vm.ci.hotspot.VMFlag from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/nio/charset/CharsetEncoder.implReset  [0x00007f003f2a5600, 0x00007f003f2a5750]  336 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00388e03f8} &apos;implReset&apos; &apos;()V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2a5600: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2a5604: shl    r10,0x3
  0x00007f003f2a5608: cmp    r10,rax
  0x00007f003f2a560b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2a5611: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2a561c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2a5620: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a5627: push   rbp
  0x00007f003f2a5628: sub    rsp,0x30
  0x00007f003f2a562c: movabs rdi,0x7f0038a58428  ;   {metadata(method data for {method} {0x00007f00388e03f8} &apos;implReset&apos; &apos;()V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2a5636: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2a563c: add    ebx,0x8
  0x00007f003f2a563f: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2a5645: 
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.VMIntrinsicMethod from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
movabs rdi,0x7f00388e03f8                       ;   {metadata({method} {0x00007f00388e03f8} &apos;implReset&apos; &apos;()V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2a564f: and    ebx,0x1ff8
  0x00007f003f2a5655: cmp    ebx,0x0
  0x00007f003f2a5658: je     0x00007f003f2a566a  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::implReset@0 (line 720)

  0x00007f003f2a565e: add    rsp,0x30
  0x00007f003f2a5662: pop    rbp
  0x00007f003f2a5663: test   DWORD PTR [rip+0x1b11ca97],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a5669: ret    
  0x00007f003f2a566a: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2a566f: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a5677: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=124}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::implReset@-1 (line 720)
                                                ;   {runtime_call}
  0x00007f003f2a567c: jmp    0x00007f003f2a565e
  0x00007f003f2a567e: nop
  0x00007f003f2a567f: nop
  0x00007f003f2a5680: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a5687: movabs r10,0x0
  0x00007f003f2a5691: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a5698: movabs r10,0x0
  0x00007f003f2a56a2: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a56a9: add    rsp,0x30
  0x00007f003f2a56ad: pop    rbp
  0x00007f003f2a56ae: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a56b3: hlt    
  0x00007f003f2a56b4: hlt    
  0x00007f003f2a56b5: hlt    
  0x00007f003f2a56b6: hlt    
  0x00007f003f2a56b7: hlt    
  0x00007f003f2a56b8: hlt    
  0x00007f003f2a56b9: hlt    
  0x00007f003f2a56ba: hlt    
  0x00007f003f2a56bb: hlt    
  0x00007f003f2a56bc: hlt    
  0x00007f003f2a56bd: hlt    
  0x00007f003f2a56be: hlt    
  0x00007f003f2a56bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2a56c0: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2a56c5: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a56ca: sub    rsp,0x80
  0x00007f003f2a56d1: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a56d6: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a56db: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a56e0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a56e5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a56ea: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a56ef: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a56f4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a56f9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a56fe: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a5703: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a5708: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a570d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a5712: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a5717: mov    QWORD PTR [rsp],r15
  0x00007f003f2a571b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a5725: movabs rsi,0x7f003f2a56c5  ;   {internal_word}
  0x00007f003f2a572f: mov    rdx,rsp
  0x00007f003f2a5732: and    rsp,0xfffffffffffffff0
  0x00007f003f2a5736: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a573b: hlt    
[Deopt Handler Code]
  0x00007f003f2a573c: movabs r10,0x7f003f2a573c  ;   {section_word}
  0x00007f003f2a5746: push   r10
  0x00007f003f2a5748: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a574d: hlt    
  0x00007f003f2a574e: hlt    
  0x00007f003f2a574f: hlt    
<nmethod compile_id='70' compiler='C1' level='3' entry='0x00007f003f2a5600' size='808' address='0x00007f003f2a5490' relocation_offset='312' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='736' dependencies_offset='800' metadata_offset='704' method='java/nio/charset/CharsetEncoder implReset ()V' bytes='1' count='405' iicount='405' stamp='0.260'/>
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.newCapacity  [0x00007f003f2a5960, 0x00007f003f2a5d48]  1000 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00387eacc8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2a5960: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2a5964: shl    r10,0x3
  0x00007f003f2a5968: cmp    r10,rax
  0x00007f003f2a596b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2a5971: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2a597c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2a5980: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a5987: push   rbp
  0x00007f003f2a5988: sub    rsp,0x40
  0x00007f003f2a598c: movabs rax,0x7f00389cbf98  ;   {metadata(method data for {method} {0x00007f00387eacc8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2a5996: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f2a599c: add    edi,0x8
  0x00007f003f2a599f: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f2a59a5: movabs rax,0x7f00387eacc8  ;   {metadata({method} {0x00007f00387eacc8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2a59af: and    edi,0x1ff8
  0x00007f003f2a59b5: cmp    edi,0x0
  0x00007f003f2a59b8: je     0x00007f003f2a5bfe  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@0 (line 150)

  0x00007f003f2a59be: mov    eax,DWORD PTR [rsi+0x10]
  0x00007f003f2a59c1: shl    rax,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)

  0x00007f003f2a59c5: mov    eax,DWORD PTR [rax+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; implicit exception: dispatches to 0x00007f003f2a5c15
  0x00007f003f2a59c8: shl    eax,1
  0x00007f003f2a59ca: add    eax,0x2
  0x00007f003f2a59cd: mov    rdi,rax
  0x00007f003f2a59d0: sub    edi,edx
  0x00007f003f2a59d2: cmp    edi,0x0
  0x00007f003f2a59d5: movabs rdi,0x7f00389cbf98  ;   {metadata(method data for {method} {0x00007f00387eacc8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2a59df: movabs rcx,0x130
  0x00007f003f2a59e9: jge    0x00007f003f2a59f9
  0x00007f003f2a59ef: movabs rcx,0x140
  0x00007f003f2a59f9: mov    rbx,QWORD PTR [rdi+rcx*1]
  0x00007f003f2a59fd: lea    rbx,[rbx+0x1]
  0x00007f003f2a5a01: mov    QWORD PTR [rdi+rcx*1],rbx
  0x00007f003f2a5a05: jge    0x00007f003f2a5a0e  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)

  0x00007f003f2a5a0b: mov    rax,rdx            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)

  0x00007f003f2a5a0e: cmp    eax,0x0
  0x00007f003f2a5a11: movabs rdi,0x7f00389cbf98  ;   {metadata(method data for {method} {0x00007f00387eacc8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2a5a1b: movabs rcx,0x150
  0x00007f003f2a5a25: jle    0x00007f003f2a5a35
  0x00007f003f2a5a2b: movabs rcx,0x160
  0x00007f003f2a5a35: mov    rbx,QWORD PTR [rdi+rcx*1]
  0x00007f003f2a5a39: lea    rbx,[rbx+0x1]
  0x00007f003f2a5a3d: mov    QWORD PTR [rdi+rcx*1],rbx
  0x00007f003f2a5a41: jle    0x00007f003f2a5a87  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)

  0x00007f003f2a5a47: mov    edi,0x7ffffff7
  0x00007f003f2a5a4c: sub    edi,eax
  0x00007f003f2a5a4e: cmp    edi,0x0
  0x00007f003f2a5a51: movabs rdi,0x7f00389cbf98  ;   {metadata(method data for {method} {0x00007f00387eacc8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2a5a5b: movabs rcx,0x170
  0x00007f003f2a5a65: jge    0x00007f003f2a5a75
  0x00007f003f2a5a6b: movabs rcx,0x180
  0x00007f003f2a5a75: mov    rbx,QWORD PTR [rdi+rcx*1]
  0x00007f003f2a5a79: lea    rbx,[rbx+0x1]
  0x00007f003f2a5a7d: mov    QWORD PTR [rdi+rcx*1],rbx
  0x00007f003f2a5a81: jge    0x00007f003f2a5b76  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)

  0x00007f003f2a5a87: movabs rax,0x7f00389cbf98  ;   {metadata(method data for {method} {0x00007f00387eacc8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2a5a91: add    QWORD PTR [rax+0x190],0x1
  0x00007f003f2a5a99: movabs rax,0x7f0038a58570  ;   {metadata(method data for {method} {0x00007f00387ead90} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2a5aa3: mov    esi,DWORD PTR [rax+0xfc]
  0x00007f003f2a5aa9: add    esi,0x8
  0x00007f003f2a5aac: mov    DWORD PTR [rax+0xfc],esi
  0x00007f003f2a5ab2: movabs rax,0x7f00387ead90  ;   {metadata({method} {0x00007f00387ead90} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2a5abc: and    esi,0x7ffff8
  0x00007f003f2a5ac2: cmp    esi,0x0
  0x00007f003f2a5ac5: je     0x00007f003f2a5c1a
  0x00007f003f2a5acb: mov    eax,0x7fffffff
  0x00007f003f2a5ad0: sub    eax,edx
  0x00007f003f2a5ad2: cmp    eax,0x0
  0x00007f003f2a5ad5: movabs rax,0x7f0038a58570  ;   {metadata(method data for {method} {0x00007f00387ead90} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2a5adf: movabs rsi,0x130
  0x00007f003f2a5ae9: jge    0x00007f003f2a5af9
  0x00007f003f2a5aef: movabs rsi,0x140
  0x00007f003f2a5af9: mov    rdi,QWORD PTR [rax+rsi*1]
  0x00007f003f2a5afd: lea    rdi,[rdi+0x1]
  0x00007f003f2a5b01: mov    QWORD PTR [rax+rsi*1],rdi
  0x00007f003f2a5b05: jl     0x00007f003f2a5b88  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@4 (line 160)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x00007f003f2a5b0b: cmp    edx,0x7ffffff7
  0x00007f003f2a5b11: movabs rax,0x7f0038a58570  ;   {metadata(method data for {method} {0x00007f00387ead90} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2a5b1b: movabs rsi,0x160
  0x00007f003f2a5b25: jle    0x00007f003f2a5b35
  0x00007f003f2a5b2b: movabs rsi,0x170
  0x00007f003f2a5b35: mov    rdi,QWORD PTR [rax+rsi*1]
  0x00007f003f2a5b39: lea    rdi,[rdi+0x1]
  0x00007f003f2a5b3d: mov    QWORD PTR [rax+rsi*1],rdi
  0x00007f003f2a5b41: jle    0x00007f003f2a5b5c  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@18 (line 163)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x00007f003f2a5b47: movabs rax,0x7f0038a58570  ;   {metadata(method data for {method} {0x00007f00387ead90} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2a5b51: inc    DWORD PTR [rax+0x180]
  0x00007f003f2a5b57: jmp    0x00007f003f2a5b61  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@22 (line 163)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x00007f003f2a5b5c: mov    edx,0x7ffffff7     ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@27 (line 163)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x00007f003f2a5b61: movabs rax,0x7f00389cbf98  ;   {metadata(method data for {method} {0x00007f00387eacc8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2a5b6b: inc    DWORD PTR [rax+0x1a0]
  0x00007f003f2a5b71: jmp    0x00007f003f2a5b79  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)

  0x00007f003f2a5b76: mov    rdx,rax
  0x00007f003f2a5b79: mov    rax,rdx
  0x00007f003f2a5b7c: add    rsp,0x40
  0x00007f003f2a5b80: pop    rbp
  0x00007f003f2a5b81: test   DWORD PTR [rip+0x1b11c579],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a5b87: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)

  0x00007f003f2a5b88: jmp    0x00007f003f2a5c40  ;   {no_reloc}
  0x00007f003f2a5b8d: add    BYTE PTR [rax],al
  0x00007f003f2a5b8f: add    BYTE PTR [rax],al
  0x00007f003f2a5b91: add    BYTE PTR [rcx-0x75],cl
  0x00007f003f2a5b94: rex.RXB (bad) 
  0x00007f003f2a5b96: lea    rdi,[rax+0x20]
  0x00007f003f2a5b9a: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2a5b9e: ja     0x00007f003f2a5c4a
  0x00007f003f2a5ba4: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2a5ba8: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2a5baf: mov    QWORD PTR [rax],rcx
  0x00007f003f2a5bb2: mov    rcx,rdx
  0x00007f003f2a5bb5: shr    rcx,0x3
  0x00007f003f2a5bb9: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2a5bbc: xor    rcx,rcx
  0x00007f003f2a5bbf: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2a5bc2: xor    rcx,rcx
  0x00007f003f2a5bc5: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f2a5bc9: mov    QWORD PTR [rax+0x18],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@7 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x00007f003f2a5bcd: mov    rsi,rax
  0x00007f003f2a5bd0: movabs rdi,0x7f0038a58570  ;   {metadata(method data for {method} {0x00007f00387ead90} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2a5bda: add    QWORD PTR [rdi+0x150],0x1
  0x00007f003f2a5be2: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@11 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x00007f003f2a5be5: mov    QWORD PTR [rsp+0x30],rax
  0x00007f003f2a5bea: nop
  0x00007f003f2a5beb: nop
  0x00007f003f2a5bec: nop
  0x00007f003f2a5bed: nop
  0x00007f003f2a5bee: nop
  0x00007f003f2a5bef: call   0x00007f003f1c4d60  ; OopMap{[48]=Oop off=660}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@11 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {optimized virtual_call}
  0x00007f003f2a5bf4: mov    rax,QWORD PTR [rsp+0x30]
  0x00007f003f2a5bf9: jmp    0x00007f003f2a5c82
  0x00007f003f2a5bfe: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2a5c03: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a5c0b: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=688}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::newCapacity@-1 (line 150)
                                                ;   {runtime_call}
  0x00007f003f2a5c10: jmp    0x00007f003f2a59be
  0x00007f003f2a5c15: call   0x00007f003f279000  ; OopMap{rsi=Oop off=698}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ;   {runtime_call}
  0x00007f003f2a5c1a: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2a5c1f: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a5c27: call   0x00007f003f27d5e0  ; OopMap{off=716}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@-1 (line 160)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {runtime_call}
  0x00007f003f2a5c2c: jmp    0x00007f003f2a5acb
  0x00007f003f2a5c31: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2a5c3b: mov    eax,0xa050f00
  0x00007f003f2a5c40: call   0x00007f003f27c5e0  ; OopMap{off=741}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@7 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {runtime_call}
  0x00007f003f2a5c45: jmp    0x00007f003f2a5b88
  0x00007f003f2a5c4a: mov    rdx,rdx
  0x00007f003f2a5c4d: call   0x00007f003f279760  ; OopMap{off=754}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@7 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {runtime_call}
  0x00007f003f2a5c52: jmp    0x00007f003f2a5bcd
  0x00007f003f2a5c57: nop
  0x00007f003f2a5c58: nop
  0x00007f003f2a5c59: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a5c60: movabs r10,0x0
  0x00007f003f2a5c6a: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a5c71: movabs r10,0x0
  0x00007f003f2a5c7b: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a5c82: add    rsp,0x40
  0x00007f003f2a5c86: pop    rbp
  0x00007f003f2a5c87: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a5c8c: hlt    
  0x00007f003f2a5c8d: hlt    
  0x00007f003f2a5c8e: hlt    
  0x00007f003f2a5c8f: hlt    
  0x00007f003f2a5c90: hlt    
  0x00007f003f2a5c91: hlt    
  0x00007f003f2a5c92: hlt    
  0x00007f003f2a5c93: hlt    
  0x00007f003f2a5c94: hlt    
  0x00007f003f2a5c95: hlt    
  0x00007f003f2a5c96: hlt    
  0x00007f003f2a5c97: hlt    
  0x00007f003f2a5c98: hlt    
  0x00007f003f2a5c99: hlt    
  0x00007f003f2a5c9a: hlt    
  0x00007f003f2a5c9b: hlt    
  0x00007f003f2a5c9c: hlt    
  0x00007f003f2a5c9d: hlt    
  0x00007f003f2a5c9e: hlt    
  0x00007f003f2a5c9f: hlt    
[Stub Code]
  0x00007f003f2a5ca0: nop                       ;   {no_reloc}
  0x00007f003f2a5ca1: nop
  0x00007f003f2a5ca2: nop
  0x00007f003f2a5ca3: nop
  0x00007f003f2a5ca4: nop
  0x00007f003f2a5ca5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2a5caf: jmp    0x00007f003f2a5caf  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2a5cb4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2a5cb9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a5cbe: sub    rsp,0x80
  0x00007f003f2a5cc5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a5cca: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a5ccf: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a5cd4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a5cd9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a5cde: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a5ce3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a5ce8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a5ced: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a5cf2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a5cf7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a5cfc: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a5d01: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a5d06: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a5d0b: mov    QWORD PTR [rsp],r15
  0x00007f003f2a5d0f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a5d19: movabs rsi,0x7f003f2a5cb9  ;   {internal_word}
  0x00007f003f2a5d23: mov    rdx,rsp
  0x00007f003f2a5d26: and    rsp,0xfffffffffffffff0
  0x00007f003f2a5d2a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a5d2f: hlt    
[Deopt Handler Code]
  0x00007f003f2a5d30: movabs r10,0x7f003f2a5d30  ;   {section_word}
  0x00007f003f2a5d3a: push   r10
  0x00007f003f2a5d3c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a5d41: hlt    
  0x00007f003f2a5d42: hlt    
  0x00007f003f2a5d43: hlt    
  0x00007f003f2a5d44: hlt    
  0x00007f003f2a5d45: hlt    
  0x00007f003f2a5d46: hlt    
  0x00007f003f2a5d47: hlt    
<nmethod compile_id='71' compiler='C1' level='3' entry='0x00007f003f2a5960' size='1976' address='0x00007f003f2a57d0' relocation_offset='312' insts_offset='400' stub_offset='1232' scopes_data_offset='1416' scopes_pcs_offset='1584' dependencies_offset='1952' nul_chk_table_offset='1960' metadata_offset='1400' method='java/lang/AbstractStringBuilder newCapacity (I)I' bytes='39' count='435' iicount='435' stamp='0.287'/>
<writer thread='139637818533632'/>
<task_queued compile_id='73' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='384' iicount='384' level='3' stamp='0.287' comment='tiered' hot_count='384'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/HashMap.hash  [0x00007f003f2a6160, 0x00007f003f2a6508]  936 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2a6160: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a6167: push   rbp
  0x00007f003f2a6168: sub    rsp,0x30
  0x00007f003f2a616c: movabs rdi,0x7f0038a588a0  ;   {metadata(method data for {method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2a6176: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2a617c: add    ebx,0x8
  0x00007f003f2a617f: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2a6185: movabs rdi,0x7f003886c920  ;   {metadata({method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2a618f: and    ebx,0x1ff8
  0x00007f003f2a6195: cmp    ebx,0x0
  0x00007f003f2a6198: je     0x00007f003f2a640c  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@0 (line 338)

  0x00007f003f2a619e: cmp    rsi,0x0
  0x00007f003f2a61a2: movabs rdi,0x7f0038a588a0  ;   {metadata(method data for {method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2a61ac: movabs rbx,0x130
  0x00007f003f2a61b6: jne    0x00007f003f2a61c6
  0x00007f003f2a61bc: movabs rbx,0x140
  0x00007f003f2a61c6: mov    rax,QWORD PTR [rdi+rbx*1]
  0x00007f003f2a61ca: lea    rax,[rax+0x1]
  0x00007f003f2a61ce: mov    QWORD PTR [rdi+rbx*1],rax
  0x00007f003f2a61d2: 
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.meta.Assumptions$Assumption from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
jne    0x00007f003f2a61f2                       ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 338)

  0x00007f003f2a61d8: movabs rsi,0x7f0038a588a0  ;   {metadata(method data for {method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2a61e2: inc    DWORD PTR [rsi+0x150]
  0x00007f003f2a61e8: mov    esi,0x0
  0x00007f003f2a61ed: jmp    0x00007f003f2a63fd  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 338)

  0x00007f003f2a61f2: cmp    rax,QWORD PTR [rsi]  ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; implicit exception: dispatches to 0x00007f003f2a6423
  0x00007f003f2a61f5: mov    rdi,rsi
  0x00007f003f2a61f8: movabs rbx,0x7f0038a588a0  ;   {metadata(method data for {method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2a6202: mov    edi,DWORD PTR [rdi+0x8]
  0x00007f003f2a6205: shl    rdi,0x3
  0x00007f003f2a6209: cmp    rdi,QWORD PTR [rbx+0x178]
  0x00007f003f2a6210: jne    0x00007f003f2a621f
  0x00007f003f2a6212: add    QWORD PTR [rbx+0x180],0x1
  0x00007f003f2a621a: jmp    0x00007f003f2a63e1
  0x00007f003f2a621f: cmp    rdi,QWORD PTR [rbx+0x188]
  0x00007f003f2a6226: jne    0x00007f003f2a6235
  0x00007f003f2a6228: add    QWORD PTR [rbx+0x190],0x1
  0x00007f003f2a6230: jmp    0x00007f003f2a63e1
  0x00007f003f2a6235: cmp    rdi,QWORD PTR [rbx+0x198]
  0x00007f003f2a623c: jne    0x00007f003f2a624b
  0x00007f003f2a623e: add    QWORD PTR [rbx+0x1a0],0x1
  0x00007f003f2a6246: jmp    0x00007f003f2a63e1
  0x00007f003f2a624b: cmp    rdi,QWORD PTR [rbx+0x1a8]
  0x00007f003f2a6252: jne    0x00007f003f2a6261
  0x00007f003f2a6254: add    QWORD PTR [rbx+0x1b0],0x1
  0x00007f003f2a625c: jmp    0x00007f003f2a63e1
  0x00007f003f2a6261: cmp    rdi,QWORD PTR [rbx+0x1b8]
  0x00007f003f2a6268: jne    0x00007f003f2a6277
  0x00007f003f2a626a: add    QWORD PTR [rbx+0x1c0],0x1
  0x00007f003f2a6272: jmp    0x00007f003f2a63e1
  0x00007f003f2a6277: cmp    rdi,QWORD PTR [rbx+0x1c8]
  0x00007f003f2a627e: jne    0x00007f003f2a628d
  0x00007f003f2a6280: add    QWORD PTR [rbx+0x1d0],0x1
  0x00007f003f2a6288: jmp    0x00007f003f2a63e1
  0x00007f003f2a628d: cmp    rdi,QWORD PTR [rbx+0x1d8]
  0x00007f003f2a6294: jne    0x00007f003f2a62a3
  0x00007f003f2a6296: add    QWORD PTR [rbx+0x1e0],0x1
  0x00007f003f2a629e: jmp    0x00007f003f2a63e1
  0x00007f003f2a62a3: cmp    rdi,QWORD PTR [rbx+0x1e8]
  0x00007f003f2a62aa: jne    0x00007f003f2a62b9
  0x00007f003f2a62ac: add    QWORD PTR [rbx+0x1f0],0x1
  0x00007f003f2a62b4: jmp    0x00007f003f2a63e1
  0x00007f003f2a62b9: cmp    QWORD PTR [rbx+0x178],0x0
  0x00007f003f2a62c4: jne    0x00007f003f2a62dd
  0x00007f003f2a62c6: mov    QWORD PTR [rbx+0x178],rdi
  0x00007f003f2a62cd: mov    QWORD PTR [rbx+0x180],0x1
  0x00007f003f2a62d8: jmp    0x00007f003f2a63e1
  0x00007f003f2a62dd: cmp    QWORD PTR [rbx+0x188],0x0
  0x00007f003f2a62e8: jne    0x00007f003f2a6301
  0x00007f003f2a62ea: mov    QWORD PTR [rbx+0x188],rdi
  0x00007f003f2a62f1: mov    QWORD PTR [rbx+0x190],0x1
  0x00007f003f2a62fc: jmp    0x00007f003f2a63e1
  0x00007f003f2a6301: cmp    QWORD PTR [rbx+0x198],0x0
  0x00007f003f2a630c: jne    0x00007f003f2a6325
  0x00007f003f2a630e: mov    QWORD PTR [rbx+0x198],rdi
  0x00007f003f2a6315: mov    QWORD PTR [rbx+0x1a0],0x1
  0x00007f003f2a6320: jmp    0x00007f003f2a63e1
  0x00007f003f2a6325: cmp    QWORD PTR [rbx+0x1a8],0x0
  0x00007f003f2a6330: jne    0x00007f003f2a6349
  0x00007f003f2a6332: mov    QWORD PTR [rbx+0x1a8],rdi
  0x00007f003f2a6339: mov    QWORD PTR [rbx+0x1b0],0x1
  0x00007f003f2a6344: jmp    0x00007f003f2a63e1
  0x00007f003f2a6349: cmp    QWORD PTR [rbx+0x1b8],0x0
  0x00007f003f2a6354: jne    0x00007f003f2a636d
  0x00007f003f2a6356: mov    QWORD PTR [rbx+0x1b8],rdi
  0x00007f003f2a635d: mov    QWORD PTR [rbx+0x1c0],0x1
  0x00007f003f2a6368: jmp    0x00007f003f2a63e1
  0x00007f003f2a636d: cmp    QWORD PTR [rbx+0x1c8],0x0
  0x00007f003f2a6378: jne    0x00007f003f2a6391
  0x00007f003f2a637a: mov    QWORD PTR [rbx+0x1c8],rdi
  0x00007f003f2a6381: mov    QWORD PTR [rbx+0x1d0],0x1
  0x00007f003f2a638c: jmp    0x00007f003f2a63e1
  0x00007f003f2a6391: cmp    QWORD PTR [rbx+0x1d8],0x0
  0x00007f003f2a639c: jne    0x00007f003f2a63b5
  0x00007f003f2a639e: mov    QWORD PTR [rbx+0x1d8],rdi
  0x00007f003f2a63a5: mov    QWORD PTR [rbx+0x1e0],0x1
  0x00007f003f2a63b0: jmp    0x00007f003f2a63e1
  0x00007f003f2a63b5: cmp    QWORD PTR [rbx+0x1e8],0x0
  0x00007f003f2a63c0: jne    0x00007f003f2a63d9
  0x00007f003f2a63c2: mov    QWORD PTR [rbx+0x1e8],rdi
  0x00007f003f2a63c9: mov    QWORD PTR [rbx+0x1f0],0x1
  0x00007f003f2a63d4: jmp    0x00007f003f2a63e1
  0x00007f003f2a63d9: add    QWORD PTR [rbx+0x168],0x1
  0x00007f003f2a63e1: nop
  0x00007f003f2a63e2: nop
  0x00007f003f2a63e3: nop
  0x00007f003f2a63e4: nop
  0x00007f003f2a63e5: movabs rax,0xffffffffffffffff
  0x00007f003f2a63ef: call   0x00007f003f1c4f60  ; OopMap{off=660}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ;   {virtual_call}
  0x00007f003f2a63f4: mov    rsi,rax
  0x00007f003f2a63f7: shr    esi,0x10
  0x00007f003f2a63fa: xor    rsi,rax
  0x00007f003f2a63fd: mov    rax,rsi
  0x00007f003f2a6400: add    rsp,0x30
  0x00007f003f2a6404: pop    rbp
  0x00007f003f2a6405: test   DWORD PTR [rip+0x1b11bcf5],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a640b: ret    
  0x00007f003f2a640c: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2a6411: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a6419: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=702}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ;   {runtime_call}
  0x00007f003f2a641e: jmp    0x00007f003f2a619e
  0x00007f003f2a6423: call   0x00007f003f279000  ; OopMap{rsi=Oop off=712}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ;   {runtime_call}
  0x00007f003f2a6428: nop
  0x00007f003f2a6429: nop
  0x00007f003f2a642a: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a6431: movabs r10,0x0
  0x00007f003f2a643b: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a6442: movabs r10,0x0
  0x00007f003f2a644c: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a6453: add    rsp,0x30
  0x00007f003f2a6457: pop    rbp
  0x00007f003f2a6458: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a645d: hlt    
  0x00007f003f2a645e: hlt    
  0x00007f003f2a645f: hlt    
[Stub Code]
  0x00007f003f2a6460: nop                       ;   {no_reloc}
  0x00007f003f2a6461: nop
  0x00007f003f2a6462: nop
  0x00007f003f2a6463: nop
  0x00007f003f2a6464: nop
  0x00007f003f2a6465: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2a646f: jmp    0x00007f003f2a646f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2a6474: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2a6479: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a647e: sub    rsp,0x80
  0x00007f003f2a6485: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a648a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a648f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a6494: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a6499: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a649e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a64a3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a64a8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a64ad: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a64b2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a64b7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a64bc: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a64c1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a64c6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a64cb: mov    QWORD PTR [rsp],r15
  0x00007f003f2a64cf: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a64d9: movabs rsi,0x7f003f2a6479  ;   {internal_word}
  0x00007f003f2a64e3: mov    rdx,rsp
  0x00007f003f2a64e6: and    rsp,0xfffffffffffffff0
  0x00007f003f2a64ea: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a64ef: hlt    
[Deopt Handler Code]
  0x00007f003f2a64f0: movabs r10,0x7f003f2a64f0  ;   {section_word}
  0x00007f003f2a64fa: push   r10
  0x00007f003f2a64fc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a6501: hlt    
  0x00007f003f2a6502: hlt    
  0x00007f003f2a6503: hlt    
  0x00007f003f2a6504: hlt    
  0x00007f003f2a6505: hlt    
  0x00007f003f2a6506: hlt    
  0x00007f003f2a6507: hlt    
<nmethod compile_id='65' compiler='C1' level='3' entry='0x00007f003f2a6160' size='1560' address='0x00007f003f2a5fd0' relocation_offset='312' insts_offset='400' stub_offset='1168' scopes_data_offset='1344' scopes_pcs_offset='1392' dependencies_offset='1536' nul_chk_table_offset='1544' metadata_offset='1336' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='412' iicount='412' stamp='0.288'/>
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.meta.Assumptions$ConcreteMethod from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.&lt;init&gt;  [0x00007f003f2a6780, 0x00007f003f2a69d0]  592 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00387ea920} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2a6780: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2a6784: shl    r10,0x3
  0x00007f003f2a6788: cmp    r10,rax
  0x00007f003f2a678b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2a6791: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2a679c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2a67a0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a67a7: push   rbp
  0x00007f003f2a67a8: sub    rsp,0x30
  0x00007f003f2a67ac: mov    r8,rsi
  0x00007f003f2a67af: movabs rbx,0x7f0038a55a38  ;   {metadata(method data for {method} {0x00007f00387ea920} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2a67b9: mov    esi,DWORD PTR [rbx+0xfc]
  0x00007f003f2a67bf: add    esi,0x8
  0x00007f003f2a67c2: mov    DWORD PTR [rbx+0xfc],esi
  0x00007f003f2a67c8: movabs rbx,0x7f00387ea920  ;   {metadata({method} {0x00007f00387ea920} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2a67d2: and    esi,0x1ff8
  0x00007f003f2a67d8: cmp    esi,0x0
  0x00007f003f2a67db: je     0x00007f003f2a68cc  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@0 (line 67)

  0x00007f003f2a67e1: mov    rbx,r8
  0x00007f003f2a67e4: movabs rsi,0x7f0038a55a38  ;   {metadata(method data for {method} {0x00007f00387ea920} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2a67ee: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2a67f6: movabs rbx,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2a6800: mov    esi,DWORD PTR [rbx+0xfc]
  0x00007f003f2a6806: add    esi,0x8
  0x00007f003f2a6809: mov    DWORD PTR [rbx+0xfc],esi
  0x00007f003f2a680f: movabs rbx,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2a6819: and    esi,0x7ffff8
  0x00007f003f2a681f: cmp    esi,0x0
  0x00007f003f2a6822: je     0x00007f003f2a68e3
  0x00007f003f2a6828: mov    rbx,rdx
  0x00007f003f2a682b: movabs rdx,0x7c00001f8    ;   {metadata({type array char})}
  0x00007f003f2a6835: movsxd rbx,ebx
  0x00007f003f2a6838: mov    rdi,rbx
  0x00007f003f2a683b: cmp    rbx,0xffffff
  0x00007f003f2a6842: ja     0x00007f003f2a68fa
  0x00007f003f2a6848: movabs rsi,0x17
  0x00007f003f2a6852: lea    rsi,[rsi+rbx*2]
  0x00007f003f2a6856: and    rsi,0xfffffffffffffff8
  0x00007f003f2a685a: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2a685e: lea    rsi,[rax+rsi*1]
  0x00007f003f2a6862: cmp    rsi,QWORD PTR [r15+0x70]
  0x00007f003f2a6866: ja     0x00007f003f2a68fa
  0x00007f003f2a686c: mov    QWORD PTR [r15+0x60],rsi
  0x00007f003f2a6870: sub    rsi,rax
  0x00007f003f2a6873: mov    QWORD PTR [rax],0x1
  0x00007f003f2a687a: mov    rcx,rdx
  0x00007f003f2a687d: shr    rcx,0x3
  0x00007f003f2a6881: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2a6884: mov    DWORD PTR [rax+0xc],ebx
  0x00007f003f2a6887: sub    rsi,0x10
  0x00007f003f2a688b: je     0x00007f003f2a68a2
  0x00007f003f2a6891: xor    rbx,rbx
  0x00007f003f2a6894: shr    rsi,0x3
  0x00007f003f2a6898: mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x00007f003f2a689d: dec    rsi
  0x00007f003f2a68a0: jne    0x00007f003f2a6898  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)

  0x00007f003f2a68a2: mov    r10,rax
  0x00007f003f2a68a5: shr    r10,0x3
  0x00007f003f2a68a9: mov    DWORD PTR [r8+0x10],r10d
  0x00007f003f2a68ad: shr    r8,0x9
  0x00007f003f2a68b1: movabs rsi,0x7f003ae7c000
  0x00007f003f2a68bb: mov    BYTE PTR [r8+rsi*1],0x0  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)

  0x00007f003f2a68c0: add    rsp,0x30
  0x00007f003f2a68c4: pop    rbp
  0x00007f003f2a68c5: test   DWORD PTR [rip+0x1b11b835],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a68cb: ret    
  0x00007f003f2a68cc: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2a68d1: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a68d9: call   0x00007f003f27d5e0  ; OopMap{r8=Oop off=350}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ;   {runtime_call}
  0x00007f003f2a68de: jmp    0x00007f003f2a67e1
  0x00007f003f2a68e3: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2a68e8: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a68f0: call   0x00007f003f27d5e0  ; OopMap{r8=Oop off=373}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ;   {runtime_call}
  0x00007f003f2a68f5: jmp    0x00007f003f2a6828
  0x00007f003f2a68fa: call   0x00007f003f27a020  ; OopMap{r8=Oop off=383}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ;   {runtime_call}
  0x00007f003f2a68ff: jmp    0x00007f003f2a68a2
  0x00007f003f2a6901: nop
  0x00007f003f2a6902: nop
  0x00007f003f2a6903: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a690a: movabs r10,0x0
  0x00007f003f2a6914: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a691b: movabs r10,0x0
  0x00007f003f2a6925: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a692c: add    rsp,0x30
  0x00007f003f2a6930: pop    rbp
  0x00007f003f2a6931: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a6936: hlt    
  0x00007f003f2a6937: hlt    
  0x00007f003f2a6938: hlt    
  0x00007f003f2a6939: hlt    
  0x00007f003f2a693a: hlt    
  0x00007f003f2a693b: hlt    
  0x00007f003f2a693c: hlt    
  0x00007f003f2a693d: hlt    
  0x00007f003f2a693e: hlt    
  0x00007f003f2a693f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2a6940: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2a6945: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a694a: sub    rsp,0x80
  0x00007f003f2a6951: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a6956: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a695b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a6960: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a6965: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a696a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a696f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a6974: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a6979: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a697e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a6983: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a6988: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a698d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a6992: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a6997: mov    QWORD PTR [rsp],r15
  0x00007f003f2a699b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a69a5: movabs rsi,0x7f003f2a6945  ;   {internal_word}
  0x00007f003f2a69af: mov    rdx,rsp
  0x00007f003f2a69b2: and    rsp,0xfffffffffffffff0
  0x00007f003f2a69b6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a69bb: hlt    
[Deopt Handler Code]
  0x00007f003f2a69bc: movabs r10,0x7f003f2a69bc  ;   {section_word}
  0x00007f003f2a69c6: push   r10
  0x00007f003f2a69c8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a69cd: hlt    
  0x00007f003f2a69ce: hlt    
  0x00007f003f2a69cf: hlt    
<nmethod compile_id='68' compiler='C1' level='3' entry='0x00007f003f2a6780' size='1184' address='0x00007f003f2a6610' relocation_offset='312' insts_offset='368' stub_offset='816' scopes_data_offset='984' scopes_pcs_offset='1048' dependencies_offset='1176' metadata_offset='960' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='349' iicount='349' stamp='0.289'/>
----------------------------------------------------------------------
java/lang/String.substring  [0x00007f003f2a6ca0, 0x00007f003f2a7158]  1208 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003876cf08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x70]  (sp of caller)
  0x00007f003f2a6ca0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2a6ca4: shl    r10,0x3
  0x00007f003f2a6ca8: cmp    r10,rax
  0x00007f003f2a6cab: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2a6cb1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2a6cbc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2a6cc0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a6cc7: push   rbp
  0x00007f003f2a6cc8: sub    rsp,0x60
  0x00007f003f2a6ccc: mov    rbx,rsi
  0x00007f003f2a6ccf: mov    r8,rdx
  0x00007f003f2a6cd2: movabs rdx,0x7f0038a58ae0  ;   {metadata(method data for {method} {0x00007f003876cf08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a6cdc: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2a6ce2: add    esi,0x8
  0x00007f003f2a6ce5: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2a6ceb: movabs rdx,0x7f003876cf08  ;   {metadata({method} {0x00007f003876cf08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a6cf5: and    esi,0x1ff8
  0x00007f003f2a6cfb: cmp    esi,0x0
  0x00007f003f2a6cfe: je     0x00007f003f2a6f96  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@0 (line 1959)

  0x00007f003f2a6d04: cmp    r8d,0x0
  0x00007f003f2a6d08: movabs rdx,0x7f0038a58ae0  ;   {metadata(method data for {method} {0x00007f003876cf08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a6d12: movabs rsi,0x130
  0x00007f003f2a6d1c: jge    0x00007f003f2a6d2c
  0x00007f003f2a6d22: movabs rsi,0x140
  0x00007f003f2a6d2c: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2a6d30: lea    rdi,[rdi+0x1]
  0x00007f003f2a6d34: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2a6d38: jl     0x00007f003f2a6f56  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@1 (line 1959)

  0x00007f003f2a6d3e: mov    r9d,DWORD PTR [rbx+0xc]
  0x00007f003f2a6d42: shl    r9,0x3             ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@15 (line 1962)

  0x00007f003f2a6d46: mov    edx,DWORD PTR [r9+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@18 (line 1962)
                                                ; implicit exception: dispatches to 0x00007f003f2a6fad
  0x00007f003f2a6d4a: cmp    ecx,edx
  0x00007f003f2a6d4c: movabs rsi,0x7f0038a58ae0  ;   {metadata(method data for {method} {0x00007f003876cf08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a6d56: movabs rdi,0x160
  0x00007f003f2a6d60: jle    0x00007f003f2a6d70
  0x00007f003f2a6d66: movabs rdi,0x170
  0x00007f003f2a6d70: mov    rax,QWORD PTR [rsi+rdi*1]
  0x00007f003f2a6d74: lea    rax,[rax+0x1]
  0x00007f003f2a6d78: mov    QWORD PTR [rsi+rdi*1],rax
  0x00007f003f2a6d7c: jg     0x00007f003f2a6f16  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@19 (line 1962)

  0x00007f003f2a6d82: mov    r11,rcx
  0x00007f003f2a6d85: sub    r11d,r8d
  0x00007f003f2a6d88: cmp    r11d,0x0
  0x00007f003f2a6d8c: movabs rsi,0x7f0038a58ae0  ;   {metadata(method data for {method} {0x00007f003876cf08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a6d96: movabs rdi,0x190
  0x00007f003f2a6da0: jge    0x00007f003f2a6db0
  0x00007f003f2a6da6: movabs rdi,0x1a0
  0x00007f003f2a6db0: mov    rax,QWORD PTR [rsi+rdi*1]
  0x00007f003f2a6db4: lea    rax,[rax+0x1]
  0x00007f003f2a6db8: mov    QWORD PTR [rsi+rdi*1],rax
  0x00007f003f2a6dbc: jl     0x00007f003f2a6ed4  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@36 (line 1966)

  0x00007f003f2a6dc2: cmp    r8d,0x0
  0x00007f003f2a6dc6: movabs rsi,0x7f0038a58ae0  ;   {metadata(method data for {method} {0x00007f003876cf08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a6dd0: movabs rdi,0x1c0
  0x00007f003f2a6dda: jne    0x00007f003f2a6dea
  0x00007f003f2a6de0: movabs rdi,0x1d0
  0x00007f003f2a6dea: mov    rax,QWORD PTR [rsi+rdi*1]
  0x00007f003f2a6dee: lea    rax,[rax+0x1]
  0x00007f003f2a6df2: mov    QWORD PTR [rsi+rdi*1],rax
  0x00007f003f2a6df6: jne    0x00007f003f2a6e34  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@49 (line 1969)

  0x00007f003f2a6dfc: cmp    ecx,edx
  0x00007f003f2a6dfe: movabs rdx,0x7f0038a58ae0  ;   {metadata(method data for {method} {0x00007f003876cf08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a6e08: movabs rsi,0x1e0
  0x00007f003f2a6e12: jne    0x00007f003f2a6e22
  0x00007f003f2a6e18: movabs rsi,0x1f0
  0x00007f003f2a6e22: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2a6e26: lea    rdi,[rdi+0x1]
  0x00007f003f2a6e2a: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2a6e2e: je     0x00007f003f2a6eb5  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@58 (line 1969)

  0x00007f003f2a6e34: movabs rdx,0x7c0001610    ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007f003f2a6e3e: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2a6e42: lea    rdi,[rax+0x18]
  0x00007f003f2a6e46: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2a6e4a: ja     0x00007f003f2a6fb2
  0x00007f003f2a6e50: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2a6e54: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2a6e5b: mov    QWORD PTR [rax],rcx
  0x00007f003f2a6e5e: mov    rcx,rdx
  0x00007f003f2a6e61: shr    rcx,0x3
  0x00007f003f2a6e65: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2a6e68: xor    rcx,rcx
  0x00007f003f2a6e6b: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2a6e6e: xor    rcx,rcx
  0x00007f003f2a6e71: mov    QWORD PTR [rax+0x10],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@65 (line 1969)

  0x00007f003f2a6e75: mov    rdx,rax
  0x00007f003f2a6e78: movabs rcx,0x7f0038a58ae0  ;   {metadata(method data for {method} {0x00007f003876cf08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a6e82: add    QWORD PTR [rcx+0x218],0x1
  0x00007f003f2a6e8a: mov    rdx,r9
  0x00007f003f2a6e8d: mov    rcx,r8
  0x00007f003f2a6e90: mov    r8,r11
  0x00007f003f2a6e93: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@75 (line 1969)

  0x00007f003f2a6e96: mov    QWORD PTR [rsp+0x30],rax
  0x00007f003f2a6e9b: nop
  0x00007f003f2a6e9c: nop
  0x00007f003f2a6e9d: nop
  0x00007f003f2a6e9e: nop
  0x00007f003f2a6e9f: call   0x00007f003f1c4d60  ; OopMap{[48]=Oop off=516}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@75 (line 1969)
                                                ;   {optimized virtual_call}
  0x00007f003f2a6ea4: mov    rax,QWORD PTR [rsp+0x30]  ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@78 (line 1969)

  0x00007f003f2a6ea9: add    rsp,0x60
  0x00007f003f2a6ead: pop    rbp
  0x00007f003f2a6eae: test   DWORD PTR [rip+0x1b11b24c],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a6eb4: ret    
  0x00007f003f2a6eb5: movabs rax,0x7f0038a58ae0  ;   {metadata(method data for {method} {0x00007f003876cf08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a6ebf: inc    DWORD PTR [rax+0x200]
  0x00007f003f2a6ec5: mov    rax,rbx            ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@62 (line 1969)

  0x00007f003f2a6ec8: add    rsp,0x60
  0x00007f003f2a6ecc: pop    rbp
  0x00007f003f2a6ecd: test   DWORD PTR [rip+0x1b11b22d],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a6ed3: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@78 (line 1969)

  0x00007f003f2a6ed4: nop    DWORD PTR [rax+0x0]
  0x00007f003f2a6ed8: jmp    0x00007f003f2a6fce  ;   {no_reloc}
  0x00007f003f2a6edd: add    BYTE PTR [rax],al
  0x00007f003f2a6edf: add    BYTE PTR [rax],al
  0x00007f003f2a6ee1: add    cl,ch
  0x00007f003f2a6ee3: icebp  
  0x00007f003f2a6ee4: add    BYTE PTR [rax],al
  0x00007f003f2a6ee6: add    BYTE PTR [rax-0x75],cl  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@39 (line 1967)

  0x00007f003f2a6ee9: ror    BYTE PTR [rax-0x42],1  ;   {metadata(method data for {method} {0x00007f003876cf08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a6eec: loopne 0x00007f003f2a6e78
  0x00007f003f2a6eee: movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  0x00007f003f2a6eef: cmp    BYTE PTR [rax],al
  0x00007f003f2a6ef1: jg     0x00007f003f2a6ef3
  0x00007f003f2a6ef3: add    BYTE PTR [rax-0x7d],cl
  0x00007f003f2a6ef6: xchg   BYTE PTR [rax+0x1000001],dh
  0x00007f003f2a6efc: mov    rdx,r11
  0x00007f003f2a6eff: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@44 (line 1967)

  0x00007f003f2a6f02: mov    QWORD PTR [rsp+0x38],rax
  0x00007f003f2a6f07: call   0x00007f003f1c4d60  ; OopMap{[56]=Oop off=620}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@44 (line 1967)
                                                ;   {optimized virtual_call}
  0x00007f003f2a6f0c: mov    rax,QWORD PTR [rsp+0x38]
  0x00007f003f2a6f11: jmp    0x00007f003f2a705c  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@47 (line 1967)

  0x00007f003f2a6f16: xchg   ax,ax
  0x00007f003f2a6f18: jmp    0x00007f003f2a6ff4  ;   {no_reloc}
  0x00007f003f2a6f1d: add    BYTE PTR [rax],al
  0x00007f003f2a6f1f: add    BYTE PTR [rax],al
  0x00007f003f2a6f21: add    cl,ch
  0x00007f003f2a6f23: xlat   BYTE PTR ds:[rbx]
  0x00007f003f2a6f24: add    BYTE PTR [rax],al
  0x00007f003f2a6f26: add    BYTE PTR [rax-0x75],cl  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@22 (line 1963)

  0x00007f003f2a6f29: ror    BYTE PTR [rax-0x42],1  ;   {metadata(method data for {method} {0x00007f003876cf08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a6f2c: loopne 0x00007f003f2a6eb8
  0x00007f003f2a6f2e: movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  0x00007f003f2a6f2f: cmp    BYTE PTR [rax],al
  0x00007f003f2a6f31: jg     0x00007f003f2a6f33
  0x00007f003f2a6f33: add    BYTE PTR [rax-0x7d],cl
  0x00007f003f2a6f36: xchg   BYTE PTR [rax+0x1000001],al
  0x00007f003f2a6f3c: mov    rdx,rcx
  0x00007f003f2a6f3f: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@27 (line 1963)

  0x00007f003f2a6f42: mov    QWORD PTR [rsp+0x40],rax
  0x00007f003f2a6f47: call   0x00007f003f1c4d60  ; OopMap{[64]=Oop off=684}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@27 (line 1963)
                                                ;   {optimized virtual_call}
  0x00007f003f2a6f4c: mov    rax,QWORD PTR [rsp+0x40]
  0x00007f003f2a6f51: jmp    0x00007f003f2a705c  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@30 (line 1963)

  0x00007f003f2a6f56: xchg   ax,ax
  0x00007f003f2a6f58: jmp    0x00007f003f2a701a  ;   {no_reloc}
  0x00007f003f2a6f5d: add    BYTE PTR [rax],al
  0x00007f003f2a6f5f: add    BYTE PTR [rax],al
  0x00007f003f2a6f61: add    cl,ch
  0x00007f003f2a6f63: mov    ebp,0x48000000     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@4 (line 1960)

  0x00007f003f2a6f68: mov    edx,eax
  0x00007f003f2a6f6a: movabs rsi,0x7f0038a58ae0  ;   {metadata(method data for {method} {0x00007f003876cf08} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a6f74: add    QWORD PTR [rsi+0x150],0x1
  0x00007f003f2a6f7c: mov    rdx,r8
  0x00007f003f2a6f7f: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@9 (line 1960)

  0x00007f003f2a6f82: mov    QWORD PTR [rsp+0x48],rax
  0x00007f003f2a6f87: call   0x00007f003f1c4d60  ; OopMap{[72]=Oop off=748}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@9 (line 1960)
                                                ;   {optimized virtual_call}
  0x00007f003f2a6f8c: mov    rax,QWORD PTR [rsp+0x48]
  0x00007f003f2a6f91: jmp    0x00007f003f2a705c
  0x00007f003f2a6f96: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2a6f9b: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a6fa3: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop off=776}
                                                ;*synchronization entry
                                                ; - java.lang.String::substring@-1 (line 1959)
                                                ;   {runtime_call}
  0x00007f003f2a6fa8: jmp    0x00007f003f2a6d04
  0x00007f003f2a6fad: call   0x00007f003f279000  ; OopMap{rbx=Oop r9=Oop off=786}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@18 (line 1962)
                                                ;   {runtime_call}
  0x00007f003f2a6fb2: mov    rdx,rdx
  0x00007f003f2a6fb5: call   0x00007f003f279760  ; OopMap{rbx=Oop r9=Oop off=794}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@65 (line 1969)
                                                ;   {runtime_call}
  0x00007f003f2a6fba: jmp    0x00007f003f2a6e75
  0x00007f003f2a6fbf: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2a6fc9: mov    eax,0xa050f00
  0x00007f003f2a6fce: call   0x00007f003f27c5e0  ; OopMap{off=819}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@39 (line 1967)
                                                ;   {runtime_call}
  0x00007f003f2a6fd3: jmp    0x00007f003f2a6ed8
  0x00007f003f2a6fd8: mov    rdx,rdx
  0x00007f003f2a6fdb: call   0x00007f003f2794a0  ; OopMap{off=832}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@39 (line 1967)
                                                ;   {runtime_call}
  0x00007f003f2a6fe0: jmp    0x00007f003f2a6ee7
  0x00007f003f2a6fe5: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2a6fef: mov    eax,0xa050f00
  0x00007f003f2a6ff4: call   0x00007f003f27c5e0  ; OopMap{off=857}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@22 (line 1963)
                                                ;   {runtime_call}
  0x00007f003f2a6ff9: jmp    0x00007f003f2a6f18
  0x00007f003f2a6ffe: mov    rdx,rdx
  0x00007f003f2a7001: call   0x00007f003f2794a0  ; OopMap{off=870}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@22 (line 1963)
                                                ;   {runtime_call}
  0x00007f003f2a7006: jmp    0x00007f003f2a6f27
  0x00007f003f2a700b: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2a7015: mov    eax,0xa050f00
  0x00007f003f2a701a: call   0x00007f003f27c5e0  ; OopMap{off=895}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@4 (line 1960)
                                                ;   {runtime_call}
  0x00007f003f2a701f: jmp    0x00007f003f2a6f58
  0x00007f003f2a7024: mov    rdx,rdx
  0x00007f003f2a7027: call   0x00007f003f2794a0  ; OopMap{off=908}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::substring@4 (line 1960)
                                                ;   {runtime_call}
  0x00007f003f2a702c: jmp    0x00007f003f2a6f67
  0x00007f003f2a7031: nop
  0x00007f003f2a7032: nop
  0x00007f003f2a7033: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a703a: movabs r10,0x0
  0x00007f003f2a7044: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a704b: movabs r10,0x0
  0x00007f003f2a7055: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a705c: add    rsp,0x60
  0x00007f003f2a7060: pop    rbp
  0x00007f003f2a7061: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a7066: hlt    
  0x00007f003f2a7067: hlt    
  0x00007f003f2a7068: hlt    
  0x00007f003f2a7069: hlt    
  0x00007f003f2a706a: hlt    
  0x00007f003f2a706b: hlt    
  0x00007f003f2a706c: hlt    
  0x00007f003f2a706d: hlt    
  0x00007f003f2a706e: hlt    
  0x00007f003f2a706f: hlt    
  0x00007f003f2a7070: hlt    
  0x00007f003f2a7071: hlt    
  0x00007f003f2a7072: hlt    
  0x00007f003f2a7073: hlt    
  0x00007f003f2a7074: hlt    
  0x00007f003f2a7075: hlt    
  0x00007f003f2a7076: hlt    
  0x00007f003f2a7077: hlt    
  0x00007f003f2a7078: hlt    
  0x00007f003f2a7079: hlt    
  0x00007f003f2a707a: hlt    
  0x00007f003f2a707b: hlt    
  0x00007f003f2a707c: hlt    
  0x00007f003f2a707d: hlt    
  0x00007f003f2a707e: hlt    
  0x00007f003f2a707f: hlt    
[Stub Code]
  0x00007f003f2a7080: nop                       ;   {no_reloc}
  0x00007f003f2a7081: nop
  0x00007f003f2a7082: nop
  0x00007f003f2a7083: nop
  0x00007f003f2a7084: nop
  0x00007f003f2a7085: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2a708f: jmp    0x00007f003f2a708f  ;   {runtime_call}
  0x00007f003f2a7094: nop
  0x00007f003f2a7095: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2a709f: jmp    0x00007f003f2a709f  ;   {runtime_call}
  0x00007f003f2a70a4: nop
  0x00007f003f2a70a5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2a70af: jmp    0x00007f003f2a70af  ;   {runtime_call}
  0x00007f003f2a70b4: nop
  0x00007f003f2a70b5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2a70bf: jmp    0x00007f003f2a70bf  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2a70c4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2a70c9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a70ce: sub    rsp,0x80
  0x00007f003f2a70d5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a70da: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a70df: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a70e4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a70e9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a70ee: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a70f3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a70f8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a70fd: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a7102: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a7107: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a710c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a7111: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a7116: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a711b: mov    QWORD PTR [rsp],r15
  0x00007f003f2a711f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a7129: movabs rsi,0x7f003f2a70c9  ;   {internal_word}
  0x00007f003f2a7133: mov    rdx,rsp
  0x00007f003f2a7136: and    rsp,0xfffffffffffffff0
  0x00007f003f2a713a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a713f: hlt    
[Deopt Handler Code]
  0x00007f003f2a7140: movabs r10,0x7f003f2a7140  ;   {section_word}
  0x00007f003f2a714a: push   r10
  0x00007f003f2a714c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a7151: hlt    
  0x00007f003f2a7152: hlt    
  0x00007f003f2a7153: hlt    
  0x00007f003f2a7154: hlt    
  0x00007f003f2a7155: hlt    
  0x00007f003f2a7156: hlt    
  0x00007f003f2a7157: hlt    
<nmethod compile_id='73' compiler='C1' level='3' entry='0x00007f003f2a6ca0' size='2544' address='0x00007f003f2a6ad0' relocation_offset='312' insts_offset='464' stub_offset='1456' scopes_data_offset='1680' scopes_pcs_offset='1944' dependencies_offset='2520' nul_chk_table_offset='2528' metadata_offset='1672' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='396' iicount='396' stamp='0.291'/>
----------------------------------------------------------------------
java/net/URL.getPort  [0x00007f003f2a7dc0, 0x00007f003f2a7ed0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038805ad0} &apos;getPort&apos; &apos;()I&apos; in &apos;java/net/URL&apos;
  #           
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.meta.Assumptions$NoFinalizableSubclass from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
[sp+0x40]  (sp of caller)
  0x00007f003f2a7dc0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2a7dc4: shl    r10,0x3
  0x00007f003f2a7dc8: cmp    r10,rax
  0x00007f003f2a7dcb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2a7dd1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2a7ddc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2a7de0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a7de7: push   rbp
  0x00007f003f2a7de8: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getPort@0 (line 777)

  0x00007f003f2a7dec: mov    eax,DWORD PTR [rsi+0xc]  ;*getfield port {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getPort@1 (line 777)

  0x00007f003f2a7def: add    rsp,0x30
  0x00007f003f2a7df3: pop    rbp
  0x00007f003f2a7df4: test   DWORD PTR [rip+0x1b11a306],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a7dfa: ret    
  0x00007f003f2a7dfb: nop
  0x00007f003f2a7dfc: nop
  0x00007f003f2a7dfd: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a7e04: movabs r10,0x0
  0x00007f003f2a7e0e: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a7e15: movabs r10,0x0
  0x00007f003f2a7e1f: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a7e26: add    rsp,0x30
  0x00007f003f2a7e2a: pop    rbp
  0x00007f003f2a7e2b: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a7e30: hlt    
  0x00007f003f2a7e31: hlt    
  0x00007f003f2a7e32: hlt    
  0x00007f003f2a7e33: hlt    
  0x00007f003f2a7e34: hlt    
  0x00007f003f2a7e35: hlt    
  0x00007f003f2a7e36: hlt    
  0x00007f003f2a7e37: hlt    
  0x00007f003f2a7e38: hlt    
  0x00007f003f2a7e39: hlt    
  0x00007f003f2a7e3a: hlt    
  0x00007f003f2a7e3b: hlt    
  0x00007f003f2a7e3c: hlt    
  0x00007f003f2a7e3d: hlt    
  0x00007f003f2a7e3e: hlt    
  0x00007f003f2a7e3f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2a7e40: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2a7e45: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a7e4a: sub    rsp,0x80
  0x00007f003f2a7e51: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a7e56: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a7e5b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a7e60: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a7e65: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a7e6a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a7e6f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a7e74: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a7e79: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a7e7e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a7e83: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a7e88: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a7e8d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a7e92: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a7e97: mov    QWORD PTR [rsp],r15
  0x00007f003f2a7e9b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a7ea5: movabs rsi,0x7f003f2a7e45  ;   {internal_word}
  0x00007f003f2a7eaf: mov    rdx,rsp
  0x00007f003f2a7eb2: and    rsp,0xfffffffffffffff0
  0x00007f003f2a7eb6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a7ebb: hlt    
[Deopt Handler Code]
  0x00007f003f2a7ebc: movabs r10,0x7f003f2a7ebc  ;   {section_word}
  0x00007f003f2a7ec6: push   r10
  0x00007f003f2a7ec8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a7ecd: hlt    
  0x00007f003f2a7ece: hlt    
  0x00007f003f2a7ecf: hlt    
<nmethod compile_id='72' compiler='C1' level='1' entry='0x00007f003f2a7dc0' size='736' address='0x00007f003f2a7c50' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/net/URL getPort ()I' bytes='5' count='137' iicount='137' stamp='0.292'/>
<writer thread='139637818533632'/>
<task_queued compile_id='74' method='java/util/concurrent/ConcurrentHashMap spread (I)I' bytes='10' count='256' iicount='256' level='3' stamp='0.292' comment='tiered' hot_count='256'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/net/URL.getQuery  [0x00007f003f2a80c0, 0x00007f003f2a81d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038805850} &apos;getQuery&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2a80c0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2a80c4: shl    r10,0x3
  0x00007f003f2a80c8: cmp    r10,rax
  0x00007f003f2a80cb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2a80d1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2a80dc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2a80e0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a80e7: push   rbp
  0x00007f003f2a80e8: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getQuery@0 (line 736)

  0x00007f003f2a80ec: mov    eax,DWORD PTR [rsi+0x20]
  0x00007f003f2a80ef: shl    rax,0x3            ;*getfield query {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URL::getQuery@1 (line 736)

  0x00007f003f2a80f3: add    rsp,0x30
  0x00007f003f2a80f7: pop    rbp
  0x00007f003f2a80f8: test   DWORD PTR [rip+0x1b11a002],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a80fe: ret    
  0x00007f003f2a80ff: nop
  0x00007f003f2a8100: nop
  0x00007f003f2a8101: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a8108: movabs r10,0x0
  0x00007f003f2a8112: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a8119: movabs r10,0x0
  0x00007f003f2a8123: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a812a: add    rsp,0x30
  0x00007f003f2a812e: pop    rbp
  0x00007f003f2a812f: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a8134: hlt    
  0x00007f003f2a8135: hlt    
  0x00007f003f2a8136: hlt    
  0x00007f003f2a8137: hlt    
  0x00007f003f2a8138: hlt    
  0x00007f003f2a8139: hlt    
  0x00007f003f2a813a: hlt    
  0x00007f003f2a813b: hlt    
  0x00007f003f2a813c: hlt    
  0x00007f003f2a813d: hlt    
  0x00007f003f2a813e: hlt    
  0x00007f003f2a813f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2a8140: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2a8145: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a814a: sub    rsp,0x80
  0x00007f003f2a8151: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a8156: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a815b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a8160: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a8165: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a816a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a816f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a8174: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a8179: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a817e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a8183: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a8188: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a818d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a8192: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a8197: mov    QWORD PTR [rsp],r15
  0x00007f003f2a819b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a81a5: movabs rsi,0x7f003f2a8145  ;   {internal_word}
  0x00007f003f2a81af: mov    rdx,rsp
  0x00007f003f2a81b2: and    rsp,0xfffffffffffffff0
  0x00007f003f2a81b6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a81bb: hlt    
[Deopt Handler Code]
  0x00007f003f2a81bc: movabs r10,0x7f003f2a81bc  ;   {section_word}
  0x00007f003f2a81c6: push   r10
  0x00007f003f2a81c8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a81cd: hlt    
  0x00007f003f2a81ce: hlt    
  0x00007f003f2a81cf: hlt    
<nmethod compile_id='66' compiler='C1' level='1' entry='0x00007f003f2a80c0' size='736' address='0x00007f003f2a7f50' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/net/URL getQuery ()Ljava/lang/String;' bytes='5' count='154' iicount='154' stamp='0.292'/>
<writer thread='139637818533632'/>
----------------------------------------------------------------------
sun/misc/Unsafe.compareAndSwapObject  [0x00007f003f2a83e0, 0x00007f003f2a8608]  552 bytes
[Entry Point]
  # {method} {0x00007f00387f77c8} &apos;compareAndSwapObject&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rsi:rsi   = &apos;sun/misc/Unsafe&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = long
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2a83e0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2a83e4: shl    r10,0x3
  0x00007f003f2a83e8: cmp    rax,r10
  0x00007f003f2a83eb: je     0x00007f003f2a83f8
  0x00007f003f2a83f1: jmp    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2a83f6: xchg   ax,ax
[Verified Entry Point]
  0x00007f003f2a83f8: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a83ff: push   rbp
  0x00007f003f2a8400: mov    rbp,rsp
  0x00007f003f2a8403: sub    rsp,0x40
  0x00007f003f2a8407: mov    QWORD PTR [rsp+0x20],r9
  0x00007f003f2a840c: cmp    r9,0x0
  0x00007f003f2a8410: lea    r9,[rsp+0x20]
  0x00007f003f2a8415: cmove  r9,QWORD PTR [rsp+0x20]
  0x00007f003f2a841b: mov    QWORD PTR [rsp+0x18],r8
  0x00007f003f2a8420: cmp    r8,0x0
  0x00007f003f2a8424: lea    r8,[rsp+0x18]
  0x00007f003f2a8429: cmove  r8,QWORD PTR [rsp+0x18]
  0x00007f003f2a842f: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2a8434: cmp    rdx,0x0
  0x00007f003f2a8438: lea    rdx,[rsp+0x8]
  0x00007f003f2a843d: cmove  rdx,QWORD PTR [rsp+0x8]
  0x00007f003f2a8443: mov    QWORD PTR [rsp],rsi
  0x00007f003f2a8447: cmp    rsi,0x0
  0x00007f003f2a844b: lea    rsi,[rsp]
  0x00007f003f2a844f: cmove  rsi,QWORD PTR [rsp]  ; OopMap{[32]=Oop [24]=Oop [8]=Oop [0]=Oop off=116}
  0x00007f003f2a8454: movabs r10,0x7f003f2a8454  ;   {section_word}
  0x00007f003f2a845e: mov    QWORD PTR [r15+0x1c8],r10
  0x00007f003f2a8465: mov    QWORD PTR [r15+0x1c0],rsp
  0x00007f003f2a846c: cmp    BYTE PTR [rip+0x1a2ac561],0x0        # 0x00007f00595549d4
                                                ;   {external_word}
  0x00007f003f2a8473: je     0x00007f003f2a84b7
  0x00007f003f2a8479: push   rsi
  0x00007f003f2a847a: push   rdx
  0x00007f003f2a847b: push   rcx
  0x00007f003f2a847c: push   r8
  0x00007f003f2a847e: push   r9
  0x00007f003f2a8480: movabs rsi,0x7f00387f77c8  ;   {metadata({method} {0x00007f00387f77c8} &apos;compareAndSwapObject&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00007f003f2a848a: mov    rdi,r15
  0x00007f003f2a848d: test   esp,0xf
  0x00007f003f2a8493: je     0x00007f003f2a84ab
  0x00007f003f2a8499: sub    rsp,0x8
  0x00007f003f2a849d: call   0x00007f0058f49f20  ;   {runtime_call}
  0x00007f003f2a84a2: add    rsp,0x8
  0x00007f003f2a84a6: jmp    0x00007f003f2a84b0
  0x00007f003f2a84ab: call   0x00007f0058f49f20  ;   {runtime_call}
  0x00007f003f2a84b0: pop    r9
  0x00007f003f2a84b2: pop    r8
  0x00007f003f2a84b4: pop    rcx
  0x00007f003f2a84b5: pop    rdx
  0x00007f003f2a84b6: pop    rsi
  0x00007f003f2a84b7: lea    rdi,[r15+0x1e0]
  0x00007f003f2a84be: mov    DWORD PTR [r15+0x258],0x4
  0x00007f003f2a84c9: call   0x00007f005901ac20  ;   {runtime_call}
  0x00007f003f2a84ce: vzeroupper 
  0x00007f003f2a84d1: and    eax,0xff
  0x00007f003f2a84d7: setne  al
  0x00007f003f2a84da: mov    DWORD PTR [r15+0x258],0x5
  0x00007f003f2a84e5: mov    ecx,r15d
  0x00007f003f2a84e8: shr    ecx,0x4
  0x00007f003f2a84eb: and    ecx,0xffc
  0x00007f003f2a84f1: movabs r10,0x7f005a3c1000  ;   {external_word}
  0x00007f003f2a84fb: mov    DWORD PTR [r10+rcx*1],ecx
  0x00007f003f2a84ff: cmp    DWORD PTR [rip+0x1a2b74b3],0x0        # 0x00007f005955f9bc
                                                ;   {external_word}
  0x00007f003f2a8509: jne    0x00007f003f2a851d
  0x00007f003f2a850f: cmp    DWORD PTR [r15+0x30],0x0
  0x00007f003f2a8517: je     0x00007f003f2a853e
  0x00007f003f2a851d: mov    QWORD PTR [rbp-0x8],rax
  0x00007f003f2a8521: mov    rdi,r15
  0x00007f003f2a8524: mov    r12,rsp
  0x00007f003f2a8527: sub    rsp,0x0
  0x00007f003f2a852b: and    rsp,0xfffffffffffffff0
  0x00007f003f2a852f: call   0x00007f0058fefce0  ;   {runtime_call}
  0x00007f003f2a8534: mov    rsp,r12
  0x00007f003f2a8537: xor    r12,r12
  0x00007f003f2a853a: mov    rax,QWORD PTR [rbp-0x8]
  0x00007f003f2a853e: mov    DWORD PTR [r15+0x258],0x8
  0x00007f003f2a8549: cmp    DWORD PTR [r15+0x2b0],0x1
  0x00007f003f2a8554: je     0x00007f003f2a85e4
  0x00007f003f2a855a: cmp    BYTE PTR [rip+0x1a2ac473],0x0        # 0x00007f00595549d4
                                                ;   {external_word}
  0x00007f003f2a8561: je     0x00007f003f2a859f
  0x00007f003f2a8567: mov    QWORD PTR [rbp-0x8],rax
  0x00007f003f2a856b: movabs rsi,0x7f00387f77c8  ;   {metadata({method} {0x00007f00387f77c8} &apos;compareAndSwapObject&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00007f003f2a8575: mov    rdi,r15
  0x00007f003f2a8578: test   esp,0xf
  0x00007f003f2a857e: je     0x00007f003f2a8596
  0x00007f003f2a8584: sub    rsp,0x8
  0x00007f003f2a8588: call   0x00007f0058f49f30  ;   {runtime_call}
  0x00007f003f2a858d: add    rsp,0x8
  0x00007f003f2a8591: jmp    0x00007f003f2a859b
  0x00007f003f2a8596: call   0x00007f0058f49f30  ;   {runtime_call}
  0x00007f003f2a859b: mov    rax,QWORD PTR [rbp-0x8]
  0x00007f003f2a859f: movabs r10,0x0
  0x00007f003f2a85a9: mov    QWORD PTR [r15+0x1c0],r10
  0x00007f003f2a85b0: movabs r10,0x0
  0x00007f003f2a85ba: mov    QWORD PTR [r15+0x1c8],r10
  0x00007f003f2a85c1: mov    rcx,QWORD PTR [r15+0x38]
  0x00007f003f2a85c5: mov    DWORD PTR [rcx+0x100],0x0
  0x00007f003f2a85cf: leave  
  0x00007f003f2a85d0: cmp    QWORD PTR [r15+0x8],0x0
  0x00007f003f2a85d8: jne    0x00007f003f2a85df
  0x00007f003f2a85de: ret    
  0x00007f003f2a85df: jmp    Stub::forward exception  ;   {runtime_call}
  0x00007f003f2a85e4: mov    QWORD PTR [rbp-0x8],rax
  0x00007f003f2a85e8: mov    r12,rsp
  0x00007f003f2a85eb: sub    rsp,0x0
  0x00007f003f2a85ef: and    rsp,0xfffffffffffffff0
  0x00007f003f2a85f3: call   0x00007f0058f521e0  ;   {runtime_call}
  0x00007f003f2a85f8: mov    rsp,r12
  0x00007f003f2a85fb: xor    r12,r12
  0x00007f003f2a85fe: mov    rax,QWORD PTR [rbp-0x8]
  0x00007f003f2a8602: jmp    0x00007f003f2a855a
  0x00007f003f2a8607: hlt    
<nmethod compile_id='75' compile_kind='c2n' level='0' entry='0x00007f003f2a83e0' size='952' address='0x00007f003f2a8250' relocation_offset='312' consts_offset='952' insts_offset='400' method='sun/misc/Unsafe compareAndSwapObject (Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z' bytes='0' count='256' iicount='256' stamp='0.293'/>
[Loaded jdk.vm.ci.meta.Assumptions$ConcreteSubtype from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.spread  [0x00007f003f2a87c0, 0x00007f003f2a8910]  336 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f0038947bb0} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2a87c0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a87c7: push   rbp
  0x00007f003f2a87c8: sub    rsp,0x30
  0x00007f003f2a87cc: movabs rax,0x7f0038a58d50  ;   {metadata(method data for {method} {0x00007f0038947bb0} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2a87d6: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f2a87dc: add    edi,0x8
  0x00007f003f2a87df: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f2a87e5: movabs rax,0x7f0038947bb0  ;   {metadata({method} {0x00007f0038947bb0} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2a87ef: and    edi,0x1ff8
  0x00007f003f2a87f5: cmp    edi,0x0
  0x00007f003f2a87f8: je     0x00007f003f2a8819  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@0 (line 685)

  0x00007f003f2a87fe: mov    rax,rsi
  0x00007f003f2a8801: shr    eax,0x10
  0x00007f003f2a8804: xor    rax,rsi
  0x00007f003f2a8807: and    eax,0x7fffffff
  0x00007f003f2a880d: add    rsp,0x30
  0x00007f003f2a8811: pop    rbp
  0x00007f003f2a8812: test   DWORD PTR [rip+0x1b1198e8],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a8818: ret    
  0x00007f003f2a8819: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2a881e: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a8826: call   0x00007f003f27d5e0  ; OopMap{off=107}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 685)
                                                ;   {runtime_call}
  0x00007f003f2a882b: jmp    0x00007f003f2a87fe
  0x00007f003f2a882d: nop
  0x00007f003f2a882e: nop
  0x00007f003f2a882f: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a8836: movabs r10,0x0
  0x00007f003f2a8840: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a8847: movabs r10,0x0
  0x00007f003f2a8851: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a8858: add    rsp,0x30
  0x00007f003f2a885c: pop    rbp
  0x00007f003f2a885d: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a8862: hlt    
  0x00007f003f2a8863: hlt    
  0x00007f003f2a8864: hlt    
  0x00007f003f2a8865: hlt    
  0x00007f003f2a8866: hlt    
  0x00007f003f2a8867: hlt    
  0x00007f003f2a8868: hlt    
  0x00007f003f2a8869: hlt    
  0x00007f003f2a886a: hlt    
  0x00007f003f2a886b: hlt    
  0x00007f003f2a886c: hlt    
  0x00007f003f2a886d: hlt    
  0x00007f003f2a886e: hlt    
  0x00007f003f2a886f: hlt    
  0x00007f003f2a8870: hlt    
  0x00007f003f2a8871: hlt    
  0x00007f003f2a8872: hlt    
  0x00007f003f2a8873: hlt    
  0x00007f003f2a8874: hlt    
  0x00007f003f2a8875: hlt    
  0x00007f003f2a8876: hlt    
  0x00007f003f2a8877: hlt    
  0x00007f003f2a8878: hlt    
  0x00007f003f2a8879: hlt    
  0x00007f003f2a887a: hlt    
  0x00007f003f2a887b: hlt    
  0x00007f003f2a887c: hlt    
  0x00007f003f2a887d: hlt    
  0x00007f003f2a887e: hlt    
  0x00007f003f2a887f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2a8880: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2a8885: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a888a: sub    rsp,0x80
  0x00007f003f2a8891: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a8896: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a889b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a88a0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a88a5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a88aa: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a88af: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a88b4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a88b9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a88be: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a88c3: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a88c8: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a88cd: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a88d2: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a88d7: mov    QWORD PTR [rsp],r15
  0x00007f003f2a88db: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a88e5: movabs rsi,0x7f003f2a8885  ;   {internal_word}
  0x00007f003f2a88ef: mov    rdx,rsp
  0x00007f003f2a88f2: and    rsp,0xfffffffffffffff0
  0x00007f003f2a88f6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a88fb: hlt    
[Deopt Handler Code]
  0x00007f003f2a88fc: movabs r10,0x7f003f2a88fc  ;   {section_word}
  0x00007f003f2a8906: push   r10
  0x00007f003f2a8908: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a890d: hlt    
  0x00007f003f2a890e: hlt    
  0x00007f003f2a890f: hlt    
<nmethod compile_id='74' compiler='C1' level='3' entry='0x00007f003f2a87c0' size='808' address='0x00007f003f2a8650' relocation_offset='312' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='736' dependencies_offset='800' metadata_offset='704' method='java/util/concurrent/ConcurrentHashMap spread (I)I' bytes='10' count='257' iicount='257' stamp='0.294'/>
<writer thread='139637818533632'/>
<task_queued compile_id='76' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='161' backedge_count='5120' iicount='161' level='3' stamp='0.294' comment='tiered' hot_count='161'/>
<task_queued compile_id='77' method='sun/misc/URLClassPath getNextLoader ([II)Lsun/misc/URLClassPath$Loader;' bytes='88' count='384' iicount='384' level='3' stamp='0.294' comment='tiered' hot_count='384'/>
<task_queued compile_id='78' method='sun/misc/URLClassPath getLoader (I)Lsun/misc/URLClassPath$Loader;' bytes='243' count='384' backedge_count='17' iicount='384' level='3' stamp='0.294' comment='tiered' hot_count='384'/>
[Loaded jdk.vm.ci.meta.Assumptions$LeafType from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<task_queued compile_id='79' method='java/net/URLStreamHandler getDefaultPort ()I' bytes='2' count='128' iicount='128' level='1' stamp='0.294' comment='tiered' hot_count='128'/>
[Loaded jdk.vm.ci.meta.Assumptions$CallSiteTargetValue from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<task_queued compile_id='80' method='java/util/jar/JarFile getJarEntry (Ljava/lang/String;)Ljava/util/jar/JarEntry;' bytes='9' count='384' iicount='384' level='3' stamp='0.295' comment='tiered' hot_count='384'/>
[Loaded jdk.vm.ci.code.Architecture from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.TargetDescription from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.BytecodePosition from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<task_queued compile_id='81' method='java/security/CodeSource getLocation ()Ljava/net/URL;' bytes='5' count='128' iicount='128' level='1' stamp='0.295' comment='tiered' hot_count='128'/>
[Loaded jdk.vm.ci.code.DebugInfo from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<task_queued compile_id='82' method='java/net/URLClassLoader access$000 (Ljava/net/URLClassLoader;)Lsun/misc/URLClassPath;' bytes='5' count='128' iicount='128' level='1' stamp='0.295' comment='tiered' hot_count='128'/>
<task_queued compile_id='83' method='sun/misc/URLClassPath$JarLoader access$700 (Lsun/misc/URLClassPath$JarLoader;)Ljava/util/jar/JarFile;' bytes='5' count='128' iicount='128' level='1' stamp='0.295' comment='tiered' hot_count='128'/>
[Loaded jdk.vm.ci.code.RegisterSaveLayout from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.BytecodeFrame from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.Location from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<task_queued compile_id='84' method='java/util/zip/ZipFile access$000 (Ljava/util/zip/ZipFile;)Ljava/util/Map;' bytes='5' count='128' iicount='128' level='1' stamp='0.296' comment='tiered' hot_count='128'/>
[Loaded jdk.vm.ci.code.Register from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.meta.Value from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.meta.AllocatableValue from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.RegisterValue from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.StackSlot from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.StackLockValue from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.VirtualObject from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.site.Site from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.site.Infopoint from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.site.Call from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.site.Reference from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.site.ConstantReference from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.site.DataPatch from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.site.DataSectionReference from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.site.ExceptionHandler from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.site.Mark from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.code.site.InfopointReason from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.meta.SerializableConstant from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/String.replace
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.meta.PrimitiveConstant from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
  [0x00007f003f2a8b60, 0x00007f003f2a9210]  1712 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003876d258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = char
  # parm1:    rcx       = char
  #           [sp+0x60]  (sp of caller)
  0x00007f003f2a8b60: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2a8b64: shl    r10,0x3
  0x00007f003f2a8b68: cmp    r10,rax
  0x00007f003f2a8b6b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2a8b71: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2a8b7c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2a8b80: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a8b87: push   rbp
  0x00007f003f2a8b88: sub    rsp,0x50
  0x00007f003f2a8b8c: mov    r8,rdx
  0x00007f003f2a8b8f: mov    r9,rcx
  0x00007f003f2a8b92: movabs rbx,0x7f0038a5bd50  ;   {metadata(method data for {method} {0x00007f003876d258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8b9c: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f2a8ba2: add    edx,0x8
  0x00007f003f2a8ba5: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f2a8bab: movabs rbx,0x7f003876d258  ;   {metadata({method} {0x00007f003876d258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8bb5: and    edx,0x1ff8
  0x00007f003f2a8bbb: cmp    edx,0x0
  0x00007f003f2a8bbe: je     0x00007f003f2a9067  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@0 (line 2067)

  0x00007f003f2a8bc4: cmp    r8d,r9d
  0x00007f003f2a8bc7: movabs rbx,0x7f0038a5bd50  ;   {metadata(method data for {method} {0x00007f003876d258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8bd1: movabs rdx,0x130
  0x00007f003f2a8bdb: je     0x00007f003f2a8beb
  0x00007f003f2a8be1: movabs rdx,0x140
  0x00007f003f2a8beb: mov    rdi,QWORD PTR [rbx+rdx*1]
  0x00007f003f2a8bef: lea    rdi,[rdi+0x1]
  0x00007f003f2a8bf3: mov    QWORD PTR [rbx+rdx*1],rdi
  0x00007f003f2a8bf7: je     0x00007f003f2a9058  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@2 (line 2067)

  0x00007f003f2a8bfd: mov    r11d,DWORD PTR [rsi+0xc]
  0x00007f003f2a8c01: shl    r11,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@6 (line 2068)

  0x00007f003f2a8c05: mov    r13d,DWORD PTR [r11+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ; implicit exception: dispatches to 0x00007f003f2a907e
  0x00007f003f2a8c09: mov    ebx,0xffffffff
  0x00007f003f2a8c0e: jmp    0x00007f003f2a8c9f  ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@20 (line 2072)

  0x00007f003f2a8c13: nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f003f2a8c18: movsxd rbx,r14d
  0x00007f003f2a8c1b: cmp    r14d,DWORD PTR [r11+0xc]
  0x00007f003f2a8c1f: jae    0x00007f003f2a9083
  0x00007f003f2a8c25: movzx  ebx,WORD PTR [r11+rbx*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@33 (line 2073)

  0x00007f003f2a8c2b: movabs rdx,0x7f0038a5bd50  ;   {metadata(method data for {method} {0x00007f003876d258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8c35: mov    edi,DWORD PTR [rdx+0x100]
  0x00007f003f2a8c3b: add    edi,0x8
  0x00007f003f2a8c3e: mov    DWORD PTR [rdx+0x100],edi
  0x00007f003f2a8c44: movabs rdx,0x7f003876d258  ;   {metadata({method} {0x00007f003876d258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8c4e: and    edi,0xfff8
  0x00007f003f2a8c54: cmp    edi,0x0
  0x00007f003f2a8c57: je     0x00007f003f2a908c  ; OopMap{rsi=Oop r11=Oop off=253}
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@35 (line 2073)

  0x00007f003f2a8c5d: test   DWORD PTR [rip+0x1b11949d],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2a8c63: cmp    ebx,r8d
  0x00007f003f2a8c66: movabs rbx,0x7f0038a5bd50  ;   {metadata(method data for {method} {0x00007f003876d258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8c70: movabs rdx,0x170
  0x00007f003f2a8c7a: jne    0x00007f003f2a8c8a
  0x00007f003f2a8c80: movabs rdx,0x180
  0x00007f003f2a8c8a: mov    rdi,QWORD PTR [rbx+rdx*1]
  0x00007f003f2a8c8e: lea    rdi,[rdi+0x1]
  0x00007f003f2a8c92: mov    QWORD PTR [rbx+rdx*1],rdi
  0x00007f003f2a8c96: je     0x00007f003f2a8ce3  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@35 (line 2073)

  0x00007f003f2a8c9c: mov    rbx,r14            ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@20 (line 2072)

  0x00007f003f2a8c9f: mov    r14,rbx
  0x00007f003f2a8ca2: inc    r14d
  0x00007f003f2a8ca5: cmp    r14d,r13d
  0x00007f003f2a8ca8: movabs rbx,0x7f0038a5bd50  ;   {metadata(method data for {method} {0x00007f003876d258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8cb2: movabs rdx,0x150
  0x00007f003f2a8cbc: jge    0x00007f003f2a8ccc
  0x00007f003f2a8cc2: movabs rdx,0x160
  0x00007f003f2a8ccc: mov    rdi,QWORD PTR [rbx+rdx*1]
  0x00007f003f2a8cd0: lea    rdi,[rdi+0x1]
  0x00007f003f2a8cd4: mov    QWORD PTR [rbx+rdx*1],rdi
  0x00007f003f2a8cd8: jge    0x00007f003f2a8cf3
  0x00007f003f2a8cde: jmp    0x00007f003f2a8c18  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@26 (line 2072)

  0x00007f003f2a8ce3: movabs rbx,0x7f0038a5bd50  ;   {metadata(method data for {method} {0x00007f003876d258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8ced: inc    DWORD PTR [rbx+0x190]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@38 (line 2074)

  0x00007f003f2a8cf3: cmp    r14d,r13d
  0x00007f003f2a8cf6: movabs rbx,0x7f0038a5bd50  ;   {metadata(method data for {method} {0x00007f003876d258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8d00: movabs rdx,0x1a8
  0x00007f003f2a8d0a: jge    0x00007f003f2a8d1a
  0x00007f003f2a8d10: movabs rdx,0x1b8
  0x00007f003f2a8d1a: mov    rdi,QWORD PTR [rbx+rdx*1]
  0x00007f003f2a8d1e: lea    rdi,[rdi+0x1]
  0x00007f003f2a8d22: mov    QWORD PTR [rbx+rdx*1],rdi
  0x00007f003f2a8d26: jge    0x00007f003f2a9058  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@44 (line 2077)

  0x00007f003f2a8d2c: mov    rbx,r13
  0x00007f003f2a8d2f: movabs rdx,0x7c00001f8    ;   {metadata({type array char})}
  0x00007f003f2a8d39: movsxd rbx,ebx
  0x00007f003f2a8d3c: mov    rdi,rbx
  0x00007f003f2a8d3f: cmp    rbx,0xffffff
  0x00007f003f2a8d46: ja     0x00007f003f2a90a3
  0x00007f003f2a8d4c: movabs rsi,0x17
  0x00007f003f2a8d56: lea    rsi,[rsi+rbx*2]
  0x00007f003f2a8d5a: and    rsi,0xfffffffffffffff8
  0x00007f003f2a8d5e: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2a8d62: lea    rsi,[rax+rsi*1]
  0x00007f003f2a8d66: cmp    rsi,QWORD PTR [r15+0x70]
  0x00007f003f2a8d6a: ja     0x00007f003f2a90a3
  0x00007f003f2a8d70: mov    QWORD PTR [r15+0x60],rsi
  0x00007f003f2a8d74: sub    rsi,rax
  0x00007f003f2a8d77: mov    QWORD PTR [rax],0x1
  0x00007f003f2a8d7e: mov    rcx,rdx
  0x00007f003f2a8d81: shr    rcx,0x3
  0x00007f003f2a8d85: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2a8d88: mov    DWORD PTR [rax+0xc],ebx
  0x00007f003f2a8d8b: sub    rsi,0x10
  0x00007f003f2a8d8f: je     0x00007f003f2a8da6
  0x00007f003f2a8d95: xor    rbx,rbx
  0x00007f003f2a8d98: shr    rsi,0x3
  0x00007f003f2a8d9c: mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x00007f003f2a8da1: dec    rsi
  0x00007f003f2a8da4: jne    0x00007f003f2a8d9c
  0x00007f003f2a8da6: mov    rbx,rax            ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@48 (line 2078)

  0x00007f003f2a8da9: mov    edx,0x0
  0x00007f003f2a8dae: jmp    0x00007f003f2a8e26  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@55 (line 2079)

  0x00007f003f2a8db3: nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f003f2a8db8: movsxd rsi,edx
  0x00007f003f2a8dbb: cmp    edx,DWORD PTR [r11+0xc]
  0x00007f003f2a8dbf: jae    0x00007f003f2a90ad
  0x00007f003f2a8dc5: movzx  esi,WORD PTR [r11+rsi*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@70 (line 2080)

  0x00007f003f2a8dcb: movsxd rdi,edx
  0x00007f003f2a8dce: cmp    edx,DWORD PTR [rbx+0xc]
  0x00007f003f2a8dd1: jae    0x00007f003f2a90b6
  0x00007f003f2a8dd7: mov    WORD PTR [rbx+rdi*2+0x10],si
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@71 (line 2080)

  0x00007f003f2a8ddc: inc    edx
  0x00007f003f2a8dde: movabs rsi,0x7f0038a5bd50  ;   {metadata(method data for {method} {0x00007f003876d258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8de8: mov    edi,DWORD PTR [rsi+0x100]
  0x00007f003f2a8dee: add    edi,0x8
  0x00007f003f2a8df1: mov    DWORD PTR [rsi+0x100],edi
  0x00007f003f2a8df7: movabs rsi,0x7f003876d258  ;   {metadata({method} {0x00007f003876d258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8e01: and    edi,0xfff8
  0x00007f003f2a8e07: cmp    edi,0x0
  0x00007f003f2a8e0a: je     0x00007f003f2a90bf  ; OopMap{r11=Oop rbx=Oop off=688}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@75 (line 2079)

  0x00007f003f2a8e10: test   DWORD PTR [rip+0x1b1192ea],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2a8e16: movabs rsi,0x7f0038a5bd50  ;   {metadata(method data for {method} {0x00007f003876d258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8e20: inc    DWORD PTR [rsi+0x1e8]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@75 (line 2079)

  0x00007f003f2a8e26: cmp    edx,r14d
  0x00007f003f2a8e29: movabs rsi,0x7f0038a5bd50  ;   {metadata(method data for {method} {0x00007f003876d258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8e33: movabs rdi,0x1c8
  0x00007f003f2a8e3d: jge    0x00007f003f2a8e4d
  0x00007f003f2a8e43: movabs rdi,0x1d8
  0x00007f003f2a8e4d: mov    rax,QWORD PTR [rsi+rdi*1]
  0x00007f003f2a8e51: lea    rax,[rax+0x1]
  0x00007f003f2a8e55: mov    QWORD PTR [rsi+rdi*1],rax
  0x00007f003f2a8e59: jge    0x00007f003f2a8f24
  0x00007f003f2a8e5f: jmp    0x00007f003f2a8db8  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@59 (line 2079)

  0x00007f003f2a8e64: nop    DWORD PTR [rax+0x0]
  0x00007f003f2a8e68: movsxd rdx,r14d
  0x00007f003f2a8e6b: cmp    r14d,DWORD PTR [r11+0xc]
  0x00007f003f2a8e6f: jae    0x00007f003f2a90d6
  0x00007f003f2a8e75: movzx  edx,WORD PTR [r11+rdx*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@88 (line 2083)

  0x00007f003f2a8e7b: cmp    edx,r8d
  0x00007f003f2a8e7e: movabs rsi,0x7f0038a5bd50  ;   {metadata(method data for {method} {0x00007f003876d258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8e88: movabs rdi,0x220
  0x00007f003f2a8e92: jne    0x00007f003f2a8ea2
  0x00007f003f2a8e98: movabs rdi,0x230
  0x00007f003f2a8ea2: mov    rax,QWORD PTR [rsi+rdi*1]
  0x00007f003f2a8ea6: lea    rax,[rax+0x1]
  0x00007f003f2a8eaa: mov    QWORD PTR [rsi+rdi*1],rax
  0x00007f003f2a8eae: jne    0x00007f003f2a8ec7  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@98 (line 2084)

  0x00007f003f2a8eb4: movabs rdx,0x7f0038a5bd50  ;   {metadata(method data for {method} {0x00007f003876d258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8ebe: inc    DWORD PTR [rdx+0x240]
  0x00007f003f2a8ec4: mov    rdx,r9             ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@102 (line 2084)

  0x00007f003f2a8ec7: movsxd rsi,r14d
  0x00007f003f2a8eca: cmp    r14d,DWORD PTR [rbx+0xc]
  0x00007f003f2a8ece: jae    0x00007f003f2a90df
  0x00007f003f2a8ed4: mov    WORD PTR [rbx+rsi*2+0x10],dx
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@107 (line 2084)

  0x00007f003f2a8ed9: inc    r14d
  0x00007f003f2a8edc: movabs rdx,0x7f0038a5bd50  ;   {metadata(method data for {method} {0x00007f003876d258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8ee6: mov    esi,DWORD PTR [rdx+0x100]
  0x00007f003f2a8eec: add    esi,0x8
  0x00007f003f2a8eef: mov    DWORD PTR [rdx+0x100],esi
  0x00007f003f2a8ef5: movabs rdx,0x7f003876d258  ;   {metadata({method} {0x00007f003876d258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8eff: and    esi,0xfff8
  0x00007f003f2a8f05: cmp    esi,0x0
  0x00007f003f2a8f08: je     0x00007f003f2a90e8  ; OopMap{r11=Oop rbx=Oop off=942}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@111 (line 2086)

  0x00007f003f2a8f0e: test   DWORD PTR [rip+0x1b1191ec],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2a8f14: movabs rdx,0x7f0038a5bd50  ;   {metadata(method data for {method} {0x00007f003876d258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8f1e: inc    DWORD PTR [rdx+0x258]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@111 (line 2086)

  0x00007f003f2a8f24: cmp    r14d,r13d
  0x00007f003f2a8f27: movabs rdx,0x7f0038a5bd50  ;   {metadata(method data for {method} {0x00007f003876d258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8f31: movabs rsi,0x200
  0x00007f003f2a8f3b: jge    0x00007f003f2a8f4b
  0x00007f003f2a8f41: movabs rsi,0x210
  0x00007f003f2a8f4b: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2a8f4f: lea    rdi,[rdi+0x1]
  0x00007f003f2a8f53: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2a8f57: jl     0x00007f003f2a8e68  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@81 (line 2082)

  0x00007f003f2a8f5d: movabs rdx,0x7c0001610    ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007f003f2a8f67: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2a8f6b: lea    rdi,[rax+0x18]
  0x00007f003f2a8f6f: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2a8f73: ja     0x00007f003f2a90ff
  0x00007f003f2a8f79: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2a8f7d: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2a8f84: mov    QWORD PTR [rax],rcx
  0x00007f003f2a8f87: mov    rcx,rdx
  0x00007f003f2a8f8a: shr    rcx,0x3
  0x00007f003f2a8f8e: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2a8f91: xor    rcx,rcx
  0x00007f003f2a8f94: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2a8f97: xor    rcx,rcx
  0x00007f003f2a8f9a: mov    QWORD PTR [rax+0x10],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@114 (line 2087)

  0x00007f003f2a8f9e: mov    rsi,rax
  0x00007f003f2a8fa1: movabs rdi,0x7f0038a5bd50  ;   {metadata(method data for {method} {0x00007f003876d258} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8fab: add    QWORD PTR [rdi+0x270],0x1
  0x00007f003f2a8fb3: movabs rsi,0x7f0038a5c010  ;   {metadata(method data for {method} {0x00007f003876a490} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8fbd: mov    edi,DWORD PTR [rsi+0xfc]
  0x00007f003f2a8fc3: add    edi,0x8
  0x00007f003f2a8fc6: mov    DWORD PTR [rsi+0xfc],edi
  0x00007f003f2a8fcc: movabs rsi,0x7f003876a490  ;   {metadata({method} {0x00007f003876a490} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8fd6: and    edi,0x7ffff8
  0x00007f003f2a8fdc: cmp    edi,0x0
  0x00007f003f2a8fdf: je     0x00007f003f2a910c
  0x00007f003f2a8fe5: mov    rsi,rax
  0x00007f003f2a8fe8: movabs rdi,0x7f0038a5c010  ;   {metadata(method data for {method} {0x00007f003876a490} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2a8ff2: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f2a8ffa: movabs rsi,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2a9004: mov    edi,DWORD PTR [rsi+0xfc]
  0x00007f003f2a900a: add    edi,0x8
  0x00007f003f2a900d: mov    DWORD PTR [rsi+0xfc],edi
  0x00007f003f2a9013: movabs rsi,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2a901d: and    edi,0x7ffff8
  0x00007f003f2a9023: cmp    edi,0x0
  0x00007f003f2a9026: je     0x00007f003f2a9123
  0x00007f003f2a902c: mov    r10,rbx
  0x00007f003f2a902f: shr    r10,0x3
  0x00007f003f2a9033: mov    DWORD PTR [rax+0xc],r10d
  0x00007f003f2a9037: mov    rsi,rax
  0x00007f003f2a903a: shr    rsi,0x9
  0x00007f003f2a903e: movabs rdi,0x7f003ae7c000
  0x00007f003f2a9048: mov    BYTE PTR [rsi+rdi*1],0x0  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)
                                                ; - java.lang.String::replace@121 (line 2087)

  0x00007f003f2a904c: add    rsp,0x50
  0x00007f003f2a9050: pop    rbp
  0x00007f003f2a9051: test   DWORD PTR [rip+0x1b1190a9],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a9057: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@124 (line 2087)

  0x00007f003f2a9058: mov    rax,rsi
  0x00007f003f2a905b: add    rsp,0x50
  0x00007f003f2a905f: pop    rbp
  0x00007f003f2a9060: test   DWORD PTR [rip+0x1b11909a],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2a9066: ret    
  0x00007f003f2a9067: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2a906c: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a9074: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=1305}
                                                ;*synchronization entry
                                                ; - java.lang.String::replace@-1 (line 2067)
                                                ;   {runtime_call}
  0x00007f003f2a9079: jmp    0x00007f003f2a8bc4
  0x00007f003f2a907e: call   0x00007f003f279000  ; OopMap{rsi=Oop r11=Oop off=1315}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ;   {runtime_call}
  0x00007f003f2a9083: mov    QWORD PTR [rsp],r14
  0x00007f003f2a9087: call   0x00007f003f278940  ; OopMap{rsi=Oop r11=Oop off=1324}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@33 (line 2073)
                                                ;   {runtime_call}
  0x00007f003f2a908c: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2a9091: mov    QWORD PTR [rsp],0x23
  0x00007f003f2a9099: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop r11=Oop off=1342}
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@35 (line 2073)
                                                ;   {runtime_call}
  0x00007f003f2a909e: jmp    0x00007f003f2a8c5d
  0x00007f003f2a90a3: call   0x00007f003f27a020  ; OopMap{r11=Oop off=1352}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@48 (line 2078)
                                                ;   {runtime_call}
  0x00007f003f2a90a8: jmp    0x00007f003f2a8da6
  0x00007f003f2a90ad: mov    QWORD PTR [rsp],rdx
  0x00007f003f2a90b1: call   0x00007f003f278940  ; OopMap{r11=Oop rbx=Oop off=1366}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@70 (line 2080)
                                                ;   {runtime_call}
  0x00007f003f2a90b6: mov    QWORD PTR [rsp],rdx
  0x00007f003f2a90ba: call   0x00007f003f278940  ; OopMap{r11=Oop rbx=Oop off=1375}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@71 (line 2080)
                                                ;   {runtime_call}
  0x00007f003f2a90bf: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2a90c4: mov    QWORD PTR [rsp],0x4b
  0x00007f003f2a90cc: call   0x00007f003f27d5e0  ; OopMap{r11=Oop rbx=Oop off=1393}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@75 (line 2079)
                                                ;   {runtime_call}
  0x00007f003f2a90d1: jmp    0x00007f003f2a8e10
  0x00007f003f2a90d6: mov    QWORD PTR [rsp],r14
  0x00007f003f2a90da: call   0x00007f003f278940  ; OopMap{r11=Oop rbx=Oop off=1407}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@88 (line 2083)
                                                ;   {runtime_call}
  0x00007f003f2a90df: mov    QWORD PTR [rsp],r14
  0x00007f003f2a90e3: call   0x00007f003f278940  ; OopMap{r11=Oop rbx=Oop off=1416}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@107 (line 2084)
                                                ;   {runtime_call}
  0x00007f003f2a90e8: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2a90ed: mov    QWORD PTR [rsp],0x6f
  0x00007f003f2a90f5: call   0x00007f003f27d5e0  ; OopMap{r11=Oop rbx=Oop off=1434}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@111 (line 2086)
                                                ;   {runtime_call}
  0x00007f003f2a90fa: jmp    0x00007f003f2a8f0e
  0x00007f003f2a90ff: mov    rdx,rdx
  0x00007f003f2a9102: call   0x00007f003f279760  ; OopMap{rbx=Oop off=1447}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::replace@114 (line 2087)
                                                ;   {runtime_call}
  0x00007f003f2a9107: jmp    0x00007f003f2a8f9e
  0x00007f003f2a910c: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2a9111: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a9119: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop rax=Oop off=1470}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 609)
                                                ; - java.lang.String::replace@121 (line 2087)
                                                ;   {runtime_call}
  0x00007f003f2a911e: jmp    0x00007f003f2a8fe5
  0x00007f003f2a9123: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2a9128: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2a9130: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop rax=Oop off=1493}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.String::replace@121 (line 2087)
                                                ;   {runtime_call}
  0x00007f003f2a9135: jmp    0x00007f003f2a902c
  0x00007f003f2a913a: nop
  0x00007f003f2a913b: nop
  0x00007f003f2a913c: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2a9143: movabs r10,0x0
  0x00007f003f2a914d: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2a9154: movabs r10,0x0
  0x00007f003f2a915e: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2a9165: add    rsp,0x50
  0x00007f003f2a9169: pop    rbp
  0x00007f003f2a916a: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2a916f: hlt    
  0x00007f003f2a9170: hlt    
  0x00007f003f2a9171: hlt    
  0x00007f003f2a9172: hlt    
  0x00007f003f2a9173: hlt    
  0x00007f003f2a9174: hlt    
  0x00007f003f2a9175: hlt    
  0x00007f003f2a9176: hlt    
  0x00007f003f2a9177: hlt    
  0x00007f003f2a9178: hlt    
  0x00007f003f2a9179: hlt    
  0x00007f003f2a917a: hlt    
  0x00007f003f2a917b: hlt    
  0x00007f003f2a917c: hlt    
  0x00007f003f2a917d: hlt    
  0x00007f003f2a917e: hlt    
  0x00007f003f2a917f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2a9180: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2a9185: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2a918a: sub    rsp,0x80
  0x00007f003f2a9191: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2a9196: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2a919b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2a91a0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2a91a5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2a91aa: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2a91af: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2a91b4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2a91b9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2a91be: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2a91c3: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2a91c8: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2a91cd: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2a91d2: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2a91d7: mov    QWORD PTR [rsp],r15
  0x00007f003f2a91db: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2a91e5: movabs rsi,0x7f003f2a9185  ;   {internal_word}
  0x00007f003f2a91ef: mov    rdx,rsp
  0x00007f003f2a91f2: and    rsp,0xfffffffffffffff0
  0x00007f003f2a91f6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2a91fb: hlt    
[Deopt Handler Code]
  0x00007f003f2a91fc: movabs r10,0x7f003f2a91fc  ;   {section_word}
  0x00007f003f2a9206: push   r10
  0x00007f003f2a9208: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2a920d: hlt    
  0x00007f003f2a920e: hlt    
  0x00007f003f2a920f: hlt    
<nmethod compile_id='76' compiler='C1' level='3' entry='0x00007f003f2a8b60' size='3384' address='0x00007f003f2a8990' relocation_offset='312' insts_offset='464' stub_offset='2032' scopes_data_offset='2200' scopes_pcs_offset='2640' dependencies_offset='3360' nul_chk_table_offset='3368' metadata_offset='2176' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='218' backedge_count='6984' iicount='218' stamp='0.302'/>
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.meta.RawConstant from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.meta.NullConstant from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.meta.ExceptionHandler from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<task_queued compile_id='85' method='java/util/zip/ZipFile ensureOpen ()V' bytes='37' count='640' iicount='640' level='3' stamp='0.303' comment='tiered' hot_count='640'/>
<task_queued compile_id='86' method='java/util/zip/ZipCoder getBytes (Ljava/lang/String;)[B' bytes='192' count='640' iicount='640' level='3' stamp='0.303' comment='tiered' hot_count='640'/>
<task_queued compile_id='87' method='java/util/zip/ZipCoder encoder ()Ljava/nio/charset/CharsetEncoder;' bytes='35' count='640' iicount='640' level='3' stamp='0.303' comment='tiered' hot_count='640'/>
----------------------------------------------------------------------
java/util/zip/ZipFile.getEntry  [0x00007f003f2a98a0, 0x00007f003f2a9aa0]  512 bytes
[Entry Point]
  # {method} {0x00007f0038995ab8} &apos;getEntry&apos; &apos;(J[BZ)J&apos; in &apos;java/util/zip/ZipFile&apos;
  # parm0:    rsi:rsi   = long
  # parm1:    rdx:rdx   = &apos;[B&apos;
  # parm2:    rcx       = boolean
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2a98a0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2a98a4: shl    r10,0x3
  0x00007f003f2a98a8: cmp    rax,r10
  0x00007f003f2a98ab: je     0x00007f003f2a98b8
  0x00007f003f2a98b1: jmp    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2a98b6: xchg   ax,ax
[Verified Entry Point]
  0x00007f003f2a98b8: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a98bf: push   rbp
  0x00007f003f2a98c0: mov    rbp,rsp
  0x00007f003f2a98c3: sub    rsp,0x40
  0x00007f003f2a98c7: mov    r8,rcx
  0x00007f003f2a98ca: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2a98cf: cmp    rdx,0x0
  0x00007f003f2a98d3: lea    rcx,[rsp+0x8]
  0x00007f003f2a98d8: cmove  rcx,QWORD PTR [rsp+0x8]
  0x00007f003f2a98de: mov    rdx,rsi
  0x00007f003f2a98e1: movabs r14,0x670bd76d8    ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2a98eb: mov    QWORD PTR [rsp+0x30],r14
  0x00007f003f2a98f0: lea    r14,[rsp+0x30]
  0x00007f003f2a98f5: mov    rsi,r14            ; OopMap{[8]=Oop [48]=Oop off=88}
  0x00007f003f2a98f8: movabs r10,0x7f003f2a98f8  ;   {section_word}
  0x00007f003f2a9902: mov    QWORD PTR [r15+0x1c8],r10
  0x00007f003f2a9909: mov    QWORD PTR [r15+0x1c0],rsp
  0x00007f003f2a9910: cmp    BYTE PTR [rip+0x1a2ab0bd],0x0        # 0x00007f00595549d4
                                                ;   {external_word}
  0x00007f003f2a9917: je     0x00007f003f2a9957
  0x00007f003f2a991d: push   rsi
  0x00007f003f2a991e: push   rdx
  0x00007f003f2a991f: push   rcx
  0x00007f003f2a9920: push   r8
  0x00007f003f2a9922: movabs rsi,0x7f0038995ab8  ;   {metadata({method} {0x00007f0038995ab8} &apos;getEntry&apos; &apos;(J[BZ)J&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2a992c: mov    rdi,r15
  0x00007f003f2a992f: test   esp,0xf
  0x00007f003f2a9935: je     0x00007f003f2a994d
  0x00007f003f2a993b: sub    rsp,0x8
  0x00007f003f2a993f: call   0x00007f0058f49f20  ;   {runtime_call}
  0x00007f003f2a9944: add    rsp,0x8
  0x00007f003f2a9948: jmp    0x00007f003f2a9952
  0x00007f003f2a994d: call   0x00007f0058f49f20  ;   {runtime_call}
  0x00007f003f2a9952: pop    r8
  0x00007f003f2a9954: pop    rcx
  0x00007f003f2a9955: pop    rdx
  0x00007f003f2a9956: pop    rsi
  0x00007f003f2a9957: lea    rdi,[r15+0x1e0]
  0x00007f003f2a995e: mov    DWORD PTR [r15+0x258],0x4
  0x00007f003f2a9969: call   0x00007f0053180e50  ;   {runtime_call}
  0x00007f003f2a996e: vzeroupper 
  0x00007f003f2a9971: mov    DWORD PTR [r15+0x258],0x5
  0x00007f003f2a997c: mov    ecx,r15d
  0x00007f003f2a997f: shr    ecx,0x4
  0x00007f003f2a9982: and    ecx,0xffc
  0x00007f003f2a9988: movabs r10,0x7f005a3c1000  ;   {external_word}
  0x00007f003f2a9992: mov    DWORD PTR [r10+rcx*1],ecx
  0x00007f003f2a9996: cmp    DWORD PTR [rip+0x1a2b601c],0x0        # 0x00007f005955f9bc
                                                ;   {external_word}
  0x00007f003f2a99a0: jne    0x00007f003f2a99b4
  0x00007f003f2a99a6: cmp    DWORD PTR [r15+0x30],0x0
  0x00007f003f2a99ae: je     0x00007f003f2a99d5
  0x00007f003f2a99b4: mov    QWORD PTR [rbp-0x8],rax
  0x00007f003f2a99b8: mov    rdi,r15
  0x00007f003f2a99bb: mov    r12,rsp
  0x00007f003f2a99be: sub    rsp,0x0
  0x00007f003f2a99c2: and    rsp,0xfffffffffffffff0
  0x00007f003f2a99c6: call   0x00007f0058fefce0  ;   {runtime_call}
  0x00007f003f2a99cb: mov    rsp,r12
  0x00007f003f2a99ce: xor    r12,r12
  0x00007f003f2a99d1: mov    rax,QWORD PTR [rbp-0x8]
  0x00007f003f2a99d5: mov    DWORD PTR [r15+0x258],0x8
  0x00007f003f2a99e0: cmp    DWORD PTR [r15+0x2b0],0x1
  0x00007f003f2a99eb: je     0x00007f003f2a9a7b
  0x00007f003f2a99f1: cmp    BYTE PTR [rip+0x1a2aafdc],0x0        # 0x00007f00595549d4
                                                ;   {external_word}
  0x00007f003f2a99f8: je     0x00007f003f2a9a36
  0x00007f003f2a99fe: mov    QWORD PTR [rbp-0x8],rax
  0x00007f003f2a9a02: movabs rsi,0x7f0038995ab8  ;   {metadata({method} {0x00007f0038995ab8} &apos;getEntry&apos; &apos;(J[BZ)J&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2a9a0c: mov    rdi,r15
  0x00007f003f2a9a0f: test   esp,0xf
  0x00007f003f2a9a15: je     0x00007f003f2a9a2d
  0x00007f003f2a9a1b: sub    rsp,0x8
  0x00007f003f2a9a1f: call   0x00007f0058f49f30  ;   {runtime_call}
  0x00007f003f2a9a24: add    rsp,0x8
  0x00007f003f2a9a28: jmp    0x00007f003f2a9a32
  0x00007f003f2a9a2d: call   0x00007f0058f49f30  ;   {runtime_call}
  0x00007f003f2a9a32: mov    rax,QWORD PTR [rbp-0x8]
  0x00007f003f2a9a36: movabs r10,0x0
  0x00007f003f2a9a40: mov    QWORD PTR [r15+0x1c0],r10
  0x00007f003f2a9a47: movabs r10,0x0
  0x00007f003f2a9a51: mov    QWORD PTR [r15+0x1c8],r10
  0x00007f003f2a9a58: mov    rcx,QWORD PTR [r15+0x38]
  0x00007f003f2a9a5c: mov    DWORD PTR [rcx+0x100],0x0
  0x00007f003f2a9a66: leave  
  0x00007f003f2a9a67: cmp    QWORD PTR [r15+0x8],0x0
  0x00007f003f2a9a6f: jne    0x00007f003f2a9a76
  0x00007f003f2a9a75: ret    
  0x00007f003f2a9a76: jmp    Stub::forward exception  ;   {runtime_call}
  0x00007f003f2a9a7b: mov    QWORD PTR [rbp-0x8],rax
  0x00007f003f2a9a7f: mov    r12,rsp
  0x00007f003f2a9a82: sub    rsp,0x0
  0x00007f003f2a9a86: and    rsp,0xfffffffffffffff0
  0x00007f003f2a9a8a: call   0x00007f0058f521e0  ;   {runtime_call}
  0x00007f003f2a9a8f: mov    rsp,r12
  0x00007f003f2a9a92: xor    r12,r12
  0x00007f003f2a9a95: mov    rax,QWORD PTR [rbp-0x8]
  0x00007f003f2a9a99: jmp    0x00007f003f2a99f1
  0x00007f003f2a9a9e: hlt    
  0x00007f003f2a9a9f: hlt    
<nmethod compile_id='88' compile_kind='c2n' level='0' entry='0x00007f003f2a98a0' size='912' address='0x00007f003f2a9710' relocation_offset='312' consts_offset='912' insts_offset='400' method='java/util/zip/ZipFile getEntry (J[BZ)J' bytes='0' count='640' iicount='640' stamp='0.304'/>
[Loaded jdk.vm.ci.meta.JavaKind from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.meta.ValueKind from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
sun/misc/URLClassPath.getLoader  [0x00007f003f2a9f00, 0x00007f003f2addf8]  16120 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;
  # this:     rsi:rsi   = &apos;sun/misc/URLClassPath&apos;
  # parm0:    rdx       = int
  #           [sp+0x160]  (sp of caller)
  0x00007f003f2a9f00: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2a9f04: shl    r10,0x3
  0x00007f003f2a9f08: cmp    r10,rax
  0x00007f003f2a9f0b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2a9f11: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2a9f1c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2a9f20: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2a9f27: push   rbp
  0x00007f003f2a9f28: sub    rsp,0x150
  0x00007f003f2a9f2f: mov    QWORD PTR [rsp+0x98],rsi
  0x00007f003f2a9f37: mov    DWORD PTR [rsp+0x94],edx
  0x00007f003f2a9f3e: lea    rdi,[rsp+0xf8]
  0x00007f003f2a9f46: mov    QWORD PTR [rdi+0x8],rsi
  0x00007f003f2a9f4a: mov    rax,QWORD PTR [rsi]
  0x00007f003f2a9f4d: mov    rbx,rax
  0x00007f003f2a9f50: and    rbx,0x7
  0x00007f003f2a9f54: cmp    rbx,0x5
  0x00007f003f2a9f58: jne    0x00007f003f2a9fdf
  0x00007f003f2a9f5e: mov    ebx,DWORD PTR [rsi+0x8]
  0x00007f003f2a9f61: shl    rbx,0x3
  0x00007f003f2a9f65: mov    rbx,QWORD PTR [rbx+0xa8]
  0x00007f003f2a9f6c: or     rbx,r15
  0x00007f003f2a9f6f: xor    rbx,rax
  0x00007f003f2a9f72: and    rbx,0xffffffffffffff87
  0x00007f003f2a9f76: je     0x00007f003f2aa007
  0x00007f003f2a9f7c: test   rbx,0x7
  0x00007f003f2a9f83: jne    0x00007f003f2a9fcc
  0x00007f003f2a9f85: test   rbx,0x300
  0x00007f003f2a9f8c: jne    0x00007f003f2a9fab
  0x00007f003f2a9f8e: and    rax,0x37f
  0x00007f003f2a9f95: mov    rbx,rax
  0x00007f003f2a9f98: or     rbx,r15
  0x00007f003f2a9f9b: lock cmpxchg QWORD PTR [rsi],rbx
  0x00007f003f2a9fa0: jne    0x00007f003f2ad686
  0x00007f003f2a9fa6: jmp    0x00007f003f2aa007
  0x00007f003f2a9fab: mov    ebx,DWORD PTR [rsi+0x8]
  0x00007f003f2a9fae: shl    rbx,0x3
  0x00007f003f2a9fb2: mov    rbx,QWORD PTR [rbx+0xa8]
  0x00007f003f2a9fb9: or     rbx,r15
  0x00007f003f2a9fbc: lock cmpxchg QWORD PTR [rsi],rbx
  0x00007f003f2a9fc1: jne    0x00007f003f2ad686
  0x00007f003f2a9fc7: jmp    0x00007f003f2aa007
  0x00007f003f2a9fcc: mov    ebx,DWORD PTR [rsi+0x8]
  0x00007f003f2a9fcf: shl    rbx,0x3
  0x00007f003f2a9fd3: mov    rbx,QWORD PTR [rbx+0xa8]
  0x00007f003f2a9fda: lock cmpxchg QWORD PTR [rsi],rbx
  0x00007f003f2a9fdf: mov    rax,QWORD PTR [rsi]
  0x00007f003f2a9fe2: or     rax,0x1
  0x00007f003f2a9fe6: mov    QWORD PTR [rdi],rax
  0x00007f003f2a9fe9: lock cmpxchg QWORD PTR [rsi],rdi
  0x00007f003f2a9fee: je     0x00007f003f2aa007
  0x00007f003f2a9ff4: sub    rax,rsp
  0x00007f003f2a9ff7: and    rax,0xfffffffffffff007
  0x00007f003f2a9ffe: mov    QWORD PTR [rdi],rax
  0x00007f003f2aa001: jne    0x00007f003f2ad686
  0x00007f003f2aa007: movabs rax,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2aa011: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f2aa017: add    edi,0x8
  0x00007f003f2aa01a: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f2aa020: movabs rax,0x7f003896d4e8  ;   {metadata({method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2aa02a: and    edi,0x1ff8
  0x00007f003f2aa030: cmp    edi,0x0
  0x00007f003f2aa033: je     0x00007f003f2ad699  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@0 (line 494)

  0x00007f003f2aa039: movsx  eax,BYTE PTR [rsi+0xc]  ;*getfield closed {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@1 (line 494)

  0x00007f003f2aa03d: cmp    eax,0x0
  0x00007f003f2aa040: movabs rax,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2aa04a: movabs rdi,0x130
  0x00007f003f2aa054: je     0x00007f003f2aa064
  0x00007f003f2aa05a: movabs rdi,0x140
  0x00007f003f2aa064: mov    rbx,QWORD PTR [rax+rdi*1]
  0x00007f003f2aa068: lea    rbx,[rbx+0x1]
  0x00007f003f2aa06c: mov    QWORD PTR [rax+rdi*1],rbx
  0x00007f003f2aa070: jne    0x00007f003f2ad2a9  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@4 (line 494)

  0x00007f003f2aa076: xchg   ax,ax
  0x00007f003f2aa078: mov    ebx,DWORD PTR [rsi+0x18]
  0x00007f003f2aa07b: shl    rbx,0x3            ;*getfield loaders {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@10 (line 499)

  0x00007f003f2aa07f: cmp    rax,QWORD PTR [rbx]  ;*invokevirtual size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 499)
                                                ; implicit exception: dispatches to 0x00007f003f2ad6b0
  0x00007f003f2aa082: mov    rax,rbx
  0x00007f003f2aa085: movabs rdi,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2aa08f: add    QWORD PTR [rdi+0x168],0x1
  0x00007f003f2aa097: mov    edi,DWORD PTR [rbx+0x10]  ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::size@1 (line 278)
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 499)

  0x00007f003f2aa09a: mov    rax,rdx
  0x00007f003f2aa09d: inc    eax
  0x00007f003f2aa09f: cmp    edi,eax
  0x00007f003f2aa0a1: movabs rax,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2aa0ab: movabs rcx,0x1e8
  0x00007f003f2aa0b5: jge    0x00007f003f2aa0c5
  0x00007f003f2aa0bb: movabs rcx,0x1f8
  0x00007f003f2aa0c5: mov    r8,QWORD PTR [rax+rcx*1]
  0x00007f003f2aa0c9: lea    r8,[r8+0x1]
  0x00007f003f2aa0cd: mov    QWORD PTR [rax+rcx*1],r8
  0x00007f003f2aa0d1: jge    0x00007f003f2ace53  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@19 (line 499)

  0x00007f003f2aa0d7: mov    edi,DWORD PTR [rsi+0x14]
  0x00007f003f2aa0da: shl    rdi,0x3            ;*getfield urls {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@23 (line 502)

  0x00007f003f2aa0de: lea    rbx,[rsp+0x108]
  0x00007f003f2aa0e6: mov    QWORD PTR [rbx+0x8],rdi
  0x00007f003f2aa0ea: mov    rax,QWORD PTR [rdi]  ; implicit exception: dispatches to 0x00007f003f2ad6b5
  0x00007f003f2aa0ed: mov    rcx,rax
  0x00007f003f2aa0f0: and    rcx,0x7
  0x00007f003f2aa0f4: cmp    rcx,0x5
  0x00007f003f2aa0f8: jne    0x00007f003f2aa17f
  0x00007f003f2aa0fe: mov    ecx,DWORD PTR [rdi+0x8]
  0x00007f003f2aa101: shl    rcx,0x3
  0x00007f003f2aa105: mov    rcx,QWORD PTR [rcx+0xa8]
  0x00007f003f2aa10c: or     rcx,r15
  0x00007f003f2aa10f: xor    rcx,rax
  0x00007f003f2aa112: and    rcx,0xffffffffffffff87
  0x00007f003f2aa116: je     0x00007f003f2aa1a7
  0x00007f003f2aa11c: test   rcx,0x7
  0x00007f003f2aa123: jne    0x00007f003f2aa16c
  0x00007f003f2aa125: test   rcx,0x300
  0x00007f003f2aa12c: jne    0x00007f003f2aa14b
  0x00007f003f2aa12e: and    rax,0x37f
  0x00007f003f2aa135: mov    rcx,rax
  0x00007f003f2aa138: or     rcx,r15
  0x00007f003f2aa13b: lock cmpxchg QWORD PTR [rdi],rcx
  0x00007f003f2aa140: jne    0x00007f003f2ad6ba
  0x00007f003f2aa146: jmp    0x00007f003f2aa1a7
  0x00007f003f2aa14b: mov    ecx,DWORD PTR [rdi+0x8]
  0x00007f003f2aa14e: shl    rcx,0x3
  0x00007f003f2aa152: mov    rcx,QWORD PTR [rcx+0xa8]
  0x00007f003f2aa159: or     rcx,r15
  0x00007f003f2aa15c: lock cmpxchg QWORD PTR [rdi],rcx
  0x00007f003f2aa161: jne    0x00007f003f2ad6ba
  0x00007f003f2aa167: jmp    0x00007f003f2aa1a7
  0x00007f003f2aa16c: mov    ecx,DWORD PTR [rdi+0x8]
  0x00007f003f2aa16f: shl    rcx,0x3
  0x00007f003f2aa173: mov    rcx,QWORD PTR [rcx+0xa8]
  0x00007f003f2aa17a: lock cmpxchg QWORD PTR [rdi],rcx
  0x00007f003f2aa17f: mov    rax,QWORD PTR [rdi]
  0x00007f003f2aa182: or     rax,0x1
  0x00007f003f2aa186: mov    QWORD PTR [rbx],rax
  0x00007f003f2aa189: lock cmpxchg QWORD PTR [rdi],rbx
  0x00007f003f2aa18e: je     0x00007f003f2aa1a7
  0x00007f003f2aa194: sub    rax,rsp
  0x00007f003f2aa197: and    rax,0xfffffffffffff007
  0x00007f003f2aa19e: mov    QWORD PTR [rbx],rax
  0x00007f003f2aa1a1: jne    0x00007f003f2ad6ba  ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 502)

  0x00007f003f2aa1a7: mov    ebx,DWORD PTR [rsi+0x14]
  0x00007f003f2aa1aa: shl    rbx,0x3            ;*getfield urls {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@30 (line 503)

  0x00007f003f2aa1ae: cmp    rax,QWORD PTR [rbx]  ;*invokevirtual empty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)
                                                ; implicit exception: dispatches to 0x00007f003f2ad6cd
  0x00007f003f2aa1b1: mov    rax,rbx
  0x00007f003f2aa1b4: movabs rcx,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2aa1be: add    QWORD PTR [rcx+0x220],0x1
  0x00007f003f2aa1c6: movabs rax,0x7f0038a5c190  ;   {metadata(method data for {method} {0x00007f0038849358} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00007f003f2aa1d0: mov    ecx,DWORD PTR [rax+0xfc]
  0x00007f003f2aa1d6: add    ecx,0x8
  0x00007f003f2aa1d9: mov    DWORD PTR [rax+0xfc],ecx
  0x00007f003f2aa1df: movabs rax,0x7f0038849358  ;   {metadata({method} {0x00007f0038849358} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00007f003f2aa1e9: and    ecx,0x7ffff8
  0x00007f003f2aa1ef: cmp    ecx,0x0
  0x00007f003f2aa1f2: je     0x00007f003f2ad6d2
  0x00007f003f2aa1f8: mov    rax,rbx
  0x00007f003f2aa1fb: movabs rcx,0x7f0038a5c190  ;   {metadata(method data for {method} {0x00007f0038849358} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00007f003f2aa205: mov    eax,DWORD PTR [rax+0x8]
  0x00007f003f2aa208: shl    rax,0x3
  0x00007f003f2aa20c: cmp    rax,QWORD PTR [rcx+0x140]
  0x00007f003f2aa213: jne    0x00007f003f2aa222
  0x00007f003f2aa215: add    QWORD PTR [rcx+0x148],0x1
  0x00007f003f2aa21d: jmp    0x00007f003f2aa3e4
  0x00007f003f2aa222: cmp    rax,QWORD PTR [rcx+0x150]
  0x00007f003f2aa229: jne    0x00007f003f2aa238
  0x00007f003f2aa22b: add    QWORD PTR [rcx+0x158],0x1
  0x00007f003f2aa233: jmp    0x00007f003f2aa3e4
  0x00007f003f2aa238: cmp    rax,QWORD PTR [rcx+0x160]
  0x00007f003f2aa23f: jne    0x00007f003f2aa24e
  0x00007f003f2aa241: add    QWORD PTR [rcx+0x168],0x1
  0x00007f003f2aa249: jmp    0x00007f003f2aa3e4
  0x00007f003f2aa24e: cmp    rax,QWORD PTR [rcx+0x170]
  0x00007f003f2aa255: jne    0x00007f003f2aa264
  0x00007f003f2aa257: add    QWORD PTR [rcx+0x178],0x1
  0x00007f003f2aa25f: jmp    0x00007f003f2aa3e4
  0x00007f003f2aa264: cmp    rax,QWORD PTR [rcx+0x180]
  0x00007f003f2aa26b: jne    0x00007f003f2aa27a
  0x00007f003f2aa26d: add    QWORD PTR [rcx+0x188],0x1
  0x00007f003f2aa275: jmp    0x00007f003f2aa3e4
  0x00007f003f2aa27a: cmp    rax,QWORD PTR [rcx+0x190]
  0x00007f003f2aa281: jne    0x00007f003f2aa290
  0x00007f003f2aa283: add    QWORD PTR [rcx+0x198],0x1
  0x00007f003f2aa28b: jmp    0x00007f003f2aa3e4
  0x00007f003f2aa290: cmp    rax,QWORD PTR [rcx+0x1a0]
  0x00007f003f2aa297: jne    0x00007f003f2aa2a6
  0x00007f003f2aa299: add    QWORD PTR [rcx+0x1a8],0x1
  0x00007f003f2aa2a1: jmp    0x00007f003f2aa3e4
  0x00007f003f2aa2a6: cmp    rax,QWORD PTR [rcx+0x1b0]
  0x00007f003f2aa2ad: jne    0x00007f003f2aa2bc
  0x00007f003f2aa2af: add    QWORD PTR [rcx+0x1b8],0x1
  0x00007f003f2aa2b7: jmp    0x00007f003f2aa3e4
  0x00007f003f2aa2bc: cmp    QWORD PTR [rcx+0x140],0x0
  0x00007f003f2aa2c7: jne    0x00007f003f2aa2e0
  0x00007f003f2aa2c9: mov    QWORD PTR [rcx+0x140],rax
  0x00007f003f2aa2d0: mov    QWORD PTR [rcx+0x148],0x1
  0x00007f003f2aa2db: jmp    0x00007f003f2aa3e4
  0x00007f003f2aa2e0: cmp    QWORD PTR [rcx+0x150],0x0
  0x00007f003f2aa2eb: jne    0x00007f003f2aa304
  0x00007f003f2aa2ed: mov    QWORD PTR [rcx+0x150],rax
  0x00007f003f2aa2f4: mov    QWORD PTR [rcx+0x158],0x1
  0x00007f003f2aa2ff: jmp    0x00007f003f2aa3e4
  0x00007f003f2aa304: cmp    QWORD PTR [rcx+0x160],0x0
  0x00007f003f2aa30f: jne    0x00007f003f2aa328
  0x00007f003f2aa311: mov    QWORD PTR [rcx+0x160],rax
  0x00007f003f2aa318: mov    QWORD PTR [rcx+0x168],0x1
  0x00007f003f2aa323: jmp    0x00007f003f2aa3e4
  0x00007f003f2aa328: cmp    QWORD PTR [rcx+0x170],0x0
  0x00007f003f2aa333: jne    0x00007f003f2aa34c
  0x00007f003f2aa335: mov    QWORD PTR [rcx+0x170],rax
  0x00007f003f2aa33c: mov    QWORD PTR [rcx+0x178],0x1
  0x00007f003f2aa347: jmp    0x00007f003f2aa3e4
  0x00007f003f2aa34c: cmp    QWORD PTR [rcx+0x180],0x0
  0x00007f003f2aa357: jne    0x00007f003f2aa370
  0x00007f003f2aa359: mov    QWORD PTR [rcx+0x180],rax
  0x00007f003f2aa360: mov    QWORD PTR [rcx+0x188],0x1
  0x00007f003f2aa36b: jmp    0x00007f003f2aa3e4
  0x00007f003f2aa370: cmp    QWORD PTR [rcx+0x190],0x0
  0x00007f003f2aa37b: jne    0x00007f003f2aa394
  0x00007f003f2aa37d: mov    QWORD PTR [rcx+0x190],rax
  0x00007f003f2aa384: mov    QWORD PTR [rcx+0x198],0x1
  0x00007f003f2aa38f: jmp    0x00007f003f2aa3e4
  0x00007f003f2aa394: cmp    QWORD PTR [rcx+0x1a0],0x0
  0x00007f003f2aa39f: jne    0x00007f003f2aa3b8
  0x00007f003f2aa3a1: mov    QWORD PTR [rcx+0x1a0],rax
  0x00007f003f2aa3a8: mov    QWORD PTR [rcx+0x1a8],0x1
  0x00007f003f2aa3b3: jmp    0x00007f003f2aa3e4
  0x00007f003f2aa3b8: cmp    QWORD PTR [rcx+0x1b0],0x0
  0x00007f003f2aa3c3: jne    0x00007f003f2aa3dc
  0x00007f003f2aa3c5: mov    QWORD PTR [rcx+0x1b0],rax
  0x00007f003f2aa3cc: mov    QWORD PTR [rcx+0x1b8],0x1
  0x00007f003f2aa3d7: jmp    0x00007f003f2aa3e4
  0x00007f003f2aa3dc: add    QWORD PTR [rcx+0x130],0x1
  0x00007f003f2aa3e4: lea    rcx,[rsp+0x118]
  0x00007f003f2aa3ec: mov    QWORD PTR [rcx+0x8],rbx
  0x00007f003f2aa3f0: mov    rax,QWORD PTR [rbx]
  0x00007f003f2aa3f3: mov    r8,rax
  0x00007f003f2aa3f6: and    r8,0x7
  0x00007f003f2aa3fa: cmp    r8,0x5
  0x00007f003f2aa3fe: jne    0x00007f003f2aa488
  0x00007f003f2aa404: mov    r8d,DWORD PTR [rbx+0x8]
  0x00007f003f2aa408: shl    r8,0x3
  0x00007f003f2aa40c: mov    r8,QWORD PTR [r8+0xa8]
  0x00007f003f2aa413: or     r8,r15
  0x00007f003f2aa416: xor    r8,rax
  0x00007f003f2aa419: and    r8,0xffffffffffffff87
  0x00007f003f2aa41d: je     0x00007f003f2aa4b0
  0x00007f003f2aa423: test   r8,0x7
  0x00007f003f2aa42a: jne    0x00007f003f2aa474
  0x00007f003f2aa42c: test   r8,0x300
  0x00007f003f2aa433: jne    0x00007f003f2aa452
  0x00007f003f2aa435: and    rax,0x37f
  0x00007f003f2aa43c: mov    r8,rax
  0x00007f003f2aa43f: or     r8,r15
  0x00007f003f2aa442: lock cmpxchg QWORD PTR [rbx],r8
  0x00007f003f2aa447: jne    0x00007f003f2ad6e9
  0x00007f003f2aa44d: jmp    0x00007f003f2aa4b0
  0x00007f003f2aa452: mov    r8d,DWORD PTR [rbx+0x8]
  0x00007f003f2aa456: shl    r8,0x3
  0x00007f003f2aa45a: mov    r8,QWORD PTR [r8+0xa8]
  0x00007f003f2aa461: or     r8,r15
  0x00007f003f2aa464: lock cmpxchg QWORD PTR [rbx],r8
  0x00007f003f2aa469: jne    0x00007f003f2ad6e9
  0x00007f003f2aa46f: jmp    0x00007f003f2aa4b0
  0x00007f003f2aa474: mov    r8d,DWORD PTR [rbx+0x8]
  0x00007f003f2aa478: shl    r8,0x3
  0x00007f003f2aa47c: mov    r8,QWORD PTR [r8+0xa8]
  0x00007f003f2aa483: lock cmpxchg QWORD PTR [rbx],r8
  0x00007f003f2aa488: mov    rax,QWORD PTR [rbx]
  0x00007f003f2aa48b: or     rax,0x1
  0x00007f003f2aa48f: mov    QWORD PTR [rcx],rax
  0x00007f003f2aa492: lock cmpxchg QWORD PTR [rbx],rcx
  0x00007f003f2aa497: je     0x00007f003f2aa4b0
  0x00007f003f2aa49d: sub    rax,rsp
  0x00007f003f2aa4a0: and    rax,0xfffffffffffff007
  0x00007f003f2aa4a7: mov    QWORD PTR [rcx],rax
  0x00007f003f2aa4aa: jne    0x00007f003f2ad6e9  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00007f003f2aa4b0: mov    ebx,DWORD PTR [rbx+0x10]  ;*getfield elementCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Vector::size@1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00007f003f2aa4b3: lea    rax,[rsp+0x118]
  0x00007f003f2aa4bb: mov    r8,QWORD PTR [rax+0x8]
  0x00007f003f2aa4bf: mov    rcx,QWORD PTR [r8]
  0x00007f003f2aa4c2: and    rcx,0x7
  0x00007f003f2aa4c6: cmp    rcx,0x5
  0x00007f003f2aa4ca: je     0x00007f003f2aa4e7
  0x00007f003f2aa4d0: mov    rcx,QWORD PTR [rax]
  0x00007f003f2aa4d3: test   rcx,rcx
  0x00007f003f2aa4d6: je     0x00007f003f2aa4e7
  0x00007f003f2aa4dc: lock cmpxchg QWORD PTR [r8],rcx
  0x00007f003f2aa4e1: jne    0x00007f003f2ad6fc  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00007f003f2aa4e7: cmp    ebx,0x0
  0x00007f003f2aa4ea: movabs rax,0x7f0038a5c190  ;   {metadata(method data for {method} {0x00007f0038849358} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00007f003f2aa4f4: movabs rbx,0x1c8
  0x00007f003f2aa4fe: jne    0x00007f003f2aa50e
  0x00007f003f2aa504: movabs rbx,0x1d8
  0x00007f003f2aa50e: mov    rcx,QWORD PTR [rax+rbx*1]
  0x00007f003f2aa512: lea    rcx,[rcx+0x1]
  0x00007f003f2aa516: mov    QWORD PTR [rax+rbx*1],rcx
  0x00007f003f2aa51a: jne    0x00007f003f2aa53a  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::empty@4 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00007f003f2aa520: movabs rax,0x7f0038a5c190  ;   {metadata(method data for {method} {0x00007f0038849358} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00007f003f2aa52a: inc    DWORD PTR [rax+0x1e8]
  0x00007f003f2aa530: mov    eax,0x1
  0x00007f003f2aa535: jmp    0x00007f003f2aa53f  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::empty@8 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00007f003f2aa53a: mov    eax,0x0            ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::empty@12 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00007f003f2aa53f: and    eax,0x1
  0x00007f003f2aa542: cmp    eax,0x0
  0x00007f003f2aa545: movabs rax,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2aa54f: movabs rbx,0x2a0
  0x00007f003f2aa559: je     0x00007f003f2aa569
  0x00007f003f2aa55f: movabs rbx,0x2b0
  0x00007f003f2aa569: mov    rcx,QWORD PTR [rax+rbx*1]
  0x00007f003f2aa56d: lea    rcx,[rcx+0x1]
  0x00007f003f2aa571: mov    QWORD PTR [rax+rbx*1],rcx
  0x00007f003f2aa575: jne    0x00007f003f2ad228  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@36 (line 503)

  0x00007f003f2aa57b: mov    ebx,DWORD PTR [rsi+0x14]
  0x00007f003f2aa57e: shl    rbx,0x3            ;*getfield urls {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@44 (line 506)

  0x00007f003f2aa582: cmp    rax,QWORD PTR [rbx]  ;*invokevirtual pop {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ; implicit exception: dispatches to 0x00007f003f2ad712
  0x00007f003f2aa585: mov    rax,rbx
  0x00007f003f2aa588: movabs rcx,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2aa592: movabs r10,0x7c0016050    ;   {metadata(&apos;java/util/Stack&apos;)}
  0x00007f003f2aa59c: mov    QWORD PTR [rcx+0x2d0],r10
  0x00007f003f2aa5a3: add    QWORD PTR [rcx+0x2d8],0x1
  0x00007f003f2aa5ab: lea    rcx,[rsp+0x118]
  0x00007f003f2aa5b3: mov    QWORD PTR [rcx+0x8],rbx
  0x00007f003f2aa5b7: mov    rax,QWORD PTR [rbx]
  0x00007f003f2aa5ba: mov    r8,rax
  0x00007f003f2aa5bd: and    r8,0x7
  0x00007f003f2aa5c1: cmp    r8,0x5
  0x00007f003f2aa5c5: jne    0x00007f003f2aa64f
  0x00007f003f2aa5cb: mov    r8d,DWORD PTR [rbx+0x8]
  0x00007f003f2aa5cf: shl    r8,0x3
  0x00007f003f2aa5d3: mov    r8,QWORD PTR [r8+0xa8]
  0x00007f003f2aa5da: or     r8,r15
  0x00007f003f2aa5dd: xor    r8,rax
  0x00007f003f2aa5e0: and    r8,0xffffffffffffff87
  0x00007f003f2aa5e4: je     0x00007f003f2aa677
  0x00007f003f2aa5ea: test   r8,0x7
  0x00007f003f2aa5f1: jne    0x00007f003f2aa63b
  0x00007f003f2aa5f3: test   r8,0x300
  0x00007f003f2aa5fa: jne    0x00007f003f2aa619
  0x00007f003f2aa5fc: and    rax,0x37f
  0x00007f003f2aa603: mov    r8,rax
  0x00007f003f2aa606: or     r8,r15
  0x00007f003f2aa609: lock cmpxchg QWORD PTR [rbx],r8
  0x00007f003f2aa60e: jne    0x00007f003f2ad717
  0x00007f003f2aa614: jmp    0x00007f003f2aa677
  0x00007f003f2aa619: mov    r8d,DWORD PTR [rbx+0x8]
  0x00007f003f2aa61d: shl    r8,0x3
  0x00007f003f2aa621: mov    r8,QWORD PTR [r8+0xa8]
  0x00007f003f2aa628: or     r8,r15
  0x00007f003f2aa62b: lock cmpxchg QWORD PTR [rbx],r8
  0x00007f003f2aa630: jne    0x00007f003f2ad717
  0x00007f003f2aa636: jmp    0x00007f003f2aa677
  0x00007f003f2aa63b: mov    r8d,DWORD PTR [rbx+0x8]
  0x00007f003f2aa63f: shl    r8,0x3
  0x00007f003f2aa643: mov    r8,QWORD PTR [r8+0xa8]
  0x00007f003f2aa64a: lock cmpxchg QWORD PTR [rbx],r8
  0x00007f003f2aa64f: mov    rax,QWORD PTR [rbx]
  0x00007f003f2aa652: or     rax,0x1
  0x00007f003f2aa656: mov    QWORD PTR [rcx],rax
  0x00007f003f2aa659: lock cmpxchg QWORD PTR [rbx],rcx
  0x00007f003f2aa65e: je     0x00007f003f2aa677
  0x00007f003f2aa664: sub    rax,rsp
  0x00007f003f2aa667: and    rax,0xfffffffffffff007
  0x00007f003f2aa66e: mov    QWORD PTR [rcx],rax
  0x00007f003f2aa671: jne    0x00007f003f2ad717  ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2aa677: movabs rax,0x7f0038a5c3d0  ;   {metadata(method data for {method} {0x00007f00388491e8} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007f003f2aa681: mov    ecx,DWORD PTR [rax+0xfc]
  0x00007f003f2aa687: add    ecx,0x8
  0x00007f003f2aa68a: mov    DWORD PTR [rax+0xfc],ecx
  0x00007f003f2aa690: movabs rax,0x7f00388491e8  ;   {metadata({method} {0x00007f00388491e8} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007f003f2aa69a: and    ecx,0x7ffff8
  0x00007f003f2aa6a0: cmp    ecx,0x0
  0x00007f003f2aa6a3: je     0x00007f003f2ad72a
  0x00007f003f2aa6a9: mov    rax,rbx
  0x00007f003f2aa6ac: movabs rcx,0x7f0038a5c3d0  ;   {metadata(method data for {method} {0x00007f00388491e8} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007f003f2aa6b6: mov    eax,DWORD PTR [rax+0x8]
  0x00007f003f2aa6b9: shl    rax,0x3
  0x00007f003f2aa6bd: cmp    rax,QWORD PTR [rcx+0x140]
  0x00007f003f2aa6c4: jne    0x00007f003f2aa6d3
  0x00007f003f2aa6c6: add    QWORD PTR [rcx+0x148],0x1
  0x00007f003f2aa6ce: jmp    0x00007f003f2aa895
  0x00007f003f2aa6d3: cmp    rax,QWORD PTR [rcx+0x150]
  0x00007f003f2aa6da: jne    0x00007f003f2aa6e9
  0x00007f003f2aa6dc: add    QWORD PTR [rcx+0x158],0x1
  0x00007f003f2aa6e4: jmp    0x00007f003f2aa895
  0x00007f003f2aa6e9: cmp    rax,QWORD PTR [rcx+0x160]
  0x00007f003f2aa6f0: jne    0x00007f003f2aa6ff
  0x00007f003f2aa6f2: add    QWORD PTR [rcx+0x168],0x1
  0x00007f003f2aa6fa: jmp    0x00007f003f2aa895
  0x00007f003f2aa6ff: cmp    rax,QWORD PTR [rcx+0x170]
  0x00007f003f2aa706: jne    0x00007f003f2aa715
  0x00007f003f2aa708: add    QWORD PTR [rcx+0x178],0x1
  0x00007f003f2aa710: jmp    0x00007f003f2aa895
  0x00007f003f2aa715: cmp    rax,QWORD PTR [rcx+0x180]
  0x00007f003f2aa71c: jne    0x00007f003f2aa72b
  0x00007f003f2aa71e: add    QWORD PTR [rcx+0x188],0x1
  0x00007f003f2aa726: jmp    0x00007f003f2aa895
  0x00007f003f2aa72b: cmp    rax,QWORD PTR [rcx+0x190]
  0x00007f003f2aa732: jne    0x00007f003f2aa741
  0x00007f003f2aa734: add    QWORD PTR [rcx+0x198],0x1
  0x00007f003f2aa73c: jmp    0x00007f003f2aa895
  0x00007f003f2aa741: cmp    rax,QWORD PTR [rcx+0x1a0]
  0x00007f003f2aa748: jne    0x00007f003f2aa757
  0x00007f003f2aa74a: add    QWORD PTR [rcx+0x1a8],0x1
  0x00007f003f2aa752: jmp    0x00007f003f2aa895
  0x00007f003f2aa757: cmp    rax,QWORD PTR [rcx+0x1b0]
  0x00007f003f2aa75e: jne    0x00007f003f2aa76d
  0x00007f003f2aa760: add    QWORD PTR [rcx+0x1b8],0x1
  0x00007f003f2aa768: jmp    0x00007f003f2aa895
  0x00007f003f2aa76d: cmp    QWORD PTR [rcx+0x140],0x0
  0x00007f003f2aa778: jne    0x00007f003f2aa791
  0x00007f003f2aa77a: mov    QWORD PTR [rcx+0x140],rax
  0x00007f003f2aa781: mov    QWORD PTR [rcx+0x148],0x1
  0x00007f003f2aa78c: jmp    0x00007f003f2aa895
  0x00007f003f2aa791: cmp    QWORD PTR [rcx+0x150],0x0
  0x00007f003f2aa79c: jne    0x00007f003f2aa7b5
  0x00007f003f2aa79e: mov    QWORD PTR [rcx+0x150],rax
  0x00007f003f2aa7a5: mov    QWORD PTR [rcx+0x158],0x1
  0x00007f003f2aa7b0: jmp    0x00007f003f2aa895
  0x00007f003f2aa7b5: cmp    QWORD PTR [rcx+0x160],0x0
  0x00007f003f2aa7c0: jne    0x00007f003f2aa7d9
  0x00007f003f2aa7c2: mov    QWORD PTR [rcx+0x160],rax
  0x00007f003f2aa7c9: mov    QWORD PTR [rcx+0x168],0x1
  0x00007f003f2aa7d4: jmp    0x00007f003f2aa895
  0x00007f003f2aa7d9: cmp    QWORD PTR [rcx+0x170],0x0
  0x00007f003f2aa7e4: jne    0x00007f003f2aa7fd
  0x00007f003f2aa7e6: mov    QWORD PTR [rcx+0x170],rax
  0x00007f003f2aa7ed: mov    QWORD PTR [rcx+0x178],0x1
  0x00007f003f2aa7f8: jmp    0x00007f003f2aa895
  0x00007f003f2aa7fd: cmp    QWORD PTR [rcx+0x180],0x0
  0x00007f003f2aa808: jne    0x00007f003f2aa821
  0x00007f003f2aa80a: mov    QWORD PTR [rcx+0x180],rax
  0x00007f003f2aa811: mov    QWORD PTR [rcx+0x188],0x1
  0x00007f003f2aa81c: jmp    0x00007f003f2aa895
  0x00007f003f2aa821: cmp    QWORD PTR [rcx+0x190],0x0
  0x00007f003f2aa82c: jne    0x00007f003f2aa845
  0x00007f003f2aa82e: mov    QWORD PTR [rcx+0x190],rax
  0x00007f003f2aa835: mov    QWORD PTR [rcx+0x198],0x1
  0x00007f003f2aa840: jmp    0x00007f003f2aa895
  0x00007f003f2aa845: cmp    QWORD PTR [rcx+0x1a0],0x0
  0x00007f003f2aa850: jne    0x00007f003f2aa869
  0x00007f003f2aa852: mov    QWORD PTR [rcx+0x1a0],rax
  0x00007f003f2aa859: mov    QWORD PTR [rcx+0x1a8],0x1
  0x00007f003f2aa864: jmp    0x00007f003f2aa895
  0x00007f003f2aa869: cmp    QWORD PTR [rcx+0x1b0],0x0
  0x00007f003f2aa874: jne    0x00007f003f2aa88d
  0x00007f003f2aa876: mov    QWORD PTR [rcx+0x1b0],rax
  0x00007f003f2aa87d: mov    QWORD PTR [rcx+0x1b8],0x1
  0x00007f003f2aa888: jmp    0x00007f003f2aa895
  0x00007f003f2aa88d: add    QWORD PTR [rcx+0x130],0x1
  0x00007f003f2aa895: lea    rcx,[rsp+0x128]
  0x00007f003f2aa89d: mov    QWORD PTR [rcx+0x8],rbx
  0x00007f003f2aa8a1: mov    rax,QWORD PTR [rbx]
  0x00007f003f2aa8a4: mov    r8,rax
  0x00007f003f2aa8a7: and    r8,0x7
  0x00007f003f2aa8ab: cmp    r8,0x5
  0x00007f003f2aa8af: jne    0x00007f003f2aa939
  0x00007f003f2aa8b5: mov    r8d,DWORD PTR [rbx+0x8]
  0x00007f003f2aa8b9: shl    r8,0x3
  0x00007f003f2aa8bd: mov    r8,QWORD PTR [r8+0xa8]
  0x00007f003f2aa8c4: or     r8,r15
  0x00007f003f2aa8c7: xor    r8,rax
  0x00007f003f2aa8ca: and    r8,0xffffffffffffff87
  0x00007f003f2aa8ce: je     0x00007f003f2aa961
  0x00007f003f2aa8d4: test   r8,0x7
  0x00007f003f2aa8db: jne    0x00007f003f2aa925
  0x00007f003f2aa8dd: test   r8,0x300
  0x00007f003f2aa8e4: jne    0x00007f003f2aa903
  0x00007f003f2aa8e6: and    rax,0x37f
  0x00007f003f2aa8ed: mov    r8,rax
  0x00007f003f2aa8f0: or     r8,r15
  0x00007f003f2aa8f3: lock cmpxchg QWORD PTR [rbx],r8
  0x00007f003f2aa8f8: jne    0x00007f003f2ad741
  0x00007f003f2aa8fe: jmp    0x00007f003f2aa961
  0x00007f003f2aa903: mov    r8d,DWORD PTR [rbx+0x8]
  0x00007f003f2aa907: shl    r8,0x3
  0x00007f003f2aa90b: mov    r8,QWORD PTR [r8+0xa8]
  0x00007f003f2aa912: or     r8,r15
  0x00007f003f2aa915: lock cmpxchg QWORD PTR [rbx],r8
  0x00007f003f2aa91a: jne    0x00007f003f2ad741
  0x00007f003f2aa920: jmp    0x00007f003f2aa961
  0x00007f003f2aa925: mov    r8d,DWORD PTR [rbx+0x8]
  0x00007f003f2aa929: shl    r8,0x3
  0x00007f003f2aa92d: mov    r8,QWORD PTR [r8+0xa8]
  0x00007f003f2aa934: lock cmpxchg QWORD PTR [rbx],r8
  0x00007f003f2aa939: mov    rax,QWORD PTR [rbx]
  0x00007f003f2aa93c: or     rax,0x1
  0x00007f003f2aa940: mov    QWORD PTR [rcx],rax
  0x00007f003f2aa943: lock cmpxchg QWORD PTR [rbx],rcx
  0x00007f003f2aa948: je     0x00007f003f2aa961
  0x00007f003f2aa94e: sub    rax,rsp
  0x00007f003f2aa951: and    rax,0xfffffffffffff007
  0x00007f003f2aa958: mov    QWORD PTR [rcx],rax
  0x00007f003f2aa95b: jne    0x00007f003f2ad741  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2aa961: mov    ecx,DWORD PTR [rbx+0x10]  ;*getfield elementCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Vector::size@1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2aa964: lea    rax,[rsp+0x128]
  0x00007f003f2aa96c: mov    r9,QWORD PTR [rax+0x8]
  0x00007f003f2aa970: mov    r8,QWORD PTR [r9]
  0x00007f003f2aa973: and    r8,0x7
  0x00007f003f2aa977: cmp    r8,0x5
  0x00007f003f2aa97b: je     0x00007f003f2aa998
  0x00007f003f2aa981: mov    r8,QWORD PTR [rax]
  0x00007f003f2aa984: test   r8,r8
  0x00007f003f2aa987: je     0x00007f003f2aa998
  0x00007f003f2aa98d: lock cmpxchg QWORD PTR [r9],r8
  0x00007f003f2aa992: jne    0x00007f003f2ad754  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2aa998: mov    rax,rbx
  0x00007f003f2aa99b: movabs r8,0x7f0038a5c3d0  ;   {metadata(method data for {method} {0x00007f00388491e8} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007f003f2aa9a5: movabs r10,0x7c0016050    ;   {metadata(&apos;java/util/Stack&apos;)}
  0x00007f003f2aa9af: mov    QWORD PTR [r8+0x1d8],r10
  0x00007f003f2aa9b6: add    QWORD PTR [r8+0x1e0],0x1
  0x00007f003f2aa9be: lea    r8,[rsp+0x128]
  0x00007f003f2aa9c6: mov    QWORD PTR [r8+0x8],rbx
  0x00007f003f2aa9ca: mov    rax,QWORD PTR [rbx]
  0x00007f003f2aa9cd: mov    r9,rax
  0x00007f003f2aa9d0: and    r9,0x7
  0x00007f003f2aa9d4: cmp    r9,0x5
  0x00007f003f2aa9d8: jne    0x00007f003f2aaa62
  0x00007f003f2aa9de: mov    r9d,DWORD PTR [rbx+0x8]
  0x00007f003f2aa9e2: shl    r9,0x3
  0x00007f003f2aa9e6: mov    r9,QWORD PTR [r9+0xa8]
  0x00007f003f2aa9ed: or     r9,r15
  0x00007f003f2aa9f0: xor    r9,rax
  0x00007f003f2aa9f3: and    r9,0xffffffffffffff87
  0x00007f003f2aa9f7: je     0x00007f003f2aaa8a
  0x00007f003f2aa9fd: test   r9,0x7
  0x00007f003f2aaa04: jne    0x00007f003f2aaa4e
  0x00007f003f2aaa06: test   r9,0x300
  0x00007f003f2aaa0d: jne    0x00007f003f2aaa2c
  0x00007f003f2aaa0f: and    rax,0x37f
  0x00007f003f2aaa16: mov    r9,rax
  0x00007f003f2aaa19: or     r9,r15
  0x00007f003f2aaa1c: lock cmpxchg QWORD PTR [rbx],r9
  0x00007f003f2aaa21: jne    0x00007f003f2ad76a
  0x00007f003f2aaa27: jmp    0x00007f003f2aaa8a
  0x00007f003f2aaa2c: mov    r9d,DWORD PTR [rbx+0x8]
  0x00007f003f2aaa30: shl    r9,0x3
  0x00007f003f2aaa34: mov    r9,QWORD PTR [r9+0xa8]
  0x00007f003f2aaa3b: or     r9,r15
  0x00007f003f2aaa3e: lock cmpxchg QWORD PTR [rbx],r9
  0x00007f003f2aaa43: jne    0x00007f003f2ad76a
  0x00007f003f2aaa49: jmp    0x00007f003f2aaa8a
  0x00007f003f2aaa4e: mov    r9d,DWORD PTR [rbx+0x8]
  0x00007f003f2aaa52: shl    r9,0x3
  0x00007f003f2aaa56: mov    r9,QWORD PTR [r9+0xa8]
  0x00007f003f2aaa5d: lock cmpxchg QWORD PTR [rbx],r9
  0x00007f003f2aaa62: mov    rax,QWORD PTR [rbx]
  0x00007f003f2aaa65: or     rax,0x1
  0x00007f003f2aaa69: mov    QWORD PTR [r8],rax
  0x00007f003f2aaa6c: lock cmpxchg QWORD PTR [rbx],r8
  0x00007f003f2aaa71: je     0x00007f003f2aaa8a
  0x00007f003f2aaa77: sub    rax,rsp
  0x00007f003f2aaa7a: and    rax,0xfffffffffffff007
  0x00007f003f2aaa81: mov    QWORD PTR [r8],rax
  0x00007f003f2aaa84: jne    0x00007f003f2ad76a  ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2aaa8a: movabs rax,0x7f0038a5c708  ;   {metadata(method data for {method} {0x00007f00388492b0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007f003f2aaa94: mov    r8d,DWORD PTR [rax+0xfc]
  0x00007f003f2aaa9b: add    r8d,0x8
  0x00007f003f2aaa9f: mov    DWORD PTR [rax+0xfc],r8d
  0x00007f003f2aaaa6: movabs rax,0x7f00388492b0  ;   {metadata({method} {0x00007f00388492b0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007f003f2aaab0: and    r8d,0x7ffff8
  0x00007f003f2aaab7: cmp    r8d,0x0
  0x00007f003f2aaabb: je     0x00007f003f2ad77d
  0x00007f003f2aaac1: mov    rax,rbx
  0x00007f003f2aaac4: movabs r8,0x7f0038a5c708  ;   {metadata(method data for {method} {0x00007f00388492b0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007f003f2aaace: mov    eax,DWORD PTR [rax+0x8]
  0x00007f003f2aaad1: shl    rax,0x3
  0x00007f003f2aaad5: cmp    rax,QWORD PTR [r8+0x140]
  0x00007f003f2aaadc: jne    0x00007f003f2aaaeb
  0x00007f003f2aaade: add    QWORD PTR [r8+0x148],0x1
  0x00007f003f2aaae6: jmp    0x00007f003f2aacad
  0x00007f003f2aaaeb: cmp    rax,QWORD PTR [r8+0x150]
  0x00007f003f2aaaf2: jne    0x00007f003f2aab01
  0x00007f003f2aaaf4: add    QWORD PTR [r8+0x158],0x1
  0x00007f003f2aaafc: jmp    0x00007f003f2aacad
  0x00007f003f2aab01: cmp    rax,QWORD PTR [r8+0x160]
  0x00007f003f2aab08: jne    0x00007f003f2aab17
  0x00007f003f2aab0a: add    QWORD PTR [r8+0x168],0x1
  0x00007f003f2aab12: jmp    0x00007f003f2aacad
  0x00007f003f2aab17: cmp    rax,QWORD PTR [r8+0x170]
  0x00007f003f2aab1e: jne    0x00007f003f2aab2d
  0x00007f003f2aab20: add    QWORD PTR [r8+0x178],0x1
  0x00007f003f2aab28: jmp    0x00007f003f2aacad
  0x00007f003f2aab2d: cmp    rax,QWORD PTR [r8+0x180]
  0x00007f003f2aab34: jne    0x00007f003f2aab43
  0x00007f003f2aab36: add    QWORD PTR [r8+0x188],0x1
  0x00007f003f2aab3e: jmp    0x00007f003f2aacad
  0x00007f003f2aab43: cmp    rax,QWORD PTR [r8+0x190]
  0x00007f003f2aab4a: jne    0x00007f003f2aab59
  0x00007f003f2aab4c: add    QWORD PTR [r8+0x198],0x1
  0x00007f003f2aab54: jmp    0x00007f003f2aacad
  0x00007f003f2aab59: cmp    rax,QWORD PTR [r8+0x1a0]
  0x00007f003f2aab60: jne    0x00007f003f2aab6f
  0x00007f003f2aab62: add    QWORD PTR [r8+0x1a8],0x1
  0x00007f003f2aab6a: jmp    0x00007f003f2aacad
  0x00007f003f2aab6f: cmp    rax,QWORD PTR [r8+0x1b0]
  0x00007f003f2aab76: jne    0x00007f003f2aab85
  0x00007f003f2aab78: add    QWORD PTR [r8+0x1b8],0x1
  0x00007f003f2aab80: jmp    0x00007f003f2aacad
  0x00007f003f2aab85: cmp    QWORD PTR [r8+0x140],0x0
  0x00007f003f2aab90: jne    0x00007f003f2aaba9
  0x00007f003f2aab92: mov    QWORD PTR [r8+0x140],rax
  0x00007f003f2aab99: mov    QWORD PTR [r8+0x148],0x1
  0x00007f003f2aaba4: jmp    0x00007f003f2aacad
  0x00007f003f2aaba9: cmp    QWORD PTR [r8+0x150],0x0
  0x00007f003f2aabb4: jne    0x00007f003f2aabcd
  0x00007f003f2aabb6: mov    QWORD PTR [r8+0x150],rax
  0x00007f003f2aabbd: mov    QWORD PTR [r8+0x158],0x1
  0x00007f003f2aabc8: jmp    0x00007f003f2aacad
  0x00007f003f2aabcd: cmp    QWORD PTR [r8+0x160],0x0
  0x00007f003f2aabd8: jne    0x00007f003f2aabf1
  0x00007f003f2aabda: mov    QWORD PTR [r8+0x160],rax
  0x00007f003f2aabe1: mov    QWORD PTR [r8+0x168],0x1
  0x00007f003f2aabec: jmp    0x00007f003f2aacad
  0x00007f003f2aabf1: cmp    QWORD PTR [r8+0x170],0x0
  0x00007f003f2aabfc: jne    0x00007f003f2aac15
  0x00007f003f2aabfe: mov    QWORD PTR [r8+0x170],rax
  0x00007f003f2aac05: mov    QWORD PTR [r8+0x178],0x1
  0x00007f003f2aac10: jmp    0x00007f003f2aacad
  0x00007f003f2aac15: cmp    QWORD PTR [r8+0x180],0x0
  0x00007f003f2aac20: jne    0x00007f003f2aac39
  0x00007f003f2aac22: mov    QWORD PTR [r8+0x180],rax
  0x00007f003f2aac29: mov    QWORD PTR [r8+0x188],0x1
  0x00007f003f2aac34: jmp    0x00007f003f2aacad
  0x00007f003f2aac39: cmp    QWORD PTR [r8+0x190],0x0
  0x00007f003f2aac44: jne    0x00007f003f2aac5d
  0x00007f003f2aac46: mov    QWORD PTR [r8+0x190],rax
  0x00007f003f2aac4d: mov    QWORD PTR [r8+0x198],0x1
  0x00007f003f2aac58: jmp    0x00007f003f2aacad
  0x00007f003f2aac5d: cmp    QWORD PTR [r8+0x1a0],0x0
  0x00007f003f2aac68: jne    0x00007f003f2aac81
  0x00007f003f2aac6a: mov    QWORD PTR [r8+0x1a0],rax
  0x00007f003f2aac71: mov    QWORD PTR [r8+0x1a8],0x1
  0x00007f003f2aac7c: jmp    0x00007f003f2aacad
  0x00007f003f2aac81: cmp    QWORD PTR [r8+0x1b0],0x0
  0x00007f003f2aac8c: jne    0x00007f003f2aaca5
  0x00007f003f2aac8e: mov    QWORD PTR [r8+0x1b0],rax
  0x00007f003f2aac95: mov    QWORD PTR [r8+0x1b8],0x1
  0x00007f003f2aaca0: jmp    0x00007f003f2aacad
  0x00007f003f2aaca5: add    QWORD PTR [r8+0x130],0x1
  0x00007f003f2aacad: lea    r8,[rsp+0x138]
  0x00007f003f2aacb5: mov    QWORD PTR [r8+0x8],rbx
  0x00007f003f2aacb9: mov    rax,QWORD PTR [rbx]
  0x00007f003f2aacbc: mov    r9,rax
  0x00007f003f2aacbf: and    r9,0x7
  0x00007f003f2aacc3: cmp    r9,0x5
  0x00007f003f2aacc7: jne    0x00007f003f2aad51
  0x00007f003f2aaccd: mov    r9d,DWORD PTR [rbx+0x8]
  0x00007f003f2aacd1: shl    r9,0x3
  0x00007f003f2aacd5: mov    r9,QWORD PTR [r9+0xa8]
  0x00007f003f2aacdc: or     r9,r15
  0x00007f003f2aacdf: xor    r9,rax
  0x00007f003f2aace2: and    r9,0xffffffffffffff87
  0x00007f003f2aace6: je     0x00007f003f2aad79
  0x00007f003f2aacec: test   r9,0x7
  0x00007f003f2aacf3: jne    0x00007f003f2aad3d
  0x00007f003f2aacf5: test   r9,0x300
  0x00007f003f2aacfc: jne    0x00007f003f2aad1b
  0x00007f003f2aacfe: and    rax,0x37f
  0x00007f003f2aad05: mov    r9,rax
  0x00007f003f2aad08: or     r9,r15
  0x00007f003f2aad0b: lock cmpxchg QWORD PTR [rbx],r9
  0x00007f003f2aad10: jne    0x00007f003f2ad794
  0x00007f003f2aad16: jmp    0x00007f003f2aad79
  0x00007f003f2aad1b: mov    r9d,DWORD PTR [rbx+0x8]
  0x00007f003f2aad1f: shl    r9,0x3
  0x00007f003f2aad23: mov    r9,QWORD PTR [r9+0xa8]
  0x00007f003f2aad2a: or     r9,r15
  0x00007f003f2aad2d: lock cmpxchg QWORD PTR [rbx],r9
  0x00007f003f2aad32: jne    0x00007f003f2ad794
  0x00007f003f2aad38: jmp    0x00007f003f2aad79
  0x00007f003f2aad3d: mov    r9d,DWORD PTR [rbx+0x8]
  0x00007f003f2aad41: shl    r9,0x3
  0x00007f003f2aad45: mov    r9,QWORD PTR [r9+0xa8]
  0x00007f003f2aad4c: lock cmpxchg QWORD PTR [rbx],r9
  0x00007f003f2aad51: mov    rax,QWORD PTR [rbx]
  0x00007f003f2aad54: or     rax,0x1
  0x00007f003f2aad58: mov    QWORD PTR [r8],rax
  0x00007f003f2aad5b: lock cmpxchg QWORD PTR [rbx],r8
  0x00007f003f2aad60: je     0x00007f003f2aad79
  0x00007f003f2aad66: sub    rax,rsp
  0x00007f003f2aad69: and    rax,0xfffffffffffff007
  0x00007f003f2aad70: mov    QWORD PTR [r8],rax
  0x00007f003f2aad73: jne    0x00007f003f2ad794  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2aad79: mov    r8d,DWORD PTR [rbx+0x10]  ;*getfield elementCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Vector::size@1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2aad7d: lea    rax,[rsp+0x138]
  0x00007f003f2aad85: mov    r11,QWORD PTR [rax+0x8]
  0x00007f003f2aad89: mov    r9,QWORD PTR [r11]
  0x00007f003f2aad8c: and    r9,0x7
  0x00007f003f2aad90: cmp    r9,0x5
  0x00007f003f2aad94: je     0x00007f003f2aadb1
  0x00007f003f2aad9a: mov    r9,QWORD PTR [rax]
  0x00007f003f2aad9d: test   r9,r9
  0x00007f003f2aada0: je     0x00007f003f2aadb1
  0x00007f003f2aada6: lock cmpxchg QWORD PTR [r11],r9
  0x00007f003f2aadab: jne    0x00007f003f2ad7a7  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2aadb1: cmp    r8d,0x0
  0x00007f003f2aadb5: movabs rax,0x7f0038a5c708  ;   {metadata(method data for {method} {0x00007f00388492b0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007f003f2aadbf: movabs r9,0x1c8
  0x00007f003f2aadc9: jne    0x00007f003f2aadd9
  0x00007f003f2aadcf: movabs r9,0x1d8
  0x00007f003f2aadd9: mov    r11,QWORD PTR [rax+r9*1]
  0x00007f003f2aaddd: lea    r11,[r11+0x1]
  0x00007f003f2aade1: mov    QWORD PTR [rax+r9*1],r11
  0x00007f003f2aade5: mov    DWORD PTR [rsp+0x90],ecx
  0x00007f003f2aadec: je     0x00007f003f2ad3c1  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@6 (line 101)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2aadf2: mov    QWORD PTR [rsp+0xa0],rdi
  0x00007f003f2aadfa: mov    rax,rbx
  0x00007f003f2aadfd: movabs r9,0x7f0038a5c708  ;   {metadata(method data for {method} {0x00007f00388492b0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007f003f2aae07: mov    eax,DWORD PTR [rax+0x8]
  0x00007f003f2aae0a: shl    rax,0x3
  0x00007f003f2aae0e: cmp    rax,QWORD PTR [r9+0x208]
  0x00007f003f2aae15: jne    0x00007f003f2aae24
  0x00007f003f2aae17: add    QWORD PTR [r9+0x210],0x1
  0x00007f003f2aae1f: jmp    0x00007f003f2aafe6
  0x00007f003f2aae24: cmp    rax,QWORD PTR [r9+0x218]
  0x00007f003f2aae2b: jne    0x00007f003f2aae3a
  0x00007f003f2aae2d: add    QWORD PTR [r9+0x220],0x1
  0x00007f003f2aae35: jmp    0x00007f003f2aafe6
  0x00007f003f2aae3a: cmp    rax,QWORD PTR [r9+0x228]
  0x00007f003f2aae41: jne    0x00007f003f2aae50
  0x00007f003f2aae43: add    QWORD PTR [r9+0x230],0x1
  0x00007f003f2aae4b: jmp    0x00007f003f2aafe6
  0x00007f003f2aae50: cmp    rax,QWORD PTR [r9+0x238]
  0x00007f003f2aae57: jne    0x00007f003f2aae66
  0x00007f003f2aae59: add    QWORD PTR [r9+0x240],0x1
  0x00007f003f2aae61: jmp    0x00007f003f2aafe6
  0x00007f003f2aae66: cmp    rax,QWORD PTR [r9+0x248]
  0x00007f003f2aae6d: jne    0x00007f003f2aae7c
  0x00007f003f2aae6f: add    QWORD PTR [r9+0x250],0x1
  0x00007f003f2aae77: jmp    0x00007f003f2aafe6
  0x00007f003f2aae7c: cmp    rax,QWORD PTR [r9+0x258]
  0x00007f003f2aae83: jne    0x00007f003f2aae92
  0x00007f003f2aae85: add    QWORD PTR [r9+0x260],0x1
  0x00007f003f2aae8d: jmp    0x00007f003f2aafe6
  0x00007f003f2aae92: cmp    rax,QWORD PTR [r9+0x268]
  0x00007f003f2aae99: jne    0x00007f003f2aaea8
  0x00007f003f2aae9b: add    QWORD PTR [r9+0x270],0x1
  0x00007f003f2aaea3: jmp    0x00007f003f2aafe6
  0x00007f003f2aaea8: cmp    rax,QWORD PTR [r9+0x278]
  0x00007f003f2aaeaf: jne    0x00007f003f2aaebe
  0x00007f003f2aaeb1: add    QWORD PTR [r9+0x280],0x1
  0x00007f003f2aaeb9: jmp    0x00007f003f2aafe6
  0x00007f003f2aaebe: cmp    QWORD PTR [r9+0x208],0x0
  0x00007f003f2aaec9: jne    0x00007f003f2aaee2
  0x00007f003f2aaecb: mov    QWORD PTR [r9+0x208],rax
  0x00007f003f2aaed2: mov    QWORD PTR [r9+0x210],0x1
  0x00007f003f2aaedd: jmp    0x00007f003f2aafe6
  0x00007f003f2aaee2: cmp    QWORD PTR [r9+0x218],0x0
  0x00007f003f2aaeed: jne    0x00007f003f2aaf06
  0x00007f003f2aaeef: mov    QWORD PTR [r9+0x218],rax
  0x00007f003f2aaef6: mov    QWORD PTR [r9+0x220],0x1
  0x00007f003f2aaf01: jmp    0x00007f003f2aafe6
  0x00007f003f2aaf06: cmp    QWORD PTR [r9+0x228],0x0
  0x00007f003f2aaf11: jne    0x00007f003f2aaf2a
  0x00007f003f2aaf13: mov    QWORD PTR [r9+0x228],rax
  0x00007f003f2aaf1a: mov    QWORD PTR [r9+0x230],0x1
  0x00007f003f2aaf25: jmp    0x00007f003f2aafe6
  0x00007f003f2aaf2a: cmp    QWORD PTR [r9+0x238],0x0
  0x00007f003f2aaf35: jne    0x00007f003f2aaf4e
  0x00007f003f2aaf37: mov    QWORD PTR [r9+0x238],rax
  0x00007f003f2aaf3e: mov    QWORD PTR [r9+0x240],0x1
  0x00007f003f2aaf49: jmp    0x00007f003f2aafe6
  0x00007f003f2aaf4e: cmp    QWORD PTR [r9+0x248],0x0
  0x00007f003f2aaf59: jne    0x00007f003f2aaf72
  0x00007f003f2aaf5b: mov    QWORD PTR [r9+0x248],rax
  0x00007f003f2aaf62: mov    QWORD PTR [r9+0x250],0x1
  0x00007f003f2aaf6d: jmp    0x00007f003f2aafe6
  0x00007f003f2aaf72: cmp    QWORD PTR [r9+0x258],0x0
  0x00007f003f2aaf7d: jne    0x00007f003f2aaf96
  0x00007f003f2aaf7f: mov    QWORD PTR [r9+0x258],rax
  0x00007f003f2aaf86: mov    QWORD PTR [r9+0x260],0x1
  0x00007f003f2aaf91: jmp    0x00007f003f2aafe6
  0x00007f003f2aaf96: cmp    QWORD PTR [r9+0x268],0x0
  0x00007f003f2aafa1: jne    0x00007f003f2aafba
  0x00007f003f2aafa3: mov    QWORD PTR [r9+0x268],rax
  0x00007f003f2aafaa: mov    QWORD PTR [r9+0x270],0x1
  0x00007f003f2aafb5: jmp    0x00007f003f2aafe6
  0x00007f003f2aafba: cmp    QWORD PTR [r9+0x278],0x0
  0x00007f003f2aafc5: jne    0x00007f003f2aafde
  0x00007f003f2aafc7: mov    QWORD PTR [r9+0x278],rax
  0x00007f003f2aafce: mov    QWORD PTR [r9+0x280],0x1
  0x00007f003f2aafd9: jmp    0x00007f003f2aafe6
  0x00007f003f2aafde: add    QWORD PTR [r9+0x1f8],0x1
  0x00007f003f2aafe6: dec    r8d
  0x00007f003f2aafe9: mov    rdx,r8
  0x00007f003f2aafec: mov    rsi,rbx            ;*invokevirtual elementAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@21 (line 103)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2aafef: mov    QWORD PTR [rsp+0x88],rbx
  0x00007f003f2aaff7: call   0x00007f003f1c4d60  ; OopMap{[152]=Oop [160]=Oop [136]=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=4348}
                                                ;*invokevirtual elementAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@21 (line 103)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {optimized virtual_call}
  0x00007f003f2aaffc: mov    QWORD PTR [rsp+0xa8],rax
  0x00007f003f2ab004: lea    rax,[rsp+0x128]
  0x00007f003f2ab00c: mov    rsi,QWORD PTR [rax+0x8]
  0x00007f003f2ab010: mov    rdx,QWORD PTR [rsi]
  0x00007f003f2ab013: and    rdx,0x7
  0x00007f003f2ab017: cmp    rdx,0x5
  0x00007f003f2ab01b: je     0x00007f003f2ab038
  0x00007f003f2ab021: mov    rdx,QWORD PTR [rax]
  0x00007f003f2ab024: test   rdx,rdx
  0x00007f003f2ab027: je     0x00007f003f2ab038
  0x00007f003f2ab02d: lock cmpxchg QWORD PTR [rsi],rdx
  0x00007f003f2ab032: jne    0x00007f003f2ad7bd  ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2ab038: mov    rbx,QWORD PTR [rsp+0x88]
  0x00007f003f2ab040: movabs rdx,0x7f0038a5c3d0  ;   {metadata(method data for {method} {0x00007f00388491e8} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007f003f2ab04a: mov    ebx,DWORD PTR [rbx+0x8]
  0x00007f003f2ab04d: shl    rbx,0x3
  0x00007f003f2ab051: cmp    rbx,QWORD PTR [rdx+0x270]
  0x00007f003f2ab058: jne    0x00007f003f2ab067
  0x00007f003f2ab05a: add    QWORD PTR [rdx+0x278],0x1
  0x00007f003f2ab062: jmp    0x00007f003f2ab229
  0x00007f003f2ab067: cmp    rbx,QWORD PTR [rdx+0x280]
  0x00007f003f2ab06e: jne    0x00007f003f2ab07d
  0x00007f003f2ab070: add    QWORD PTR [rdx+0x288],0x1
  0x00007f003f2ab078: jmp    0x00007f003f2ab229
  0x00007f003f2ab07d: cmp    rbx,QWORD PTR [rdx+0x290]
  0x00007f003f2ab084: jne    0x00007f003f2ab093
  0x00007f003f2ab086: add    QWORD PTR [rdx+0x298],0x1
  0x00007f003f2ab08e: jmp    0x00007f003f2ab229
  0x00007f003f2ab093: cmp    rbx,QWORD PTR [rdx+0x2a0]
  0x00007f003f2ab09a: jne    0x00007f003f2ab0a9
  0x00007f003f2ab09c: add    QWORD PTR [rdx+0x2a8],0x1
  0x00007f003f2ab0a4: jmp    0x00007f003f2ab229
  0x00007f003f2ab0a9: cmp    rbx,QWORD PTR [rdx+0x2b0]
  0x00007f003f2ab0b0: jne    0x00007f003f2ab0bf
  0x00007f003f2ab0b2: add    QWORD PTR [rdx+0x2b8],0x1
  0x00007f003f2ab0ba: jmp    0x00007f003f2ab229
  0x00007f003f2ab0bf: cmp    rbx,QWORD PTR [rdx+0x2c0]
  0x00007f003f2ab0c6: jne    0x00007f003f2ab0d5
  0x00007f003f2ab0c8: add    QWORD PTR [rdx+0x2c8],0x1
  0x00007f003f2ab0d0: jmp    0x00007f003f2ab229
  0x00007f003f2ab0d5: cmp    rbx,QWORD PTR [rdx+0x2d0]
  0x00007f003f2ab0dc: jne    0x00007f003f2ab0eb
  0x00007f003f2ab0de: add    QWORD PTR [rdx+0x2d8],0x1
  0x00007f003f2ab0e6: jmp    0x00007f003f2ab229
  0x00007f003f2ab0eb: cmp    rbx,QWORD PTR [rdx+0x2e0]
  0x00007f003f2ab0f2: jne    0x00007f003f2ab101
  0x00007f003f2ab0f4: add    QWORD PTR [rdx+0x2e8],0x1
  0x00007f003f2ab0fc: jmp    0x00007f003f2ab229
  0x00007f003f2ab101: cmp    QWORD PTR [rdx+0x270],0x0
  0x00007f003f2ab10c: jne    0x00007f003f2ab125
  0x00007f003f2ab10e: mov    QWORD PTR [rdx+0x270],rbx
  0x00007f003f2ab115: mov    QWORD PTR [rdx+0x278],0x1
  0x00007f003f2ab120: jmp    0x00007f003f2ab229
  0x00007f003f2ab125: cmp    QWORD PTR [rdx+0x280],0x0
  0x00007f003f2ab130: jne    0x00007f003f2ab149
  0x00007f003f2ab132: mov    QWORD PTR [rdx+0x280],rbx
  0x00007f003f2ab139: mov    QWORD PTR [rdx+0x288],0x1
  0x00007f003f2ab144: jmp    0x00007f003f2ab229
  0x00007f003f2ab149: cmp    QWORD PTR [rdx+0x290],0x0
  0x00007f003f2ab154: jne    0x00007f003f2ab16d
  0x00007f003f2ab156: mov    QWORD PTR [rdx+0x290],rbx
  0x00007f003f2ab15d: mov    QWORD PTR [rdx+0x298],0x1
  0x00007f003f2ab168: jmp    0x00007f003f2ab229
  0x00007f003f2ab16d: cmp    QWORD PTR [rdx+0x2a0],0x0
  0x00007f003f2ab178: jne    0x00007f003f2ab191
  0x00007f003f2ab17a: mov    QWORD PTR [rdx+0x2a0],rbx
  0x00007f003f2ab181: mov    QWORD PTR [rdx+0x2a8],0x1
  0x00007f003f2ab18c: jmp    0x00007f003f2ab229
  0x00007f003f2ab191: cmp    QWORD PTR [rdx+0x2b0],0x0
  0x00007f003f2ab19c: jne    0x00007f003f2ab1b5
  0x00007f003f2ab19e: mov    QWORD PTR [rdx+0x2b0],rbx
  0x00007f003f2ab1a5: mov    QWORD PTR [rdx+0x2b8],0x1
  0x00007f003f2ab1b0: jmp    0x00007f003f2ab229
  0x00007f003f2ab1b5: cmp    QWORD PTR [rdx+0x2c0],0x0
  0x00007f003f2ab1c0: jne    0x00007f003f2ab1d9
  0x00007f003f2ab1c2: mov    QWORD PTR [rdx+0x2c0],rbx
  0x00007f003f2ab1c9: mov    QWORD PTR [rdx+0x2c8],0x1
  0x00007f003f2ab1d4: jmp    0x00007f003f2ab229
  0x00007f003f2ab1d9: cmp    QWORD PTR [rdx+0x2d0],0x0
  0x00007f003f2ab1e4: jne    0x00007f003f2ab1fd
  0x00007f003f2ab1e6: mov    QWORD PTR [rdx+0x2d0],rbx
  0x00007f003f2ab1ed: mov    QWORD PTR [rdx+0x2d8],0x1
  0x00007f003f2ab1f8: jmp    0x00007f003f2ab229
  0x00007f003f2ab1fd: cmp    QWORD PTR [rdx+0x2e0],0x0
  0x00007f003f2ab208: jne    0x00007f003f2ab221
  0x00007f003f2ab20a: mov    QWORD PTR [rdx+0x2e0],rbx
  0x00007f003f2ab211: mov    QWORD PTR [rdx+0x2e8],0x1
  0x00007f003f2ab21c: jmp    0x00007f003f2ab229
  0x00007f003f2ab221: add    QWORD PTR [rdx+0x260],0x1
  0x00007f003f2ab229: mov    ecx,DWORD PTR [rsp+0x90]
  0x00007f003f2ab230: dec    ecx
  0x00007f003f2ab232: mov    rdx,rcx
  0x00007f003f2ab235: mov    rsi,QWORD PTR [rsp+0x88]  ;*invokevirtual removeElementAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::pop@14 (line 85)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2ab23d: nop
  0x00007f003f2ab23e: nop
  0x00007f003f2ab23f: call   0x00007f003f1c4d60  ; OopMap{[152]=Oop [160]=Oop [168]=Oop [256]=Oop [272]=Oop [288]=Oop off=4932}
                                                ;*invokevirtual removeElementAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::pop@14 (line 85)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {optimized virtual_call}
  0x00007f003f2ab244: lea    rax,[rsp+0x118]
  0x00007f003f2ab24c: mov    rdi,QWORD PTR [rax+0x8]
  0x00007f003f2ab250: mov    rsi,QWORD PTR [rdi]
  0x00007f003f2ab253: and    rsi,0x7
  0x00007f003f2ab257: cmp    rsi,0x5
  0x00007f003f2ab25b: je     0x00007f003f2ab278
  0x00007f003f2ab261: mov    rsi,QWORD PTR [rax]
  0x00007f003f2ab264: test   rsi,rsi
  0x00007f003f2ab267: je     0x00007f003f2ab278
  0x00007f003f2ab26d: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2ab272: jne    0x00007f003f2ad7d3  ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2ab278: mov    rax,QWORD PTR [rsp+0xa8]
  0x00007f003f2ab280: cmp    rax,0x0
  0x00007f003f2ab284: jne    0x00007f003f2ab29f
  0x00007f003f2ab286: movabs rsi,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2ab290: or     DWORD PTR [rsi+0x350],0x100
  0x00007f003f2ab29a: jmp    0x00007f003f2ab4bb
  0x00007f003f2ab29f: movabs rbx,0x7c000ea70    ;   {metadata(&apos;java/net/URL&apos;)}
  0x00007f003f2ab2a9: mov    edi,DWORD PTR [rax+0x8]
  0x00007f003f2ab2ac: shl    rdi,0x3
  0x00007f003f2ab2b0: cmp    rbx,rdi
  0x00007f003f2ab2b3: jne    0x00007f003f2ab49f
  0x00007f003f2ab2b9: movabs rsi,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2ab2c3: mov    ebx,DWORD PTR [rax+0x8]
  0x00007f003f2ab2c6: shl    rbx,0x3
  0x00007f003f2ab2ca: cmp    rbx,QWORD PTR [rsi+0x368]
  0x00007f003f2ab2d1: jne    0x00007f003f2ab2e0
  0x00007f003f2ab2d3: add    QWORD PTR [rsi+0x370],0x1
  0x00007f003f2ab2db: jmp    0x00007f003f2ab4bb
  0x00007f003f2ab2e0: cmp    rbx,QWORD PTR [rsi+0x378]
  0x00007f003f2ab2e7: jne    0x00007f003f2ab2f6
  0x00007f003f2ab2e9: add    QWORD PTR [rsi+0x380],0x1
  0x00007f003f2ab2f1: jmp    0x00007f003f2ab4bb
  0x00007f003f2ab2f6: cmp    rbx,QWORD PTR [rsi+0x388]
  0x00007f003f2ab2fd: jne    0x00007f003f2ab30c
  0x00007f003f2ab2ff: add    QWORD PTR [rsi+0x390],0x1
  0x00007f003f2ab307: jmp    0x00007f003f2ab4bb
  0x00007f003f2ab30c: cmp    rbx,QWORD PTR [rsi+0x398]
  0x00007f003f2ab313: jne    0x00007f003f2ab322
  0x00007f003f2ab315: add    QWORD PTR [rsi+0x3a0],0x1
  0x00007f003f2ab31d: jmp    0x00007f003f2ab4bb
  0x00007f003f2ab322: cmp    rbx,QWORD PTR [rsi+0x3a8]
  0x00007f003f2ab329: jne    0x00007f003f2ab338
  0x00007f003f2ab32b: add    QWORD PTR [rsi+0x3b0],0x1
  0x00007f003f2ab333: jmp    0x00007f003f2ab4bb
  0x00007f003f2ab338: cmp    rbx,QWORD PTR [rsi+0x3b8]
  0x00007f003f2ab33f: jne    0x00007f003f2ab34e
  0x00007f003f2ab341: add    QWORD PTR [rsi+0x3c0],0x1
  0x00007f003f2ab349: jmp    0x00007f003f2ab4bb
  0x00007f003f2ab34e: cmp    rbx,QWORD PTR [rsi+0x3c8]
  0x00007f003f2ab355: jne    0x00007f003f2ab364
  0x00007f003f2ab357: add    QWORD PTR [rsi+0x3d0],0x1
  0x00007f003f2ab35f: jmp    0x00007f003f2ab4bb
  0x00007f003f2ab364: cmp    rbx,QWORD PTR [rsi+0x3d8]
  0x00007f003f2ab36b: jne    0x00007f003f2ab37a
  0x00007f003f2ab36d: add    QWORD PTR [rsi+0x3e0],0x1
  0x00007f003f2ab375: jmp    0x00007f003f2ab4bb
  0x00007f003f2ab37a: cmp    QWORD PTR [rsi+0x368],0x0
  0x00007f003f2ab385: jne    0x00007f003f2ab39e
  0x00007f003f2ab387: mov    QWORD PTR [rsi+0x368],rbx
  0x00007f003f2ab38e: mov    QWORD PTR [rsi+0x370],0x1
  0x00007f003f2ab399: jmp    0x00007f003f2ab4bb
  0x00007f003f2ab39e: cmp    QWORD PTR [rsi+0x378],0x0
  0x00007f003f2ab3a9: jne    0x00007f003f2ab3c2
  0x00007f003f2ab3ab: mov    QWORD PTR [rsi+0x378],rbx
  0x00007f003f2ab3b2: mov    QWORD PTR [rsi+0x380],0x1
  0x00007f003f2ab3bd: jmp    0x00007f003f2ab4bb
  0x00007f003f2ab3c2: cmp    QWORD PTR [rsi+0x388],0x0
  0x00007f003f2ab3cd: jne    0x00007f003f2ab3e6
  0x00007f003f2ab3cf: mov    QWORD PTR [rsi+0x388],rbx
  0x00007f003f2ab3d6: mov    QWORD PTR [rsi+0x390],0x1
  0x00007f003f2ab3e1: jmp    0x00007f003f2ab4bb
  0x00007f003f2ab3e6: cmp    QWORD PTR [rsi+0x398],0x0
  0x00007f003f2ab3f1: jne    0x00007f003f2ab40a
  0x00007f003f2ab3f3: mov    QWORD PTR [rsi+0x398],rbx
  0x00007f003f2ab3fa: mov    QWORD PTR [rsi+0x3a0],0x1
  0x00007f003f2ab405: jmp    0x00007f003f2ab4bb
  0x00007f003f2ab40a: cmp    QWORD PTR [rsi+0x3a8],0x0
  0x00007f003f2ab415: jne    0x00007f003f2ab42e
  0x00007f003f2ab417: mov    QWORD PTR [rsi+0x3a8],rbx
  0x00007f003f2ab41e: mov    QWORD PTR [rsi+0x3b0],0x1
  0x00007f003f2ab429: jmp    0x00007f003f2ab4bb
  0x00007f003f2ab42e: cmp    QWORD PTR [rsi+0x3b8],0x0
  0x00007f003f2ab439: jne    0x00007f003f2ab452
  0x00007f003f2ab43b: mov    QWORD PTR [rsi+0x3b8],rbx
  0x00007f003f2ab442: mov    QWORD PTR [rsi+0x3c0],0x1
  0x00007f003f2ab44d: jmp    0x00007f003f2ab4bb
  0x00007f003f2ab452: cmp    QWORD PTR [rsi+0x3c8],0x0
  0x00007f003f2ab45d: jne    0x00007f003f2ab476
  0x00007f003f2ab45f: mov    QWORD PTR [rsi+0x3c8],rbx
  0x00007f003f2ab466: mov    QWORD PTR [rsi+0x3d0],0x1
  0x00007f003f2ab471: jmp    0x00007f003f2ab4bb
  0x00007f003f2ab476: cmp    QWORD PTR [rsi+0x3d8],0x0
  0x00007f003f2ab481: jne    0x00007f003f2ab49a
  0x00007f003f2ab483: mov    QWORD PTR [rsi+0x3d8],rbx
  0x00007f003f2ab48a: mov    QWORD PTR [rsi+0x3e0],0x1
  0x00007f003f2ab495: jmp    0x00007f003f2ab4bb
  0x00007f003f2ab49a: jmp    0x00007f003f2ab4bb
  0x00007f003f2ab49f: movabs rsi,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2ab4a9: sub    QWORD PTR [rsi+0x358],0x1
  0x00007f003f2ab4b1: jmp    0x00007f003f2ad7e9
  0x00007f003f2ab4b6: jmp    0x00007f003f2ab4bb
  0x00007f003f2ab4bb: mov    rdi,rax            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@50 (line 506)

  0x00007f003f2ab4be: mov    QWORD PTR [rsp+0xb0],rdi
  0x00007f003f2ab4c6: lea    rax,[rsp+0x108]
  0x00007f003f2ab4ce: mov    rbx,QWORD PTR [rax+0x8]
  0x00007f003f2ab4d2: mov    rsi,QWORD PTR [rbx]
  0x00007f003f2ab4d5: and    rsi,0x7
  0x00007f003f2ab4d9: cmp    rsi,0x5
  0x00007f003f2ab4dd: je     0x00007f003f2ab4fa
  0x00007f003f2ab4e3: mov    rsi,QWORD PTR [rax]
  0x00007f003f2ab4e6: test   rsi,rsi
  0x00007f003f2ab4e9: je     0x00007f003f2ab4fa
  0x00007f003f2ab4ef: lock cmpxchg QWORD PTR [rbx],rsi
  0x00007f003f2ab4f4: jne    0x00007f003f2ad7f2  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@55 (line 508)

  0x00007f003f2ab4fa: movabs rsi,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2ab504: inc    DWORD PTR [rsi+0x3f0]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@56 (line 508)

  0x00007f003f2ab50a: movabs rbx,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2ab514: add    QWORD PTR [rbx+0x408],0x1
  0x00007f003f2ab51c: mov    rsi,rdi            ;*invokestatic urlNoFragString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@67 (line 512)

  0x00007f003f2ab51f: call   0x00007f003f1c5160  ; OopMap{[152]=Oop [176]=Oop [256]=Oop off=5668}
                                                ;*invokestatic urlNoFragString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@67 (line 512)
                                                ;   {static_call}
  0x00007f003f2ab524: mov    QWORD PTR [rsp+0xc0],rax
  0x00007f003f2ab52c: mov    rsi,QWORD PTR [rsp+0x98]
  0x00007f003f2ab534: mov    edi,DWORD PTR [rsi+0x1c]
  0x00007f003f2ab537: shl    rdi,0x3            ;*getfield lmap {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@72 (line 513)

  0x00007f003f2ab53b: cmp    rax,QWORD PTR [rdi]  ;*invokevirtual containsKey {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)
                                                ; implicit exception: dispatches to 0x00007f003f2ad808
  0x00007f003f2ab53e: mov    rbx,rdi
  0x00007f003f2ab541: movabs rdx,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2ab54b: mov    ebx,DWORD PTR [rbx+0x8]
  0x00007f003f2ab54e: shl    rbx,0x3
  0x00007f003f2ab552: cmp    rbx,QWORD PTR [rdx+0x428]
  0x00007f003f2ab559: jne    0x00007f003f2ab568
  0x00007f003f2ab55b: add    QWORD PTR [rdx+0x430],0x1
  0x00007f003f2ab563: jmp    0x00007f003f2ab72a
  0x00007f003f2ab568: cmp    rbx,QWORD PTR [rdx+0x438]
  0x00007f003f2ab56f: jne    0x00007f003f2ab57e
  0x00007f003f2ab571: add    QWORD PTR [rdx+0x440],0x1
  0x00007f003f2ab579: jmp    0x00007f003f2ab72a
  0x00007f003f2ab57e: cmp    rbx,QWORD PTR [rdx+0x448]
  0x00007f003f2ab585: jne    0x00007f003f2ab594
  0x00007f003f2ab587: add    QWORD PTR [rdx+0x450],0x1
  0x00007f003f2ab58f: jmp    0x00007f003f2ab72a
  0x00007f003f2ab594: cmp    rbx,QWORD PTR [rdx+0x458]
  0x00007f003f2ab59b: jne    0x00007f003f2ab5aa
  0x00007f003f2ab59d: add    QWORD PTR [rdx+0x460],0x1
  0x00007f003f2ab5a5: jmp    0x00007f003f2ab72a
  0x00007f003f2ab5aa: cmp    rbx,QWORD PTR [rdx+0x468]
  0x00007f003f2ab5b1: jne    0x00007f003f2ab5c0
  0x00007f003f2ab5b3: add    QWORD PTR [rdx+0x470],0x1
  0x00007f003f2ab5bb: jmp    0x00007f003f2ab72a
  0x00007f003f2ab5c0: cmp    rbx,QWORD PTR [rdx+0x478]
  0x00007f003f2ab5c7: jne    0x00007f003f2ab5d6
  0x00007f003f2ab5c9: add    QWORD PTR [rdx+0x480],0x1
  0x00007f003f2ab5d1: jmp    0x00007f003f2ab72a
  0x00007f003f2ab5d6: cmp    rbx,QWORD PTR [rdx+0x488]
  0x00007f003f2ab5dd: jne    0x00007f003f2ab5ec
  0x00007f003f2ab5df: add    QWORD PTR [rdx+0x490],0x1
  0x00007f003f2ab5e7: jmp    0x00007f003f2ab72a
  0x00007f003f2ab5ec: cmp    rbx,QWORD PTR [rdx+0x498]
  0x00007f003f2ab5f3: jne    0x00007f003f2ab602
  0x00007f003f2ab5f5: add    QWORD PTR [rdx+0x4a0],0x1
  0x00007f003f2ab5fd: jmp    0x00007f003f2ab72a
  0x00007f003f2ab602: cmp    QWORD PTR [rdx+0x428],0x0
  0x00007f003f2ab60d: jne    0x00007f003f2ab626
  0x00007f003f2ab60f: mov    QWORD PTR [rdx+0x428],rbx
  0x00007f003f2ab616: mov    QWORD PTR [rdx+0x430],0x1
  0x00007f003f2ab621: jmp    0x00007f003f2ab72a
  0x00007f003f2ab626: cmp    QWORD PTR [rdx+0x438],0x0
  0x00007f003f2ab631: jne    0x00007f003f2ab64a
  0x00007f003f2ab633: mov    QWORD PTR [rdx+0x438],rbx
  0x00007f003f2ab63a: mov    QWORD PTR [rdx+0x440],0x1
  0x00007f003f2ab645: jmp    0x00007f003f2ab72a
  0x00007f003f2ab64a: cmp    QWORD PTR [rdx+0x448],0x0
  0x00007f003f2ab655: jne    0x00007f003f2ab66e
  0x00007f003f2ab657: mov    QWORD PTR [rdx+0x448],rbx
  0x00007f003f2ab65e: mov    QWORD PTR [rdx+0x450],0x1
  0x00007f003f2ab669: jmp    0x00007f003f2ab72a
  0x00007f003f2ab66e: cmp    QWORD PTR [rdx+0x458],0x0
  0x00007f003f2ab679: jne    0x00007f003f2ab692
  0x00007f003f2ab67b: mov    QWORD PTR [rdx+0x458],rbx
  0x00007f003f2ab682: mov    QWORD PTR [rdx+0x460],0x1
  0x00007f003f2ab68d: jmp    0x00007f003f2ab72a
  0x00007f003f2ab692: cmp    QWORD PTR [rdx+0x468],0x0
  0x00007f003f2ab69d: jne    0x00007f003f2ab6b6
  0x00007f003f2ab69f: mov    QWORD PTR [rdx+0x468],rbx
  0x00007f003f2ab6a6: mov    QWORD PTR [rdx+0x470],0x1
  0x00007f003f2ab6b1: jmp    0x00007f003f2ab72a
  0x00007f003f2ab6b6: cmp    QWORD PTR [rdx+0x478],0x0
  0x00007f003f2ab6c1: jne    0x00007f003f2ab6da
  0x00007f003f2ab6c3: mov    QWORD PTR [rdx+0x478],rbx
  0x00007f003f2ab6ca: mov    QWORD PTR [rdx+0x480],0x1
  0x00007f003f2ab6d5: jmp    0x00007f003f2ab72a
  0x00007f003f2ab6da: cmp    QWORD PTR [rdx+0x488],0x0
  0x00007f003f2ab6e5: jne    0x00007f003f2ab6fe
  0x00007f003f2ab6e7: mov    QWORD PTR [rdx+0x488],rbx
  0x00007f003f2ab6ee: mov    QWORD PTR [rdx+0x490],0x1
  0x00007f003f2ab6f9: jmp    0x00007f003f2ab72a
  0x00007f003f2ab6fe: cmp    QWORD PTR [rdx+0x498],0x0
  0x00007f003f2ab709: jne    0x00007f003f2ab722
  0x00007f003f2ab70b: mov    QWORD PTR [rdx+0x498],rbx
  0x00007f003f2ab712: mov    QWORD PTR [rdx+0x4a0],0x1
  0x00007f003f2ab71d: jmp    0x00007f003f2ab72a
  0x00007f003f2ab722: add    QWORD PTR [rdx+0x418],0x1
  0x00007f003f2ab72a: movabs rbx,0x7f0038a5de18  ;   {metadata(method data for {method} {0x00007f003886d598} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ab734: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f2ab73a: add    edx,0x8
  0x00007f003f2ab73d: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f2ab743: movabs rbx,0x7f003886d598  ;   {metadata({method} {0x00007f003886d598} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ab74d: and    edx,0x7ffff8
  0x00007f003f2ab753: cmp    edx,0x0
  0x00007f003f2ab756: je     0x00007f003f2ad80d
  0x00007f003f2ab75c: movabs rbx,0x7f0038a5de18  ;   {metadata(method data for {method} {0x00007f003886d598} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ab766: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f2ab76e: movabs rbx,0x7f0038a588a0  ;   {metadata(method data for {method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ab778: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f2ab77e: add    edx,0x8
  0x00007f003f2ab781: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f2ab787: movabs rbx,0x7f003886c920  ;   {metadata({method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ab791: and    edx,0x7ffff8
  0x00007f003f2ab797: cmp    edx,0x0
  0x00007f003f2ab79a: je     0x00007f003f2ad824
  0x00007f003f2ab7a0: cmp    rax,0x0
  0x00007f003f2ab7a4: movabs rbx,0x7f0038a588a0  ;   {metadata(method data for {method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ab7ae: movabs rdx,0x130
  0x00007f003f2ab7b8: jne    0x00007f003f2ab7c8
  0x00007f003f2ab7be: movabs rdx,0x140
  0x00007f003f2ab7c8: mov    rcx,QWORD PTR [rbx+rdx*1]
  0x00007f003f2ab7cc: lea    rcx,[rcx+0x1]
  0x00007f003f2ab7d0: mov    QWORD PTR [rbx+rdx*1],rcx
  0x00007f003f2ab7d4: jne    0x00007f003f2ab7fc  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 338)
                                                ; - java.util.HashMap::containsKey@2 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00007f003f2ab7da: movabs rbx,0x7f0038a588a0  ;   {metadata(method data for {method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ab7e4: inc    DWORD PTR [rbx+0x150]
  0x00007f003f2ab7ea: mov    ebx,0x0
  0x00007f003f2ab7ef: mov    QWORD PTR [rsp+0xb8],rdi
  0x00007f003f2ab7f7: jmp    0x00007f003f2ab830  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 338)
                                                ; - java.util.HashMap::containsKey@2 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00007f003f2ab7fc: mov    QWORD PTR [rsp+0xb8],rdi
  0x00007f003f2ab804: cmp    rax,QWORD PTR [rax]  ; implicit exception: dispatches to 0x00007f003f2ad83b
  0x00007f003f2ab807: mov    rbx,rax
  0x00007f003f2ab80a: movabs rdx,0x7f0038a588a0  ;   {metadata(method data for {method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ab814: add    QWORD PTR [rdx+0x168],0x1
  0x00007f003f2ab81c: mov    rsi,rax            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::containsKey@2 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00007f003f2ab81f: call   0x00007f003f1c4d60  ; OopMap{[176]=Oop [152]=Oop [184]=Oop [192]=Oop [256]=Oop off=6436}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::containsKey@2 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)
                                                ;   {optimized virtual_call}
  0x00007f003f2ab824: mov    rdx,rax
  0x00007f003f2ab827: shr    edx,0x10
  0x00007f003f2ab82a: xor    rdx,rax
  0x00007f003f2ab82d: mov    rbx,rdx            ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@19 (line 338)
                                                ; - java.util.HashMap::containsKey@2 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00007f003f2ab830: mov    rdi,QWORD PTR [rsp+0xb8]
  0x00007f003f2ab838: mov    rdx,rdi
  0x00007f003f2ab83b: movabs rcx,0x7f0038a5de18  ;   {metadata(method data for {method} {0x00007f003886d598} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ab845: add    QWORD PTR [rcx+0x140],0x1
  0x00007f003f2ab84d: mov    rdx,rbx
  0x00007f003f2ab850: mov    rcx,QWORD PTR [rsp+0xc0]
  0x00007f003f2ab858: mov    rsi,rdi            ;*invokevirtual getNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::containsKey@6 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00007f003f2ab85b: nop
  0x00007f003f2ab85c: nop
  0x00007f003f2ab85d: nop
  0x00007f003f2ab85e: nop
  0x00007f003f2ab85f: call   0x00007f003f1c4d60  ; OopMap{[176]=Oop [152]=Oop [192]=Oop [256]=Oop off=6500}
                                                ;*invokevirtual getNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::containsKey@6 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)
                                                ;   {optimized virtual_call}
  0x00007f003f2ab864: cmp    rax,0x0
  0x00007f003f2ab868: movabs rdx,0x7f0038a5de18  ;   {metadata(method data for {method} {0x00007f003886d598} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ab872: movabs rsi,0x1d8
  0x00007f003f2ab87c: je     0x00007f003f2ab88c
  0x00007f003f2ab882: movabs rsi,0x1e8
  0x00007f003f2ab88c: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2ab890: lea    rdi,[rdi+0x1]
  0x00007f003f2ab894: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2ab898: je     0x00007f003f2ab8b8  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::containsKey@9 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00007f003f2ab89e: movabs rdx,0x7f0038a5de18  ;   {metadata(method data for {method} {0x00007f003886d598} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ab8a8: inc    DWORD PTR [rdx+0x1f8]
  0x00007f003f2ab8ae: mov    edx,0x1
  0x00007f003f2ab8b3: jmp    0x00007f003f2ab8bd  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::containsKey@13 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00007f003f2ab8b8: mov    edx,0x0            ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::containsKey@17 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00007f003f2ab8bd: and    edx,0x1
  0x00007f003f2ab8c0: cmp    edx,0x0
  0x00007f003f2ab8c3: movabs rdx,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2ab8cd: movabs rsi,0x4b0
  0x00007f003f2ab8d7: je     0x00007f003f2ab8e7
  0x00007f003f2ab8dd: movabs rsi,0x4c0
  0x00007f003f2ab8e7: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2ab8eb: lea    rdi,[rdi+0x1]
  0x00007f003f2ab8ef: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2ab8f3: jne    0x00007f003f2acd80  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@79 (line 513)

  0x00007f003f2ab8f9: mov    rdi,QWORD PTR [rsp+0xb0]
  0x00007f003f2ab901: mov    rsi,QWORD PTR [rsp+0x98]
  0x00007f003f2ab909: mov    rdx,rsi
  0x00007f003f2ab90c: movabs rax,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2ab916: add    QWORD PTR [rax+0x4e8],0x1
  0x00007f003f2ab91e: movabs rdx,0x7f0038a5e6a8  ;   {metadata(method data for {method} {0x00007f003896d5d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2ab928: mov    eax,DWORD PTR [rdx+0xfc]
  0x00007f003f2ab92e: add    eax,0x8
  0x00007f003f2ab931: mov    DWORD PTR [rdx+0xfc],eax
  0x00007f003f2ab937: movabs rdx,0x7f003896d5d0  ;   {metadata({method} {0x00007f003896d5d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2ab941: and    eax,0x7ffff8
  0x00007f003f2ab947: cmp    eax,0x0
  0x00007f003f2ab94a: je     0x00007f003f2ad840
  0x00007f003f2ab950: movabs rdx,0x7c003a968    ;   {metadata(&apos;sun/misc/URLClassPath$3&apos;)}
  0x00007f003f2ab95a: mov    r8,rdi
  0x00007f003f2ab95d: mov    rbx,rsi
  0x00007f003f2ab960: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2ab964: lea    rdi,[rax+0x18]
  0x00007f003f2ab968: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2ab96c: ja     0x00007f003f2ad857
  0x00007f003f2ab972: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2ab976: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2ab97d: mov    QWORD PTR [rax],rcx
  0x00007f003f2ab980: mov    rcx,rdx
  0x00007f003f2ab983: shr    rcx,0x3
  0x00007f003f2ab987: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2ab98a: xor    rcx,rcx
  0x00007f003f2ab98d: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2ab990: xor    rcx,rcx
  0x00007f003f2ab993: mov    QWORD PTR [rax+0x10],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@0 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00007f003f2ab997: mov    rsi,rax
  0x00007f003f2ab99a: movabs rdx,0x7f0038a5e6a8  ;   {metadata(method data for {method} {0x00007f003896d5d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2ab9a4: add    QWORD PTR [rdx+0x130],0x1
  0x00007f003f2ab9ac: movabs rsi,0x7f0038a5ea08  ;   {metadata(method data for {method} {0x00007f003898e6d0} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath;Ljava/net/URL;)V&apos; in &apos;sun/misc/URLClassPath$3&apos;)}
  0x00007f003f2ab9b6: mov    edx,DWORD PTR [rsi+0xfc]
  0x00007f003f2ab9bc: add    edx,0x8
  0x00007f003f2ab9bf: mov    DWORD PTR [rsi+0xfc],edx
  0x00007f003f2ab9c5: movabs rsi,0x7f003898e6d0  ;   {metadata({method} {0x00007f003898e6d0} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath;Ljava/net/URL;)V&apos; in &apos;sun/misc/URLClassPath$3&apos;)}
  0x00007f003f2ab9cf: and    edx,0x7ffff8
  0x00007f003f2ab9d5: cmp    edx,0x0
  0x00007f003f2ab9d8: je     0x00007f003f2ad864
  0x00007f003f2ab9de: mov    r10,rbx
  0x00007f003f2ab9e1: shr    r10,0x3
  0x00007f003f2ab9e5: mov    DWORD PTR [rax+0x10],r10d
  0x00007f003f2ab9e9: mov    rsi,rax
  0x00007f003f2ab9ec: shr    rsi,0x9
  0x00007f003f2ab9f0: movabs rdx,0x7f003ae7c000
  0x00007f003f2ab9fa: mov    BYTE PTR [rsi+rdx*1],0x0  ;*putfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@2 (line 555)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00007f003f2ab9fe: mov    r10,r8
  0x00007f003f2aba01: shr    r10,0x3
  0x00007f003f2aba05: mov    DWORD PTR [rax+0xc],r10d
  0x00007f003f2aba09: mov    rsi,rax
  0x00007f003f2aba0c: shr    rsi,0x9
  0x00007f003f2aba10: mov    BYTE PTR [rsi+rdx*1],0x0  ;*putfield val$url {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@7 (line 555)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00007f003f2aba14: mov    rsi,rax
  0x00007f003f2aba17: movabs rdx,0x7f0038a5ea08  ;   {metadata(method data for {method} {0x00007f003898e6d0} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath;Ljava/net/URL;)V&apos; in &apos;sun/misc/URLClassPath$3&apos;)}
  0x00007f003f2aba21: add    QWORD PTR [rdx+0x130],0x1
  0x00007f003f2aba29: movabs rsi,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2aba33: mov    edx,DWORD PTR [rsi+0xfc]
  0x00007f003f2aba39: add    edx,0x8
  0x00007f003f2aba3c: mov    DWORD PTR [rsi+0xfc],edx
  0x00007f003f2aba42: movabs rsi,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2aba4c: and    edx,0x7ffff8
  0x00007f003f2aba52: cmp    edx,0x0
  0x00007f003f2aba55: je     0x00007f003f2ad87b
  0x00007f003f2aba5b: mov    edx,DWORD PTR [rbx+0x24]
  0x00007f003f2aba5e: shl    rdx,0x3            ;*getfield acc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@10 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00007f003f2aba62: movabs rsi,0x7f0038a5e6a8  ;   {metadata(method data for {method} {0x00007f003896d5d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2aba6c: add    QWORD PTR [rsi+0x140],0x1
  0x00007f003f2aba74: mov    rsi,rax            ;*invokestatic doPrivileged {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00007f003f2aba77: call   0x00007f003f1c5160  ; OopMap{[192]=Oop [176]=Oop [152]=Oop [256]=Oop off=7036}
                                                ;*invokestatic doPrivileged {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {static_call}
  0x00007f003f2aba7c: cmp    rax,0x0
  0x00007f003f2aba80: jne    0x00007f003f2aba9b
  0x00007f003f2aba82: movabs rbx,0x7f0038a5e6a8  ;   {metadata(method data for {method} {0x00007f003896d5d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2aba8c: or     DWORD PTR [rbx+0x148],0x100
  0x00007f003f2aba96: jmp    0x00007f003f2abcb8
  0x00007f003f2aba9b: movabs rdi,0x7c003ab78    ;   {metadata(&apos;sun/misc/URLClassPath$Loader&apos;)}
  0x00007f003f2abaa5: mov    ebx,DWORD PTR [rax+0x8]
  0x00007f003f2abaa8: shl    rbx,0x3
  0x00007f003f2abaac: cmp    rdi,QWORD PTR [rbx+0x30]
  0x00007f003f2abab0: jne    0x00007f003f2abc9c
  0x00007f003f2abab6: movabs rbx,0x7f0038a5e6a8  ;   {metadata(method data for {method} {0x00007f003896d5d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2abac0: mov    edi,DWORD PTR [rax+0x8]
  0x00007f003f2abac3: shl    rdi,0x3
  0x00007f003f2abac7: cmp    rdi,QWORD PTR [rbx+0x160]
  0x00007f003f2abace: jne    0x00007f003f2abadd
  0x00007f003f2abad0: add    QWORD PTR [rbx+0x168],0x1
  0x00007f003f2abad8: jmp    0x00007f003f2abcb8
  0x00007f003f2abadd: cmp    rdi,QWORD PTR [rbx+0x170]
  0x00007f003f2abae4: jne    0x00007f003f2abaf3
  0x00007f003f2abae6: add    QWORD PTR [rbx+0x178],0x1
  0x00007f003f2abaee: jmp    0x00007f003f2abcb8
  0x00007f003f2abaf3: cmp    rdi,QWORD PTR [rbx+0x180]
  0x00007f003f2abafa: jne    0x00007f003f2abb09
  0x00007f003f2abafc: add    QWORD PTR [rbx+0x188],0x1
  0x00007f003f2abb04: jmp    0x00007f003f2abcb8
  0x00007f003f2abb09: cmp    rdi,QWORD PTR [rbx+0x190]
  0x00007f003f2abb10: jne    0x00007f003f2abb1f
  0x00007f003f2abb12: add    QWORD PTR [rbx+0x198],0x1
  0x00007f003f2abb1a: jmp    0x00007f003f2abcb8
  0x00007f003f2abb1f: cmp    rdi,QWORD PTR [rbx+0x1a0]
  0x00007f003f2abb26: jne    0x00007f003f2abb35
  0x00007f003f2abb28: add    QWORD PTR [rbx+0x1a8],0x1
  0x00007f003f2abb30: jmp    0x00007f003f2abcb8
  0x00007f003f2abb35: cmp    rdi,QWORD PTR [rbx+0x1b0]
  0x00007f003f2abb3c: jne    0x00007f003f2abb4b
  0x00007f003f2abb3e: add    QWORD PTR [rbx+0x1b8],0x1
  0x00007f003f2abb46: jmp    0x00007f003f2abcb8
  0x00007f003f2abb4b: cmp    rdi,QWORD PTR [rbx+0x1c0]
  0x00007f003f2abb52: jne    0x00007f003f2abb61
  0x00007f003f2abb54: add    QWORD PTR [rbx+0x1c8],0x1
  0x00007f003f2abb5c: jmp    0x00007f003f2abcb8
  0x00007f003f2abb61: cmp    rdi,QWORD PTR [rbx+0x1d0]
  0x00007f003f2abb68: jne    0x00007f003f2abb77
  0x00007f003f2abb6a: add    QWORD PTR [rbx+0x1d8],0x1
  0x00007f003f2abb72: jmp    0x00007f003f2abcb8
  0x00007f003f2abb77: cmp    QWORD PTR [rbx+0x160],0x0
  0x00007f003f2abb82: jne    0x00007f003f2abb9b
  0x00007f003f2abb84: mov    QWORD PTR [rbx+0x160],rdi
  0x00007f003f2abb8b: mov    QWORD PTR [rbx+0x168],0x1
  0x00007f003f2abb96: jmp    0x00007f003f2abcb8
  0x00007f003f2abb9b: cmp    QWORD PTR [rbx+0x170],0x0
  0x00007f003f2abba6: jne    0x00007f003f2abbbf
  0x00007f003f2abba8: mov    QWORD PTR [rbx+0x170],rdi
  0x00007f003f2abbaf: mov    QWORD PTR [rbx+0x178],0x1
  0x00007f003f2abbba: jmp    0x00007f003f2abcb8
  0x00007f003f2abbbf: cmp    QWORD PTR [rbx+0x180],0x0
  0x00007f003f2abbca: jne    0x00007f003f2abbe3
  0x00007f003f2abbcc: mov    QWORD PTR [rbx+0x180],rdi
  0x00007f003f2abbd3: mov    QWORD PTR [rbx+0x188],0x1
  0x00007f003f2abbde: jmp    0x00007f003f2abcb8
  0x00007f003f2abbe3: cmp    QWORD PTR [rbx+0x190],0x0
  0x00007f003f2abbee: jne    0x00007f003f2abc07
  0x00007f003f2abbf0: mov    QWORD PTR [rbx+0x190],rdi
  0x00007f003f2abbf7: mov    QWORD PTR [rbx+0x198],0x1
  0x00007f003f2abc02: jmp    0x00007f003f2abcb8
  0x00007f003f2abc07: cmp    QWORD PTR [rbx+0x1a0],0x0
  0x00007f003f2abc12: jne    0x00007f003f2abc2b
  0x00007f003f2abc14: mov    QWORD PTR [rbx+0x1a0],rdi
  0x00007f003f2abc1b: mov    QWORD PTR [rbx+0x1a8],0x1
  0x00007f003f2abc26: jmp    0x00007f003f2abcb8
  0x00007f003f2abc2b: cmp    QWORD PTR [rbx+0x1b0],0x0
  0x00007f003f2abc36: jne    0x00007f003f2abc4f
  0x00007f003f2abc38: mov    QWORD PTR [rbx+0x1b0],rdi
  0x00007f003f2abc3f: mov    QWORD PTR [rbx+0x1b8],0x1
  0x00007f003f2abc4a: jmp    0x00007f003f2abcb8
  0x00007f003f2abc4f: cmp    QWORD PTR [rbx+0x1c0],0x0
  0x00007f003f2abc5a: jne    0x00007f003f2abc73
  0x00007f003f2abc5c: mov    QWORD PTR [rbx+0x1c0],rdi
  0x00007f003f2abc63: mov    QWORD PTR [rbx+0x1c8],0x1
  0x00007f003f2abc6e: jmp    0x00007f003f2abcb8
  0x00007f003f2abc73: cmp    QWORD PTR [rbx+0x1d0],0x0
  0x00007f003f2abc7e: jne    0x00007f003f2abc97
  0x00007f003f2abc80: mov    QWORD PTR [rbx+0x1d0],rdi
  0x00007f003f2abc87: mov    QWORD PTR [rbx+0x1d8],0x1
  0x00007f003f2abc92: jmp    0x00007f003f2abcb8
  0x00007f003f2abc97: jmp    0x00007f003f2abcb8
  0x00007f003f2abc9c: movabs rbx,0x7f0038a5e6a8  ;   {metadata(method data for {method} {0x00007f003896d5d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2abca6: sub    QWORD PTR [rbx+0x150],0x1
  0x00007f003f2abcae: jmp    0x00007f003f2ad892
  0x00007f003f2abcb3: jmp    0x00007f003f2abcb8
  0x00007f003f2abcb8: mov    rdi,rax            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@16 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00007f003f2abcbb: mov    QWORD PTR [rsp+0xc8],rdi
  0x00007f003f2abcc3: cmp    rax,QWORD PTR [rdi]  ; implicit exception: dispatches to 0x00007f003f2ad89b
  0x00007f003f2abcc6: mov    rsi,rdi
  0x00007f003f2abcc9: movabs rbx,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2abcd3: mov    esi,DWORD PTR [rsi+0x8]
  0x00007f003f2abcd6: shl    rsi,0x3
  0x00007f003f2abcda: cmp    rsi,QWORD PTR [rbx+0x508]
  0x00007f003f2abce1: jne    0x00007f003f2abcf0
  0x00007f003f2abce3: add    QWORD PTR [rbx+0x510],0x1
  0x00007f003f2abceb: jmp    0x00007f003f2abeb2
  0x00007f003f2abcf0: cmp    rsi,QWORD PTR [rbx+0x518]
  0x00007f003f2abcf7: jne    0x00007f003f2abd06
  0x00007f003f2abcf9: add    QWORD PTR [rbx+0x520],0x1
  0x00007f003f2abd01: jmp    0x00007f003f2abeb2
  0x00007f003f2abd06: cmp    rsi,QWORD PTR [rbx+0x528]
  0x00007f003f2abd0d: jne    0x00007f003f2abd1c
  0x00007f003f2abd0f: add    QWORD PTR [rbx+0x530],0x1
  0x00007f003f2abd17: jmp    0x00007f003f2abeb2
  0x00007f003f2abd1c: cmp    rsi,QWORD PTR [rbx+0x538]
  0x00007f003f2abd23: jne    0x00007f003f2abd32
  0x00007f003f2abd25: add    QWORD PTR [rbx+0x540],0x1
  0x00007f003f2abd2d: jmp    0x00007f003f2abeb2
  0x00007f003f2abd32: cmp    rsi,QWORD PTR [rbx+0x548]
  0x00007f003f2abd39: jne    0x00007f003f2abd48
  0x00007f003f2abd3b: add    QWORD PTR [rbx+0x550],0x1
  0x00007f003f2abd43: jmp    0x00007f003f2abeb2
  0x00007f003f2abd48: cmp    rsi,QWORD PTR [rbx+0x558]
  0x00007f003f2abd4f: jne    0x00007f003f2abd5e
  0x00007f003f2abd51: add    QWORD PTR [rbx+0x560],0x1
  0x00007f003f2abd59: jmp    0x00007f003f2abeb2
  0x00007f003f2abd5e: cmp    rsi,QWORD PTR [rbx+0x568]
  0x00007f003f2abd65: jne    0x00007f003f2abd74
  0x00007f003f2abd67: add    QWORD PTR [rbx+0x570],0x1
  0x00007f003f2abd6f: jmp    0x00007f003f2abeb2
  0x00007f003f2abd74: cmp    rsi,QWORD PTR [rbx+0x578]
  0x00007f003f2abd7b: jne    0x00007f003f2abd8a
  0x00007f003f2abd7d: add    QWORD PTR [rbx+0x580],0x1
  0x00007f003f2abd85: jmp    0x00007f003f2abeb2
  0x00007f003f2abd8a: cmp    QWORD PTR [rbx+0x508],0x0
  0x00007f003f2abd95: jne    0x00007f003f2abdae
  0x00007f003f2abd97: mov    QWORD PTR [rbx+0x508],rsi
  0x00007f003f2abd9e: mov    QWORD PTR [rbx+0x510],0x1
  0x00007f003f2abda9: jmp    0x00007f003f2abeb2
  0x00007f003f2abdae: cmp    QWORD PTR [rbx+0x518],0x0
  0x00007f003f2abdb9: jne    0x00007f003f2abdd2
  0x00007f003f2abdbb: mov    QWORD PTR [rbx+0x518],rsi
  0x00007f003f2abdc2: mov    QWORD PTR [rbx+0x520],0x1
  0x00007f003f2abdcd: jmp    0x00007f003f2abeb2
  0x00007f003f2abdd2: cmp    QWORD PTR [rbx+0x528],0x0
  0x00007f003f2abddd: jne    0x00007f003f2abdf6
  0x00007f003f2abddf: mov    QWORD PTR [rbx+0x528],rsi
  0x00007f003f2abde6: mov    QWORD PTR [rbx+0x530],0x1
  0x00007f003f2abdf1: jmp    0x00007f003f2abeb2
  0x00007f003f2abdf6: cmp    QWORD PTR [rbx+0x538],0x0
  0x00007f003f2abe01: jne    0x00007f003f2abe1a
  0x00007f003f2abe03: mov    QWORD PTR [rbx+0x538],rsi
  0x00007f003f2abe0a: mov    QWORD PTR [rbx+0x540],0x1
  0x00007f003f2abe15: jmp    0x00007f003f2abeb2
  0x00007f003f2abe1a: cmp    QWORD PTR [rbx+0x548],0x0
  0x00007f003f2abe25: jne    0x00007f003f2abe3e
  0x00007f003f2abe27: mov    QWORD PTR [rbx+0x548],rsi
  0x00007f003f2abe2e: mov    QWORD PTR [rbx+0x550],0x1
  0x00007f003f2abe39: jmp    0x00007f003f2abeb2
  0x00007f003f2abe3e: cmp    QWORD PTR [rbx+0x558],0x0
  0x00007f003f2abe49: jne    0x00007f003f2abe62
  0x00007f003f2abe4b: mov    QWORD PTR [rbx+0x558],rsi
  0x00007f003f2abe52: mov    QWORD PTR [rbx+0x560],0x1
  0x00007f003f2abe5d: jmp    0x00007f003f2abeb2
  0x00007f003f2abe62: cmp    QWORD PTR [rbx+0x568],0x0
  0x00007f003f2abe6d: jne    0x00007f003f2abe86
  0x00007f003f2abe6f: mov    QWORD PTR [rbx+0x568],rsi
  0x00007f003f2abe76: mov    QWORD PTR [rbx+0x570],0x1
  0x00007f003f2abe81: jmp    0x00007f003f2abeb2
  0x00007f003f2abe86: cmp    QWORD PTR [rbx+0x578],0x0
  0x00007f003f2abe91: jne    0x00007f003f2abeaa
  0x00007f003f2abe93: mov    QWORD PTR [rbx+0x578],rsi
  0x00007f003f2abe9a: mov    QWORD PTR [rbx+0x580],0x1
  0x00007f003f2abea5: jmp    0x00007f003f2abeb2
  0x00007f003f2abeaa: add    QWORD PTR [rbx+0x4f8],0x1
  0x00007f003f2abeb2: mov    rsi,rdi            ;*invokevirtual getClassPath {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@94 (line 522)

  0x00007f003f2abeb5: movabs rax,0xffffffffffffffff
  0x00007f003f2abebf: call   0x00007f003f1c4f60  ; OopMap{[192]=Oop [176]=Oop [152]=Oop [200]=Oop [256]=Oop off=8132}
                                                ;*invokevirtual getClassPath {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@94 (line 522)
                                                ;   {virtual_call}
  0x00007f003f2abec4: cmp    rax,0x0
  0x00007f003f2abec8: movabs rdx,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2abed2: movabs rsi,0x590
  0x00007f003f2abedc: je     0x00007f003f2abeec
  0x00007f003f2abee2: movabs rsi,0x5a0
  0x00007f003f2abeec: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2abef0: lea    rdi,[rdi+0x1]
  0x00007f003f2abef4: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2abef8: je     0x00007f003f2abf2c  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@101 (line 523)

  0x00007f003f2abefe: mov    rsi,QWORD PTR [rsp+0x98]
  0x00007f003f2abf06: movabs rdx,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2abf10: add    QWORD PTR [rdx+0x5b0],0x1
  0x00007f003f2abf18: mov    rdx,rax
  0x00007f003f2abf1b: mov    rsi,QWORD PTR [rsp+0x98]  ;*invokespecial push {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@107 (line 524)

  0x00007f003f2abf23: nop
  0x00007f003f2abf24: nop
  0x00007f003f2abf25: nop
  0x00007f003f2abf26: nop
  0x00007f003f2abf27: call   0x00007f003f1c4d60  ; OopMap{[192]=Oop [152]=Oop [200]=Oop [176]=Oop [256]=Oop off=8236}
                                                ;*invokespecial push {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@107 (line 524)
                                                ;   {optimized virtual_call}
  0x00007f003f2abf2c: movabs rdx,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2abf36: inc    DWORD PTR [rdx+0x5c0]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@110 (line 537)

  0x00007f003f2abf3c: mov    rsi,QWORD PTR [rsp+0x98]
  0x00007f003f2abf44: mov    edx,DWORD PTR [rsi+0x18]
  0x00007f003f2abf47: shl    rdx,0x3            ;*getfield loaders {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@166 (line 539)

  0x00007f003f2abf4b: cmp    rax,QWORD PTR [rdx]  ;*invokevirtual size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@169 (line 539)
                                                ; implicit exception: dispatches to 0x00007f003f2ad8a0
  0x00007f003f2abf4e: mov    rcx,rdx
  0x00007f003f2abf51: movabs rdi,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2abf5b: movabs r10,0x7c0016f60    ;   {metadata(&apos;java/util/ArrayList&apos;)}
  0x00007f003f2abf65: mov    QWORD PTR [rdi+0x9d8],r10
  0x00007f003f2abf6c: add    QWORD PTR [rdi+0x9e0],0x1
  0x00007f003f2abf74: mov    edx,DWORD PTR [rdx+0x10]  ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::size@1 (line 278)
                                                ; - sun.misc.URLClassPath::getLoader@169 (line 539)

  0x00007f003f2abf77: mov    rcx,rsi
  0x00007f003f2abf7a: movabs rdi,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2abf84: add    QWORD PTR [rdi+0xa60],0x1
  0x00007f003f2abf8c: mov    rcx,QWORD PTR [rsp+0xc0]
  0x00007f003f2abf94: mov    rdi,rsi
  0x00007f003f2abf97: mov    rsi,rdi            ;*invokespecial validateLookupCache {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@173 (line 539)

  0x00007f003f2abf9a: nop
  0x00007f003f2abf9b: nop
  0x00007f003f2abf9c: nop
  0x00007f003f2abf9d: nop
  0x00007f003f2abf9e: nop
  0x00007f003f2abf9f: call   0x00007f003f1c4d60  ; OopMap{[192]=Oop [200]=Oop [152]=Oop [256]=Oop off=8356}
                                                ;*invokespecial validateLookupCache {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@173 (line 539)
                                                ;   {optimized virtual_call}
  0x00007f003f2abfa4: mov    rsi,QWORD PTR [rsp+0x98]
  0x00007f003f2abfac: mov    edi,DWORD PTR [rsi+0x18]
  0x00007f003f2abfaf: shl    rdi,0x3            ;*getfield loaders {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@177 (line 540)

  0x00007f003f2abfb3: cmp    rax,QWORD PTR [rdi]  ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ; implicit exception: dispatches to 0x00007f003f2ad8a5
  0x00007f003f2abfb6: mov    rdx,rdi
  0x00007f003f2abfb9: movabs rbx,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2abfc3: movabs r10,0x7c0016f60    ;   {metadata(&apos;java/util/ArrayList&apos;)}
  0x00007f003f2abfcd: mov    QWORD PTR [rbx+0xa80],r10
  0x00007f003f2abfd4: add    QWORD PTR [rbx+0xa88],0x1
  0x00007f003f2abfdc: movabs rdx,0x7f0038a5f350  ;   {metadata(method data for {method} {0x00007f0038850aa8} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2abfe6: mov    ebx,DWORD PTR [rdx+0xfc]
  0x00007f003f2abfec: add    ebx,0x8
  0x00007f003f2abfef: mov    DWORD PTR [rdx+0xfc],ebx
  0x00007f003f2abff5: movabs rdx,0x7f0038850aa8  ;   {metadata({method} {0x00007f0038850aa8} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2abfff: and    ebx,0x7ffff8
  0x00007f003f2ac005: cmp    ebx,0x0
  0x00007f003f2ac008: je     0x00007f003f2ad8aa
  0x00007f003f2ac00e: mov    edx,DWORD PTR [rdi+0x10]  ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@2 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007f003f2ac011: inc    edx
  0x00007f003f2ac013: mov    rbx,rdi
  0x00007f003f2ac016: movabs rax,0x7f0038a5f350  ;   {metadata(method data for {method} {0x00007f0038850aa8} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2ac020: add    QWORD PTR [rax+0x130],0x1
  0x00007f003f2ac028: movabs rbx,0x7f0038a5f570  ;   {metadata(method data for {method} {0x00007f003884fe78} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2ac032: mov    eax,DWORD PTR [rbx+0xfc]
  0x00007f003f2ac038: add    eax,0x8
  0x00007f003f2ac03b: mov    DWORD PTR [rbx+0xfc],eax
  0x00007f003f2ac041: movabs rbx,0x7f003884fe78  ;   {metadata({method} {0x00007f003884fe78} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2ac04b: and    eax,0x7ffff8
  0x00007f003f2ac051: cmp    eax,0x0
  0x00007f003f2ac054: je     0x00007f003f2ad8c1
  0x00007f003f2ac05a: mov    ebx,DWORD PTR [rdi+0x14]
  0x00007f003f2ac05d: shl    rbx,0x3            ;*getfield elementData {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::ensureCapacityInternal@1 (line 223)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007f003f2ac061: movabs r10,0x670b86db8    ;   {oop(a &apos;java/lang/Object&apos;[0] )}
  0x00007f003f2ac06b: cmp    rbx,r10
  0x00007f003f2ac06e: movabs rax,0x7f0038a5f570  ;   {metadata(method data for {method} {0x00007f003884fe78} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2ac078: movabs rcx,0x130
  0x00007f003f2ac082: jne    0x00007f003f2ac092
  0x00007f003f2ac088: movabs rcx,0x140
  0x00007f003f2ac092: mov    r8,QWORD PTR [rax+rcx*1]
  0x00007f003f2ac096: lea    r8,[r8+0x1]
  0x00007f003f2ac09a: mov    QWORD PTR [rax+rcx*1],r8
  0x00007f003f2ac09e: jne    0x00007f003f2ac136  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::ensureCapacityInternal@7 (line 223)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007f003f2ac0a4: movabs rax,0x7f0038a5f570  ;   {metadata(method data for {method} {0x00007f003884fe78} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2ac0ae: add    QWORD PTR [rax+0x150],0x1
  0x00007f003f2ac0b6: movabs rax,0x7f0038a5f728  ;   {metadata(method data for {method} {0x00007f003887a588} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2ac0c0: mov    ecx,DWORD PTR [rax+0xfc]
  0x00007f003f2ac0c6: add    ecx,0x8
  0x00007f003f2ac0c9: mov    DWORD PTR [rax+0xfc],ecx
  0x00007f003f2ac0cf: movabs rax,0x7f003887a588  ;   {metadata({method} {0x00007f003887a588} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2ac0d9: and    ecx,0x7ffff8
  0x00007f003f2ac0df: cmp    ecx,0x0
  0x00007f003f2ac0e2: je     0x00007f003f2ad8d8
  0x00007f003f2ac0e8: cmp    edx,0xa
  0x00007f003f2ac0eb: movabs rax,0x7f0038a5f728  ;   {metadata(method data for {method} {0x00007f003887a588} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2ac0f5: movabs rcx,0x130
  0x00007f003f2ac0ff: jg     0x00007f003f2ac10f
  0x00007f003f2ac105: movabs rcx,0x140
  0x00007f003f2ac10f: mov    r8,QWORD PTR [rax+rcx*1]
  0x00007f003f2ac113: lea    r8,[r8+0x1]
  0x00007f003f2ac117: mov    QWORD PTR [rax+rcx*1],r8
  0x00007f003f2ac11b: jg     0x00007f003f2ac136  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::max@2 (line 1252)
                                                ; - java.util.ArrayList::ensureCapacityInternal@13 (line 224)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007f003f2ac121: movabs rdx,0x7f0038a5f728  ;   {metadata(method data for {method} {0x00007f003887a588} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2ac12b: inc    DWORD PTR [rdx+0x150]
  0x00007f003f2ac131: mov    edx,0xa            ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::max@6 (line 1252)
                                                ; - java.util.ArrayList::ensureCapacityInternal@13 (line 224)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007f003f2ac136: mov    rax,rdi
  0x00007f003f2ac139: movabs rcx,0x7f0038a5f570  ;   {metadata(method data for {method} {0x00007f003884fe78} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2ac143: add    QWORD PTR [rcx+0x160],0x1
  0x00007f003f2ac14b: movabs rax,0x7f0038a5f8b0  ;   {metadata(method data for {method} {0x00007f003884ff40} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2ac155: mov    ecx,DWORD PTR [rax+0xfc]
  0x00007f003f2ac15b: add    ecx,0x8
  0x00007f003f2ac15e: mov    DWORD PTR [rax+0xfc],ecx
  0x00007f003f2ac164: movabs rax,0x7f003884ff40  ;   {metadata({method} {0x00007f003884ff40} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2ac16e: and    ecx,0x7ffff8
  0x00007f003f2ac174: cmp    ecx,0x0
  0x00007f003f2ac177: je     0x00007f003f2ad8ef
  0x00007f003f2ac17d: mov    eax,DWORD PTR [rdi+0xc]  ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::ensureExplicitCapacity@2 (line 231)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007f003f2ac180: inc    eax
  0x00007f003f2ac182: mov    DWORD PTR [rdi+0xc],eax  ;*putfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::ensureExplicitCapacity@7 (line 231)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007f003f2ac185: mov    ebx,DWORD PTR [rbx+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 234)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ; implicit exception: dispatches to 0x00007f003f2ad906
  0x00007f003f2ac188: mov    rax,rdx
  0x00007f003f2ac18b: sub    eax,ebx
  0x00007f003f2ac18d: cmp    eax,0x0
  0x00007f003f2ac190: movabs rbx,0x7f0038a5f8b0  ;   {metadata(method data for {method} {0x00007f003884ff40} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2ac19a: movabs rax,0x130
  0x00007f003f2ac1a4: jle    0x00007f003f2ac1b4
  0x00007f003f2ac1aa: movabs rax,0x140
  0x00007f003f2ac1b4: mov    rcx,QWORD PTR [rbx+rax*1]
  0x00007f003f2ac1b8: lea    rcx,[rcx+0x1]
  0x00007f003f2ac1bc: mov    QWORD PTR [rbx+rax*1],rcx
  0x00007f003f2ac1c0: jg     0x00007f003f2ac1d3  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::ensureExplicitCapacity@17 (line 234)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007f003f2ac1c6: mov    QWORD PTR [rsp+0xd0],rdi
  0x00007f003f2ac1ce: jmp    0x00007f003f2ac1fc  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::ensureExplicitCapacity@25 (line 236)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007f003f2ac1d3: mov    rbx,rdi
  0x00007f003f2ac1d6: movabs rax,0x7f0038a5f8b0  ;   {metadata(method data for {method} {0x00007f003884ff40} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2ac1e0: add    QWORD PTR [rax+0x150],0x1
  0x00007f003f2ac1e8: mov    rsi,rdi            ;*invokespecial grow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::ensureExplicitCapacity@22 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007f003f2ac1eb: mov    QWORD PTR [rsp+0xd0],rdi
  0x00007f003f2ac1f3: nop
  0x00007f003f2ac1f4: nop
  0x00007f003f2ac1f5: nop
  0x00007f003f2ac1f6: nop
  0x00007f003f2ac1f7: call   0x00007f003f1c4d60  ; OopMap{[192]=Oop [200]=Oop [152]=Oop [208]=Oop [256]=Oop off=8956}
                                                ;*invokespecial grow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::ensureExplicitCapacity@22 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {optimized virtual_call}
  0x00007f003f2ac1fc: mov    rdi,QWORD PTR [rsp+0xd0]
  0x00007f003f2ac204: mov    rbx,QWORD PTR [rsp+0xc8]
  0x00007f003f2ac20c: mov    esi,DWORD PTR [rdi+0x14]
  0x00007f003f2ac20f: shl    rsi,0x3            ;*getfield elementData {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@11 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007f003f2ac213: mov    eax,DWORD PTR [rdi+0x10]  ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@16 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007f003f2ac216: mov    rdx,rax
  0x00007f003f2ac219: inc    edx
  0x00007f003f2ac21b: mov    DWORD PTR [rdi+0x10],edx  ;*putfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@22 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007f003f2ac21e: movsxd rdi,eax
  0x00007f003f2ac221: lea    rdi,[rsi+rdi*4+0x10]
  0x00007f003f2ac226: cmp    eax,DWORD PTR [rsi+0xc]  ; implicit exception: dispatches to 0x00007f003f2ad90b
  0x00007f003f2ac229: jae    0x00007f003f2ad915
  0x00007f003f2ac22f: cmp    rbx,0x0
  0x00007f003f2ac233: jne    0x00007f003f2ac24e
  0x00007f003f2ac235: movabs rax,0x7f0038a5f350  ;   {metadata(method data for {method} {0x00007f0038850aa8} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2ac23f: or     DWORD PTR [rax+0x138],0x100
  0x00007f003f2ac249: jmp    0x00007f003f2ac48e
  0x00007f003f2ac24e: mov    esi,DWORD PTR [rsi+0x8]  ; implicit exception: dispatches to 0x00007f003f2ad91e
  0x00007f003f2ac251: shl    rsi,0x3
  0x00007f003f2ac255: mov    eax,DWORD PTR [rbx+0x8]
  0x00007f003f2ac258: shl    rax,0x3
  0x00007f003f2ac25c: mov    rsi,QWORD PTR [rsi+0xe0]
  0x00007f003f2ac263: cmp    rax,rsi
  0x00007f003f2ac266: je     0x00007f003f2ac294
  0x00007f003f2ac26c: mov    edx,DWORD PTR [rsi+0xc]
  0x00007f003f2ac26f: cmp    rsi,QWORD PTR [rax+rdx*1]
  0x00007f003f2ac273: je     0x00007f003f2ac294
  0x00007f003f2ac279: cmp    edx,0x18
  0x00007f003f2ac27c: jne    0x00007f003f2ac477
  0x00007f003f2ac282: push   rax
  0x00007f003f2ac283: push   rsi
  0x00007f003f2ac284: call   0x00007f003f27b720  ;   {runtime_call}
  0x00007f003f2ac289: pop    rax
  0x00007f003f2ac28a: pop    rsi
  0x00007f003f2ac28b: cmp    esi,0x0
  0x00007f003f2ac28e: je     0x00007f003f2ac477
  0x00007f003f2ac294: movabs rax,0x7f0038a5f350  ;   {metadata(method data for {method} {0x00007f0038850aa8} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2ac29e: mov    esi,DWORD PTR [rbx+0x8]
  0x00007f003f2ac2a1: shl    rsi,0x3
  0x00007f003f2ac2a5: cmp    rsi,QWORD PTR [rax+0x150]
  0x00007f003f2ac2ac: jne    0x00007f003f2ac2bb
  0x00007f003f2ac2ae: add    QWORD PTR [rax+0x158],0x1
  0x00007f003f2ac2b6: jmp    0x00007f003f2ac48e
  0x00007f003f2ac2bb: cmp    rsi,QWORD PTR [rax+0x160]
  0x00007f003f2ac2c2: jne    0x00007f003f2ac2d1
  0x00007f003f2ac2c4: add    QWORD PTR [rax+0x168],0x1
  0x00007f003f2ac2cc: jmp    0x00007f003f2ac48e
  0x00007f003f2ac2d1: cmp    rsi,QWORD PTR [rax+0x170]
  0x00007f003f2ac2d8: jne    0x00007f003f2ac2e7
  0x00007f003f2ac2da: add    QWORD PTR [rax+0x178],0x1
  0x00007f003f2ac2e2: jmp    0x00007f003f2ac48e
  0x00007f003f2ac2e7: cmp    rsi,QWORD PTR [rax+0x180]
  0x00007f003f2ac2ee: jne    0x00007f003f2ac2fd
  0x00007f003f2ac2f0: add    QWORD PTR [rax+0x188],0x1
  0x00007f003f2ac2f8: jmp    0x00007f003f2ac48e
  0x00007f003f2ac2fd: cmp    rsi,QWORD PTR [rax+0x190]
  0x00007f003f2ac304: jne    0x00007f003f2ac313
  0x00007f003f2ac306: add    QWORD PTR [rax+0x198],0x1
  0x00007f003f2ac30e: jmp    0x00007f003f2ac48e
  0x00007f003f2ac313: cmp    rsi,QWORD PTR [rax+0x1a0]
  0x00007f003f2ac31a: jne    0x00007f003f2ac329
  0x00007f003f2ac31c: add    QWORD PTR [rax+0x1a8],0x1
  0x00007f003f2ac324: jmp    0x00007f003f2ac48e
  0x00007f003f2ac329: cmp    rsi,QWORD PTR [rax+0x1b0]
  0x00007f003f2ac330: jne    0x00007f003f2ac33f
  0x00007f003f2ac332: add    QWORD PTR [rax+0x1b8],0x1
  0x00007f003f2ac33a: jmp    0x00007f003f2ac48e
  0x00007f003f2ac33f: cmp    rsi,QWORD PTR [rax+0x1c0]
  0x00007f003f2ac346: jne    0x00007f003f2ac355
  0x00007f003f2ac348: add    QWORD PTR [rax+0x1c8],0x1
  0x00007f003f2ac350: jmp    0x00007f003f2ac48e
  0x00007f003f2ac355: cmp    QWORD PTR [rax+0x150],0x0
  0x00007f003f2ac360: jne    0x00007f003f2ac379
  0x00007f003f2ac362: mov    QWORD PTR [rax+0x150],rsi
  0x00007f003f2ac369: mov    QWORD PTR [rax+0x158],0x1
  0x00007f003f2ac374: jmp    0x00007f003f2ac48e
  0x00007f003f2ac379: cmp    QWORD PTR [rax+0x160],0x0
  0x00007f003f2ac384: jne    0x00007f003f2ac39d
  0x00007f003f2ac386: mov    QWORD PTR [rax+0x160],rsi
  0x00007f003f2ac38d: mov    QWORD PTR [rax+0x168],0x1
  0x00007f003f2ac398: jmp    0x00007f003f2ac48e
  0x00007f003f2ac39d: cmp    QWORD PTR [rax+0x170],0x0
  0x00007f003f2ac3a8: jne    0x00007f003f2ac3c1
  0x00007f003f2ac3aa: mov    QWORD PTR [rax+0x170],rsi
  0x00007f003f2ac3b1: mov    QWORD PTR [rax+0x178],0x1
  0x00007f003f2ac3bc: jmp    0x00007f003f2ac48e
  0x00007f003f2ac3c1: cmp    QWORD PTR [rax+0x180],0x0
  0x00007f003f2ac3cc: jne    0x00007f003f2ac3e5
  0x00007f003f2ac3ce: mov    QWORD PTR [rax+0x180],rsi
  0x00007f003f2ac3d5: mov    QWORD PTR [rax+0x188],0x1
  0x00007f003f2ac3e0: jmp    0x00007f003f2ac48e
  0x00007f003f2ac3e5: cmp    QWORD PTR [rax+0x190],0x0
  0x00007f003f2ac3f0: jne    0x00007f003f2ac409
  0x00007f003f2ac3f2: mov    QWORD PTR [rax+0x190],rsi
  0x00007f003f2ac3f9: mov    QWORD PTR [rax+0x198],0x1
  0x00007f003f2ac404: jmp    0x00007f003f2ac48e
  0x00007f003f2ac409: cmp    QWORD PTR [rax+0x1a0],0x0
  0x00007f003f2ac414: jne    0x00007f003f2ac42d
  0x00007f003f2ac416: mov    QWORD PTR [rax+0x1a0],rsi
  0x00007f003f2ac41d: mov    QWORD PTR [rax+0x1a8],0x1
  0x00007f003f2ac428: jmp    0x00007f003f2ac48e
  0x00007f003f2ac42d: cmp    QWORD PTR [rax+0x1b0],0x0
  0x00007f003f2ac438: jne    0x00007f003f2ac451
  0x00007f003f2ac43a: mov    QWORD PTR [rax+0x1b0],rsi
  0x00007f003f2ac441: mov    QWORD PTR [rax+0x1b8],0x1
  0x00007f003f2ac44c: jmp    0x00007f003f2ac48e
  0x00007f003f2ac451: cmp    QWORD PTR [rax+0x1c0],0x0
  0x00007f003f2ac45c: jne    0x00007f003f2ac475
  0x00007f003f2ac45e: mov    QWORD PTR [rax+0x1c0],rsi
  0x00007f003f2ac465: mov    QWORD PTR [rax+0x1c8],0x1
  0x00007f003f2ac470: jmp    0x00007f003f2ac48e
  0x00007f003f2ac475: jmp    0x00007f003f2ac48e
  0x00007f003f2ac477: movabs rax,0x7f0038a5f350  ;   {metadata(method data for {method} {0x00007f0038850aa8} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2ac481: sub    QWORD PTR [rax+0x140],0x1
  0x00007f003f2ac489: jmp    0x00007f003f2ad923
  0x00007f003f2ac48e: mov    r10,rbx
  0x00007f003f2ac491: shr    r10,0x3
  0x00007f003f2ac495: mov    DWORD PTR [rdi],r10d
  0x00007f003f2ac498: shr    rdi,0x9
  0x00007f003f2ac49c: movabs rsi,0x7f003ae7c000
  0x00007f003f2ac4a6: mov    BYTE PTR [rdi+rsi*1],0x0  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00007f003f2ac4aa: mov    rax,QWORD PTR [rsp+0xc0]
  0x00007f003f2ac4b2: mov    rsi,QWORD PTR [rsp+0x98]
  0x00007f003f2ac4ba: mov    edi,DWORD PTR [rsi+0x1c]
  0x00007f003f2ac4bd: shl    rdi,0x3            ;*getfield lmap {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@187 (line 541)

  0x00007f003f2ac4c1: cmp    rax,QWORD PTR [rdi]  ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)
                                                ; implicit exception: dispatches to 0x00007f003f2ad92c
  0x00007f003f2ac4c4: mov    rdx,rdi
  0x00007f003f2ac4c7: movabs rcx,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2ac4d1: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2ac4d4: shl    rdx,0x3
  0x00007f003f2ac4d8: cmp    rdx,QWORD PTR [rcx+0xb18]
  0x00007f003f2ac4df: jne    0x00007f003f2ac4ee
  0x00007f003f2ac4e1: add    QWORD PTR [rcx+0xb20],0x1
  0x00007f003f2ac4e9: jmp    0x00007f003f2ac6b0
  0x00007f003f2ac4ee: cmp    rdx,QWORD PTR [rcx+0xb28]
  0x00007f003f2ac4f5: jne    0x00007f003f2ac504
  0x00007f003f2ac4f7: add    QWORD PTR [rcx+0xb30],0x1
  0x00007f003f2ac4ff: jmp    0x00007f003f2ac6b0
  0x00007f003f2ac504: cmp    rdx,QWORD PTR [rcx+0xb38]
  0x00007f003f2ac50b: jne    0x00007f003f2ac51a
  0x00007f003f2ac50d: add    QWORD PTR [rcx+0xb40],0x1
  0x00007f003f2ac515: jmp    0x00007f003f2ac6b0
  0x00007f003f2ac51a: cmp    rdx,QWORD PTR [rcx+0xb48]
  0x00007f003f2ac521: jne    0x00007f003f2ac530
  0x00007f003f2ac523: add    QWORD PTR [rcx+0xb50],0x1
  0x00007f003f2ac52b: jmp    0x00007f003f2ac6b0
  0x00007f003f2ac530: cmp    rdx,QWORD PTR [rcx+0xb58]
  0x00007f003f2ac537: jne    0x00007f003f2ac546
  0x00007f003f2ac539: add    QWORD PTR [rcx+0xb60],0x1
  0x00007f003f2ac541: jmp    0x00007f003f2ac6b0
  0x00007f003f2ac546: cmp    rdx,QWORD PTR [rcx+0xb68]
  0x00007f003f2ac54d: jne    0x00007f003f2ac55c
  0x00007f003f2ac54f: add    QWORD PTR [rcx+0xb70],0x1
  0x00007f003f2ac557: jmp    0x00007f003f2ac6b0
  0x00007f003f2ac55c: cmp    rdx,QWORD PTR [rcx+0xb78]
  0x00007f003f2ac563: jne    0x00007f003f2ac572
  0x00007f003f2ac565: add    QWORD PTR [rcx+0xb80],0x1
  0x00007f003f2ac56d: jmp    0x00007f003f2ac6b0
  0x00007f003f2ac572: cmp    rdx,QWORD PTR [rcx+0xb88]
  0x00007f003f2ac579: jne    0x00007f003f2ac588
  0x00007f003f2ac57b: add    QWORD PTR [rcx+0xb90],0x1
  0x00007f003f2ac583: jmp    0x00007f003f2ac6b0
  0x00007f003f2ac588: cmp    QWORD PTR [rcx+0xb18],0x0
  0x00007f003f2ac593: jne    0x00007f003f2ac5ac
  0x00007f003f2ac595: mov    QWORD PTR [rcx+0xb18],rdx
  0x00007f003f2ac59c: mov    QWORD PTR [rcx+0xb20],0x1
  0x00007f003f2ac5a7: jmp    0x00007f003f2ac6b0
  0x00007f003f2ac5ac: cmp    QWORD PTR [rcx+0xb28],0x0
  0x00007f003f2ac5b7: jne    0x00007f003f2ac5d0
  0x00007f003f2ac5b9: mov    QWORD PTR [rcx+0xb28],rdx
  0x00007f003f2ac5c0: mov    QWORD PTR [rcx+0xb30],0x1
  0x00007f003f2ac5cb: jmp    0x00007f003f2ac6b0
  0x00007f003f2ac5d0: cmp    QWORD PTR [rcx+0xb38],0x0
  0x00007f003f2ac5db: jne    0x00007f003f2ac5f4
  0x00007f003f2ac5dd: mov    QWORD PTR [rcx+0xb38],rdx
  0x00007f003f2ac5e4: mov    QWORD PTR [rcx+0xb40],0x1
  0x00007f003f2ac5ef: jmp    0x00007f003f2ac6b0
  0x00007f003f2ac5f4: cmp    QWORD PTR [rcx+0xb48],0x0
  0x00007f003f2ac5ff: jne    0x00007f003f2ac618
  0x00007f003f2ac601: mov    QWORD PTR [rcx+0xb48],rdx
  0x00007f003f2ac608: mov    QWORD PTR [rcx+0xb50],0x1
  0x00007f003f2ac613: jmp    0x00007f003f2ac6b0
  0x00007f003f2ac618: cmp    QWORD PTR [rcx+0xb58],0x0
  0x00007f003f2ac623: jne    0x00007f003f2ac63c
  0x00007f003f2ac625: mov    QWORD PTR [rcx+0xb58],rdx
  0x00007f003f2ac62c: mov    QWORD PTR [rcx+0xb60],0x1
  0x00007f003f2ac637: jmp    0x00007f003f2ac6b0
  0x00007f003f2ac63c: cmp    QWORD PTR [rcx+0xb68],0x0
  0x00007f003f2ac647: jne    0x00007f003f2ac660
  0x00007f003f2ac649: mov    QWORD PTR [rcx+0xb68],rdx
  0x00007f003f2ac650: mov    QWORD PTR [rcx+0xb70],0x1
  0x00007f003f2ac65b: jmp    0x00007f003f2ac6b0
  0x00007f003f2ac660: cmp    QWORD PTR [rcx+0xb78],0x0
  0x00007f003f2ac66b: jne    0x00007f003f2ac684
  0x00007f003f2ac66d: mov    QWORD PTR [rcx+0xb78],rdx
  0x00007f003f2ac674: mov    QWORD PTR [rcx+0xb80],0x1
  0x00007f003f2ac67f: jmp    0x00007f003f2ac6b0
  0x00007f003f2ac684: cmp    QWORD PTR [rcx+0xb88],0x0
  0x00007f003f2ac68f: jne    0x00007f003f2ac6a8
  0x00007f003f2ac691: mov    QWORD PTR [rcx+0xb88],rdx
  0x00007f003f2ac698: mov    QWORD PTR [rcx+0xb90],0x1
  0x00007f003f2ac6a3: jmp    0x00007f003f2ac6b0
  0x00007f003f2ac6a8: add    QWORD PTR [rcx+0xb08],0x1
  0x00007f003f2ac6b0: movabs rdx,0x7f0038a5fc20  ;   {metadata(method data for {method} {0x00007f003886d660} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ac6ba: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2ac6c0: add    ecx,0x8
  0x00007f003f2ac6c3: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2ac6c9: movabs rdx,0x7f003886d660  ;   {metadata({method} {0x00007f003886d660} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ac6d3: and    ecx,0x7ffff8
  0x00007f003f2ac6d9: cmp    ecx,0x0
  0x00007f003f2ac6dc: je     0x00007f003f2ad931
  0x00007f003f2ac6e2: movabs rdx,0x7f0038a5fc20  ;   {metadata(method data for {method} {0x00007f003886d660} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ac6ec: add    QWORD PTR [rdx+0x130],0x1
  0x00007f003f2ac6f4: movabs rdx,0x7f0038a588a0  ;   {metadata(method data for {method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ac6fe: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2ac704: add    ecx,0x8
  0x00007f003f2ac707: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2ac70d: movabs rdx,0x7f003886c920  ;   {metadata({method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ac717: and    ecx,0x7ffff8
  0x00007f003f2ac71d: cmp    ecx,0x0
  0x00007f003f2ac720: je     0x00007f003f2ad948
  0x00007f003f2ac726: cmp    rax,0x0
  0x00007f003f2ac72a: movabs rdx,0x7f0038a588a0  ;   {metadata(method data for {method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ac734: movabs rcx,0x130
  0x00007f003f2ac73e: jne    0x00007f003f2ac74e
  0x00007f003f2ac744: movabs rcx,0x140
  0x00007f003f2ac74e: mov    r8,QWORD PTR [rdx+rcx*1]
  0x00007f003f2ac752: lea    r8,[r8+0x1]
  0x00007f003f2ac756: mov    QWORD PTR [rdx+rcx*1],r8
  0x00007f003f2ac75a: jne    0x00007f003f2ac782  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)

  0x00007f003f2ac760: movabs rdx,0x7f0038a588a0  ;   {metadata(method data for {method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ac76a: inc    DWORD PTR [rdx+0x150]
  0x00007f003f2ac770: mov    edx,0x0
  0x00007f003f2ac775: mov    QWORD PTR [rsp+0xd8],rdi
  0x00007f003f2ac77d: jmp    0x00007f003f2ac7b5  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)

  0x00007f003f2ac782: mov    QWORD PTR [rsp+0xd8],rdi
  0x00007f003f2ac78a: cmp    rax,QWORD PTR [rax]  ; implicit exception: dispatches to 0x00007f003f2ad95f
  0x00007f003f2ac78d: mov    rdx,rax
  0x00007f003f2ac790: movabs rcx,0x7f0038a588a0  ;   {metadata(method data for {method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ac79a: add    QWORD PTR [rcx+0x168],0x1
  0x00007f003f2ac7a2: mov    rsi,rax            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)

  0x00007f003f2ac7a5: nop
  0x00007f003f2ac7a6: nop
  0x00007f003f2ac7a7: call   0x00007f003f1c4d60  ; OopMap{[152]=Oop [200]=Oop [216]=Oop [192]=Oop [256]=Oop off=10412}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)
                                                ;   {optimized virtual_call}
  0x00007f003f2ac7ac: mov    rdx,rax
  0x00007f003f2ac7af: shr    edx,0x10
  0x00007f003f2ac7b2: xor    rdx,rax
  0x00007f003f2ac7b5: mov    rsi,QWORD PTR [rsp+0xd8]
  0x00007f003f2ac7bd: mov    rdi,QWORD PTR [rsp+0xc8]
  0x00007f003f2ac7c5: mov    rcx,rsi
  0x00007f003f2ac7c8: movabs r8,0x7f0038a5fc20  ;   {metadata(method data for {method} {0x00007f003886d660} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ac7d2: add    QWORD PTR [r8+0x140],0x1
  0x00007f003f2ac7da: mov    rcx,QWORD PTR [rsp+0xc0]
  0x00007f003f2ac7e2: mov    r8,rdi
  0x00007f003f2ac7e5: mov    r9d,0x0
  0x00007f003f2ac7eb: mov    edi,0x1            ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@9 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)

  0x00007f003f2ac7f0: nop
  0x00007f003f2ac7f1: nop
  0x00007f003f2ac7f2: nop
  0x00007f003f2ac7f3: nop
  0x00007f003f2ac7f4: nop
  0x00007f003f2ac7f5: nop
  0x00007f003f2ac7f6: nop
  0x00007f003f2ac7f7: call   0x00007f003f1c4d60  ; OopMap{[152]=Oop [256]=Oop off=10492}
                                                ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@9 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)
                                                ;   {optimized virtual_call}
  0x00007f003f2ac7fc: jmp    0x00007f003f2acd24  ;*pop {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@196 (line 541)

  0x00007f003f2ac801: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2ac808: xor    r10,r10
  0x00007f003f2ac80b: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2ac812: xor    r10,r10
  0x00007f003f2ac815: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2ac81c: mov    rsi,rax
  0x00007f003f2ac81f: movabs rdx,0x7f0038a5e6a8  ;   {metadata(method data for {method} {0x00007f003896d5d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2ac829: mov    esi,DWORD PTR [rsi+0x8]
  0x00007f003f2ac82c: shl    rsi,0x3
  0x00007f003f2ac830: cmp    rsi,QWORD PTR [rdx+0x1f8]
  0x00007f003f2ac837: jne    0x00007f003f2ac846
  0x00007f003f2ac839: add    QWORD PTR [rdx+0x200],0x1
  0x00007f003f2ac841: jmp    0x00007f003f2aca08
  0x00007f003f2ac846: cmp    rsi,QWORD PTR [rdx+0x208]
  0x00007f003f2ac84d: jne    0x00007f003f2ac85c
  0x00007f003f2ac84f: add    QWORD PTR [rdx+0x210],0x1
  0x00007f003f2ac857: jmp    0x00007f003f2aca08
  0x00007f003f2ac85c: cmp    rsi,QWORD PTR [rdx+0x218]
  0x00007f003f2ac863: jne    0x00007f003f2ac872
  0x00007f003f2ac865: add    QWORD PTR [rdx+0x220],0x1
  0x00007f003f2ac86d: jmp    0x00007f003f2aca08
  0x00007f003f2ac872: cmp    rsi,QWORD PTR [rdx+0x228]
  0x00007f003f2ac879: jne    0x00007f003f2ac888
  0x00007f003f2ac87b: add    QWORD PTR [rdx+0x230],0x1
  0x00007f003f2ac883: jmp    0x00007f003f2aca08
  0x00007f003f2ac888: cmp    rsi,QWORD PTR [rdx+0x238]
  0x00007f003f2ac88f: jne    0x00007f003f2ac89e
  0x00007f003f2ac891: add    QWORD PTR [rdx+0x240],0x1
  0x00007f003f2ac899: jmp    0x00007f003f2aca08
  0x00007f003f2ac89e: cmp    rsi,QWORD PTR [rdx+0x248]
  0x00007f003f2ac8a5: jne    0x00007f003f2ac8b4
  0x00007f003f2ac8a7: add    QWORD PTR [rdx+0x250],0x1
  0x00007f003f2ac8af: jmp    0x00007f003f2aca08
  0x00007f003f2ac8b4: cmp    rsi,QWORD PTR [rdx+0x258]
  0x00007f003f2ac8bb: jne    0x00007f003f2ac8ca
  0x00007f003f2ac8bd: add    QWORD PTR [rdx+0x260],0x1
  0x00007f003f2ac8c5: jmp    0x00007f003f2aca08
  0x00007f003f2ac8ca: cmp    rsi,QWORD PTR [rdx+0x268]
  0x00007f003f2ac8d1: jne    0x00007f003f2ac8e0
  0x00007f003f2ac8d3: add    QWORD PTR [rdx+0x270],0x1
  0x00007f003f2ac8db: jmp    0x00007f003f2aca08
  0x00007f003f2ac8e0: cmp    QWORD PTR [rdx+0x1f8],0x0
  0x00007f003f2ac8eb: jne    0x00007f003f2ac904
  0x00007f003f2ac8ed: mov    QWORD PTR [rdx+0x1f8],rsi
  0x00007f003f2ac8f4: mov    QWORD PTR [rdx+0x200],0x1
  0x00007f003f2ac8ff: jmp    0x00007f003f2aca08
  0x00007f003f2ac904: cmp    QWORD PTR [rdx+0x208],0x0
  0x00007f003f2ac90f: jne    0x00007f003f2ac928
  0x00007f003f2ac911: mov    QWORD PTR [rdx+0x208],rsi
  0x00007f003f2ac918: mov    QWORD PTR [rdx+0x210],0x1
  0x00007f003f2ac923: jmp    0x00007f003f2aca08
  0x00007f003f2ac928: cmp    QWORD PTR [rdx+0x218],0x0
  0x00007f003f2ac933: jne    0x00007f003f2ac94c
  0x00007f003f2ac935: mov    QWORD PTR [rdx+0x218],rsi
  0x00007f003f2ac93c: mov    QWORD PTR [rdx+0x220],0x1
  0x00007f003f2ac947: jmp    0x00007f003f2aca08
  0x00007f003f2ac94c: cmp    QWORD PTR [rdx+0x228],0x0
  0x00007f003f2ac957: jne    0x00007f003f2ac970
  0x00007f003f2ac959: mov    QWORD PTR [rdx+0x228],rsi
  0x00007f003f2ac960: mov    QWORD PTR [rdx+0x230],0x1
  0x00007f003f2ac96b: jmp    0x00007f003f2aca08
  0x00007f003f2ac970: cmp    QWORD PTR [rdx+0x238],0x0
  0x00007f003f2ac97b: jne    0x00007f003f2ac994
  0x00007f003f2ac97d: mov    QWORD PTR [rdx+0x238],rsi
  0x00007f003f2ac984: mov    QWORD PTR [rdx+0x240],0x1
  0x00007f003f2ac98f: jmp    0x00007f003f2aca08
  0x00007f003f2ac994: cmp    QWORD PTR [rdx+0x248],0x0
  0x00007f003f2ac99f: jne    0x00007f003f2ac9b8
  0x00007f003f2ac9a1: mov    QWORD PTR [rdx+0x248],rsi
  0x00007f003f2ac9a8: mov    QWORD PTR [rdx+0x250],0x1
  0x00007f003f2ac9b3: jmp    0x00007f003f2aca08
  0x00007f003f2ac9b8: cmp    QWORD PTR [rdx+0x258],0x0
  0x00007f003f2ac9c3: jne    0x00007f003f2ac9dc
  0x00007f003f2ac9c5: mov    QWORD PTR [rdx+0x258],rsi
  0x00007f003f2ac9cc: mov    QWORD PTR [rdx+0x260],0x1
  0x00007f003f2ac9d7: jmp    0x00007f003f2aca08
  0x00007f003f2ac9dc: cmp    QWORD PTR [rdx+0x268],0x0
  0x00007f003f2ac9e7: jne    0x00007f003f2aca00
  0x00007f003f2ac9e9: mov    QWORD PTR [rdx+0x268],rsi
  0x00007f003f2ac9f0: mov    QWORD PTR [rdx+0x270],0x1
  0x00007f003f2ac9fb: jmp    0x00007f003f2aca08
  0x00007f003f2aca00: add    QWORD PTR [rdx+0x1e8],0x1
  0x00007f003f2aca08: mov    rsi,rax            ;*invokevirtual getException {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@22 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00007f003f2aca0b: nop
  0x00007f003f2aca0c: nop
  0x00007f003f2aca0d: movabs rax,0xffffffffffffffff
  0x00007f003f2aca17: call   0x00007f003f1c4f60  ; OopMap{[152]=Oop [192]=Oop [176]=Oop [256]=Oop off=11036}
                                                ;*invokevirtual getException {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@22 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {virtual_call}
  0x00007f003f2aca1c: cmp    rax,0x0
  0x00007f003f2aca20: jne    0x00007f003f2aca3b
  0x00007f003f2aca22: movabs rdi,0x7f0038a5e6a8  ;   {metadata(method data for {method} {0x00007f003896d5d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2aca2c: or     DWORD PTR [rdi+0x278],0x100
  0x00007f003f2aca36: jmp    0x00007f003f2acc84
  0x00007f003f2aca3b: nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f003f2aca40: jmp    0x00007f003f2ad973  ;   {no_reloc}
  0x00007f003f2aca45: add    BYTE PTR [rax],al
  0x00007f003f2aca47: add    BYTE PTR [rax],al
  0x00007f003f2aca49: add    BYTE PTR [rbx-0x3eb7f788],cl
  0x00007f003f2aca4f: out    0x3,eax
  0x00007f003f2aca51: cmp    rdi,rcx
  0x00007f003f2aca54: je     0x00007f003f2aca82
  0x00007f003f2aca5a: mov    esi,DWORD PTR [rcx+0xc]
  0x00007f003f2aca5d: cmp    rcx,QWORD PTR [rdi+rsi*1]
  0x00007f003f2aca61: je     0x00007f003f2aca82
  0x00007f003f2aca67: cmp    esi,0x18
  0x00007f003f2aca6a: jne    0x00007f003f2acc68
  0x00007f003f2aca70: push   rdi
  0x00007f003f2aca71: push   rcx
  0x00007f003f2aca72: call   0x00007f003f27b720  ;   {runtime_call}
  0x00007f003f2aca77: pop    rdi
  0x00007f003f2aca78: pop    rcx
  0x00007f003f2aca79: cmp    ecx,0x0
  0x00007f003f2aca7c: je     0x00007f003f2acc68
  0x00007f003f2aca82: movabs rdi,0x7f0038a5e6a8  ;   {metadata(method data for {method} {0x00007f003896d5d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2aca8c: mov    ecx,DWORD PTR [rax+0x8]
  0x00007f003f2aca8f: shl    rcx,0x3
  0x00007f003f2aca93: cmp    rcx,QWORD PTR [rdi+0x290]
  0x00007f003f2aca9a: jne    0x00007f003f2acaa9
  0x00007f003f2aca9c: add    QWORD PTR [rdi+0x298],0x1
  0x00007f003f2acaa4: jmp    0x00007f003f2acc84
  0x00007f003f2acaa9: cmp    rcx,QWORD PTR [rdi+0x2a0]
  0x00007f003f2acab0: jne    0x00007f003f2acabf
  0x00007f003f2acab2: add    QWORD PTR [rdi+0x2a8],0x1
  0x00007f003f2acaba: jmp    0x00007f003f2acc84
  0x00007f003f2acabf: cmp    rcx,QWORD PTR [rdi+0x2b0]
  0x00007f003f2acac6: jne    0x00007f003f2acad5
  0x00007f003f2acac8: add    QWORD PTR [rdi+0x2b8],0x1
  0x00007f003f2acad0: jmp    0x00007f003f2acc84
  0x00007f003f2acad5: cmp    rcx,QWORD PTR [rdi+0x2c0]
  0x00007f003f2acadc: jne    0x00007f003f2acaeb
  0x00007f003f2acade: add    QWORD PTR [rdi+0x2c8],0x1
  0x00007f003f2acae6: jmp    0x00007f003f2acc84
  0x00007f003f2acaeb: cmp    rcx,QWORD PTR [rdi+0x2d0]
  0x00007f003f2acaf2: jne    0x00007f003f2acb01
  0x00007f003f2acaf4: add    QWORD PTR [rdi+0x2d8],0x1
  0x00007f003f2acafc: jmp    0x00007f003f2acc84
  0x00007f003f2acb01: cmp    rcx,QWORD PTR [rdi+0x2e0]
  0x00007f003f2acb08: jne    0x00007f003f2acb17
  0x00007f003f2acb0a: add    QWORD PTR [rdi+0x2e8],0x1
  0x00007f003f2acb12: jmp    0x00007f003f2acc84
  0x00007f003f2acb17: cmp    rcx,QWORD PTR [rdi+0x2f0]
  0x00007f003f2acb1e: jne    0x00007f003f2acb2d
  0x00007f003f2acb20: add    QWORD PTR [rdi+0x2f8],0x1
  0x00007f003f2acb28: jmp    0x00007f003f2acc84
  0x00007f003f2acb2d: cmp    rcx,QWORD PTR [rdi+0x300]
  0x00007f003f2acb34: jne    0x00007f003f2acb43
  0x00007f003f2acb36: add    QWORD PTR [rdi+0x308],0x1
  0x00007f003f2acb3e: jmp    0x00007f003f2acc84
  0x00007f003f2acb43: cmp    QWORD PTR [rdi+0x290],0x0
  0x00007f003f2acb4e: jne    0x00007f003f2acb67
  0x00007f003f2acb50: mov    QWORD PTR [rdi+0x290],rcx
  0x00007f003f2acb57: mov    QWORD PTR [rdi+0x298],0x1
  0x00007f003f2acb62: jmp    0x00007f003f2acc84
  0x00007f003f2acb67: cmp    QWORD PTR [rdi+0x2a0],0x0
  0x00007f003f2acb72: jne    0x00007f003f2acb8b
  0x00007f003f2acb74: mov    QWORD PTR [rdi+0x2a0],rcx
  0x00007f003f2acb7b: mov    QWORD PTR [rdi+0x2a8],0x1
  0x00007f003f2acb86: jmp    0x00007f003f2acc84
  0x00007f003f2acb8b: cmp    QWORD PTR [rdi+0x2b0],0x0
  0x00007f003f2acb96: jne    0x00007f003f2acbaf
  0x00007f003f2acb98: mov    QWORD PTR [rdi+0x2b0],rcx
  0x00007f003f2acb9f: mov    QWORD PTR [rdi+0x2b8],0x1
  0x00007f003f2acbaa: jmp    0x00007f003f2acc84
  0x00007f003f2acbaf: cmp    QWORD PTR [rdi+0x2c0],0x0
  0x00007f003f2acbba: jne    0x00007f003f2acbd3
  0x00007f003f2acbbc: mov    QWORD PTR [rdi+0x2c0],rcx
  0x00007f003f2acbc3: mov    QWORD PTR [rdi+0x2c8],0x1
  0x00007f003f2acbce: jmp    0x00007f003f2acc84
  0x00007f003f2acbd3: cmp    QWORD PTR [rdi+0x2d0],0x0
  0x00007f003f2acbde: jne    0x00007f003f2acbf7
  0x00007f003f2acbe0: mov    QWORD PTR [rdi+0x2d0],rcx
  0x00007f003f2acbe7: mov    QWORD PTR [rdi+0x2d8],0x1
  0x00007f003f2acbf2: jmp    0x00007f003f2acc84
  0x00007f003f2acbf7: cmp    QWORD PTR [rdi+0x2e0],0x0
  0x00007f003f2acc02: jne    0x00007f003f2acc1b
  0x00007f003f2acc04: mov    QWORD PTR [rdi+0x2e0],rcx
  0x00007f003f2acc0b: mov    QWORD PTR [rdi+0x2e8],0x1
  0x00007f003f2acc16: jmp    0x00007f003f2acc84
  0x00007f003f2acc1b: cmp    QWORD PTR [rdi+0x2f0],0x0
  0x00007f003f2acc26: jne    0x00007f003f2acc3f
  0x00007f003f2acc28: mov    QWORD PTR [rdi+0x2f0],rcx
  0x00007f003f2acc2f: mov    QWORD PTR [rdi+0x2f8],0x1
  0x00007f003f2acc3a: jmp    0x00007f003f2acc84
  0x00007f003f2acc3f: cmp    QWORD PTR [rdi+0x300],0x0
  0x00007f003f2acc4a: jne    0x00007f003f2acc63
  0x00007f003f2acc4c: mov    QWORD PTR [rdi+0x300],rcx
  0x00007f003f2acc53: mov    QWORD PTR [rdi+0x308],0x1
  0x00007f003f2acc5e: jmp    0x00007f003f2acc84
  0x00007f003f2acc63: jmp    0x00007f003f2acc84
  0x00007f003f2acc68: movabs rdi,0x7f0038a5e6a8  ;   {metadata(method data for {method} {0x00007f003896d5d0} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2acc72: sub    QWORD PTR [rdi+0x280],0x1
  0x00007f003f2acc7a: jmp    0x00007f003f2ad97d
  0x00007f003f2acc7f: jmp    0x00007f003f2acc84
  0x00007f003f2acc84: mov    rdx,rax            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@25 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00007f003f2acc87: cmp    rax,QWORD PTR [rdx]  ; implicit exception: dispatches to 0x00007f003f2ad986
  0x00007f003f2acc8a: mov    rax,rdx            ; OopMap{[152]=Oop [192]=Oop [176]=Oop [256]=Oop rax=Oop off=11661}
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00007f003f2acc8d: movabs rdx,0x7f003f2acc8d  ;   {section_word}
  0x00007f003f2acc97: call   0x00007f003f27ab60  ;   {runtime_call}
  0x00007f003f2acc9c: nop                       ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00007f003f2acc9d: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2acca4: xor    r10,r10
  0x00007f003f2acca7: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2accae: xor    r10,r10
  0x00007f003f2accb1: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2accb8: movabs rax,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2accc2: inc    DWORD PTR [rax+0x5f0]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@123 (line 533)

  0x00007f003f2accc8: movabs rax,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2accd2: mov    edx,DWORD PTR [rax+0x100]
  0x00007f003f2accd8: add    edx,0x8
  0x00007f003f2accdb: mov    DWORD PTR [rax+0x100],edx
  0x00007f003f2acce1: movabs rax,0x7f003896d4e8  ;   {metadata({method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2acceb: and    edx,0xfff8
  0x00007f003f2accf1: cmp    edx,0x0
  0x00007f003f2accf4: je     0x00007f003f2ad98b  ; OopMap{[152]=Oop [256]=Oop off=11770}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@161 (line 536)

  0x00007f003f2accfa: test   DWORD PTR [rip+0x1b115400],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2acd00: movabs rax,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2acd0a: inc    DWORD PTR [rax+0x9b0]
  0x00007f003f2acd10: mov    edx,DWORD PTR [rsp+0x94]
  0x00007f003f2acd17: mov    rsi,QWORD PTR [rsp+0x98]
  0x00007f003f2acd1f: jmp    0x00007f003f2aa078  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@161 (line 536)

  0x00007f003f2acd24: movabs rax,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2acd2e: mov    edx,DWORD PTR [rax+0x100]
  0x00007f003f2acd34: add    edx,0x8
  0x00007f003f2acd37: mov    DWORD PTR [rax+0x100],edx
  0x00007f003f2acd3d: movabs rax,0x7f003896d4e8  ;   {metadata({method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2acd47: and    edx,0xfff8
  0x00007f003f2acd4d: cmp    edx,0x0
  0x00007f003f2acd50: je     0x00007f003f2ad9a2  ; OopMap{[152]=Oop [256]=Oop off=11862}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@197 (line 542)

  0x00007f003f2acd56: test   DWORD PTR [rip+0x1b1153a4],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2acd5c: movabs rax,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2acd66: inc    DWORD PTR [rax+0xba0]
  0x00007f003f2acd6c: mov    edx,DWORD PTR [rsp+0x94]
  0x00007f003f2acd73: mov    rsi,QWORD PTR [rsp+0x98]
  0x00007f003f2acd7b: jmp    0x00007f003f2aa078  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@197 (line 542)

  0x00007f003f2acd80: movabs rax,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2acd8a: mov    edx,DWORD PTR [rax+0x100]
  0x00007f003f2acd90: add    edx,0x8
  0x00007f003f2acd93: mov    DWORD PTR [rax+0x100],edx
  0x00007f003f2acd99: movabs rax,0x7f003896d4e8  ;   {metadata({method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2acda3: and    edx,0xfff8
  0x00007f003f2acda9: cmp    edx,0x0
  0x00007f003f2acdac: je     0x00007f003f2ad9b9  ; OopMap{[152]=Oop [256]=Oop off=11954}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@82 (line 514)

  0x00007f003f2acdb2: test   DWORD PTR [rip+0x1b115348],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2acdb8: movabs rax,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2acdc2: inc    DWORD PTR [rax+0x4d0]
  0x00007f003f2acdc8: mov    edx,DWORD PTR [rsp+0x94]
  0x00007f003f2acdcf: mov    rsi,QWORD PTR [rsp+0x98]
  0x00007f003f2acdd7: jmp    0x00007f003f2aa078  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@82 (line 514)

  0x00007f003f2acddc: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2acde3: xor    r10,r10
  0x00007f003f2acde6: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2acded: xor    r10,r10
  0x00007f003f2acdf0: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2acdf7: movabs rax,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2ace01: mov    edx,DWORD PTR [rax+0x100]
  0x00007f003f2ace07: add    edx,0x8
  0x00007f003f2ace0a: mov    DWORD PTR [rax+0x100],edx
  0x00007f003f2ace10: movabs rax,0x7f003896d4e8  ;   {metadata({method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2ace1a: and    edx,0xfff8
  0x00007f003f2ace20: cmp    edx,0x0
  0x00007f003f2ace23: je     0x00007f003f2ad9d0  ; OopMap{[152]=Oop [256]=Oop off=12073}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@115 (line 528)

  0x00007f003f2ace29: test   DWORD PTR [rip+0x1b1152d1],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2ace2f: movabs rax,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2ace39: inc    DWORD PTR [rax+0x5d8]
  0x00007f003f2ace3f: mov    edx,DWORD PTR [rsp+0x94]
  0x00007f003f2ace46: mov    rsi,QWORD PTR [rsp+0x98]
  0x00007f003f2ace4e: jmp    0x00007f003f2aa078  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@115 (line 528)

  0x00007f003f2ace53: movabs rax,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2ace5d: inc    DWORD PTR [rax+0xbb8]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@203 (line 543)

  0x00007f003f2ace63: mov    edx,DWORD PTR [rsp+0x94]
  0x00007f003f2ace6a: mov    rax,rbx
  0x00007f003f2ace6d: movabs rsi,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2ace77: add    QWORD PTR [rsi+0xe60],0x1
  0x00007f003f2ace7f: movabs rax,0x7f0038a60a80  ;   {metadata(method data for {method} {0x00007f0038850908} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2ace89: mov    esi,DWORD PTR [rax+0xfc]
  0x00007f003f2ace8f: add    esi,0x8
  0x00007f003f2ace92: mov    DWORD PTR [rax+0xfc],esi
  0x00007f003f2ace98: movabs rax,0x7f0038850908  ;   {metadata({method} {0x00007f0038850908} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2acea2: and    esi,0x7ffff8
  0x00007f003f2acea8: cmp    esi,0x0
  0x00007f003f2aceab: je     0x00007f003f2ad9e7
  0x00007f003f2aceb1: mov    rax,rbx
  0x00007f003f2aceb4: movabs rsi,0x7f0038a60a80  ;   {metadata(method data for {method} {0x00007f0038850908} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2acebe: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2acec6: movabs rax,0x7f0038a60ca0  ;   {metadata(method data for {method} {0x00007f00388513c8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2aced0: mov    esi,DWORD PTR [rax+0xfc]
  0x00007f003f2aced6: add    esi,0x8
  0x00007f003f2aced9: mov    DWORD PTR [rax+0xfc],esi
  0x00007f003f2acedf: movabs rax,0x7f00388513c8  ;   {metadata({method} {0x00007f00388513c8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2acee9: and    esi,0x7ffff8
  0x00007f003f2aceef: cmp    esi,0x0
  0x00007f003f2acef2: je     0x00007f003f2ad9fe
  0x00007f003f2acef8: cmp    edx,edi
  0x00007f003f2acefa: movabs rax,0x7f0038a60ca0  ;   {metadata(method data for {method} {0x00007f00388513c8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2acf04: movabs rsi,0x130
  0x00007f003f2acf0e: jl     0x00007f003f2acf1e
  0x00007f003f2acf14: movabs rsi,0x140
  0x00007f003f2acf1e: mov    rdi,QWORD PTR [rax+rsi*1]
  0x00007f003f2acf22: lea    rdi,[rdi+0x1]
  0x00007f003f2acf26: mov    QWORD PTR [rax+rsi*1],rdi
  0x00007f003f2acf2a: jge    0x00007f003f2ad2f6  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@5 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)

  0x00007f003f2acf30: mov    rax,rbx
  0x00007f003f2acf33: movabs rsi,0x7f0038a60a80  ;   {metadata(method data for {method} {0x00007f0038850908} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2acf3d: movabs r10,0x7c0016f60    ;   {metadata(&apos;java/util/ArrayList&apos;)}
  0x00007f003f2acf47: mov    QWORD PTR [rsi+0x150],r10
  0x00007f003f2acf4e: add    QWORD PTR [rsi+0x158],0x1
  0x00007f003f2acf56: movabs rax,0x7f0038a612c8  ;   {metadata(method data for {method} {0x00007f0038850850} &apos;elementData&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2acf60: mov    esi,DWORD PTR [rax+0xfc]
  0x00007f003f2acf66: add    esi,0x8
  0x00007f003f2acf69: mov    DWORD PTR [rax+0xfc],esi
  0x00007f003f2acf6f: movabs rax,0x7f0038850850  ;   {metadata({method} {0x00007f0038850850} &apos;elementData&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2acf79: and    esi,0x7ffff8
  0x00007f003f2acf7f: cmp    esi,0x0
  0x00007f003f2acf82: je     0x00007f003f2ada15
  0x00007f003f2acf88: mov    eax,DWORD PTR [rbx+0x14]
  0x00007f003f2acf8b: shl    rax,0x3            ;*getfield elementData {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::elementData@1 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)

  0x00007f003f2acf8f: movsxd rsi,edx
  0x00007f003f2acf92: cmp    edx,DWORD PTR [rax+0xc]  ; implicit exception: dispatches to 0x00007f003f2ada2c
  0x00007f003f2acf95: jae    0x00007f003f2ada36
  0x00007f003f2acf9b: mov    eax,DWORD PTR [rax+rsi*4+0x10]
  0x00007f003f2acf9f: shl    rax,0x3            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)

  0x00007f003f2acfa3: cmp    rax,0x0
  0x00007f003f2acfa7: jne    0x00007f003f2acfc2
  0x00007f003f2acfa9: movabs rsi,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2acfb3: or     DWORD PTR [rsi+0xed8],0x100
  0x00007f003f2acfbd: jmp    0x00007f003f2ad1df
  0x00007f003f2acfc2: movabs rdi,0x7c003ab78    ;   {metadata(&apos;sun/misc/URLClassPath$Loader&apos;)}
  0x00007f003f2acfcc: mov    esi,DWORD PTR [rax+0x8]
  0x00007f003f2acfcf: shl    rsi,0x3
  0x00007f003f2acfd3: cmp    rdi,QWORD PTR [rsi+0x30]
  0x00007f003f2acfd7: jne    0x00007f003f2ad1c3
  0x00007f003f2acfdd: movabs rsi,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2acfe7: mov    edi,DWORD PTR [rax+0x8]
  0x00007f003f2acfea: shl    rdi,0x3
  0x00007f003f2acfee: cmp    rdi,QWORD PTR [rsi+0xef0]
  0x00007f003f2acff5: jne    0x00007f003f2ad004
  0x00007f003f2acff7: add    QWORD PTR [rsi+0xef8],0x1
  0x00007f003f2acfff: jmp    0x00007f003f2ad1df
  0x00007f003f2ad004: cmp    rdi,QWORD PTR [rsi+0xf00]
  0x00007f003f2ad00b: jne    0x00007f003f2ad01a
  0x00007f003f2ad00d: add    QWORD PTR [rsi+0xf08],0x1
  0x00007f003f2ad015: jmp    0x00007f003f2ad1df
  0x00007f003f2ad01a: cmp    rdi,QWORD PTR [rsi+0xf10]
  0x00007f003f2ad021: jne    0x00007f003f2ad030
  0x00007f003f2ad023: add    QWORD PTR [rsi+0xf18],0x1
  0x00007f003f2ad02b: jmp    0x00007f003f2ad1df
  0x00007f003f2ad030: cmp    rdi,QWORD PTR [rsi+0xf20]
  0x00007f003f2ad037: jne    0x00007f003f2ad046
  0x00007f003f2ad039: add    QWORD PTR [rsi+0xf28],0x1
  0x00007f003f2ad041: jmp    0x00007f003f2ad1df
  0x00007f003f2ad046: cmp    rdi,QWORD PTR [rsi+0xf30]
  0x00007f003f2ad04d: jne    0x00007f003f2ad05c
  0x00007f003f2ad04f: add    QWORD PTR [rsi+0xf38],0x1
  0x00007f003f2ad057: jmp    0x00007f003f2ad1df
  0x00007f003f2ad05c: cmp    rdi,QWORD PTR [rsi+0xf40]
  0x00007f003f2ad063: jne    0x00007f003f2ad072
  0x00007f003f2ad065: add    QWORD PTR [rsi+0xf48],0x1
  0x00007f003f2ad06d: jmp    0x00007f003f2ad1df
  0x00007f003f2ad072: cmp    rdi,QWORD PTR [rsi+0xf50]
  0x00007f003f2ad079: jne    0x00007f003f2ad088
  0x00007f003f2ad07b: add    QWORD PTR [rsi+0xf58],0x1
  0x00007f003f2ad083: jmp    0x00007f003f2ad1df
  0x00007f003f2ad088: cmp    rdi,QWORD PTR [rsi+0xf60]
  0x00007f003f2ad08f: jne    0x00007f003f2ad09e
  0x00007f003f2ad091: add    QWORD PTR [rsi+0xf68],0x1
  0x00007f003f2ad099: jmp    0x00007f003f2ad1df
  0x00007f003f2ad09e: cmp    QWORD PTR [rsi+0xef0],0x0
  0x00007f003f2ad0a9: jne    0x00007f003f2ad0c2
  0x00007f003f2ad0ab: mov    QWORD PTR [rsi+0xef0],rdi
  0x00007f003f2ad0b2: mov    QWORD PTR [rsi+0xef8],0x1
  0x00007f003f2ad0bd: jmp    0x00007f003f2ad1df
  0x00007f003f2ad0c2: cmp    QWORD PTR [rsi+0xf00],0x0
  0x00007f003f2ad0cd: jne    0x00007f003f2ad0e6
  0x00007f003f2ad0cf: mov    QWORD PTR [rsi+0xf00],rdi
  0x00007f003f2ad0d6: mov    QWORD PTR [rsi+0xf08],0x1
  0x00007f003f2ad0e1: jmp    0x00007f003f2ad1df
  0x00007f003f2ad0e6: cmp    QWORD PTR [rsi+0xf10],0x0
  0x00007f003f2ad0f1: jne    0x00007f003f2ad10a
  0x00007f003f2ad0f3: mov    QWORD PTR [rsi+0xf10],rdi
  0x00007f003f2ad0fa: mov    QWORD PTR [rsi+0xf18],0x1
  0x00007f003f2ad105: jmp    0x00007f003f2ad1df
  0x00007f003f2ad10a: cmp    QWORD PTR [rsi+0xf20],0x0
  0x00007f003f2ad115: jne    0x00007f003f2ad12e
  0x00007f003f2ad117: mov    QWORD PTR [rsi+0xf20],rdi
  0x00007f003f2ad11e: mov    QWORD PTR [rsi+0xf28],0x1
  0x00007f003f2ad129: jmp    0x00007f003f2ad1df
  0x00007f003f2ad12e: cmp    QWORD PTR [rsi+0xf30],0x0
  0x00007f003f2ad139: jne    0x00007f003f2ad152
  0x00007f003f2ad13b: mov    QWORD PTR [rsi+0xf30],rdi
  0x00007f003f2ad142: mov    QWORD PTR [rsi+0xf38],0x1
  0x00007f003f2ad14d: jmp    0x00007f003f2ad1df
  0x00007f003f2ad152: cmp    QWORD PTR [rsi+0xf40],0x0
  0x00007f003f2ad15d: jne    0x00007f003f2ad176
  0x00007f003f2ad15f: mov    QWORD PTR [rsi+0xf40],rdi
  0x00007f003f2ad166: mov    QWORD PTR [rsi+0xf48],0x1
  0x00007f003f2ad171: jmp    0x00007f003f2ad1df
  0x00007f003f2ad176: cmp    QWORD PTR [rsi+0xf50],0x0
  0x00007f003f2ad181: jne    0x00007f003f2ad19a
  0x00007f003f2ad183: mov    QWORD PTR [rsi+0xf50],rdi
  0x00007f003f2ad18a: mov    QWORD PTR [rsi+0xf58],0x1
  0x00007f003f2ad195: jmp    0x00007f003f2ad1df
  0x00007f003f2ad19a: cmp    QWORD PTR [rsi+0xf60],0x0
  0x00007f003f2ad1a5: jne    0x00007f003f2ad1be
  0x00007f003f2ad1a7: mov    QWORD PTR [rsi+0xf60],rdi
  0x00007f003f2ad1ae: mov    QWORD PTR [rsi+0xf68],0x1
  0x00007f003f2ad1b9: jmp    0x00007f003f2ad1df
  0x00007f003f2ad1be: jmp    0x00007f003f2ad1df
  0x00007f003f2ad1c3: movabs rsi,0x7f0038a5a658  ;   {metadata(method data for {method} {0x00007f003896d4e8} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2ad1cd: sub    QWORD PTR [rsi+0xee0],0x1
  0x00007f003f2ad1d5: jmp    0x00007f003f2ada3f
  0x00007f003f2ad1da: jmp    0x00007f003f2ad1df
  0x00007f003f2ad1df: mov    rdx,rax            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@239 (line 546)

  0x00007f003f2ad1e2: lea    rax,[rsp+0xf8]
  0x00007f003f2ad1ea: mov    rdi,QWORD PTR [rax+0x8]
  0x00007f003f2ad1ee: mov    rsi,QWORD PTR [rdi]
  0x00007f003f2ad1f1: and    rsi,0x7
  0x00007f003f2ad1f5: cmp    rsi,0x5
  0x00007f003f2ad1f9: je     0x00007f003f2ad216
  0x00007f003f2ad1ff: mov    rsi,QWORD PTR [rax]
  0x00007f003f2ad202: test   rsi,rsi
  0x00007f003f2ad205: je     0x00007f003f2ad216
  0x00007f003f2ad20b: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2ad210: jne    0x00007f003f2ada48
  0x00007f003f2ad216: mov    rax,rdx
  0x00007f003f2ad219: add    rsp,0x150
  0x00007f003f2ad220: pop    rbp
  0x00007f003f2ad221: test   DWORD PTR [rip+0x1b114ed9],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2ad227: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@242 (line 546)

  0x00007f003f2ad228: lea    rax,[rsp+0x108]
  0x00007f003f2ad230: mov    rsi,QWORD PTR [rax+0x8]
  0x00007f003f2ad234: mov    rdx,QWORD PTR [rsi]
  0x00007f003f2ad237: and    rdx,0x7
  0x00007f003f2ad23b: cmp    rdx,0x5
  0x00007f003f2ad23f: je     0x00007f003f2ad25c
  0x00007f003f2ad245: mov    rdx,QWORD PTR [rax]
  0x00007f003f2ad248: test   rdx,rdx
  0x00007f003f2ad24b: je     0x00007f003f2ad25c
  0x00007f003f2ad251: lock cmpxchg QWORD PTR [rsi],rdx
  0x00007f003f2ad256: jne    0x00007f003f2ada5e  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@41 (line 504)

  0x00007f003f2ad25c: lea    rax,[rsp+0xf8]
  0x00007f003f2ad264: mov    rsi,QWORD PTR [rax+0x8]
  0x00007f003f2ad268: mov    rdx,QWORD PTR [rsi]
  0x00007f003f2ad26b: and    rdx,0x7
  0x00007f003f2ad26f: cmp    rdx,0x5
  0x00007f003f2ad273: je     0x00007f003f2ad290
  0x00007f003f2ad279: mov    rdx,QWORD PTR [rax]
  0x00007f003f2ad27c: test   rdx,rdx
  0x00007f003f2ad27f: je     0x00007f003f2ad290
  0x00007f003f2ad285: lock cmpxchg QWORD PTR [rsi],rdx
  0x00007f003f2ad28a: jne    0x00007f003f2ada74
  0x00007f003f2ad290: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f2ad29a: add    rsp,0x150
  0x00007f003f2ad2a1: pop    rbp
  0x00007f003f2ad2a2: test   DWORD PTR [rip+0x1b114e58],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2ad2a8: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@42 (line 504)

  0x00007f003f2ad2a9: lea    rax,[rsp+0xf8]
  0x00007f003f2ad2b1: mov    rsi,QWORD PTR [rax+0x8]
  0x00007f003f2ad2b5: mov    rdx,QWORD PTR [rsi]
  0x00007f003f2ad2b8: and    rdx,0x7
  0x00007f003f2ad2bc: cmp    rdx,0x5
  0x00007f003f2ad2c0: je     0x00007f003f2ad2dd
  0x00007f003f2ad2c6: mov    rdx,QWORD PTR [rax]
  0x00007f003f2ad2c9: test   rdx,rdx
  0x00007f003f2ad2cc: je     0x00007f003f2ad2dd
  0x00007f003f2ad2d2: lock cmpxchg QWORD PTR [rsi],rdx
  0x00007f003f2ad2d7: jne    0x00007f003f2ada8a
  0x00007f003f2ad2dd: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f2ad2e7: add    rsp,0x150
  0x00007f003f2ad2ee: pop    rbp
  0x00007f003f2ad2ef: test   DWORD PTR [rip+0x1b114e0b],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2ad2f5: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@8 (line 495)

  0x00007f003f2ad2f6: mov    r8,rdx
  0x00007f003f2ad2f9: nop    DWORD PTR [rax+0x0]
  0x00007f003f2ad300: jmp    0x00007f003f2adaaf  ;   {no_reloc}
  0x00007f003f2ad305: add    BYTE PTR [rax],al
  0x00007f003f2ad307: add    BYTE PTR [rax],al
  0x00007f003f2ad309: add    BYTE PTR [rax+0x162ba],al
  0x00007f003f2ad30f: add    BYTE PTR [rdi+rcx*1],al
  0x00007f003f2ad312: test   DWORD PTR [rdi+0x49000007],esp
  0x00007f003f2ad318: mov    eax,DWORD PTR [rdi+0x60]
  0x00007f003f2ad31b: lea    rdi,[rax+0x20]
  0x00007f003f2ad31f: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2ad323: ja     0x00007f003f2adabe
  0x00007f003f2ad329: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2ad32d: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2ad334: mov    QWORD PTR [rax],rcx
  0x00007f003f2ad337: mov    rcx,rdx
  0x00007f003f2ad33a: shr    rcx,0x3
  0x00007f003f2ad33e: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2ad341: xor    rcx,rcx
  0x00007f003f2ad344: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2ad347: xor    rcx,rcx
  0x00007f003f2ad34a: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f2ad34e: mov    QWORD PTR [rax+0x18],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)

  0x00007f003f2ad352: mov    rdx,rbx
  0x00007f003f2ad355: movabs rsi,0x7f0038a60ca0  ;   {metadata(method data for {method} {0x00007f00388513c8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2ad35f: add    QWORD PTR [rsi+0x150],0x1
  0x00007f003f2ad367: mov    rdx,r8
  0x00007f003f2ad36a: mov    rsi,rbx            ;*invokespecial outOfBoundsMsg {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)

  0x00007f003f2ad36d: mov    QWORD PTR [rsp+0xe8],rbx
  0x00007f003f2ad375: mov    QWORD PTR [rsp+0xe0],rax
  0x00007f003f2ad37d: nop
  0x00007f003f2ad37e: nop
  0x00007f003f2ad37f: call   0x00007f003f1c4d60  ; OopMap{[224]=Oop [232]=Oop [256]=Oop off=13444}
                                                ;*invokespecial outOfBoundsMsg {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {optimized virtual_call}
  0x00007f003f2ad384: mov    rdx,QWORD PTR [rsp+0xe0]
  0x00007f003f2ad38c: movabs rsi,0x7f0038a60ca0  ;   {metadata(method data for {method} {0x00007f00388513c8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2ad396: add    QWORD PTR [rsi+0x160],0x1
  0x00007f003f2ad39e: mov    rdx,rax
  0x00007f003f2ad3a1: mov    rsi,QWORD PTR [rsp+0xe0]  ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@17 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)

  0x00007f003f2ad3a9: nop
  0x00007f003f2ad3aa: nop
  0x00007f003f2ad3ab: nop
  0x00007f003f2ad3ac: nop
  0x00007f003f2ad3ad: nop
  0x00007f003f2ad3ae: nop
  0x00007f003f2ad3af: call   0x00007f003f1c4d60  ; OopMap{[224]=Oop [232]=Oop [256]=Oop off=13492}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@17 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {optimized virtual_call}
  0x00007f003f2ad3b4: mov    rax,QWORD PTR [rsp+0xe0]
  0x00007f003f2ad3bc: jmp    0x00007f003f2adbe8  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@20 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)

  0x00007f003f2ad3c1: mov    QWORD PTR [rsp+0x88],rbx
  0x00007f003f2ad3c9: mov    QWORD PTR [rsp+0xa0],rdi
  0x00007f003f2ad3d1: nop    DWORD PTR [rax+0x0]
  0x00007f003f2ad3d8: jmp    0x00007f003f2adada  ;   {no_reloc}
  0x00007f003f2ad3dd: add    BYTE PTR [rax],al
  0x00007f003f2ad3df: add    BYTE PTR [rax],al
  0x00007f003f2ad3e1: add    cl,ch
  0x00007f003f2ad3e3: std    
  0x00007f003f2ad3e4: (bad)  
  0x00007f003f2ad3e5: add    BYTE PTR [rax],al  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@9 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2ad3e7: mov    rsi,rax
  0x00007f003f2ad3ea: movabs rdi,0x7f0038a5c708  ;   {metadata(method data for {method} {0x00007f00388492b0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00007f003f2ad3f4: add    QWORD PTR [rdi+0x1e8],0x1
  0x00007f003f2ad3fc: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@13 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2ad3ff: mov    QWORD PTR [rsp+0xf0],rax
  0x00007f003f2ad407: call   0x00007f003f1c4d60  ; OopMap{[136]=Oop [160]=Oop [152]=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=13580}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@13 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {optimized virtual_call}
  0x00007f003f2ad40c: mov    rax,QWORD PTR [rsp+0xf0]  ; OopMap{[136]=Oop [160]=Oop [152]=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop rax=Oop off=13588}
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@16 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2ad414: movabs rdx,0x7f003f2ad414  ;   {section_word}
  0x00007f003f2ad41e: call   0x00007f003f27ab60  ;   {runtime_call}
  0x00007f003f2ad423: nop                       ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@16 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2ad424: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2ad42b: xor    r10,r10
  0x00007f003f2ad42e: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2ad435: xor    r10,r10
  0x00007f003f2ad438: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2ad43f: mov    rdx,rax
  0x00007f003f2ad442: lea    rax,[rsp+0x138]
  0x00007f003f2ad44a: mov    rdi,QWORD PTR [rax+0x8]
  0x00007f003f2ad44e: mov    rsi,QWORD PTR [rdi]
  0x00007f003f2ad451: and    rsi,0x7
  0x00007f003f2ad455: cmp    rsi,0x5
  0x00007f003f2ad459: je     0x00007f003f2ad476
  0x00007f003f2ad45f: mov    rsi,QWORD PTR [rax]
  0x00007f003f2ad462: test   rsi,rsi
  0x00007f003f2ad465: je     0x00007f003f2ad476
  0x00007f003f2ad46b: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2ad470: jne    0x00007f003f2adaf1  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2ad476: mov    rax,rdx            ; OopMap{[136]=Oop [160]=Oop [152]=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop rax=Oop off=13689}
                                                ;*invokevirtual size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2ad479: movabs rdx,0x7f003f2ad479  ;   {section_word}
  0x00007f003f2ad483: call   0x00007f003f27ab60  ;   {runtime_call}
  0x00007f003f2ad488: nop                       ;*invokevirtual size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2ad489: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2ad490: xor    r10,r10
  0x00007f003f2ad493: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2ad49a: xor    r10,r10
  0x00007f003f2ad49d: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2ad4a4: mov    rdx,rax
  0x00007f003f2ad4a7: lea    rax,[rsp+0x128]
  0x00007f003f2ad4af: mov    rdi,QWORD PTR [rax+0x8]
  0x00007f003f2ad4b3: mov    rsi,QWORD PTR [rdi]
  0x00007f003f2ad4b6: and    rsi,0x7
  0x00007f003f2ad4ba: cmp    rsi,0x5
  0x00007f003f2ad4be: je     0x00007f003f2ad4db
  0x00007f003f2ad4c4: mov    rsi,QWORD PTR [rax]
  0x00007f003f2ad4c7: test   rsi,rsi
  0x00007f003f2ad4ca: je     0x00007f003f2ad4db
  0x00007f003f2ad4d0: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2ad4d5: jne    0x00007f003f2adb07  ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2ad4db: mov    rax,rdx            ; OopMap{[136]=Oop [160]=Oop [152]=Oop [256]=Oop [272]=Oop [288]=Oop rax=Oop off=13790}
                                                ;*invokevirtual peek {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2ad4de: movabs rdx,0x7f003f2ad4de  ;   {section_word}
  0x00007f003f2ad4e8: call   0x00007f003f27ab60  ;   {runtime_call}
  0x00007f003f2ad4ed: nop                       ;*invokevirtual peek {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2ad4ee: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2ad4f5: xor    r10,r10
  0x00007f003f2ad4f8: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2ad4ff: xor    r10,r10
  0x00007f003f2ad502: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2ad509: mov    rdx,rax
  0x00007f003f2ad50c: lea    rax,[rsp+0x128]
  0x00007f003f2ad514: mov    rdi,QWORD PTR [rax+0x8]
  0x00007f003f2ad518: mov    rsi,QWORD PTR [rdi]
  0x00007f003f2ad51b: and    rsi,0x7
  0x00007f003f2ad51f: cmp    rsi,0x5
  0x00007f003f2ad523: je     0x00007f003f2ad540
  0x00007f003f2ad529: mov    rsi,QWORD PTR [rax]
  0x00007f003f2ad52c: test   rsi,rsi
  0x00007f003f2ad52f: je     0x00007f003f2ad540
  0x00007f003f2ad535: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2ad53a: jne    0x00007f003f2adb1d  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2ad540: mov    rax,rdx            ; OopMap{[160]=Oop [152]=Oop rbx=Oop [256]=Oop [272]=Oop [288]=Oop rax=Oop off=13891}
                                                ;*invokevirtual size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2ad543: movabs rdx,0x7f003f2ad543  ;   {section_word}
  0x00007f003f2ad54d: call   0x00007f003f27ab60  ;   {runtime_call}
  0x00007f003f2ad552: nop                       ;*invokevirtual size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2ad553: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2ad55a: xor    r10,r10
  0x00007f003f2ad55d: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2ad564: xor    r10,r10
  0x00007f003f2ad567: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2ad56e: mov    rdx,rax
  0x00007f003f2ad571: lea    rax,[rsp+0x118]
  0x00007f003f2ad579: mov    rdi,QWORD PTR [rax+0x8]
  0x00007f003f2ad57d: mov    rsi,QWORD PTR [rdi]
  0x00007f003f2ad580: and    rsi,0x7
  0x00007f003f2ad584: cmp    rsi,0x5
  0x00007f003f2ad588: je     0x00007f003f2ad5a5
  0x00007f003f2ad58e: mov    rsi,QWORD PTR [rax]
  0x00007f003f2ad591: test   rsi,rsi
  0x00007f003f2ad594: je     0x00007f003f2ad5a5
  0x00007f003f2ad59a: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2ad59f: jne    0x00007f003f2adb33  ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2ad5a5: mov    rax,rdx            ; OopMap{[160]=Oop [152]=Oop [256]=Oop [272]=Oop rax=Oop off=13992}
                                                ;*invokevirtual pop {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2ad5a8: movabs rdx,0x7f003f2ad5a8  ;   {section_word}
  0x00007f003f2ad5b2: call   0x00007f003f27ab60  ;   {runtime_call}
  0x00007f003f2ad5b7: nop                       ;*invokevirtual pop {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00007f003f2ad5b8: mov    esi,DWORD PTR [rsp+0x94]
  0x00007f003f2ad5bf: mov    rdi,QWORD PTR [rsp+0x98]
  0x00007f003f2ad5c7: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2ad5ce: xor    r10,r10
  0x00007f003f2ad5d1: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2ad5d8: xor    r10,r10
  0x00007f003f2ad5db: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2ad5e2: mov    rdx,rax
  0x00007f003f2ad5e5: lea    rax,[rsp+0x118]
  0x00007f003f2ad5ed: mov    r8,QWORD PTR [rax+0x8]
  0x00007f003f2ad5f1: mov    rcx,QWORD PTR [r8]
  0x00007f003f2ad5f4: and    rcx,0x7
  0x00007f003f2ad5f8: cmp    rcx,0x5
  0x00007f003f2ad5fc: je     0x00007f003f2ad619
  0x00007f003f2ad602: mov    rcx,QWORD PTR [rax]
  0x00007f003f2ad605: test   rcx,rcx
  0x00007f003f2ad608: je     0x00007f003f2ad619
  0x00007f003f2ad60e: lock cmpxchg QWORD PTR [r8],rcx
  0x00007f003f2ad613: jne    0x00007f003f2adb49  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00007f003f2ad619: mov    rax,rdx            ; OopMap{rbx=Oop rdi=Oop [152]=Oop [256]=Oop [272]=Oop rax=Oop off=14108}
                                                ;*invokevirtual size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00007f003f2ad61c: movabs rdx,0x7f003f2ad61c  ;   {section_word}
  0x00007f003f2ad626: call   0x00007f003f27ab60  ;   {runtime_call}
  0x00007f003f2ad62b: nop                       ;*invokevirtual size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00007f003f2ad62c: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2ad633: xor    r10,r10
  0x00007f003f2ad636: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2ad63d: xor    r10,r10
  0x00007f003f2ad640: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2ad647: mov    rsi,rax
  0x00007f003f2ad64a: lea    rax,[rsp+0x108]
  0x00007f003f2ad652: mov    rbx,QWORD PTR [rax+0x8]
  0x00007f003f2ad656: mov    rdi,QWORD PTR [rbx]
  0x00007f003f2ad659: and    rdi,0x7
  0x00007f003f2ad65d: cmp    rdi,0x5
  0x00007f003f2ad661: je     0x00007f003f2ad67e
  0x00007f003f2ad667: mov    rdi,QWORD PTR [rax]
  0x00007f003f2ad66a: test   rdi,rdi
  0x00007f003f2ad66d: je     0x00007f003f2ad67e
  0x00007f003f2ad673: lock cmpxchg QWORD PTR [rbx],rdi
  0x00007f003f2ad678: jne    0x00007f003f2adb5f  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@62 (line 508)

  0x00007f003f2ad67e: mov    rax,rsi
  0x00007f003f2ad681: jmp    0x00007f003f2adbe8
  0x00007f003f2ad686: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2ad68b: mov    QWORD PTR [rsp],rdi
  0x00007f003f2ad68f: call   0x00007f003f27ba60  ; OopMap{rsi=Oop [152]=Oop [256]=Oop off=14228}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getLoader@-1 (line 494)
                                                ;   {runtime_call}
  0x00007f003f2ad694: jmp    0x00007f003f2aa007
  0x00007f003f2ad699: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2ad69e: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2ad6a6: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [152]=Oop [256]=Oop off=14251}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getLoader@-1 (line 494)
                                                ;   {runtime_call}
  0x00007f003f2ad6ab: jmp    0x00007f003f2aa039
  0x00007f003f2ad6b0: call   0x00007f003f279000  ; OopMap{rsi=Oop [152]=Oop rbx=Oop [256]=Oop off=14261}
                                                ;*invokevirtual size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 499)
                                                ;   {runtime_call}
  0x00007f003f2ad6b5: call   0x00007f003f279000  ; OopMap{rsi=Oop [152]=Oop rdi=Oop [256]=Oop off=14266}
                                                ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 502)
                                                ;   {runtime_call}
  0x00007f003f2ad6ba: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2ad6bf: mov    QWORD PTR [rsp],rbx
  0x00007f003f2ad6c3: call   0x00007f003f27ba60  ; OopMap{rsi=Oop [152]=Oop rdi=Oop [256]=Oop [272]=Oop off=14280}
                                                ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 502)
                                                ;   {runtime_call}
  0x00007f003f2ad6c8: jmp    0x00007f003f2aa1a7
  0x00007f003f2ad6cd: call   0x00007f003f279000  ; OopMap{rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop [272]=Oop off=14290}
                                                ;*invokevirtual empty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)
                                                ;   {runtime_call}
  0x00007f003f2ad6d2: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2ad6d7: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2ad6df: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop [272]=Oop off=14308}
                                                ;*synchronization entry
                                                ; - java.util.Stack::empty@-1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)
                                                ;   {runtime_call}
  0x00007f003f2ad6e4: jmp    0x00007f003f2aa1f8
  0x00007f003f2ad6e9: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2ad6ee: mov    QWORD PTR [rsp],rcx
  0x00007f003f2ad6f2: call   0x00007f003f27ba60  ; OopMap{rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop [272]=Oop [288]=Oop off=14327}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)
                                                ;   {runtime_call}
  0x00007f003f2ad6f7: jmp    0x00007f003f2aa4b0
  0x00007f003f2ad6fc: lea    rax,[rsp+0x118]
  0x00007f003f2ad704: mov    QWORD PTR [rsp],rax
  0x00007f003f2ad708: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2ad70d: jmp    0x00007f003f2aa4e7
  0x00007f003f2ad712: call   0x00007f003f279000  ; OopMap{rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop [272]=Oop off=14359}
                                                ;*invokevirtual pop {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00007f003f2ad717: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2ad71c: mov    QWORD PTR [rsp],rcx
  0x00007f003f2ad720: call   0x00007f003f27ba60  ; OopMap{rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop [272]=Oop [288]=Oop off=14373}
                                                ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00007f003f2ad725: jmp    0x00007f003f2aa677
  0x00007f003f2ad72a: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2ad72f: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2ad737: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop [272]=Oop [288]=Oop off=14396}
                                                ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00007f003f2ad73c: jmp    0x00007f003f2aa6a9
  0x00007f003f2ad741: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2ad746: mov    QWORD PTR [rsp],rcx
  0x00007f003f2ad74a: call   0x00007f003f27ba60  ; OopMap{rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=14415}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00007f003f2ad74f: jmp    0x00007f003f2aa961
  0x00007f003f2ad754: lea    rax,[rsp+0x128]
  0x00007f003f2ad75c: mov    QWORD PTR [rsp],rax
  0x00007f003f2ad760: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2ad765: jmp    0x00007f003f2aa998
  0x00007f003f2ad76a: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2ad76f: mov    QWORD PTR [rsp],r8
  0x00007f003f2ad773: call   0x00007f003f27ba60  ; OopMap{rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=14456}
                                                ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00007f003f2ad778: jmp    0x00007f003f2aaa8a
  0x00007f003f2ad77d: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2ad782: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2ad78a: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=14479}
                                                ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00007f003f2ad78f: jmp    0x00007f003f2aaac1
  0x00007f003f2ad794: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2ad799: mov    QWORD PTR [rsp],r8
  0x00007f003f2ad79d: call   0x00007f003f27ba60  ; OopMap{rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop [320]=Oop off=14498}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00007f003f2ad7a2: jmp    0x00007f003f2aad79
  0x00007f003f2ad7a7: lea    rax,[rsp+0x138]
  0x00007f003f2ad7af: mov    QWORD PTR [rsp],rax
  0x00007f003f2ad7b3: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2ad7b8: jmp    0x00007f003f2aadb1
  0x00007f003f2ad7bd: lea    rax,[rsp+0x128]
  0x00007f003f2ad7c5: mov    QWORD PTR [rsp],rax
  0x00007f003f2ad7c9: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2ad7ce: jmp    0x00007f003f2ab038
  0x00007f003f2ad7d3: lea    rax,[rsp+0x118]
  0x00007f003f2ad7db: mov    QWORD PTR [rsp],rax
  0x00007f003f2ad7df: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2ad7e4: jmp    0x00007f003f2ab278
  0x00007f003f2ad7e9: mov    QWORD PTR [rsp],rax
  0x00007f003f2ad7ed: call   0x00007f003f27b2c0  ; OopMap{[152]=Oop [160]=Oop [256]=Oop [272]=Oop off=14578}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@50 (line 506)
                                                ;   {runtime_call}
  0x00007f003f2ad7f2: lea    rax,[rsp+0x108]
  0x00007f003f2ad7fa: mov    QWORD PTR [rsp],rax
  0x00007f003f2ad7fe: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2ad803: jmp    0x00007f003f2ab4fa
  0x00007f003f2ad808: call   0x00007f003f279000  ; OopMap{[176]=Oop rax=Oop [192]=Oop rsi=Oop [152]=Oop rdi=Oop [256]=Oop off=14605}
                                                ;*invokevirtual containsKey {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)
                                                ;   {runtime_call}
  0x00007f003f2ad80d: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2ad812: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2ad81a: call   0x00007f003f27d5e0  ; OopMap{[176]=Oop rax=Oop [192]=Oop rsi=Oop [152]=Oop rdi=Oop [256]=Oop off=14623}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::containsKey@-1 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)
                                                ;   {runtime_call}
  0x00007f003f2ad81f: jmp    0x00007f003f2ab75c
  0x00007f003f2ad824: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2ad829: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2ad831: call   0x00007f003f27d5e0  ; OopMap{[176]=Oop rax=Oop [192]=Oop rsi=Oop [152]=Oop rdi=Oop [256]=Oop off=14646}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ; - java.util.HashMap::containsKey@2 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)
                                                ;   {runtime_call}
  0x00007f003f2ad836: jmp    0x00007f003f2ab7a0
  0x00007f003f2ad83b: call   0x00007f003f279000  ; OopMap{[176]=Oop rax=Oop [192]=Oop [184]=Oop [152]=Oop [256]=Oop off=14656}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::containsKey@2 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)
                                                ;   {runtime_call}
  0x00007f003f2ad840: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2ad845: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2ad84d: call   0x00007f003f27d5e0  ; OopMap{[192]=Oop rsi=Oop [152]=Oop rdi=Oop [176]=Oop [256]=Oop off=14674}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getLoader@-1 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00007f003f2ad852: jmp    0x00007f003f2ab950
  0x00007f003f2ad857: mov    rdx,rdx
  0x00007f003f2ad85a: call   0x00007f003f279760  ; OopMap{[192]=Oop r8=Oop [176]=Oop rbx=Oop [152]=Oop [256]=Oop off=14687}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@0 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00007f003f2ad85f: jmp    0x00007f003f2ab997
  0x00007f003f2ad864: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2ad869: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2ad871: call   0x00007f003f27d5e0  ; OopMap{[192]=Oop r8=Oop [176]=Oop rbx=Oop [152]=Oop rax=Oop [256]=Oop off=14710}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@-1 (line 555)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00007f003f2ad876: jmp    0x00007f003f2ab9de
  0x00007f003f2ad87b: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2ad880: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2ad888: call   0x00007f003f27d5e0  ; OopMap{[192]=Oop r8=Oop [176]=Oop rbx=Oop [152]=Oop rax=Oop [256]=Oop off=14733}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@11 (line 555)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00007f003f2ad88d: jmp    0x00007f003f2aba5b
  0x00007f003f2ad892: mov    QWORD PTR [rsp],rax
  0x00007f003f2ad896: call   0x00007f003f27b2c0  ; OopMap{[192]=Oop [176]=Oop [152]=Oop [256]=Oop off=14747}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@16 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00007f003f2ad89b: call   0x00007f003f279000  ; OopMap{[192]=Oop [176]=Oop [152]=Oop rdi=Oop [200]=Oop [256]=Oop off=14752}
                                                ;*invokevirtual getClassPath {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@94 (line 522)
                                                ;   {runtime_call}
  0x00007f003f2ad8a0: call   0x00007f003f279000  ; OopMap{[192]=Oop [200]=Oop rsi=Oop [152]=Oop rdx=Oop [256]=Oop off=14757}
                                                ;*invokevirtual size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@169 (line 539)
                                                ;   {runtime_call}
  0x00007f003f2ad8a5: call   0x00007f003f279000  ; OopMap{[192]=Oop [200]=Oop rsi=Oop [152]=Oop rdi=Oop [256]=Oop off=14762}
                                                ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007f003f2ad8aa: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2ad8af: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2ad8b7: call   0x00007f003f27d5e0  ; OopMap{[192]=Oop [200]=Oop rsi=Oop [152]=Oop rdi=Oop [256]=Oop off=14780}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::add@-1 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007f003f2ad8bc: jmp    0x00007f003f2ac00e
  0x00007f003f2ad8c1: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2ad8c6: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2ad8ce: call   0x00007f003f27d5e0  ; OopMap{[192]=Oop [200]=Oop rsi=Oop [152]=Oop rdi=Oop [256]=Oop off=14803}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureCapacityInternal@-1 (line 223)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007f003f2ad8d3: jmp    0x00007f003f2ac05a
  0x00007f003f2ad8d8: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2ad8dd: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2ad8e5: call   0x00007f003f27d5e0  ; OopMap{[192]=Oop [200]=Oop rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop off=14826}
                                                ;*synchronization entry
                                                ; - java.lang.Math::max@-1 (line 1252)
                                                ; - java.util.ArrayList::ensureCapacityInternal@13 (line 224)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007f003f2ad8ea: jmp    0x00007f003f2ac0e8
  0x00007f003f2ad8ef: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2ad8f4: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2ad8fc: call   0x00007f003f27d5e0  ; OopMap{[192]=Oop [200]=Oop rsi=Oop [152]=Oop rdi=Oop rbx=Oop [256]=Oop off=14849}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureExplicitCapacity@-1 (line 231)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007f003f2ad901: jmp    0x00007f003f2ac17d
  0x00007f003f2ad906: call   0x00007f003f279000  ; OopMap{[192]=Oop [200]=Oop rsi=Oop [152]=Oop rdi=Oop [256]=Oop off=14859}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 234)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007f003f2ad90b: call   0x00007f003f279000  ; OopMap{[192]=Oop [152]=Oop rbx=Oop [200]=Oop rsi=Oop [256]=Oop off=14864}
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007f003f2ad910: call   0x00007f003f279000  ; OopMap{[192]=Oop [152]=Oop rbx=Oop [200]=Oop rsi=Oop [256]=Oop off=14869}
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007f003f2ad915: mov    QWORD PTR [rsp],rax
  0x00007f003f2ad919: call   0x00007f003f278940  ; OopMap{[192]=Oop [152]=Oop rbx=Oop [200]=Oop rsi=Oop [256]=Oop off=14878}
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007f003f2ad91e: call   0x00007f003f279000  ; OopMap{[192]=Oop [152]=Oop rbx=Oop [200]=Oop [256]=Oop off=14883}
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007f003f2ad923: mov    QWORD PTR [rsp],rbx
  0x00007f003f2ad927: call   0x00007f003f27b080  ; OopMap{[192]=Oop [152]=Oop rbx=Oop [200]=Oop [256]=Oop off=14892}
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00007f003f2ad92c: call   0x00007f003f279000  ; OopMap{rbx=Oop [200]=Oop rsi=Oop [152]=Oop rax=Oop [192]=Oop rdi=Oop [256]=Oop off=14897}
                                                ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)
                                                ;   {runtime_call}
  0x00007f003f2ad931: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2ad936: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2ad93e: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop [200]=Oop rsi=Oop [152]=Oop rax=Oop [192]=Oop rdi=Oop [256]=Oop off=14915}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::put@-1 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)
                                                ;   {runtime_call}
  0x00007f003f2ad943: jmp    0x00007f003f2ac6e2
  0x00007f003f2ad948: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2ad94d: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2ad955: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop [200]=Oop rsi=Oop [152]=Oop rax=Oop [192]=Oop rdi=Oop [256]=Oop off=14938}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)
                                                ;   {runtime_call}
  0x00007f003f2ad95a: jmp    0x00007f003f2ac726
  0x00007f003f2ad95f: call   0x00007f003f279000  ; OopMap{rax=Oop [192]=Oop [216]=Oop [152]=Oop [200]=Oop [256]=Oop off=14948}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)
                                                ;   {runtime_call}
  0x00007f003f2ad964: movabs rcx,0x0            ;   {metadata(NULL)}
  0x00007f003f2ad96e: mov    eax,0xa050f00
  0x00007f003f2ad973: call   0x00007f003f27c5e0  ; OopMap{[152]=Oop [192]=Oop [176]=Oop rax=Oop [256]=Oop off=14968}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@25 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00007f003f2ad978: jmp    0x00007f003f2aca40
  0x00007f003f2ad97d: mov    QWORD PTR [rsp],rax
  0x00007f003f2ad981: call   0x00007f003f27b2c0  ; OopMap{[152]=Oop [192]=Oop [176]=Oop rax=Oop [256]=Oop off=14982}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@25 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00007f003f2ad986: call   0x00007f003f279000  ; OopMap{[152]=Oop [192]=Oop [176]=Oop rdx=Oop [256]=Oop off=14987}
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00007f003f2ad98b: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2ad990: mov    QWORD PTR [rsp],0xa1
  0x00007f003f2ad998: call   0x00007f003f27d5e0  ; OopMap{[152]=Oop [256]=Oop off=15005}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@161 (line 536)
                                                ;   {runtime_call}
  0x00007f003f2ad99d: jmp    0x00007f003f2accfa
  0x00007f003f2ad9a2: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2ad9a7: mov    QWORD PTR [rsp],0xc5
  0x00007f003f2ad9af: call   0x00007f003f27d5e0  ; OopMap{[152]=Oop [256]=Oop off=15028}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@197 (line 542)
                                                ;   {runtime_call}
  0x00007f003f2ad9b4: jmp    0x00007f003f2acd56
  0x00007f003f2ad9b9: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2ad9be: mov    QWORD PTR [rsp],0x52
  0x00007f003f2ad9c6: call   0x00007f003f27d5e0  ; OopMap{[152]=Oop [256]=Oop off=15051}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@82 (line 514)
                                                ;   {runtime_call}
  0x00007f003f2ad9cb: jmp    0x00007f003f2acdb2
  0x00007f003f2ad9d0: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2ad9d5: mov    QWORD PTR [rsp],0x73
  0x00007f003f2ad9dd: call   0x00007f003f27d5e0  ; OopMap{[152]=Oop [256]=Oop off=15074}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@115 (line 528)
                                                ;   {runtime_call}
  0x00007f003f2ad9e2: jmp    0x00007f003f2ace29
  0x00007f003f2ad9e7: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2ad9ec: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2ad9f4: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop [256]=Oop off=15097}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::get@-1 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00007f003f2ad9f9: jmp    0x00007f003f2aceb1
  0x00007f003f2ad9fe: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2ada03: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2ada0b: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop [256]=Oop off=15120}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::rangeCheck@-1 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00007f003f2ada10: jmp    0x00007f003f2acef8
  0x00007f003f2ada15: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2ada1a: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2ada22: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop [256]=Oop off=15143}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::elementData@-1 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00007f003f2ada27: jmp    0x00007f003f2acf88
  0x00007f003f2ada2c: call   0x00007f003f279000  ; OopMap{rax=Oop [256]=Oop off=15153}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00007f003f2ada31: call   0x00007f003f279000  ; OopMap{rax=Oop [256]=Oop off=15158}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00007f003f2ada36: mov    QWORD PTR [rsp],rdx
  0x00007f003f2ada3a: call   0x00007f003f278940  ; OopMap{rax=Oop [256]=Oop off=15167}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00007f003f2ada3f: mov    QWORD PTR [rsp],rax
  0x00007f003f2ada43: call   0x00007f003f27b2c0  ; OopMap{[256]=Oop off=15176}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getLoader@239 (line 546)
                                                ;   {runtime_call}
  0x00007f003f2ada48: lea    rax,[rsp+0xf8]
  0x00007f003f2ada50: mov    QWORD PTR [rsp],rax
  0x00007f003f2ada54: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2ada59: jmp    0x00007f003f2ad216
  0x00007f003f2ada5e: lea    rax,[rsp+0x108]
  0x00007f003f2ada66: mov    QWORD PTR [rsp],rax
  0x00007f003f2ada6a: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2ada6f: jmp    0x00007f003f2ad25c
  0x00007f003f2ada74: lea    rax,[rsp+0xf8]
  0x00007f003f2ada7c: mov    QWORD PTR [rsp],rax
  0x00007f003f2ada80: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2ada85: jmp    0x00007f003f2ad290
  0x00007f003f2ada8a: lea    rax,[rsp+0xf8]
  0x00007f003f2ada92: mov    QWORD PTR [rsp],rax
  0x00007f003f2ada96: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2ada9b: jmp    0x00007f003f2ad2dd
  0x00007f003f2adaa0: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2adaaa: mov    eax,0xa050f00
  0x00007f003f2adaaf: call   0x00007f003f27c5e0  ; OopMap{rbx=Oop [256]=Oop off=15284}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00007f003f2adab4: jmp    0x00007f003f2ad300
  0x00007f003f2adab9: call   0x00007f003f279000  ; OopMap{rbx=Oop [256]=Oop off=15294}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00007f003f2adabe: mov    rdx,rdx
  0x00007f003f2adac1: call   0x00007f003f279ba0  ; OopMap{rbx=Oop [256]=Oop off=15302}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00007f003f2adac6: jmp    0x00007f003f2ad352
  0x00007f003f2adacb: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2adad5: mov    eax,0xa050f00
  0x00007f003f2adada: call   0x00007f003f27c5e0  ; OopMap{[136]=Oop [160]=Oop [152]=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=15327}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@9 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00007f003f2adadf: jmp    0x00007f003f2ad3d8
  0x00007f003f2adae4: mov    rdx,rdx
  0x00007f003f2adae7: call   0x00007f003f2794a0  ; OopMap{[136]=Oop [160]=Oop [152]=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=15340}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Stack::peek@9 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00007f003f2adaec: jmp    0x00007f003f2ad3e7
  0x00007f003f2adaf1: lea    rax,[rsp+0x138]
  0x00007f003f2adaf9: mov    QWORD PTR [rsp],rax
  0x00007f003f2adafd: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2adb02: jmp    0x00007f003f2ad476
  0x00007f003f2adb07: lea    rax,[rsp+0x128]
  0x00007f003f2adb0f: mov    QWORD PTR [rsp],rax
  0x00007f003f2adb13: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2adb18: jmp    0x00007f003f2ad4db
  0x00007f003f2adb1d: lea    rax,[rsp+0x128]
  0x00007f003f2adb25: mov    QWORD PTR [rsp],rax
  0x00007f003f2adb29: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2adb2e: jmp    0x00007f003f2ad540
  0x00007f003f2adb33: lea    rax,[rsp+0x118]
  0x00007f003f2adb3b: mov    QWORD PTR [rsp],rax
  0x00007f003f2adb3f: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2adb44: jmp    0x00007f003f2ad5a5
  0x00007f003f2adb49: lea    rax,[rsp+0x118]
  0x00007f003f2adb51: mov    QWORD PTR [rsp],rax
  0x00007f003f2adb55: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2adb5a: jmp    0x00007f003f2ad619
  0x00007f003f2adb5f: lea    rax,[rsp+0x108]
  0x00007f003f2adb67: mov    QWORD PTR [rsp],rax
  0x00007f003f2adb6b: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2adb70: jmp    0x00007f003f2ad67e
  0x00007f003f2adb75: mov    ecx,DWORD PTR [rsp+0x90]
  0x00007f003f2adb7c: jmp    0x00007f003f2ad489
  0x00007f003f2adb81: mov    ecx,DWORD PTR [rsp+0x90]
  0x00007f003f2adb88: jmp    0x00007f003f2ad489
  0x00007f003f2adb8d: mov    ecx,DWORD PTR [rsp+0x90]
  0x00007f003f2adb94: jmp    0x00007f003f2ad489
  0x00007f003f2adb99: mov    ecx,DWORD PTR [rsp+0x90]
  0x00007f003f2adba0: jmp    0x00007f003f2ad489
  0x00007f003f2adba5: mov    ecx,DWORD PTR [rsp+0x90]
  0x00007f003f2adbac: jmp    0x00007f003f2ad489
  0x00007f003f2adbb1: mov    ecx,DWORD PTR [rsp+0x90]
  0x00007f003f2adbb8: jmp    0x00007f003f2ad489
  0x00007f003f2adbbd: nop
  0x00007f003f2adbbe: nop
  0x00007f003f2adbbf: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2adbc6: movabs r10,0x0
  0x00007f003f2adbd0: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2adbd7: movabs r10,0x0
  0x00007f003f2adbe1: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2adbe8: mov    rbx,rax
  0x00007f003f2adbeb: lea    rax,[rsp+0xf8]
  0x00007f003f2adbf3: mov    rsi,QWORD PTR [rax+0x8]
  0x00007f003f2adbf7: mov    rdi,QWORD PTR [rsi]
  0x00007f003f2adbfa: and    rdi,0x7
  0x00007f003f2adbfe: cmp    rdi,0x5
  0x00007f003f2adc02: je     0x00007f003f2adc1f
  0x00007f003f2adc08: mov    rdi,QWORD PTR [rax]
  0x00007f003f2adc0b: test   rdi,rdi
  0x00007f003f2adc0e: je     0x00007f003f2adc1f
  0x00007f003f2adc14: lock cmpxchg QWORD PTR [rsi],rdi
  0x00007f003f2adc19: jne    0x00007f003f2adc2f
  0x00007f003f2adc1f: mov    rax,rbx
  0x00007f003f2adc22: add    rsp,0x150
  0x00007f003f2adc29: pop    rbp
  0x00007f003f2adc2a: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2adc2f: lea    rax,[rsp+0xf8]
  0x00007f003f2adc37: mov    QWORD PTR [rsp],rax
  0x00007f003f2adc3b: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2adc40: jmp    0x00007f003f2adc1f
  0x00007f003f2adc42: hlt    
  0x00007f003f2adc43: hlt    
  0x00007f003f2adc44: hlt    
  0x00007f003f2adc45: hlt    
  0x00007f003f2adc46: hlt    
  0x00007f003f2adc47: hlt    
  0x00007f003f2adc48: hlt    
  0x00007f003f2adc49: hlt    
  0x00007f003f2adc4a: hlt    
  0x00007f003f2adc4b: hlt    
  0x00007f003f2adc4c: hlt    
  0x00007f003f2adc4d: hlt    
  0x00007f003f2adc4e: hlt    
  0x00007f003f2adc4f: hlt    
  0x00007f003f2adc50: hlt    
  0x00007f003f2adc51: hlt    
  0x00007f003f2adc52: hlt    
  0x00007f003f2adc53: hlt    
  0x00007f003f2adc54: hlt    
  0x00007f003f2adc55: hlt    
  0x00007f003f2adc56: hlt    
  0x00007f003f2adc57: hlt    
  0x00007f003f2adc58: hlt    
  0x00007f003f2adc59: hlt    
  0x00007f003f2adc5a: hlt    
  0x00007f003f2adc5b: hlt    
  0x00007f003f2adc5c: hlt    
  0x00007f003f2adc5d: hlt    
  0x00007f003f2adc5e: hlt    
  0x00007f003f2adc5f: hlt    
[Stub Code]
  0x00007f003f2adc60: nop                       ;   {no_reloc}
  0x00007f003f2adc61: nop
  0x00007f003f2adc62: nop
  0x00007f003f2adc63: nop
  0x00007f003f2adc64: nop
  0x00007f003f2adc65: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2adc6f: jmp    0x00007f003f2adc6f  ;   {runtime_call}
  0x00007f003f2adc74: nop
  0x00007f003f2adc75: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2adc7f: jmp    0x00007f003f2adc7f  ;   {runtime_call}
  0x00007f003f2adc84: nop
  0x00007f003f2adc85: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2adc8f: jmp    0x00007f003f2adc8f  ;   {runtime_call}
  0x00007f003f2adc94: nop
  0x00007f003f2adc95: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2adc9f: jmp    0x00007f003f2adc9f  ;   {runtime_call}
  0x00007f003f2adca4: nop
  0x00007f003f2adca5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2adcaf: jmp    0x00007f003f2adcaf  ;   {runtime_call}
  0x00007f003f2adcb4: nop
  0x00007f003f2adcb5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2adcbf: jmp    0x00007f003f2adcbf  ;   {runtime_call}
  0x00007f003f2adcc4: nop
  0x00007f003f2adcc5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2adccf: jmp    0x00007f003f2adccf  ;   {runtime_call}
  0x00007f003f2adcd4: nop
  0x00007f003f2adcd5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2adcdf: jmp    0x00007f003f2adcdf  ;   {runtime_call}
  0x00007f003f2adce4: nop
  0x00007f003f2adce5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2adcef: jmp    0x00007f003f2adcef  ;   {runtime_call}
  0x00007f003f2adcf4: nop
  0x00007f003f2adcf5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2adcff: jmp    0x00007f003f2adcff  ;   {runtime_call}
  0x00007f003f2add04: nop
  0x00007f003f2add05: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2add0f: jmp    0x00007f003f2add0f  ;   {runtime_call}
  0x00007f003f2add14: nop
  0x00007f003f2add15: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2add1f: jmp    0x00007f003f2add1f  ;   {runtime_call}
  0x00007f003f2add24: nop
  0x00007f003f2add25: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2add2f: jmp    0x00007f003f2add2f  ;   {runtime_call}
  0x00007f003f2add34: nop
  0x00007f003f2add35: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2add3f: jmp    0x00007f003f2add3f  ;   {runtime_call}
  0x00007f003f2add44: nop
  0x00007f003f2add45: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2add4f: jmp    0x00007f003f2add4f  ;   {runtime_call}
  0x00007f003f2add54: nop
  0x00007f003f2add55: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2add5f: jmp    0x00007f003f2add5f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2add64: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2add69: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2add6e: sub    rsp,0x80
  0x00007f003f2add75: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2add7a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2add7f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2add84: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2add89: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2add8e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2add93: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2add98: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2add9d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2adda2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2adda7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2addac: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2addb1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2addb6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2addbb: mov    QWORD PTR [rsp],r15
  0x00007f003f2addbf: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2addc9: movabs rsi,0x7f003f2add69  ;   {internal_word}
  0x00007f003f2addd3: mov    rdx,rsp
  0x00007f003f2addd6: and    rsp,0xfffffffffffffff0
  0x00007f003f2addda: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2adddf: hlt    
[Deopt Handler Code]
  0x00007f003f2adde0: movabs r10,0x7f003f2adde0  ;   {section_word}
  0x00007f003f2addea: push   r10
  0x00007f003f2addec: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2addf1: hlt    
  0x00007f003f2addf2: hlt    
  0x00007f003f2addf3: hlt    
  0x00007f003f2addf4: hlt    
  0x00007f003f2addf5: hlt    
  0x00007f003f2addf6: hlt    
  0x00007f003f2addf7: hlt    
<nmethod compile_id='78' compiler='C1' level='3' entry='0x00007f003f2a9f00' size='23872' address='0x00007f003f2a9ad0' relocation_offset='312' insts_offset='1072' stub_offset='16784' scopes_data_offset='17368' scopes_pcs_offset='19552' dependencies_offset='22928' handler_table_offset='22944' nul_chk_table_offset='23712' metadata_offset='17192' method='sun/misc/URLClassPath getLoader (I)Lsun/misc/URLClassPath$Loader;' bytes='243' count='576' backedge_count='17' iicount='576' stamp='0.363'/>
----------------------------------------------------------------------
sun/misc/URLClassPath.getNextLoader  [0x00007f003f2aff00, 0x00007f003f2b0908]  2568 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003896d2a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;
  # this:     rsi:rsi   = &apos;sun/misc/URLClassPath&apos;
  # parm0:    rdx:rdx   = &apos;[I&apos;
  # parm1:    rcx       = int
  #           [sp+0xb0]  (sp of caller)
  0x00007f003f2aff00: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2aff04: shl    r10,0x3
  0x00007f003f2aff08: cmp    r10,rax
  0x00007f003f2aff0b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2aff11: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2aff1c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2aff20: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2aff27: push   rbp
  0x00007f003f2aff28: sub    rsp,0xa0
  0x00007f003f2aff2f: lea    rdi,[rsp+0x88]
  0x00007f003f2aff37: mov    QWORD PTR [rdi+0x8],rsi
  0x00007f003f2aff3b: mov    rax,QWORD PTR [rsi]
  0x00007f003f2aff3e: mov    rbx,rax
  0x00007f003f2aff41: and    rbx,0x7
  0x00007f003f2aff45: cmp    rbx,0x5
  0x00007f003f2aff49: jne    0x00007f003f2affd0
  0x00007f003f2aff4f: mov    ebx,DWORD PTR [rsi+0x8]
  0x00007f003f2aff52: shl    rbx,0x3
  0x00007f003f2aff56: mov    rbx,QWORD PTR [rbx+0xa8]
  0x00007f003f2aff5d: or     rbx,r15
  0x00007f003f2aff60: xor    rbx,rax
  0x00007f003f2aff63: and    rbx,0xffffffffffffff87
  0x00007f003f2aff67: je     0x00007f003f2afff8
  0x00007f003f2aff6d: test   rbx,0x7
  0x00007f003f2aff74: jne    0x00007f003f2affbd
  0x00007f003f2aff76: test   rbx,0x300
  0x00007f003f2aff7d: jne    0x00007f003f2aff9c
  0x00007f003f2aff7f: and    rax,0x37f
  0x00007f003f2aff86: mov    rbx,rax
  0x00007f003f2aff89: or     rbx,r15
  0x00007f003f2aff8c: lock cmpxchg QWORD PTR [rsi],rbx
  0x00007f003f2aff91: jne    0x00007f003f2b068e
  0x00007f003f2aff97: jmp    0x00007f003f2afff8
  0x00007f003f2aff9c: mov    ebx,DWORD PTR [rsi+0x8]
  0x00007f003f2aff9f: shl    rbx,0x3
  0x00007f003f2affa3: mov    rbx,QWORD PTR [rbx+0xa8]
  0x00007f003f2affaa: or     rbx,r15
  0x00007f003f2affad: lock cmpxchg QWORD PTR [rsi],rbx
  0x00007f003f2affb2: jne    0x00007f003f2b068e
  0x00007f003f2affb8: jmp    0x00007f003f2afff8
  0x00007f003f2affbd: mov    ebx,DWORD PTR [rsi+0x8]
  0x00007f003f2affc0: shl    rbx,0x3
  0x00007f003f2affc4: mov    rbx,QWORD PTR [rbx+0xa8]
  0x00007f003f2affcb: lock cmpxchg QWORD PTR [rsi],rbx
  0x00007f003f2affd0: mov    rax,QWORD PTR [rsi]
  0x00007f003f2affd3: or     rax,0x1
  0x00007f003f2affd7: mov    QWORD PTR [rdi],rax
  0x00007f003f2affda: lock cmpxchg QWORD PTR [rsi],rdi
  0x00007f003f2affdf: je     0x00007f003f2afff8
  0x00007f003f2affe5: sub    rax,rsp
  0x00007f003f2affe8: and    rax,0xfffffffffffff007
  0x00007f003f2affef: mov    QWORD PTR [rdi],rax
  0x00007f003f2afff2: jne    0x00007f003f2b068e
  0x00007f003f2afff8: movabs rax,0x7f0038a59ee0  ;   {metadata(method data for {method} {0x00007f003896d2a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2b0002: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f2b0008: add    edi,0x8
  0x00007f003f2b000b: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f2b0011: movabs rax,0x7f003896d2a0  ;   {metadata({method} {0x00007f003896d2a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2b001b: and    edi,0x1ff8
  0x00007f003f2b0021: cmp    edi,0x0
  0x00007f003f2b0024: je     0x00007f003f2b06a1  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@0 (line 469)

  0x00007f003f2b002a: movsx  eax,BYTE PTR [rsi+0xc]  ;*getfield closed {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@1 (line 469)

  0x00007f003f2b002e: cmp    eax,0x0
  0x00007f003f2b0031: movabs rax,0x7f0038a59ee0  ;   {metadata(method data for {method} {0x00007f003896d2a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2b003b: movabs rdi,0x130
  0x00007f003f2b0045: je     0x00007f003f2b0055
  0x00007f003f2b004b: movabs rdi,0x140
  0x00007f003f2b0055: mov    rbx,QWORD PTR [rax+rdi*1]
  0x00007f003f2b0059: lea    rbx,[rbx+0x1]
  0x00007f003f2b005d: mov    QWORD PTR [rax+rdi*1],rbx
  0x00007f003f2b0061: jne    0x00007f003f2b057d  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@4 (line 469)

  0x00007f003f2b0067: cmp    rdx,0x0
  0x00007f003f2b006b: movabs rax,0x7f0038a59ee0  ;   {metadata(method data for {method} {0x00007f003896d2a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2b0075: movabs rdi,0x150
  0x00007f003f2b007f: je     0x00007f003f2b008f
  0x00007f003f2b0085: movabs rdi,0x160
  0x00007f003f2b008f: mov    rbx,QWORD PTR [rax+rdi*1]
  0x00007f003f2b0093: lea    rbx,[rbx+0x1]
  0x00007f003f2b0097: mov    QWORD PTR [rax+rdi*1],rbx
  0x00007f003f2b009b: je     0x00007f003f2b0517  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@10 (line 472)

  0x00007f003f2b00a1: mov    eax,DWORD PTR [rdx+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@15 (line 473)
                                                ; implicit exception: dispatches to 0x00007f003f2b06b8
  0x00007f003f2b00a4: cmp    ecx,eax
  0x00007f003f2b00a6: movabs rax,0x7f0038a59ee0  ;   {metadata(method data for {method} {0x00007f003896d2a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2b00b0: movabs rdi,0x170
  0x00007f003f2b00ba: jge    0x00007f003f2b00ca
  0x00007f003f2b00c0: movabs rdi,0x180
  0x00007f003f2b00ca: mov    rbx,QWORD PTR [rax+rdi*1]
  0x00007f003f2b00ce: lea    rbx,[rbx+0x1]
  0x00007f003f2b00d2: mov    QWORD PTR [rax+rdi*1],rbx
  0x00007f003f2b00d6: jge    0x00007f003f2b04ca  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@16 (line 473)

  0x00007f003f2b00dc: mov    ebx,DWORD PTR [rsi+0x18]
  0x00007f003f2b00df: shl    rbx,0x3            ;*getfield loaders {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@20 (line 474)

  0x00007f003f2b00e3: movsxd rax,ecx
  0x00007f003f2b00e6: cmp    ecx,DWORD PTR [rdx+0xc]
  0x00007f003f2b00e9: jae    0x00007f003f2b06bd
  0x00007f003f2b00ef: mov    r8d,DWORD PTR [rdx+rax*4+0x10]
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@25 (line 474)

  0x00007f003f2b00f4: cmp    rax,QWORD PTR [rbx]  ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ; implicit exception: dispatches to 0x00007f003f2b06c6
  0x00007f003f2b00f7: mov    rax,rbx
  0x00007f003f2b00fa: movabs rsi,0x7f0038a59ee0  ;   {metadata(method data for {method} {0x00007f003896d2a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2b0104: movabs r10,0x7c0016f60    ;   {metadata(&apos;java/util/ArrayList&apos;)}
  0x00007f003f2b010e: mov    QWORD PTR [rsi+0x1a0],r10
  0x00007f003f2b0115: add    QWORD PTR [rsi+0x1a8],0x1
  0x00007f003f2b011d: movabs rax,0x7f0038a60a80  ;   {metadata(method data for {method} {0x00007f0038850908} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2b0127: mov    esi,DWORD PTR [rax+0xfc]
  0x00007f003f2b012d: add    esi,0x8
  0x00007f003f2b0130: mov    DWORD PTR [rax+0xfc],esi
  0x00007f003f2b0136: movabs rax,0x7f0038850908  ;   {metadata({method} {0x00007f0038850908} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2b0140: and    esi,0x7ffff8
  0x00007f003f2b0146: cmp    esi,0x0
  0x00007f003f2b0149: je     0x00007f003f2b06cb
  0x00007f003f2b014f: mov    rax,rbx
  0x00007f003f2b0152: movabs rsi,0x7f0038a60a80  ;   {metadata(method data for {method} {0x00007f0038850908} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2b015c: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2b0164: movabs rax,0x7f0038a60ca0  ;   {metadata(method data for {method} {0x00007f00388513c8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2b016e: mov    esi,DWORD PTR [rax+0xfc]
  0x00007f003f2b0174: add    esi,0x8
  0x00007f003f2b0177: mov    DWORD PTR [rax+0xfc],esi
  0x00007f003f2b017d: movabs rax,0x7f00388513c8  ;   {metadata({method} {0x00007f00388513c8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2b0187: and    esi,0x7ffff8
  0x00007f003f2b018d: cmp    esi,0x0
  0x00007f003f2b0190: je     0x00007f003f2b06e2
  0x00007f003f2b0196: mov    eax,DWORD PTR [rbx+0x10]  ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@2 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)

  0x00007f003f2b0199: cmp    r8d,eax
  0x00007f003f2b019c: movabs rax,0x7f0038a60ca0  ;   {metadata(method data for {method} {0x00007f00388513c8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2b01a6: movabs rsi,0x130
  0x00007f003f2b01b0: jl     0x00007f003f2b01c0
  0x00007f003f2b01b6: movabs rsi,0x140
  0x00007f003f2b01c0: mov    rdi,QWORD PTR [rax+rsi*1]
  0x00007f003f2b01c4: lea    rdi,[rdi+0x1]
  0x00007f003f2b01c8: mov    QWORD PTR [rax+rsi*1],rdi
  0x00007f003f2b01cc: jge    0x00007f003f2b05ca  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@5 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)

  0x00007f003f2b01d2: mov    rax,rbx
  0x00007f003f2b01d5: movabs rsi,0x7f0038a60a80  ;   {metadata(method data for {method} {0x00007f0038850908} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2b01df: add    QWORD PTR [rsi+0x158],0x1
  0x00007f003f2b01e7: movabs rax,0x7f0038a612c8  ;   {metadata(method data for {method} {0x00007f0038850850} &apos;elementData&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2b01f1: mov    esi,DWORD PTR [rax+0xfc]
  0x00007f003f2b01f7: add    esi,0x8
  0x00007f003f2b01fa: mov    DWORD PTR [rax+0xfc],esi
  0x00007f003f2b0200: movabs rax,0x7f0038850850  ;   {metadata({method} {0x00007f0038850850} &apos;elementData&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2b020a: and    esi,0x7ffff8
  0x00007f003f2b0210: cmp    esi,0x0
  0x00007f003f2b0213: je     0x00007f003f2b06f9
  0x00007f003f2b0219: mov    eax,DWORD PTR [rbx+0x14]
  0x00007f003f2b021c: shl    rax,0x3            ;*getfield elementData {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::elementData@1 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)

  0x00007f003f2b0220: movsxd rsi,r8d
  0x00007f003f2b0223: cmp    r8d,DWORD PTR [rax+0xc]  ; implicit exception: dispatches to 0x00007f003f2b0710
  0x00007f003f2b0227: jae    0x00007f003f2b071a
  0x00007f003f2b022d: mov    eax,DWORD PTR [rax+rsi*4+0x10]
  0x00007f003f2b0231: shl    rax,0x3            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)

  0x00007f003f2b0235: cmp    rax,0x0
  0x00007f003f2b0239: jne    0x00007f003f2b0254
  0x00007f003f2b023b: movabs rsi,0x7f0038a59ee0  ;   {metadata(method data for {method} {0x00007f003896d2a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2b0245: or     DWORD PTR [rsi+0x220],0x100
  0x00007f003f2b024f: jmp    0x00007f003f2b0471
  0x00007f003f2b0254: movabs rdi,0x7c003ab78    ;   {metadata(&apos;sun/misc/URLClassPath$Loader&apos;)}
  0x00007f003f2b025e: mov    esi,DWORD PTR [rax+0x8]
  0x00007f003f2b0261: shl    rsi,0x3
  0x00007f003f2b0265: cmp    rdi,QWORD PTR [rsi+0x30]
  0x00007f003f2b0269: jne    0x00007f003f2b0455
  0x00007f003f2b026f: movabs rsi,0x7f0038a59ee0  ;   {metadata(method data for {method} {0x00007f003896d2a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2b0279: mov    edi,DWORD PTR [rax+0x8]
  0x00007f003f2b027c: shl    rdi,0x3
  0x00007f003f2b0280: cmp    rdi,QWORD PTR [rsi+0x238]
  0x00007f003f2b0287: jne    0x00007f003f2b0296
  0x00007f003f2b0289: add    QWORD PTR [rsi+0x240],0x1
  0x00007f003f2b0291: jmp    0x00007f003f2b0471
  0x00007f003f2b0296: cmp    rdi,QWORD PTR [rsi+0x248]
  0x00007f003f2b029d: jne    0x00007f003f2b02ac
  0x00007f003f2b029f: add    QWORD PTR [rsi+0x250],0x1
  0x00007f003f2b02a7: jmp    0x00007f003f2b0471
  0x00007f003f2b02ac: cmp    rdi,QWORD PTR [rsi+0x258]
  0x00007f003f2b02b3: jne    0x00007f003f2b02c2
  0x00007f003f2b02b5: add    QWORD PTR [rsi+0x260],0x1
  0x00007f003f2b02bd: jmp    0x00007f003f2b0471
  0x00007f003f2b02c2: cmp    rdi,QWORD PTR [rsi+0x268]
  0x00007f003f2b02c9: jne    0x00007f003f2b02d8
  0x00007f003f2b02cb: add    QWORD PTR [rsi+0x270],0x1
  0x00007f003f2b02d3: jmp    0x00007f003f2b0471
  0x00007f003f2b02d8: cmp    rdi,QWORD PTR [rsi+0x278]
  0x00007f003f2b02df: jne    0x00007f003f2b02ee
  0x00007f003f2b02e1: add    QWORD PTR [rsi+0x280],0x1
  0x00007f003f2b02e9: jmp    0x00007f003f2b0471
  0x00007f003f2b02ee: cmp    rdi,QWORD PTR [rsi+0x288]
  0x00007f003f2b02f5: jne    0x00007f003f2b0304
  0x00007f003f2b02f7: add    QWORD PTR [rsi+0x290],0x1
  0x00007f003f2b02ff: jmp    0x00007f003f2b0471
  0x00007f003f2b0304: cmp    rdi,QWORD PTR [rsi+0x298]
  0x00007f003f2b030b: jne    0x00007f003f2b031a
  0x00007f003f2b030d: add    QWORD PTR [rsi+0x2a0],0x1
  0x00007f003f2b0315: jmp    0x00007f003f2b0471
  0x00007f003f2b031a: cmp    rdi,QWORD PTR [rsi+0x2a8]
  0x00007f003f2b0321: jne    0x00007f003f2b0330
  0x00007f003f2b0323: add    QWORD PTR [rsi+0x2b0],0x1
  0x00007f003f2b032b: jmp    0x00007f003f2b0471
  0x00007f003f2b0330: cmp    QWORD PTR [rsi+0x238],0x0
  0x00007f003f2b033b: jne    0x00007f003f2b0354
  0x00007f003f2b033d: mov    QWORD PTR [rsi+0x238],rdi
  0x00007f003f2b0344: mov    QWORD PTR [rsi+0x240],0x1
  0x00007f003f2b034f: jmp    0x00007f003f2b0471
  0x00007f003f2b0354: cmp    QWORD PTR [rsi+0x248],0x0
  0x00007f003f2b035f: jne    0x00007f003f2b0378
  0x00007f003f2b0361: mov    QWORD PTR [rsi+0x248],rdi
  0x00007f003f2b0368: mov    QWORD PTR [rsi+0x250],0x1
  0x00007f003f2b0373: jmp    0x00007f003f2b0471
  0x00007f003f2b0378: cmp    QWORD PTR [rsi+0x258],0x0
  0x00007f003f2b0383: jne    0x00007f003f2b039c
  0x00007f003f2b0385: mov    QWORD PTR [rsi+0x258],rdi
  0x00007f003f2b038c: mov    QWORD PTR [rsi+0x260],0x1
  0x00007f003f2b0397: jmp    0x00007f003f2b0471
  0x00007f003f2b039c: cmp    QWORD PTR [rsi+0x268],0x0
  0x00007f003f2b03a7: jne    0x00007f003f2b03c0
  0x00007f003f2b03a9: mov    QWORD PTR [rsi+0x268],rdi
  0x00007f003f2b03b0: mov    QWORD PTR [rsi+0x270],0x1
  0x00007f003f2b03bb: jmp    0x00007f003f2b0471
  0x00007f003f2b03c0: cmp    QWORD PTR [rsi+0x278],0x0
  0x00007f003f2b03cb: jne    0x00007f003f2b03e4
  0x00007f003f2b03cd: mov    QWORD PTR [rsi+0x278],rdi
  0x00007f003f2b03d4: mov    QWORD PTR [rsi+0x280],0x1
  0x00007f003f2b03df: jmp    0x00007f003f2b0471
  0x00007f003f2b03e4: cmp    QWORD PTR [rsi+0x288],0x0
  0x00007f003f2b03ef: jne    0x00007f003f2b0408
  0x00007f003f2b03f1: mov    QWORD PTR [rsi+0x288],rdi
  0x00007f003f2b03f8: mov    QWORD PTR [rsi+0x290],0x1
  0x00007f003f2b0403: jmp    0x00007f003f2b0471
  0x00007f003f2b0408: cmp    QWORD PTR [rsi+0x298],0x0
  0x00007f003f2b0413: jne    0x00007f003f2b042c
  0x00007f003f2b0415: mov    QWORD PTR [rsi+0x298],rdi
  0x00007f003f2b041c: mov    QWORD PTR [rsi+0x2a0],0x1
  0x00007f003f2b0427: jmp    0x00007f003f2b0471
  0x00007f003f2b042c: cmp    QWORD PTR [rsi+0x2a8],0x0
  0x00007f003f2b0437: jne    0x00007f003f2b0450
  0x00007f003f2b0439: mov    QWORD PTR [rsi+0x2a8],rdi
  0x00007f003f2b0440: mov    QWORD PTR [rsi+0x2b0],0x1
  0x00007f003f2b044b: jmp    0x00007f003f2b0471
  0x00007f003f2b0450: jmp    0x00007f003f2b0471
  0x00007f003f2b0455: movabs rsi,0x7f0038a59ee0  ;   {metadata(method data for {method} {0x00007f003896d2a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2b045f: sub    QWORD PTR [rsi+0x228],0x1
  0x00007f003f2b0467: jmp    0x00007f003f2b0723
  0x00007f003f2b046c: jmp    0x00007f003f2b0471
  0x00007f003f2b0471: mov    rdx,rax            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@29 (line 474)

  0x00007f003f2b0474: movabs rax,0x7f0038a59ee0  ;   {metadata(method data for {method} {0x00007f003896d2a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2b047e: inc    DWORD PTR [rax+0x2c0]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@36 (line 475)

  0x00007f003f2b0484: lea    rax,[rsp+0x88]
  0x00007f003f2b048c: mov    rdi,QWORD PTR [rax+0x8]
  0x00007f003f2b0490: mov    rsi,QWORD PTR [rdi]
  0x00007f003f2b0493: and    rsi,0x7
  0x00007f003f2b0497: cmp    rsi,0x5
  0x00007f003f2b049b: je     0x00007f003f2b04b8
  0x00007f003f2b04a1: mov    rsi,QWORD PTR [rax]
  0x00007f003f2b04a4: test   rsi,rsi
  0x00007f003f2b04a7: je     0x00007f003f2b04b8
  0x00007f003f2b04ad: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2b04b2: jne    0x00007f003f2b072c
  0x00007f003f2b04b8: mov    rax,rdx
  0x00007f003f2b04bb: add    rsp,0xa0
  0x00007f003f2b04c2: pop    rbp
  0x00007f003f2b04c3: test   DWORD PTR [rip+0x1b111c37],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2b04c9: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@79 (line 479)

  0x00007f003f2b04ca: lea    rax,[rsp+0x88]
  0x00007f003f2b04d2: mov    rsi,QWORD PTR [rax+0x8]
  0x00007f003f2b04d6: mov    rdx,QWORD PTR [rsi]
  0x00007f003f2b04d9: and    rdx,0x7
  0x00007f003f2b04dd: cmp    rdx,0x5
  0x00007f003f2b04e1: je     0x00007f003f2b04fe
  0x00007f003f2b04e7: mov    rdx,QWORD PTR [rax]
  0x00007f003f2b04ea: test   rdx,rdx
  0x00007f003f2b04ed: je     0x00007f003f2b04fe
  0x00007f003f2b04f3: lock cmpxchg QWORD PTR [rsi],rdx
  0x00007f003f2b04f8: jne    0x00007f003f2b0742
  0x00007f003f2b04fe: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f2b0508: add    rsp,0xa0
  0x00007f003f2b050f: pop    rbp
  0x00007f003f2b0510: test   DWORD PTR [rip+0x1b111bea],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2b0516: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@81 (line 481)

  0x00007f003f2b0517: mov    rdx,rsi
  0x00007f003f2b051a: movabs rdi,0x7f0038a59ee0  ;   {metadata(method data for {method} {0x00007f003896d2a0} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00007f003f2b0524: add    QWORD PTR [rdi+0x718],0x1
  0x00007f003f2b052c: mov    rdx,rcx            ;*invokespecial getLoader {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@84 (line 484)

  0x00007f003f2b052f: call   0x00007f003f1c4d60  ; OopMap{[144]=Oop off=1588}
                                                ;*invokespecial getLoader {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@84 (line 484)
                                                ;   {optimized virtual_call}
  0x00007f003f2b0534: mov    rdx,rax            ;*invokespecial getLoader {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@84 (line 484)

  0x00007f003f2b0537: lea    rax,[rsp+0x88]
  0x00007f003f2b053f: mov    rdi,QWORD PTR [rax+0x8]
  0x00007f003f2b0543: mov    rsi,QWORD PTR [rdi]
  0x00007f003f2b0546: and    rsi,0x7
  0x00007f003f2b054a: cmp    rsi,0x5
  0x00007f003f2b054e: je     0x00007f003f2b056b
  0x00007f003f2b0554: mov    rsi,QWORD PTR [rax]
  0x00007f003f2b0557: test   rsi,rsi
  0x00007f003f2b055a: je     0x00007f003f2b056b
  0x00007f003f2b0560: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2b0565: jne    0x00007f003f2b0758
  0x00007f003f2b056b: mov    rax,rdx
  0x00007f003f2b056e: add    rsp,0xa0
  0x00007f003f2b0575: pop    rbp
  0x00007f003f2b0576: test   DWORD PTR [rip+0x1b111b84],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2b057c: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@87 (line 484)

  0x00007f003f2b057d: lea    rax,[rsp+0x88]
  0x00007f003f2b0585: mov    rsi,QWORD PTR [rax+0x8]
  0x00007f003f2b0589: mov    rdx,QWORD PTR [rsi]
  0x00007f003f2b058c: and    rdx,0x7
  0x00007f003f2b0590: cmp    rdx,0x5
  0x00007f003f2b0594: je     0x00007f003f2b05b1
  0x00007f003f2b059a: mov    rdx,QWORD PTR [rax]
  0x00007f003f2b059d: test   rdx,rdx
  0x00007f003f2b05a0: je     0x00007f003f2b05b1
  0x00007f003f2b05a6: lock cmpxchg QWORD PTR [rsi],rdx
  0x00007f003f2b05ab: jne    0x00007f003f2b076e
  0x00007f003f2b05b1: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f2b05bb: add    rsp,0xa0
  0x00007f003f2b05c2: pop    rbp
  0x00007f003f2b05c3: test   DWORD PTR [rip+0x1b111b37],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2b05c9: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@8 (line 470)

  0x00007f003f2b05ca: mov    DWORD PTR [rsp+0x70],ecx
  0x00007f003f2b05ce: mov    QWORD PTR [rsp+0x78],rdx
  0x00007f003f2b05d3: nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f003f2b05d8: jmp    0x00007f003f2b0793  ;   {no_reloc}
  0x00007f003f2b05dd: add    BYTE PTR [rax],al
  0x00007f003f2b05df: add    BYTE PTR [rax],al
  0x00007f003f2b05e1: add    BYTE PTR [rax+0x162ba],al
  0x00007f003f2b05e7: add    BYTE PTR [rdi+rcx*1],al
  0x00007f003f2b05ea: test   DWORD PTR [rbx+0x49000001],esi
  0x00007f003f2b05f0: mov    eax,DWORD PTR [rdi+0x60]
  0x00007f003f2b05f3: lea    rdi,[rax+0x20]
  0x00007f003f2b05f7: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2b05fb: ja     0x00007f003f2b07a2
  0x00007f003f2b0601: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2b0605: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2b060c: mov    QWORD PTR [rax],rcx
  0x00007f003f2b060f: mov    rcx,rdx
  0x00007f003f2b0612: shr    rcx,0x3
  0x00007f003f2b0616: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2b0619: xor    rcx,rcx
  0x00007f003f2b061c: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2b061f: xor    rcx,rcx
  0x00007f003f2b0622: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f2b0626: mov    QWORD PTR [rax+0x18],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)

  0x00007f003f2b062a: mov    rdx,rbx
  0x00007f003f2b062d: movabs rsi,0x7f0038a60ca0  ;   {metadata(method data for {method} {0x00007f00388513c8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2b0637: add    QWORD PTR [rsi+0x150],0x1
  0x00007f003f2b063f: mov    rdx,r8
  0x00007f003f2b0642: mov    rsi,rbx            ;*invokespecial outOfBoundsMsg {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)

  0x00007f003f2b0645: mov    QWORD PTR [rsp+0x80],rbx
  0x00007f003f2b064d: mov    DWORD PTR [rsp+0x74],r8d
  0x00007f003f2b0652: mov    QWORD PTR [rsp+0x68],rax
  0x00007f003f2b0657: call   0x00007f003f1c4d60  ; OopMap{[104]=Oop [120]=Oop [128]=Oop [144]=Oop off=1884}
                                                ;*invokespecial outOfBoundsMsg {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {optimized virtual_call}
  0x00007f003f2b065c: mov    rdx,QWORD PTR [rsp+0x68]
  0x00007f003f2b0661: movabs rsi,0x7f0038a60ca0  ;   {metadata(method data for {method} {0x00007f00388513c8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00007f003f2b066b: add    QWORD PTR [rsi+0x160],0x1
  0x00007f003f2b0673: mov    rdx,rax
  0x00007f003f2b0676: mov    rsi,QWORD PTR [rsp+0x68]  ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@17 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)

  0x00007f003f2b067b: nop
  0x00007f003f2b067c: nop
  0x00007f003f2b067d: nop
  0x00007f003f2b067e: nop
  0x00007f003f2b067f: call   0x00007f003f1c4d60  ; OopMap{[104]=Oop [120]=Oop [128]=Oop [144]=Oop off=1924}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@17 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {optimized virtual_call}
  0x00007f003f2b0684: mov    rax,QWORD PTR [rsp+0x68]
  0x00007f003f2b0689: jmp    0x00007f003f2b07da
  0x00007f003f2b068e: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2b0693: mov    QWORD PTR [rsp],rdi
  0x00007f003f2b0697: call   0x00007f003f27ba60  ; OopMap{rsi=Oop rdx=Oop [144]=Oop off=1948}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getNextLoader@-1 (line 469)
                                                ;   {runtime_call}
  0x00007f003f2b069c: jmp    0x00007f003f2afff8
  0x00007f003f2b06a1: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2b06a6: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b06ae: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop [144]=Oop off=1971}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getNextLoader@-1 (line 469)
                                                ;   {runtime_call}
  0x00007f003f2b06b3: jmp    0x00007f003f2b002a
  0x00007f003f2b06b8: call   0x00007f003f279000  ; OopMap{rsi=Oop rdx=Oop [144]=Oop off=1981}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@15 (line 473)
                                                ;   {runtime_call}
  0x00007f003f2b06bd: mov    QWORD PTR [rsp],rcx
  0x00007f003f2b06c1: call   0x00007f003f278940  ; OopMap{rdx=Oop rbx=Oop [144]=Oop off=1990}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@25 (line 474)
                                                ;   {runtime_call}
  0x00007f003f2b06c6: call   0x00007f003f279000  ; OopMap{rdx=Oop rbx=Oop [144]=Oop off=1995}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {runtime_call}
  0x00007f003f2b06cb: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2b06d0: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b06d8: call   0x00007f003f27d5e0  ; OopMap{rdx=Oop rbx=Oop [144]=Oop off=2013}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::get@-1 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {runtime_call}
  0x00007f003f2b06dd: jmp    0x00007f003f2b014f
  0x00007f003f2b06e2: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2b06e7: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b06ef: call   0x00007f003f27d5e0  ; OopMap{rdx=Oop rbx=Oop [144]=Oop off=2036}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::rangeCheck@-1 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {runtime_call}
  0x00007f003f2b06f4: jmp    0x00007f003f2b0196
  0x00007f003f2b06f9: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2b06fe: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b0706: call   0x00007f003f27d5e0  ; OopMap{rdx=Oop rbx=Oop [144]=Oop off=2059}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::elementData@-1 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {runtime_call}
  0x00007f003f2b070b: jmp    0x00007f003f2b0219
  0x00007f003f2b0710: call   0x00007f003f279000  ; OopMap{rdx=Oop rax=Oop [144]=Oop off=2069}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {runtime_call}
  0x00007f003f2b0715: call   0x00007f003f279000  ; OopMap{rdx=Oop rax=Oop [144]=Oop off=2074}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {runtime_call}
  0x00007f003f2b071a: mov    QWORD PTR [rsp],r8
  0x00007f003f2b071e: call   0x00007f003f278940  ; OopMap{rdx=Oop rax=Oop [144]=Oop off=2083}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {runtime_call}
  0x00007f003f2b0723: mov    QWORD PTR [rsp],rax
  0x00007f003f2b0727: call   0x00007f003f27b2c0  ; OopMap{[144]=Oop off=2092}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath::getNextLoader@29 (line 474)
                                                ;   {runtime_call}
  0x00007f003f2b072c: lea    rax,[rsp+0x88]
  0x00007f003f2b0734: mov    QWORD PTR [rsp],rax
  0x00007f003f2b0738: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2b073d: jmp    0x00007f003f2b04b8
  0x00007f003f2b0742: lea    rax,[rsp+0x88]
  0x00007f003f2b074a: mov    QWORD PTR [rsp],rax
  0x00007f003f2b074e: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2b0753: jmp    0x00007f003f2b04fe
  0x00007f003f2b0758: lea    rax,[rsp+0x88]
  0x00007f003f2b0760: mov    QWORD PTR [rsp],rax
  0x00007f003f2b0764: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2b0769: jmp    0x00007f003f2b056b
  0x00007f003f2b076e: lea    rax,[rsp+0x88]
  0x00007f003f2b0776: mov    QWORD PTR [rsp],rax
  0x00007f003f2b077a: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2b077f: jmp    0x00007f003f2b05b1
  0x00007f003f2b0784: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2b078e: mov    eax,0xa050f00
  0x00007f003f2b0793: call   0x00007f003f27c5e0  ; OopMap{rbx=Oop [120]=Oop [144]=Oop off=2200}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {runtime_call}
  0x00007f003f2b0798: jmp    0x00007f003f2b05d8
  0x00007f003f2b079d: call   0x00007f003f279000  ; OopMap{rbx=Oop [120]=Oop [144]=Oop off=2210}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {runtime_call}
  0x00007f003f2b07a2: mov    rdx,rdx
  0x00007f003f2b07a5: call   0x00007f003f279ba0  ; OopMap{rbx=Oop [120]=Oop [144]=Oop off=2218}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 474)
                                                ;   {runtime_call}
  0x00007f003f2b07aa: jmp    0x00007f003f2b062a
  0x00007f003f2b07af: nop
  0x00007f003f2b07b0: nop
  0x00007f003f2b07b1: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2b07b8: movabs r10,0x0
  0x00007f003f2b07c2: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2b07c9: movabs r10,0x0
  0x00007f003f2b07d3: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2b07da: mov    rbx,rax
  0x00007f003f2b07dd: lea    rax,[rsp+0x88]
  0x00007f003f2b07e5: mov    rsi,QWORD PTR [rax+0x8]
  0x00007f003f2b07e9: mov    rdi,QWORD PTR [rsi]
  0x00007f003f2b07ec: and    rdi,0x7
  0x00007f003f2b07f0: cmp    rdi,0x5
  0x00007f003f2b07f4: je     0x00007f003f2b0811
  0x00007f003f2b07fa: mov    rdi,QWORD PTR [rax]
  0x00007f003f2b07fd: test   rdi,rdi
  0x00007f003f2b0800: je     0x00007f003f2b0811
  0x00007f003f2b0806: lock cmpxchg QWORD PTR [rsi],rdi
  0x00007f003f2b080b: jne    0x00007f003f2b0821
  0x00007f003f2b0811: mov    rax,rbx
  0x00007f003f2b0814: add    rsp,0xa0
  0x00007f003f2b081b: pop    rbp
  0x00007f003f2b081c: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2b0821: lea    rax,[rsp+0x88]
  0x00007f003f2b0829: mov    QWORD PTR [rsp],rax
  0x00007f003f2b082d: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2b0832: jmp    0x00007f003f2b0811
  0x00007f003f2b0834: hlt    
  0x00007f003f2b0835: hlt    
  0x00007f003f2b0836: hlt    
  0x00007f003f2b0837: hlt    
  0x00007f003f2b0838: hlt    
  0x00007f003f2b0839: hlt    
  0x00007f003f2b083a: hlt    
  0x00007f003f2b083b: hlt    
  0x00007f003f2b083c: hlt    
  0x00007f003f2b083d: hlt    
  0x00007f003f2b083e: hlt    
  0x00007f003f2b083f: hlt    
[Stub Code]
  0x00007f003f2b0840: nop                       ;   {no_reloc}
  0x00007f003f2b0841: nop
  0x00007f003f2b0842: nop
  0x00007f003f2b0843: nop
  0x00007f003f2b0844: nop
  0x00007f003f2b0845: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b084f: jmp    0x00007f003f2b084f  ;   {runtime_call}
  0x00007f003f2b0854: nop
  0x00007f003f2b0855: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b085f: jmp    0x00007f003f2b085f  ;   {runtime_call}
  0x00007f003f2b0864: nop
  0x00007f003f2b0865: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b086f: jmp    0x00007f003f2b086f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2b0874: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2b0879: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2b087e: sub    rsp,0x80
  0x00007f003f2b0885: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2b088a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2b088f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2b0894: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2b0899: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2b089e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2b08a3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2b08a8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2b08ad: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2b08b2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2b08b7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2b08bc: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2b08c1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2b08c6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2b08cb: mov    QWORD PTR [rsp],r15
  0x00007f003f2b08cf: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2b08d9: movabs rsi,0x7f003f2b0879  ;   {internal_word}
  0x00007f003f2b08e3: mov    rdx,rsp
  0x00007f003f2b08e6: and    rsp,0xfffffffffffffff0
  0x00007f003f2b08ea: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2b08ef: hlt    
[Deopt Handler Code]
  0x00007f003f2b08f0: movabs r10,0x7f003f2b08f0  ;   {section_word}
  0x00007f003f2b08fa: push   r10
  0x00007f003f2b08fc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2b0901: hlt    
  0x00007f003f2b0902: hlt    
  0x00007f003f2b0903: hlt    
  0x00007f003f2b0904: hlt    
  0x00007f003f2b0905: hlt    
  0x00007f003f2b0906: hlt    
  0x00007f003f2b0907: hlt    
<nmethod compile_id='77' compiler='C1' level='3' entry='0x00007f003f2aff00' size='4240' address='0x00007f003f2afd10' relocation_offset='312' insts_offset='496' stub_offset='2864' scopes_data_offset='3112' scopes_pcs_offset='3480' dependencies_offset='4184' nul_chk_table_offset='4192' metadata_offset='3064' method='sun/misc/URLClassPath getNextLoader ([II)Lsun/misc/URLClassPath$Loader;' bytes='88' count='582' iicount='582' stamp='0.368'/>
<writer thread='139637818533632'/>
<task_queued compile_id='89' method='java/lang/String indexOf (II)I' bytes='70' count='2208' backedge_count='30406' iicount='2208' level='4' stamp='0.368' comment='tiered' hot_count='2208'/>
[Loaded jdk.vm.ci.meta.Value$IllegalValue from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/zip/ZipFile.ensureOpen  [0x00007f003f2b0f80, 0x00007f003f2b1258]  728 bytes
[Entry Point]
[Constants]
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.meta.ValueKind$IllegalValueKind from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
  # {method} {0x00007f0038996910} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2b0f80: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2b0f84: shl    r10,0x3
  0x00007f003f2b0f88: cmp    r10,rax
  0x00007f003f2b0f8b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2b0f91: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2b0f9c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2b0fa0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2b0fa7: push   rbp
  0x00007f003f2b0fa8: sub    rsp,0x40
  0x00007f003f2b0fac: movabs rdx,0x7f0038a58ea0  ;   {metadata(method data for {method} {0x00007f0038996910} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2b0fb6: mov    eax,DWORD PTR [rdx+0xfc]
  0x00007f003f2b0fbc: add    eax,0x8
  0x00007f003f2b0fbf: mov    DWORD PTR [rdx+0xfc],eax
  0x00007f003f2b0fc5: movabs rdx,0x7f0038996910  ;   {metadata({method} {0x00007f0038996910} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2b0fcf: and    eax,0x1ff8
  0x00007f003f2b0fd5: cmp    eax,0x0
  0x00007f003f2b0fd8: je     0x00007f003f2b10fe  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@0 (line 668)

  0x00007f003f2b0fde: movsx  edx,BYTE PTR [rsi+0x19]  ;*getfield closeRequested {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@1 (line 668)

  0x00007f003f2b0fe2: cmp    edx,0x0
  0x00007f003f2b0fe5: movabs rdx,0x7f0038a58ea0  ;   {metadata(method data for {method} {0x00007f0038996910} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2b0fef: movabs rax,0x130
  0x00007f003f2b0ff9: je     0x00007f003f2b1009
  0x00007f003f2b0fff: movabs rax,0x140
  0x00007f003f2b1009: mov    rdi,QWORD PTR [rdx+rax*1]
  0x00007f003f2b100d: lea    rdi,[rdi+0x1]
  0x00007f003f2b1011: mov    QWORD PTR [rdx+rax*1],rdi
  0x00007f003f2b1015: jne    0x00007f003f2b10b6  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@4 (line 668)

  0x00007f003f2b101b: mov    rdx,QWORD PTR [rsi+0x10]  ;*getfield jzfile {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@18 (line 672)

  0x00007f003f2b101f: movabs rax,0x0
  0x00007f003f2b1029: cmp    rdx,rax
  0x00007f003f2b102c: movabs rdx,0x7f0038a58ea0  ;   {metadata(method data for {method} {0x00007f0038996910} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2b1036: movabs rax,0x160
  0x00007f003f2b1040: jne    0x00007f003f2b1050
  0x00007f003f2b1046: movabs rax,0x170
  0x00007f003f2b1050: mov    rsi,QWORD PTR [rdx+rax*1]
  0x00007f003f2b1054: lea    rsi,[rsi+0x1]
  0x00007f003f2b1058: mov    QWORD PTR [rdx+rax*1],rsi
  0x00007f003f2b105c: je     0x00007f003f2b106e  ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@22 (line 672)

  0x00007f003f2b1062: add    rsp,0x40
  0x00007f003f2b1066: pop    rbp
  0x00007f003f2b1067: test   DWORD PTR [rip+0x1b111093],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2b106d: ret                       ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@36 (line 675)

  0x00007f003f2b106e: xchg   ax,ax
  0x00007f003f2b1070: jmp    0x00007f003f2b1124  ;   {no_reloc}
  0x00007f003f2b1075: add    BYTE PTR [rax],al
  0x00007f003f2b1077: add    BYTE PTR [rax],al
  0x00007f003f2b1079: add    cl,ch
  0x00007f003f2b107b: scas   eax,DWORD PTR es:[rdi]
  0x00007f003f2b107c: add    BYTE PTR [rax],al
  0x00007f003f2b107e: add    BYTE PTR [rax-0x75],cl  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@26 (line 673)

  0x00007f003f2b1081: ror    BYTE PTR [rax-0x42],1  ;   {metadata(method data for {method} {0x00007f0038996910} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2b1084: movabs al,ds:0x4800007f0038a58e
  0x00007f003f2b108d: add    DWORD PTR [rsi+0x180],0x1
  0x00007f003f2b1094: movabs rdx,0x671594920    ;   {oop(&quot;The object is not initialized.&quot;)}
  0x00007f003f2b109e: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@32 (line 673)

  0x00007f003f2b10a1: mov    QWORD PTR [rsp+0x28],rax
  0x00007f003f2b10a6: nop
  0x00007f003f2b10a7: call   0x00007f003f1c4d60  ; OopMap{[40]=Oop off=300}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@32 (line 673)
                                                ;   {optimized virtual_call}
  0x00007f003f2b10ac: mov    rax,QWORD PTR [rsp+0x28]
  0x00007f003f2b10b1: jmp    0x00007f003f2b118c  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@35 (line 673)

  0x00007f003f2b10b6: xchg   ax,ax
  0x00007f003f2b10b8: jmp    0x00007f003f2b114a  ;   {no_reloc}
  0x00007f003f2b10bd: add    BYTE PTR [rax],al
  0x00007f003f2b10bf: add    BYTE PTR [rax],al
  0x00007f003f2b10c1: add    cl,ch
  0x00007f003f2b10c3: lea    eax,[rax]
  0x00007f003f2b10c5: add    BYTE PTR [rax],al  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@7 (line 669)

  0x00007f003f2b10c7: mov    rdx,rax
  0x00007f003f2b10ca: movabs rsi,0x7f0038a58ea0  ;   {metadata(method data for {method} {0x00007f0038996910} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2b10d4: add    QWORD PTR [rsi+0x150],0x1
  0x00007f003f2b10dc: movabs rdx,0x6715948d8    ;   {oop(&quot;zip file closed&quot;)}
  0x00007f003f2b10e6: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@13 (line 669)

  0x00007f003f2b10e9: mov    QWORD PTR [rsp+0x30],rax
  0x00007f003f2b10ee: nop
  0x00007f003f2b10ef: call   0x00007f003f1c4d60  ; OopMap{[48]=Oop off=372}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@13 (line 669)
                                                ;   {optimized virtual_call}
  0x00007f003f2b10f4: mov    rax,QWORD PTR [rsp+0x30]
  0x00007f003f2b10f9: jmp    0x00007f003f2b118c
  0x00007f003f2b10fe: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b1103: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b110b: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=400}
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipFile::ensureOpen@-1 (line 668)
                                                ;   {runtime_call}
  0x00007f003f2b1110: jmp    0x00007f003f2b0fde
  0x00007f003f2b1115: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2b111f: mov    eax,0xa050f00
  0x00007f003f2b1124: call   0x00007f003f27c5e0  ; OopMap{off=425}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@26 (line 673)
                                                ;   {runtime_call}
  0x00007f003f2b1129: jmp    0x00007f003f2b1070
  0x00007f003f2b112e: mov    rdx,rdx
  0x00007f003f2b1131: call   0x00007f003f2794a0  ; OopMap{off=438}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@26 (line 673)
                                                ;   {runtime_call}
  0x00007f003f2b1136: jmp    0x00007f003f2b107f
  0x00007f003f2b113b: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2b1145: mov    eax,0xa050f00
  0x00007f003f2b114a: call   0x00007f003f27c5e0  ; OopMap{off=463}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@7 (line 669)
                                                ;   {runtime_call}
  0x00007f003f2b114f: jmp    0x00007f003f2b10b8
  0x00007f003f2b1154: mov    rdx,rdx
  0x00007f003f2b1157: call   0x00007f003f2794a0  ; OopMap{off=476}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::ensureOpen@7 (line 669)
                                                ;   {runtime_call}
  0x00007f003f2b115c: jmp    0x00007f003f2b10c7
  0x00007f003f2b1161: nop
  0x00007f003f2b1162: nop
  0x00007f003f2b1163: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2b116a: movabs r10,0x0
  0x00007f003f2b1174: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2b117b: movabs r10,0x0
  0x00007f003f2b1185: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2b118c: add    rsp,0x40
  0x00007f003f2b1190: pop    rbp
  0x00007f003f2b1191: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2b1196: hlt    
  0x00007f003f2b1197: hlt    
  0x00007f003f2b1198: hlt    
  0x00007f003f2b1199: hlt    
  0x00007f003f2b119a: hlt    
  0x00007f003f2b119b: hlt    
  0x00007f003f2b119c: hlt    
  0x00007f003f2b119d: hlt    
  0x00007f003f2b119e: hlt    
  0x00007f003f2b119f: hlt    
[Stub Code]
  0x00007f003f2b11a0: nop                       ;   {no_reloc}
  0x00007f003f2b11a1: nop
  0x00007f003f2b11a2: nop
  0x00007f003f2b11a3: nop
  0x00007f003f2b11a4: nop
  0x00007f003f2b11a5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b11af: jmp    0x00007f003f2b11af  ;   {runtime_call}
  0x00007f003f2b11b4: nop
  0x00007f003f2b11b5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b11bf: jmp    0x00007f003f2b11bf  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2b11c4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2b11c9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2b11ce: sub    rsp,0x80
  0x00007f003f2b11d5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2b11da: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2b11df: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2b11e4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2b11e9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2b11ee: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2b11f3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2b11f8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2b11fd: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2b1202: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2b1207: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2b120c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2b1211: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2b1216: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2b121b: mov    QWORD PTR [rsp],r15
  0x00007f003f2b121f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2b1229: movabs rsi,0x7f003f2b11c9  ;   {internal_word}
  0x00007f003f2b1233: mov    rdx,rsp
  0x00007f003f2b1236: and    rsp,0xfffffffffffffff0
  0x00007f003f2b123a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2b123f: hlt    
[Deopt Handler Code]
  0x00007f003f2b1240: movabs r10,0x7f003f2b1240  ;   {section_word}
  0x00007f003f2b124a: push   r10
  0x00007f003f2b124c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2b1251: hlt    
  0x00007f003f2b1252: hlt    
  0x00007f003f2b1253: hlt    
  0x00007f003f2b1254: hlt    
  0x00007f003f2b1255: hlt    
  0x00007f003f2b1256: hlt    
  0x00007f003f2b1257: hlt    
<nmethod compile_id='85' compiler='C1' level='3' entry='0x00007f003f2b0f80' size='1608' address='0x00007f003f2b0dd0' relocation_offset='312' insts_offset='432' stub_offset='976' scopes_data_offset='1168' scopes_pcs_offset='1280' dependencies_offset='1600' metadata_offset='1160' method='java/util/zip/ZipFile ensureOpen ()V' bytes='37' count='666' iicount='666' stamp='0.369'/>
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.meta.PlatformKind from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.meta.ValueKind$IllegalKind from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<task_queued compile_id='90' method='sun/misc/URLClassPath$JarLoader getResource (Ljava/lang/String;Z)Lsun/misc/Resource;' bytes='85' count='512' iicount='512' level='3' stamp='0.370' comment='tiered' hot_count='512'/>
[Loaded jdk.vm.ci.meta.PlatformKind$Key from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.meta.PlatformKind$EnumKey from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<task_queued compile_id='91' method='java/util/Arrays copyOf ([CI)[C' bytes='19' count='819' iicount='819' level='3' stamp='0.370' comment='tiered' hot_count='819'/>
[Loaded jdk.vm.ci.hotspot.HotSpotJVMCIRuntime$DelayedInit from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.common.InitTimer from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.hotspot.CompilerToVM from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/zip/ZipCoder.getBytes  [0x00007f003f2b1c60, 0x00007f003f2b42f8]  9880 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;
  # this:     rsi:rsi   = &apos;java/ut
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.HotSpotVMConfigStore from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
il/zip/ZipCoder&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x180]  (sp of caller)
  0x00007f003f2b1c60: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2b1c64: shl    r10,0x3
  0x00007f003f2b1c68: cmp    r10,rax
  0x00007f003f2b1c6b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2b1c71: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2b1c7c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2b1c80: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2b1c87: push   rbp
  0x00007f003f2b1c88: sub    rsp,0x170
  0x00007f003f2b1c8f: mov    QWORD PTR [rsp+0xf0],rsi
  0x00007f003f2b1c97: movabs rdi,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b1ca1: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2b1ca7: add    ebx,0x8
  0x00007f003f2b1caa: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2b1cb0: movabs rdi,0x7f0038a48f20  ;   {metadata({method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b1cba: and    ebx,0x1ff8
  0x00007f003f2b1cc0: cmp    ebx,0x0
  0x00007f003f2b1cc3: je     0x00007f003f2b3d81  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@0 (line 77)

  0x00007f003f2b1cc9: mov    rdi,rsi
  0x00007f003f2b1ccc: movabs rbx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b1cd6: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f2b1cde: movabs rdi,0x7f0038a59b88  ;   {metadata(method data for {method} {0x00007f0038a49480} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b1ce8: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2b1cee: add    ebx,0x8
  0x00007f003f2b1cf1: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2b1cf7: movabs rdi,0x7f0038a49480  ;   {metadata({method} {0x00007f0038a49480} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b1d01: and    ebx,0x7ffff8
  0x00007f003f2b1d07: cmp    ebx,0x0
  0x00007f003f2b1d0a: je     0x00007f003f2b3d98
  0x00007f003f2b1d10: mov    edi,DWORD PTR [rsi+0x18]
  0x00007f003f2b1d13: shl    rdi,0x3            ;*getfield enc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@1 (line 152)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x00007f003f2b1d17: cmp    rdi,0x0
  0x00007f003f2b1d1b: movabs rdi,0x7f0038a59b88  ;   {metadata(method data for {method} {0x00007f0038a49480} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b1d25: movabs rbx,0x130
  0x00007f003f2b1d2f: jne    0x00007f003f2b1d3f
  0x00007f003f2b1d35: movabs rbx,0x140
  0x00007f003f2b1d3f: mov    rax,QWORD PTR [rdi+rbx*1]
  0x00007f003f2b1d43: lea    rax,[rax+0x1]
  0x00007f003f2b1d47: mov    QWORD PTR [rdi+rbx*1],rax
  0x00007f003f2b1d4b: mov    QWORD PTR [rsp+0xf8],rdx
  0x00007f003f2b1d53: jne    0x00007f003f2b24db  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@4 (line 152)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x00007f003f2b1d59: mov    edi,DWORD PTR [rsi+0x10]
  0x00007f003f2b1d5c: shl    rdi,0x3            ;*getfield cs {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@9 (line 153)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x00007f003f2b1d60: cmp    rax,QWORD PTR [rdi]  ; implicit exception: dispatches to 0x00007f003f2b3daf
  0x00007f003f2b1d63: mov    rbx,rdi
  0x00007f003f2b1d66: movabs rax,0x7f0038a59b88  ;   {metadata(method data for {method} {0x00007f0038a49480} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b1d70: mov    ebx,DWORD PTR [rbx+0x8]
  0x00007f003f2b1d73: shl    rbx,0x3
  0x00007f003f2b1d77: cmp    rbx,QWORD PTR [rax+0x160]
  0x00007f003f2b1d7e: jne    0x00007f003f2b1d8d
  0x00007f003f2b1d80: add    QWORD PTR [rax+0x168],0x1
  0x00007f003f2b1d88: jmp    0x00007f003f2b1f4f
  0x00007f003f2b1d8d: cmp    rbx,QWORD PTR [rax+0x170]
  0x00007f003f2b1d94: jne    0x00007f003f2b1da3
  0x00007f003f2b1d96: add    QWORD PTR [rax+0x178],0x1
  0x00007f003f2b1d9e: jmp    0x00007f003f2b1f4f
  0x00007f003f2b1da3: cmp    rbx,QWORD PTR [rax+0x180]
  0x00007f003f2b1daa: jne    0x00007f003f2b1db9
  0x00007f003f2b1dac: add    QWORD PTR [rax+0x188],0x1
  0x00007f003f2b1db4: jmp    0x00007f003f2b1f4f
  0x00007f003f2b1db9: cmp    rbx,QWORD PTR [rax+0x190]
  0x00007f003f2b1dc0: jne    0x00007f003f2b1dcf
  0x00007f003f2b1dc2: add    QWORD PTR [rax+0x198],0x1
  0x00007f003f2b1dca: jmp    0x00007f003f2b1f4f
  0x00007f003f2b1dcf: cmp    rbx,QWORD PTR [rax+0x1a0]
  0x00007f003f2b1dd6: jne    0x00007f003f2b1de5
  0x00007f003f2b1dd8: add    QWORD PTR [rax+0x1a8],0x1
  0x00007f003f2b1de0: jmp    0x00007f003f2b1f4f
  0x00007f003f2b1de5: cmp    rbx,QWORD PTR [rax+0x1b0]
  0x00007f003f2b1dec: jne    0x00007f003f2b1dfb
  0x00007f003f2b1dee: add    QWORD PTR [rax+0x1b8],0x1
  0x00007f003f2b1df6: jmp    0x00007f003f2b1f4f
  0x00007f003f2b1dfb: cmp    rbx,QWORD PTR [rax+0x1c0]
  0x00007f003f2b1e02: jne    0x00007f003f2b1e11
  0x00007f003f2b1e04: add    QWORD PTR [rax+0x1c8],0x1
  0x00007f003f2b1e0c: jmp    0x00007f003f2b1f4f
  0x00007f003f2b1e11: cmp    rbx,QWORD PTR [rax+0x1d0]
  0x00007f003f2b1e18: jne    0x00007f003f2b1e27
  0x00007f003f2b1e1a: add    QWORD PTR [rax+0x1d8],0x1
  0x00007f003f2b1e22: jmp    0x00007f003f2b1f4f
  0x00007f003f2b1e27: cmp    QWORD PTR [rax+0x160],0x0
  0x00007f003f2b1e32: jne    0x00007f003f2b1e4b
  0x00007f003f2b1e34: mov    QWORD PTR [rax+0x160],rbx
  0x00007f003f2b1e3b: mov    QWORD PTR [rax+0x168],0x1
  0x00007f003f2b1e46: jmp    0x00007f003f2b1f4f
  0x00007f003f2b1e4b: cmp    QWORD PTR [rax+0x170],0x0
  0x00007f003f2b1e56: jne    0x00007f003f2b1e6f
  0x00007f003f2b1e58: mov    QWORD PTR [rax+0x170],rbx
  0x00007f003f2b1e5f: mov    QWORD PTR [rax+0x178],0x1
  0x00007f003f2b1e6a: jmp    0x00007f003f2b1f4f
  0x00007f003f2b1e6f: cmp    QWORD PTR [rax+0x180],0x0
  0x00007f003f2b1e7a: jne    0x00007f003f2b1e93
  0x00007f003f2b1e7c: mov    QWORD PTR [rax+0x180],rbx
  0x00007f003f2b1e83: mov    QWORD PTR [rax+0x188],0x1
  0x00007f003f2b1e8e: jmp    0x00007f003f2b1f4f
  0x00007f003f2b1e93: cmp    QWORD PTR [rax+0x190],0x0
  0x00007f003f2b1e9e: jne    0x00007f003f2b1eb7
  0x00007f003f2b1ea0: mov    QWORD PTR [rax+0x190],rbx
  0x00007f003f2b1ea7: mov    QWORD PTR [rax+0x198],0x1
  0x00007f003f2b1eb2: jmp    0x00007f003f2b1f4f
  0x00007f003f2b1eb7: cmp    QWORD PTR [rax+0x1a0],0x0
  0x00007f003f2b1ec2: jne    0x00007f003f2b1edb
  0x00007f003f2b1ec4: mov    QWORD PTR [rax+0x1a0],rbx
  0x00007f003f2b1ecb: mov    QWORD PTR [rax+0x1a8],0x1
  0x00007f003f2b1ed6: jmp    0x00007f003f2b1f4f
  0x00007f003f2b1edb: cmp    QWORD PTR [rax+0x1b0],0x0
  0x00007f003f2b1ee6: jne    0x00007f003f2b1eff
  0x00007f003f2b1ee8: mov    QWORD PTR [rax+0x1b0],rbx
  0x00007f003f2b1eef: mov    QWORD PTR [rax+0x1b8],0x1
  0x00007f003f2b1efa: jmp    0x00007f003f2b1f4f
  0x00007f003f2b1eff: cmp    QWORD PTR [rax+0x1c0],0x0
  0x00007f003f2b1f0a: jne    0x00007f003f2b1f23
  0x00007f003f2b1f0c: mov    QWORD PTR [rax+0x1c0],rbx
  0x00007f003f2b1f13: mov    QWORD PTR [rax+0x1c8],0x1
  0x00007f003f2b1f1e: jmp    0x00007f003f2b1f4f
  0x00007f003f2b1f23: cmp    QWORD PTR [rax+0x1d0],0x0
  0x00007f003f2b1f2e: jne    0x00007f003f2b1f47
  0x00007f003f2b1f30: mov    QWORD PTR [rax+0x1d0],rbx
  0x00007f003f2b1f37: mov    QWORD PTR [rax+0x1d8],0x1
  0x00007f003f2b1f42: jmp    0x00007f003f2b1f4f
  0x00007f003f2b1f47: add    QWORD PTR [rax+0x150],0x1
  0x00007f003f2b1f4f: mov    rsi,rdi            ;*invokevirtual newEncoder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@12 (line 153)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x00007f003f2b1f52: nop
  0x00007f003f2b1f53: nop
  0x00007f003f2b1f54: nop
  0x00007f003f2b1f55: movabs rax,0xffffffffffffffff
  0x00007f003f2b1f5f: call   0x00007f003f1c4f60  ; OopMap{[240]=Oop [248]=Oop off=772}
                                                ;*invokevirtual newEncoder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@12 (line 153)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)
                                                ;   {virtual_call}
  0x00007f003f2b1f64: cmp    rax,QWORD PTR [rax]  ;*invokevirtual onMalformedInput {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)
                                                ; implicit exception: dispatches to 0x00007f003f2b3db4
  0x00007f003f2b1f67: mov    rbx,rax
  0x00007f003f2b1f6a: movabs rdx,0x7f0038a59b88  ;   {metadata(method data for {method} {0x00007f0038a49480} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b1f74: add    QWORD PTR [rdx+0x1e8],0x1
  0x00007f003f2b1f7c: movabs rbx,0x7f0038a61430  ;   {metadata(method data for {method} {0x00007f00388dfac0} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b1f86: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f2b1f8c: add    edx,0x8
  0x00007f003f2b1f8f: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f2b1f95: movabs rbx,0x7f00388dfac0  ;   {metadata({method} {0x00007f00388dfac0} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b1f9f: and    edx,0x7ffff8
  0x00007f003f2b1fa5: cmp    edx,0x0
  0x00007f003f2b1fa8: je     0x00007f003f2b3db9
  0x00007f003f2b1fae: movabs rbx,0x7f0038a61430  ;   {metadata(method data for {method} {0x00007f00388dfac0} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b1fb8: inc    DWORD PTR [rbx+0x130]  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@1 (line 382)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x00007f003f2b1fbe: movabs rbx,0x670b96908    ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00007f003f2b1fc8: movabs r10,0x670b96908    ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00007f003f2b1fd2: shr    r10,0x3
  0x00007f003f2b1fd6: mov    DWORD PTR [rax+0x20],r10d
  0x00007f003f2b1fda: mov    rbx,rax
  0x00007f003f2b1fdd: shr    rbx,0x9
  0x00007f003f2b1fe1: movabs rdx,0x7f003ae7c000
  0x00007f003f2b1feb: mov    BYTE PTR [rbx+rdx*1],0x0  ;*putfield malformedInputAction {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@16 (line 384)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x00007f003f2b1fef: mov    rbx,rax
  0x00007f003f2b1ff2: movabs rdx,0x7f0038a61430  ;   {metadata(method data for {method} {0x00007f00388dfac0} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b1ffc: mov    ebx,DWORD PTR [rbx+0x8]
  0x00007f003f2b1fff: shl    rbx,0x3
  0x00007f003f2b2003: cmp    rbx,QWORD PTR [rdx+0x170]
  0x00007f003f2b200a: jne    0x00007f003f2b2019
  0x00007f003f2b200c: add    QWORD PTR [rdx+0x178],0x1
  0x00007f003f2b2014: jmp    0x00007f003f2b21db
  0x00007f003f2b2019: cmp    rbx,QWORD PTR [rdx+0x180]
  0x00007f003f2b2020: jne    0x00007f003f2b202f
  0x00007f003f2b2022: add    QWORD PTR [rdx+0x188],0x1
  0x00007f003f2b202a: jmp    0x00007f003f2b21db
  0x00007f003f2b202f: cmp    rbx,QWORD PTR [rdx+0x190]
  0x00007f003f2b2036: jne    0x00007f003f2b2045
  0x00007f003f2b2038: add    QWORD PTR [rdx+0x198],0x1
  0x00007f003f2b2040: jmp    0x00007f003f2b21db
  0x00007f003f2b2045: cmp    rbx,QWORD PTR [rdx+0x1a0]
  0x00007f003f2b204c: jne    0x00007f003f2b205b
  0x00007f003f2b204e: add    QWORD PTR [rdx+0x1a8],0x1
  0x00007f003f2b2056: jmp    0x00007f003f2b21db
  0x00007f003f2b205b: cmp    rbx,QWORD PTR [rdx+0x1b0]
  0x00007f003f2b2062: jne    0x00007f003f2b2071
  0x00007f003f2b2064: add    QWORD PTR [rdx+0x1b8],0x1
  0x00007f003f2b206c: jmp    0x00007f003f2b21db
  0x00007f003f2b2071: cmp    rbx,QWORD PTR [rdx+0x1c0]
  0x00007f003f2b2078: jne    0x00007f003f2b2087
  0x00007f003f2b207a: add    QWORD PTR [rdx+0x1c8],0x1
  0x00007f003f2b2082: jmp    0x00007f003f2b21db
  0x00007f003f2b2087: cmp    rbx,QWORD PTR [rdx+0x1d0]
  0x00007f003f2b208e: jne    0x00007f003f2b209d
  0x00007f003f2b2090: add    QWORD PTR [rdx+0x1d8],0x1
  0x00007f003f2b2098: jmp    0x00007f003f2b21db
  0x00007f003f2b209d: cmp    rbx,QWORD PTR [rdx+0x1e0]
  0x00007f003f2b20a4: jne    0x00007f003f2b20b3
  0x00007f003f2b20a6: add    QWORD PTR [rdx+0x1e8],0x1
  0x00007f003f2b20ae: jmp    0x00007f003f2b21db
  0x00007f003f2b20b3: cmp    QWORD PTR [rdx+0x170],0x0
  0x00007f003f2b20be: jne    0x00007f003f2b20d7
  0x00007f003f2b20c0: mov    QWORD PTR [rdx+0x170],rbx
  0x00007f003f2b20c7: mov    QWORD PTR [rdx+0x178],0x1
  0x00007f003f2b20d2: jmp    0x00007f003f2b21db
  0x00007f003f2b20d7: cmp    QWORD PTR [rdx+0x180],0x0
  0x00007f003f2b20e2: jne    0x00007f003f2b20fb
  0x00007f003f2b20e4: mov    QWORD PTR [rdx+0x180],rbx
  0x00007f003f2b20eb: mov    QWORD PTR [rdx+0x188],0x1
  0x00007f003f2b20f6: jmp    0x00007f003f2b21db
  0x00007f003f2b20fb: cmp    QWORD PTR [rdx+0x190],0x0
  0x00007f003f2b2106: jne    0x00007f003f2b211f
  0x00007f003f2b2108: mov    QWORD PTR [rdx+0x190],rbx
  0x00007f003f2b210f: mov    QWORD PTR [rdx+0x198],0x1
  0x00007f003f2b211a: jmp    0x00007f003f2b21db
  0x00007f003f2b211f: cmp    QWORD PTR [rdx+0x1a0],0x0
  0x00007f003f2b212a: jne    0x00007f003f2b2143
  0x00007f003f2b212c: mov    QWORD PTR [rdx+0x1a0],rbx
  0x00007f003f2b2133: mov    QWORD PTR [rdx+0x1a8],0x1
  0x00007f003f2b213e: jmp    0x00007f003f2b21db
  0x00007f003f2b2143: cmp    QWORD PTR [rdx+0x1b0],0x0
  0x00007f003f2b214e: jne    0x00007f003f2b2167
  0x00007f003f2b2150: mov    QWORD PTR [rdx+0x1b0],rbx
  0x00007f003f2b2157: mov    QWORD PTR [rdx+0x1b8],0x1
  0x00007f003f2b2162: jmp    0x00007f003f2b21db
  0x00007f003f2b2167: cmp    QWORD PTR [rdx+0x1c0],0x0
  0x00007f003f2b2172: jne    0x00007f003f2b218b
  0x00007f003f2b2174: mov    QWORD PTR [rdx+0x1c0],rbx
  0x00007f003f2b217b: mov    QWORD PTR [rdx+0x1c8],0x1
  0x00007f003f2b2186: jmp    0x00007f003f2b21db
  0x00007f003f2b218b: cmp    QWORD PTR [rdx+0x1d0],0x0
  0x00007f003f2b2196: jne    0x00007f003f2b21af
  0x00007f003f2b2198: mov    QWORD PTR [rdx+0x1d0],rbx
  0x00007f003f2b219f: mov    QWORD PTR [rdx+0x1d8],0x1
  0x00007f003f2b21aa: jmp    0x00007f003f2b21db
  0x00007f003f2b21af: cmp    QWORD PTR [rdx+0x1e0],0x0
  0x00007f003f2b21ba: jne    0x00007f003f2b21d3
  0x00007f003f2b21bc: mov    QWORD PTR [rdx+0x1e0],rbx
  0x00007f003f2b21c3: mov    QWORD PTR [rdx+0x1e8],0x1
  0x00007f003f2b21ce: jmp    0x00007f003f2b21db
  0x00007f003f2b21d3: add    QWORD PTR [rdx+0x160],0x1
  0x00007f003f2b21db: movabs rbx,0x7f0038a61670  ;   {metadata(method data for {method} {0x00007f00388dfb68} &apos;implOnMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b21e5: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f2b21eb: add    edx,0x8
  0x00007f003f2b21ee: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f2b21f4: movabs rbx,0x7f00388dfb68  ;   {metadata({method} {0x00007f00388dfb68} &apos;implOnMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b21fe: and    edx,0x7ffff8
  0x00007f003f2b2204: cmp    edx,0x0
  0x00007f003f2b2207: je     0x00007f003f2b3dd0
  0x00007f003f2b220d: mov    rbx,rax
  0x00007f003f2b2210: movabs rdx,0x7f0038a59b88  ;   {metadata(method data for {method} {0x00007f0038a49480} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b221a: add    QWORD PTR [rdx+0x280],0x1
  0x00007f003f2b2222: movabs rbx,0x7f0038a617c0  ;   {metadata(method data for {method} {0x00007f00388dfcd0} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b222c: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f2b2232: add    edx,0x8
  0x00007f003f2b2235: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f2b223b: movabs rbx,0x7f00388dfcd0  ;   {metadata({method} {0x00007f00388dfcd0} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b2245: and    edx,0x7ffff8
  0x00007f003f2b224b: cmp    edx,0x0
  0x00007f003f2b224e: je     0x00007f003f2b3de7
  0x00007f003f2b2254: movabs rbx,0x7f0038a617c0  ;   {metadata(method data for {method} {0x00007f00388dfcd0} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b225e: inc    DWORD PTR [rbx+0x130]  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@1 (line 426)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x00007f003f2b2264: movabs rbx,0x670b96908    ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00007f003f2b226e: movabs r10,0x670b96908    ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00007f003f2b2278: shr    r10,0x3
  0x00007f003f2b227c: mov    DWORD PTR [rax+0x24],r10d
  0x00007f003f2b2280: mov    rbx,rax
  0x00007f003f2b2283: shr    rbx,0x9
  0x00007f003f2b2287: movabs rdx,0x7f003ae7c000
  0x00007f003f2b2291: mov    BYTE PTR [rbx+rdx*1],0x0  ;*putfield unmappableCharacterAction {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@16 (line 428)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x00007f003f2b2295: mov    rbx,rax
  0x00007f003f2b2298: movabs rdx,0x7f0038a617c0  ;   {metadata(method data for {method} {0x00007f00388dfcd0} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b22a2: mov    ebx,DWORD PTR [rbx+0x8]
  0x00007f003f2b22a5: shl    rbx,0x3
  0x00007f003f2b22a9: cmp    rbx,QWORD PTR [rdx+0x170]
  0x00007f003f2b22b0: jne    0x00007f003f2b22bf
  0x00007f003f2b22b2: add    QWORD PTR [rdx+0x178],0x1
  0x00007f003f2b22ba: jmp    0x00007f003f2b2481
  0x00007f003f2b22bf: cmp    rbx,QWORD PTR [rdx+0x180]
  0x00007f003f2b22c6: jne    0x00007f003f2b22d5
  0x00007f003f2b22c8: add    QWORD PTR [rdx+0x188],0x1
  0x00007f003f2b22d0: jmp    0x00007f003f2b2481
  0x00007f003f2b22d5: cmp    rbx,QWORD PTR [rdx+0x190]
  0x00007f003f2b22dc: jne    0x00007f003f2b22eb
  0x00007f003f2b22de: add    QWORD PTR [rdx+0x198],0x1
  0x00007f003f2b22e6: jmp    0x00007f003f2b2481
  0x00007f003f2b22eb: cmp    rbx,QWORD PTR [rdx+0x1a0]
  0x00007f003f2b22f2: jne    0x00007f003f2b2301
  0x00007f003f2b22f4: add    QWORD PTR [rdx+0x1a8],0x1
  0x00007f003f2b22fc: jmp    0x00007f003f2b2481
  0x00007f003f2b2301: cmp    rbx,QWORD PTR [rdx+0x1b0]
  0x00007f003f2b2308: jne    0x00007f003f2b2317
  0x00007f003f2b230a: add    QWORD PTR [rdx+0x1b8],0x1
  0x00007f003f2b2312: jmp    0x00007f003f2b2481
  0x00007f003f2b2317: cmp    rbx,QWORD PTR [rdx+0x1c0]
  0x00007f003f2b231e: jne    0x00007f003f2b232d
  0x00007f003f2b2320: add    QWORD PTR [rdx+0x1c8],0x1
  0x00007f003f2b2328: jmp    0x00007f003f2b2481
  0x00007f003f2b232d: cmp    rbx,QWORD PTR [rdx+0x1d0]
  0x00007f003f2b2334: jne    0x00007f003f2b2343
  0x00007f003f2b2336: add    QWORD PTR [rdx+0x1d8],0x1
  0x00007f003f2b233e: jmp    0x00007f003f2b2481
  0x00007f003f2b2343: cmp    rbx,QWORD PTR [rdx+0x1e0]
  0x00007f003f2b234a: jne    0x00007f003f2b2359
  0x00007f003f2b234c: add    QWORD PTR [rdx+0x1e8],0x1
  0x00007f003f2b2354: jmp    0x00007f003f2b2481
  0x00007f003f2b2359: cmp    QWORD PTR [rdx+0x170],0x0
  0x00007f003f2b2364: jne    0x00007f003f2b237d
  0x00007f003f2b2366: mov    QWORD PTR [rdx+0x170],rbx
  0x00007f003f2b236d: mov    QWORD PTR [rdx+0x178],0x1
  0x00007f003f2b2378: jmp    0x00007f003f2b2481
  0x00007f003f2b237d: cmp    QWORD PTR [rdx+0x180],0x0
  0x00007f003f2b2388: jne    0x00007f003f2b23a1
  0x00007f003f2b238a: mov    QWORD PTR [rdx+0x180],rbx
  0x00007f003f2b2391: mov    QWORD PTR [rdx+0x188],0x1
  0x00007f003f2b239c: jmp    0x00007f003f2b2481
  0x00007f003f2b23a1: cmp    QWORD PTR [rdx+0x190],0x0
  0x00007f003f2b23ac: jne    0x00007f003f2b23c5
  0x00007f003f2b23ae: mov    QWORD PTR [rdx+0x190],rbx
  0x00007f003f2b23b5: mov    QWORD PTR [rdx+0x198],0x1
  0x00007f003f2b23c0: jmp    0x00007f003f2b2481
  0x00007f003f2b23c5: cmp    QWORD PTR [rdx+0x1a0],0x0
  0x00007f003f2b23d0: jne    0x00007f003f2b23e9
  0x00007f003f2b23d2: mov    QWORD PTR [rdx+0x1a0],rbx
  0x00007f003f2b23d9: mov    QWORD PTR [rdx+0x1a8],0x1
  0x00007f003f2b23e4: jmp    0x00007f003f2b2481
  0x00007f003f2b23e9: cmp    QWORD PTR [rdx+0x1b0],0x0
  0x00007f003f2b23f4: jne    0x00007f003f2b240d
  0x00007f003f2b23f6: mov    QWORD PTR [rdx+0x1b0],rbx
  0x00007f003f2b23fd: mov    QWORD PTR [rdx+0x1b8],0x1
  0x00007f003f2b2408: jmp    0x00007f003f2b2481
  0x00007f003f2b240d: cmp    QWORD PTR [rdx+0x1c0],0x0
  0x00007f003f2b2418: jne    0x00007f003f2b2431
  0x00007f003f2b241a: mov    QWORD PTR [rdx+0x1c0],rbx
  0x00007f003f2b2421: mov    QWORD PTR [rdx+0x1c8],0x1
  0x00007f003f2b242c: jmp    0x00007f003f2b2481
  0x00007f003f2b2431: cmp    QWORD PTR [rdx+0x1d0],0x0
  0x00007f003f2b243c: jne    0x00007f003f2b2455
  0x00007f003f2b243e: mov    QWORD PTR [rdx+0x1d0],rbx
  0x00007f003f2b2445: mov    QWORD PTR [rdx+0x1d8],0x1
  0x00007f003f2b2450: jmp    0x00007f003f2b2481
  0x00007f003f2b2455: cmp    QWORD PTR [rdx+0x1e0],0x0
  0x00007f003f2b2460: jne    0x00007f003f2b2479
  0x00007f003f2b2462: mov    QWORD PTR [rdx+0x1e0],rbx
  0x00007f003f2b2469: mov    QWORD PTR [rdx+0x1e8],0x1
  0x00007f003f2b2474: jmp    0x00007f003f2b2481
  0x00007f003f2b2479: add    QWORD PTR [rdx+0x160],0x1
  0x00007f003f2b2481: movabs rbx,0x7f0038a61a00  ;   {metadata(method data for {method} {0x00007f00388dfd78} &apos;implOnUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b248b: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f2b2491: add    edx,0x8
  0x00007f003f2b2494: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f2b249a: movabs rbx,0x7f00388dfd78  ;   {metadata({method} {0x00007f00388dfd78} &apos;implOnUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b24a4: and    edx,0x7ffff8
  0x00007f003f2b24aa: cmp    edx,0x0
  0x00007f003f2b24ad: je     0x00007f003f2b3dfe
  0x00007f003f2b24b3: mov    rsi,QWORD PTR [rsp+0xf0]
  0x00007f003f2b24bb: mov    r10,rax
  0x00007f003f2b24be: shr    r10,0x3
  0x00007f003f2b24c2: mov    DWORD PTR [rsi+0x18],r10d
  0x00007f003f2b24c6: mov    rbx,rsi
  0x00007f003f2b24c9: shr    rbx,0x9
  0x00007f003f2b24cd: movabs rdx,0x7f003ae7c000
  0x00007f003f2b24d7: mov    BYTE PTR [rbx+rdx*1],0x0  ;*putfield enc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@27 (line 155)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x00007f003f2b24db: mov    r11d,DWORD PTR [rsi+0x18]
  0x00007f003f2b24df: shl    r11,0x3            ;*getfield enc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@31 (line 157)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)

  0x00007f003f2b24e3: mov    QWORD PTR [rsp+0x108],r11
  0x00007f003f2b24eb: mov    r8,QWORD PTR [rsp+0xf8]
  0x00007f003f2b24f3: cmp    rax,QWORD PTR [r11]  ;*invokevirtual reset {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@4 (line 77)
                                                ; implicit exception: dispatches to 0x00007f003f2b3e15
  0x00007f003f2b24f6: mov    rbx,r11
  0x00007f003f2b24f9: movabs rdx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b2503: add    QWORD PTR [rdx+0x140],0x1
  0x00007f003f2b250b: movabs rbx,0x7f0038a58220  ;   {metadata(method data for {method} {0x00007f00388e0358} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b2515: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f2b251b: add    edx,0x8
  0x00007f003f2b251e: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f2b2524: movabs rbx,0x7f00388e0358  ;   {metadata({method} {0x00007f00388e0358} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b252e: and    edx,0x7ffff8
  0x00007f003f2b2534: cmp    edx,0x0
  0x00007f003f2b2537: je     0x00007f003f2b3e1a
  0x00007f003f2b253d: mov    rbx,r11
  0x00007f003f2b2540: movabs rdx,0x7f0038a58220  ;   {metadata(method data for {method} {0x00007f00388e0358} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b254a: mov    ebx,DWORD PTR [rbx+0x8]
  0x00007f003f2b254d: shl    rbx,0x3
  0x00007f003f2b2551: cmp    rbx,QWORD PTR [rdx+0x140]
  0x00007f003f2b2558: jne    0x00007f003f2b2567
  0x00007f003f2b255a: add    QWORD PTR [rdx+0x148],0x1
  0x00007f003f2b2562: jmp    0x00007f003f2b2729
  0x00007f003f2b2567: cmp    rbx,QWORD PTR [rdx+0x150]
  0x00007f003f2b256e: jne    0x00007f003f2b257d
  0x00007f003f2b2570: add    QWORD PTR [rdx+0x158],0x1
  0x00007f003f2b2578: jmp    0x00007f003f2b2729
  0x00007f003f2b257d: cmp    rbx,QWORD PTR [rdx+0x160]
  0x00007f003f2b2584: jne    0x00007f003f2b2593
  0x00007f003f2b2586: add    QWORD PTR [rdx+0x168],0x1
  0x00007f003f2b258e: jmp    0x00007f003f2b2729
  0x00007f003f2b2593: cmp    rbx,QWORD PTR [rdx+0x170]
  0x00007f003f2b259a: jne    0x00007f003f2b25a9
  0x00007f003f2b259c: add    QWORD PTR [rdx+0x178],0x1
  0x00007f003f2b25a4: jmp    0x00007f003f2b2729
  0x00007f003f2b25a9: cmp    rbx,QWORD PTR [rdx+0x180]
  0x00007f003f2b25b0: jne    0x00007f003f2b25bf
  0x00007f003f2b25b2: add    QWORD PTR [rdx+0x188],0x1
  0x00007f003f2b25ba: jmp    0x00007f003f2b2729
  0x00007f003f2b25bf: cmp    rbx,QWORD PTR [rdx+0x190]
  0x00007f003f2b25c6: jne    0x00007f003f2b25d5
  0x00007f003f2b25c8: add    QWORD PTR [rdx+0x198],0x1
  0x00007f003f2b25d0: jmp    0x00007f003f2b2729
  0x00007f003f2b25d5: cmp    rbx,QWORD PTR [rdx+0x1a0]
  0x00007f003f2b25dc: jne    0x00007f003f2b25eb
  0x00007f003f2b25de: add    QWORD PTR [rdx+0x1a8],0x1
  0x00007f003f2b25e6: jmp    0x00007f003f2b2729
  0x00007f003f2b25eb: cmp    rbx,QWORD PTR [rdx+0x1b0]
  0x00007f003f2b25f2: jne    0x00007f003f2b2601
  0x00007f003f2b25f4: add    QWORD PTR [rdx+0x1b8],0x1
  0x00007f003f2b25fc: jmp    0x00007f003f2b2729
  0x00007f003f2b2601: cmp    QWORD PTR [rdx+0x140],0x0
  0x00007f003f2b260c: jne    0x00007f003f2b2625
  0x00007f003f2b260e: mov    QWORD PTR [rdx+0x140],rbx
  0x00007f003f2b2615: mov    QWORD PTR [rdx+0x148],0x1
  0x00007f003f2b2620: jmp    0x00007f003f2b2729
  0x00007f003f2b2625: cmp    QWORD PTR [rdx+0x150],0x0
  0x00007f003f2b2630: jne    0x00007f003f2b2649
  0x00007f003f2b2632: mov    QWORD PTR [rdx+0x150],rbx
  0x00007f003f2b2639: mov    QWORD PTR [rdx+0x158],0x1
  0x00007f003f2b2644: jmp    0x00007f003f2b2729
  0x00007f003f2b2649: cmp    QWORD PTR [rdx+0x160],0x0
  0x00007f003f2b2654: jne    0x00007f003f2b266d
  0x00007f003f2b2656: mov    QWORD PTR [rdx+0x160],rbx
  0x00007f003f2b265d: mov    QWORD PTR [rdx+0x168],0x1
  0x00007f003f2b2668: jmp    0x00007f003f2b2729
  0x00007f003f2b266d: cmp    QWORD PTR [rdx+0x170],0x0
  0x00007f003f2b2678: jne    0x00007f003f2b2691
  0x00007f003f2b267a: mov    QWORD PTR [rdx+0x170],rbx
  0x00007f003f2b2681: mov    QWORD PTR [rdx+0x178],0x1
  0x00007f003f2b268c: jmp    0x00007f003f2b2729
  0x00007f003f2b2691: cmp    QWORD PTR [rdx+0x180],0x0
  0x00007f003f2b269c: jne    0x00007f003f2b26b5
  0x00007f003f2b269e: mov    QWORD PTR [rdx+0x180],rbx
  0x00007f003f2b26a5: mov    QWORD PTR [rdx+0x188],0x1
  0x00007f003f2b26b0: jmp    0x00007f003f2b2729
  0x00007f003f2b26b5: cmp    QWORD PTR [rdx+0x190],0x0
  0x00007f003f2b26c0: jne    0x00007f003f2b26d9
  0x00007f003f2b26c2: mov    QWORD PTR [rdx+0x190],rbx
  0x00007f003f2b26c9: mov    QWORD PTR [rdx+0x198],0x1
  0x00007f003f2b26d4: jmp    0x00007f003f2b2729
  0x00007f003f2b26d9: cmp    QWORD PTR [rdx+0x1a0],0x0
  0x00007f003f2b26e4: jne    0x00007f003f2b26fd
  0x00007f003f2b26e6: mov    QWORD PTR [rdx+0x1a0],rbx
  0x00007f003f2b26ed: mov    QWORD PTR [rdx+0x1a8],0x1
  0x00007f003f2b26f8: jmp    0x00007f003f2b2729
  0x00007f003f2b26fd: cmp    QWORD PTR [rdx+0x1b0],0x0
  0x00007f003f2b2708: jne    0x00007f003f2b2721
  0x00007f003f2b270a: mov    QWORD PTR [rdx+0x1b0],rbx
  0x00007f003f2b2711: mov    QWORD PTR [rdx+0x1b8],0x1
  0x00007f003f2b271c: jmp    0x00007f003f2b2729
  0x00007f003f2b2721: add    QWORD PTR [rdx+0x130],0x1
  0x00007f003f2b2729: movabs rbx,0x7f0038a58428  ;   {metadata(method data for {method} {0x00007f00388e03f8} &apos;implReset&apos; &apos;()V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b2733: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f2b2739: add    edx,0x8
  0x00007f003f2b273c: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f2b2742: movabs rbx,0x7f00388e03f8  ;   {metadata({method} {0x00007f00388e03f8} &apos;implReset&apos; &apos;()V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b274c: and    edx,0x7ffff8
  0x00007f003f2b2752: cmp    edx,0x0
  0x00007f003f2b2755: je     0x00007f003f2b3e31
  0x00007f003f2b275b: mov    DWORD PTR [r11+0x14],0x0  ;*putfield state {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::reset@6 (line 710)
                                                ; - java.util.zip.ZipCoder::getBytes@4 (line 77)

  0x00007f003f2b2763: cmp    rax,QWORD PTR [r8]  ;*invokevirtual toCharArray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)
                                                ; implicit exception: dispatches to 0x00007f003f2b3e48
  0x00007f003f2b2766: mov    rdx,r8
  0x00007f003f2b2769: movabs rbx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b2773: add    QWORD PTR [rbx+0x1d8],0x1
  0x00007f003f2b277b: movabs rbx,0x7f0038a57c38  ;   {metadata(method data for {method} {0x00007f003876e640} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2b2785: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f2b278b: add    edx,0x8
  0x00007f003f2b278e: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f2b2794: movabs rbx,0x7f003876e640  ;   {metadata({method} {0x00007f003876e640} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2b279e: and    edx,0x7ffff8
  0x00007f003f2b27a4: cmp    edx,0x0
  0x00007f003f2b27a7: je     0x00007f003f2b3e4d
  0x00007f003f2b27ad: mov    r9d,DWORD PTR [r8+0xc]
  0x00007f003f2b27b1: shl    r9,0x3             ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@1 (line 2899)
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)

  0x00007f003f2b27b5: mov    r13d,DWORD PTR [r9+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@4 (line 2899)
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)
                                                ; implicit exception: dispatches to 0x00007f003f2b3e64
  0x00007f003f2b27b9: mov    rbx,r13
  0x00007f003f2b27bc: movabs rdx,0x7c00001f8    ;   {metadata({type array char})}
  0x00007f003f2b27c6: movsxd rbx,ebx
  0x00007f003f2b27c9: mov    rdi,rbx
  0x00007f003f2b27cc: cmp    rbx,0xffffff
  0x00007f003f2b27d3: ja     0x00007f003f2b3e69
  0x00007f003f2b27d9: movabs rsi,0x17
  0x00007f003f2b27e3: lea    rsi,[rsi+rbx*2]
  0x00007f003f2b27e7: and    rsi,0xfffffffffffffff8
  0x00007f003f2b27eb: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2b27ef: lea    rsi,[rax+rsi*1]
  0x00007f003f2b27f3: cmp    rsi,QWORD PTR [r15+0x70]
  0x00007f003f2b27f7: ja     0x00007f003f2b3e69
  0x00007f003f2b27fd: mov    QWORD PTR [r15+0x60],rsi
  0x00007f003f2b2801: sub    rsi,rax
  0x00007f003f2b2804: mov    QWORD PTR [rax],0x1
  0x00007f003f2b280b: mov    rcx,rdx
  0x00007f003f2b280e: shr    rcx,0x3
  0x00007f003f2b2812: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2b2815: mov    DWORD PTR [rax+0xc],ebx
  0x00007f003f2b2818: sub    rsi,0x10
  0x00007f003f2b281c: je     0x00007f003f2b2833
  0x00007f003f2b2822: xor    rbx,rbx
  0x00007f003f2b2825: shr    rsi,0x3
  0x00007f003f2b2829: mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x00007f003f2b282e: dec    rsi
  0x00007f003f2b2831: jne    0x00007f003f2b2829  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@5 (line 2899)
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)

  0x00007f003f2b2833: mov    QWORD PTR [rsp+0x100],rax
  0x00007f003f2b283b: movabs rsi,0x7f0038a57c38  ;   {metadata(method data for {method} {0x00007f003876e640} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2b2845: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2b284d: mov    rsi,r9
  0x00007f003f2b2850: mov    edx,0x0
  0x00007f003f2b2855: mov    rcx,rax
  0x00007f003f2b2858: mov    r8d,0x0
  0x00007f003f2b285e: mov    r9,r13
  0x00007f003f2b2861: lea    rdi,[r8+r9*1]
  0x00007f003f2b2865: cmp    edi,DWORD PTR [rcx+0xc]
  0x00007f003f2b2868: ja     0x00007f003f2b3e73
  0x00007f003f2b286e: movsxd rdx,edx
  0x00007f003f2b2871: movsxd r8,r8d
  0x00007f003f2b2874: lea    rdi,[rsi+rdx*2+0x10]
  0x00007f003f2b2879: lea    rsi,[rcx+r8*2+0x10]
  0x00007f003f2b287e: mov    rdx,r9
  0x00007f003f2b2881: test   esp,0xf
  0x00007f003f2b2887: je     0x00007f003f2b289f
  0x00007f003f2b288d: sub    rsp,0x8
  0x00007f003f2b2891: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007f003f2b2896: add    rsp,0x8
  0x00007f003f2b289a: jmp    0x00007f003f2b28a4
  0x00007f003f2b289f: call   Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@20 (line 2900)
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)
                                                ;   {runtime_call}
  0x00007f003f2b28a4: mov    rax,QWORD PTR [rsp+0x100]
  0x00007f003f2b28ac: mov    r11d,DWORD PTR [rax+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@14 (line 79)

  0x00007f003f2b28b0: mov    rbx,QWORD PTR [rsp+0x108]
  0x00007f003f2b28b8: movabs rdx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b28c2: add    QWORD PTR [rdx+0x270],0x1
  0x00007f003f2b28ca: vcvtsi2ss xmm0,xmm0,r11d
  0x00007f003f2b28cf: movabs rbx,0x7f0038a57748  ;   {metadata(method data for {method} {0x00007f00388dfeb8} &apos;maxBytesPerChar&apos; &apos;()F&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b28d9: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f2b28df: add    edx,0x8
  0x00007f003f2b28e2: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f2b28e8: movabs rbx,0x7f00388dfeb8  ;   {metadata({method} {0x00007f00388dfeb8} &apos;maxBytesPerChar&apos; &apos;()F&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b28f2: and    edx,0x7ffff8
  0x00007f003f2b28f8: cmp    edx,0x0
  0x00007f003f2b28fb: je     0x00007f003f2b3e81
  0x00007f003f2b2901: mov    r13,QWORD PTR [rsp+0x108]
  0x00007f003f2b2909: vmovss xmm1,DWORD PTR [r13+0x10]
                                                ;*getfield maxBytesPerChar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::maxBytesPerChar@1 (line 465)
                                                ; - java.util.zip.ZipCoder::getBytes@17 (line 79)

  0x00007f003f2b290f: vmulss xmm0,xmm0,xmm1
  0x00007f003f2b2913: vcvttss2si r8d,xmm0
  0x00007f003f2b2917: cmp    r8d,0x80000000
  0x00007f003f2b291e: je     0x00007f003f2b3e98
  0x00007f003f2b2924: mov    rbx,r8
  0x00007f003f2b2927: movabs rdx,0x7c0000768    ;   {metadata({type array byte})}
  0x00007f003f2b2931: movsxd rbx,ebx
  0x00007f003f2b2934: mov    rdi,rbx
  0x00007f003f2b2937: cmp    rbx,0xffffff
  0x00007f003f2b293e: ja     0x00007f003f2b3eb1
  0x00007f003f2b2944: movabs rsi,0x17
  0x00007f003f2b294e: lea    rsi,[rsi+rbx*1]
  0x00007f003f2b2952: and    rsi,0xfffffffffffffff8
  0x00007f003f2b2956: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2b295a: lea    rsi,[rax+rsi*1]
  0x00007f003f2b295e: cmp    rsi,QWORD PTR [r15+0x70]
  0x00007f003f2b2962: ja     0x00007f003f2b3eb1
  0x00007f003f2b2968: mov    QWORD PTR [r15+0x60],rsi
  0x00007f003f2b296c: sub    rsi,rax
  0x00007f003f2b296f: mov    QWORD PTR [rax],0x1
  0x00007f003f2b2976: mov    rcx,rdx
  0x00007f003f2b2979: shr    rcx,0x3
  0x00007f003f2b297d: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2b2980: mov    DWORD PTR [rax+0xc],ebx
  0x00007f003f2b2983: sub    rsi,0x10
  0x00007f003f2b2987: je     0x00007f003f2b299e
  0x00007f003f2b298d: xor    rbx,rbx
  0x00007f003f2b2990: shr    rsi,0x3
  0x00007f003f2b2994: mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x00007f003f2b2999: dec    rsi
  0x00007f003f2b299c: jne    0x00007f003f2b2994  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@26 (line 80)

  0x00007f003f2b299e: mov    QWORD PTR [rsp+0x110],rax
  0x00007f003f2b29a6: cmp    r8d,0x0
  0x00007f003f2b29aa: movabs rdx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b29b4: movabs rsi,0x308
  0x00007f003f2b29be: jne    0x00007f003f2b29ce
  0x00007f003f2b29c4: movabs rsi,0x318
  0x00007f003f2b29ce: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2b29d2: lea    rdi,[rdi+0x1]
  0x00007f003f2b29d6: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2b29da: je     0x00007f003f2b3a18  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@32 (line 81)

  0x00007f003f2b29e0: mov    rsi,QWORD PTR [rsp+0xf0]
  0x00007f003f2b29e8: movsx  edx,BYTE PTR [rsi+0xc]  ;*getfield isUTF8 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@39 (line 85)

  0x00007f003f2b29ec: cmp    edx,0x0
  0x00007f003f2b29ef: movabs rdx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b29f9: movabs rsi,0x328
  0x00007f003f2b2a03: je     0x00007f003f2b2a13
  0x00007f003f2b2a09: movabs rsi,0x338
  0x00007f003f2b2a13: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2b2a17: lea    rdi,[rdi+0x1]
  0x00007f003f2b2a1b: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2b2a1f: je     0x00007f003f2b2cc6  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@42 (line 85)

  0x00007f003f2b2a25: cmp    r13,0x0
  0x00007f003f2b2a29: jne    0x00007f003f2b2a44
  0x00007f003f2b2a2b: movabs rdi,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b2a35: or     DWORD PTR [rdi+0x340],0x100
  0x00007f003f2b2a3f: jmp    0x00007f003f2b2c7e
  0x00007f003f2b2a44: movabs rcx,0x7c00279a8    ;   {metadata(&apos;sun/nio/cs/ArrayEncoder&apos;)}
  0x00007f003f2b2a4e: mov    edi,DWORD PTR [r13+0x8]
  0x00007f003f2b2a52: shl    rdi,0x3
  0x00007f003f2b2a56: cmp    rcx,QWORD PTR [rdi+0x18]
  0x00007f003f2b2a5a: je     0x00007f003f2b2a7b
  0x00007f003f2b2a60: cmp    rdi,rcx
  0x00007f003f2b2a63: je     0x00007f003f2b2a7b
  0x00007f003f2b2a69: push   rdi
  0x00007f003f2b2a6a: push   rcx
  0x00007f003f2b2a6b: call   0x00007f003f27b720  ;   {runtime_call}
  0x00007f003f2b2a70: pop    rdi
  0x00007f003f2b2a71: pop    rdi
  0x00007f003f2b2a72: cmp    edi,0x0
  0x00007f003f2b2a75: je     0x00007f003f2b2c62
  0x00007f003f2b2a7b: movabs rdi,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b2a85: mov    ecx,DWORD PTR [r13+0x8]
  0x00007f003f2b2a89: shl    rcx,0x3
  0x00007f003f2b2a8d: cmp    rcx,QWORD PTR [rdi+0x358]
  0x00007f003f2b2a94: jne    0x00007f003f2b2aa3
  0x00007f003f2b2a96: add    QWORD PTR [rdi+0x360],0x1
  0x00007f003f2b2a9e: jmp    0x00007f003f2b2c83
  0x00007f003f2b2aa3: cmp    rcx,QWORD PTR [rdi+0x368]
  0x00007f003f2b2aaa: jne    0x00007f003f2b2ab9
  0x00007f003f2b2aac: add    QWORD PTR [rdi+0x370],0x1
  0x00007f003f2b2ab4: jmp    0x00007f003f2b2c83
  0x00007f003f2b2ab9: cmp    rcx,QWORD PTR [rdi+0x378]
  0x00007f003f2b2ac0: jne    0x00007f003f2b2acf
  0x00007f003f2b2ac2: add    QWORD PTR [rdi+0x380],0x1
  0x00007f003f2b2aca: jmp    0x00007f003f2b2c83
  0x00007f003f2b2acf: cmp    rcx,QWORD PTR [rdi+0x388]
  0x00007f003f2b2ad6: jne    0x00007f003f2b2ae5
  0x00007f003f2b2ad8: add    QWORD PTR [rdi+0x390],0x1
  0x00007f003f2b2ae0: jmp    0x00007f003f2b2c83
  0x00007f003f2b2ae5: cmp    rcx,QWORD PTR [rdi+0x398]
  0x00007f003f2b2aec: jne    0x00007f003f2b2afb
  0x00007f003f2b2aee: add    QWORD PTR [rdi+0x3a0],0x1
  0x00007f003f2b2af6: jmp    0x00007f003f2b2c83
  0x00007f003f2b2afb: cmp    rcx,QWORD PTR [rdi+0x3a8]
  0x00007f003f2b2b02: jne    0x00007f003f2b2b11
  0x00007f003f2b2b04: add    QWORD PTR [rdi+0x3b0],0x1
  0x00007f003f2b2b0c: jmp    0x00007f003f2b2c83
  0x00007f003f2b2b11: cmp    rcx,QWORD PTR [rdi+0x3b8]
  0x00007f003f2b2b18: jne    0x00007f003f2b2b27
  0x00007f003f2b2b1a: add    QWORD PTR [rdi+0x3c0],0x1
  0x00007f003f2b2b22: jmp    0x00007f003f2b2c83
  0x00007f003f2b2b27: cmp    rcx,QWORD PTR [rdi+0x3c8]
  0x00007f003f2b2b2e: jne    0x00007f003f2b2b3d
  0x00007f003f2b2b30: add    QWORD PTR [rdi+0x3d0],0x1
  0x00007f003f2b2b38: jmp    0x00007f003f2b2c83
  0x00007f003f2b2b3d: cmp    QWORD PTR [rdi+0x358],0x0
  0x00007f003f2b2b48: jne    0x00007f003f2b2b61
  0x00007f003f2b2b4a: mov    QWORD PTR [rdi+0x358],rcx
  0x00007f003f2b2b51: mov    QWORD PTR [rdi+0x360],0x1
  0x00007f003f2b2b5c: jmp    0x00007f003f2b2c83
  0x00007f003f2b2b61: cmp    QWORD PTR [rdi+0x368],0x0
  0x00007f003f2b2b6c: jne    0x00007f003f2b2b85
  0x00007f003f2b2b6e: mov    QWORD PTR [rdi+0x368],rcx
  0x00007f003f2b2b75: mov    QWORD PTR [rdi+0x370],0x1
  0x00007f003f2b2b80: jmp    0x00007f003f2b2c83
  0x00007f003f2b2b85: cmp    QWORD PTR [rdi+0x378],0x0
  0x00007f003f2b2b90: jne    0x00007f003f2b2ba9
  0x00007f003f2b2b92: mov    QWORD PTR [rdi+0x378],rcx
  0x00007f003f2b2b99: mov    QWORD PTR [rdi+0x380],0x1
  0x00007f003f2b2ba4: jmp    0x00007f003f2b2c83
  0x00007f003f2b2ba9: cmp    QWORD PTR [rdi+0x388],0x0
  0x00007f003f2b2bb4: jne    0x00007f003f2b2bcd
  0x00007f003f2b2bb6: mov    QWORD PTR [rdi+0x388],rcx
  0x00007f003f2b2bbd: mov    QWORD PTR [rdi+0x390],0x1
  0x00007f003f2b2bc8: jmp    0x00007f003f2b2c83
  0x00007f003f2b2bcd: cmp    QWORD PTR [rdi+0x398],0x0
  0x00007f003f2b2bd8: jne    0x00007f003f2b2bf1
  0x00007f003f2b2bda: mov    QWORD PTR [rdi+0x398],rcx
  0x00007f003f2b2be1: mov    QWORD PTR [rdi+0x3a0],0x1
  0x00007f003f2b2bec: jmp    0x00007f003f2b2c83
  0x00007f003f2b2bf1: cmp    QWORD PTR [rdi+0x3a8],0x0
  0x00007f003f2b2bfc: jne    0x00007f003f2b2c15
  0x00007f003f2b2bfe: mov    QWORD PTR [rdi+0x3a8],rcx
  0x00007f003f2b2c05: mov    QWORD PTR [rdi+0x3b0],0x1
  0x00007f003f2b2c10: jmp    0x00007f003f2b2c83
  0x00007f003f2b2c15: cmp    QWORD PTR [rdi+0x3b8],0x0
  0x00007f003f2b2c20: jne    0x00007f003f2b2c39
  0x00007f003f2b2c22: mov    QWORD PTR [rdi+0x3b8],rcx
  0x00007f003f2b2c29: mov    QWORD PTR [rdi+0x3c0],0x1
  0x00007f003f2b2c34: jmp    0x00007f003f2b2c83
  0x00007f003f2b2c39: cmp    QWORD PTR [rdi+0x3c8],0x0
  0x00007f003f2b2c44: jne    0x00007f003f2b2c5d
  0x00007f003f2b2c46: mov    QWORD PTR [rdi+0x3c8],rcx
  0x00007f003f2b2c4d: mov    QWORD PTR [rdi+0x3d0],0x1
  0x00007f003f2b2c58: jmp    0x00007f003f2b2c83
  0x00007f003f2b2c5d: jmp    0x00007f003f2b2c83
  0x00007f003f2b2c62: movabs rdi,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b2c6c: sub    QWORD PTR [rdi+0x348],0x1
  0x00007f003f2b2c74: jmp    0x00007f003f2b2c7e
  0x00007f003f2b2c79: jmp    0x00007f003f2b2c83
  0x00007f003f2b2c7e: xor    rdx,rdx
  0x00007f003f2b2c81: jmp    0x00007f003f2b2c8d
  0x00007f003f2b2c83: movabs rdx,0x1            ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@46 (line 85)

  0x00007f003f2b2c8d: cmp    edx,0x0
  0x00007f003f2b2c90: movabs rdx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b2c9a: movabs rsi,0x3e0
  0x00007f003f2b2ca4: je     0x00007f003f2b2cb4
  0x00007f003f2b2caa: movabs rsi,0x3f0
  0x00007f003f2b2cb4: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2b2cb8: lea    rdi,[rdi+0x1]
  0x00007f003f2b2cbc: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2b2cc0: jne    0x00007f003f2b344a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@49 (line 85)

  0x00007f003f2b2cc6: mov    DWORD PTR [rsp+0x118],r11d
  0x00007f003f2b2cce: movabs rdx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b2cd8: add    QWORD PTR [rdx+0x570],0x1
  0x00007f003f2b2ce0: movabs rdx,0x7f0038a61b50  ;   {metadata(method data for {method} {0x00007f00388e2d68} &apos;wrap&apos; &apos;([B)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00007f003f2b2cea: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2b2cf0: add    esi,0x8
  0x00007f003f2b2cf3: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2b2cf9: movabs rdx,0x7f00388e2d68  ;   {metadata({method} {0x00007f00388e2d68} &apos;wrap&apos; &apos;([B)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00007f003f2b2d03: and    esi,0x7ffff8
  0x00007f003f2b2d09: cmp    esi,0x0
  0x00007f003f2b2d0c: je     0x00007f003f2b3ebb
  0x00007f003f2b2d12: mov    r14d,DWORD PTR [rax+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.ByteBuffer::wrap@3 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)

  0x00007f003f2b2d16: movabs rdx,0x7f0038a61b50  ;   {metadata(method data for {method} {0x00007f00388e2d68} &apos;wrap&apos; &apos;([B)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00007f003f2b2d20: add    QWORD PTR [rdx+0x130],0x1
  0x00007f003f2b2d28: movabs rdx,0x7f0038a61cd0  ;   {metadata(method data for {method} {0x00007f00388e2cc0} &apos;wrap&apos; &apos;([BII)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00007f003f2b2d32: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2b2d38: add    esi,0x8
  0x00007f003f2b2d3b: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2b2d41: movabs rdx,0x7f00388e2cc0  ;   {metadata({method} {0x00007f00388e2cc0} &apos;wrap&apos; &apos;([BII)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00007f003f2b2d4b: and    esi,0x7ffff8
  0x00007f003f2b2d51: cmp    esi,0x0
  0x00007f003f2b2d54: je     0x00007f003f2b3ed2
  0x00007f003f2b2d5a: movabs rdx,0x7c00283d8    ;   {metadata(&apos;java/nio/HeapByteBuffer&apos;)}
  0x00007f003f2b2d64: mov    r9,rax
  0x00007f003f2b2d67: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2b2d6b: lea    rdi,[rax+0x30]
  0x00007f003f2b2d6f: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2b2d73: ja     0x00007f003f2b3ee9
  0x00007f003f2b2d79: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2b2d7d: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2b2d84: mov    QWORD PTR [rax],rcx
  0x00007f003f2b2d87: mov    rcx,rdx
  0x00007f003f2b2d8a: shr    rcx,0x3
  0x00007f003f2b2d8e: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2b2d91: xor    rcx,rcx
  0x00007f003f2b2d94: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2b2d97: xor    rcx,rcx
  0x00007f003f2b2d9a: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f2b2d9e: mov    QWORD PTR [rax+0x18],rcx
  0x00007f003f2b2da2: mov    QWORD PTR [rax+0x20],rcx
  0x00007f003f2b2da6: mov    QWORD PTR [rax+0x28],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.ByteBuffer::wrap@0 (line 373)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)

  0x00007f003f2b2daa: mov    QWORD PTR [rsp+0x120],rax
  0x00007f003f2b2db2: mov    rdx,rax
  0x00007f003f2b2db5: movabs rcx,0x7f0038a61cd0  ;   {metadata(method data for {method} {0x00007f00388e2cc0} &apos;wrap&apos; &apos;([BII)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00007f003f2b2dbf: add    QWORD PTR [rcx+0x130],0x1
  0x00007f003f2b2dc7: movabs rdx,0x7f0038a61e60  ;   {metadata(method data for {method} {0x00007f00388e6858} &apos;&lt;init&gt;&apos; &apos;([BII)V&apos; in &apos;java/nio/HeapByteBuffer&apos;)}
  0x00007f003f2b2dd1: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2b2dd7: add    ecx,0x8
  0x00007f003f2b2dda: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2b2de0: movabs rdx,0x7f00388e6858  ;   {metadata({method} {0x00007f00388e6858} &apos;&lt;init&gt;&apos; &apos;([BII)V&apos; in &apos;java/nio/HeapByteBuffer&apos;)}
  0x00007f003f2b2dea: and    ecx,0x7ffff8
  0x00007f003f2b2df0: cmp    ecx,0x0
  0x00007f003f2b2df3: je     0x00007f003f2b3ef6
  0x00007f003f2b2df9: mov    rdx,rax
  0x00007f003f2b2dfc: movabs rcx,0x7f0038a61e60  ;   {metadata(method data for {method} {0x00007f00388e6858} &apos;&lt;init&gt;&apos; &apos;([BII)V&apos; in &apos;java/nio/HeapByteBuffer&apos;)}
  0x00007f003f2b2e06: add    QWORD PTR [rcx+0x130],0x1
  0x00007f003f2b2e0e: mov    edx,0xffffffff
  0x00007f003f2b2e13: mov    ecx,0x0
  0x00007f003f2b2e18: mov    r8,r14
  0x00007f003f2b2e1b: mov    rsi,r9
  0x00007f003f2b2e1e: mov    r9,r14
  0x00007f003f2b2e21: mov    rdi,rsi
  0x00007f003f2b2e24: mov    DWORD PTR [rsp],0x0
  0x00007f003f2b2e2b: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.HeapByteBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.ByteBuffer::wrap@7 (line 373)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)

  0x00007f003f2b2e2e: mov    DWORD PTR [rsp+0x11c],r14d
  0x00007f003f2b2e36: nop
  0x00007f003f2b2e37: call   0x00007f003f1c4d60  ; OopMap{[272]=Oop [288]=Oop [264]=Oop [256]=Oop off=4572}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.HeapByteBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.ByteBuffer::wrap@7 (line 373)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)
                                                ;   {optimized virtual_call}
  0x00007f003f2b2e3c: movabs rdx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b2e46: add    QWORD PTR [rdx+0x580],0x1
  0x00007f003f2b2e4e: movabs rdx,0x7f0038a621d8  ;   {metadata(method data for {method} {0x00007f00389224e8} &apos;wrap&apos; &apos;([C)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00007f003f2b2e58: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2b2e5e: add    esi,0x8
  0x00007f003f2b2e61: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2b2e67: movabs rdx,0x7f00389224e8  ;   {metadata({method} {0x00007f00389224e8} &apos;wrap&apos; &apos;([C)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00007f003f2b2e71: and    esi,0x7ffff8
  0x00007f003f2b2e77: cmp    esi,0x0
  0x00007f003f2b2e7a: je     0x00007f003f2b3f0d
  0x00007f003f2b2e80: movabs rdx,0x7f0038a621d8  ;   {metadata(method data for {method} {0x00007f00389224e8} &apos;wrap&apos; &apos;([C)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00007f003f2b2e8a: add    QWORD PTR [rdx+0x130],0x1
  0x00007f003f2b2e92: movabs rdx,0x7f0038a62800  ;   {metadata(method data for {method} {0x00007f0038922440} &apos;wrap&apos; &apos;([CII)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00007f003f2b2e9c: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2b2ea2: add    esi,0x8
  0x00007f003f2b2ea5: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2b2eab: movabs rdx,0x7f0038922440  ;   {metadata({method} {0x00007f0038922440} &apos;wrap&apos; &apos;([CII)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00007f003f2b2eb5: and    esi,0x7ffff8
  0x00007f003f2b2ebb: cmp    esi,0x0
  0x00007f003f2b2ebe: je     0x00007f003f2b3f24
  0x00007f003f2b2ec4: movabs rdx,0x7c0030970    ;   {metadata(&apos;java/nio/HeapCharBuffer&apos;)}
  0x00007f003f2b2ece: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2b2ed2: lea    rdi,[rax+0x30]
  0x00007f003f2b2ed6: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2b2eda: ja     0x00007f003f2b3f3b
  0x00007f003f2b2ee0: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2b2ee4: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2b2eeb: mov    QWORD PTR [rax],rcx
  0x00007f003f2b2eee: mov    rcx,rdx
  0x00007f003f2b2ef1: shr    rcx,0x3
  0x00007f003f2b2ef5: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2b2ef8: xor    rcx,rcx
  0x00007f003f2b2efb: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2b2efe: xor    rcx,rcx
  0x00007f003f2b2f01: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f2b2f05: mov    QWORD PTR [rax+0x18],rcx
  0x00007f003f2b2f09: mov    QWORD PTR [rax+0x20],rcx
  0x00007f003f2b2f0d: mov    QWORD PTR [rax+0x28],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::wrap@0 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)

  0x00007f003f2b2f11: mov    rdx,rax
  0x00007f003f2b2f14: movabs rcx,0x7f0038a62800  ;   {metadata(method data for {method} {0x00007f0038922440} &apos;wrap&apos; &apos;([CII)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00007f003f2b2f1e: add    QWORD PTR [rcx+0x130],0x1
  0x00007f003f2b2f26: movabs rdx,0x7f0038a62990  ;   {metadata(method data for {method} {0x00007f0038925570} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/nio/HeapCharBuffer&apos;)}
  0x00007f003f2b2f30: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2b2f36: add    ecx,0x8
  0x00007f003f2b2f39: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2b2f3f: movabs rdx,0x7f0038925570  ;   {metadata({method} {0x00007f0038925570} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/nio/HeapCharBuffer&apos;)}
  0x00007f003f2b2f49: and    ecx,0x7ffff8
  0x00007f003f2b2f4f: cmp    ecx,0x0
  0x00007f003f2b2f52: je     0x00007f003f2b3f48
  0x00007f003f2b2f58: mov    rdx,rax
  0x00007f003f2b2f5b: movabs rcx,0x7f0038a62990  ;   {metadata(method data for {method} {0x00007f0038925570} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/nio/HeapCharBuffer&apos;)}
  0x00007f003f2b2f65: add    QWORD PTR [rcx+0x130],0x1
  0x00007f003f2b2f6d: movabs rdx,0x7f0038a62b10  ;   {metadata(method data for {method} {0x00007f00389221d0} &apos;&lt;init&gt;&apos; &apos;(IIII[CI)V&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00007f003f2b2f77: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2b2f7d: add    ecx,0x8
  0x00007f003f2b2f80: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2b2f86: movabs rdx,0x7f00389221d0  ;   {metadata({method} {0x00007f00389221d0} &apos;&lt;init&gt;&apos; &apos;(IIII[CI)V&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00007f003f2b2f90: and    ecx,0x7ffff8
  0x00007f003f2b2f96: cmp    ecx,0x0
  0x00007f003f2b2f99: je     0x00007f003f2b3f5f
  0x00007f003f2b2f9f: mov    rdx,rax
  0x00007f003f2b2fa2: movabs rcx,0x7f0038a62b10  ;   {metadata(method data for {method} {0x00007f00389221d0} &apos;&lt;init&gt;&apos; &apos;(IIII[CI)V&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00007f003f2b2fac: add    QWORD PTR [rcx+0x130],0x1
  0x00007f003f2b2fb4: mov    edx,0xffffffff
  0x00007f003f2b2fb9: mov    ecx,0x0
  0x00007f003f2b2fbe: mov    r8d,DWORD PTR [rsp+0x118]
  0x00007f003f2b2fc6: mov    r9d,DWORD PTR [rsp+0x118]
  0x00007f003f2b2fce: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::&lt;init&gt;@6 (line 281)
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)

  0x00007f003f2b2fd1: mov    QWORD PTR [rsp+0x128],rax
  0x00007f003f2b2fd9: nop
  0x00007f003f2b2fda: nop
  0x00007f003f2b2fdb: nop
  0x00007f003f2b2fdc: nop
  0x00007f003f2b2fdd: nop
  0x00007f003f2b2fde: nop
  0x00007f003f2b2fdf: call   0x00007f003f1c4d60  ; OopMap{[272]=Oop [288]=Oop [264]=Oop [296]=Oop [256]=Oop off=4996}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::&lt;init&gt;@6 (line 281)
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)
                                                ;   {optimized virtual_call}
  0x00007f003f2b2fe4: mov    rdx,QWORD PTR [rsp+0x128]
  0x00007f003f2b2fec: mov    rax,QWORD PTR [rsp+0x100]
  0x00007f003f2b2ff4: mov    r10,rax
  0x00007f003f2b2ff7: shr    r10,0x3
  0x00007f003f2b2ffb: mov    DWORD PTR [rdx+0x2c],r10d
  0x00007f003f2b2fff: mov    rax,rdx
  0x00007f003f2b3002: shr    rax,0x9
  0x00007f003f2b3006: movabs rcx,0x7f003ae7c000
  0x00007f003f2b3010: mov    BYTE PTR [rax+rcx*1],0x0  ;*putfield hb {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::&lt;init&gt;@12 (line 282)
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)

  0x00007f003f2b3014: mov    DWORD PTR [rdx+0x24],0x0  ;*putfield offset {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::&lt;init&gt;@18 (line 283)
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)

  0x00007f003f2b301b: mov    r11,QWORD PTR [rsp+0x108]
  0x00007f003f2b3023: movabs rcx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b302d: add    QWORD PTR [rcx+0x590],0x1
  0x00007f003f2b3035: mov    rcx,QWORD PTR [rsp+0x120]
  0x00007f003f2b303d: mov    r8d,0x1
  0x00007f003f2b3043: mov    rsi,QWORD PTR [rsp+0x108]
                                                ;*invokevirtual encode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@112 (line 93)

  0x00007f003f2b304b: nop
  0x00007f003f2b304c: nop
  0x00007f003f2b304d: nop
  0x00007f003f2b304e: nop
  0x00007f003f2b304f: call   0x00007f003f1c4d60  ; OopMap{[272]=Oop [288]=Oop [264]=Oop off=5108}
                                                ;*invokevirtual encode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@112 (line 93)
                                                ;   {optimized virtual_call}
  0x00007f003f2b3054: mov    rbx,rax            ;*invokevirtual encode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@112 (line 93)

  0x00007f003f2b3057: cmp    rax,QWORD PTR [rbx]  ;*invokevirtual isUnderflow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@119 (line 94)
                                                ; implicit exception: dispatches to 0x00007f003f2b3f76
  0x00007f003f2b305a: mov    rdx,rbx
  0x00007f003f2b305d: movabs rsi,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b3067: movabs r10,0x7c0030d30    ;   {metadata(&apos;java/nio/charset/CoderResult&apos;)}
  0x00007f003f2b3071: mov    QWORD PTR [rsi+0x638],r10
  0x00007f003f2b3078: add    QWORD PTR [rsi+0x640],0x1
  0x00007f003f2b3080: movabs rdx,0x7f0038a64230  ;   {metadata(method data for {method} {0x00007f00389274f8} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00007f003f2b308a: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2b3090: add    esi,0x8
  0x00007f003f2b3093: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2b3099: movabs rdx,0x7f00389274f8  ;   {metadata({method} {0x00007f00389274f8} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00007f003f2b30a3: and    esi,0x7ffff8
  0x00007f003f2b30a9: cmp    esi,0x0
  0x00007f003f2b30ac: je     0x00007f003f2b3f7b
  0x00007f003f2b30b2: mov    edx,DWORD PTR [rbx+0xc]  ;*getfield type {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CoderResult::isUnderflow@1 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@119 (line 94)

  0x00007f003f2b30b5: cmp    edx,0x0
  0x00007f003f2b30b8: movabs rdx,0x7f0038a64230  ;   {metadata(method data for {method} {0x00007f00389274f8} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00007f003f2b30c2: movabs rsi,0x130
  0x00007f003f2b30cc: jne    0x00007f003f2b30dc
  0x00007f003f2b30d2: movabs rsi,0x140
  0x00007f003f2b30dc: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2b30e0: lea    rdi,[rdi+0x1]
  0x00007f003f2b30e4: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2b30e8: jne    0x00007f003f2b3108  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CoderResult::isUnderflow@4 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@119 (line 94)

  0x00007f003f2b30ee: movabs rdx,0x7f0038a64230  ;   {metadata(method data for {method} {0x00007f00389274f8} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00007f003f2b30f8: inc    DWORD PTR [rdx+0x150]
  0x00007f003f2b30fe: mov    edx,0x1
  0x00007f003f2b3103: jmp    0x00007f003f2b310d  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CoderResult::isUnderflow@8 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@119 (line 94)

  0x00007f003f2b3108: mov    edx,0x0            ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CoderResult::isUnderflow@12 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@119 (line 94)

  0x00007f003f2b310d: and    edx,0x1
  0x00007f003f2b3110: cmp    edx,0x0
  0x00007f003f2b3113: movabs rdx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b311d: movabs rsi,0x6c0
  0x00007f003f2b3127: jne    0x00007f003f2b3137
  0x00007f003f2b312d: movabs rsi,0x6d0
  0x00007f003f2b3137: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2b313b: lea    rdi,[rdi+0x1]
  0x00007f003f2b313f: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2b3143: je     0x00007f003f2b3b71  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@122 (line 94)

  0x00007f003f2b3149: mov    r11,QWORD PTR [rsp+0x108]
  0x00007f003f2b3151: movabs rdx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b315b: add    QWORD PTR [rdx+0x788],0x1
  0x00007f003f2b3163: mov    rdx,QWORD PTR [rsp+0x120]
  0x00007f003f2b316b: mov    rsi,QWORD PTR [rsp+0x108]
                                                ;*invokevirtual flush {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@141 (line 96)

  0x00007f003f2b3173: nop
  0x00007f003f2b3174: nop
  0x00007f003f2b3175: nop
  0x00007f003f2b3176: nop
  0x00007f003f2b3177: call   0x00007f003f1c4d60  ; OopMap{[272]=Oop [288]=Oop off=5404}
                                                ;*invokevirtual flush {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@141 (line 96)
                                                ;   {optimized virtual_call}
  0x00007f003f2b317c: mov    rbx,rax            ;*invokevirtual flush {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@141 (line 96)

  0x00007f003f2b317f: cmp    rax,QWORD PTR [rbx]  ;*invokevirtual isUnderflow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@148 (line 97)
                                                ; implicit exception: dispatches to 0x00007f003f2b3f92
  0x00007f003f2b3182: mov    rdx,rbx
  0x00007f003f2b3185: movabs rsi,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b318f: movabs r10,0x7c0030d30    ;   {metadata(&apos;java/nio/charset/CoderResult&apos;)}
  0x00007f003f2b3199: mov    QWORD PTR [rsi+0x830],r10
  0x00007f003f2b31a0: add    QWORD PTR [rsi+0x838],0x1
  0x00007f003f2b31a8: movabs rdx,0x7f0038a64230  ;   {metadata(method data for {method} {0x00007f00389274f8} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00007f003f2b31b2: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2b31b8: add    esi,0x8
  0x00007f003f2b31bb: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2b31c1: movabs rdx,0x7f00389274f8  ;   {metadata({method} {0x00007f00389274f8} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00007f003f2b31cb: and    esi,0x7ffff8
  0x00007f003f2b31d1: cmp    esi,0x0
  0x00007f003f2b31d4: je     0x00007f003f2b3f97
  0x00007f003f2b31da: mov    edx,DWORD PTR [rbx+0xc]  ;*getfield type {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CoderResult::isUnderflow@1 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@148 (line 97)

  0x00007f003f2b31dd: cmp    edx,0x0
  0x00007f003f2b31e0: movabs rdx,0x7f0038a64230  ;   {metadata(method data for {method} {0x00007f00389274f8} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00007f003f2b31ea: movabs rsi,0x130
  0x00007f003f2b31f4: jne    0x00007f003f2b3204
  0x00007f003f2b31fa: movabs rsi,0x140
  0x00007f003f2b3204: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2b3208: lea    rdi,[rdi+0x1]
  0x00007f003f2b320c: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2b3210: jne    0x00007f003f2b3230  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CoderResult::isUnderflow@4 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@148 (line 97)

  0x00007f003f2b3216: movabs rdx,0x7f0038a64230  ;   {metadata(method data for {method} {0x00007f00389274f8} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00007f003f2b3220: inc    DWORD PTR [rdx+0x150]
  0x00007f003f2b3226: mov    edx,0x1
  0x00007f003f2b322b: jmp    0x00007f003f2b3235  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CoderResult::isUnderflow@8 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@148 (line 97)

  0x00007f003f2b3230: mov    edx,0x0            ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CoderResult::isUnderflow@12 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@148 (line 97)

  0x00007f003f2b3235: and    edx,0x1
  0x00007f003f2b3238: cmp    edx,0x0
  0x00007f003f2b323b: movabs rdx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b3245: movabs rsi,0x8b8
  0x00007f003f2b324f: jne    0x00007f003f2b325f
  0x00007f003f2b3255: movabs rsi,0x8c8
  0x00007f003f2b325f: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2b3263: lea    rdi,[rdi+0x1]
  0x00007f003f2b3267: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2b326b: je     0x00007f003f2b3ab1  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@151 (line 97)

  0x00007f003f2b3271: mov    rax,QWORD PTR [rsp+0x120]
  0x00007f003f2b3279: mov    rbx,rax
  0x00007f003f2b327c: movabs rdx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b3286: add    QWORD PTR [rdx+0x980],0x1
  0x00007f003f2b328e: mov    r8d,DWORD PTR [rax+0x18]  ;*getfield position {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.Buffer::position@1 (line 226)
                                                ; - java.util.zip.ZipCoder::getBytes@169 (line 99)

  0x00007f003f2b3292: cmp    r8d,DWORD PTR [rsp+0x11c]
  0x00007f003f2b329a: movabs rbx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b32a4: movabs rdx,0xa18
  0x00007f003f2b32ae: jne    0x00007f003f2b32be
  0x00007f003f2b32b4: movabs rdx,0xa28
  0x00007f003f2b32be: mov    rsi,QWORD PTR [rbx+rdx*1]
  0x00007f003f2b32c2: lea    rsi,[rsi+0x1]
  0x00007f003f2b32c6: mov    QWORD PTR [rbx+rdx*1],rsi
  0x00007f003f2b32ca: je     0x00007f003f2b39fe  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@175 (line 99)

  0x00007f003f2b32d0: mov    r14d,DWORD PTR [rsp+0x11c]
  0x00007f003f2b32d8: movabs rbx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b32e2: add    QWORD PTR [rbx+0xa38],0x1
  0x00007f003f2b32ea: movabs rbx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b32f4: add    QWORD PTR [rbx+0xad0],0x1
  0x00007f003f2b32fc: movabs rbx,0x7f0038a56f28  ;   {metadata(method data for {method} {0x00007f00388a3410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f2b3306: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f2b330c: add    edx,0x8
  0x00007f003f2b330f: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f2b3315: movabs rbx,0x7f00388a3410  ;   {metadata({method} {0x00007f00388a3410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f2b331f: and    edx,0x7ffff8
  0x00007f003f2b3325: cmp    edx,0x0
  0x00007f003f2b3328: je     0x00007f003f2b3fae
  0x00007f003f2b332e: mov    rbx,r8
  0x00007f003f2b3331: movabs rdx,0x7c0000768    ;   {metadata({type array byte})}
  0x00007f003f2b333b: movsxd rbx,ebx
  0x00007f003f2b333e: mov    rdi,rbx
  0x00007f003f2b3341: cmp    rbx,0xffffff
  0x00007f003f2b3348: ja     0x00007f003f2b3fc5
  0x00007f003f2b334e: movabs rsi,0x17
  0x00007f003f2b3358: lea    rsi,[rsi+rbx*1]
  0x00007f003f2b335c: and    rsi,0xfffffffffffffff8
  0x00007f003f2b3360: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2b3364: lea    rsi,[rax+rsi*1]
  0x00007f003f2b3368: cmp    rsi,QWORD PTR [r15+0x70]
  0x00007f003f2b336c: ja     0x00007f003f2b3fc5
  0x00007f003f2b3372: mov    QWORD PTR [r15+0x60],rsi
  0x00007f003f2b3376: sub    rsi,rax
  0x00007f003f2b3379: mov    QWORD PTR [rax],0x1
  0x00007f003f2b3380: mov    rcx,rdx
  0x00007f003f2b3383: shr    rcx,0x3
  0x00007f003f2b3387: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2b338a: mov    DWORD PTR [rax+0xc],ebx
  0x00007f003f2b338d: sub    rsi,0x10
  0x00007f003f2b3391: je     0x00007f003f2b33a8
  0x00007f003f2b3397: xor    rbx,rbx
  0x00007f003f2b339a: shr    rsi,0x3
  0x00007f003f2b339e: mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x00007f003f2b33a3: dec    rsi
  0x00007f003f2b33a6: jne    0x00007f003f2b339e  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3236)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)

  0x00007f003f2b33a8: movabs rdx,0x7f0038a56f28  ;   {metadata(method data for {method} {0x00007f00388a3410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f2b33b2: add    QWORD PTR [rdx+0x130],0x1
  0x00007f003f2b33ba: movabs rdx,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2b33c4: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2b33ca: add    ecx,0x8
  0x00007f003f2b33cd: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2b33d3: movabs rdx,0x7f003887a8b8  ;   {metadata({method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2b33dd: and    ecx,0x7ffff8
  0x00007f003f2b33e3: cmp    ecx,0x0
  0x00007f003f2b33e6: je     0x00007f003f2b3fcf
  0x00007f003f2b33ec: cmp    r14d,r8d
  0x00007f003f2b33ef: movabs rdx,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2b33f9: movabs rcx,0x130
  0x00007f003f2b3403: jg     0x00007f003f2b3413
  0x00007f003f2b3409: movabs rcx,0x140
  0x00007f003f2b3413: mov    r9,QWORD PTR [rdx+rcx*1]
  0x00007f003f2b3417: lea    r9,[r9+0x1]
  0x00007f003f2b341b: mov    QWORD PTR [rdx+rcx*1],r9
  0x00007f003f2b341f: jg     0x00007f003f2b343a  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)

  0x00007f003f2b3425: movabs rdx,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2b342f: inc    DWORD PTR [rdx+0x150]
  0x00007f003f2b3435: jmp    0x00007f003f2b343d  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)

  0x00007f003f2b343a: mov    r14,r8             ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)

  0x00007f003f2b343d: mov    r9,QWORD PTR [rsp+0x110]
  0x00007f003f2b3445: jmp    0x00007f003f2b395a  ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)

  0x00007f003f2b344a: mov    r8,r11
  0x00007f003f2b344d: mov    rax,QWORD PTR [rsp+0x100]
  0x00007f003f2b3455: mov    r11,r13
  0x00007f003f2b3458: cmp    r11,0x0
  0x00007f003f2b345c: jne    0x00007f003f2b3477
  0x00007f003f2b345e: movabs rcx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b3468: or     DWORD PTR [rcx+0x3f8],0x100
  0x00007f003f2b3472: jmp    0x00007f003f2b36b2
  0x00007f003f2b3477: movabs r9,0x7c00279a8     ;   {metadata(&apos;sun/nio/cs/ArrayEncoder&apos;)}
  0x00007f003f2b3481: mov    ecx,DWORD PTR [r11+0x8]
  0x00007f003f2b3485: shl    rcx,0x3
  0x00007f003f2b3489: cmp    r9,QWORD PTR [rcx+0x18]
  0x00007f003f2b348d: je     0x00007f003f2b34af
  0x00007f003f2b3493: cmp    rcx,r9
  0x00007f003f2b3496: je     0x00007f003f2b34af
  0x00007f003f2b349c: push   rcx
  0x00007f003f2b349d: push   r9
  0x00007f003f2b349f: call   0x00007f003f27b720  ;   {runtime_call}
  0x00007f003f2b34a4: pop    rcx
  0x00007f003f2b34a5: pop    rcx
  0x00007f003f2b34a6: cmp    ecx,0x0
  0x00007f003f2b34a9: je     0x00007f003f2b3696
  0x00007f003f2b34af: movabs rcx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b34b9: mov    r9d,DWORD PTR [r11+0x8]
  0x00007f003f2b34bd: shl    r9,0x3
  0x00007f003f2b34c1: cmp    r9,QWORD PTR [rcx+0x410]
  0x00007f003f2b34c8: jne    0x00007f003f2b34d7
  0x00007f003f2b34ca: add    QWORD PTR [rcx+0x418],0x1
  0x00007f003f2b34d2: jmp    0x00007f003f2b36b2
  0x00007f003f2b34d7: cmp    r9,QWORD PTR [rcx+0x420]
  0x00007f003f2b34de: jne    0x00007f003f2b34ed
  0x00007f003f2b34e0: add    QWORD PTR [rcx+0x428],0x1
  0x00007f003f2b34e8: jmp    0x00007f003f2b36b2
  0x00007f003f2b34ed: cmp    r9,QWORD PTR [rcx+0x430]
  0x00007f003f2b34f4: jne    0x00007f003f2b3503
  0x00007f003f2b34f6: add    QWORD PTR [rcx+0x438],0x1
  0x00007f003f2b34fe: jmp    0x00007f003f2b36b2
  0x00007f003f2b3503: cmp    r9,QWORD PTR [rcx+0x440]
  0x00007f003f2b350a: jne    0x00007f003f2b3519
  0x00007f003f2b350c: add    QWORD PTR [rcx+0x448],0x1
  0x00007f003f2b3514: jmp    0x00007f003f2b36b2
  0x00007f003f2b3519: cmp    r9,QWORD PTR [rcx+0x450]
  0x00007f003f2b3520: jne    0x00007f003f2b352f
  0x00007f003f2b3522: add    QWORD PTR [rcx+0x458],0x1
  0x00007f003f2b352a: jmp    0x00007f003f2b36b2
  0x00007f003f2b352f: cmp    r9,QWORD PTR [rcx+0x460]
  0x00007f003f2b3536: jne    0x00007f003f2b3545
  0x00007f003f2b3538: add    QWORD PTR [rcx+0x468],0x1
  0x00007f003f2b3540: jmp    0x00007f003f2b36b2
  0x00007f003f2b3545: cmp    r9,QWORD PTR [rcx+0x470]
  0x00007f003f2b354c: jne    0x00007f003f2b355b
  0x00007f003f2b354e: add    QWORD PTR [rcx+0x478],0x1
  0x00007f003f2b3556: jmp    0x00007f003f2b36b2
  0x00007f003f2b355b: cmp    r9,QWORD PTR [rcx+0x480]
  0x00007f003f2b3562: jne    0x00007f003f2b3571
  0x00007f003f2b3564: add    QWORD PTR [rcx+0x488],0x1
  0x00007f003f2b356c: jmp    0x00007f003f2b36b2
  0x00007f003f2b3571: cmp    QWORD PTR [rcx+0x410],0x0
  0x00007f003f2b357c: jne    0x00007f003f2b3595
  0x00007f003f2b357e: mov    QWORD PTR [rcx+0x410],r9
  0x00007f003f2b3585: mov    QWORD PTR [rcx+0x418],0x1
  0x00007f003f2b3590: jmp    0x00007f003f2b36b2
  0x00007f003f2b3595: cmp    QWORD PTR [rcx+0x420],0x0
  0x00007f003f2b35a0: jne    0x00007f003f2b35b9
  0x00007f003f2b35a2: mov    QWORD PTR [rcx+0x420],r9
  0x00007f003f2b35a9: mov    QWORD PTR [rcx+0x428],0x1
  0x00007f003f2b35b4: jmp    0x00007f003f2b36b2
  0x00007f003f2b35b9: cmp    QWORD PTR [rcx+0x430],0x0
  0x00007f003f2b35c4: jne    0x00007f003f2b35dd
  0x00007f003f2b35c6: mov    QWORD PTR [rcx+0x430],r9
  0x00007f003f2b35cd: mov    QWORD PTR [rcx+0x438],0x1
  0x00007f003f2b35d8: jmp    0x00007f003f2b36b2
  0x00007f003f2b35dd: cmp    QWORD PTR [rcx+0x440],0x0
  0x00007f003f2b35e8: jne    0x00007f003f2b3601
  0x00007f003f2b35ea: mov    QWORD PTR [rcx+0x440],r9
  0x00007f003f2b35f1: mov    QWORD PTR [rcx+0x448],0x1
  0x00007f003f2b35fc: jmp    0x00007f003f2b36b2
  0x00007f003f2b3601: cmp    QWORD PTR [rcx+0x450],0x0
  0x00007f003f2b360c: jne    0x00007f003f2b3625
  0x00007f003f2b360e: mov    QWORD PTR [rcx+0x450],r9
  0x00007f003f2b3615: mov    QWORD PTR [rcx+0x458],0x1
  0x00007f003f2b3620: jmp    0x00007f003f2b36b2
  0x00007f003f2b3625: cmp    QWORD PTR [rcx+0x460],0x0
  0x00007f003f2b3630: jne    0x00007f003f2b3649
  0x00007f003f2b3632: mov    QWORD PTR [rcx+0x460],r9
  0x00007f003f2b3639: mov    QWORD PTR [rcx+0x468],0x1
  0x00007f003f2b3644: jmp    0x00007f003f2b36b2
  0x00007f003f2b3649: cmp    QWORD PTR [rcx+0x470],0x0
  0x00007f003f2b3654: jne    0x00007f003f2b366d
  0x00007f003f2b3656: mov    QWORD PTR [rcx+0x470],r9
  0x00007f003f2b365d: mov    QWORD PTR [rcx+0x478],0x1
  0x00007f003f2b3668: jmp    0x00007f003f2b36b2
  0x00007f003f2b366d: cmp    QWORD PTR [rcx+0x480],0x0
  0x00007f003f2b3678: jne    0x00007f003f2b3691
  0x00007f003f2b367a: mov    QWORD PTR [rcx+0x480],r9
  0x00007f003f2b3681: mov    QWORD PTR [rcx+0x488],0x1
  0x00007f003f2b368c: jmp    0x00007f003f2b36b2
  0x00007f003f2b3691: jmp    0x00007f003f2b36b2
  0x00007f003f2b3696: movabs rcx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b36a0: sub    QWORD PTR [rcx+0x400],0x1
  0x00007f003f2b36a8: jmp    0x00007f003f2b3fe6
  0x00007f003f2b36ad: jmp    0x00007f003f2b36b2
  0x00007f003f2b36b2: mov    rsi,r11            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@53 (line 86)

  0x00007f003f2b36b5: cmp    rsi,0x0
  0x00007f003f2b36b9: je     0x00007f003f2b36de
  0x00007f003f2b36bf: movabs rdi,0x7c0027dd0    ;   {metadata(&apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00007f003f2b36c9: mov    ecx,DWORD PTR [rsi+0x8]
  0x00007f003f2b36cc: shl    rcx,0x3
  0x00007f003f2b36d0: cmp    rdi,rcx
  0x00007f003f2b36d3: jne    0x00007f003f2b3fef
  0x00007f003f2b36d9: jmp    0x00007f003f2b36de
  0x00007f003f2b36de: mov    rdx,rsi
  0x00007f003f2b36e1: cmp    rax,QWORD PTR [rsi]  ; implicit exception: dispatches to 0x00007f003f2b3ff4
  0x00007f003f2b36e4: mov    rdx,rsi
  0x00007f003f2b36e7: movabs rcx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b36f1: add    QWORD PTR [rcx+0x4b0],0x1
  0x00007f003f2b36f9: mov    rdx,rax
  0x00007f003f2b36fc: mov    ecx,0x0
  0x00007f003f2b3701: mov    r9,QWORD PTR [rsp+0x110]  ;*invokeinterface encode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@62 (line 86)

  0x00007f003f2b3709: nop
  0x00007f003f2b370a: nop
  0x00007f003f2b370b: nop
  0x00007f003f2b370c: nop
  0x00007f003f2b370d: nop
  0x00007f003f2b370e: nop
  0x00007f003f2b370f: call   0x00007f003f1c4d60  ; OopMap{[272]=Oop off=6836}
                                                ;*invokeinterface encode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@62 (line 86)
                                                ;   {optimized virtual_call}
  0x00007f003f2b3714: mov    r8,rax             ;*invokeinterface encode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@62 (line 86)

  0x00007f003f2b3717: cmp    r8d,0xffffffff
  0x00007f003f2b371b: movabs rbx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b3725: movabs rdx,0x530
  0x00007f003f2b372f: jne    0x00007f003f2b373f
  0x00007f003f2b3735: movabs rdx,0x540
  0x00007f003f2b373f: mov    rsi,QWORD PTR [rbx+rdx*1]
  0x00007f003f2b3743: lea    rsi,[rsi+0x1]
  0x00007f003f2b3747: mov    QWORD PTR [rbx+rdx*1],rsi
  0x00007f003f2b374b: je     0x00007f003f2b3a2d  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@72 (line 87)

  0x00007f003f2b3751: mov    rax,QWORD PTR [rsp+0x110]
  0x00007f003f2b3759: movabs rbx,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b3763: add    QWORD PTR [rbx+0x560],0x1
  0x00007f003f2b376b: movabs rbx,0x7f0038a56f28  ;   {metadata(method data for {method} {0x00007f00388a3410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f2b3775: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f2b377b: add    edx,0x8
  0x00007f003f2b377e: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f2b3784: movabs rbx,0x7f00388a3410  ;   {metadata({method} {0x00007f00388a3410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f2b378e: and    edx,0x7ffff8
  0x00007f003f2b3794: cmp    edx,0x0
  0x00007f003f2b3797: je     0x00007f003f2b3ff9
  0x00007f003f2b379d: mov    rbx,r8
  0x00007f003f2b37a0: movabs rdx,0x7c0000768    ;   {metadata({type array byte})}
  0x00007f003f2b37aa: mov    r9,rax
  0x00007f003f2b37ad: movsxd rbx,ebx
  0x00007f003f2b37b0: mov    rdi,rbx
  0x00007f003f2b37b3: cmp    rbx,0xffffff
  0x00007f003f2b37ba: ja     0x00007f003f2b4010
  0x00007f003f2b37c0: movabs rsi,0x17
  0x00007f003f2b37ca: lea    rsi,[rsi+rbx*1]
  0x00007f003f2b37ce: and    rsi,0xfffffffffffffff8
  0x00007f003f2b37d2: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2b37d6: lea    rsi,[rax+rsi*1]
  0x00007f003f2b37da: cmp    rsi,QWORD PTR [r15+0x70]
  0x00007f003f2b37de: ja     0x00007f003f2b4010
  0x00007f003f2b37e4: mov    QWORD PTR [r15+0x60],rsi
  0x00007f003f2b37e8: sub    rsi,rax
  0x00007f003f2b37eb: mov    QWORD PTR [rax],0x1
  0x00007f003f2b37f2: mov    rcx,rdx
  0x00007f003f2b37f5: shr    rcx,0x3
  0x00007f003f2b37f9: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2b37fc: mov    DWORD PTR [rax+0xc],ebx
  0x00007f003f2b37ff: sub    rsi,0x10
  0x00007f003f2b3803: je     0x00007f003f2b381a
  0x00007f003f2b3809: xor    rbx,rbx
  0x00007f003f2b380c: shr    rsi,0x3
  0x00007f003f2b3810: mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x00007f003f2b3815: dec    rsi
  0x00007f003f2b3818: jne    0x00007f003f2b3810  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3236)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)

  0x00007f003f2b381a: mov    esi,DWORD PTR [r9+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@9 (line 3237)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)

  0x00007f003f2b381e: movabs rdx,0x7f0038a56f28  ;   {metadata(method data for {method} {0x00007f00388a3410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f2b3828: add    QWORD PTR [rdx+0x130],0x1
  0x00007f003f2b3830: movabs rdx,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2b383a: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2b3840: add    ecx,0x8
  0x00007f003f2b3843: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2b3849: movabs rdx,0x7f003887a8b8  ;   {metadata({method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2b3853: and    ecx,0x7ffff8
  0x00007f003f2b3859: cmp    ecx,0x0
  0x00007f003f2b385c: je     0x00007f003f2b401a
  0x00007f003f2b3862: cmp    esi,r8d
  0x00007f003f2b3865: movabs rdx,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2b386f: movabs rcx,0x130
  0x00007f003f2b3879: jg     0x00007f003f2b3889
  0x00007f003f2b387f: movabs rcx,0x140
  0x00007f003f2b3889: mov    rdi,QWORD PTR [rdx+rcx*1]
  0x00007f003f2b388d: lea    rdi,[rdi+0x1]
  0x00007f003f2b3891: mov    QWORD PTR [rdx+rcx*1],rdi
  0x00007f003f2b3895: jg     0x00007f003f2b38b3  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)

  0x00007f003f2b389b: movabs rdx,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2b38a5: inc    DWORD PTR [rdx+0x150]
  0x00007f003f2b38ab: mov    rdi,rsi
  0x00007f003f2b38ae: jmp    0x00007f003f2b38b6  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)

  0x00007f003f2b38b3: mov    rdi,r8             ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)

  0x00007f003f2b38b6: movabs rsi,0x7f0038a56f28  ;   {metadata(method data for {method} {0x00007f00388a3410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f2b38c0: add    QWORD PTR [rsi+0x140],0x1
  0x00007f003f2b38c8: mov    rsi,r9
  0x00007f003f2b38cb: mov    edx,0x0
  0x00007f003f2b38d0: mov    rcx,rax
  0x00007f003f2b38d3: mov    r8d,0x0
  0x00007f003f2b38d9: mov    r9,rdi
  0x00007f003f2b38dc: mov    QWORD PTR [rsp+0x130],rax
  0x00007f003f2b38e4: lea    rdi,[rdx+r9*1]
  0x00007f003f2b38e8: cmp    edi,DWORD PTR [rsi+0xc]
  0x00007f003f2b38eb: ja     0x00007f003f2b4031
  0x00007f003f2b38f1: lea    rdi,[r8+r9*1]
  0x00007f003f2b38f5: cmp    edi,DWORD PTR [rcx+0xc]
  0x00007f003f2b38f8: ja     0x00007f003f2b4031
  0x00007f003f2b38fe: test   r9d,r9d
  0x00007f003f2b3901: jl     0x00007f003f2b4031
  0x00007f003f2b3907: je     0x00007f003f2b3943
  0x00007f003f2b390d: movsxd rdx,edx
  0x00007f003f2b3910: movsxd r8,r8d
  0x00007f003f2b3913: lea    rdi,[rsi+rdx*1+0x10]
  0x00007f003f2b3918: lea    rsi,[rcx+r8*1+0x10]
  0x00007f003f2b391d: mov    rdx,r9
  0x00007f003f2b3920: test   esp,0xf
  0x00007f003f2b3926: je     0x00007f003f2b393e
  0x00007f003f2b392c: sub    rsp,0x8
  0x00007f003f2b3930: call   Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007f003f2b3935: add    rsp,0x8
  0x00007f003f2b3939: jmp    0x00007f003f2b3943
  0x00007f003f2b393e: call   Stub::jbyte_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)
                                                ;   {runtime_call}
  0x00007f003f2b3943: mov    rax,QWORD PTR [rsp+0x130]
  0x00007f003f2b394b: add    rsp,0x170
  0x00007f003f2b3952: pop    rbp
  0x00007f003f2b3953: test   DWORD PTR [rip+0x1b10e7a7],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2b3959: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@92 (line 89)

  0x00007f003f2b395a: movabs rsi,0x7f0038a56f28  ;   {metadata(method data for {method} {0x00007f00388a3410} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f2b3964: add    QWORD PTR [rsi+0x140],0x1
  0x00007f003f2b396c: mov    rsi,r9
  0x00007f003f2b396f: mov    edx,0x0
  0x00007f003f2b3974: mov    rcx,rax
  0x00007f003f2b3977: mov    r8d,0x0
  0x00007f003f2b397d: mov    r9,r14
  0x00007f003f2b3980: mov    QWORD PTR [rsp+0x138],rax
  0x00007f003f2b3988: lea    rdi,[rdx+r9*1]
  0x00007f003f2b398c: cmp    edi,DWORD PTR [rsi+0xc]
  0x00007f003f2b398f: ja     0x00007f003f2b4041
  0x00007f003f2b3995: lea    rdi,[r8+r9*1]
  0x00007f003f2b3999: cmp    edi,DWORD PTR [rcx+0xc]
  0x00007f003f2b399c: ja     0x00007f003f2b4041
  0x00007f003f2b39a2: test   r9d,r9d
  0x00007f003f2b39a5: jl     0x00007f003f2b4041
  0x00007f003f2b39ab: je     0x00007f003f2b39e7
  0x00007f003f2b39b1: movsxd rdx,edx
  0x00007f003f2b39b4: movsxd r8,r8d
  0x00007f003f2b39b7: lea    rdi,[rsi+rdx*1+0x10]
  0x00007f003f2b39bc: lea    rsi,[rcx+r8*1+0x10]
  0x00007f003f2b39c1: mov    rdx,r9
  0x00007f003f2b39c4: test   esp,0xf
  0x00007f003f2b39ca: je     0x00007f003f2b39e2
  0x00007f003f2b39d0: sub    rsp,0x8
  0x00007f003f2b39d4: call   Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007f003f2b39d9: add    rsp,0x8
  0x00007f003f2b39dd: jmp    0x00007f003f2b39e7
  0x00007f003f2b39e2: call   Stub::jbyte_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)
                                                ;   {runtime_call}
  0x00007f003f2b39e7: mov    rax,QWORD PTR [rsp+0x138]
  0x00007f003f2b39ef: add    rsp,0x170
  0x00007f003f2b39f6: pop    rbp
  0x00007f003f2b39f7: test   DWORD PTR [rip+0x1b10e703],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2b39fd: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@191 (line 102)

  0x00007f003f2b39fe: mov    r9,QWORD PTR [rsp+0x110]
  0x00007f003f2b3a06: mov    rax,r9
  0x00007f003f2b3a09: add    rsp,0x170
  0x00007f003f2b3a10: pop    rbp
  0x00007f003f2b3a11: test   DWORD PTR [rip+0x1b10e6e9],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2b3a17: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@180 (line 100)

  0x00007f003f2b3a18: mov    r9,rax
  0x00007f003f2b3a1b: mov    rax,r9
  0x00007f003f2b3a1e: add    rsp,0x170
  0x00007f003f2b3a25: pop    rbp
  0x00007f003f2b3a26: test   DWORD PTR [rip+0x1b10e6d4],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2b3a2c: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@37 (line 82)

  0x00007f003f2b3a2d: data16 xchg ax,ax
  0x00007f003f2b3a30: jmp    0x00007f003f2b4060  ;   {no_reloc}
  0x00007f003f2b3a35: add    BYTE PTR [rax],al
  0x00007f003f2b3a37: add    BYTE PTR [rax],al
  0x00007f003f2b3a39: add    BYTE PTR [rcx-0x75],cl
  0x00007f003f2b3a3c: rex.RXB (bad) 
  0x00007f003f2b3a3e: lea    rdi,[rax+0x20]
  0x00007f003f2b3a42: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2b3a46: ja     0x00007f003f2b406a
  0x00007f003f2b3a4c: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2b3a50: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2b3a57: mov    QWORD PTR [rax],rcx
  0x00007f003f2b3a5a: mov    rcx,rdx
  0x00007f003f2b3a5d: shr    rcx,0x3
  0x00007f003f2b3a61: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2b3a64: xor    rcx,rcx
  0x00007f003f2b3a67: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2b3a6a: xor    rcx,rcx
  0x00007f003f2b3a6d: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f2b3a71: mov    QWORD PTR [rax+0x18],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@75 (line 88)

  0x00007f003f2b3a75: mov    rdx,rax
  0x00007f003f2b3a78: movabs rsi,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b3a82: add    QWORD PTR [rsi+0x550],0x1
  0x00007f003f2b3a8a: movabs rdx,0x670bb8648    ;   {oop(&quot;MALFORMED&quot;)}
  0x00007f003f2b3a94: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@81 (line 88)

  0x00007f003f2b3a97: mov    QWORD PTR [rsp+0x140],rax
  0x00007f003f2b3a9f: call   0x00007f003f1c4d60  ; OopMap{[320]=Oop off=7748}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@81 (line 88)
                                                ;   {optimized virtual_call}
  0x00007f003f2b3aa4: mov    rax,QWORD PTR [rsp+0x140]
  0x00007f003f2b3aac: jmp    0x00007f003f2b4144  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@84 (line 88)

  0x00007f003f2b3ab1: nop    DWORD PTR [rax+0x0]
  0x00007f003f2b3ab8: jmp    0x00007f003f2b4086  ;   {no_reloc}
  0x00007f003f2b3abd: add    BYTE PTR [rax],al
  0x00007f003f2b3abf: add    BYTE PTR [rax],al
  0x00007f003f2b3ac1: add    BYTE PTR [rcx-0x75],cl
  0x00007f003f2b3ac4: rex.RXB (bad) 
  0x00007f003f2b3ac6: lea    rdi,[rax+0x20]
  0x00007f003f2b3aca: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2b3ace: ja     0x00007f003f2b4090
  0x00007f003f2b3ad4: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2b3ad8: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2b3adf: mov    QWORD PTR [rax],rcx
  0x00007f003f2b3ae2: mov    rcx,rdx
  0x00007f003f2b3ae5: shr    rcx,0x3
  0x00007f003f2b3ae9: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2b3aec: xor    rcx,rcx
  0x00007f003f2b3aef: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2b3af2: xor    rcx,rcx
  0x00007f003f2b3af5: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f2b3af9: mov    QWORD PTR [rax+0x18],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@154 (line 98)

  0x00007f003f2b3afd: mov    rsi,rbx
  0x00007f003f2b3b00: movabs rdi,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b3b0a: movabs r10,0x7c0030d30    ;   {metadata(&apos;java/nio/charset/CoderResult&apos;)}
  0x00007f003f2b3b14: mov    QWORD PTR [rdi+0x8e8],r10
  0x00007f003f2b3b1b: add    QWORD PTR [rdi+0x8f0],0x1
  0x00007f003f2b3b23: mov    rsi,rbx            ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@160 (line 98)

  0x00007f003f2b3b26: mov    QWORD PTR [rsp+0x148],rax
  0x00007f003f2b3b2e: nop
  0x00007f003f2b3b2f: call   0x00007f003f1c4d60  ; OopMap{[328]=Oop off=7892}
                                                ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@160 (line 98)
                                                ;   {optimized virtual_call}
  0x00007f003f2b3b34: mov    rdx,QWORD PTR [rsp+0x148]
  0x00007f003f2b3b3c: movabs rsi,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b3b46: add    QWORD PTR [rsi+0x970],0x1
  0x00007f003f2b3b4e: mov    rdx,rax
  0x00007f003f2b3b51: mov    rsi,QWORD PTR [rsp+0x148]
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@163 (line 98)

  0x00007f003f2b3b59: nop
  0x00007f003f2b3b5a: nop
  0x00007f003f2b3b5b: nop
  0x00007f003f2b3b5c: nop
  0x00007f003f2b3b5d: nop
  0x00007f003f2b3b5e: nop
  0x00007f003f2b3b5f: call   0x00007f003f1c4d60  ; OopMap{[328]=Oop off=7940}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@163 (line 98)
                                                ;   {optimized virtual_call}
  0x00007f003f2b3b64: mov    rax,QWORD PTR [rsp+0x148]
  0x00007f003f2b3b6c: jmp    0x00007f003f2b4144  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@166 (line 98)

  0x00007f003f2b3b71: nop    DWORD PTR [rax+0x0]
  0x00007f003f2b3b78: jmp    0x00007f003f2b40ac  ;   {no_reloc}
  0x00007f003f2b3b7d: add    BYTE PTR [rax],al
  0x00007f003f2b3b7f: add    BYTE PTR [rax],al
  0x00007f003f2b3b81: add    BYTE PTR [rcx-0x75],cl
  0x00007f003f2b3b84: rex.RXB (bad) 
  0x00007f003f2b3b86: lea    rdi,[rax+0x20]
  0x00007f003f2b3b8a: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2b3b8e: ja     0x00007f003f2b40b6
  0x00007f003f2b3b94: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2b3b98: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2b3b9f: mov    QWORD PTR [rax],rcx
  0x00007f003f2b3ba2: mov    rcx,rdx
  0x00007f003f2b3ba5: shr    rcx,0x3
  0x00007f003f2b3ba9: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2b3bac: xor    rcx,rcx
  0x00007f003f2b3baf: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2b3bb2: xor    rcx,rcx
  0x00007f003f2b3bb5: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f2b3bb9: mov    QWORD PTR [rax+0x18],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@125 (line 95)

  0x00007f003f2b3bbd: mov    rsi,rbx
  0x00007f003f2b3bc0: movabs rdi,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b3bca: movabs r10,0x7c0030d30    ;   {metadata(&apos;java/nio/charset/CoderResult&apos;)}
  0x00007f003f2b3bd4: mov    QWORD PTR [rdi+0x6f0],r10
  0x00007f003f2b3bdb: add    QWORD PTR [rdi+0x6f8],0x1
  0x00007f003f2b3be3: mov    rsi,rbx            ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@131 (line 95)

  0x00007f003f2b3be6: mov    QWORD PTR [rsp+0x150],rax
  0x00007f003f2b3bee: nop
  0x00007f003f2b3bef: call   0x00007f003f1c4d60  ; OopMap{[336]=Oop off=8084}
                                                ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@131 (line 95)
                                                ;   {optimized virtual_call}
  0x00007f003f2b3bf4: mov    rdx,QWORD PTR [rsp+0x150]
  0x00007f003f2b3bfc: movabs rsi,0x7f0038a59060  ;   {metadata(method data for {method} {0x00007f0038a48f20} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b3c06: add    QWORD PTR [rsi+0x778],0x1
  0x00007f003f2b3c0e: mov    rdx,rax
  0x00007f003f2b3c11: mov    rsi,QWORD PTR [rsp+0x150]
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@134 (line 95)

  0x00007f003f2b3c19: nop
  0x00007f003f2b3c1a: nop
  0x00007f003f2b3c1b: nop
  0x00007f003f2b3c1c: nop
  0x00007f003f2b3c1d: nop
  0x00007f003f2b3c1e: nop
  0x00007f003f2b3c1f: call   0x00007f003f1c4d60  ; OopMap{[336]=Oop off=8132}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@134 (line 95)
                                                ;   {optimized virtual_call}
  0x00007f003f2b3c24: mov    rax,QWORD PTR [rsp+0x150]
  0x00007f003f2b3c2c: jmp    0x00007f003f2b4144  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@137 (line 95)

  0x00007f003f2b3c31: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2b3c38: xor    r10,r10
  0x00007f003f2b3c3b: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2b3c42: xor    r10,r10
  0x00007f003f2b3c45: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2b3c4c: nop    DWORD PTR [rax+0x0]
  0x00007f003f2b3c50: jmp    0x00007f003f2b40d2  ;   {no_reloc}
  0x00007f003f2b3c55: add    BYTE PTR [rax],al
  0x00007f003f2b3c57: add    BYTE PTR [rax],al
  0x00007f003f2b3c59: add    BYTE PTR [rax+0x162ba],al
  0x00007f003f2b3c5f: add    BYTE PTR [rdi+rcx*1],al
  0x00007f003f2b3c62: test   DWORD PTR [rdx+0x4],edi
  0x00007f003f2b3c65: add    BYTE PTR [rax],al
  0x00007f003f2b3c67: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2b3c6b: lea    rdi,[rax+0x20]
  0x00007f003f2b3c6f: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2b3c73: ja     0x00007f003f2b40e1
  0x00007f003f2b3c79: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2b3c7d: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2b3c84: mov    QWORD PTR [rax],rcx
  0x00007f003f2b3c87: mov    rcx,rdx
  0x00007f003f2b3c8a: shr    rcx,0x3
  0x00007f003f2b3c8e: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2b3c91: xor    rcx,rcx
  0x00007f003f2b3c94: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2b3c97: xor    rcx,rcx
  0x00007f003f2b3c9a: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f2b3c9e: mov    QWORD PTR [rax+0x18],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::wrap@12 (line 375)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)

  0x00007f003f2b3ca2: mov    rsi,rax
  0x00007f003f2b3ca5: movabs rdi,0x7f0038a62800  ;   {metadata(method data for {method} {0x00007f0038922440} &apos;wrap&apos; &apos;([CII)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00007f003f2b3caf: add    QWORD PTR [rdi+0x140],0x1
  0x00007f003f2b3cb7: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::wrap@16 (line 375)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)

  0x00007f003f2b3cba: mov    QWORD PTR [rsp+0x158],rax
  0x00007f003f2b3cc2: nop
  0x00007f003f2b3cc3: nop
  0x00007f003f2b3cc4: nop
  0x00007f003f2b3cc5: nop
  0x00007f003f2b3cc6: nop
  0x00007f003f2b3cc7: call   0x00007f003f1c4d60  ; OopMap{[344]=Oop [272]=Oop [288]=Oop [264]=Oop off=8300}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::wrap@16 (line 375)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)
                                                ;   {optimized virtual_call}
  0x00007f003f2b3ccc: mov    rax,QWORD PTR [rsp+0x158]
  0x00007f003f2b3cd4: jmp    0x00007f003f2b4144  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::wrap@19 (line 375)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)

  0x00007f003f2b3cd9: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2b3ce0: xor    r10,r10
  0x00007f003f2b3ce3: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2b3cea: xor    r10,r10
  0x00007f003f2b3ced: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2b3cf4: nop    DWORD PTR [rax+0x0]
  0x00007f003f2b3cf8: jmp    0x00007f003f2b40fd  ;   {no_reloc}
  0x00007f003f2b3cfd: add    BYTE PTR [rax],al
  0x00007f003f2b3cff: add    BYTE PTR [rax],al
  0x00007f003f2b3d01: add    BYTE PTR [rax+0x162ba],al
  0x00007f003f2b3d07: add    BYTE PTR [rdi+rcx*1],al
  0x00007f003f2b3d0a: test   ebp,edi
  0x00007f003f2b3d0c: add    eax,DWORD PTR [rax]
  0x00007f003f2b3d0e: add    BYTE PTR [rcx-0x75],cl
  0x00007f003f2b3d11: rex.RXB (bad) 
  0x00007f003f2b3d13: lea    rdi,[rax+0x20]
  0x00007f003f2b3d17: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2b3d1b: ja     0x00007f003f2b410c
  0x00007f003f2b3d21: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2b3d25: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2b3d2c: mov    QWORD PTR [rax],rcx
  0x00007f003f2b3d2f: mov    rcx,rdx
  0x00007f003f2b3d32: shr    rcx,0x3
  0x00007f003f2b3d36: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2b3d39: xor    rcx,rcx
  0x00007f003f2b3d3c: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2b3d3f: xor    rcx,rcx
  0x00007f003f2b3d42: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f2b3d46: mov    QWORD PTR [rax+0x18],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.ByteBuffer::wrap@12 (line 375)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)

  0x00007f003f2b3d4a: mov    rsi,rax
  0x00007f003f2b3d4d: movabs rdi,0x7f0038a61cd0  ;   {metadata(method data for {method} {0x00007f00388e2cc0} &apos;wrap&apos; &apos;([BII)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00007f003f2b3d57: add    QWORD PTR [rdi+0x140],0x1
  0x00007f003f2b3d5f: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.ByteBuffer::wrap@16 (line 375)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)

  0x00007f003f2b3d62: mov    QWORD PTR [rsp+0x160],rax
  0x00007f003f2b3d6a: nop
  0x00007f003f2b3d6b: nop
  0x00007f003f2b3d6c: nop
  0x00007f003f2b3d6d: nop
  0x00007f003f2b3d6e: nop
  0x00007f003f2b3d6f: call   0x00007f003f1c4d60  ; OopMap{[352]=Oop [272]=Oop [256]=Oop [264]=Oop off=8468}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.ByteBuffer::wrap@16 (line 375)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)
                                                ;   {optimized virtual_call}
  0x00007f003f2b3d74: mov    rax,QWORD PTR [rsp+0x160]
  0x00007f003f2b3d7c: jmp    0x00007f003f2b4144
  0x00007f003f2b3d81: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2b3d86: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b3d8e: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [240]=Oop rdx=Oop off=8499}
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipCoder::getBytes@-1 (line 77)
                                                ;   {runtime_call}
  0x00007f003f2b3d93: jmp    0x00007f003f2b1cc9
  0x00007f003f2b3d98: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2b3d9d: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b3da5: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [240]=Oop rdx=Oop off=8522}
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipCoder::encoder@-1 (line 152)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)
                                                ;   {runtime_call}
  0x00007f003f2b3daa: jmp    0x00007f003f2b1d10
  0x00007f003f2b3daf: call   0x00007f003f279000  ; OopMap{rsi=Oop [240]=Oop [248]=Oop rdi=Oop off=8532}
                                                ;*invokevirtual newEncoder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@12 (line 153)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)
                                                ;   {runtime_call}
  0x00007f003f2b3db4: call   0x00007f003f279000  ; OopMap{[240]=Oop [248]=Oop rax=Oop off=8537}
                                                ;*invokevirtual onMalformedInput {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)
                                                ;   {runtime_call}
  0x00007f003f2b3db9: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2b3dbe: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b3dc6: call   0x00007f003f27d5e0  ; OopMap{[240]=Oop [248]=Oop rax=Oop off=8555}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@-1 (line 382)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)
                                                ;   {runtime_call}
  0x00007f003f2b3dcb: jmp    0x00007f003f2b1fae
  0x00007f003f2b3dd0: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2b3dd5: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b3ddd: call   0x00007f003f27d5e0  ; OopMap{[240]=Oop [248]=Oop rax=Oop off=8578}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::implOnMalformedInput@-1 (line 398)
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@21 (line 385)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)
                                                ;   {runtime_call}
  0x00007f003f2b3de2: jmp    0x00007f003f2b220d
  0x00007f003f2b3de7: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2b3dec: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b3df4: call   0x00007f003f27d5e0  ; OopMap{[240]=Oop [248]=Oop rax=Oop off=8601}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@-1 (line 426)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)
                                                ;   {runtime_call}
  0x00007f003f2b3df9: jmp    0x00007f003f2b2254
  0x00007f003f2b3dfe: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2b3e03: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b3e0b: call   0x00007f003f27d5e0  ; OopMap{[240]=Oop [248]=Oop rax=Oop off=8624}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::implOnUnmappableCharacter@-1 (line 442)
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@21 (line 429)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)
                                                ; - java.util.zip.ZipCoder::getBytes@1 (line 77)
                                                ;   {runtime_call}
  0x00007f003f2b3e10: jmp    0x00007f003f2b24b3
  0x00007f003f2b3e15: call   0x00007f003f279000  ; OopMap{r11=Oop [264]=Oop [240]=Oop r8=Oop off=8634}
                                                ;*invokevirtual reset {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@4 (line 77)
                                                ;   {runtime_call}
  0x00007f003f2b3e1a: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2b3e1f: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b3e27: call   0x00007f003f27d5e0  ; OopMap{r11=Oop [264]=Oop [240]=Oop r8=Oop off=8652}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::reset@-1 (line 709)
                                                ; - java.util.zip.ZipCoder::getBytes@4 (line 77)
                                                ;   {runtime_call}
  0x00007f003f2b3e2c: jmp    0x00007f003f2b253d
  0x00007f003f2b3e31: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2b3e36: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b3e3e: call   0x00007f003f27d5e0  ; OopMap{r11=Oop [264]=Oop [240]=Oop r8=Oop off=8675}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::implReset@-1 (line 720)
                                                ; - java.nio.charset.CharsetEncoder::reset@1 (line 709)
                                                ; - java.util.zip.ZipCoder::getBytes@4 (line 77)
                                                ;   {runtime_call}
  0x00007f003f2b3e43: jmp    0x00007f003f2b275b
  0x00007f003f2b3e48: call   0x00007f003f279000  ; OopMap{r11=Oop [264]=Oop [240]=Oop r8=Oop off=8685}
                                                ;*invokevirtual toCharArray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)
                                                ;   {runtime_call}
  0x00007f003f2b3e4d: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2b3e52: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b3e5a: call   0x00007f003f27d5e0  ; OopMap{r11=Oop [264]=Oop [240]=Oop r8=Oop off=8703}
                                                ;*synchronization entry
                                                ; - java.lang.String::toCharArray@-1 (line 2899)
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)
                                                ;   {runtime_call}
  0x00007f003f2b3e5f: jmp    0x00007f003f2b27ad
  0x00007f003f2b3e64: call   0x00007f003f279000  ; OopMap{r11=Oop [264]=Oop [240]=Oop r8=Oop r9=Oop off=8713}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@4 (line 2899)
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)
                                                ;   {runtime_call}
  0x00007f003f2b3e69: call   0x00007f003f27a020  ; OopMap{r11=Oop [264]=Oop r8=Oop r9=Oop [240]=Oop off=8718}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@5 (line 2899)
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)
                                                ;   {runtime_call}
  0x00007f003f2b3e6e: jmp    0x00007f003f2b2833
  0x00007f003f2b3e73: nop
  0x00007f003f2b3e74: nop
  0x00007f003f2b3e75: nop
  0x00007f003f2b3e76: nop
  0x00007f003f2b3e77: call   0x00007f003f1c5160  ; OopMap{[256]=Oop [240]=Oop [264]=Oop off=8732}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@20 (line 2900)
                                                ; - java.util.zip.ZipCoder::getBytes@9 (line 78)
                                                ;   {static_call}
  0x00007f003f2b3e7c: jmp    0x00007f003f2b28a4
  0x00007f003f2b3e81: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2b3e86: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b3e8e: call   0x00007f003f27d5e0  ; OopMap{[240]=Oop [264]=Oop rax=Oop [256]=Oop off=8755}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::maxBytesPerChar@-1 (line 465)
                                                ; - java.util.zip.ZipCoder::getBytes@17 (line 79)
                                                ;   {runtime_call}
  0x00007f003f2b3e93: jmp    0x00007f003f2b2901
  0x00007f003f2b3e98: vcomiss xmm0,DWORD PTR [rip+0x1a29a390]        # 0x00007f005954e230
                                                ;   {external_word}
  0x00007f003f2b3ea0: jp     0x00007f003f2b3ea9
  0x00007f003f2b3ea2: jb     0x00007f003f2b3eac
  0x00007f003f2b3ea4: dec    r8
  0x00007f003f2b3ea7: jmp    0x00007f003f2b3eac
  0x00007f003f2b3ea9: xor    r8,r8
  0x00007f003f2b3eac: jmp    0x00007f003f2b2924
  0x00007f003f2b3eb1: call   0x00007f003f27a020  ; OopMap{[240]=Oop r13=Oop [264]=Oop [256]=Oop off=8790}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@26 (line 80)
                                                ;   {runtime_call}
  0x00007f003f2b3eb6: jmp    0x00007f003f2b299e
  0x00007f003f2b3ebb: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b3ec0: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b3ec8: call   0x00007f003f27d5e0  ; OopMap{rax=Oop [272]=Oop [256]=Oop [264]=Oop off=8813}
                                                ;*synchronization entry
                                                ; - java.nio.ByteBuffer::wrap@-1 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)
                                                ;   {runtime_call}
  0x00007f003f2b3ecd: jmp    0x00007f003f2b2d12
  0x00007f003f2b3ed2: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b3ed7: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b3edf: call   0x00007f003f27d5e0  ; OopMap{rax=Oop [272]=Oop [256]=Oop [264]=Oop off=8836}
                                                ;*synchronization entry
                                                ; - java.nio.ByteBuffer::wrap@-1 (line 373)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)
                                                ;   {runtime_call}
  0x00007f003f2b3ee4: jmp    0x00007f003f2b2d5a
  0x00007f003f2b3ee9: mov    rdx,rdx
  0x00007f003f2b3eec: call   0x00007f003f279760  ; OopMap{[256]=Oop [264]=Oop r9=Oop [272]=Oop off=8849}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.ByteBuffer::wrap@0 (line 373)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)
                                                ;   {runtime_call}
  0x00007f003f2b3ef1: jmp    0x00007f003f2b2daa
  0x00007f003f2b3ef6: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b3efb: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b3f03: call   0x00007f003f27d5e0  ; OopMap{[256]=Oop [264]=Oop r9=Oop [272]=Oop rax=Oop [288]=Oop off=8872}
                                                ;*synchronization entry
                                                ; - java.nio.HeapByteBuffer::&lt;init&gt;@-1 (line 70)
                                                ; - java.nio.ByteBuffer::wrap@7 (line 373)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)
                                                ;   {runtime_call}
  0x00007f003f2b3f08: jmp    0x00007f003f2b2df9
  0x00007f003f2b3f0d: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b3f12: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b3f1a: call   0x00007f003f27d5e0  ; OopMap{[272]=Oop [288]=Oop [264]=Oop [256]=Oop off=8895}
                                                ;*synchronization entry
                                                ; - java.nio.CharBuffer::wrap@-1 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)
                                                ;   {runtime_call}
  0x00007f003f2b3f1f: jmp    0x00007f003f2b2e80
  0x00007f003f2b3f24: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b3f29: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b3f31: call   0x00007f003f27d5e0  ; OopMap{[272]=Oop [288]=Oop [264]=Oop [256]=Oop off=8918}
                                                ;*synchronization entry
                                                ; - java.nio.CharBuffer::wrap@-1 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)
                                                ;   {runtime_call}
  0x00007f003f2b3f36: jmp    0x00007f003f2b2ec4
  0x00007f003f2b3f3b: mov    rdx,rdx
  0x00007f003f2b3f3e: call   0x00007f003f279760  ; OopMap{[272]=Oop [288]=Oop [264]=Oop [256]=Oop off=8931}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::wrap@0 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)
                                                ;   {runtime_call}
  0x00007f003f2b3f43: jmp    0x00007f003f2b2f11
  0x00007f003f2b3f48: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b3f4d: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b3f55: call   0x00007f003f27d5e0  ; OopMap{[272]=Oop [288]=Oop [264]=Oop [256]=Oop rax=Oop off=8954}
                                                ;*synchronization entry
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@-1 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)
                                                ;   {runtime_call}
  0x00007f003f2b3f5a: jmp    0x00007f003f2b2f58
  0x00007f003f2b3f5f: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b3f64: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b3f6c: call   0x00007f003f27d5e0  ; OopMap{[272]=Oop [288]=Oop [264]=Oop [256]=Oop rax=Oop off=8977}
                                                ;*synchronization entry
                                                ; - java.nio.CharBuffer::&lt;init&gt;@-1 (line 281)
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)
                                                ;   {runtime_call}
  0x00007f003f2b3f71: jmp    0x00007f003f2b2f9f
  0x00007f003f2b3f76: call   0x00007f003f279000  ; OopMap{[272]=Oop [288]=Oop [264]=Oop rbx=Oop off=8987}
                                                ;*invokevirtual isUnderflow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@119 (line 94)
                                                ;   {runtime_call}
  0x00007f003f2b3f7b: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b3f80: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b3f88: call   0x00007f003f27d5e0  ; OopMap{[272]=Oop [288]=Oop [264]=Oop rbx=Oop off=9005}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CoderResult::isUnderflow@-1 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@119 (line 94)
                                                ;   {runtime_call}
  0x00007f003f2b3f8d: jmp    0x00007f003f2b30b2
  0x00007f003f2b3f92: call   0x00007f003f279000  ; OopMap{[272]=Oop [288]=Oop rbx=Oop off=9015}
                                                ;*invokevirtual isUnderflow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@148 (line 97)
                                                ;   {runtime_call}
  0x00007f003f2b3f97: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b3f9c: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b3fa4: call   0x00007f003f27d5e0  ; OopMap{[272]=Oop [288]=Oop rbx=Oop off=9033}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CoderResult::isUnderflow@-1 (line 120)
                                                ; - java.util.zip.ZipCoder::getBytes@148 (line 97)
                                                ;   {runtime_call}
  0x00007f003f2b3fa9: jmp    0x00007f003f2b31da
  0x00007f003f2b3fae: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2b3fb3: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b3fbb: call   0x00007f003f27d5e0  ; OopMap{[272]=Oop off=9056}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3236)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)
                                                ;   {runtime_call}
  0x00007f003f2b3fc0: jmp    0x00007f003f2b332e
  0x00007f003f2b3fc5: call   0x00007f003f27a020  ; OopMap{[272]=Oop off=9066}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3236)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)
                                                ;   {runtime_call}
  0x00007f003f2b3fca: jmp    0x00007f003f2b33a8
  0x00007f003f2b3fcf: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b3fd4: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b3fdc: call   0x00007f003f27d5e0  ; OopMap{[272]=Oop rax=Oop off=9089}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)
                                                ;   {runtime_call}
  0x00007f003f2b3fe1: jmp    0x00007f003f2b33ec
  0x00007f003f2b3fe6: mov    QWORD PTR [rsp],r11
  0x00007f003f2b3fea: call   0x00007f003f27b2c0  ; OopMap{[272]=Oop rax=Oop [256]=Oop off=9103}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@53 (line 86)
                                                ;   {runtime_call}
  0x00007f003f2b3fef: call   0x00007f003f27b500  ; OopMap{[272]=Oop rax=Oop [256]=Oop rsi=Oop off=9108}
                                                ;*invokeinterface encode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@62 (line 86)
                                                ;   {runtime_call}
  0x00007f003f2b3ff4: call   0x00007f003f279000  ; OopMap{[272]=Oop rax=Oop [256]=Oop rsi=Oop off=9113}
                                                ;*invokeinterface encode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@62 (line 86)
                                                ;   {runtime_call}
  0x00007f003f2b3ff9: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2b3ffe: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b4006: call   0x00007f003f27d5e0  ; OopMap{rax=Oop [272]=Oop off=9131}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3236)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)
                                                ;   {runtime_call}
  0x00007f003f2b400b: jmp    0x00007f003f2b379d
  0x00007f003f2b4010: call   0x00007f003f27a020  ; OopMap{r9=Oop [272]=Oop off=9141}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3236)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)
                                                ;   {runtime_call}
  0x00007f003f2b4015: jmp    0x00007f003f2b381a
  0x00007f003f2b401a: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b401f: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b4027: call   0x00007f003f27d5e0  ; OopMap{r9=Oop [272]=Oop rax=Oop off=9164}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)
                                                ;   {runtime_call}
  0x00007f003f2b402c: jmp    0x00007f003f2b3862
  0x00007f003f2b4031: nop
  0x00007f003f2b4032: nop
  0x00007f003f2b4033: nop
  0x00007f003f2b4034: nop
  0x00007f003f2b4035: nop
  0x00007f003f2b4036: nop
  0x00007f003f2b4037: call   0x00007f003f1c5160  ; OopMap{[304]=Oop off=9180}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ; - java.util.zip.ZipCoder::getBytes@89 (line 89)
                                                ;   {static_call}
  0x00007f003f2b403c: jmp    0x00007f003f2b3943
  0x00007f003f2b4041: nop
  0x00007f003f2b4042: nop
  0x00007f003f2b4043: nop
  0x00007f003f2b4044: nop
  0x00007f003f2b4045: nop
  0x00007f003f2b4046: nop
  0x00007f003f2b4047: call   0x00007f003f1c5160  ; OopMap{[312]=Oop off=9196}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ; - java.util.zip.ZipCoder::getBytes@188 (line 102)
                                                ;   {static_call}
  0x00007f003f2b404c: jmp    0x00007f003f2b39e7
  0x00007f003f2b4051: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2b405b: mov    eax,0xa050f00
  0x00007f003f2b4060: call   0x00007f003f27c5e0  ; OopMap{off=9221}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@75 (line 88)
                                                ;   {runtime_call}
  0x00007f003f2b4065: jmp    0x00007f003f2b3a30
  0x00007f003f2b406a: mov    rdx,rdx
  0x00007f003f2b406d: call   0x00007f003f279760  ; OopMap{off=9234}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@75 (line 88)
                                                ;   {runtime_call}
  0x00007f003f2b4072: jmp    0x00007f003f2b3a75
  0x00007f003f2b4077: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2b4081: mov    eax,0xa050f00
  0x00007f003f2b4086: call   0x00007f003f27c5e0  ; OopMap{rbx=Oop off=9259}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@154 (line 98)
                                                ;   {runtime_call}
  0x00007f003f2b408b: jmp    0x00007f003f2b3ab8
  0x00007f003f2b4090: mov    rdx,rdx
  0x00007f003f2b4093: call   0x00007f003f279760  ; OopMap{rbx=Oop off=9272}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@154 (line 98)
                                                ;   {runtime_call}
  0x00007f003f2b4098: jmp    0x00007f003f2b3afd
  0x00007f003f2b409d: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2b40a7: mov    eax,0xa050f00
  0x00007f003f2b40ac: call   0x00007f003f27c5e0  ; OopMap{rbx=Oop off=9297}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@125 (line 95)
                                                ;   {runtime_call}
  0x00007f003f2b40b1: jmp    0x00007f003f2b3b78
  0x00007f003f2b40b6: mov    rdx,rdx
  0x00007f003f2b40b9: call   0x00007f003f279760  ; OopMap{rbx=Oop off=9310}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::getBytes@125 (line 95)
                                                ;   {runtime_call}
  0x00007f003f2b40be: jmp    0x00007f003f2b3bbd
  0x00007f003f2b40c3: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2b40cd: mov    eax,0xa050f00
  0x00007f003f2b40d2: call   0x00007f003f27c5e0  ; OopMap{[264]=Oop [288]=Oop [272]=Oop off=9335}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::wrap@12 (line 375)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)
                                                ;   {runtime_call}
  0x00007f003f2b40d7: jmp    0x00007f003f2b3c50
  0x00007f003f2b40dc: call   0x00007f003f279000  ; OopMap{[264]=Oop [288]=Oop [272]=Oop off=9345}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::wrap@12 (line 375)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)
                                                ;   {runtime_call}
  0x00007f003f2b40e1: mov    rdx,rdx
  0x00007f003f2b40e4: call   0x00007f003f279ba0  ; OopMap{[264]=Oop [288]=Oop [272]=Oop off=9353}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.CharBuffer::wrap@12 (line 375)
                                                ; - java.nio.CharBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@101 (line 92)
                                                ;   {runtime_call}
  0x00007f003f2b40e9: jmp    0x00007f003f2b3ca2
  0x00007f003f2b40ee: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2b40f8: mov    eax,0xa050f00
  0x00007f003f2b40fd: call   0x00007f003f27c5e0  ; OopMap{[264]=Oop [256]=Oop [272]=Oop off=9378}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.ByteBuffer::wrap@12 (line 375)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)
                                                ;   {runtime_call}
  0x00007f003f2b4102: jmp    0x00007f003f2b3cf8
  0x00007f003f2b4107: call   0x00007f003f279000  ; OopMap{[264]=Oop [256]=Oop [272]=Oop off=9388}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.ByteBuffer::wrap@12 (line 375)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)
                                                ;   {runtime_call}
  0x00007f003f2b410c: mov    rdx,rdx
  0x00007f003f2b410f: call   0x00007f003f279ba0  ; OopMap{[264]=Oop [256]=Oop [272]=Oop off=9396}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.ByteBuffer::wrap@12 (line 375)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.util.zip.ZipCoder::getBytes@95 (line 91)
                                                ;   {runtime_call}
  0x00007f003f2b4114: jmp    0x00007f003f2b3d4a
  0x00007f003f2b4119: nop
  0x00007f003f2b411a: nop
  0x00007f003f2b411b: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2b4122: movabs r10,0x0
  0x00007f003f2b412c: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2b4133: movabs r10,0x0
  0x00007f003f2b413d: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2b4144: add    rsp,0x170
  0x00007f003f2b414b: pop    rbp
  0x00007f003f2b414c: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2b4151: hlt    
  0x00007f003f2b4152: hlt    
  0x00007f003f2b4153: hlt    
  0x00007f003f2b4154: hlt    
  0x00007f003f2b4155: hlt    
  0x00007f003f2b4156: hlt    
  0x00007f003f2b4157: hlt    
  0x00007f003f2b4158: hlt    
  0x00007f003f2b4159: hlt    
  0x00007f003f2b415a: hlt    
  0x00007f003f2b415b: hlt    
  0x00007f003f2b415c: hlt    
  0x00007f003f2b415d: hlt    
  0x00007f003f2b415e: hlt    
  0x00007f003f2b415f: hlt    
[Stub Code]
  0x00007f003f2b4160: nop                       ;   {no_reloc}
  0x00007f003f2b4161: nop
  0x00007f003f2b4162: nop
  0x00007f003f2b4163: nop
  0x00007f003f2b4164: nop
  0x00007f003f2b4165: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b416f: jmp    0x00007f003f2b416f  ;   {runtime_call}
  0x00007f003f2b4174: nop
  0x00007f003f2b4175: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b417f: jmp    0x00007f003f2b417f  ;   {runtime_call}
  0x00007f003f2b4184: nop
  0x00007f003f2b4185: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b418f: jmp    0x00007f003f2b418f  ;   {runtime_call}
  0x00007f003f2b4194: nop
  0x00007f003f2b4195: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b419f: jmp    0x00007f003f2b419f  ;   {runtime_call}
  0x00007f003f2b41a4: nop
  0x00007f003f2b41a5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b41af: jmp    0x00007f003f2b41af  ;   {runtime_call}
  0x00007f003f2b41b4: nop
  0x00007f003f2b41b5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b41bf: jmp    0x00007f003f2b41bf  ;   {runtime_call}
  0x00007f003f2b41c4: nop
  0x00007f003f2b41c5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b41cf: jmp    0x00007f003f2b41cf  ;   {runtime_call}
  0x00007f003f2b41d4: nop
  0x00007f003f2b41d5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b41df: jmp    0x00007f003f2b41df  ;   {runtime_call}
  0x00007f003f2b41e4: nop
  0x00007f003f2b41e5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b41ef: jmp    0x00007f003f2b41ef  ;   {runtime_call}
  0x00007f003f2b41f4: nop
  0x00007f003f2b41f5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b41ff: jmp    0x00007f003f2b41ff  ;   {runtime_call}
  0x00007f003f2b4204: nop
  0x00007f003f2b4205: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b420f: jmp    0x00007f003f2b420f  ;   {runtime_call}
  0x00007f003f2b4214: nop
  0x00007f003f2b4215: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b421f: jmp    0x00007f003f2b421f  ;   {runtime_call}
  0x00007f003f2b4224: nop
  0x00007f003f2b4225: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b422f: jmp    0x00007f003f2b422f  ;   {runtime_call}
  0x00007f003f2b4234: nop
  0x00007f003f2b4235: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b423f: jmp    0x00007f003f2b423f  ;   {runtime_call}
  0x00007f003f2b4244: nop
  0x00007f003f2b4245: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b424f: jmp    0x00007f003f2b424f  ;   {runtime_call}
  0x00007f003f2b4254: nop
  0x00007f003f2b4255: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b425f: jmp    0x00007f003f2b425f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2b4264: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2b4269: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2b426e: sub    rsp,0x80
  0x00007f003f2b4275: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2b427a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2b427f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2b4284: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2b4289: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2b428e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2b4293: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2b4298: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2b429d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2b42a2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2b42a7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2b42ac: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2b42b1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2b42b6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2b42bb: mov    QWORD PTR [rsp],r15
  0x00007f003f2b42bf: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2b42c9: movabs rsi,0x7f003f2b4269  ;   {internal_word}
  0x00007f003f2b42d3: mov    rdx,rsp
  0x00007f003f2b42d6: and    rsp,0xfffffffffffffff0
  0x00007f003f2b42da: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2b42df: hlt    
[Deopt Handler Code]
  0x00007f003f2b42e0: movabs r10,0x7f003f2b42e0  ;   {section_word}
  0x00007f003f2b42ea: push   r10
  0x00007f003f2b42ec: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2b42f1: hlt    
  0x00007f003f2b42f2: hlt    
  0x00007f003f2b42f3: hlt    
  0x00007f003f2b42f4: hlt    
  0x00007f003f2b42f5: hlt    
  0x00007f003f2b42f6: hlt    
  0x00007f003f2b42f7: hlt    
<nmethod compile_id='86' compiler='C1' level='3' entry='0x00007f003f2b1c60' size='15768' address='0x00007f003f2b1890' relocation_offset='312' insts_offset='976' stub_offset='10448' scopes_data_offset='11056' scopes_pcs_offset='13056' dependencies_offset='15568' handler_table_offset='15584' nul_chk_table_offset='15680' oops_offset='10856' metadata_offset='10864' method='java/util/zip/ZipCoder getBytes (Ljava/lang/String;)[B' bytes='192' count='725' iicount='725' stamp='0.399'/>
----------------------------------------------------------------------
java/util/zip/ZipCoder.encoder  [0x00007f003f2b5c00, 0x00007f003f2b65a8]  2472 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038a49480} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;
  #           [sp+0x70]  (sp of caller)
  0x00007f003f2b5c00: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2b5c04: shl    r10,0x3
  0x00007f003f2b5c08: cmp    r10,rax
  0x00007f003f2b5c0b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2b5c11: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2b5c1c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2b5c20: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2b5c27: push   rbp
  0x00007f003f2b5c28: sub    rsp,0x60
  0x00007f003f2b5c2c: movabs rdi,0x7f0038a59b88  ;   {metadata(method data for {method} {0x00007f0038a49480} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b5c36: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2b5c3c: add    ebx,0x8
  0x00007f003f2b5c3f: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2b5c45: movabs rdi,0x7f0038a49480  ;   {metadata({method} {0x00007f0038a49480} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b5c4f: and    ebx,0x1ff8
  0x00007f003f2b5c55: cmp    ebx,0x0
  0x00007f003f2b5c58: je     0x00007f003f2b6433  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@0 (line 152)

  0x00007f003f2b5c5e: mov    edi,DWORD PTR [rsi+0x18]
  0x00007f003f2b5c61: shl    rdi,0x3            ;*getfield enc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@1 (line 152)

  0x00007f003f2b5c65: cmp    rdi,0x0
  0x00007f003f2b5c69: movabs rdi,0x7f0038a59b88  ;   {metadata(method data for {method} {0x00007f0038a49480} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b5c73: movabs rbx,0x130
  0x00007f003f2b5c7d: jne    0x00007f003f2b5c8d
  0x00007f003f2b5c83: movabs rbx,0x140
  0x00007f003f2b5c8d: mov    rax,QWORD PTR [rdi+rbx*1]
  0x00007f003f2b5c91: lea    rax,[rax+0x1]
  0x00007f003f2b5c95: mov    QWORD PTR [rdi+rbx*1],rax
  0x00007f003f2b5c99: jne    0x00007f003f2b6420  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@4 (line 152)

  0x00007f003f2b5c9f: mov    edi,DWORD PTR [rsi+0x10]
  0x00007f003f2b5ca2: shl    rdi,0x3            ;*getfield cs {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@9 (line 153)

  0x00007f003f2b5ca6: cmp    rax,QWORD PTR [rdi]  ; implicit exception: dispatches to 0x00007f003f2b644a
  0x00007f003f2b5ca9: mov    rbx,rdi
  0x00007f003f2b5cac: movabs rax,0x7f0038a59b88  ;   {metadata(method data for {method} {0x00007f0038a49480} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b5cb6: mov    ebx,DWORD PTR [rbx+0x8]
  0x00007f003f2b5cb9: shl    rbx,0x3
  0x00007f003f2b5cbd: cmp    rbx,QWORD PTR [rax+0x160]
  0x00007f003f2b5cc4: jne    0x00007f003f2b5cd3
  0x00007f003f2b5cc6: add    QWORD PTR [rax+0x168],0x1
  0x00007f003f2b5cce: jmp    0x00007f003f2b5e95
  0x00007f003f2b5cd3: cmp    rbx,QWORD PTR [rax+0x170]
  0x00007f003f2b5cda: jne    0x00007f003f2b5ce9
  0x00007f003f2b5cdc: add    QWORD PTR [rax+0x178],0x1
  0x00007f003f2b5ce4: jmp    0x00007f003f2b5e95
  0x00007f003f2b5ce9: cmp    rbx,QWORD PTR [rax+0x180]
  0x00007f003f2b5cf0: jne    0x00007f003f2b5cff
  0x00007f003f2b5cf2: add    QWORD PTR [rax+0x188],0x1
  0x00007f003f2b5cfa: jmp    0x00007f003f2b5e95
  0x00007f003f2b5cff: cmp    rbx,QWORD PTR [rax+0x190]
  0x00007f003f2b5d06: jne    0x00007f003f2b5d15
  0x00007f003f2b5d08: add    QWORD PTR [rax+0x198],0x1
  0x00007f003f2b5d10: jmp    0x00007f003f2b5e95
  0x00007f003f2b5d15: cmp    rbx,QWORD PTR [rax+0x1a0]
  0x00007f003f2b5d1c: jne    0x00007f003f2b5d2b
  0x00007f003f2b5d1e: add    QWORD PTR [rax+0x1a8],0x1
  0x00007f003f2b5d26: jmp    0x00007f003f2b5e95
  0x00007f003f2b5d2b: cmp    rbx,QWORD PTR [rax+0x1b0]
  0x00007f003f2b5d32: jne    0x00007f003f2b5d41
  0x00007f003f2b5d34: add    QWORD PTR [rax+0x1b8],0x1
  0x00007f003f2b5d3c: jmp    0x00007f003f2b5e95
  0x00007f003f2b5d41: cmp    rbx,QWORD PTR [rax+0x1c0]
  0x00007f003f2b5d48: jne    0x00007f003f2b5d57
  0x00007f003f2b5d4a: add    QWORD PTR [rax+0x1c8],0x1
  0x00007f003f2b5d52: jmp    0x00007f003f2b5e95
  0x00007f003f2b5d57: cmp    rbx,QWORD PTR [rax+0x1d0]
  0x00007f003f2b5d5e: jne    0x00007f003f2b5d6d
  0x00007f003f2b5d60: add    QWORD PTR [rax+0x1d8],0x1
  0x00007f003f2b5d68: jmp    0x00007f003f2b5e95
  0x00007f003f2b5d6d: cmp    QWORD PTR [rax+0x160],0x0
  0x00007f003f2b5d78: jne    0x00007f003f2b5d91
  0x00007f003f2b5d7a: mov    QWORD PTR [rax+0x160],rbx
  0x00007f003f2b5d81: mov    QWORD PTR [rax+0x168],0x1
  0x00007f003f2b5d8c: jmp    0x00007f003f2b5e95
  0x00007f003f2b5d91: cmp    QWORD PTR [rax+0x170],0x0
  0x00007f003f2b5d9c: jne    0x00007f003f2b5db5
  0x00007f003f2b5d9e: mov    QWORD PTR [rax+0x170],rbx
  0x00007f003f2b5da5: mov    QWORD PTR [rax+0x178],0x1
  0x00007f003f2b5db0: jmp    0x00007f003f2b5e95
  0x00007f003f2b5db5: cmp    QWORD PTR [rax+0x180],0x0
  0x00007f003f2b5dc0: jne    0x00007f003f2b5dd9
  0x00007f003f2b5dc2: mov    QWORD PTR [rax+0x180],rbx
  0x00007f003f2b5dc9: mov    QWORD PTR [rax+0x188],0x1
  0x00007f003f2b5dd4: jmp    0x00007f003f2b5e95
  0x00007f003f2b5dd9: cmp    QWORD PTR [rax+0x190],0x0
  0x00007f003f2b5de4: jne    0x00007f003f2b5dfd
  0x00007f003f2b5de6: mov    QWORD PTR [rax+0x190],rbx
  0x00007f003f2b5ded: mov    QWORD PTR [rax+0x198],0x1
  0x00007f003f2b5df8: jmp    0x00007f003f2b5e95
  0x00007f003f2b5dfd: cmp    QWORD PTR [rax+0x1a0],0x0
  0x00007f003f2b5e08: jne    0x00007f003f2b5e21
  0x00007f003f2b5e0a: mov    QWORD PTR [rax+0x1a0],rbx
  0x00007f003f2b5e11: mov    QWORD PTR [rax+0x1a8],0x1
  0x00007f003f2b5e1c: jmp    0x00007f003f2b5e95
  0x00007f003f2b5e21: cmp    QWORD PTR [rax+0x1b0],0x0
  0x00007f003f2b5e2c: jne    0x00007f003f2b5e45
  0x00007f003f2b5e2e: mov    QWORD PTR [rax+0x1b0],rbx
  0x00007f003f2b5e35: mov    QWORD PTR [rax+0x1b8],0x1
  0x00007f003f2b5e40: jmp    0x00007f003f2b5e95
  0x00007f003f2b5e45: cmp    QWORD PTR [rax+0x1c0],0x0
  0x00007f003f2b5e50: jne    0x00007f003f2b5e69
  0x00007f003f2b5e52: mov    QWORD PTR [rax+0x1c0],rbx
  0x00007f003f2b5e59: mov    QWORD PTR [rax+0x1c8],0x1
  0x00007f003f2b5e64: jmp    0x00007f003f2b5e95
  0x00007f003f2b5e69: cmp    QWORD PTR [rax+0x1d0],0x0
  0x00007f003f2b5e74: jne    0x00007f003f2b5e8d
  0x00007f003f2b5e76: mov    QWORD PTR [rax+0x1d0],rbx
  0x00007f003f2b5e7d: mov    QWORD PTR [rax+0x1d8],0x1
  0x00007f003f2b5e88: jmp    0x00007f003f2b5e95
  0x00007f003f2b5e8d: add    QWORD PTR [rax+0x150],0x1
  0x00007f003f2b5e95: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2b5e9a: mov    rsi,rdi            ;*invokevirtual newEncoder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@12 (line 153)

  0x00007f003f2b5e9d: movabs rax,0xffffffffffffffff
  0x00007f003f2b5ea7: call   0x00007f003f1c4f60  ; OopMap{[72]=Oop off=684}
                                                ;*invokevirtual newEncoder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@12 (line 153)
                                                ;   {virtual_call}
  0x00007f003f2b5eac: cmp    rax,QWORD PTR [rax]  ;*invokevirtual onMalformedInput {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ; implicit exception: dispatches to 0x00007f003f2b644f
  0x00007f003f2b5eaf: mov    rsi,rax
  0x00007f003f2b5eb2: movabs rdi,0x7f0038a59b88  ;   {metadata(method data for {method} {0x00007f0038a49480} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b5ebc: add    QWORD PTR [rdi+0x1e8],0x1
  0x00007f003f2b5ec4: movabs rsi,0x7f0038a61430  ;   {metadata(method data for {method} {0x00007f00388dfac0} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b5ece: mov    edi,DWORD PTR [rsi+0xfc]
  0x00007f003f2b5ed4: add    edi,0x8
  0x00007f003f2b5ed7: mov    DWORD PTR [rsi+0xfc],edi
  0x00007f003f2b5edd: movabs rsi,0x7f00388dfac0  ;   {metadata({method} {0x00007f00388dfac0} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b5ee7: and    edi,0x7ffff8
  0x00007f003f2b5eed: cmp    edi,0x0
  0x00007f003f2b5ef0: je     0x00007f003f2b6454
  0x00007f003f2b5ef6: movabs rsi,0x7f0038a61430  ;   {metadata(method data for {method} {0x00007f00388dfac0} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b5f00: inc    DWORD PTR [rsi+0x130]  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@1 (line 382)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)

  0x00007f003f2b5f06: movabs rsi,0x670b96908    ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00007f003f2b5f10: movabs r10,0x670b96908    ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00007f003f2b5f1a: shr    r10,0x3
  0x00007f003f2b5f1e: mov    DWORD PTR [rax+0x20],r10d
  0x00007f003f2b5f22: mov    rsi,rax
  0x00007f003f2b5f25: shr    rsi,0x9
  0x00007f003f2b5f29: movabs rdi,0x7f003ae7c000
  0x00007f003f2b5f33: mov    BYTE PTR [rsi+rdi*1],0x0  ;*putfield malformedInputAction {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@16 (line 384)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)

  0x00007f003f2b5f37: mov    rsi,rax
  0x00007f003f2b5f3a: movabs rdi,0x7f0038a61430  ;   {metadata(method data for {method} {0x00007f00388dfac0} &apos;onMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b5f44: mov    esi,DWORD PTR [rsi+0x8]
  0x00007f003f2b5f47: shl    rsi,0x3
  0x00007f003f2b5f4b: cmp    rsi,QWORD PTR [rdi+0x170]
  0x00007f003f2b5f52: jne    0x00007f003f2b5f61
  0x00007f003f2b5f54: add    QWORD PTR [rdi+0x178],0x1
  0x00007f003f2b5f5c: jmp    0x00007f003f2b6123
  0x00007f003f2b5f61: cmp    rsi,QWORD PTR [rdi+0x180]
  0x00007f003f2b5f68: jne    0x00007f003f2b5f77
  0x00007f003f2b5f6a: add    QWORD PTR [rdi+0x188],0x1
  0x00007f003f2b5f72: jmp    0x00007f003f2b6123
  0x00007f003f2b5f77: cmp    rsi,QWORD PTR [rdi+0x190]
  0x00007f003f2b5f7e: jne    0x00007f003f2b5f8d
  0x00007f003f2b5f80: add    QWORD PTR [rdi+0x198],0x1
  0x00007f003f2b5f88: jmp    0x00007f003f2b6123
  0x00007f003f2b5f8d: cmp    rsi,QWORD PTR [rdi+0x1a0]
  0x00007f003f2b5f94: jne    0x00007f003f2b5fa3
  0x00007f003f2b5f96: add    QWORD PTR [rdi+0x1a8],0x1
  0x00007f003f2b5f9e: jmp    0x00007f003f2b6123
  0x00007f003f2b5fa3: cmp    rsi,QWORD PTR [rdi+0x1b0]
  0x00007f003f2b5faa: jne    0x00007f003f2b5fb9
  0x00007f003f2b5fac: add    QWORD PTR [rdi+0x1b8],0x1
  0x00007f003f2b5fb4: jmp    0x00007f003f2b6123
  0x00007f003f2b5fb9: cmp    rsi,QWORD PTR [rdi+0x1c0]
  0x00007f003f2b5fc0: jne    0x00007f003f2b5fcf
  0x00007f003f2b5fc2: add    QWORD PTR [rdi+0x1c8],0x1
  0x00007f003f2b5fca: jmp    0x00007f003f2b6123
  0x00007f003f2b5fcf: cmp    rsi,QWORD PTR [rdi+0x1d0]
  0x00007f003f2b5fd6: jne    0x00007f003f2b5fe5
  0x00007f003f2b5fd8: add    QWORD PTR [rdi+0x1d8],0x1
  0x00007f003f2b5fe0: jmp    0x00007f003f2b6123
  0x00007f003f2b5fe5: cmp    rsi,QWORD PTR [rdi+0x1e0]
  0x00007f003f2b5fec: jne    0x00007f003f2b5ffb
  0x00007f003f2b5fee: add    QWORD PTR [rdi+0x1e8],0x1
  0x00007f003f2b5ff6: jmp    0x00007f003f2b6123
  0x00007f003f2b5ffb: cmp    QWORD PTR [rdi+0x170],0x0
  0x00007f003f2b6006: jne    0x00007f003f2b601f
  0x00007f003f2b6008: mov    QWORD PTR [rdi+0x170],rsi
  0x00007f003f2b600f: mov    QWORD PTR [rdi+0x178],0x1
  0x00007f003f2b601a: jmp    0x00007f003f2b6123
  0x00007f003f2b601f: cmp    QWORD PTR [rdi+0x180],0x0
  0x00007f003f2b602a: jne    0x00007f003f2b6043
  0x00007f003f2b602c: mov    QWORD PTR [rdi+0x180],rsi
  0x00007f003f2b6033: mov    QWORD PTR [rdi+0x188],0x1
  0x00007f003f2b603e: jmp    0x00007f003f2b6123
  0x00007f003f2b6043: cmp    QWORD PTR [rdi+0x190],0x0
  0x00007f003f2b604e: jne    0x00007f003f2b6067
  0x00007f003f2b6050: mov    QWORD PTR [rdi+0x190],rsi
  0x00007f003f2b6057: mov    QWORD PTR [rdi+0x198],0x1
  0x00007f003f2b6062: jmp    0x00007f003f2b6123
  0x00007f003f2b6067: cmp    QWORD PTR [rdi+0x1a0],0x0
  0x00007f003f2b6072: jne    0x00007f003f2b608b
  0x00007f003f2b6074: mov    QWORD PTR [rdi+0x1a0],rsi
  0x00007f003f2b607b: mov    QWORD PTR [rdi+0x1a8],0x1
  0x00007f003f2b6086: jmp    0x00007f003f2b6123
  0x00007f003f2b608b: cmp    QWORD PTR [rdi+0x1b0],0x0
  0x00007f003f2b6096: jne    0x00007f003f2b60af
  0x00007f003f2b6098: mov    QWORD PTR [rdi+0x1b0],rsi
  0x00007f003f2b609f: mov    QWORD PTR [rdi+0x1b8],0x1
  0x00007f003f2b60aa: jmp    0x00007f003f2b6123
  0x00007f003f2b60af: cmp    QWORD PTR [rdi+0x1c0],0x0
  0x00007f003f2b60ba: jne    0x00007f003f2b60d3
  0x00007f003f2b60bc: mov    QWORD PTR [rdi+0x1c0],rsi
  0x00007f003f2b60c3: mov    QWORD PTR [rdi+0x1c8],0x1
  0x00007f003f2b60ce: jmp    0x00007f003f2b6123
  0x00007f003f2b60d3: cmp    QWORD PTR [rdi+0x1d0],0x0
  0x00007f003f2b60de: jne    0x00007f003f2b60f7
  0x00007f003f2b60e0: mov    QWORD PTR [rdi+0x1d0],rsi
  0x00007f003f2b60e7: mov    QWORD PTR [rdi+0x1d8],0x1
  0x00007f003f2b60f2: jmp    0x00007f003f2b6123
  0x00007f003f2b60f7: cmp    QWORD PTR [rdi+0x1e0],0x0
  0x00007f003f2b6102: jne    0x00007f003f2b611b
  0x00007f003f2b6104: mov    QWORD PTR [rdi+0x1e0],rsi
  0x00007f003f2b610b: mov    QWORD PTR [rdi+0x1e8],0x1
  0x00007f003f2b6116: jmp    0x00007f003f2b6123
  0x00007f003f2b611b: add    QWORD PTR [rdi+0x160],0x1
  0x00007f003f2b6123: movabs rsi,0x7f0038a61670  ;   {metadata(method data for {method} {0x00007f00388dfb68} &apos;implOnMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b612d: mov    edi,DWORD PTR [rsi+0xfc]
  0x00007f003f2b6133: add    edi,0x8
  0x00007f003f2b6136: mov    DWORD PTR [rsi+0xfc],edi
  0x00007f003f2b613c: movabs rsi,0x7f00388dfb68  ;   {metadata({method} {0x00007f00388dfb68} &apos;implOnMalformedInput&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b6146: and    edi,0x7ffff8
  0x00007f003f2b614c: cmp    edi,0x0
  0x00007f003f2b614f: je     0x00007f003f2b646b
  0x00007f003f2b6155: mov    rsi,rax
  0x00007f003f2b6158: movabs rdi,0x7f0038a59b88  ;   {metadata(method data for {method} {0x00007f0038a49480} &apos;encoder&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/util/zip/ZipCoder&apos;)}
  0x00007f003f2b6162: add    QWORD PTR [rdi+0x280],0x1
  0x00007f003f2b616a: movabs rsi,0x7f0038a617c0  ;   {metadata(method data for {method} {0x00007f00388dfcd0} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b6174: mov    edi,DWORD PTR [rsi+0xfc]
  0x00007f003f2b617a: add    edi,0x8
  0x00007f003f2b617d: mov    DWORD PTR [rsi+0xfc],edi
  0x00007f003f2b6183: movabs rsi,0x7f00388dfcd0  ;   {metadata({method} {0x00007f00388dfcd0} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b618d: and    edi,0x7ffff8
  0x00007f003f2b6193: cmp    edi,0x0
  0x00007f003f2b6196: je     0x00007f003f2b6482
  0x00007f003f2b619c: movabs rsi,0x7f0038a617c0  ;   {metadata(method data for {method} {0x00007f00388dfcd0} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b61a6: inc    DWORD PTR [rsi+0x130]  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@1 (line 426)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)

  0x00007f003f2b61ac: movabs rsi,0x670b96908    ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00007f003f2b61b6: movabs r10,0x670b96908    ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00007f003f2b61c0: shr    r10,0x3
  0x00007f003f2b61c4: mov    DWORD PTR [rax+0x24],r10d
  0x00007f003f2b61c8: mov    rsi,rax
  0x00007f003f2b61cb: shr    rsi,0x9
  0x00007f003f2b61cf: movabs rdi,0x7f003ae7c000
  0x00007f003f2b61d9: mov    BYTE PTR [rsi+rdi*1],0x0  ;*putfield unmappableCharacterAction {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@16 (line 428)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)

  0x00007f003f2b61dd: mov    rsi,rax
  0x00007f003f2b61e0: movabs rdi,0x7f0038a617c0  ;   {metadata(method data for {method} {0x00007f00388dfcd0} &apos;onUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b61ea: mov    esi,DWORD PTR [rsi+0x8]
  0x00007f003f2b61ed: shl    rsi,0x3
  0x00007f003f2b61f1: cmp    rsi,QWORD PTR [rdi+0x170]
  0x00007f003f2b61f8: jne    0x00007f003f2b6207
  0x00007f003f2b61fa: add    QWORD PTR [rdi+0x178],0x1
  0x00007f003f2b6202: jmp    0x00007f003f2b63c9
  0x00007f003f2b6207: cmp    rsi,QWORD PTR [rdi+0x180]
  0x00007f003f2b620e: jne    0x00007f003f2b621d
  0x00007f003f2b6210: add    QWORD PTR [rdi+0x188],0x1
  0x00007f003f2b6218: jmp    0x00007f003f2b63c9
  0x00007f003f2b621d: cmp    rsi,QWORD PTR [rdi+0x190]
  0x00007f003f2b6224: jne    0x00007f003f2b6233
  0x00007f003f2b6226: add    QWORD PTR [rdi+0x198],0x1
  0x00007f003f2b622e: jmp    0x00007f003f2b63c9
  0x00007f003f2b6233: cmp    rsi,QWORD PTR [rdi+0x1a0]
  0x00007f003f2b623a: jne    0x00007f003f2b6249
  0x00007f003f2b623c: add    QWORD PTR [rdi+0x1a8],0x1
  0x00007f003f2b6244: jmp    0x00007f003f2b63c9
  0x00007f003f2b6249: cmp    rsi,QWORD PTR [rdi+0x1b0]
  0x00007f003f2b6250: jne    0x00007f003f2b625f
  0x00007f003f2b6252: add    QWORD PTR [rdi+0x1b8],0x1
  0x00007f003f2b625a: jmp    0x00007f003f2b63c9
  0x00007f003f2b625f: cmp    rsi,QWORD PTR [rdi+0x1c0]
  0x00007f003f2b6266: jne    0x00007f003f2b6275
  0x00007f003f2b6268: add    QWORD PTR [rdi+0x1c8],0x1
  0x00007f003f2b6270: jmp    0x00007f003f2b63c9
  0x00007f003f2b6275: cmp    rsi,QWORD PTR [rdi+0x1d0]
  0x00007f003f2b627c: jne    0x00007f003f2b628b
  0x00007f003f2b627e: add    QWORD PTR [rdi+0x1d8],0x1
  0x00007f003f2b6286: jmp    0x00007f003f2b63c9
  0x00007f003f2b628b: cmp    rsi,QWORD PTR [rdi+0x1e0]
  0x00007f003f2b6292: jne    0x00007f003f2b62a1
  0x00007f003f2b6294: add    QWORD PTR [rdi+0x1e8],0x1
  0x00007f003f2b629c: jmp    0x00007f003f2b63c9
  0x00007f003f2b62a1: cmp    QWORD PTR [rdi+0x170],0x0
  0x00007f003f2b62ac: jne    0x00007f003f2b62c5
  0x00007f003f2b62ae: mov    QWORD PTR [rdi+0x170],rsi
  0x00007f003f2b62b5: mov    QWORD PTR [rdi+0x178],0x1
  0x00007f003f2b62c0: jmp    0x00007f003f2b63c9
  0x00007f003f2b62c5: cmp    QWORD PTR [rdi+0x180],0x0
  0x00007f003f2b62d0: jne    0x00007f003f2b62e9
  0x00007f003f2b62d2: mov    QWORD PTR [rdi+0x180],rsi
  0x00007f003f2b62d9: mov    QWORD PTR [rdi+0x188],0x1
  0x00007f003f2b62e4: jmp    0x00007f003f2b63c9
  0x00007f003f2b62e9: cmp    QWORD PTR [rdi+0x190],0x0
  0x00007f003f2b62f4: jne    0x00007f003f2b630d
  0x00007f003f2b62f6: mov    QWORD PTR [rdi+0x190],rsi
  0x00007f003f2b62fd: mov    QWORD PTR [rdi+0x198],0x1
  0x00007f003f2b6308: jmp    0x00007f003f2b63c9
  0x00007f003f2b630d: cmp    QWORD PTR [rdi+0x1a0],0x0
  0x00007f003f2b6318: jne    0x00007f003f2b6331
  0x00007f003f2b631a: mov    QWORD PTR [rdi+0x1a0],rsi
  0x00007f003f2b6321: mov    QWORD PTR [rdi+0x1a8],0x1
  0x00007f003f2b632c: jmp    0x00007f003f2b63c9
  0x00007f003f2b6331: cmp    QWORD PTR [rdi+0x1b0],0x0
  0x00007f003f2b633c: jne    0x00007f003f2b6355
  0x00007f003f2b633e: mov    QWORD PTR [rdi+0x1b0],rsi
  0x00007f003f2b6345: mov    QWORD PTR [rdi+0x1b8],0x1
  0x00007f003f2b6350: jmp    0x00007f003f2b63c9
  0x00007f003f2b6355: cmp    QWORD PTR [rdi+0x1c0],0x0
  0x00007f003f2b6360: jne    0x00007f003f2b6379
  0x00007f003f2b6362: mov    QWORD PTR [rdi+0x1c0],rsi
  0x00007f003f2b6369: mov    QWORD PTR [rdi+0x1c8],0x1
  0x00007f003f2b6374: jmp    0x00007f003f2b63c9
  0x00007f003f2b6379: cmp    QWORD PTR [rdi+0x1d0],0x0
  0x00007f003f2b6384: jne    0x00007f003f2b639d
  0x00007f003f2b6386: mov    QWORD PTR [rdi+0x1d0],rsi
  0x00007f003f2b638d: mov    QWORD PTR [rdi+0x1d8],0x1
  0x00007f003f2b6398: jmp    0x00007f003f2b63c9
  0x00007f003f2b639d: cmp    QWORD PTR [rdi+0x1e0],0x0
  0x00007f003f2b63a8: jne    0x00007f003f2b63c1
  0x00007f003f2b63aa: mov    QWORD PTR [rdi+0x1e0],rsi
  0x00007f003f2b63b1: mov    QWORD PTR [rdi+0x1e8],0x1
  0x00007f003f2b63bc: jmp    0x00007f003f2b63c9
  0x00007f003f2b63c1: add    QWORD PTR [rdi+0x160],0x1
  0x00007f003f2b63c9: movabs rsi,0x7f0038a61a00  ;   {metadata(method data for {method} {0x00007f00388dfd78} &apos;implOnUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b63d3: mov    edi,DWORD PTR [rsi+0xfc]
  0x00007f003f2b63d9: add    edi,0x8
  0x00007f003f2b63dc: mov    DWORD PTR [rsi+0xfc],edi
  0x00007f003f2b63e2: movabs rsi,0x7f00388dfd78  ;   {metadata({method} {0x00007f00388dfd78} &apos;implOnUnmappableCharacter&apos; &apos;(Ljava/nio/charset/CodingErrorAction;)V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00007f003f2b63ec: and    edi,0x7ffff8
  0x00007f003f2b63f2: cmp    edi,0x0
  0x00007f003f2b63f5: je     0x00007f003f2b6499
  0x00007f003f2b63fb: mov    rsi,QWORD PTR [rsp+0x48]
  0x00007f003f2b6400: mov    r10,rax
  0x00007f003f2b6403: shr    r10,0x3
  0x00007f003f2b6407: mov    DWORD PTR [rsi+0x18],r10d
  0x00007f003f2b640b: mov    rax,rsi
  0x00007f003f2b640e: shr    rax,0x9
  0x00007f003f2b6412: movabs rdi,0x7f003ae7c000
  0x00007f003f2b641c: mov    BYTE PTR [rax+rdi*1],0x0  ;*putfield enc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@27 (line 155)

  0x00007f003f2b6420: mov    eax,DWORD PTR [rsi+0x18]
  0x00007f003f2b6423: shl    rax,0x3            ;*getfield enc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@31 (line 157)

  0x00007f003f2b6427: add    rsp,0x60
  0x00007f003f2b642b: pop    rbp
  0x00007f003f2b642c: test   DWORD PTR [rip+0x1b10bcce],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2b6432: ret    
  0x00007f003f2b6433: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2b6438: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b6440: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=2117}
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipCoder::encoder@-1 (line 152)
                                                ;   {runtime_call}
  0x00007f003f2b6445: jmp    0x00007f003f2b5c5e
  0x00007f003f2b644a: call   0x00007f003f279000  ; OopMap{rsi=Oop rdi=Oop off=2127}
                                                ;*invokevirtual newEncoder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@12 (line 153)
                                                ;   {runtime_call}
  0x00007f003f2b644f: call   0x00007f003f279000  ; OopMap{[72]=Oop rax=Oop off=2132}
                                                ;*invokevirtual onMalformedInput {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ;   {runtime_call}
  0x00007f003f2b6454: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2b6459: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b6461: call   0x00007f003f27d5e0  ; OopMap{[72]=Oop rax=Oop off=2150}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@-1 (line 382)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ;   {runtime_call}
  0x00007f003f2b6466: jmp    0x00007f003f2b5ef6
  0x00007f003f2b646b: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2b6470: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b6478: call   0x00007f003f27d5e0  ; OopMap{[72]=Oop rax=Oop off=2173}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::implOnMalformedInput@-1 (line 398)
                                                ; - java.nio.charset.CharsetEncoder::onMalformedInput@21 (line 385)
                                                ; - java.util.zip.ZipCoder::encoder@18 (line 154)
                                                ;   {runtime_call}
  0x00007f003f2b647d: jmp    0x00007f003f2b6155
  0x00007f003f2b6482: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2b6487: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b648f: call   0x00007f003f27d5e0  ; OopMap{[72]=Oop rax=Oop off=2196}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@-1 (line 426)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)
                                                ;   {runtime_call}
  0x00007f003f2b6494: jmp    0x00007f003f2b619c
  0x00007f003f2b6499: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2b649e: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b64a6: call   0x00007f003f27d5e0  ; OopMap{[72]=Oop rax=Oop off=2219}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::implOnUnmappableCharacter@-1 (line 442)
                                                ; - java.nio.charset.CharsetEncoder::onUnmappableCharacter@21 (line 429)
                                                ; - java.util.zip.ZipCoder::encoder@24 (line 155)
                                                ;   {runtime_call}
  0x00007f003f2b64ab: jmp    0x00007f003f2b63fb
  0x00007f003f2b64b0: nop
  0x00007f003f2b64b1: nop
  0x00007f003f2b64b2: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2b64b9: movabs r10,0x0
  0x00007f003f2b64c3: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2b64ca: movabs r10,0x0
  0x00007f003f2b64d4: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2b64db: add    rsp,0x60
  0x00007f003f2b64df: pop    rbp
  0x00007f003f2b64e0: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2b64e5: hlt    
  0x00007f003f2b64e6: hlt    
  0x00007f003f2b64e7: hlt    
  0x00007f003f2b64e8: hlt    
  0x00007f003f2b64e9: hlt    
  0x00007f003f2b64ea: hlt    
  0x00007f003f2b64eb: hlt    
  0x00007f003f2b64ec: hlt    
  0x00007f003f2b64ed: hlt    
  0x00007f003f2b64ee: hlt    
  0x00007f003f2b64ef: hlt    
  0x00007f003f2b64f0: hlt    
  0x00007f003f2b64f1: hlt    
  0x00007f003f2b64f2: hlt    
  0x00007f003f2b64f3: hlt    
  0x00007f003f2b64f4: hlt    
  0x00007f003f2b64f5: hlt    
  0x00007f003f2b64f6: hlt    
  0x00007f003f2b64f7: hlt    
  0x00007f003f2b64f8: hlt    
  0x00007f003f2b64f9: hlt    
  0x00007f003f2b64fa: hlt    
  0x00007f003f2b64fb: hlt    
  0x00007f003f2b64fc: hlt    
  0x00007f003f2b64fd: hlt    
  0x00007f003f2b64fe: hlt    
  0x00007f003f2b64ff: hlt    
[Stub Code]
  0x00007f003f2b6500: nop                       ;   {no_reloc}
  0x00007f003f2b6501: nop
  0x00007f003f2b6502: nop
  0x00007f003f2b6503: nop
  0x00007f003f2b6504: nop
  0x00007f003f2b6505: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b650f: jmp    0x00007f003f2b650f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2b6514: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2b6519: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2b651e: sub    rsp,0x80
  0x00007f003f2b6525: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2b652a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2b652f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2b6534: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2b6539: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2b653e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2b6543: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2b6548: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2b654d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2b6552: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2b6557: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2b655c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2b6561: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2b6566: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2b656b: mov    QWORD PTR [rsp],r15
  0x00007f003f2b656f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2b6579: movabs rsi,0x7f003f2b6519  ;   {internal_word}
  0x00007f003f2b6583: mov    rdx,rsp
  0x00007f003f2b6586: and    rsp,0xfffffffffffffff0
  0x00007f003f2b658a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2b658f: hlt    
[Deopt Handler Code]
  0x00007f003f2b6590: movabs r10,0x7f003f2b6590  ;   {section_word}
  0x00007f003f2b659a: push   r10
  0x00007f003f2b659c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2b65a1: hlt    
  0x00007f003f2b65a2: hlt    
  0x00007f003f2b65a3: hlt    
  0x00007f003f2b65a4: hlt    
  0x00007f003f2b65a5: hlt    
  0x00007f003f2b65a6: hlt    
  0x00007f003f2b65a7: hlt    
<nmethod compile_id='87' compiler='C1' level='3' entry='0x00007f003f2b5c00' size='3520' address='0x00007f003f2b5a50' relocation_offset='312' insts_offset='432' stub_offset='2736' scopes_data_offset='2952' scopes_pcs_offset='3136' dependencies_offset='3488' nul_chk_table_offset='3496' oops_offset='2904' metadata_offset='2912' method='java/util/zip/ZipCoder encoder ()Ljava/nio/charset/CharsetEncoder;' bytes='35' count='725' iicount='725' stamp='0.403'/>
<writer thread='139637818533632'/>
[Loaded java.util.Arrays$ArrayList from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/jar/JarFile.getJarEntry  [0x00007f003f2b6a00, 0x00007f003f2b7018]  1560 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;
  # this:     rsi:rsi   = &apos;java/util/jar/JarFile&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0xa0]  (sp of caller)
  0x00007f003f2b6a00: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2b6a04: shl    r10,0x3
  0x00007f003f2b6a08: cmp    r10,rax
  0x00007f003f2b6a0b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2b6a11: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2b6a1c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2b6a20: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2b6a27: push   rbp
  0x00007f003f2b6a28: sub    rsp,0x90
  0x00007f003f2b6a2f: movabs rdi,0x7f0038a5b648  ;   {metadata(method data for {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b6a39: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2b6a3f: add    ebx,0x8
  0x00007f003f2b6a42: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2b6a48: movabs rdi,0x7f0038a3bd38  ;   {metadata({method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b6a52: and    ebx,0x1ff8
  0x00007f003f2b6a58: cmp    ebx,0x0
  0x00007f003f2b6a5b: je     0x00007f003f2b6e9b  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@0 (line 223)

  0x00007f003f2b6a61: mov    rdi,rsi
  0x00007f003f2b6a64: movabs rbx,0x7f0038a5b648  ;   {metadata(method data for {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b6a6e: add    QWORD PTR [rbx+0x148],0x1
  0x00007f003f2b6a76: movabs rdi,0x7f0038a5b8f0  ;   {metadata(method data for {method} {0x00007f0038a3be08} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b6a80: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2b6a86: add    ebx,0x8
  0x00007f003f2b6a89: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2b6a8f: movabs rdi,0x7f0038a3be08  ;   {metadata({method} {0x00007f0038a3be08} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b6a99: and    ebx,0x7ffff8
  0x00007f003f2b6a9f: cmp    ebx,0x0
  0x00007f003f2b6aa2: je     0x00007f003f2b6eb2
  0x00007f003f2b6aa8: mov    rdi,rsi
  0x00007f003f2b6aab: movabs rbx,0x7f0038a5b8f0  ;   {metadata(method data for {method} {0x00007f0038a3be08} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b6ab5: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f2b6abd: mov    rdi,rsi
  0x00007f003f2b6ac0: mov    rsi,rdi            ;*invokespecial getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@2 (line 240)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)

  0x00007f003f2b6ac3: mov    QWORD PTR [rsp+0x70],rdi
  0x00007f003f2b6ac8: nop
  0x00007f003f2b6ac9: nop
  0x00007f003f2b6aca: nop
  0x00007f003f2b6acb: nop
  0x00007f003f2b6acc: nop
  0x00007f003f2b6acd: nop
  0x00007f003f2b6ace: nop
  0x00007f003f2b6acf: call   0x00007f003f1c4d60  ; OopMap{[112]=Oop off=212}
                                                ;*invokespecial getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@2 (line 240)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ;   {optimized virtual_call}
  0x00007f003f2b6ad4: mov    rbx,rax            ;*invokespecial getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@2 (line 240)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)

  0x00007f003f2b6ad7: cmp    rbx,0x0
  0x00007f003f2b6adb: movabs rdx,0x7f0038a5b8f0  ;   {metadata(method data for {method} {0x00007f0038a3be08} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b6ae5: movabs rsi,0x140
  0x00007f003f2b6aef: je     0x00007f003f2b6aff
  0x00007f003f2b6af5: movabs rsi,0x150
  0x00007f003f2b6aff: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2b6b03: lea    rdi,[rdi+0x1]
  0x00007f003f2b6b07: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2b6b0b: je     0x00007f003f2b6c46  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@7 (line 241)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)

  0x00007f003f2b6b11: mov    r8,QWORD PTR [rsp+0x70]
  0x00007f003f2b6b16: movabs rdx,0x7c0050ba0    ;   {metadata(&apos;java/util/jar/JarFile$JarFileEntry&apos;)}
  0x00007f003f2b6b20: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2b6b24: lea    rdi,[rax+0x60]
  0x00007f003f2b6b28: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2b6b2c: ja     0x00007f003f2b6ec9
  0x00007f003f2b6b32: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2b6b36: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2b6b3d: mov    QWORD PTR [rax],rcx
  0x00007f003f2b6b40: mov    rcx,rdx
  0x00007f003f2b6b43: shr    rcx,0x3
  0x00007f003f2b6b47: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2b6b4a: xor    rcx,rcx
  0x00007f003f2b6b4d: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2b6b50: xor    rcx,rcx
  0x00007f003f2b6b53: movabs rdi,0xa
  0x00007f003f2b6b5d: mov    QWORD PTR [rax+rdi*8+0x8],rcx
  0x00007f003f2b6b62: dec    rdi
  0x00007f003f2b6b65: jne    0x00007f003f2b6b5d  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@10 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)

  0x00007f003f2b6b67: mov    rdx,rax
  0x00007f003f2b6b6a: movabs rsi,0x7f0038a5b8f0  ;   {metadata(method data for {method} {0x00007f0038a3be08} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b6b74: add    QWORD PTR [rsi+0x160],0x1
  0x00007f003f2b6b7c: movabs rdx,0x7f0038a64f18  ;   {metadata(method data for {method} {0x00007f0038a52bd8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/jar/JarFile;Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarFile$JarFileEntry&apos;)}
  0x00007f003f2b6b86: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2b6b8c: add    esi,0x8
  0x00007f003f2b6b8f: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2b6b95: movabs rdx,0x7f0038a52bd8  ;   {metadata({method} {0x00007f0038a52bd8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/jar/JarFile;Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarFile$JarFileEntry&apos;)}
  0x00007f003f2b6b9f: and    esi,0x7ffff8
  0x00007f003f2b6ba5: cmp    esi,0x0
  0x00007f003f2b6ba8: je     0x00007f003f2b6ed6
  0x00007f003f2b6bae: mov    r10,r8
  0x00007f003f2b6bb1: shr    r10,0x3
  0x00007f003f2b6bb5: mov    DWORD PTR [rax+0x58],r10d
  0x00007f003f2b6bb9: mov    rdx,rax
  0x00007f003f2b6bbc: shr    rdx,0x9
  0x00007f003f2b6bc0: movabs rsi,0x7f003ae7c000
  0x00007f003f2b6bca: mov    BYTE PTR [rdx+rsi*1],0x0  ;*putfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@2 (line 286)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)

  0x00007f003f2b6bce: mov    rdx,rax
  0x00007f003f2b6bd1: movabs rsi,0x7f0038a64f18  ;   {metadata(method data for {method} {0x00007f0038a52bd8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/jar/JarFile;Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarFile$JarFileEntry&apos;)}
  0x00007f003f2b6bdb: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2b6be3: movabs rdx,0x7f0038a65098  ;   {metadata(method data for {method} {0x00007f0038a532e8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarEntry&apos;)}
  0x00007f003f2b6bed: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2b6bf3: add    esi,0x8
  0x00007f003f2b6bf6: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2b6bfc: movabs rdx,0x7f0038a532e8  ;   {metadata({method} {0x00007f0038a532e8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarEntry&apos;)}
  0x00007f003f2b6c06: and    esi,0x7ffff8
  0x00007f003f2b6c0c: cmp    esi,0x0
  0x00007f003f2b6c0f: je     0x00007f003f2b6eed
  0x00007f003f2b6c15: mov    rdx,rax
  0x00007f003f2b6c18: movabs rsi,0x7f0038a65098  ;   {metadata(method data for {method} {0x00007f0038a532e8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarEntry&apos;)}
  0x00007f003f2b6c22: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2b6c2a: mov    rdx,rbx
  0x00007f003f2b6c2d: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarEntry::&lt;init&gt;@2 (line 62)
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@7 (line 287)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)

  0x00007f003f2b6c30: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2b6c35: nop
  0x00007f003f2b6c36: nop
  0x00007f003f2b6c37: call   0x00007f003f1c4d60  ; OopMap{[120]=Oop off=572}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarEntry::&lt;init&gt;@2 (line 62)
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@7 (line 287)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ;   {optimized virtual_call}
  0x00007f003f2b6c3c: mov    rax,QWORD PTR [rsp+0x78]
  0x00007f003f2b6c41: jmp    0x00007f003f2b6c50
  0x00007f003f2b6c46: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f2b6c50: cmp    rax,0x0
  0x00007f003f2b6c54: jne    0x00007f003f2b6c6f
  0x00007f003f2b6c56: movabs rdi,0x7f0038a5b648  ;   {metadata(method data for {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b6c60: or     DWORD PTR [rdi+0x1c0],0x100
  0x00007f003f2b6c6a: jmp    0x00007f003f2b6e8c
  0x00007f003f2b6c6f: movabs rbx,0x7c00508e8    ;   {metadata(&apos;java/util/jar/JarEntry&apos;)}
  0x00007f003f2b6c79: mov    edi,DWORD PTR [rax+0x8]
  0x00007f003f2b6c7c: shl    rdi,0x3
  0x00007f003f2b6c80: cmp    rbx,QWORD PTR [rdi+0x38]
  0x00007f003f2b6c84: jne    0x00007f003f2b6e70
  0x00007f003f2b6c8a: movabs rdi,0x7f0038a5b648  ;   {metadata(method data for {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b6c94: mov    ebx,DWORD PTR [rax+0x8]
  0x00007f003f2b6c97: shl    rbx,0x3
  0x00007f003f2b6c9b: cmp    rbx,QWORD PTR [rdi+0x1d8]
  0x00007f003f2b6ca2: jne    0x00007f003f2b6cb1
  0x00007f003f2b6ca4: add    QWORD PTR [rdi+0x1e0],0x1
  0x00007f003f2b6cac: jmp    0x00007f003f2b6e8c
  0x00007f003f2b6cb1: cmp    rbx,QWORD PTR [rdi+0x1e8]
  0x00007f003f2b6cb8: jne    0x00007f003f2b6cc7
  0x00007f003f2b6cba: add    QWORD PTR [rdi+0x1f0],0x1
  0x00007f003f2b6cc2: jmp    0x00007f003f2b6e8c
  0x00007f003f2b6cc7: cmp    rbx,QWORD PTR [rdi+0x1f8]
  0x00007f003f2b6cce: jne    0x00007f003f2b6cdd
  0x00007f003f2b6cd0: add    QWORD PTR [rdi+0x200],0x1
  0x00007f003f2b6cd8: jmp    0x00007f003f2b6e8c
  0x00007f003f2b6cdd: cmp    rbx,QWORD PTR [rdi+0x208]
  0x00007f003f2b6ce4: jne    0x00007f003f2b6cf3
  0x00007f003f2b6ce6: add    QWORD PTR [rdi+0x210],0x1
  0x00007f003f2b6cee: jmp    0x00007f003f2b6e8c
  0x00007f003f2b6cf3: cmp    rbx,QWORD PTR [rdi+0x218]
  0x00007f003f2b6cfa: jne    0x00007f003f2b6d09
  0x00007f003f2b6cfc: add    QWORD PTR [rdi+0x220],0x1
  0x00007f003f2b6d04: jmp    0x00007f003f2b6e8c
  0x00007f003f2b6d09: cmp    rbx,QWORD PTR [rdi+0x228]
  0x00007f003f2b6d10: jne    0x00007f003f2b6d1f
  0x00007f003f2b6d12: add    QWORD PTR [rdi+0x230],0x1
  0x00007f003f2b6d1a: jmp    0x00007f003f2b6e8c
  0x00007f003f2b6d1f: cmp    rbx,QWORD PTR [rdi+0x238]
  0x00007f003f2b6d26: jne    0x00007f003f2b6d35
  0x00007f003f2b6d28: add    QWORD PTR [rdi+0x240],0x1
  0x00007f003f2b6d30: jmp    0x00007f003f2b6e8c
  0x00007f003f2b6d35: cmp    rbx,QWORD PTR [rdi+0x248]
  0x00007f003f2b6d3c: jne    0x00007f003f2b6d4b
  0x00007f003f2b6d3e: add    QWORD PTR [rdi+0x250],0x1
  0x00007f003f2b6d46: jmp    0x00007f003f2b6e8c
  0x00007f003f2b6d4b: cmp    QWORD PTR [rdi+0x1d8],0x0
  0x00007f003f2b6d56: jne    0x00007f003f2b6d6f
  0x00007f003f2b6d58: mov    QWORD PTR [rdi+0x1d8],rbx
  0x00007f003f2b6d5f: mov    QWORD PTR [rdi+0x1e0],0x1
  0x00007f003f2b6d6a: jmp    0x00007f003f2b6e8c
  0x00007f003f2b6d6f: cmp    QWORD PTR [rdi+0x1e8],0x0
  0x00007f003f2b6d7a: jne    0x00007f003f2b6d93
  0x00007f003f2b6d7c: mov    QWORD PTR [rdi+0x1e8],rbx
  0x00007f003f2b6d83: mov    QWORD PTR [rdi+0x1f0],0x1
  0x00007f003f2b6d8e: jmp    0x00007f003f2b6e8c
  0x00007f003f2b6d93: cmp    QWORD PTR [rdi+0x1f8],0x0
  0x00007f003f2b6d9e: jne    0x00007f003f2b6db7
  0x00007f003f2b6da0: mov    QWORD PTR [rdi+0x1f8],rbx
  0x00007f003f2b6da7: mov    QWORD PTR [rdi+0x200],0x1
  0x00007f003f2b6db2: jmp    0x00007f003f2b6e8c
  0x00007f003f2b6db7: cmp    QWORD PTR [rdi+0x208],0x0
  0x00007f003f2b6dc2: jne    0x00007f003f2b6ddb
  0x00007f003f2b6dc4: mov    QWORD PTR [rdi+0x208],rbx
  0x00007f003f2b6dcb: mov    QWORD PTR [rdi+0x210],0x1
  0x00007f003f2b6dd6: jmp    0x00007f003f2b6e8c
  0x00007f003f2b6ddb: cmp    QWORD PTR [rdi+0x218],0x0
  0x00007f003f2b6de6: jne    0x00007f003f2b6dff
  0x00007f003f2b6de8: mov    QWORD PTR [rdi+0x218],rbx
  0x00007f003f2b6def: mov    QWORD PTR [rdi+0x220],0x1
  0x00007f003f2b6dfa: jmp    0x00007f003f2b6e8c
  0x00007f003f2b6dff: cmp    QWORD PTR [rdi+0x228],0x0
  0x00007f003f2b6e0a: jne    0x00007f003f2b6e23
  0x00007f003f2b6e0c: mov    QWORD PTR [rdi+0x228],rbx
  0x00007f003f2b6e13: mov    QWORD PTR [rdi+0x230],0x1
  0x00007f003f2b6e1e: jmp    0x00007f003f2b6e8c
  0x00007f003f2b6e23: cmp    QWORD PTR [rdi+0x238],0x0
  0x00007f003f2b6e2e: jne    0x00007f003f2b6e47
  0x00007f003f2b6e30: mov    QWORD PTR [rdi+0x238],rbx
  0x00007f003f2b6e37: mov    QWORD PTR [rdi+0x240],0x1
  0x00007f003f2b6e42: jmp    0x00007f003f2b6e8c
  0x00007f003f2b6e47: cmp    QWORD PTR [rdi+0x248],0x0
  0x00007f003f2b6e52: jne    0x00007f003f2b6e6b
  0x00007f003f2b6e54: mov    QWORD PTR [rdi+0x248],rbx
  0x00007f003f2b6e5b: mov    QWORD PTR [rdi+0x250],0x1
  0x00007f003f2b6e66: jmp    0x00007f003f2b6e8c
  0x00007f003f2b6e6b: jmp    0x00007f003f2b6e8c
  0x00007f003f2b6e70: movabs rdi,0x7f0038a5b648  ;   {metadata(method data for {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b6e7a: sub    QWORD PTR [rdi+0x1c8],0x1
  0x00007f003f2b6e82: jmp    0x00007f003f2b6f04
  0x00007f003f2b6e87: jmp    0x00007f003f2b6e8c  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@5 (line 223)

  0x00007f003f2b6e8c: add    rsp,0x90
  0x00007f003f2b6e93: pop    rbp
  0x00007f003f2b6e94: test   DWORD PTR [rip+0x1b10b266],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2b6e9a: ret    
  0x00007f003f2b6e9b: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2b6ea0: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b6ea8: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop off=1197}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarFile::getJarEntry@-1 (line 223)
                                                ;   {runtime_call}
  0x00007f003f2b6ead: jmp    0x00007f003f2b6a61
  0x00007f003f2b6eb2: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2b6eb7: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b6ebf: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop off=1220}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarFile::getEntry@-1 (line 240)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ;   {runtime_call}
  0x00007f003f2b6ec4: jmp    0x00007f003f2b6aa8
  0x00007f003f2b6ec9: mov    rdx,rdx
  0x00007f003f2b6ecc: call   0x00007f003f279760  ; OopMap{rbx=Oop r8=Oop off=1233}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@10 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ;   {runtime_call}
  0x00007f003f2b6ed1: jmp    0x00007f003f2b6b67
  0x00007f003f2b6ed6: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b6edb: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b6ee3: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop r8=Oop rax=Oop off=1256}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@-1 (line 286)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ;   {runtime_call}
  0x00007f003f2b6ee8: jmp    0x00007f003f2b6bae
  0x00007f003f2b6eed: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b6ef2: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b6efa: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop rax=Oop off=1279}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarEntry::&lt;init&gt;@-1 (line 62)
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@7 (line 287)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ;   {runtime_call}
  0x00007f003f2b6eff: jmp    0x00007f003f2b6c15
  0x00007f003f2b6f04: mov    QWORD PTR [rsp],rax
  0x00007f003f2b6f08: call   0x00007f003f27b2c0  ; OopMap{off=1293}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@5 (line 223)
                                                ;   {runtime_call}
  0x00007f003f2b6f0d: nop
  0x00007f003f2b6f0e: nop
  0x00007f003f2b6f0f: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2b6f16: movabs r10,0x0
  0x00007f003f2b6f20: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2b6f27: movabs r10,0x0
  0x00007f003f2b6f31: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2b6f38: add    rsp,0x90
  0x00007f003f2b6f3f: pop    rbp
  0x00007f003f2b6f40: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2b6f45: hlt    
  0x00007f003f2b6f46: hlt    
  0x00007f003f2b6f47: hlt    
  0x00007f003f2b6f48: hlt    
  0x00007f003f2b6f49: hlt    
  0x00007f003f2b6f4a: hlt    
  0x00007f003f2b6f4b: hlt    
  0x00007f003f2b6f4c: hlt    
  0x00007f003f2b6f4d: hlt    
  0x00007f003f2b6f4e: hlt    
  0x00007f003f2b6f4f: hlt    
  0x00007f003f2b6f50: hlt    
  0x00007f003f2b6f51: hlt    
  0x00007f003f2b6f52: hlt    
  0x00007f003f2b6f53: hlt    
  0x00007f003f2b6f54: hlt    
  0x00007f003f2b6f55: hlt    
  0x00007f003f2b6f56: hlt    
  0x00007f003f2b6f57: hlt    
  0x00007f003f2b6f58: hlt    
  0x00007f003f2b6f59: hlt    
  0x00007f003f2b6f5a: hlt    
  0x00007f003f2b6f5b: hlt    
  0x00007f003f2b6f5c: hlt    
  0x00007f003f2b6f5d: hlt    
  0x00007f003f2b6f5e: hlt    
  0x00007f003f2b6f5f: hlt    
[Stub Code]
  0x00007f003f2b6f60: nop                       ;   {no_reloc}
  0x00007f003f2b6f61: nop
  0x00007f003f2b6f62: nop
  0x00007f003f2b6f63: nop
  0x00007f003f2b6f64: nop
  0x00007f003f2b6f65: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b6f6f: jmp    0x00007f003f2b6f6f  ;   {runtime_call}
  0x00007f003f2b6f74: nop
  0x00007f003f2b6f75: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b6f7f: jmp    0x00007f003f2b6f7f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2b6f84: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2b6f89: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2b6f8e: sub    rsp,0x80
  0x00007f003f2b6f95: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2b6f9a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2b6f9f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2b6fa4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2b6fa9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2b6fae: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2b6fb3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2b6fb8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2b6fbd: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2b6fc2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2b6fc7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2b6fcc: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2b6fd1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2b6fd6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2b6fdb: mov    QWORD PTR [rsp],r15
  0x00007f003f2b6fdf: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2b6fe9: movabs rsi,0x7f003f2b6f89  ;   {internal_word}
  0x00007f003f2b6ff3: mov    rdx,rsp
  0x00007f003f2b6ff6: and    rsp,0xfffffffffffffff0
  0x00007f003f2b6ffa: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2b6fff: hlt    
[Deopt Handler Code]
  0x00007f003f2b7000: movabs r10,0x7f003f2b7000  ;   {section_word}
  0x00007f003f2b700a: push   r10
  0x00007f003f2b700c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2b7011: hlt    
  0x00007f003f2b7012: hlt    
  0x00007f003f2b7013: hlt    
  0x00007f003f2b7014: hlt    
  0x00007f003f2b7015: hlt    
  0x00007f003f2b7016: hlt    
  0x00007f003f2b7017: hlt    
<nmethod compile_id='80' compiler='C1' level='3' entry='0x00007f003f2b6a00' size='2536' address='0x00007f003f2b6850' relocation_offset='312' insts_offset='432' stub_offset='1808' scopes_data_offset='2032' scopes_pcs_offset='2240' dependencies_offset='2528' metadata_offset='1992' method='java/util/jar/JarFile getJarEntry (Ljava/lang/String;)Ljava/util/jar/JarEntry;' bytes='9' count='628' iicount='628' stamp='0.405'/>
----------------------------------------------------------------------
java/util/Arrays.copyOf  [0x00007f003f2b73e0, 0x00007f003f2b7708]  808 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f00388a3750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  #           [sp+0x70]  (sp of caller)
  0x00007f003f2b73e0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2b73e7: push   rbp
  0x00007f003f2b73e8: sub    rsp,0x60
  0x00007f003f2b73ec: mov    r8,rsi
  0x00007f003f2b73ef: mov    r9,rdx
  0x00007f003f2b73f2: movabs rbx,0x7f00389cc188  ;   {metadata(method data for {method} {0x00007f00388a3750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f2b73fc: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f2b7402: add    edx,0x8
  0x00007f003f2b7405: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f2b740b: movabs rbx,0x7f00388a3750  ;   {metadata({method} {0x00007f00388a3750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f2b7415: and    edx,0x1ff8
  0x00007f003f2b741b: cmp    edx,0x0
  0x00007f003f2b741e: je     0x00007f003f2b75ca  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@0 (line 3332)

  0x00007f003f2b7424: mov    rbx,r9
  0x00007f003f2b7427: movabs rdx,0x7c00001f8    ;   {metadata({type array char})}
  0x00007f003f2b7431: movsxd rbx,ebx
  0x00007f003f2b7434: mov    rdi,rbx
  0x00007f003f2b7437: cmp    rbx,0xffffff
  0x00007f003f2b743e: ja     0x00007f003f2b75e1
  0x00007f003f2b7444: movabs rsi,0x17
  0x00007f003f2b744e: lea    rsi,[rsi+rbx*2]
  0x00007f003f2b7452: and    rsi,0xfffffffffffffff8
  0x00007f003f2b7456: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2b745a: lea    rsi,[rax+rsi*1]
  0x00007f003f2b745e: cmp    rsi,QWORD PTR [r15+0x70]
  0x00007f003f2b7462: ja     0x00007f003f2b75e1
  0x00007f003f2b7468: mov    QWORD PTR [r15+0x60],rsi
  0x00007f003f2b746c: sub    rsi,rax
  0x00007f003f2b746f: mov    QWORD PTR [rax],0x1
  0x00007f003f2b7476: mov    rcx,rdx
  0x00007f003f2b7479: shr    rcx,0x3
  0x00007f003f2b747d: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2b7480: mov    DWORD PTR [rax+0xc],ebx
  0x00007f003f2b7483: sub    rsi,0x10
  0x00007f003f2b7487: je     0x00007f003f2b749e
  0x00007f003f2b748d: xor    rbx,rbx
  0x00007f003f2b7490: shr    rsi,0x3
  0x00007f003f2b7494: mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x00007f003f2b7499: dec    rsi
  0x00007f003f2b749c: jne    0x00007f003f2b7494  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3332)

  0x00007f003f2b749e: mov    esi,DWORD PTR [r8+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; implicit exception: dispatches to 0x00007f003f2b75eb
  0x00007f003f2b74a2: movabs rdx,0x7f00389cc188  ;   {metadata(method data for {method} {0x00007f00388a3750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f2b74ac: add    QWORD PTR [rdx+0x130],0x1
  0x00007f003f2b74b4: movabs rdx,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2b74be: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2b74c4: add    ecx,0x8
  0x00007f003f2b74c7: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2b74cd: movabs rdx,0x7f003887a8b8  ;   {metadata({method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2b74d7: and    ecx,0x7ffff8
  0x00007f003f2b74dd: cmp    ecx,0x0
  0x00007f003f2b74e0: je     0x00007f003f2b75f0
  0x00007f003f2b74e6: cmp    esi,r9d
  0x00007f003f2b74e9: movabs rdx,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2b74f3: movabs rcx,0x130
  0x00007f003f2b74fd: jg     0x00007f003f2b750d
  0x00007f003f2b7503: movabs rcx,0x140
  0x00007f003f2b750d: mov    rdi,QWORD PTR [rdx+rcx*1]
  0x00007f003f2b7511: lea    rdi,[rdi+0x1]
  0x00007f003f2b7515: mov    QWORD PTR [rdx+rcx*1],rdi
  0x00007f003f2b7519: jg     0x00007f003f2b7532  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)

  0x00007f003f2b751f: movabs rdx,0x7f0038971058  ;   {metadata(method data for {method} {0x00007f003887a8b8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f003f2b7529: inc    DWORD PTR [rdx+0x150]
  0x00007f003f2b752f: mov    r9,rsi             ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)

  0x00007f003f2b7532: movabs rsi,0x7f00389cc188  ;   {metadata(method data for {method} {0x00007f00388a3750} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f003f2b753c: add    QWORD PTR [rsi+0x140],0x1
  0x00007f003f2b7544: mov    rsi,r8
  0x00007f003f2b7547: mov    edx,0x0
  0x00007f003f2b754c: mov    rcx,rax
  0x00007f003f2b754f: mov    r8d,0x0
  0x00007f003f2b7555: mov    QWORD PTR [rsp+0x50],rax
  0x00007f003f2b755a: lea    rdi,[rdx+r9*1]
  0x00007f003f2b755e: cmp    edi,DWORD PTR [rsi+0xc]
  0x00007f003f2b7561: ja     0x00007f003f2b7607
  0x00007f003f2b7567: lea    rdi,[r8+r9*1]
  0x00007f003f2b756b: cmp    edi,DWORD PTR [rcx+0xc]
  0x00007f003f2b756e: ja     0x00007f003f2b7607
  0x00007f003f2b7574: test   r9d,r9d
  0x00007f003f2b7577: jl     0x00007f003f2b7607
  0x00007f003f2b757d: je     0x00007f003f2b75b9
  0x00007f003f2b7583: movsxd rdx,edx
  0x00007f003f2b7586: movsxd r8,r8d
  0x00007f003f2b7589: lea    rdi,[rsi+rdx*2+0x10]
  0x00007f003f2b758e: lea    rsi,[rcx+r8*2+0x10]
  0x00007f003f2b7593: mov    rdx,r9
  0x00007f003f2b7596: test   esp,0xf
  0x00007f003f2b759c: je     0x00007f003f2b75b4
  0x00007f003f2b75a2: sub    rsp,0x8
  0x00007f003f2b75a6: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007f003f2b75ab: add    rsp,0x8
  0x00007f003f2b75af: jmp    0x00007f003f2b75b9
  0x00007f003f2b75b4: call   Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ;   {runtime_call}
  0x00007f003f2b75b9: mov    rax,QWORD PTR [rsp+0x50]
  0x00007f003f2b75be: add    rsp,0x60
  0x00007f003f2b75c2: pop    rbp
  0x00007f003f2b75c3: test   DWORD PTR [rip+0x1b10ab37],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2b75c9: ret    
  0x00007f003f2b75ca: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2b75cf: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b75d7: call   0x00007f003f27d5e0  ; OopMap{r8=Oop off=508}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ;   {runtime_call}
  0x00007f003f2b75dc: jmp    0x00007f003f2b7424
  0x00007f003f2b75e1: call   0x00007f003f27a020  ; OopMap{r8=Oop off=518}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ;   {runtime_call}
  0x00007f003f2b75e6: jmp    0x00007f003f2b749e
  0x00007f003f2b75eb: call   0x00007f003f279000  ; OopMap{r8=Oop rax=Oop off=528}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ;   {runtime_call}
  0x00007f003f2b75f0: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b75f5: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b75fd: call   0x00007f003f27d5e0  ; OopMap{r8=Oop rax=Oop off=546}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ;   {runtime_call}
  0x00007f003f2b7602: jmp    0x00007f003f2b74e6
  0x00007f003f2b7607: call   0x00007f003f1c5160  ; OopMap{[80]=Oop off=556}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ;   {static_call}
  0x00007f003f2b760c: jmp    0x00007f003f2b75b9
  0x00007f003f2b760e: nop
  0x00007f003f2b760f: nop
  0x00007f003f2b7610: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2b7617: movabs r10,0x0
  0x00007f003f2b7621: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2b7628: movabs r10,0x0
  0x00007f003f2b7632: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2b7639: add    rsp,0x60
  0x00007f003f2b763d: pop    rbp
  0x00007f003f2b763e: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2b7643: hlt    
  0x00007f003f2b7644: hlt    
  0x00007f003f2b7645: hlt    
  0x00007f003f2b7646: hlt    
  0x00007f003f2b7647: hlt    
  0x00007f003f2b7648: hlt    
  0x00007f003f2b7649: hlt    
  0x00007f003f2b764a: hlt    
  0x00007f003f2b764b: hlt    
  0x00007f003f2b764c: hlt    
  0x00007f003f2b764d: hlt    
  0x00007f003f2b764e: hlt    
  0x00007f003f2b764f: hlt    
  0x00007f003f2b7650: hlt    
  0x00007f003f2b7651: hlt    
  0x00007f003f2b7652: hlt    
  0x00007f003f2b7653: hlt    
  0x00007f003f2b7654: hlt    
  0x00007f003f2b7655: hlt    
  0x00007f003f2b7656: hlt    
  0x00007f003f2b7657: hlt    
  0x00007f003f2b7658: hlt    
  0x00007f003f2b7659: hlt    
  0x00007f003f2b765a: hlt    
  0x00007f003f2b765b: hlt    
  0x00007f003f2b765c: hlt    
  0x00007f003f2b765d: hlt    
  0x00007f003f2b765e: hlt    
  0x00007f003f2b765f: hlt    
[Stub Code]
  0x00007f003f2b7660: nop                       ;   {no_reloc}
  0x00007f003f2b7661: nop
  0x00007f003f2b7662: nop
  0x00007f003f2b7663: nop
  0x00007f003f2b7664: nop
  0x00007f003f2b7665: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b766f: jmp    0x00007f003f2b766f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2b7674: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2b7679: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2b767e: sub    rsp,0x80
  0x00007f003f2b7685: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2b768a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2b768f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2b7694: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2b7699: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2b769e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2b76a3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2b76a8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2b76ad: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2b76b2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2b76b7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2b76bc: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2b76c1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2b76c6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2b76cb: mov    QWORD PTR [rsp],r15
  0x00007f003f2b76cf: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2b76d9: movabs rsi,0x7f003f2b7679  ;   {internal_word}
  0x00007f003f2b76e3: mov    rdx,rsp
  0x00007f003f2b76e6: and    rsp,0xfffffffffffffff0
  0x00007f003f2b76ea: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2b76ef: hlt    
[Deopt Handler Code]
  0x00007f003f2b76f0: movabs r10,0x7f003f2b76f0  ;   {section_word}
  0x00007f003f2b76fa: push   r10
  0x00007f003f2b76fc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2b7701: hlt    
  0x00007f003f2b7702: hlt    
  0x00007f003f2b7703: hlt    
  0x00007f003f2b7704: hlt    
  0x00007f003f2b7705: hlt    
  0x00007f003f2b7706: hlt    
  0x00007f003f2b7707: hlt    
<nmethod compile_id='91' compiler='C1' level='3' entry='0x00007f003f2b73e0' size='1584' address='0x00007f003f2b7250' relocation_offset='312' insts_offset='400' stub_offset='1040' scopes_data_offset='1224' scopes_pcs_offset='1352' dependencies_offset='1560' nul_chk_table_offset='1568' metadata_offset='1208' method='java/util/Arrays copyOf ([CI)[C' bytes='19' count='844' iicount='844' stamp='0.406'/>
<writer thread='139637818533632'/>
<task_queued compile_id='92' method='java/lang/String hashCode ()I' bytes='55' count='1370' backedge_count='24785' iicount='1370' level='4' stamp='0.406' comment='tiered' hot_count='1370'/>
<task_queued compile_id='93' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='537' iicount='537' level='3' stamp='0.406' comment='tiered' hot_count='537'/>
<task_queued compile_id='94' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='537' backedge_count='17' iicount='537' level='3' stamp='0.406' comment='tiered' hot_count='537'/>
<task_queued compile_id='95' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='512' iicount='512' level='3' stamp='0.406' comment='tiered' hot_count='512'/>
<task_queued compile_id='96' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='640' iicount='640' level='3' stamp='0.406' comment='tiered' hot_count='640'/>
<task_queued compile_id='97' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='640' iicount='640' level='3' stamp='0.406' comment='tiered' hot_count='640'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
sun/misc/URLClassPath$JarLoader.getResource  [0x00007f003f2b7b00, 0x00007f003f2b8848]  3400 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;
  # this:     rsi:rsi   = &apos;sun/misc/URLClassPath$JarLoader&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  # parm1:    rcx       = boolean
  #           [sp+0xe0]  (sp of caller)
  0x00007f003f2b7b00: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2b7b04: shl    r10,0x3
  0x00007f003f2b7b08: cmp    r10,rax
  0x00007f003f2b7b0b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2b7b11: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2b7b1c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2b7b20: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2b7b27: push   rbp
  0x00007f003f2b7b28: sub    rsp,0xd0
  0x00007f003f2b7b2f: mov    QWORD PTR [rsp+0x98],rsi
  0x00007f003f2b7b37: movabs rdi,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2b7b41: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2b7b47: add    ebx,0x8
  0x00007f003f2b7b4a: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2b7b50: movabs rdi,0x7f0038990d30  ;   {metadata({method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2b7b5a: and    ebx,0x1ff8
  0x00007f003f2b7b60: cmp    ebx,0x0
  0x00007f003f2b7b63: je     0x00007f003f2b8569  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@0 (line 1031)

  0x00007f003f2b7b69: mov    edi,DWORD PTR [rsi+0x24]
  0x00007f003f2b7b6c: shl    rdi,0x3            ;*getfield metaIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@1 (line 1031)

  0x00007f003f2b7b70: cmp    rdi,0x0
  0x00007f003f2b7b74: movabs rbx,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2b7b7e: movabs rax,0x130
  0x00007f003f2b7b88: je     0x00007f003f2b7b98
  0x00007f003f2b7b8e: movabs rax,0x140
  0x00007f003f2b7b98: mov    r8,QWORD PTR [rbx+rax*1]
  0x00007f003f2b7b9c: lea    r8,[r8+0x1]
  0x00007f003f2b7ba0: mov    QWORD PTR [rbx+rax*1],r8
  0x00007f003f2b7ba4: mov    DWORD PTR [rsp+0xa8],ecx
  0x00007f003f2b7bab: jne    0x00007f003f2b7bbe  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@4 (line 1031)

  0x00007f003f2b7bb1: mov    QWORD PTR [rsp+0xa0],rdx
  0x00007f003f2b7bb9: jmp    0x00007f003f2b7c3d  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@20 (line 1038)

  0x00007f003f2b7bbe: cmp    rax,QWORD PTR [rdi]  ; implicit exception: dispatches to 0x00007f003f2b8580
  0x00007f003f2b7bc1: mov    rbx,rdi
  0x00007f003f2b7bc4: movabs rax,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2b7bce: movabs r10,0x7c002f4e0    ;   {metadata(&apos;sun/misc/MetaIndex&apos;)}
  0x00007f003f2b7bd8: mov    QWORD PTR [rax+0x160],r10
  0x00007f003f2b7bdf: add    QWORD PTR [rax+0x168],0x1
  0x00007f003f2b7be7: mov    rbx,rdx
  0x00007f003f2b7bea: mov    rdx,rbx
  0x00007f003f2b7bed: mov    rsi,rdi            ;*invokevirtual mayContain {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@12 (line 1032)

  0x00007f003f2b7bf0: mov    QWORD PTR [rsp+0xa0],rbx
  0x00007f003f2b7bf8: nop
  0x00007f003f2b7bf9: nop
  0x00007f003f2b7bfa: nop
  0x00007f003f2b7bfb: nop
  0x00007f003f2b7bfc: nop
  0x00007f003f2b7bfd: nop
  0x00007f003f2b7bfe: nop
  0x00007f003f2b7bff: call   0x00007f003f1c4d60  ; OopMap{[152]=Oop [160]=Oop off=260}
                                                ;*invokevirtual mayContain {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@12 (line 1032)
                                                ;   {optimized virtual_call}
  0x00007f003f2b7c04: cmp    eax,0x0
  0x00007f003f2b7c07: movabs rsi,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2b7c11: movabs rdi,0x1e8
  0x00007f003f2b7c1b: jne    0x00007f003f2b7c2b
  0x00007f003f2b7c21: movabs rdi,0x1f8
  0x00007f003f2b7c2b: mov    rbx,QWORD PTR [rsi+rdi*1]
  0x00007f003f2b7c2f: lea    rbx,[rbx+0x1]
  0x00007f003f2b7c33: mov    QWORD PTR [rsi+rdi*1],rbx
  0x00007f003f2b7c37: je     0x00007f003f2b84e3  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@15 (line 1032)

  0x00007f003f2b7c3d: mov    rsi,QWORD PTR [rsp+0x98]
  0x00007f003f2b7c45: movabs rdi,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2b7c4f: add    QWORD PTR [rdi+0x208],0x1
  0x00007f003f2b7c57: mov    rsi,QWORD PTR [rsp+0x98]  ;*invokespecial ensureOpen {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@21 (line 1038)

  0x00007f003f2b7c5f: call   0x00007f003f1c4d60  ; OopMap{[152]=Oop [160]=Oop off=356}
                                                ;*invokespecial ensureOpen {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@21 (line 1038)
                                                ;   {optimized virtual_call}
  0x00007f003f2b7c64: movabs rdx,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2b7c6e: inc    DWORD PTR [rdx+0x218]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@24 (line 1041)

  0x00007f003f2b7c74: mov    rsi,QWORD PTR [rsp+0x98]
  0x00007f003f2b7c7c: mov    edi,DWORD PTR [rsi+0x18]
  0x00007f003f2b7c7f: shl    rdi,0x3            ;*getfield jar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@38 (line 1042)

  0x00007f003f2b7c83: cmp    rax,QWORD PTR [rdi]  ;*invokevirtual getJarEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ; implicit exception: dispatches to 0x00007f003f2b8585
  0x00007f003f2b7c86: mov    rdx,rdi
  0x00007f003f2b7c89: movabs rbx,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2b7c93: add    QWORD PTR [rbx+0x258],0x1
  0x00007f003f2b7c9b: movabs rdx,0x7f0038a5b648  ;   {metadata(method data for {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b7ca5: mov    ebx,DWORD PTR [rdx+0xfc]
  0x00007f003f2b7cab: add    ebx,0x8
  0x00007f003f2b7cae: mov    DWORD PTR [rdx+0xfc],ebx
  0x00007f003f2b7cb4: movabs rdx,0x7f0038a3bd38  ;   {metadata({method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b7cbe: and    ebx,0x7ffff8
  0x00007f003f2b7cc4: cmp    ebx,0x0
  0x00007f003f2b7cc7: je     0x00007f003f2b858a
  0x00007f003f2b7ccd: mov    rdx,rdi
  0x00007f003f2b7cd0: movabs rbx,0x7f0038a5b648  ;   {metadata(method data for {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b7cda: add    QWORD PTR [rbx+0x148],0x1
  0x00007f003f2b7ce2: movabs rdx,0x7f0038a5b8f0  ;   {metadata(method data for {method} {0x00007f0038a3be08} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b7cec: mov    ebx,DWORD PTR [rdx+0xfc]
  0x00007f003f2b7cf2: add    ebx,0x8
  0x00007f003f2b7cf5: mov    DWORD PTR [rdx+0xfc],ebx
  0x00007f003f2b7cfb: movabs rdx,0x7f0038a3be08  ;   {metadata({method} {0x00007f0038a3be08} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b7d05: and    ebx,0x7ffff8
  0x00007f003f2b7d0b: cmp    ebx,0x0
  0x00007f003f2b7d0e: je     0x00007f003f2b85a1
  0x00007f003f2b7d14: mov    rdx,rdi
  0x00007f003f2b7d17: movabs rbx,0x7f0038a5b8f0  ;   {metadata(method data for {method} {0x00007f0038a3be08} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b7d21: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f2b7d29: mov    rdx,QWORD PTR [rsp+0xa0]
  0x00007f003f2b7d31: mov    rsi,rdi            ;*invokespecial getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@2 (line 240)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)

  0x00007f003f2b7d34: mov    QWORD PTR [rsp+0xb0],rdi
  0x00007f003f2b7d3c: nop
  0x00007f003f2b7d3d: nop
  0x00007f003f2b7d3e: nop
  0x00007f003f2b7d3f: call   0x00007f003f1c4d60  ; OopMap{[160]=Oop [152]=Oop [176]=Oop off=580}
                                                ;*invokespecial getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@2 (line 240)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {optimized virtual_call}
  0x00007f003f2b7d44: mov    rbx,rax            ;*invokespecial getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@2 (line 240)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)

  0x00007f003f2b7d47: cmp    rbx,0x0
  0x00007f003f2b7d4b: movabs rdx,0x7f0038a5b8f0  ;   {metadata(method data for {method} {0x00007f0038a3be08} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b7d55: movabs rsi,0x140
  0x00007f003f2b7d5f: je     0x00007f003f2b7d6f
  0x00007f003f2b7d65: movabs rsi,0x150
  0x00007f003f2b7d6f: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2b7d73: lea    rdi,[rdi+0x1]
  0x00007f003f2b7d77: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2b7d7b: je     0x00007f003f2b7ec1  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@7 (line 241)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)

  0x00007f003f2b7d81: mov    r8,QWORD PTR [rsp+0xb0]
  0x00007f003f2b7d89: movabs rdx,0x7c0050ba0    ;   {metadata(&apos;java/util/jar/JarFile$JarFileEntry&apos;)}
  0x00007f003f2b7d93: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2b7d97: lea    rdi,[rax+0x60]
  0x00007f003f2b7d9b: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2b7d9f: ja     0x00007f003f2b85b8
  0x00007f003f2b7da5: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2b7da9: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2b7db0: mov    QWORD PTR [rax],rcx
  0x00007f003f2b7db3: mov    rcx,rdx
  0x00007f003f2b7db6: shr    rcx,0x3
  0x00007f003f2b7dba: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2b7dbd: xor    rcx,rcx
  0x00007f003f2b7dc0: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2b7dc3: xor    rcx,rcx
  0x00007f003f2b7dc6: movabs rdi,0xa
  0x00007f003f2b7dd0: mov    QWORD PTR [rax+rdi*8+0x8],rcx
  0x00007f003f2b7dd5: dec    rdi
  0x00007f003f2b7dd8: jne    0x00007f003f2b7dd0  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@10 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)

  0x00007f003f2b7dda: mov    rdx,rax
  0x00007f003f2b7ddd: movabs rsi,0x7f0038a5b8f0  ;   {metadata(method data for {method} {0x00007f0038a3be08} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b7de7: add    QWORD PTR [rsi+0x160],0x1
  0x00007f003f2b7def: movabs rdx,0x7f0038a64f18  ;   {metadata(method data for {method} {0x00007f0038a52bd8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/jar/JarFile;Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarFile$JarFileEntry&apos;)}
  0x00007f003f2b7df9: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2b7dff: add    esi,0x8
  0x00007f003f2b7e02: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2b7e08: movabs rdx,0x7f0038a52bd8  ;   {metadata({method} {0x00007f0038a52bd8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/jar/JarFile;Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarFile$JarFileEntry&apos;)}
  0x00007f003f2b7e12: and    esi,0x7ffff8
  0x00007f003f2b7e18: cmp    esi,0x0
  0x00007f003f2b7e1b: je     0x00007f003f2b85c5
  0x00007f003f2b7e21: mov    r10,r8
  0x00007f003f2b7e24: shr    r10,0x3
  0x00007f003f2b7e28: mov    DWORD PTR [rax+0x58],r10d
  0x00007f003f2b7e2c: mov    rdx,rax
  0x00007f003f2b7e2f: shr    rdx,0x9
  0x00007f003f2b7e33: movabs rsi,0x7f003ae7c000
  0x00007f003f2b7e3d: mov    BYTE PTR [rdx+rsi*1],0x0  ;*putfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@2 (line 286)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)

  0x00007f003f2b7e41: mov    rdx,rax
  0x00007f003f2b7e44: movabs rsi,0x7f0038a64f18  ;   {metadata(method data for {method} {0x00007f0038a52bd8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/jar/JarFile;Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarFile$JarFileEntry&apos;)}
  0x00007f003f2b7e4e: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2b7e56: movabs rdx,0x7f0038a65098  ;   {metadata(method data for {method} {0x00007f0038a532e8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarEntry&apos;)}
  0x00007f003f2b7e60: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2b7e66: add    esi,0x8
  0x00007f003f2b7e69: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2b7e6f: movabs rdx,0x7f0038a532e8  ;   {metadata({method} {0x00007f0038a532e8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarEntry&apos;)}
  0x00007f003f2b7e79: and    esi,0x7ffff8
  0x00007f003f2b7e7f: cmp    esi,0x0
  0x00007f003f2b7e82: je     0x00007f003f2b85dc
  0x00007f003f2b7e88: mov    rdx,rax
  0x00007f003f2b7e8b: movabs rsi,0x7f0038a65098  ;   {metadata(method data for {method} {0x00007f0038a532e8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarEntry&apos;)}
  0x00007f003f2b7e95: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2b7e9d: mov    rdx,rbx
  0x00007f003f2b7ea0: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarEntry::&lt;init&gt;@2 (line 62)
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@7 (line 287)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)

  0x00007f003f2b7ea3: mov    QWORD PTR [rsp+0xb8],rax
  0x00007f003f2b7eab: nop
  0x00007f003f2b7eac: nop
  0x00007f003f2b7ead: nop
  0x00007f003f2b7eae: nop
  0x00007f003f2b7eaf: call   0x00007f003f1c4d60  ; OopMap{[160]=Oop [152]=Oop [184]=Oop off=948}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarEntry::&lt;init&gt;@2 (line 62)
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@7 (line 287)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {optimized virtual_call}
  0x00007f003f2b7eb4: mov    rax,QWORD PTR [rsp+0xb8]
  0x00007f003f2b7ebc: jmp    0x00007f003f2b7ecb
  0x00007f003f2b7ec1: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f2b7ecb: cmp    rax,0x0
  0x00007f003f2b7ecf: jne    0x00007f003f2b7eea
  0x00007f003f2b7ed1: movabs rdx,0x7f0038a5b648  ;   {metadata(method data for {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b7edb: or     DWORD PTR [rdx+0x1c0],0x100
  0x00007f003f2b7ee5: jmp    0x00007f003f2b8107
  0x00007f003f2b7eea: movabs rdi,0x7c00508e8    ;   {metadata(&apos;java/util/jar/JarEntry&apos;)}
  0x00007f003f2b7ef4: mov    edx,DWORD PTR [rax+0x8]
  0x00007f003f2b7ef7: shl    rdx,0x3
  0x00007f003f2b7efb: cmp    rdi,QWORD PTR [rdx+0x38]
  0x00007f003f2b7eff: jne    0x00007f003f2b80eb
  0x00007f003f2b7f05: movabs rdx,0x7f0038a5b648  ;   {metadata(method data for {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b7f0f: mov    edi,DWORD PTR [rax+0x8]
  0x00007f003f2b7f12: shl    rdi,0x3
  0x00007f003f2b7f16: cmp    rdi,QWORD PTR [rdx+0x1d8]
  0x00007f003f2b7f1d: jne    0x00007f003f2b7f2c
  0x00007f003f2b7f1f: add    QWORD PTR [rdx+0x1e0],0x1
  0x00007f003f2b7f27: jmp    0x00007f003f2b8107
  0x00007f003f2b7f2c: cmp    rdi,QWORD PTR [rdx+0x1e8]
  0x00007f003f2b7f33: jne    0x00007f003f2b7f42
  0x00007f003f2b7f35: add    QWORD PTR [rdx+0x1f0],0x1
  0x00007f003f2b7f3d: jmp    0x00007f003f2b8107
  0x00007f003f2b7f42: cmp    rdi,QWORD PTR [rdx+0x1f8]
  0x00007f003f2b7f49: jne    0x00007f003f2b7f58
  0x00007f003f2b7f4b: add    QWORD PTR [rdx+0x200],0x1
  0x00007f003f2b7f53: jmp    0x00007f003f2b8107
  0x00007f003f2b7f58: cmp    rdi,QWORD PTR [rdx+0x208]
  0x00007f003f2b7f5f: jne    0x00007f003f2b7f6e
  0x00007f003f2b7f61: add    QWORD PTR [rdx+0x210],0x1
  0x00007f003f2b7f69: jmp    0x00007f003f2b8107
  0x00007f003f2b7f6e: cmp    rdi,QWORD PTR [rdx+0x218]
  0x00007f003f2b7f75: jne    0x00007f003f2b7f84
  0x00007f003f2b7f77: add    QWORD PTR [rdx+0x220],0x1
  0x00007f003f2b7f7f: jmp    0x00007f003f2b8107
  0x00007f003f2b7f84: cmp    rdi,QWORD PTR [rdx+0x228]
  0x00007f003f2b7f8b: jne    0x00007f003f2b7f9a
  0x00007f003f2b7f8d: add    QWORD PTR [rdx+0x230],0x1
  0x00007f003f2b7f95: jmp    0x00007f003f2b8107
  0x00007f003f2b7f9a: cmp    rdi,QWORD PTR [rdx+0x238]
  0x00007f003f2b7fa1: jne    0x00007f003f2b7fb0
  0x00007f003f2b7fa3: add    QWORD PTR [rdx+0x240],0x1
  0x00007f003f2b7fab: jmp    0x00007f003f2b8107
  0x00007f003f2b7fb0: cmp    rdi,QWORD PTR [rdx+0x248]
  0x00007f003f2b7fb7: jne    0x00007f003f2b7fc6
  0x00007f003f2b7fb9: add    QWORD PTR [rdx+0x250],0x1
  0x00007f003f2b7fc1: jmp    0x00007f003f2b8107
  0x00007f003f2b7fc6: cmp    QWORD PTR [rdx+0x1d8],0x0
  0x00007f003f2b7fd1: jne    0x00007f003f2b7fea
  0x00007f003f2b7fd3: mov    QWORD PTR [rdx+0x1d8],rdi
  0x00007f003f2b7fda: mov    QWORD PTR [rdx+0x1e0],0x1
  0x00007f003f2b7fe5: jmp    0x00007f003f2b8107
  0x00007f003f2b7fea: cmp    QWORD PTR [rdx+0x1e8],0x0
  0x00007f003f2b7ff5: jne    0x00007f003f2b800e
  0x00007f003f2b7ff7: mov    QWORD PTR [rdx+0x1e8],rdi
  0x00007f003f2b7ffe: mov    QWORD PTR [rdx+0x1f0],0x1
  0x00007f003f2b8009: jmp    0x00007f003f2b8107
  0x00007f003f2b800e: cmp    QWORD PTR [rdx+0x1f8],0x0
  0x00007f003f2b8019: jne    0x00007f003f2b8032
  0x00007f003f2b801b: mov    QWORD PTR [rdx+0x1f8],rdi
  0x00007f003f2b8022: mov    QWORD PTR [rdx+0x200],0x1
  0x00007f003f2b802d: jmp    0x00007f003f2b8107
  0x00007f003f2b8032: cmp    QWORD PTR [rdx+0x208],0x0
  0x00007f003f2b803d: jne    0x00007f003f2b8056
  0x00007f003f2b803f: mov    QWORD PTR [rdx+0x208],rdi
  0x00007f003f2b8046: mov    QWORD PTR [rdx+0x210],0x1
  0x00007f003f2b8051: jmp    0x00007f003f2b8107
  0x00007f003f2b8056: cmp    QWORD PTR [rdx+0x218],0x0
  0x00007f003f2b8061: jne    0x00007f003f2b807a
  0x00007f003f2b8063: mov    QWORD PTR [rdx+0x218],rdi
  0x00007f003f2b806a: mov    QWORD PTR [rdx+0x220],0x1
  0x00007f003f2b8075: jmp    0x00007f003f2b8107
  0x00007f003f2b807a: cmp    QWORD PTR [rdx+0x228],0x0
  0x00007f003f2b8085: jne    0x00007f003f2b809e
  0x00007f003f2b8087: mov    QWORD PTR [rdx+0x228],rdi
  0x00007f003f2b808e: mov    QWORD PTR [rdx+0x230],0x1
  0x00007f003f2b8099: jmp    0x00007f003f2b8107
  0x00007f003f2b809e: cmp    QWORD PTR [rdx+0x238],0x0
  0x00007f003f2b80a9: jne    0x00007f003f2b80c2
  0x00007f003f2b80ab: mov    QWORD PTR [rdx+0x238],rdi
  0x00007f003f2b80b2: mov    QWORD PTR [rdx+0x240],0x1
  0x00007f003f2b80bd: jmp    0x00007f003f2b8107
  0x00007f003f2b80c2: cmp    QWORD PTR [rdx+0x248],0x0
  0x00007f003f2b80cd: jne    0x00007f003f2b80e6
  0x00007f003f2b80cf: mov    QWORD PTR [rdx+0x248],rdi
  0x00007f003f2b80d6: mov    QWORD PTR [rdx+0x250],0x1
  0x00007f003f2b80e1: jmp    0x00007f003f2b8107
  0x00007f003f2b80e6: jmp    0x00007f003f2b8107
  0x00007f003f2b80eb: movabs rdx,0x7f0038a5b648  ;   {metadata(method data for {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2b80f5: sub    QWORD PTR [rdx+0x1c8],0x1
  0x00007f003f2b80fd: jmp    0x00007f003f2b85f3
  0x00007f003f2b8102: jmp    0x00007f003f2b8107
  0x00007f003f2b8107: mov    rsi,rax            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@5 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)

  0x00007f003f2b810a: cmp    rsi,0x0
  0x00007f003f2b810e: movabs rax,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2b8118: movabs rdx,0x2d8
  0x00007f003f2b8122: je     0x00007f003f2b8132
  0x00007f003f2b8128: movabs rdx,0x2e8
  0x00007f003f2b8132: mov    rdi,QWORD PTR [rax+rdx*1]
  0x00007f003f2b8136: lea    rdi,[rdi+0x1]
  0x00007f003f2b813a: mov    QWORD PTR [rax+rdx*1],rdi
  0x00007f003f2b813e: jne    0x00007f003f2b849b  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@47 (line 1043)

  0x00007f003f2b8144: mov    rbx,QWORD PTR [rsp+0x98]
  0x00007f003f2b814c: mov    eax,DWORD PTR [rbx+0x20]
  0x00007f003f2b814f: shl    rax,0x3            ;*getfield index {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@59 (line 1046)

  0x00007f003f2b8153: cmp    rax,0x0
  0x00007f003f2b8157: movabs rax,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2b8161: movabs rdx,0x390
  0x00007f003f2b816b: jne    0x00007f003f2b817b
  0x00007f003f2b8171: movabs rdx,0x3a0
  0x00007f003f2b817b: mov    rsi,QWORD PTR [rax+rdx*1]
  0x00007f003f2b817f: lea    rsi,[rsi+0x1]
  0x00007f003f2b8183: mov    QWORD PTR [rax+rdx*1],rsi
  0x00007f003f2b8187: jne    0x00007f003f2b81a6  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@62 (line 1046)

  0x00007f003f2b818d: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f2b8197: add    rsp,0xd0
  0x00007f003f2b819e: pop    rbp
  0x00007f003f2b819f: test   DWORD PTR [rip+0x1b109f5b],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2b81a5: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@66 (line 1047)

  0x00007f003f2b81a6: xchg   ax,ax
  0x00007f003f2b81a8: jmp    0x00007f003f2b860b  ;   {no_reloc}
  0x00007f003f2b81ad: add    BYTE PTR [rax],al
  0x00007f003f2b81af: add    BYTE PTR [rax],al
  0x00007f003f2b81b1: add    BYTE PTR [rcx-0x75],cl
  0x00007f003f2b81b4: rex.RXB (bad) 
  0x00007f003f2b81b6: lea    rdi,[rax+0x10]
  0x00007f003f2b81ba: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2b81be: ja     0x00007f003f2b8615
  0x00007f003f2b81c4: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2b81c8: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2b81cf: mov    QWORD PTR [rax],rcx
  0x00007f003f2b81d2: mov    rcx,rdx
  0x00007f003f2b81d5: shr    rcx,0x3
  0x00007f003f2b81d9: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2b81dc: xor    rcx,rcx
  0x00007f003f2b81df: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2b81e2: xor    rcx,rcx
  0x00007f003f2b81e5: mov    r8,rax             ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@67 (line 1049)

  0x00007f003f2b81e8: mov    rdx,r8
  0x00007f003f2b81eb: movabs rsi,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2b81f5: add    QWORD PTR [rsi+0x3b0],0x1
  0x00007f003f2b81fd: movabs rdx,0x7f0038a67050  ;   {metadata(method data for {method} {0x00007f00389694c0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/HashSet&apos;)}
  0x00007f003f2b8207: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2b820d: add    esi,0x8
  0x00007f003f2b8210: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2b8216: movabs rdx,0x7f00389694c0  ;   {metadata({method} {0x00007f00389694c0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/HashSet&apos;)}
  0x00007f003f2b8220: and    esi,0x7ffff8
  0x00007f003f2b8226: cmp    esi,0x0
  0x00007f003f2b8229: je     0x00007f003f2b8622
  0x00007f003f2b822f: mov    rdx,r8
  0x00007f003f2b8232: movabs rsi,0x7f0038a67050  ;   {metadata(method data for {method} {0x00007f00389694c0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/HashSet&apos;)}
  0x00007f003f2b823c: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2b8244: movabs rdx,0x7f0038a671d0  ;   {metadata(method data for {method} {0x00007f003885c3d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractSet&apos;)}
  0x00007f003f2b824e: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2b8254: add    esi,0x8
  0x00007f003f2b8257: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2b825d: movabs rdx,0x7f003885c3d8  ;   {metadata({method} {0x00007f003885c3d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractSet&apos;)}
  0x00007f003f2b8267: and    esi,0x7ffff8
  0x00007f003f2b826d: cmp    esi,0x0
  0x00007f003f2b8270: je     0x00007f003f2b8639
  0x00007f003f2b8276: mov    rdx,r8
  0x00007f003f2b8279: movabs rsi,0x7f0038a671d0  ;   {metadata(method data for {method} {0x00007f003885c3d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractSet&apos;)}
  0x00007f003f2b8283: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2b828b: movabs rdx,0x7f0038a67330  ;   {metadata(method data for {method} {0x00007f00388468f8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x00007f003f2b8295: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2b829b: add    esi,0x8
  0x00007f003f2b829e: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2b82a4: movabs rdx,0x7f00388468f8  ;   {metadata({method} {0x00007f00388468f8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x00007f003f2b82ae: and    esi,0x7ffff8
  0x00007f003f2b82b4: cmp    esi,0x0
  0x00007f003f2b82b7: je     0x00007f003f2b8650
  0x00007f003f2b82bd: mov    rdx,r8
  0x00007f003f2b82c0: movabs rsi,0x7f0038a67330  ;   {metadata(method data for {method} {0x00007f00388468f8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x00007f003f2b82ca: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2b82d2: movabs rdx,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2b82dc: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2b82e2: add    esi,0x8
  0x00007f003f2b82e5: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2b82eb: movabs rdx,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2b82f5: and    esi,0x7ffff8
  0x00007f003f2b82fb: cmp    esi,0x0
  0x00007f003f2b82fe: je     0x00007f003f2b8667
  0x00007f003f2b8304: movabs rdx,0x7c001b1e8    ;   {metadata(&apos;java/util/HashMap&apos;)}
  0x00007f003f2b830e: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2b8312: lea    rdi,[rax+0x30]
  0x00007f003f2b8316: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2b831a: ja     0x00007f003f2b867e
  0x00007f003f2b8320: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2b8324: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2b832b: mov    QWORD PTR [rax],rcx
  0x00007f003f2b832e: mov    rcx,rdx
  0x00007f003f2b8331: shr    rcx,0x3
  0x00007f003f2b8335: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2b8338: xor    rcx,rcx
  0x00007f003f2b833b: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2b833e: xor    rcx,rcx
  0x00007f003f2b8341: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f2b8345: mov    QWORD PTR [rax+0x18],rcx
  0x00007f003f2b8349: mov    QWORD PTR [rax+0x20],rcx
  0x00007f003f2b834d: mov    QWORD PTR [rax+0x28],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashSet::&lt;init&gt;@5 (line 105)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)

  0x00007f003f2b8351: mov    rdx,rax
  0x00007f003f2b8354: movabs rcx,0x7f0038a67050  ;   {metadata(method data for {method} {0x00007f00389694c0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/HashSet&apos;)}
  0x00007f003f2b835e: add    QWORD PTR [rcx+0x140],0x1
  0x00007f003f2b8366: movabs rdx,0x7f0038a67490  ;   {metadata(method data for {method} {0x00007f003886ceb8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b8370: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2b8376: add    ecx,0x8
  0x00007f003f2b8379: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2b837f: movabs rdx,0x7f003886ceb8  ;   {metadata({method} {0x00007f003886ceb8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b8389: and    ecx,0x7ffff8
  0x00007f003f2b838f: cmp    ecx,0x0
  0x00007f003f2b8392: je     0x00007f003f2b868b
  0x00007f003f2b8398: mov    rdx,rax
  0x00007f003f2b839b: movabs rcx,0x7f0038a67490  ;   {metadata(method data for {method} {0x00007f003886ceb8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b83a5: add    QWORD PTR [rcx+0x130],0x1
  0x00007f003f2b83ad: movabs rdx,0x7f0038a67600  ;   {metadata(method data for {method} {0x00007f00388600e0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractMap&apos;)}
  0x00007f003f2b83b7: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2b83bd: add    ecx,0x8
  0x00007f003f2b83c0: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2b83c6: movabs rdx,0x7f00388600e0  ;   {metadata({method} {0x00007f00388600e0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractMap&apos;)}
  0x00007f003f2b83d0: and    ecx,0x7ffff8
  0x00007f003f2b83d6: cmp    ecx,0x0
  0x00007f003f2b83d9: je     0x00007f003f2b86a2
  0x00007f003f2b83df: mov    rdx,rax
  0x00007f003f2b83e2: movabs rcx,0x7f0038a67600  ;   {metadata(method data for {method} {0x00007f00388600e0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractMap&apos;)}
  0x00007f003f2b83ec: add    QWORD PTR [rcx+0x130],0x1
  0x00007f003f2b83f4: movabs rdx,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2b83fe: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2b8404: add    ecx,0x8
  0x00007f003f2b8407: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2b840d: movabs rdx,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2b8417: and    ecx,0x7ffff8
  0x00007f003f2b841d: cmp    ecx,0x0
  0x00007f003f2b8420: je     0x00007f003f2b86b9
  0x00007f003f2b8426: mov    DWORD PTR [rax+0x20],0x3f400000
                                                ;*putfield loadFactor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::&lt;init&gt;@7 (line 475)
                                                ; - java.util.HashSet::&lt;init&gt;@9 (line 105)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)

  0x00007f003f2b842d: mov    r10,rax
  0x00007f003f2b8430: shr    r10,0x3
  0x00007f003f2b8434: mov    DWORD PTR [r8+0xc],r10d
  0x00007f003f2b8438: mov    rdx,r8
  0x00007f003f2b843b: shr    rdx,0x9
  0x00007f003f2b843f: movabs rcx,0x7f003ae7c000
  0x00007f003f2b8449: mov    BYTE PTR [rdx+rcx*1],0x0  ;*putfield map {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashSet::&lt;init&gt;@12 (line 105)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)

  0x00007f003f2b844d: mov    rsi,rbx
  0x00007f003f2b8450: movabs rdx,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2b845a: movabs r10,0x7c003adc0    ;   {metadata(&apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2b8464: mov    QWORD PTR [rdx+0x3d0],r10
  0x00007f003f2b846b: add    QWORD PTR [rdx+0x3d8],0x1
  0x00007f003f2b8473: mov    rdx,QWORD PTR [rsp+0xa0]
  0x00007f003f2b847b: mov    ecx,DWORD PTR [rsp+0xa8]
  0x00007f003f2b8482: mov    rsi,rbx            ;*invokevirtual getResource {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@81 (line 1050)

  0x00007f003f2b8485: nop
  0x00007f003f2b8486: nop
  0x00007f003f2b8487: call   0x00007f003f1c4d60  ; OopMap{off=2444}
                                                ;*invokevirtual getResource {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@81 (line 1050)
                                                ;   {optimized virtual_call}
  0x00007f003f2b848c: add    rsp,0xd0
  0x00007f003f2b8493: pop    rbp
  0x00007f003f2b8494: test   DWORD PTR [rip+0x1b109c66],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2b849a: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@84 (line 1050)

  0x00007f003f2b849b: mov    ecx,DWORD PTR [rsp+0xa8]
  0x00007f003f2b84a2: mov    rdx,QWORD PTR [rsp+0xa0]
  0x00007f003f2b84aa: mov    rbx,QWORD PTR [rsp+0x98]
  0x00007f003f2b84b2: mov    r8,rbx
  0x00007f003f2b84b5: movabs rdi,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2b84bf: add    QWORD PTR [rdi+0x310],0x1
  0x00007f003f2b84c7: mov    r8,rsi
  0x00007f003f2b84ca: mov    rsi,rbx            ;*invokevirtual checkResource {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@54 (line 1044)

  0x00007f003f2b84cd: nop
  0x00007f003f2b84ce: nop
  0x00007f003f2b84cf: call   0x00007f003f1c4d60  ; OopMap{off=2516}
                                                ;*invokevirtual checkResource {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@54 (line 1044)
                                                ;   {optimized virtual_call}
  0x00007f003f2b84d4: add    rsp,0xd0
  0x00007f003f2b84db: pop    rbp
  0x00007f003f2b84dc: test   DWORD PTR [rip+0x1b109c1e],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2b84e2: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@57 (line 1044)

  0x00007f003f2b84e3: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f2b84ed: add    rsp,0xd0
  0x00007f003f2b84f4: pop    rbp
  0x00007f003f2b84f5: test   DWORD PTR [rip+0x1b109c05],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2b84fb: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@19 (line 1033)

  0x00007f003f2b84fc: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2b8503: xor    r10,r10
  0x00007f003f2b8506: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2b850d: xor    r10,r10
  0x00007f003f2b8510: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2b8517: mov    rsi,rax
  0x00007f003f2b851a: nop    WORD PTR [rax+rax*1+0x0]
  0x00007f003f2b8520: jmp    0x00007f003f2b86df  ;   {no_reloc}
  0x00007f003f2b8525: add    BYTE PTR [rax],al
  0x00007f003f2b8527: add    BYTE PTR [rax],al
  0x00007f003f2b8529: add    cl,ch
  0x00007f003f2b852b: mov    edx,0x48000001     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@28 (line 1040)

  0x00007f003f2b8530: mov    edx,eax
  0x00007f003f2b8532: movabs rdi,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2b853c: add    QWORD PTR [rdi+0x230],0x1
  0x00007f003f2b8544: mov    rdx,rsi
  0x00007f003f2b8547: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@33 (line 1040)

  0x00007f003f2b854a: mov    QWORD PTR [rsp+0xc0],rax
  0x00007f003f2b8552: nop
  0x00007f003f2b8553: nop
  0x00007f003f2b8554: nop
  0x00007f003f2b8555: nop
  0x00007f003f2b8556: nop
  0x00007f003f2b8557: call   0x00007f003f1c4d60  ; OopMap{[192]=Oop off=2652}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@33 (line 1040)
                                                ;   {optimized virtual_call}
  0x00007f003f2b855c: mov    rax,QWORD PTR [rsp+0xc0]
  0x00007f003f2b8564: jmp    0x00007f003f2b8721
  0x00007f003f2b8569: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2b856e: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b8576: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [152]=Oop rdx=Oop off=2683}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@-1 (line 1031)
                                                ;   {runtime_call}
  0x00007f003f2b857b: jmp    0x00007f003f2b7b69
  0x00007f003f2b8580: call   0x00007f003f279000  ; OopMap{rdx=Oop [152]=Oop rdi=Oop off=2693}
                                                ;*invokevirtual mayContain {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@12 (line 1032)
                                                ;   {runtime_call}
  0x00007f003f2b8585: call   0x00007f003f279000  ; OopMap{[160]=Oop rsi=Oop [152]=Oop rdi=Oop off=2698}
                                                ;*invokevirtual getJarEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {runtime_call}
  0x00007f003f2b858a: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b858f: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b8597: call   0x00007f003f27d5e0  ; OopMap{[160]=Oop rsi=Oop [152]=Oop rdi=Oop off=2716}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarFile::getJarEntry@-1 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {runtime_call}
  0x00007f003f2b859c: jmp    0x00007f003f2b7ccd
  0x00007f003f2b85a1: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b85a6: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b85ae: call   0x00007f003f27d5e0  ; OopMap{[160]=Oop rsi=Oop [152]=Oop rdi=Oop off=2739}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarFile::getEntry@-1 (line 240)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {runtime_call}
  0x00007f003f2b85b3: jmp    0x00007f003f2b7d14
  0x00007f003f2b85b8: mov    rdx,rdx
  0x00007f003f2b85bb: call   0x00007f003f279760  ; OopMap{[160]=Oop [152]=Oop rbx=Oop r8=Oop off=2752}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@10 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {runtime_call}
  0x00007f003f2b85c0: jmp    0x00007f003f2b7dda
  0x00007f003f2b85c5: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b85ca: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b85d2: call   0x00007f003f27d5e0  ; OopMap{[160]=Oop [152]=Oop rbx=Oop r8=Oop rax=Oop off=2775}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@-1 (line 286)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {runtime_call}
  0x00007f003f2b85d7: jmp    0x00007f003f2b7e21
  0x00007f003f2b85dc: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b85e1: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b85e9: call   0x00007f003f27d5e0  ; OopMap{[160]=Oop [152]=Oop rbx=Oop rax=Oop off=2798}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarEntry::&lt;init&gt;@-1 (line 62)
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@7 (line 287)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {runtime_call}
  0x00007f003f2b85ee: jmp    0x00007f003f2b7e88
  0x00007f003f2b85f3: mov    QWORD PTR [rsp],rax
  0x00007f003f2b85f7: call   0x00007f003f27b2c0  ; OopMap{[160]=Oop [152]=Oop off=2812}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@5 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {runtime_call}
  0x00007f003f2b85fc: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2b8606: mov    eax,0xa050f00
  0x00007f003f2b860b: call   0x00007f003f27c5e0  ; OopMap{rbx=Oop [152]=Oop [160]=Oop off=2832}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@67 (line 1049)
                                                ;   {runtime_call}
  0x00007f003f2b8610: jmp    0x00007f003f2b81a8
  0x00007f003f2b8615: mov    rdx,rdx
  0x00007f003f2b8618: call   0x00007f003f279760  ; OopMap{rbx=Oop [152]=Oop [160]=Oop off=2845}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@67 (line 1049)
                                                ;   {runtime_call}
  0x00007f003f2b861d: jmp    0x00007f003f2b81e5
  0x00007f003f2b8622: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b8627: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b862f: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop [152]=Oop [160]=Oop r8=Oop off=2868}
                                                ;*synchronization entry
                                                ; - java.util.HashSet::&lt;init&gt;@-1 (line 104)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007f003f2b8634: jmp    0x00007f003f2b822f
  0x00007f003f2b8639: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b863e: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b8646: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop [152]=Oop [160]=Oop r8=Oop off=2891}
                                                ;*synchronization entry
                                                ; - java.util.AbstractSet::&lt;init&gt;@-1 (line 63)
                                                ; - java.util.HashSet::&lt;init&gt;@1 (line 104)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007f003f2b864b: jmp    0x00007f003f2b8276
  0x00007f003f2b8650: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b8655: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b865d: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop [152]=Oop [160]=Oop r8=Oop off=2914}
                                                ;*synchronization entry
                                                ; - java.util.AbstractCollection::&lt;init&gt;@-1 (line 66)
                                                ; - java.util.AbstractSet::&lt;init&gt;@1 (line 63)
                                                ; - java.util.HashSet::&lt;init&gt;@1 (line 104)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007f003f2b8662: jmp    0x00007f003f2b82bd
  0x00007f003f2b8667: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b866c: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b8674: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop [152]=Oop [160]=Oop r8=Oop off=2937}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.AbstractCollection::&lt;init&gt;@1 (line 66)
                                                ; - java.util.AbstractSet::&lt;init&gt;@1 (line 63)
                                                ; - java.util.HashSet::&lt;init&gt;@1 (line 104)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007f003f2b8679: jmp    0x00007f003f2b8304
  0x00007f003f2b867e: mov    rdx,rdx
  0x00007f003f2b8681: call   0x00007f003f279760  ; OopMap{rbx=Oop [152]=Oop [160]=Oop r8=Oop off=2950}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashSet::&lt;init&gt;@5 (line 105)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007f003f2b8686: jmp    0x00007f003f2b8351
  0x00007f003f2b868b: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b8690: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b8698: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop [152]=Oop [160]=Oop r8=Oop rax=Oop off=2973}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::&lt;init&gt;@-1 (line 474)
                                                ; - java.util.HashSet::&lt;init&gt;@9 (line 105)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007f003f2b869d: jmp    0x00007f003f2b8398
  0x00007f003f2b86a2: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b86a7: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b86af: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop [152]=Oop [160]=Oop r8=Oop rax=Oop off=2996}
                                                ;*synchronization entry
                                                ; - java.util.AbstractMap::&lt;init&gt;@-1 (line 73)
                                                ; - java.util.HashMap::&lt;init&gt;@1 (line 474)
                                                ; - java.util.HashSet::&lt;init&gt;@9 (line 105)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007f003f2b86b4: jmp    0x00007f003f2b83df
  0x00007f003f2b86b9: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2b86be: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2b86c6: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop [152]=Oop [160]=Oop r8=Oop rax=Oop off=3019}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.AbstractMap::&lt;init&gt;@1 (line 73)
                                                ; - java.util.HashMap::&lt;init&gt;@1 (line 474)
                                                ; - java.util.HashSet::&lt;init&gt;@9 (line 105)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007f003f2b86cb: jmp    0x00007f003f2b8426
  0x00007f003f2b86d0: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2b86da: mov    eax,0xa050f00
  0x00007f003f2b86df: call   0x00007f003f27c5e0  ; OopMap{rsi=Oop off=3044}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@28 (line 1040)
                                                ;   {runtime_call}
  0x00007f003f2b86e4: jmp    0x00007f003f2b8520
  0x00007f003f2b86e9: mov    rdx,rdx
  0x00007f003f2b86ec: call   0x00007f003f2794a0  ; OopMap{rsi=Oop off=3057}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@28 (line 1040)
                                                ;   {runtime_call}
  0x00007f003f2b86f1: jmp    0x00007f003f2b852f
  0x00007f003f2b86f6: nop
  0x00007f003f2b86f7: nop
  0x00007f003f2b86f8: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2b86ff: movabs r10,0x0
  0x00007f003f2b8709: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2b8710: movabs r10,0x0
  0x00007f003f2b871a: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2b8721: add    rsp,0xd0
  0x00007f003f2b8728: pop    rbp
  0x00007f003f2b8729: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2b872e: hlt    
  0x00007f003f2b872f: hlt    
  0x00007f003f2b8730: hlt    
  0x00007f003f2b8731: hlt    
  0x00007f003f2b8732: hlt    
  0x00007f003f2b8733: hlt    
  0x00007f003f2b8734: hlt    
  0x00007f003f2b8735: hlt    
  0x00007f003f2b8736: hlt    
  0x00007f003f2b8737: hlt    
  0x00007f003f2b8738: hlt    
  0x00007f003f2b8739: hlt    
  0x00007f003f2b873a: hlt    
  0x00007f003f2b873b: hlt    
  0x00007f003f2b873c: hlt    
  0x00007f003f2b873d: hlt    
  0x00007f003f2b873e: hlt    
  0x00007f003f2b873f: hlt    
[Stub Code]
  0x00007f003f2b8740: nop                       ;   {no_reloc}
  0x00007f003f2b8741: nop
  0x00007f003f2b8742: nop
  0x00007f003f2b8743: nop
  0x00007f003f2b8744: nop
  0x00007f003f2b8745: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b874f: jmp    0x00007f003f2b874f  ;   {runtime_call}
  0x00007f003f2b8754: nop
  0x00007f003f2b8755: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b875f: jmp    0x00007f003f2b875f  ;   {runtime_call}
  0x00007f003f2b8764: nop
  0x00007f003f2b8765: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b876f: jmp    0x00007f003f2b876f  ;   {runtime_call}
  0x00007f003f2b8774: nop
  0x00007f003f2b8775: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b877f: jmp    0x00007f003f2b877f  ;   {runtime_call}
  0x00007f003f2b8784: nop
  0x00007f003f2b8785: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b878f: jmp    0x00007f003f2b878f  ;   {runtime_call}
  0x00007f003f2b8794: nop
  0x00007f003f2b8795: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b879f: jmp    0x00007f003f2b879f  ;   {runtime_call}
  0x00007f003f2b87a4: nop
  0x00007f003f2b87a5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2b87af: jmp    0x00007f003f2b87af  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2b87b4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2b87b9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2b87be: sub    rsp,0x80
  0x00007f003f2b87c5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2b87ca: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2b87cf: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2b87d4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2b87d9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2b87de: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2b87e3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2b87e8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2b87ed: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2b87f2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2b87f7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2b87fc: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2b8801: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2b8806: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2b880b: mov    QWORD PTR [rsp],r15
  0x00007f003f2b880f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2b8819: movabs rsi,0x7f003f2b87b9  ;   {internal_word}
  0x00007f003f2b8823: mov    rdx,rsp
  0x00007f003f2b8826: and    rsp,0xfffffffffffffff0
  0x00007f003f2b882a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2b882f: hlt    
[Deopt Handler Code]
  0x00007f003f2b8830: movabs r10,0x7f003f2b8830  ;   {section_word}
  0x00007f003f2b883a: push   r10
  0x00007f003f2b883c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2b8841: hlt    
  0x00007f003f2b8842: hlt    
  0x00007f003f2b8843: hlt    
  0x00007f003f2b8844: hlt    
  0x00007f003f2b8845: hlt    
  0x00007f003f2b8846: hlt    
  0x00007f003f2b8847: hlt    
<nmethod compile_id='90' compiler='C1' level='3' entry='0x00007f003f2b7b00' size='5872' address='0x00007f003f2b7890' relocation_offset='312' insts_offset='624' stub_offset='3760' scopes_data_offset='4136' scopes_pcs_offset='4824' dependencies_offset='5816' handler_table_offset='5824' nul_chk_table_offset='5848' metadata_offset='4024' method='sun/misc/URLClassPath$JarLoader getResource (Ljava/lang/String;Z)Lsun/misc/Resource;' bytes='85' count='548' iicount='548' stamp='0.434'/>
<writer thread='139637818533632'/>
<task_queued compile_id='98' method='java/util/zip/ZipFile getEntry (Ljava/lang/String;)Ljava/util/zip/ZipEntry;' bytes='86' count='640' iicount='640' level='3' stamp='0.434' comment='tiered' hot_count='640'/>
[Loaded jdk.vm.ci.hotspot.HotSpotVMConfigAccess from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotVMConfig from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded java.lang.Long$LongCache from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/HashMap.putVal  [0x00007f003f2b9200, 0x00007f003f2bb0d8]  7896 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9        = boolean
  # parm4:    rdi       = boolean
  #           [sp+0xb0]  (sp of caller)
  0x00007f003f2b9200: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2b9204: shl    r10,0x3
  0x00007f003f2b9208: cmp    r10,rax
  0x00007f003f2b920b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2b9211: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2b921c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2b9220: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2b9227: push   rbp
  0x00007f003f2b9228: sub    rsp,0xa0
  0x00007f003f2b922f: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2b9234: mov    DWORD PTR [rsp+0x40],edx
  0x00007f003f2b9238: mov    QWORD PTR [rsp+0x50],rcx
  0x00007f003f2b923d: movabs rbx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b9247: mov    eax,DWORD PTR [rbx+0xfc]
  0x00007f003f2b924d: add    eax,0x8
  0x00007f003f2b9250: mov    DWORD PTR [rbx+0xfc],eax
  0x00007f003f2b9256: movabs rbx,0x7f003886d918  ;   {metadata({method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b9260: and    eax,0x1ff8
  0x00007f003f2b9266: cmp    eax,0x0
  0x00007f003f2b9269: je     0x00007f003f2baed5  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@0 (line 627)

  0x00007f003f2b926f: mov    ebx,DWORD PTR [rsi+0x24]
  0x00007f003f2b9272: shl    rbx,0x3            ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@1 (line 627)

  0x00007f003f2b9276: cmp    rbx,0x0
  0x00007f003f2b927a: movabs rax,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b9284: movabs r11,0x130
  0x00007f003f2b928e: je     0x00007f003f2b929e
  0x00007f003f2b9294: movabs r11,0x140
  0x00007f003f2b929e: mov    r13,QWORD PTR [rax+r11*1]
  0x00007f003f2b92a2: lea    r13,[r13+0x1]
  0x00007f003f2b92a6: mov    QWORD PTR [rax+r11*1],r13
  0x00007f003f2b92aa: je     0x00007f003f2b92ff  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@7 (line 627)

  0x00007f003f2b92b0: mov    eax,DWORD PTR [rbx+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@12 (line 627)
                                                ; implicit exception: dispatches to 0x00007f003f2baeec
  0x00007f003f2b92b3: cmp    eax,0x0
  0x00007f003f2b92b6: movabs r11,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b92c0: movabs r13,0x150
  0x00007f003f2b92ca: jne    0x00007f003f2b92da
  0x00007f003f2b92d0: movabs r13,0x160
  0x00007f003f2b92da: mov    r14,QWORD PTR [r11+r13*1]
  0x00007f003f2b92de: lea    r14,[r14+0x1]
  0x00007f003f2b92e2: mov    QWORD PTR [r11+r13*1],r14
  0x00007f003f2b92e6: je     0x00007f003f2b92ff  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@16 (line 627)

  0x00007f003f2b92ec: mov    DWORD PTR [rsp+0x60],edi
  0x00007f003f2b92f0: mov    DWORD PTR [rsp+0x44],r9d
  0x00007f003f2b92f5: mov    QWORD PTR [rsp+0x58],r8
  0x00007f003f2b92fa: jmp    0x00007f003f2b9340  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@29 (line 629)

  0x00007f003f2b92ff: mov    DWORD PTR [rsp+0x60],edi
  0x00007f003f2b9303: mov    DWORD PTR [rsp+0x44],r9d
  0x00007f003f2b9308: mov    QWORD PTR [rsp+0x58],r8
  0x00007f003f2b930d: mov    rbx,rsi
  0x00007f003f2b9310: movabs rax,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b931a: add    QWORD PTR [rax+0x170],0x1
  0x00007f003f2b9322: mov    rbx,rsi
  0x00007f003f2b9325: mov    rsi,rbx            ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 628)

  0x00007f003f2b9328: nop
  0x00007f003f2b9329: nop
  0x00007f003f2b932a: nop
  0x00007f003f2b932b: nop
  0x00007f003f2b932c: nop
  0x00007f003f2b932d: nop
  0x00007f003f2b932e: nop
  0x00007f003f2b932f: call   0x00007f003f1c4d60  ; OopMap{[72]=Oop [88]=Oop [80]=Oop off=308}
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 628)
                                                ;   {optimized virtual_call}
  0x00007f003f2b9334: mov    rdx,rax            ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 628)

  0x00007f003f2b9337: mov    ecx,DWORD PTR [rdx+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26 (line 628)
                                                ; implicit exception: dispatches to 0x00007f003f2baef1
  0x00007f003f2b933a: mov    rax,rcx
  0x00007f003f2b933d: mov    rbx,rdx            ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@29 (line 629)

  0x00007f003f2b9340: dec    eax
  0x00007f003f2b9342: and    eax,DWORD PTR [rsp+0x40]
  0x00007f003f2b9346: movsxd rdx,eax
  0x00007f003f2b9349: cmp    eax,DWORD PTR [rbx+0xc]  ; implicit exception: dispatches to 0x00007f003f2baef6
  0x00007f003f2b934c: jae    0x00007f003f2baf00
  0x00007f003f2b9352: mov    edi,DWORD PTR [rbx+rdx*4+0x10]
  0x00007f003f2b9356: shl    rdi,0x3            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 629)

  0x00007f003f2b935a: cmp    rdi,0x0
  0x00007f003f2b935e: movabs rdx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b9368: movabs rcx,0x208
  0x00007f003f2b9372: jne    0x00007f003f2b9382
  0x00007f003f2b9378: movabs rcx,0x218
  0x00007f003f2b9382: mov    r8,QWORD PTR [rdx+rcx*1]
  0x00007f003f2b9386: lea    r8,[r8+0x1]
  0x00007f003f2b938a: mov    QWORD PTR [rdx+rcx*1],r8
  0x00007f003f2b938e: jne    0x00007f003f2b9866  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@44 (line 629)

  0x00007f003f2b9394: mov    DWORD PTR [rsp+0x64],eax
  0x00007f003f2b9398: mov    QWORD PTR [rsp+0x68],rbx
  0x00007f003f2b939d: mov    rsi,QWORD PTR [rsp+0x48]
  0x00007f003f2b93a2: movabs rdx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b93ac: mov    esi,DWORD PTR [rsi+0x8]
  0x00007f003f2b93af: shl    rsi,0x3
  0x00007f003f2b93b3: cmp    rsi,QWORD PTR [rdx+0x238]
  0x00007f003f2b93ba: jne    0x00007f003f2b93c9
  0x00007f003f2b93bc: add    QWORD PTR [rdx+0x240],0x1
  0x00007f003f2b93c4: jmp    0x00007f003f2b958b
  0x00007f003f2b93c9: cmp    rsi,QWORD PTR [rdx+0x248]
  0x00007f003f2b93d0: jne    0x00007f003f2b93df
  0x00007f003f2b93d2: add    QWORD PTR [rdx+0x250],0x1
  0x00007f003f2b93da: jmp    0x00007f003f2b958b
  0x00007f003f2b93df: cmp    rsi,QWORD PTR [rdx+0x258]
  0x00007f003f2b93e6: jne    0x00007f003f2b93f5
  0x00007f003f2b93e8: add    QWORD PTR [rdx+0x260],0x1
  0x00007f003f2b93f0: jmp    0x00007f003f2b958b
  0x00007f003f2b93f5: cmp    rsi,QWORD PTR [rdx+0x268]
  0x00007f003f2b93fc: jne    0x00007f003f2b940b
  0x00007f003f2b93fe: add    QWORD PTR [rdx+0x270],0x1
  0x00007f003f2b9406: jmp    0x00007f003f2b958b
  0x00007f003f2b940b: cmp    rsi,QWORD PTR [rdx+0x278]
  0x00007f003f2b9412: jne    0x00007f003f2b9421
  0x00007f003f2b9414: add    QWORD PTR [rdx+0x280],0x1
  0x00007f003f2b941c: jmp    0x00007f003f2b958b
  0x00007f003f2b9421: cmp    rsi,QWORD PTR [rdx+0x288]
  0x00007f003f2b9428: jne    0x00007f003f2b9437
  0x00007f003f2b942a: add    QWORD PTR [rdx+0x290],0x1
  0x00007f003f2b9432: jmp    0x00007f003f2b958b
  0x00007f003f2b9437: cmp    rsi,QWORD PTR [rdx+0x298]
  0x00007f003f2b943e: jne    0x00007f003f2b944d
  0x00007f003f2b9440: add    QWORD PTR [rdx+0x2a0],0x1
  0x00007f003f2b9448: jmp    0x00007f003f2b958b
  0x00007f003f2b944d: cmp    rsi,QWORD PTR [rdx+0x2a8]
  0x00007f003f2b9454: jne    0x00007f003f2b9463
  0x00007f003f2b9456: add    QWORD PTR [rdx+0x2b0],0x1
  0x00007f003f2b945e: jmp    0x00007f003f2b958b
  0x00007f003f2b9463: cmp    QWORD PTR [rdx+0x238],0x0
  0x00007f003f2b946e: jne    0x00007f003f2b9487
  0x00007f003f2b9470: mov    QWORD PTR [rdx+0x238],rsi
  0x00007f003f2b9477: mov    QWORD PTR [rdx+0x240],0x1
  0x00007f003f2b9482: jmp    0x00007f003f2b958b
  0x00007f003f2b9487: cmp    QWORD PTR [rdx+0x248],0x0
  0x00007f003f2b9492: jne    0x00007f003f2b94ab
  0x00007f003f2b9494: mov    QWORD PTR [rdx+0x248],rsi
  0x00007f003f2b949b: mov    QWORD PTR [rdx+0x250],0x1
  0x00007f003f2b94a6: jmp    0x00007f003f2b958b
  0x00007f003f2b94ab: cmp    QWORD PTR [rdx+0x258],0x0
  0x00007f003f2b94b6: jne    0x00007f003f2b94cf
  0x00007f003f2b94b8: mov    QWORD PTR [rdx+0x258],rsi
  0x00007f003f2b94bf: mov    QWORD PTR [rdx+0x260],0x1
  0x00007f003f2b94ca: jmp    0x00007f003f2b958b
  0x00007f003f2b94cf: cmp    QWORD PTR [rdx+0x268],0x0
  0x00007f003f2b94da: jne    0x00007f003f2b94f3
  0x00007f003f2b94dc: mov    QWORD PTR [rdx+0x268],rsi
  0x00007f003f2b94e3: mov    QWORD PTR [rdx+0x270],0x1
  0x00007f003f2b94ee: jmp    0x00007f003f2b958b
  0x00007f003f2b94f3: cmp    QWORD PTR [rdx+0x278],0x0
  0x00007f003f2b94fe: jne    0x00007f003f2b9517
  0x00007f003f2b9500: mov    QWORD PTR [rdx+0x278],rsi
  0x00007f003f2b9507: mov    QWORD PTR [rdx+0x280],0x1
  0x00007f003f2b9512: jmp    0x00007f003f2b958b
  0x00007f003f2b9517: cmp    QWORD PTR [rdx+0x288],0x0
  0x00007f003f2b9522: jne    0x00007f003f2b953b
  0x00007f003f2b9524: mov    QWORD PTR [rdx+0x288],rsi
  0x00007f003f2b952b: mov    QWORD PTR [rdx+0x290],0x1
  0x00007f003f2b9536: jmp    0x00007f003f2b958b
  0x00007f003f2b953b: cmp    QWORD PTR [rdx+0x298],0x0
  0x00007f003f2b9546: jne    0x00007f003f2b955f
  0x00007f003f2b9548: mov    QWORD PTR [rdx+0x298],rsi
  0x00007f003f2b954f: mov    QWORD PTR [rdx+0x2a0],0x1
  0x00007f003f2b955a: jmp    0x00007f003f2b958b
  0x00007f003f2b955f: cmp    QWORD PTR [rdx+0x2a8],0x0
  0x00007f003f2b956a: jne    0x00007f003f2b9583
  0x00007f003f2b956c: mov    QWORD PTR [rdx+0x2a8],rsi
  0x00007f003f2b9573: mov    QWORD PTR [rdx+0x2b0],0x1
  0x00007f003f2b957e: jmp    0x00007f003f2b958b
  0x00007f003f2b9583: add    QWORD PTR [rdx+0x228],0x1
  0x00007f003f2b958b: mov    edx,DWORD PTR [rsp+0x40]
  0x00007f003f2b958f: mov    rcx,QWORD PTR [rsp+0x50]
  0x00007f003f2b9594: mov    r8,QWORD PTR [rsp+0x58]
  0x00007f003f2b9599: movabs r9,0x0             ;   {oop(NULL)}
  0x00007f003f2b95a3: mov    rsi,QWORD PTR [rsp+0x48]  ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56 (line 630)

  0x00007f003f2b95a8: nop
  0x00007f003f2b95a9: nop
  0x00007f003f2b95aa: nop
  0x00007f003f2b95ab: nop
  0x00007f003f2b95ac: nop
  0x00007f003f2b95ad: movabs rax,0xffffffffffffffff
  0x00007f003f2b95b7: call   0x00007f003f1c4f60  ; OopMap{[72]=Oop [104]=Oop off=956}
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56 (line 630)
                                                ;   {virtual_call}
  0x00007f003f2b95bc: mov    edx,DWORD PTR [rsp+0x64]
  0x00007f003f2b95c0: movsxd rsi,edx
  0x00007f003f2b95c3: mov    rbx,QWORD PTR [rsp+0x68]
  0x00007f003f2b95c8: lea    rsi,[rbx+rsi*4+0x10]
  0x00007f003f2b95cd: cmp    edx,DWORD PTR [rbx+0xc]
  0x00007f003f2b95d0: jae    0x00007f003f2baf09
  0x00007f003f2b95d6: cmp    rax,0x0
  0x00007f003f2b95da: jne    0x00007f003f2b95f5
  0x00007f003f2b95dc: movabs rdi,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b95e6: or     DWORD PTR [rdi+0x2b8],0x100
  0x00007f003f2b95f0: jmp    0x00007f003f2b9835
  0x00007f003f2b95f5: mov    edx,DWORD PTR [rbx+0x8]  ; implicit exception: dispatches to 0x00007f003f2baf12
  0x00007f003f2b95f8: shl    rdx,0x3
  0x00007f003f2b95fc: mov    edi,DWORD PTR [rax+0x8]
  0x00007f003f2b95ff: shl    rdi,0x3
  0x00007f003f2b9603: mov    rdx,QWORD PTR [rdx+0xe0]
  0x00007f003f2b960a: cmp    rdi,rdx
  0x00007f003f2b960d: je     0x00007f003f2b963b
  0x00007f003f2b9613: mov    ebx,DWORD PTR [rdx+0xc]
  0x00007f003f2b9616: cmp    rdx,QWORD PTR [rdi+rbx*1]
  0x00007f003f2b961a: je     0x00007f003f2b963b
  0x00007f003f2b9620: cmp    ebx,0x18
  0x00007f003f2b9623: jne    0x00007f003f2b981e
  0x00007f003f2b9629: push   rdi
  0x00007f003f2b962a: push   rdx
  0x00007f003f2b962b: call   0x00007f003f27b720  ;   {runtime_call}
  0x00007f003f2b9630: pop    rdi
  0x00007f003f2b9631: pop    rdx
  0x00007f003f2b9632: cmp    edx,0x0
  0x00007f003f2b9635: je     0x00007f003f2b981e
  0x00007f003f2b963b: movabs rdi,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b9645: mov    edx,DWORD PTR [rax+0x8]
  0x00007f003f2b9648: shl    rdx,0x3
  0x00007f003f2b964c: cmp    rdx,QWORD PTR [rdi+0x2d0]
  0x00007f003f2b9653: jne    0x00007f003f2b9662
  0x00007f003f2b9655: add    QWORD PTR [rdi+0x2d8],0x1
  0x00007f003f2b965d: jmp    0x00007f003f2b9835
  0x00007f003f2b9662: cmp    rdx,QWORD PTR [rdi+0x2e0]
  0x00007f003f2b9669: jne    0x00007f003f2b9678
  0x00007f003f2b966b: add    QWORD PTR [rdi+0x2e8],0x1
  0x00007f003f2b9673: jmp    0x00007f003f2b9835
  0x00007f003f2b9678: cmp    rdx,QWORD PTR [rdi+0x2f0]
  0x00007f003f2b967f: jne    0x00007f003f2b968e
  0x00007f003f2b9681: add    QWORD PTR [rdi+0x2f8],0x1
  0x00007f003f2b9689: jmp    0x00007f003f2b9835
  0x00007f003f2b968e: cmp    rdx,QWORD PTR [rdi+0x300]
  0x00007f003f2b9695: jne    0x00007f003f2b96a4
  0x00007f003f2b9697: add    QWORD PTR [rdi+0x308],0x1
  0x00007f003f2b969f: jmp    0x00007f003f2b9835
  0x00007f003f2b96a4: cmp    rdx,QWORD PTR [rdi+0x310]
  0x00007f003f2b96ab: jne    0x00007f003f2b96ba
  0x00007f003f2b96ad: add    QWORD PTR [rdi+0x318],0x1
  0x00007f003f2b96b5: jmp    0x00007f003f2b9835
  0x00007f003f2b96ba: cmp    rdx,QWORD PTR [rdi+0x320]
  0x00007f003f2b96c1: jne    0x00007f003f2b96d0
  0x00007f003f2b96c3: add    QWORD PTR [rdi+0x328],0x1
  0x00007f003f2b96cb: jmp    0x00007f003f2b9835
  0x00007f003f2b96d0: cmp    rdx,QWORD PTR [rdi+0x330]
  0x00007f003f2b96d7: jne    0x00007f003f2b96e6
  0x00007f003f2b96d9: add    QWORD PTR [rdi+0x338],0x1
  0x00007f003f2b96e1: jmp    0x00007f003f2b9835
  0x00007f003f2b96e6: cmp    rdx,QWORD PTR [rdi+0x340]
  0x00007f003f2b96ed: jne    0x00007f003f2b96fc
  0x00007f003f2b96ef: add    QWORD PTR [rdi+0x348],0x1
  0x00007f003f2b96f7: jmp    0x00007f003f2b9835
  0x00007f003f2b96fc: cmp    QWORD PTR [rdi+0x2d0],0x0
  0x00007f003f2b9707: jne    0x00007f003f2b9720
  0x00007f003f2b9709: mov    QWORD PTR [rdi+0x2d0],rdx
  0x00007f003f2b9710: mov    QWORD PTR [rdi+0x2d8],0x1
  0x00007f003f2b971b: jmp    0x00007f003f2b9835
  0x00007f003f2b9720: cmp    QWORD PTR [rdi+0x2e0],0x0
  0x00007f003f2b972b: jne    0x00007f003f2b9744
  0x00007f003f2b972d: mov    QWORD PTR [rdi+0x2e0],rdx
  0x00007f003f2b9734: mov    QWORD PTR [rdi+0x2e8],0x1
  0x00007f003f2b973f: jmp    0x00007f003f2b9835
  0x00007f003f2b9744: cmp    QWORD PTR [rdi+0x2f0],0x0
  0x00007f003f2b974f: jne    0x00007f003f2b9768
  0x00007f003f2b9751: mov    QWORD PTR [rdi+0x2f0],rdx
  0x00007f003f2b9758: mov    QWORD PTR [rdi+0x2f8],0x1
  0x00007f003f2b9763: jmp    0x00007f003f2b9835
  0x00007f003f2b9768: cmp    QWORD PTR [rdi+0x300],0x0
  0x00007f003f2b9773: jne    0x00007f003f2b978c
  0x00007f003f2b9775: mov    QWORD PTR [rdi+0x300],rdx
  0x00007f003f2b977c: mov    QWORD PTR [rdi+0x308],0x1
  0x00007f003f2b9787: jmp    0x00007f003f2b9835
  0x00007f003f2b978c: cmp    QWORD PTR [rdi+0x310],0x0
  0x00007f003f2b9797: jne    0x00007f003f2b97b0
  0x00007f003f2b9799: mov    QWORD PTR [rdi+0x310],rdx
  0x00007f003f2b97a0: mov    QWORD PTR [rdi+0x318],0x1
  0x00007f003f2b97ab: jmp    0x00007f003f2b9835
  0x00007f003f2b97b0: cmp    QWORD PTR [rdi+0x320],0x0
  0x00007f003f2b97bb: jne    0x00007f003f2b97d4
  0x00007f003f2b97bd: mov    QWORD PTR [rdi+0x320],rdx
  0x00007f003f2b97c4: mov    QWORD PTR [rdi+0x328],0x1
  0x00007f003f2b97cf: jmp    0x00007f003f2b9835
  0x00007f003f2b97d4: cmp    QWORD PTR [rdi+0x330],0x0
  0x00007f003f2b97df: jne    0x00007f003f2b97f8
  0x00007f003f2b97e1: mov    QWORD PTR [rdi+0x330],rdx
  0x00007f003f2b97e8: mov    QWORD PTR [rdi+0x338],0x1
  0x00007f003f2b97f3: jmp    0x00007f003f2b9835
  0x00007f003f2b97f8: cmp    QWORD PTR [rdi+0x340],0x0
  0x00007f003f2b9803: jne    0x00007f003f2b981c
  0x00007f003f2b9805: mov    QWORD PTR [rdi+0x340],rdx
  0x00007f003f2b980c: mov    QWORD PTR [rdi+0x348],0x1
  0x00007f003f2b9817: jmp    0x00007f003f2b9835
  0x00007f003f2b981c: jmp    0x00007f003f2b9835
  0x00007f003f2b981e: movabs rdi,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b9828: sub    QWORD PTR [rdi+0x2c0],0x1
  0x00007f003f2b9830: jmp    0x00007f003f2baf17
  0x00007f003f2b9835: mov    r10,rax
  0x00007f003f2b9838: shr    r10,0x3
  0x00007f003f2b983c: mov    DWORD PTR [rsi],r10d
  0x00007f003f2b983f: shr    rsi,0x9
  0x00007f003f2b9843: movabs rdx,0x7f003ae7c000
  0x00007f003f2b984d: mov    BYTE PTR [rsi+rdx*1],0x0  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 630)

  0x00007f003f2b9851: movabs rdx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b985b: inc    DWORD PTR [rdx+0x358]
  0x00007f003f2b9861: jmp    0x00007f003f2ba96e  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@60 (line 630)

  0x00007f003f2b9866: mov    edx,DWORD PTR [rdi+0xc]  ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@65 (line 633)
                                                ; implicit exception: dispatches to 0x00007f003f2baf20
  0x00007f003f2b9869: cmp    edx,DWORD PTR [rsp+0x40]
  0x00007f003f2b986d: movabs rdx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b9877: movabs rsi,0x370
  0x00007f003f2b9881: jne    0x00007f003f2b9891
  0x00007f003f2b9887: movabs rsi,0x380
  0x00007f003f2b9891: mov    rax,QWORD PTR [rdx+rsi*1]
  0x00007f003f2b9895: lea    rax,[rax+0x1]
  0x00007f003f2b9899: mov    QWORD PTR [rdx+rsi*1],rax
  0x00007f003f2b989d: je     0x00007f003f2b98ad  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@69 (line 633)

  0x00007f003f2b98a3: mov    QWORD PTR [rsp+0x68],rbx
  0x00007f003f2b98a8: jmp    0x00007f003f2b9b82  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@104 (line 636)

  0x00007f003f2b98ad: mov    rcx,QWORD PTR [rsp+0x50]
  0x00007f003f2b98b2: mov    edx,DWORD PTR [rdi+0x10]
  0x00007f003f2b98b5: shl    rdx,0x3            ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@74 (line 633)

  0x00007f003f2b98b9: cmp    rdx,rcx
  0x00007f003f2b98bc: movabs rsi,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b98c6: movabs rax,0x390
  0x00007f003f2b98d0: je     0x00007f003f2b98e0
  0x00007f003f2b98d6: movabs rax,0x3a0
  0x00007f003f2b98e0: mov    r8,QWORD PTR [rsi+rax*1]
  0x00007f003f2b98e4: lea    r8,[r8+0x1]
  0x00007f003f2b98e8: mov    QWORD PTR [rsi+rax*1],r8
  0x00007f003f2b98ec: je     0x00007f003f2ba921  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@81 (line 633)

  0x00007f003f2b98f2: cmp    rcx,0x0
  0x00007f003f2b98f6: movabs rsi,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b9900: movabs rax,0x3b0
  0x00007f003f2b990a: je     0x00007f003f2b991a
  0x00007f003f2b9910: movabs rax,0x3c0
  0x00007f003f2b991a: mov    r8,QWORD PTR [rsi+rax*1]
  0x00007f003f2b991e: lea    r8,[r8+0x1]
  0x00007f003f2b9922: mov    QWORD PTR [rsi+rax*1],r8
  0x00007f003f2b9926: jne    0x00007f003f2b9936  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@85 (line 633)

  0x00007f003f2b992c: mov    QWORD PTR [rsp+0x68],rbx
  0x00007f003f2b9931: jmp    0x00007f003f2b9b82  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@104 (line 636)

  0x00007f003f2b9936: mov    QWORD PTR [rsp+0x70],rdi
  0x00007f003f2b993b: mov    QWORD PTR [rsp+0x68],rbx
  0x00007f003f2b9940: cmp    rax,QWORD PTR [rcx]  ; implicit exception: dispatches to 0x00007f003f2baf25
  0x00007f003f2b9943: mov    rsi,rcx
  0x00007f003f2b9946: movabs rax,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b9950: mov    esi,DWORD PTR [rsi+0x8]
  0x00007f003f2b9953: shl    rsi,0x3
  0x00007f003f2b9957: cmp    rsi,QWORD PTR [rax+0x3e0]
  0x00007f003f2b995e: jne    0x00007f003f2b996d
  0x00007f003f2b9960: add    QWORD PTR [rax+0x3e8],0x1
  0x00007f003f2b9968: jmp    0x00007f003f2b9b2f
  0x00007f003f2b996d: cmp    rsi,QWORD PTR [rax+0x3f0]
  0x00007f003f2b9974: jne    0x00007f003f2b9983
  0x00007f003f2b9976: add    QWORD PTR [rax+0x3f8],0x1
  0x00007f003f2b997e: jmp    0x00007f003f2b9b2f
  0x00007f003f2b9983: cmp    rsi,QWORD PTR [rax+0x400]
  0x00007f003f2b998a: jne    0x00007f003f2b9999
  0x00007f003f2b998c: add    QWORD PTR [rax+0x408],0x1
  0x00007f003f2b9994: jmp    0x00007f003f2b9b2f
  0x00007f003f2b9999: cmp    rsi,QWORD PTR [rax+0x410]
  0x00007f003f2b99a0: jne    0x00007f003f2b99af
  0x00007f003f2b99a2: add    QWORD PTR [rax+0x418],0x1
  0x00007f003f2b99aa: jmp    0x00007f003f2b9b2f
  0x00007f003f2b99af: cmp    rsi,QWORD PTR [rax+0x420]
  0x00007f003f2b99b6: jne    0x00007f003f2b99c5
  0x00007f003f2b99b8: add    QWORD PTR [rax+0x428],0x1
  0x00007f003f2b99c0: jmp    0x00007f003f2b9b2f
  0x00007f003f2b99c5: cmp    rsi,QWORD PTR [rax+0x430]
  0x00007f003f2b99cc: jne    0x00007f003f2b99db
  0x00007f003f2b99ce: add    QWORD PTR [rax+0x438],0x1
  0x00007f003f2b99d6: jmp    0x00007f003f2b9b2f
  0x00007f003f2b99db: cmp    rsi,QWORD PTR [rax+0x440]
  0x00007f003f2b99e2: jne    0x00007f003f2b99f1
  0x00007f003f2b99e4: add    QWORD PTR [rax+0x448],0x1
  0x00007f003f2b99ec: jmp    0x00007f003f2b9b2f
  0x00007f003f2b99f1: cmp    rsi,QWORD PTR [rax+0x450]
  0x00007f003f2b99f8: jne    0x00007f003f2b9a07
  0x00007f003f2b99fa: add    QWORD PTR [rax+0x458],0x1
  0x00007f003f2b9a02: jmp    0x00007f003f2b9b2f
  0x00007f003f2b9a07: cmp    QWORD PTR [rax+0x3e0],0x0
  0x00007f003f2b9a12: jne    0x00007f003f2b9a2b
  0x00007f003f2b9a14: mov    QWORD PTR [rax+0x3e0],rsi
  0x00007f003f2b9a1b: mov    QWORD PTR [rax+0x3e8],0x1
  0x00007f003f2b9a26: jmp    0x00007f003f2b9b2f
  0x00007f003f2b9a2b: cmp    QWORD PTR [rax+0x3f0],0x0
  0x00007f003f2b9a36: jne    0x00007f003f2b9a4f
  0x00007f003f2b9a38: mov    QWORD PTR [rax+0x3f0],rsi
  0x00007f003f2b9a3f: mov    QWORD PTR [rax+0x3f8],0x1
  0x00007f003f2b9a4a: jmp    0x00007f003f2b9b2f
  0x00007f003f2b9a4f: cmp    QWORD PTR [rax+0x400],0x0
  0x00007f003f2b9a5a: jne    0x00007f003f2b9a73
  0x00007f003f2b9a5c: mov    QWORD PTR [rax+0x400],rsi
  0x00007f003f2b9a63: mov    QWORD PTR [rax+0x408],0x1
  0x00007f003f2b9a6e: jmp    0x00007f003f2b9b2f
  0x00007f003f2b9a73: cmp    QWORD PTR [rax+0x410],0x0
  0x00007f003f2b9a7e: jne    0x00007f003f2b9a97
  0x00007f003f2b9a80: mov    QWORD PTR [rax+0x410],rsi
  0x00007f003f2b9a87: mov    QWORD PTR [rax+0x418],0x1
  0x00007f003f2b9a92: jmp    0x00007f003f2b9b2f
  0x00007f003f2b9a97: cmp    QWORD PTR [rax+0x420],0x0
  0x00007f003f2b9aa2: jne    0x00007f003f2b9abb
  0x00007f003f2b9aa4: mov    QWORD PTR [rax+0x420],rsi
  0x00007f003f2b9aab: mov    QWORD PTR [rax+0x428],0x1
  0x00007f003f2b9ab6: jmp    0x00007f003f2b9b2f
  0x00007f003f2b9abb: cmp    QWORD PTR [rax+0x430],0x0
  0x00007f003f2b9ac6: jne    0x00007f003f2b9adf
  0x00007f003f2b9ac8: mov    QWORD PTR [rax+0x430],rsi
  0x00007f003f2b9acf: mov    QWORD PTR [rax+0x438],0x1
  0x00007f003f2b9ada: jmp    0x00007f003f2b9b2f
  0x00007f003f2b9adf: cmp    QWORD PTR [rax+0x440],0x0
  0x00007f003f2b9aea: jne    0x00007f003f2b9b03
  0x00007f003f2b9aec: mov    QWORD PTR [rax+0x440],rsi
  0x00007f003f2b9af3: mov    QWORD PTR [rax+0x448],0x1
  0x00007f003f2b9afe: jmp    0x00007f003f2b9b2f
  0x00007f003f2b9b03: cmp    QWORD PTR [rax+0x450],0x0
  0x00007f003f2b9b0e: jne    0x00007f003f2b9b27
  0x00007f003f2b9b10: mov    QWORD PTR [rax+0x450],rsi
  0x00007f003f2b9b17: mov    QWORD PTR [rax+0x458],0x1
  0x00007f003f2b9b22: jmp    0x00007f003f2b9b2f
  0x00007f003f2b9b27: add    QWORD PTR [rax+0x3d0],0x1
  0x00007f003f2b9b2f: mov    rsi,rcx            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91 (line 634)

  0x00007f003f2b9b32: nop
  0x00007f003f2b9b33: nop
  0x00007f003f2b9b34: nop
  0x00007f003f2b9b35: movabs rax,0xffffffffffffffff
  0x00007f003f2b9b3f: call   0x00007f003f1c4f60  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [112]=Oop [80]=Oop off=2372}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91 (line 634)
                                                ;   {virtual_call}
  0x00007f003f2b9b44: cmp    eax,0x0
  0x00007f003f2b9b47: movabs rdx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b9b51: movabs rcx,0x468
  0x00007f003f2b9b5b: je     0x00007f003f2b9b6b
  0x00007f003f2b9b61: movabs rcx,0x478
  0x00007f003f2b9b6b: mov    r8,QWORD PTR [rdx+rcx*1]
  0x00007f003f2b9b6f: lea    r8,[r8+0x1]
  0x00007f003f2b9b73: mov    QWORD PTR [rdx+rcx*1],r8
  0x00007f003f2b9b77: mov    rdi,QWORD PTR [rsp+0x70]
  0x00007f003f2b9b7c: jne    0x00007f003f2ba921  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@94 (line 634)

  0x00007f003f2b9b82: cmp    rdi,0x0
  0x00007f003f2b9b86: jne    0x00007f003f2b9ba2
  0x00007f003f2b9b88: movabs r8,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b9b92: or     DWORD PTR [r8+0x498],0x100
  0x00007f003f2b9b9d: jmp    0x00007f003f2b9dbf
  0x00007f003f2b9ba2: movabs r9,0x7c0031710     ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00007f003f2b9bac: mov    ecx,DWORD PTR [rdi+0x8]
  0x00007f003f2b9baf: shl    rcx,0x3
  0x00007f003f2b9bb3: cmp    r9,rcx
  0x00007f003f2b9bb6: jne    0x00007f003f2b9da3
  0x00007f003f2b9bbc: movabs r8,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b9bc6: mov    r9d,DWORD PTR [rdi+0x8]
  0x00007f003f2b9bca: shl    r9,0x3
  0x00007f003f2b9bce: cmp    r9,QWORD PTR [r8+0x4b0]
  0x00007f003f2b9bd5: jne    0x00007f003f2b9be4
  0x00007f003f2b9bd7: add    QWORD PTR [r8+0x4b8],0x1
  0x00007f003f2b9bdf: jmp    0x00007f003f2b9dc4
  0x00007f003f2b9be4: cmp    r9,QWORD PTR [r8+0x4c0]
  0x00007f003f2b9beb: jne    0x00007f003f2b9bfa
  0x00007f003f2b9bed: add    QWORD PTR [r8+0x4c8],0x1
  0x00007f003f2b9bf5: jmp    0x00007f003f2b9dc4
  0x00007f003f2b9bfa: cmp    r9,QWORD PTR [r8+0x4d0]
  0x00007f003f2b9c01: jne    0x00007f003f2b9c10
  0x00007f003f2b9c03: add    QWORD PTR [r8+0x4d8],0x1
  0x00007f003f2b9c0b: jmp    0x00007f003f2b9dc4
  0x00007f003f2b9c10: cmp    r9,QWORD PTR [r8+0x4e0]
  0x00007f003f2b9c17: jne    0x00007f003f2b9c26
  0x00007f003f2b9c19: add    QWORD PTR [r8+0x4e8],0x1
  0x00007f003f2b9c21: jmp    0x00007f003f2b9dc4
  0x00007f003f2b9c26: cmp    r9,QWORD PTR [r8+0x4f0]
  0x00007f003f2b9c2d: jne    0x00007f003f2b9c3c
  0x00007f003f2b9c2f: add    QWORD PTR [r8+0x4f8],0x1
  0x00007f003f2b9c37: jmp    0x00007f003f2b9dc4
  0x00007f003f2b9c3c: cmp    r9,QWORD PTR [r8+0x500]
  0x00007f003f2b9c43: jne    0x00007f003f2b9c52
  0x00007f003f2b9c45: add    QWORD PTR [r8+0x508],0x1
  0x00007f003f2b9c4d: jmp    0x00007f003f2b9dc4
  0x00007f003f2b9c52: cmp    r9,QWORD PTR [r8+0x510]
  0x00007f003f2b9c59: jne    0x00007f003f2b9c68
  0x00007f003f2b9c5b: add    QWORD PTR [r8+0x518],0x1
  0x00007f003f2b9c63: jmp    0x00007f003f2b9dc4
  0x00007f003f2b9c68: cmp    r9,QWORD PTR [r8+0x520]
  0x00007f003f2b9c6f: jne    0x00007f003f2b9c7e
  0x00007f003f2b9c71: add    QWORD PTR [r8+0x528],0x1
  0x00007f003f2b9c79: jmp    0x00007f003f2b9dc4
  0x00007f003f2b9c7e: cmp    QWORD PTR [r8+0x4b0],0x0
  0x00007f003f2b9c89: jne    0x00007f003f2b9ca2
  0x00007f003f2b9c8b: mov    QWORD PTR [r8+0x4b0],r9
  0x00007f003f2b9c92: mov    QWORD PTR [r8+0x4b8],0x1
  0x00007f003f2b9c9d: jmp    0x00007f003f2b9dc4
  0x00007f003f2b9ca2: cmp    QWORD PTR [r8+0x4c0],0x0
  0x00007f003f2b9cad: jne    0x00007f003f2b9cc6
  0x00007f003f2b9caf: mov    QWORD PTR [r8+0x4c0],r9
  0x00007f003f2b9cb6: mov    QWORD PTR [r8+0x4c8],0x1
  0x00007f003f2b9cc1: jmp    0x00007f003f2b9dc4
  0x00007f003f2b9cc6: cmp    QWORD PTR [r8+0x4d0],0x0
  0x00007f003f2b9cd1: jne    0x00007f003f2b9cea
  0x00007f003f2b9cd3: mov    QWORD PTR [r8+0x4d0],r9
  0x00007f003f2b9cda: mov    QWORD PTR [r8+0x4d8],0x1
  0x00007f003f2b9ce5: jmp    0x00007f003f2b9dc4
  0x00007f003f2b9cea: cmp    QWORD PTR [r8+0x4e0],0x0
  0x00007f003f2b9cf5: jne    0x00007f003f2b9d0e
  0x00007f003f2b9cf7: mov    QWORD PTR [r8+0x4e0],r9
  0x00007f003f2b9cfe: mov    QWORD PTR [r8+0x4e8],0x1
  0x00007f003f2b9d09: jmp    0x00007f003f2b9dc4
  0x00007f003f2b9d0e: cmp    QWORD PTR [r8+0x4f0],0x0
  0x00007f003f2b9d19: jne    0x00007f003f2b9d32
  0x00007f003f2b9d1b: mov    QWORD PTR [r8+0x4f0],r9
  0x00007f003f2b9d22: mov    QWORD PTR [r8+0x4f8],0x1
  0x00007f003f2b9d2d: jmp    0x00007f003f2b9dc4
  0x00007f003f2b9d32: cmp    QWORD PTR [r8+0x500],0x0
  0x00007f003f2b9d3d: jne    0x00007f003f2b9d56
  0x00007f003f2b9d3f: mov    QWORD PTR [r8+0x500],r9
  0x00007f003f2b9d46: mov    QWORD PTR [r8+0x508],0x1
  0x00007f003f2b9d51: jmp    0x00007f003f2b9dc4
  0x00007f003f2b9d56: cmp    QWORD PTR [r8+0x510],0x0
  0x00007f003f2b9d61: jne    0x00007f003f2b9d7a
  0x00007f003f2b9d63: mov    QWORD PTR [r8+0x510],r9
  0x00007f003f2b9d6a: mov    QWORD PTR [r8+0x518],0x1
  0x00007f003f2b9d75: jmp    0x00007f003f2b9dc4
  0x00007f003f2b9d7a: cmp    QWORD PTR [r8+0x520],0x0
  0x00007f003f2b9d85: jne    0x00007f003f2b9d9e
  0x00007f003f2b9d87: mov    QWORD PTR [r8+0x520],r9
  0x00007f003f2b9d8e: mov    QWORD PTR [r8+0x528],0x1
  0x00007f003f2b9d99: jmp    0x00007f003f2b9dc4
  0x00007f003f2b9d9e: jmp    0x00007f003f2b9dc4
  0x00007f003f2b9da3: movabs r8,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b9dad: sub    QWORD PTR [r8+0x4a0],0x1
  0x00007f003f2b9db5: jmp    0x00007f003f2b9dbf
  0x00007f003f2b9dba: jmp    0x00007f003f2b9dc4
  0x00007f003f2b9dbf: xor    rdx,rdx
  0x00007f003f2b9dc2: jmp    0x00007f003f2b9dce
  0x00007f003f2b9dc4: movabs rdx,0x1            ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@106 (line 636)

  0x00007f003f2b9dce: cmp    edx,0x0
  0x00007f003f2b9dd1: movabs rdx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b9ddb: movabs rcx,0x538
  0x00007f003f2b9de5: je     0x00007f003f2b9df5
  0x00007f003f2b9deb: movabs rcx,0x548
  0x00007f003f2b9df5: mov    r8,QWORD PTR [rdx+rcx*1]
  0x00007f003f2b9df9: lea    r8,[r8+0x1]
  0x00007f003f2b9dfd: mov    QWORD PTR [rdx+rcx*1],r8
  0x00007f003f2b9e01: je     0x00007f003f2ba269  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@109 (line 636)

  0x00007f003f2b9e07: cmp    rdi,0x0
  0x00007f003f2b9e0b: jne    0x00007f003f2b9e26
  0x00007f003f2b9e0d: movabs rcx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b9e17: or     DWORD PTR [rcx+0x550],0x100
  0x00007f003f2b9e21: jmp    0x00007f003f2ba043
  0x00007f003f2b9e26: movabs r8,0x7c0031710     ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00007f003f2b9e30: mov    edx,DWORD PTR [rdi+0x8]
  0x00007f003f2b9e33: shl    rdx,0x3
  0x00007f003f2b9e37: cmp    r8,rdx
  0x00007f003f2b9e3a: jne    0x00007f003f2ba027
  0x00007f003f2b9e40: movabs rcx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2b9e4a: mov    r8d,DWORD PTR [rdi+0x8]
  0x00007f003f2b9e4e: shl    r8,0x3
  0x00007f003f2b9e52: cmp    r8,QWORD PTR [rcx+0x568]
  0x00007f003f2b9e59: jne    0x00007f003f2b9e68
  0x00007f003f2b9e5b: add    QWORD PTR [rcx+0x570],0x1
  0x00007f003f2b9e63: jmp    0x00007f003f2ba043
  0x00007f003f2b9e68: cmp    r8,QWORD PTR [rcx+0x578]
  0x00007f003f2b9e6f: jne    0x00007f003f2b9e7e
  0x00007f003f2b9e71: add    QWORD PTR [rcx+0x580],0x1
  0x00007f003f2b9e79: jmp    0x00007f003f2ba043
  0x00007f003f2b9e7e: cmp    r8,QWORD PTR [rcx+0x588]
  0x00007f003f2b9e85: jne    0x00007f003f2b9e94
  0x00007f003f2b9e87: add    QWORD PTR [rcx+0x590],0x1
  0x00007f003f2b9e8f: jmp    0x00007f003f2ba043
  0x00007f003f2b9e94: cmp    r8,QWORD PTR [rcx+0x598]
  0x00007f003f2b9e9b: jne    0x00007f003f2b9eaa
  0x00007f003f2b9e9d: add    QWORD PTR [rcx+0x5a0],0x1
  0x00007f003f2b9ea5: jmp    0x00007f003f2ba043
  0x00007f003f2b9eaa: cmp    r8,QWORD PTR [rcx+0x5a8]
  0x00007f003f2b9eb1: jne    0x00007f003f2b9ec0
  0x00007f003f2b9eb3: add    QWORD PTR [rcx+0x5b0],0x1
  0x00007f003f2b9ebb: jmp    0x00007f003f2ba043
  0x00007f003f2b9ec0: cmp    r8,QWORD PTR [rcx+0x5b8]
  0x00007f003f2b9ec7: jne    0x00007f003f2b9ed6
  0x00007f003f2b9ec9: add    QWORD PTR [rcx+0x5c0],0x1
  0x00007f003f2b9ed1: jmp    0x00007f003f2ba043
  0x00007f003f2b9ed6: cmp    r8,QWORD PTR [rcx+0x5c8]
  0x00007f003f2b9edd: jne    0x00007f003f2b9eec
  0x00007f003f2b9edf: add    QWORD PTR [rcx+0x5d0],0x1
  0x00007f003f2b9ee7: jmp    0x00007f003f2ba043
  0x00007f003f2b9eec: cmp    r8,QWORD PTR [rcx+0x5d8]
  0x00007f003f2b9ef3: jne    0x00007f003f2b9f02
  0x00007f003f2b9ef5: add    QWORD PTR [rcx+0x5e0],0x1
  0x00007f003f2b9efd: jmp    0x00007f003f2ba043
  0x00007f003f2b9f02: cmp    QWORD PTR [rcx+0x568],0x0
  0x00007f003f2b9f0d: jne    0x00007f003f2b9f26
  0x00007f003f2b9f0f: mov    QWORD PTR [rcx+0x568],r8
  0x00007f003f2b9f16: mov    QWORD PTR [rcx+0x570],0x1
  0x00007f003f2b9f21: jmp    0x00007f003f2ba043
  0x00007f003f2b9f26: cmp    QWORD PTR [rcx+0x578],0x0
  0x00007f003f2b9f31: jne    0x00007f003f2b9f4a
  0x00007f003f2b9f33: mov    QWORD PTR [rcx+0x578],r8
  0x00007f003f2b9f3a: mov    QWORD PTR [rcx+0x580],0x1
  0x00007f003f2b9f45: jmp    0x00007f003f2ba043
  0x00007f003f2b9f4a: cmp    QWORD PTR [rcx+0x588],0x0
  0x00007f003f2b9f55: jne    0x00007f003f2b9f6e
  0x00007f003f2b9f57: mov    QWORD PTR [rcx+0x588],r8
  0x00007f003f2b9f5e: mov    QWORD PTR [rcx+0x590],0x1
  0x00007f003f2b9f69: jmp    0x00007f003f2ba043
  0x00007f003f2b9f6e: cmp    QWORD PTR [rcx+0x598],0x0
  0x00007f003f2b9f79: jne    0x00007f003f2b9f92
  0x00007f003f2b9f7b: mov    QWORD PTR [rcx+0x598],r8
  0x00007f003f2b9f82: mov    QWORD PTR [rcx+0x5a0],0x1
  0x00007f003f2b9f8d: jmp    0x00007f003f2ba043
  0x00007f003f2b9f92: cmp    QWORD PTR [rcx+0x5a8],0x0
  0x00007f003f2b9f9d: jne    0x00007f003f2b9fb6
  0x00007f003f2b9f9f: mov    QWORD PTR [rcx+0x5a8],r8
  0x00007f003f2b9fa6: mov    QWORD PTR [rcx+0x5b0],0x1
  0x00007f003f2b9fb1: jmp    0x00007f003f2ba043
  0x00007f003f2b9fb6: cmp    QWORD PTR [rcx+0x5b8],0x0
  0x00007f003f2b9fc1: jne    0x00007f003f2b9fda
  0x00007f003f2b9fc3: mov    QWORD PTR [rcx+0x5b8],r8
  0x00007f003f2b9fca: mov    QWORD PTR [rcx+0x5c0],0x1
  0x00007f003f2b9fd5: jmp    0x00007f003f2ba043
  0x00007f003f2b9fda: cmp    QWORD PTR [rcx+0x5c8],0x0
  0x00007f003f2b9fe5: jne    0x00007f003f2b9ffe
  0x00007f003f2b9fe7: mov    QWORD PTR [rcx+0x5c8],r8
  0x00007f003f2b9fee: mov    QWORD PTR [rcx+0x5d0],0x1
  0x00007f003f2b9ff9: jmp    0x00007f003f2ba043
  0x00007f003f2b9ffe: cmp    QWORD PTR [rcx+0x5d8],0x0
  0x00007f003f2ba009: jne    0x00007f003f2ba022
  0x00007f003f2ba00b: mov    QWORD PTR [rcx+0x5d8],r8
  0x00007f003f2ba012: mov    QWORD PTR [rcx+0x5e0],0x1
  0x00007f003f2ba01d: jmp    0x00007f003f2ba043
  0x00007f003f2ba022: jmp    0x00007f003f2ba043
  0x00007f003f2ba027: movabs rcx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ba031: sub    QWORD PTR [rcx+0x558],0x1
  0x00007f003f2ba039: jmp    0x00007f003f2baf2a
  0x00007f003f2ba03e: jmp    0x00007f003f2ba043
  0x00007f003f2ba043: mov    rsi,rdi            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@114 (line 637)

  0x00007f003f2ba046: cmp    rax,QWORD PTR [rsi]  ; implicit exception: dispatches to 0x00007f003f2baf33
  0x00007f003f2ba049: mov    rdx,rsi
  0x00007f003f2ba04c: movabs rcx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ba056: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2ba059: shl    rdx,0x3
  0x00007f003f2ba05d: cmp    rdx,QWORD PTR [rcx+0x600]
  0x00007f003f2ba064: jne    0x00007f003f2ba073
  0x00007f003f2ba066: add    QWORD PTR [rcx+0x608],0x1
  0x00007f003f2ba06e: jmp    0x00007f003f2ba235
  0x00007f003f2ba073: cmp    rdx,QWORD PTR [rcx+0x610]
  0x00007f003f2ba07a: jne    0x00007f003f2ba089
  0x00007f003f2ba07c: add    QWORD PTR [rcx+0x618],0x1
  0x00007f003f2ba084: jmp    0x00007f003f2ba235
  0x00007f003f2ba089: cmp    rdx,QWORD PTR [rcx+0x620]
  0x00007f003f2ba090: jne    0x00007f003f2ba09f
  0x00007f003f2ba092: add    QWORD PTR [rcx+0x628],0x1
  0x00007f003f2ba09a: jmp    0x00007f003f2ba235
  0x00007f003f2ba09f: cmp    rdx,QWORD PTR [rcx+0x630]
  0x00007f003f2ba0a6: jne    0x00007f003f2ba0b5
  0x00007f003f2ba0a8: add    QWORD PTR [rcx+0x638],0x1
  0x00007f003f2ba0b0: jmp    0x00007f003f2ba235
  0x00007f003f2ba0b5: cmp    rdx,QWORD PTR [rcx+0x640]
  0x00007f003f2ba0bc: jne    0x00007f003f2ba0cb
  0x00007f003f2ba0be: add    QWORD PTR [rcx+0x648],0x1
  0x00007f003f2ba0c6: jmp    0x00007f003f2ba235
  0x00007f003f2ba0cb: cmp    rdx,QWORD PTR [rcx+0x650]
  0x00007f003f2ba0d2: jne    0x00007f003f2ba0e1
  0x00007f003f2ba0d4: add    QWORD PTR [rcx+0x658],0x1
  0x00007f003f2ba0dc: jmp    0x00007f003f2ba235
  0x00007f003f2ba0e1: cmp    rdx,QWORD PTR [rcx+0x660]
  0x00007f003f2ba0e8: jne    0x00007f003f2ba0f7
  0x00007f003f2ba0ea: add    QWORD PTR [rcx+0x668],0x1
  0x00007f003f2ba0f2: jmp    0x00007f003f2ba235
  0x00007f003f2ba0f7: cmp    rdx,QWORD PTR [rcx+0x670]
  0x00007f003f2ba0fe: jne    0x00007f003f2ba10d
  0x00007f003f2ba100: add    QWORD PTR [rcx+0x678],0x1
  0x00007f003f2ba108: jmp    0x00007f003f2ba235
  0x00007f003f2ba10d: cmp    QWORD PTR [rcx+0x600],0x0
  0x00007f003f2ba118: jne    0x00007f003f2ba131
  0x00007f003f2ba11a: mov    QWORD PTR [rcx+0x600],rdx
  0x00007f003f2ba121: mov    QWORD PTR [rcx+0x608],0x1
  0x00007f003f2ba12c: jmp    0x00007f003f2ba235
  0x00007f003f2ba131: cmp    QWORD PTR [rcx+0x610],0x0
  0x00007f003f2ba13c: jne    0x00007f003f2ba155
  0x00007f003f2ba13e: mov    QWORD PTR [rcx+0x610],rdx
  0x00007f003f2ba145: mov    QWORD PTR [rcx+0x618],0x1
  0x00007f003f2ba150: jmp    0x00007f003f2ba235
  0x00007f003f2ba155: cmp    QWORD PTR [rcx+0x620],0x0
  0x00007f003f2ba160: jne    0x00007f003f2ba179
  0x00007f003f2ba162: mov    QWORD PTR [rcx+0x620],rdx
  0x00007f003f2ba169: mov    QWORD PTR [rcx+0x628],0x1
  0x00007f003f2ba174: jmp    0x00007f003f2ba235
  0x00007f003f2ba179: cmp    QWORD PTR [rcx+0x630],0x0
  0x00007f003f2ba184: jne    0x00007f003f2ba19d
  0x00007f003f2ba186: mov    QWORD PTR [rcx+0x630],rdx
  0x00007f003f2ba18d: mov    QWORD PTR [rcx+0x638],0x1
  0x00007f003f2ba198: jmp    0x00007f003f2ba235
  0x00007f003f2ba19d: cmp    QWORD PTR [rcx+0x640],0x0
  0x00007f003f2ba1a8: jne    0x00007f003f2ba1c1
  0x00007f003f2ba1aa: mov    QWORD PTR [rcx+0x640],rdx
  0x00007f003f2ba1b1: mov    QWORD PTR [rcx+0x648],0x1
  0x00007f003f2ba1bc: jmp    0x00007f003f2ba235
  0x00007f003f2ba1c1: cmp    QWORD PTR [rcx+0x650],0x0
  0x00007f003f2ba1cc: jne    0x00007f003f2ba1e5
  0x00007f003f2ba1ce: mov    QWORD PTR [rcx+0x650],rdx
  0x00007f003f2ba1d5: mov    QWORD PTR [rcx+0x658],0x1
  0x00007f003f2ba1e0: jmp    0x00007f003f2ba235
  0x00007f003f2ba1e5: cmp    QWORD PTR [rcx+0x660],0x0
  0x00007f003f2ba1f0: jne    0x00007f003f2ba209
  0x00007f003f2ba1f2: mov    QWORD PTR [rcx+0x660],rdx
  0x00007f003f2ba1f9: mov    QWORD PTR [rcx+0x668],0x1
  0x00007f003f2ba204: jmp    0x00007f003f2ba235
  0x00007f003f2ba209: cmp    QWORD PTR [rcx+0x670],0x0
  0x00007f003f2ba214: jne    0x00007f003f2ba22d
  0x00007f003f2ba216: mov    QWORD PTR [rcx+0x670],rdx
  0x00007f003f2ba21d: mov    QWORD PTR [rcx+0x678],0x1
  0x00007f003f2ba228: jmp    0x00007f003f2ba235
  0x00007f003f2ba22d: add    QWORD PTR [rcx+0x5f0],0x1
  0x00007f003f2ba235: mov    rdx,QWORD PTR [rsp+0x48]
  0x00007f003f2ba23a: mov    rcx,QWORD PTR [rsp+0x68]
  0x00007f003f2ba23f: mov    r8d,DWORD PTR [rsp+0x40]
  0x00007f003f2ba244: mov    r9,QWORD PTR [rsp+0x50]
  0x00007f003f2ba249: mov    rdi,QWORD PTR [rsp+0x58]  ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123 (line 637)

  0x00007f003f2ba24e: nop
  0x00007f003f2ba24f: call   0x00007f003f1c4d60  ; OopMap{[72]=Oop [88]=Oop off=4180}
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123 (line 637)
                                                ;   {optimized virtual_call}
  0x00007f003f2ba254: movabs rdx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ba25e: inc    DWORD PTR [rdx+0x688]
  0x00007f003f2ba264: jmp    0x00007f003f2ba934  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@128 (line 637)

  0x00007f003f2ba269: mov    ebx,0x0            ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@134 (line 640)

  0x00007f003f2ba26e: xchg   ax,ax
  0x00007f003f2ba270: mov    DWORD PTR [rsp+0x78],ebx
  0x00007f003f2ba274: mov    rcx,QWORD PTR [rsp+0x50]
  0x00007f003f2ba279: mov    edx,DWORD PTR [rsp+0x40]
  0x00007f003f2ba27d: mov    eax,DWORD PTR [rdi+0x18]  ; implicit exception: dispatches to 0x00007f003f2baf38
  0x00007f003f2ba280: shl    rax,0x3            ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136 (line 640)

  0x00007f003f2ba284: mov    QWORD PTR [rsp+0x80],rax
  0x00007f003f2ba28c: cmp    rax,0x0
  0x00007f003f2ba290: movabs rsi,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ba29a: movabs r8,0x6a0
  0x00007f003f2ba2a4: jne    0x00007f003f2ba2b4
  0x00007f003f2ba2aa: movabs r8,0x6b0
  0x00007f003f2ba2b4: mov    r9,QWORD PTR [rsi+r8*1]
  0x00007f003f2ba2b8: lea    r9,[r9+0x1]
  0x00007f003f2ba2bc: mov    QWORD PTR [rsi+r8*1],r9
  0x00007f003f2ba2c0: je     0x00007f003f2ba642  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@142 (line 640)

  0x00007f003f2ba2c6: mov    esi,DWORD PTR [rax+0xc]  ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@177 (line 646)
                                                ; implicit exception: dispatches to 0x00007f003f2baf3d
  0x00007f003f2ba2c9: cmp    esi,edx
  0x00007f003f2ba2cb: movabs rsi,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ba2d5: movabs rdi,0x828
  0x00007f003f2ba2df: jne    0x00007f003f2ba2ef
  0x00007f003f2ba2e5: movabs rdi,0x838
  0x00007f003f2ba2ef: mov    r8,QWORD PTR [rsi+rdi*1]
  0x00007f003f2ba2f3: lea    r8,[r8+0x1]
  0x00007f003f2ba2f7: mov    QWORD PTR [rsi+rdi*1],r8
  0x00007f003f2ba2fb: jne    0x00007f003f2ba5bd  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@181 (line 646)

  0x00007f003f2ba301: mov    esi,DWORD PTR [rax+0x10]
  0x00007f003f2ba304: shl    rsi,0x3            ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@186 (line 646)

  0x00007f003f2ba308: cmp    rsi,rcx
  0x00007f003f2ba30b: movabs rdi,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ba315: movabs r8,0x848
  0x00007f003f2ba31f: je     0x00007f003f2ba32f
  0x00007f003f2ba325: movabs r8,0x858
  0x00007f003f2ba32f: mov    r9,QWORD PTR [rdi+r8*1]
  0x00007f003f2ba333: lea    r9,[r9+0x1]
  0x00007f003f2ba337: mov    QWORD PTR [rdi+r8*1],r9
  0x00007f003f2ba33b: je     0x00007f003f2ba618  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@193 (line 646)

  0x00007f003f2ba341: cmp    rcx,0x0
  0x00007f003f2ba345: movabs rdi,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ba34f: movabs r8,0x868
  0x00007f003f2ba359: je     0x00007f003f2ba369
  0x00007f003f2ba35f: movabs r8,0x878
  0x00007f003f2ba369: mov    r9,QWORD PTR [rdi+r8*1]
  0x00007f003f2ba36d: lea    r9,[r9+0x1]
  0x00007f003f2ba371: mov    QWORD PTR [rdi+r8*1],r9
  0x00007f003f2ba375: je     0x00007f003f2ba5bd  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@197 (line 646)

  0x00007f003f2ba37b: cmp    rax,QWORD PTR [rcx]  ; implicit exception: dispatches to 0x00007f003f2baf42
  0x00007f003f2ba37e: mov    rdi,rcx
  0x00007f003f2ba381: movabs r8,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ba38b: mov    edi,DWORD PTR [rdi+0x8]
  0x00007f003f2ba38e: shl    rdi,0x3
  0x00007f003f2ba392: cmp    rdi,QWORD PTR [r8+0x898]
  0x00007f003f2ba399: jne    0x00007f003f2ba3a8
  0x00007f003f2ba39b: add    QWORD PTR [r8+0x8a0],0x1
  0x00007f003f2ba3a3: jmp    0x00007f003f2ba56a
  0x00007f003f2ba3a8: cmp    rdi,QWORD PTR [r8+0x8a8]
  0x00007f003f2ba3af: jne    0x00007f003f2ba3be
  0x00007f003f2ba3b1: add    QWORD PTR [r8+0x8b0],0x1
  0x00007f003f2ba3b9: jmp    0x00007f003f2ba56a
  0x00007f003f2ba3be: cmp    rdi,QWORD PTR [r8+0x8b8]
  0x00007f003f2ba3c5: jne    0x00007f003f2ba3d4
  0x00007f003f2ba3c7: add    QWORD PTR [r8+0x8c0],0x1
  0x00007f003f2ba3cf: jmp    0x00007f003f2ba56a
  0x00007f003f2ba3d4: cmp    rdi,QWORD PTR [r8+0x8c8]
  0x00007f003f2ba3db: jne    0x00007f003f2ba3ea
  0x00007f003f2ba3dd: add    QWORD PTR [r8+0x8d0],0x1
  0x00007f003f2ba3e5: jmp    0x00007f003f2ba56a
  0x00007f003f2ba3ea: cmp    rdi,QWORD PTR [r8+0x8d8]
  0x00007f003f2ba3f1: jne    0x00007f003f2ba400
  0x00007f003f2ba3f3: add    QWORD PTR [r8+0x8e0],0x1
  0x00007f003f2ba3fb: jmp    0x00007f003f2ba56a
  0x00007f003f2ba400: cmp    rdi,QWORD PTR [r8+0x8e8]
  0x00007f003f2ba407: jne    0x00007f003f2ba416
  0x00007f003f2ba409: add    QWORD PTR [r8+0x8f0],0x1
  0x00007f003f2ba411: jmp    0x00007f003f2ba56a
  0x00007f003f2ba416: cmp    rdi,QWORD PTR [r8+0x8f8]
  0x00007f003f2ba41d: jne    0x00007f003f2ba42c
  0x00007f003f2ba41f: add    QWORD PTR [r8+0x900],0x1
  0x00007f003f2ba427: jmp    0x00007f003f2ba56a
  0x00007f003f2ba42c: cmp    rdi,QWORD PTR [r8+0x908]
  0x00007f003f2ba433: jne    0x00007f003f2ba442
  0x00007f003f2ba435: add    QWORD PTR [r8+0x910],0x1
  0x00007f003f2ba43d: jmp    0x00007f003f2ba56a
  0x00007f003f2ba442: cmp    QWORD PTR [r8+0x898],0x0
  0x00007f003f2ba44d: jne    0x00007f003f2ba466
  0x00007f003f2ba44f: mov    QWORD PTR [r8+0x898],rdi
  0x00007f003f2ba456: mov    QWORD PTR [r8+0x8a0],0x1
  0x00007f003f2ba461: jmp    0x00007f003f2ba56a
  0x00007f003f2ba466: cmp    QWORD PTR [r8+0x8a8],0x0
  0x00007f003f2ba471: jne    0x00007f003f2ba48a
  0x00007f003f2ba473: mov    QWORD PTR [r8+0x8a8],rdi
  0x00007f003f2ba47a: mov    QWORD PTR [r8+0x8b0],0x1
  0x00007f003f2ba485: jmp    0x00007f003f2ba56a
  0x00007f003f2ba48a: cmp    QWORD PTR [r8+0x8b8],0x0
  0x00007f003f2ba495: jne    0x00007f003f2ba4ae
  0x00007f003f2ba497: mov    QWORD PTR [r8+0x8b8],rdi
  0x00007f003f2ba49e: mov    QWORD PTR [r8+0x8c0],0x1
  0x00007f003f2ba4a9: jmp    0x00007f003f2ba56a
  0x00007f003f2ba4ae: cmp    QWORD PTR [r8+0x8c8],0x0
  0x00007f003f2ba4b9: jne    0x00007f003f2ba4d2
  0x00007f003f2ba4bb: mov    QWORD PTR [r8+0x8c8],rdi
  0x00007f003f2ba4c2: mov    QWORD PTR [r8+0x8d0],0x1
  0x00007f003f2ba4cd: jmp    0x00007f003f2ba56a
  0x00007f003f2ba4d2: cmp    QWORD PTR [r8+0x8d8],0x0
  0x00007f003f2ba4dd: jne    0x00007f003f2ba4f6
  0x00007f003f2ba4df: mov    QWORD PTR [r8+0x8d8],rdi
  0x00007f003f2ba4e6: mov    QWORD PTR [r8+0x8e0],0x1
  0x00007f003f2ba4f1: jmp    0x00007f003f2ba56a
  0x00007f003f2ba4f6: cmp    QWORD PTR [r8+0x8e8],0x0
  0x00007f003f2ba501: jne    0x00007f003f2ba51a
  0x00007f003f2ba503: mov    QWORD PTR [r8+0x8e8],rdi
  0x00007f003f2ba50a: mov    QWORD PTR [r8+0x8f0],0x1
  0x00007f003f2ba515: jmp    0x00007f003f2ba56a
  0x00007f003f2ba51a: cmp    QWORD PTR [r8+0x8f8],0x0
  0x00007f003f2ba525: jne    0x00007f003f2ba53e
  0x00007f003f2ba527: mov    QWORD PTR [r8+0x8f8],rdi
  0x00007f003f2ba52e: mov    QWORD PTR [r8+0x900],0x1
  0x00007f003f2ba539: jmp    0x00007f003f2ba56a
  0x00007f003f2ba53e: cmp    QWORD PTR [r8+0x908],0x0
  0x00007f003f2ba549: jne    0x00007f003f2ba562
  0x00007f003f2ba54b: mov    QWORD PTR [r8+0x908],rdi
  0x00007f003f2ba552: mov    QWORD PTR [r8+0x910],0x1
  0x00007f003f2ba55d: jmp    0x00007f003f2ba56a
  0x00007f003f2ba562: add    QWORD PTR [r8+0x888],0x1
  0x00007f003f2ba56a: mov    rdx,rsi
  0x00007f003f2ba56d: mov    rsi,rcx            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203 (line 647)

  0x00007f003f2ba570: nop
  0x00007f003f2ba571: nop
  0x00007f003f2ba572: nop
  0x00007f003f2ba573: nop
  0x00007f003f2ba574: nop
  0x00007f003f2ba575: movabs rax,0xffffffffffffffff
  0x00007f003f2ba57f: call   0x00007f003f1c4f60  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [128]=Oop [80]=Oop off=4996}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203 (line 647)
                                                ;   {virtual_call}
  0x00007f003f2ba584: cmp    eax,0x0
  0x00007f003f2ba587: movabs rdx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ba591: movabs rcx,0x920
  0x00007f003f2ba59b: je     0x00007f003f2ba5ab
  0x00007f003f2ba5a1: movabs rcx,0x930
  0x00007f003f2ba5ab: mov    r8,QWORD PTR [rdx+rcx*1]
  0x00007f003f2ba5af: lea    r8,[r8+0x1]
  0x00007f003f2ba5b3: mov    QWORD PTR [rdx+rcx*1],r8
  0x00007f003f2ba5b7: jne    0x00007f003f2ba625  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@206 (line 647)

  0x00007f003f2ba5bd: mov    ebx,DWORD PTR [rsp+0x78]
  0x00007f003f2ba5c1: inc    ebx
  0x00007f003f2ba5c3: movabs rdx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ba5cd: mov    ecx,DWORD PTR [rdx+0x100]
  0x00007f003f2ba5d3: add    ecx,0x8
  0x00007f003f2ba5d6: mov    DWORD PTR [rdx+0x100],ecx
  0x00007f003f2ba5dc: movabs rdx,0x7f003886d918  ;   {metadata({method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ba5e6: and    ecx,0xfff8
  0x00007f003f2ba5ec: cmp    ecx,0x0
  0x00007f003f2ba5ef: je     0x00007f003f2baf47  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [128]=Oop [80]=Oop off=5109}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 639)

  0x00007f003f2ba5f5: test   DWORD PTR [rip+0x1b107b05],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2ba5fb: movabs rdx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ba605: inc    DWORD PTR [rdx+0x958]
  0x00007f003f2ba60b: mov    rdi,QWORD PTR [rsp+0x80]
  0x00007f003f2ba613: jmp    0x00007f003f2ba270  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 639)

  0x00007f003f2ba618: mov    rax,QWORD PTR [rsp+0x80]
  0x00007f003f2ba620: jmp    0x00007f003f2ba934  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@222 (line 652)

  0x00007f003f2ba625: movabs rdx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ba62f: inc    DWORD PTR [rdx+0x940]
  0x00007f003f2ba635: mov    rax,QWORD PTR [rsp+0x80]
  0x00007f003f2ba63d: jmp    0x00007f003f2ba934  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@209 (line 648)

  0x00007f003f2ba642: mov    QWORD PTR [rsp+0x88],rdi
  0x00007f003f2ba64a: mov    rsi,QWORD PTR [rsp+0x48]
  0x00007f003f2ba64f: movabs rdx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ba659: mov    esi,DWORD PTR [rsi+0x8]
  0x00007f003f2ba65c: shl    rsi,0x3
  0x00007f003f2ba660: cmp    rsi,QWORD PTR [rdx+0x6d0]
  0x00007f003f2ba667: jne    0x00007f003f2ba676
  0x00007f003f2ba669: add    QWORD PTR [rdx+0x6d8],0x1
  0x00007f003f2ba671: jmp    0x00007f003f2ba838
  0x00007f003f2ba676: cmp    rsi,QWORD PTR [rdx+0x6e0]
  0x00007f003f2ba67d: jne    0x00007f003f2ba68c
  0x00007f003f2ba67f: add    QWORD PTR [rdx+0x6e8],0x1
  0x00007f003f2ba687: jmp    0x00007f003f2ba838
  0x00007f003f2ba68c: cmp    rsi,QWORD PTR [rdx+0x6f0]
  0x00007f003f2ba693: jne    0x00007f003f2ba6a2
  0x00007f003f2ba695: add    QWORD PTR [rdx+0x6f8],0x1
  0x00007f003f2ba69d: jmp    0x00007f003f2ba838
  0x00007f003f2ba6a2: cmp    rsi,QWORD PTR [rdx+0x700]
  0x00007f003f2ba6a9: jne    0x00007f003f2ba6b8
  0x00007f003f2ba6ab: add    QWORD PTR [rdx+0x708],0x1
  0x00007f003f2ba6b3: jmp    0x00007f003f2ba838
  0x00007f003f2ba6b8: cmp    rsi,QWORD PTR [rdx+0x710]
  0x00007f003f2ba6bf: jne    0x00007f003f2ba6ce
  0x00007f003f2ba6c1: add    QWORD PTR [rdx+0x718],0x1
  0x00007f003f2ba6c9: jmp    0x00007f003f2ba838
  0x00007f003f2ba6ce: cmp    rsi,QWORD PTR [rdx+0x720]
  0x00007f003f2ba6d5: jne    0x00007f003f2ba6e4
  0x00007f003f2ba6d7: add    QWORD PTR [rdx+0x728],0x1
  0x00007f003f2ba6df: jmp    0x00007f003f2ba838
  0x00007f003f2ba6e4: cmp    rsi,QWORD PTR [rdx+0x730]
  0x00007f003f2ba6eb: jne    0x00007f003f2ba6fa
  0x00007f003f2ba6ed: add    QWORD PTR [rdx+0x738],0x1
  0x00007f003f2ba6f5: jmp    0x00007f003f2ba838
  0x00007f003f2ba6fa: cmp    rsi,QWORD PTR [rdx+0x740]
  0x00007f003f2ba701: jne    0x00007f003f2ba710
  0x00007f003f2ba703: add    QWORD PTR [rdx+0x748],0x1
  0x00007f003f2ba70b: jmp    0x00007f003f2ba838
  0x00007f003f2ba710: cmp    QWORD PTR [rdx+0x6d0],0x0
  0x00007f003f2ba71b: jne    0x00007f003f2ba734
  0x00007f003f2ba71d: mov    QWORD PTR [rdx+0x6d0],rsi
  0x00007f003f2ba724: mov    QWORD PTR [rdx+0x6d8],0x1
  0x00007f003f2ba72f: jmp    0x00007f003f2ba838
  0x00007f003f2ba734: cmp    QWORD PTR [rdx+0x6e0],0x0
  0x00007f003f2ba73f: jne    0x00007f003f2ba758
  0x00007f003f2ba741: mov    QWORD PTR [rdx+0x6e0],rsi
  0x00007f003f2ba748: mov    QWORD PTR [rdx+0x6e8],0x1
  0x00007f003f2ba753: jmp    0x00007f003f2ba838
  0x00007f003f2ba758: cmp    QWORD PTR [rdx+0x6f0],0x0
  0x00007f003f2ba763: jne    0x00007f003f2ba77c
  0x00007f003f2ba765: mov    QWORD PTR [rdx+0x6f0],rsi
  0x00007f003f2ba76c: mov    QWORD PTR [rdx+0x6f8],0x1
  0x00007f003f2ba777: jmp    0x00007f003f2ba838
  0x00007f003f2ba77c: cmp    QWORD PTR [rdx+0x700],0x0
  0x00007f003f2ba787: jne    0x00007f003f2ba7a0
  0x00007f003f2ba789: mov    QWORD PTR [rdx+0x700],rsi
  0x00007f003f2ba790: mov    QWORD PTR [rdx+0x708],0x1
  0x00007f003f2ba79b: jmp    0x00007f003f2ba838
  0x00007f003f2ba7a0: cmp    QWORD PTR [rdx+0x710],0x0
  0x00007f003f2ba7ab: jne    0x00007f003f2ba7c4
  0x00007f003f2ba7ad: mov    QWORD PTR [rdx+0x710],rsi
  0x00007f003f2ba7b4: mov    QWORD PTR [rdx+0x718],0x1
  0x00007f003f2ba7bf: jmp    0x00007f003f2ba838
  0x00007f003f2ba7c4: cmp    QWORD PTR [rdx+0x720],0x0
  0x00007f003f2ba7cf: jne    0x00007f003f2ba7e8
  0x00007f003f2ba7d1: mov    QWORD PTR [rdx+0x720],rsi
  0x00007f003f2ba7d8: mov    QWORD PTR [rdx+0x728],0x1
  0x00007f003f2ba7e3: jmp    0x00007f003f2ba838
  0x00007f003f2ba7e8: cmp    QWORD PTR [rdx+0x730],0x0
  0x00007f003f2ba7f3: jne    0x00007f003f2ba80c
  0x00007f003f2ba7f5: mov    QWORD PTR [rdx+0x730],rsi
  0x00007f003f2ba7fc: mov    QWORD PTR [rdx+0x738],0x1
  0x00007f003f2ba807: jmp    0x00007f003f2ba838
  0x00007f003f2ba80c: cmp    QWORD PTR [rdx+0x740],0x0
  0x00007f003f2ba817: jne    0x00007f003f2ba830
  0x00007f003f2ba819: mov    QWORD PTR [rdx+0x740],rsi
  0x00007f003f2ba820: mov    QWORD PTR [rdx+0x748],0x1
  0x00007f003f2ba82b: jmp    0x00007f003f2ba838
  0x00007f003f2ba830: add    QWORD PTR [rdx+0x6c0],0x1
  0x00007f003f2ba838: mov    edx,DWORD PTR [rsp+0x40]
  0x00007f003f2ba83c: mov    r8,QWORD PTR [rsp+0x58]
  0x00007f003f2ba841: movabs r9,0x0             ;   {oop(NULL)}
  0x00007f003f2ba84b: mov    rsi,QWORD PTR [rsp+0x48]  ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@152 (line 641)

  0x00007f003f2ba850: nop
  0x00007f003f2ba851: nop
  0x00007f003f2ba852: nop
  0x00007f003f2ba853: nop
  0x00007f003f2ba854: nop
  0x00007f003f2ba855: movabs rax,0xffffffffffffffff
  0x00007f003f2ba85f: call   0x00007f003f1c4f60  ; OopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop off=5732}
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@152 (line 641)
                                                ;   {virtual_call}
  0x00007f003f2ba864: mov    rdi,QWORD PTR [rsp+0x88]
  0x00007f003f2ba86c: mov    r10,rax
  0x00007f003f2ba86f: shr    r10,0x3
  0x00007f003f2ba873: mov    DWORD PTR [rdi+0x18],r10d
  0x00007f003f2ba877: shr    rdi,0x9
  0x00007f003f2ba87b: movabs rdx,0x7f003ae7c000
  0x00007f003f2ba885: mov    BYTE PTR [rdi+rdx*1],0x0  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@155 (line 641)

  0x00007f003f2ba889: mov    ebx,DWORD PTR [rsp+0x78]
  0x00007f003f2ba88d: cmp    ebx,0x7
  0x00007f003f2ba890: movabs rdx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ba89a: movabs rcx,0x758
  0x00007f003f2ba8a4: jl     0x00007f003f2ba8b4
  0x00007f003f2ba8aa: movabs rcx,0x768
  0x00007f003f2ba8b4: mov    rsi,QWORD PTR [rdx+rcx*1]
  0x00007f003f2ba8b8: lea    rsi,[rsi+0x1]
  0x00007f003f2ba8bc: mov    QWORD PTR [rdx+rcx*1],rsi
  0x00007f003f2ba8c0: jge    0x00007f003f2ba8d3  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@162 (line 642)

  0x00007f003f2ba8c6: mov    rax,QWORD PTR [rsp+0x80]
  0x00007f003f2ba8ce: jmp    0x00007f003f2ba934  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@222 (line 652)

  0x00007f003f2ba8d3: mov    rbx,QWORD PTR [rsp+0x68]
  0x00007f003f2ba8d8: mov    ecx,DWORD PTR [rsp+0x40]
  0x00007f003f2ba8dc: mov    rsi,QWORD PTR [rsp+0x48]
  0x00007f003f2ba8e1: movabs rdx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ba8eb: add    QWORD PTR [rdx+0x778],0x1
  0x00007f003f2ba8f3: mov    rdx,rbx
  0x00007f003f2ba8f6: mov    rsi,QWORD PTR [rsp+0x48]  ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@169 (line 643)

  0x00007f003f2ba8fb: nop
  0x00007f003f2ba8fc: nop
  0x00007f003f2ba8fd: nop
  0x00007f003f2ba8fe: nop
  0x00007f003f2ba8ff: call   0x00007f003f1c4d60  ; OopMap{[72]=Oop [88]=Oop [128]=Oop off=5892}
                                                ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@169 (line 643)
                                                ;   {optimized virtual_call}
  0x00007f003f2ba904: movabs rdx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ba90e: inc    DWORD PTR [rdx+0x810]
  0x00007f003f2ba914: mov    rax,QWORD PTR [rsp+0x80]
  0x00007f003f2ba91c: jmp    0x00007f003f2ba934  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@172 (line 643)

  0x00007f003f2ba921: movabs rdx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ba92b: inc    DWORD PTR [rdx+0x488]
  0x00007f003f2ba931: mov    rax,rdi            ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@101 (line 635)

  0x00007f003f2ba934: cmp    rax,0x0
  0x00007f003f2ba938: movabs rdx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ba942: movabs rsi,0x970
  0x00007f003f2ba94c: je     0x00007f003f2ba95c
  0x00007f003f2ba952: movabs rsi,0x980
  0x00007f003f2ba95c: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2ba960: lea    rdi,[rdi+0x1]
  0x00007f003f2ba964: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2ba968: jne    0x00007f003f2ba9c7  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@224 (line 652)

  0x00007f003f2ba96e: mov    rsi,QWORD PTR [rsp+0x48]
  0x00007f003f2ba973: mov    edx,DWORD PTR [rsi+0x18]  ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@261 (line 660)

  0x00007f003f2ba976: inc    edx
  0x00007f003f2ba978: mov    DWORD PTR [rsi+0x18],edx  ;*putfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@266 (line 660)

  0x00007f003f2ba97b: mov    edx,DWORD PTR [rsi+0x14]  ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@271 (line 661)

  0x00007f003f2ba97e: inc    edx
  0x00007f003f2ba980: mov    DWORD PTR [rsi+0x14],edx  ;*putfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@277 (line 661)

  0x00007f003f2ba983: mov    edi,DWORD PTR [rsi+0x1c]  ;*getfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@281 (line 661)

  0x00007f003f2ba986: cmp    edx,edi
  0x00007f003f2ba988: movabs rdx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ba992: movabs rdi,0xa68
  0x00007f003f2ba99c: jle    0x00007f003f2ba9ac
  0x00007f003f2ba9a2: movabs rdi,0xa78
  0x00007f003f2ba9ac: mov    rbx,QWORD PTR [rdx+rdi*1]
  0x00007f003f2ba9b0: lea    rbx,[rbx+0x1]
  0x00007f003f2ba9b4: mov    QWORD PTR [rdx+rdi*1],rbx
  0x00007f003f2ba9b8: jg     0x00007f003f2bac93  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@284 (line 661)

  0x00007f003f2ba9be: mov    edi,DWORD PTR [rsp+0x60]
  0x00007f003f2ba9c2: jmp    0x00007f003f2bacbd  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@292 (line 663)

  0x00007f003f2ba9c7: mov    r9d,DWORD PTR [rsp+0x44]
  0x00007f003f2ba9cc: mov    rsi,QWORD PTR [rsp+0x48]
  0x00007f003f2ba9d1: mov    edi,DWORD PTR [rax+0x14]  ; implicit exception: dispatches to 0x00007f003f2baf5e
  0x00007f003f2ba9d4: shl    rdi,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@229 (line 653)

  0x00007f003f2ba9d8: cmp    r9d,0x0
  0x00007f003f2ba9dc: movabs rdx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2ba9e6: movabs rbx,0x990
  0x00007f003f2ba9f0: je     0x00007f003f2baa00
  0x00007f003f2ba9f6: movabs rbx,0x9a0
  0x00007f003f2baa00: mov    rcx,QWORD PTR [rdx+rbx*1]
  0x00007f003f2baa04: lea    rcx,[rcx+0x1]
  0x00007f003f2baa08: mov    QWORD PTR [rdx+rbx*1],rcx
  0x00007f003f2baa0c: je     0x00007f003f2baa4c  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@236 (line 654)

  0x00007f003f2baa12: cmp    rdi,0x0
  0x00007f003f2baa16: movabs rdx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2baa20: movabs rbx,0x9b0
  0x00007f003f2baa2a: jne    0x00007f003f2baa3a
  0x00007f003f2baa30: movabs rbx,0x9c0
  0x00007f003f2baa3a: mov    rcx,QWORD PTR [rdx+rbx*1]
  0x00007f003f2baa3e: lea    rcx,[rcx+0x1]
  0x00007f003f2baa42: mov    QWORD PTR [rdx+rbx*1],rcx
  0x00007f003f2baa46: jne    0x00007f003f2baa71  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@241 (line 654)

  0x00007f003f2baa4c: mov    r8,QWORD PTR [rsp+0x58]
  0x00007f003f2baa51: mov    r10,r8
  0x00007f003f2baa54: shr    r10,0x3
  0x00007f003f2baa58: mov    DWORD PTR [rax+0x14],r10d
  0x00007f003f2baa5c: mov    rdx,rax
  0x00007f003f2baa5f: shr    rdx,0x9
  0x00007f003f2baa63: movabs rbx,0x7f003ae7c000
  0x00007f003f2baa6d: mov    BYTE PTR [rdx+rbx*1],0x0  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@247 (line 655)

  0x00007f003f2baa71: mov    QWORD PTR [rsp+0x90],rdi
  0x00007f003f2baa79: mov    rdx,rsi
  0x00007f003f2baa7c: movabs rbx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2baa86: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2baa89: shl    rdx,0x3
  0x00007f003f2baa8d: cmp    rdx,QWORD PTR [rbx+0x9e0]
  0x00007f003f2baa94: jne    0x00007f003f2baaa3
  0x00007f003f2baa96: add    QWORD PTR [rbx+0x9e8],0x1
  0x00007f003f2baa9e: jmp    0x00007f003f2bac65
  0x00007f003f2baaa3: cmp    rdx,QWORD PTR [rbx+0x9f0]
  0x00007f003f2baaaa: jne    0x00007f003f2baab9
  0x00007f003f2baaac: add    QWORD PTR [rbx+0x9f8],0x1
  0x00007f003f2baab4: jmp    0x00007f003f2bac65
  0x00007f003f2baab9: cmp    rdx,QWORD PTR [rbx+0xa00]
  0x00007f003f2baac0: jne    0x00007f003f2baacf
  0x00007f003f2baac2: add    QWORD PTR [rbx+0xa08],0x1
  0x00007f003f2baaca: jmp    0x00007f003f2bac65
  0x00007f003f2baacf: cmp    rdx,QWORD PTR [rbx+0xa10]
  0x00007f003f2baad6: jne    0x00007f003f2baae5
  0x00007f003f2baad8: add    QWORD PTR [rbx+0xa18],0x1
  0x00007f003f2baae0: jmp    0x00007f003f2bac65
  0x00007f003f2baae5: cmp    rdx,QWORD PTR [rbx+0xa20]
  0x00007f003f2baaec: jne    0x00007f003f2baafb
  0x00007f003f2baaee: add    QWORD PTR [rbx+0xa28],0x1
  0x00007f003f2baaf6: jmp    0x00007f003f2bac65
  0x00007f003f2baafb: cmp    rdx,QWORD PTR [rbx+0xa30]
  0x00007f003f2bab02: jne    0x00007f003f2bab11
  0x00007f003f2bab04: add    QWORD PTR [rbx+0xa38],0x1
  0x00007f003f2bab0c: jmp    0x00007f003f2bac65
  0x00007f003f2bab11: cmp    rdx,QWORD PTR [rbx+0xa40]
  0x00007f003f2bab18: jne    0x00007f003f2bab27
  0x00007f003f2bab1a: add    QWORD PTR [rbx+0xa48],0x1
  0x00007f003f2bab22: jmp    0x00007f003f2bac65
  0x00007f003f2bab27: cmp    rdx,QWORD PTR [rbx+0xa50]
  0x00007f003f2bab2e: jne    0x00007f003f2bab3d
  0x00007f003f2bab30: add    QWORD PTR [rbx+0xa58],0x1
  0x00007f003f2bab38: jmp    0x00007f003f2bac65
  0x00007f003f2bab3d: cmp    QWORD PTR [rbx+0x9e0],0x0
  0x00007f003f2bab48: jne    0x00007f003f2bab61
  0x00007f003f2bab4a: mov    QWORD PTR [rbx+0x9e0],rdx
  0x00007f003f2bab51: mov    QWORD PTR [rbx+0x9e8],0x1
  0x00007f003f2bab5c: jmp    0x00007f003f2bac65
  0x00007f003f2bab61: cmp    QWORD PTR [rbx+0x9f0],0x0
  0x00007f003f2bab6c: jne    0x00007f003f2bab85
  0x00007f003f2bab6e: mov    QWORD PTR [rbx+0x9f0],rdx
  0x00007f003f2bab75: mov    QWORD PTR [rbx+0x9f8],0x1
  0x00007f003f2bab80: jmp    0x00007f003f2bac65
  0x00007f003f2bab85: cmp    QWORD PTR [rbx+0xa00],0x0
  0x00007f003f2bab90: jne    0x00007f003f2baba9
  0x00007f003f2bab92: mov    QWORD PTR [rbx+0xa00],rdx
  0x00007f003f2bab99: mov    QWORD PTR [rbx+0xa08],0x1
  0x00007f003f2baba4: jmp    0x00007f003f2bac65
  0x00007f003f2baba9: cmp    QWORD PTR [rbx+0xa10],0x0
  0x00007f003f2babb4: jne    0x00007f003f2babcd
  0x00007f003f2babb6: mov    QWORD PTR [rbx+0xa10],rdx
  0x00007f003f2babbd: mov    QWORD PTR [rbx+0xa18],0x1
  0x00007f003f2babc8: jmp    0x00007f003f2bac65
  0x00007f003f2babcd: cmp    QWORD PTR [rbx+0xa20],0x0
  0x00007f003f2babd8: jne    0x00007f003f2babf1
  0x00007f003f2babda: mov    QWORD PTR [rbx+0xa20],rdx
  0x00007f003f2babe1: mov    QWORD PTR [rbx+0xa28],0x1
  0x00007f003f2babec: jmp    0x00007f003f2bac65
  0x00007f003f2babf1: cmp    QWORD PTR [rbx+0xa30],0x0
  0x00007f003f2babfc: jne    0x00007f003f2bac15
  0x00007f003f2babfe: mov    QWORD PTR [rbx+0xa30],rdx
  0x00007f003f2bac05: mov    QWORD PTR [rbx+0xa38],0x1
  0x00007f003f2bac10: jmp    0x00007f003f2bac65
  0x00007f003f2bac15: cmp    QWORD PTR [rbx+0xa40],0x0
  0x00007f003f2bac20: jne    0x00007f003f2bac39
  0x00007f003f2bac22: mov    QWORD PTR [rbx+0xa40],rdx
  0x00007f003f2bac29: mov    QWORD PTR [rbx+0xa48],0x1
  0x00007f003f2bac34: jmp    0x00007f003f2bac65
  0x00007f003f2bac39: cmp    QWORD PTR [rbx+0xa50],0x0
  0x00007f003f2bac44: jne    0x00007f003f2bac5d
  0x00007f003f2bac46: mov    QWORD PTR [rbx+0xa50],rdx
  0x00007f003f2bac4d: mov    QWORD PTR [rbx+0xa58],0x1
  0x00007f003f2bac58: jmp    0x00007f003f2bac65
  0x00007f003f2bac5d: add    QWORD PTR [rbx+0x9d0],0x1
  0x00007f003f2bac65: mov    rdx,rax            ;*invokevirtual afterNodeAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@253 (line 656)

  0x00007f003f2bac68: nop
  0x00007f003f2bac69: nop
  0x00007f003f2bac6a: nop
  0x00007f003f2bac6b: nop
  0x00007f003f2bac6c: nop
  0x00007f003f2bac6d: movabs rax,0xffffffffffffffff
  0x00007f003f2bac77: call   0x00007f003f1c4f60  ; OopMap{[144]=Oop off=6780}
                                                ;*invokevirtual afterNodeAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@253 (line 656)
                                                ;   {virtual_call}
  0x00007f003f2bac7c: mov    rax,QWORD PTR [rsp+0x90]
  0x00007f003f2bac84: add    rsp,0xa0
  0x00007f003f2bac8b: pop    rbp
  0x00007f003f2bac8c: test   DWORD PTR [rip+0x1b10746e],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2bac92: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@258 (line 657)

  0x00007f003f2bac93: mov    rdi,rsi
  0x00007f003f2bac96: movabs rbx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2baca0: add    QWORD PTR [rbx+0xa88],0x1
  0x00007f003f2baca8: mov    rdi,rsi
  0x00007f003f2bacab: mov    rsi,rdi            ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@288 (line 662)

  0x00007f003f2bacae: nop
  0x00007f003f2bacaf: call   0x00007f003f1c4d60  ; OopMap{[72]=Oop off=6836}
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@288 (line 662)
                                                ;   {optimized virtual_call}
  0x00007f003f2bacb4: mov    edi,DWORD PTR [rsp+0x60]
  0x00007f003f2bacb8: mov    rsi,QWORD PTR [rsp+0x48]
  0x00007f003f2bacbd: mov    rdx,rsi
  0x00007f003f2bacc0: movabs rbx,0x7f0038a5fe48  ;   {metadata(method data for {method} {0x00007f003886d918} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bacca: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2baccd: shl    rdx,0x3
  0x00007f003f2bacd1: cmp    rdx,QWORD PTR [rbx+0xb30]
  0x00007f003f2bacd8: jne    0x00007f003f2bace7
  0x00007f003f2bacda: add    QWORD PTR [rbx+0xb38],0x1
  0x00007f003f2bace2: jmp    0x00007f003f2baea9
  0x00007f003f2bace7: cmp    rdx,QWORD PTR [rbx+0xb40]
  0x00007f003f2bacee: jne    0x00007f003f2bacfd
  0x00007f003f2bacf0: add    QWORD PTR [rbx+0xb48],0x1
  0x00007f003f2bacf8: jmp    0x00007f003f2baea9
  0x00007f003f2bacfd: cmp    rdx,QWORD PTR [rbx+0xb50]
  0x00007f003f2bad04: jne    0x00007f003f2bad13
  0x00007f003f2bad06: add    QWORD PTR [rbx+0xb58],0x1
  0x00007f003f2bad0e: jmp    0x00007f003f2baea9
  0x00007f003f2bad13: cmp    rdx,QWORD PTR [rbx+0xb60]
  0x00007f003f2bad1a: jne    0x00007f003f2bad29
  0x00007f003f2bad1c: add    QWORD PTR [rbx+0xb68],0x1
  0x00007f003f2bad24: jmp    0x00007f003f2baea9
  0x00007f003f2bad29: cmp    rdx,QWORD PTR [rbx+0xb70]
  0x00007f003f2bad30: jne    0x00007f003f2bad3f
  0x00007f003f2bad32: add    QWORD PTR [rbx+0xb78],0x1
  0x00007f003f2bad3a: jmp    0x00007f003f2baea9
  0x00007f003f2bad3f: cmp    rdx,QWORD PTR [rbx+0xb80]
  0x00007f003f2bad46: jne    0x00007f003f2bad55
  0x00007f003f2bad48: add    QWORD PTR [rbx+0xb88],0x1
  0x00007f003f2bad50: jmp    0x00007f003f2baea9
  0x00007f003f2bad55: cmp    rdx,QWORD PTR [rbx+0xb90]
  0x00007f003f2bad5c: jne    0x00007f003f2bad6b
  0x00007f003f2bad5e: add    QWORD PTR [rbx+0xb98],0x1
  0x00007f003f2bad66: jmp    0x00007f003f2baea9
  0x00007f003f2bad6b: cmp    rdx,QWORD PTR [rbx+0xba0]
  0x00007f003f2bad72: jne    0x00007f003f2bad81
  0x00007f003f2bad74: add    QWORD PTR [rbx+0xba8],0x1
  0x00007f003f2bad7c: jmp    0x00007f003f2baea9
  0x00007f003f2bad81: cmp    QWORD PTR [rbx+0xb30],0x0
  0x00007f003f2bad8c: jne    0x00007f003f2bada5
  0x00007f003f2bad8e: mov    QWORD PTR [rbx+0xb30],rdx
  0x00007f003f2bad95: mov    QWORD PTR [rbx+0xb38],0x1
  0x00007f003f2bada0: jmp    0x00007f003f2baea9
  0x00007f003f2bada5: cmp    QWORD PTR [rbx+0xb40],0x0
  0x00007f003f2badb0: jne    0x00007f003f2badc9
  0x00007f003f2badb2: mov    QWORD PTR [rbx+0xb40],rdx
  0x00007f003f2badb9: mov    QWORD PTR [rbx+0xb48],0x1
  0x00007f003f2badc4: jmp    0x00007f003f2baea9
  0x00007f003f2badc9: cmp    QWORD PTR [rbx+0xb50],0x0
  0x00007f003f2badd4: jne    0x00007f003f2baded
  0x00007f003f2badd6: mov    QWORD PTR [rbx+0xb50],rdx
  0x00007f003f2baddd: mov    QWORD PTR [rbx+0xb58],0x1
  0x00007f003f2bade8: jmp    0x00007f003f2baea9
  0x00007f003f2baded: cmp    QWORD PTR [rbx+0xb60],0x0
  0x00007f003f2badf8: jne    0x00007f003f2bae11
  0x00007f003f2badfa: mov    QWORD PTR [rbx+0xb60],rdx
  0x00007f003f2bae01: mov    QWORD PTR [rbx+0xb68],0x1
  0x00007f003f2bae0c: jmp    0x00007f003f2baea9
  0x00007f003f2bae11: cmp    QWORD PTR [rbx+0xb70],0x0
  0x00007f003f2bae1c: jne    0x00007f003f2bae35
  0x00007f003f2bae1e: mov    QWORD PTR [rbx+0xb70],rdx
  0x00007f003f2bae25: mov    QWORD PTR [rbx+0xb78],0x1
  0x00007f003f2bae30: jmp    0x00007f003f2baea9
  0x00007f003f2bae35: cmp    QWORD PTR [rbx+0xb80],0x0
  0x00007f003f2bae40: jne    0x00007f003f2bae59
  0x00007f003f2bae42: mov    QWORD PTR [rbx+0xb80],rdx
  0x00007f003f2bae49: mov    QWORD PTR [rbx+0xb88],0x1
  0x00007f003f2bae54: jmp    0x00007f003f2baea9
  0x00007f003f2bae59: cmp    QWORD PTR [rbx+0xb90],0x0
  0x00007f003f2bae64: jne    0x00007f003f2bae7d
  0x00007f003f2bae66: mov    QWORD PTR [rbx+0xb90],rdx
  0x00007f003f2bae6d: mov    QWORD PTR [rbx+0xb98],0x1
  0x00007f003f2bae78: jmp    0x00007f003f2baea9
  0x00007f003f2bae7d: cmp    QWORD PTR [rbx+0xba0],0x0
  0x00007f003f2bae88: jne    0x00007f003f2baea1
  0x00007f003f2bae8a: mov    QWORD PTR [rbx+0xba0],rdx
  0x00007f003f2bae91: mov    QWORD PTR [rbx+0xba8],0x1
  0x00007f003f2bae9c: jmp    0x00007f003f2baea9
  0x00007f003f2baea1: add    QWORD PTR [rbx+0xb20],0x1
  0x00007f003f2baea9: mov    rdx,rdi            ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295 (line 663)

  0x00007f003f2baeac: nop
  0x00007f003f2baead: movabs rax,0xffffffffffffffff
  0x00007f003f2baeb7: call   0x00007f003f1c4f60  ; OopMap{off=7356}
                                                ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295 (line 663)
                                                ;   {virtual_call}
  0x00007f003f2baebc: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f2baec6: add    rsp,0xa0
  0x00007f003f2baecd: pop    rbp
  0x00007f003f2baece: test   DWORD PTR [rip+0x1b10722c],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2baed4: ret    
  0x00007f003f2baed5: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2baeda: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2baee2: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop off=7399}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1 (line 627)
                                                ;   {runtime_call}
  0x00007f003f2baee7: jmp    0x00007f003f2b926f
  0x00007f003f2baeec: call   0x00007f003f279000  ; OopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop rbx=Oop off=7409}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@12 (line 627)
                                                ;   {runtime_call}
  0x00007f003f2baef1: call   0x00007f003f279000  ; OopMap{[72]=Oop [88]=Oop [80]=Oop rdx=Oop off=7414}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26 (line 628)
                                                ;   {runtime_call}
  0x00007f003f2baef6: call   0x00007f003f279000  ; OopMap{[72]=Oop [88]=Oop [80]=Oop rbx=Oop off=7419}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 629)
                                                ;   {runtime_call}
  0x00007f003f2baefb: call   0x00007f003f279000  ; OopMap{[72]=Oop [88]=Oop [80]=Oop rbx=Oop off=7424}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 629)
                                                ;   {runtime_call}
  0x00007f003f2baf00: mov    QWORD PTR [rsp],rax
  0x00007f003f2baf04: call   0x00007f003f278940  ; OopMap{[72]=Oop [88]=Oop [80]=Oop rbx=Oop off=7433}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 629)
                                                ;   {runtime_call}
  0x00007f003f2baf09: mov    QWORD PTR [rsp],rdx
  0x00007f003f2baf0d: call   0x00007f003f278940  ; OopMap{[72]=Oop rax=Oop rbx=Oop off=7442}
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 630)
                                                ;   {runtime_call}
  0x00007f003f2baf12: call   0x00007f003f279000  ; OopMap{[72]=Oop rax=Oop off=7447}
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 630)
                                                ;   {runtime_call}
  0x00007f003f2baf17: mov    QWORD PTR [rsp],rax
  0x00007f003f2baf1b: call   0x00007f003f27b080  ; OopMap{[72]=Oop rax=Oop off=7456}
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 630)
                                                ;   {runtime_call}
  0x00007f003f2baf20: call   0x00007f003f279000  ; OopMap{[72]=Oop rdi=Oop [88]=Oop [80]=Oop rbx=Oop off=7461}
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@65 (line 633)
                                                ;   {runtime_call}
  0x00007f003f2baf25: call   0x00007f003f279000  ; OopMap{[72]=Oop [88]=Oop rcx=Oop [80]=Oop [104]=Oop [112]=Oop rdx=Oop off=7466}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91 (line 634)
                                                ;   {runtime_call}
  0x00007f003f2baf2a: mov    QWORD PTR [rsp],rdi
  0x00007f003f2baf2e: call   0x00007f003f27b2c0  ; OopMap{[72]=Oop [88]=Oop [80]=Oop [104]=Oop off=7475}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@114 (line 637)
                                                ;   {runtime_call}
  0x00007f003f2baf33: call   0x00007f003f279000  ; OopMap{[72]=Oop [88]=Oop [80]=Oop [104]=Oop rsi=Oop off=7480}
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123 (line 637)
                                                ;   {runtime_call}
  0x00007f003f2baf38: call   0x00007f003f279000  ; OopMap{[72]=Oop [88]=Oop [104]=Oop rdi=Oop rcx=Oop [80]=Oop off=7485}
                                                ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136 (line 640)
                                                ;   {runtime_call}
  0x00007f003f2baf3d: call   0x00007f003f279000  ; OopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop rax=Oop [128]=Oop off=7490}
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@177 (line 646)
                                                ;   {runtime_call}
  0x00007f003f2baf42: call   0x00007f003f279000  ; OopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop [128]=Oop rsi=Oop off=7495}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203 (line 647)
                                                ;   {runtime_call}
  0x00007f003f2baf47: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2baf4c: mov    QWORD PTR [rsp],0xdb
  0x00007f003f2baf54: call   0x00007f003f27d5e0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [128]=Oop [80]=Oop off=7513}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 639)
                                                ;   {runtime_call}
  0x00007f003f2baf59: jmp    0x00007f003f2ba5f5
  0x00007f003f2baf5e: call   0x00007f003f279000  ; OopMap{rsi=Oop [72]=Oop [88]=Oop rax=Oop off=7523}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@229 (line 653)
                                                ;   {runtime_call}
  0x00007f003f2baf63: nop
  0x00007f003f2baf64: nop
  0x00007f003f2baf65: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2baf6c: movabs r10,0x0
  0x00007f003f2baf76: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2baf7d: movabs r10,0x0
  0x00007f003f2baf87: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2baf8e: add    rsp,0xa0
  0x00007f003f2baf95: pop    rbp
  0x00007f003f2baf96: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2baf9b: hlt    
  0x00007f003f2baf9c: hlt    
  0x00007f003f2baf9d: hlt    
  0x00007f003f2baf9e: hlt    
  0x00007f003f2baf9f: hlt    
[Stub Code]
  0x00007f003f2bafa0: nop                       ;   {no_reloc}
  0x00007f003f2bafa1: nop
  0x00007f003f2bafa2: nop
  0x00007f003f2bafa3: nop
  0x00007f003f2bafa4: nop
  0x00007f003f2bafa5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2bafaf: jmp    0x00007f003f2bafaf  ;   {runtime_call}
  0x00007f003f2bafb4: nop
  0x00007f003f2bafb5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2bafbf: jmp    0x00007f003f2bafbf  ;   {runtime_call}
  0x00007f003f2bafc4: nop
  0x00007f003f2bafc5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2bafcf: jmp    0x00007f003f2bafcf  ;   {runtime_call}
  0x00007f003f2bafd4: nop
  0x00007f003f2bafd5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2bafdf: jmp    0x00007f003f2bafdf  ;   {runtime_call}
  0x00007f003f2bafe4: nop
  0x00007f003f2bafe5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2bafef: jmp    0x00007f003f2bafef  ;   {runtime_call}
  0x00007f003f2baff4: nop
  0x00007f003f2baff5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2bafff: jmp    0x00007f003f2bafff  ;   {runtime_call}
  0x00007f003f2bb004: nop
  0x00007f003f2bb005: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2bb00f: jmp    0x00007f003f2bb00f  ;   {runtime_call}
  0x00007f003f2bb014: nop
  0x00007f003f2bb015: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2bb01f: jmp    0x00007f003f2bb01f  ;   {runtime_call}
  0x00007f003f2bb024: nop
  0x00007f003f2bb025: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2bb02f: jmp    0x00007f003f2bb02f  ;   {runtime_call}
  0x00007f003f2bb034: nop
  0x00007f003f2bb035: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2bb03f: jmp    0x00007f003f2bb03f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2bb044: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2bb049: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2bb04e: sub    rsp,0x80
  0x00007f003f2bb055: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2bb05a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2bb05f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2bb064: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2bb069: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2bb06e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2bb073: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2bb078: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2bb07d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2bb082: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2bb087: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2bb08c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2bb091: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2bb096: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2bb09b: mov    QWORD PTR [rsp],r15
  0x00007f003f2bb09f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2bb0a9: movabs rsi,0x7f003f2bb049  ;   {internal_word}
  0x00007f003f2bb0b3: mov    rdx,rsp
  0x00007f003f2bb0b6: and    rsp,0xfffffffffffffff0
  0x00007f003f2bb0ba: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2bb0bf: hlt    
[Deopt Handler Code]
  0x00007f003f2bb0c0: movabs r10,0x7f003f2bb0c0  ;   {section_word}
  0x00007f003f2bb0ca: push   r10
  0x00007f003f2bb0cc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2bb0d1: hlt    
  0x00007f003f2bb0d2: hlt    
  0x00007f003f2bb0d3: hlt    
  0x00007f003f2bb0d4: hlt    
  0x00007f003f2bb0d5: hlt    
  0x00007f003f2bb0d6: hlt    
  0x00007f003f2bb0d7: hlt    
<nmethod compile_id='94' compiler='C1' level='3' entry='0x00007f003f2b9200' size='11104' address='0x00007f003f2b8f90' relocation_offset='312' insts_offset='624' stub_offset='8208' scopes_data_offset='8528' scopes_pcs_offset='9456' dependencies_offset='10992' nul_chk_table_offset='11000' metadata_offset='8520' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='1533' backedge_count='74' iicount='1533' stamp='0.443'/>
<writer thread='139637818533632'/>
<task_queued compile_id='99' method='java/lang/Integer intValue ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.443' comment='tiered' hot_count='128'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/HashMap$Node.&lt;init&gt;  [0x00007f003f2bbc80, 0x00007f003f2bbe70]  496 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038872650} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap$Node&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2bbc80: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2bbc84: shl    r10,0x3
  0x00007f003f2bbc88: cmp    r10,rax
  0x00007f003f2bbc8b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2bbc91: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2bbc9c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2bbca0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2bbca7: push   rbp
  0x00007f003f2bbca8: sub    rsp,0x30
  0x00007f003f2bbcac: movabs rdi,0x7f0038a66958  ;   {metadata(method data for {method} {0x00007f0038872650} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00007f003f2bbcb6: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2bbcbc: add    ebx,0x8
  0x00007f003f2bbcbf: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2bbcc5: movabs rdi,0x7f0038872650  ;   {metadata({method} {0x00007f0038872650} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00007f003f2bbccf: and    ebx,0x1ff8
  0x00007f003f2bbcd5: cmp    ebx,0x0
  0x00007f003f2bbcd8: je     0x00007f003f2bbd7d  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@0 (line 284)

  0x00007f003f2bbcde: mov    rdi,rsi
  0x00007f003f2bbce1: movabs rbx,0x7f0038a66958  ;   {metadata(method data for {method} {0x00007f0038872650} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00007f003f2bbceb: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f2bbcf3: movabs rdi,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2bbcfd: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2bbd03: add    ebx,0x8
  0x00007f003f2bbd06: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2bbd0c: movabs rdi,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2bbd16: and    ebx,0x7ffff8
  0x00007f003f2bbd1c: cmp    ebx,0x0
  0x00007f003f2bbd1f: je     0x00007f003f2bbd94
  0x00007f003f2bbd25: mov    DWORD PTR [rsi+0xc],edx  ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 285)

  0x00007f003f2bbd28: mov    r10,rcx
  0x00007f003f2bbd2b: shr    r10,0x3
  0x00007f003f2bbd2f: mov    DWORD PTR [rsi+0x10],r10d
  0x00007f003f2bbd33: mov    rdi,rsi
  0x00007f003f2bbd36: shr    rdi,0x9
  0x00007f003f2bbd3a: movabs rbx,0x7f003ae7c000
  0x00007f003f2bbd44: mov    BYTE PTR [rdi+rbx*1],0x0  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 286)

  0x00007f003f2bbd48: mov    r10,r8
  0x00007f003f2bbd4b: shr    r10,0x3
  0x00007f003f2bbd4f: mov    DWORD PTR [rsi+0x14],r10d
  0x00007f003f2bbd53: mov    rdi,rsi
  0x00007f003f2bbd56: shr    rdi,0x9
  0x00007f003f2bbd5a: mov    BYTE PTR [rdi+rbx*1],0x0  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 287)

  0x00007f003f2bbd5e: mov    r10,r9
  0x00007f003f2bbd61: shr    r10,0x3
  0x00007f003f2bbd65: mov    DWORD PTR [rsi+0x18],r10d
  0x00007f003f2bbd69: shr    rsi,0x9
  0x00007f003f2bbd6d: mov    BYTE PTR [rsi+rbx*1],0x0  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 288)

  0x00007f003f2bbd71: add    rsp,0x30
  0x00007f003f2bbd75: pop    rbp
  0x00007f003f2bbd76: test   DWORD PTR [rip+0x1b106384],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2bbd7c: ret    
  0x00007f003f2bbd7d: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2bbd82: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2bbd8a: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop off=271}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 284)
                                                ;   {runtime_call}
  0x00007f003f2bbd8f: jmp    0x00007f003f2bbcde
  0x00007f003f2bbd94: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2bbd99: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2bbda1: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop off=294}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 284)
                                                ;   {runtime_call}
  0x00007f003f2bbda6: jmp    0x00007f003f2bbd25
  0x00007f003f2bbdab: nop
  0x00007f003f2bbdac: nop
  0x00007f003f2bbdad: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2bbdb4: movabs r10,0x0
  0x00007f003f2bbdbe: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2bbdc5: movabs r10,0x0
  0x00007f003f2bbdcf: 
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.HotSpotJVMCIBackendFactory from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2bbdd6: add    rsp,0x30
  0x00007f003f2bbdda: pop    rbp
  0x00007f003f2bbddb: jmp    0x00007f003f2785a0  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x00007f003f2bbde0: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2bbde5: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2bbdea: sub    rsp,0x80
  0x00007f003f2bbdf1: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2bbdf6: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2bbdfb: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2bbe00: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2bbe05: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2bbe0a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2bbe0f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2bbe14: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2bbe19: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2bbe1e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2bbe23: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2bbe28: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2bbe2d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2bbe32: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2bbe37: mov    QWORD PTR [rsp],r15
  0x00007f003f2bbe3b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2bbe45: movabs rsi,0x7f003f2bbde5  ;   {internal_word}
  0x00007f003f2bbe4f: mov    rdx,rsp
  0x00007f003f2bbe52: and    rsp,0xfffffffffffffff0
  0x00007f003f2bbe56: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2bbe5b: hlt    
[Deopt Handler Code]
  0x00007f003f2bbe5c: movabs r10,0x7f003f2bbe5c  ;   {section_word}
  0x00007f003f2bbe66: push   r10
  0x00007f003f2bbe68: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2bbe6d: hlt    
  0x00007f003f2bbe6e: hlt    
  0x00007f003f2bbe6f: hlt    
<nmethod compile_id='95' compiler='C1' level='3' entry='0x00007f003f2bbc80' size='1112' address='0x00007f003f2bbb10' relocation_offset='312' insts_offset='368' stub_offset='720' scopes_data_offset='888' scopes_pcs_offset='960' dependencies_offset='1104' metadata_offset='864' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='1467' iicount='1467' stamp='0.444'/>
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.services.Services from /home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci-services.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/HashMap.newNode  [0x00007f003f2bc120, 0x00007f003f2bc3d0]  688 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003886fd30} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = int
  # parm1: 
<writer thread='139637818533632'/>
[Loaded java.util.HashMap$EntrySet from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
   rcx:rcx              = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x70]  (sp of caller)
  0x00007f003f2bc120: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2bc124: shl    r10,0x3
  0x00007f003f2bc128: cmp    r10,rax
  0x00007f003f2bc12b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2bc131: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2bc13c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2bc140: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2bc147: push   rbp
  0x00007f003f2bc148: sub    rsp,0x60
  0x00007f003f2bc14c: mov    rbx,rdx
  0x00007f003f2bc14f: mov    r11,rcx
  0x00007f003f2bc152: movabs rdx,0x7f0038a66ae8  ;   {metadata(method data for {method} {0x00007f003886fd30} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bc15c: mov    edi,DWORD PTR [rdx+0xfc]
  0x00007f003f2bc162: add    edi,0x8
  0x00007f003f2bc165: mov    DWORD PTR [rdx+0xfc],edi
  0x00007f003f2bc16b: movabs rdx,0x7f003886fd30  ;   {metadata({method} {0x00007f003886fd30} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bc175: and    edi,0x1ff8
  0x00007f003f2bc17b: cmp    edi,0x0
  0x00007f003f2bc17e: je     0x00007f003f2bc2b2
  0x00007f003f2bc184: movabs rdx,0x7c001b798    ;   {metadata(&apos;java/util/HashMap$Node&apos;)}
  0x00007f003f2bc18e: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2bc192: lea    rdi,[rax+0x20]
  0x00007f003f2bc196: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2bc19a: ja     0x00007f003f2bc2c9
  0x00007f003f2bc1a0: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2bc1a4: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2bc1ab: mov    QWORD PTR [rax],rcx
  0x00007f003f2bc1ae: mov    rcx,rdx
  0x00007f003f2bc1b1: shr    rcx,0x3
  0x00007f003f2bc1b5: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2bc1b8: xor    rcx,rcx
  0x00007f003f2bc1bb: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2bc1be: xor    rcx,rcx
  0x00007f003f2bc1c1: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f2bc1c5: mov    QWORD PTR [rax+0x18],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0 (line 1742)

  0x00007f003f2bc1c9: mov    rsi,rax
  0x00007f003f2bc1cc: movabs rdi,0x7f0038a66ae8  ;   {metadata(method data for {method} {0x00007f003886fd30} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bc1d6: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f2bc1de: movabs rsi,0x7f0038a66958  ;   {metadata(method data for {method} {0x00007f0038872650} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00007f003f2bc1e8: mov    edi,DWORD PTR [rsi+0xfc]
  0x00007f003f2bc1ee: add    edi,0x8
  0x00007f003f2bc1f1: mov    DWORD PTR [rsi+0xfc],edi
  0x00007f003f2bc1f7: movabs rsi,0x7f0038872650  ;   {metadata({method} {0x00007f0038872650} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00007f003f2bc201: and    edi,0x7ffff8
  0x00007f003f2bc207: cmp    edi,0x0
  0x00007f003f2bc20a: je     0x00007f003f2bc2d6
  0x00007f003f2bc210: mov    rsi,rax
  0x00007f003f2bc213: movabs rdi,0x7f0038a66958  ;   {metadata(method data for {method} {0x00007f0038872650} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00007f003f2bc21d: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f2bc225: movabs rsi,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2bc22f: mov    edi,DWORD PTR [rsi+0xfc]
  0x00007f003f2bc235: add    edi,0x8
  0x00007f003f2bc238: mov    DWORD PTR [rsi+0xfc],edi
  0x00007f003f2bc23e: movabs rsi,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2bc248: and    edi,0x7ffff8
  0x00007f003f2bc24e: cmp    edi,0x0
  0x00007f003f2bc251: je     0x00007f003f2bc2ed
  0x00007f003f2bc257: mov    DWORD PTR [rax+0xc],ebx  ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 285)
                                                ; - java.util.HashMap::newNode@9 (line 1742)

  0x00007f003f2bc25a: mov    r10,r11
  0x00007f003f2bc25d: shr    r10,0x3
  0x00007f003f2bc261: mov    DWORD PTR [rax+0x10],r10d
  0x00007f003f2bc265: mov    rsi,rax
  0x00007f003f2bc268: shr    rsi,0x9
  0x00007f003f2bc26c: movabs rdi,0x7f003ae7c000
  0x00007f003f2bc276: mov    BYTE PTR [rsi+rdi*1],0x0  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 286)
                                                ; - java.util.HashMap::newNode@9 (line 1742)

  0x00007f003f2bc27a: mov    r10,r8
  0x00007f003f2bc27d: shr    r10,0x3
  0x00007f003f2bc281: mov    DWORD PTR [rax+0x14],r10d
  0x00007f003f2bc285: mov    rsi,rax
  0x00007f003f2bc288: shr    rsi,0x9
  0x00007f003f2bc28c: mov    BYTE PTR [rsi+rdi*1],0x0  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1742)

  0x00007f003f2bc290: mov    r10,r9
  0x00007f003f2bc293: shr    r10,0x3
  0x00007f003f2bc297: mov    DWORD PTR [rax+0x18],r10d
  0x00007f003f2bc29b: mov    rsi,rax
  0x00007f003f2bc29e: shr    rsi,0x9
  0x00007f003f2bc2a2: mov    BYTE PTR [rsi+rdi*1],0x0  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1742)

  0x00007f003f2bc2a6: add    rsp,0x60
  0x00007f003f2bc2aa: pop    rbp
  0x00007f003f2bc2ab: test   DWORD PTR [rip+0x1b105e4f],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2bc2b1: ret    
  0x00007f003f2bc2b2: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2bc2b7: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2bc2bf: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop r11=Oop r8=Oop r9=Oop off=420}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::newNode@-1 (line 1742)
                                                ;   {runtime_call}
  0x00007f003f2bc2c4: jmp    0x00007f003f2bc184
  0x00007f003f2bc2c9: mov    rdx,rdx
  0x00007f003f2bc2cc: call   0x00007f003f279760  ; OopMap{r11=Oop r8=Oop r9=Oop off=433}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0 (line 1742)
                                                ;   {runtime_call}
  0x00007f003f2bc2d1: jmp    0x00007f003f2bc1c9
  0x00007f003f2bc2d6: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2bc2db: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2bc2e3: call   0x00007f003f27d5e0  ; OopMap{r11=Oop r8=Oop r9=Oop rax=Oop off=456}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 284)
                                                ; - java.util.HashMap::newNode@9 (line 1742)
                                                ;   {runtime_call}
  0x00007f003f2bc2e8: jmp    0x00007f003f2bc210
  0x00007f003f2bc2ed: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2bc2f2: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2bc2fa: call   0x00007f003f27d5e0  ; OopMap{r11=Oop r8=Oop r9=Oop rax=Oop off=479}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 284)
                                                ; - java.util.HashMap::newNode@9 (line 1742)
                                                ;   {runtime_call}
  0x00007f003f2bc2ff: jmp    0x00007f003f2bc257
  0x00007f003f2bc304: nop
  0x00007f003f2bc305: nop
  0x00007f003f2bc306: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2bc30d: movabs r10,0x0
  0x00007f003f2bc317: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2bc31e: movabs r10,0x0
  0x00007f003f2bc328: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2bc32f: add    rsp,0x60
  0x00007f003f2bc333: pop    rbp
  0x00007f003f2bc334: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2bc339: hlt    
  0x00007f003f2bc33a: hlt    
  0x00007f003f2bc33b: hlt    
  0x00007f003f2bc33c: hlt    
  0x00007f003f2bc33d: hlt    
  0x00007f003f2bc33e: hlt    
  0x00007f003f2bc33f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2bc340: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2bc345: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2bc34a: sub    rsp,0x80
  0x00007f003f2bc351: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2bc356: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2bc35b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2bc360: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2bc365: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2bc36a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2bc36f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2bc374: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2bc379: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2bc37e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2bc383: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2bc388: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2bc38d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2bc392: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2bc397: mov    QWORD PTR [rsp],r15
  0x00007f003f2bc39b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2bc3a5: movabs rsi,0x7f003f2bc345  ;   {internal_word}
  0x00007f003f2bc3af: mov    rdx,rsp
  0x00007f003f2bc3b2: and    rsp,0xfffffffffffffff0
  0x00007f003f2bc3b6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2bc3bb: hlt    
[Deopt Handler Code]
  0x00007f003f2bc3bc: movabs r10,0x7f003f2bc3bc  ;   {section_word}
  0x00007f003f2bc3c6: push   r10
  0x00007f003f2bc3c8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2bc3cd: hlt    
  0x00007f003f2bc3ce: hlt    
  0x00007f003f2bc3cf: hlt    
<nmethod compile_id='96' compiler='C1' level='3' entry='0x00007f003f2bc120' size='1432' address='0x00007f003f2bbf90' relocation_offset='312' insts_offset='400' stub_offset='944' scopes_data_offset='1112' scopes_pcs_offset='1248' dependencies_offset='1424' metadata_offset='1088' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='1437' iicount='1437' stamp='0.445'/>
----------------------------------------------------------------------
java/util/HashMap.afterNodeInsertion
<writer thread='139637818533632'/>
[Loaded java.util.HashMap$EntryIterator from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
  [0x00007f003f2bc6c0, 0x00007f003f2bc810]  336 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00388701d0} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = boolean
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2bc6c0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2bc6c4: shl    r10,0x3
  0x00007f003f2bc6c8: cmp    r10,rax
  0x00007f003f2bc6cb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2bc6d1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2bc6dc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2bc6e0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2bc6e7: push   rbp
  0x00007f003f2bc6e8: sub    rsp,0x30
  0x00007f003f2bc6ec: movabs rdi,0x7f0038a66c68  ;   {metadata(method data for {method} {0x00007f00388701d0} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bc6f6: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2bc6fc: add    ebx,0x8
  0x00007f003f2bc6ff: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2bc705: movabs rdi,0x7f00388701d0  ;   {metadata({method} {0x00007f00388701d0} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bc70f: and    ebx,0x1ff8
  0x00007f003f2bc715: cmp    ebx,0x0
  0x00007f003f2bc718: je     0x00007f003f2bc72a  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::afterNodeInsertion@0 (line 1775)

  0x00007f003f2bc71e: add    rsp,0x30
  0x00007f003f2bc722: pop    rbp
  0x00007f003f2bc723: test   DWORD PTR [rip+0x1b1059d7],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2bc729: ret    
  0x00007f003f2bc72a: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2bc72f: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2bc737: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=124}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::afterNodeInsertion@-1 (line 1775)
                                                ;   {runtime_call}
  0x00007f003f2bc73c: jmp    0x00007f003f2bc71e
  0x00007f003f2bc73e: nop
  0x00007f003f2bc73f: nop
  0x00007f003f2bc740: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2bc747: movabs r10,0x0
  0x00007f003f2bc751: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2bc758: movabs r10,0x0
  0x00007f003f2bc762: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2bc769: add    rsp,0x30
  0x00007f003f2bc76d: pop    rbp
  0x00007f003f2bc76e: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2bc773: hlt    
  0x00007f003f2bc774: hlt    
  0x00007f003f2bc775: hlt    
  0x00007f003f2bc776: hlt    
  0x00007f003f2bc777: hlt    
  0x00007f003f2bc778: hlt    
  0x00007f003f2bc779: hlt    
  0x00007f003f2bc77a: hlt    
  0x00007f003f2bc77b: hlt    
  0x00007f003f2bc77c: hlt    
  0x00007f003f2bc77d: hlt    
  0x00007f003f2bc77e: hlt    
  0x00007f003f2bc77f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2bc780: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2bc785: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2bc78a: sub    rsp,0x80
  0x00007f003f2bc791: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2bc796: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2bc79b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2bc7a0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2bc7a5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2bc7aa: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2bc7af: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2bc7b4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2bc7b9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2bc7be: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2bc7c3: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2bc7c8: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2bc7cd: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2bc7d2: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2bc7d7: mov    QWORD PTR [rsp],r15
  0x00007f003f2bc7db: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2bc7e5: movabs rsi,0x7f003f2bc785  ;   {internal_word}
  0x00007f003f2bc7ef: mov    rdx,rsp
  0x00007f003f2bc7f2: and    rsp,0xfffffffffffffff0
  0x00007f003f2bc7f6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2bc7fb: hlt    
[Deopt Handler Code]
  0x00007f003f2bc7fc: movabs r10,0x7f003f2bc7fc  ;   {section_word}
  0x00007f003f2bc806: push   r10
  0x00007f003f2bc808: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2bc80d: hlt    
  0x00007f003f2bc80e: hlt    
  0x00007f003f2bc80f: hlt    
<nmethod compile_id='97' compiler='C1' level='3' entry='0x00007f003f2bc6c0' size='808' address='0x00007f003f2bc550' relocation_offset='312' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='736' dependencies_offset='800' metadata_offset='704' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='1437' iicount='1437' stamp='0.445'/>
<writer thread='139637818533632'/>
[Loaded java.util.ServiceLoader from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.ServiceLoader$LazyIterator from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/zip/ZipFile.getEntry  [0x00007f003f2bca80, 0x00007f003f2bd058]  1496 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038995a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;
  # this:     rsi:rsi   = &apos;java/util/zip/ZipFile&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x80]  (sp of caller)
  0x00007f003f2bca80: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2bca84: shl    r10,0x3
  0x00007f003f2bca88: cmp    r10,rax
  0x00007f003f2bca8b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2bca91: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2bca9c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2bcaa0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2bcaa7: push   rbp
  0x00007f003f2bcaa8: sub    rsp,0x70
  0x00007f003f2bcaac: mov    QWORD PTR [rsp+0x28],rsi
  0x00007f003f2bcab1: movabs rax,0x7f0038a5ba98  ;   {metadata(method data for {method} {0x00007f0038995a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2bcabb: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f2bcac1: add    edi,0x8
  0x00007f003f2bcac4: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f2bcaca: movabs rax,0x7f0038995a30  ;   {metadata({method} {0x00007f0038995a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2bcad4: and    edi,0x1ff8
  0x00007f003f2bcada: cmp    edi,0x0
  0x00007f003f2bcadd: je     0x00007f003f2bce8d  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@0 (line 304)

  0x00007f003f2bcae3: cmp    rdx,0x0
  0x00007f003f2bcae7: movabs rax,0x7f0038a5ba98  ;   {metadata(method data for {method} {0x00007f0038995a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2bcaf1: movabs rdi,0x130
  0x00007f003f2bcafb: jne    0x00007f003f2bcb0b
  0x00007f003f2bcb01: movabs rdi,0x140
  0x00007f003f2bcb0b: mov    rbx,QWORD PTR [rax+rdi*1]
  0x00007f003f2bcb0f: lea    rbx,[rbx+0x1]
  0x00007f003f2bcb13: mov    QWORD PTR [rax+rdi*1],rbx
  0x00007f003f2bcb17: je     0x00007f003f2bcdb6  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@1 (line 304)

  0x00007f003f2bcb1d: lea    rdi,[rsp+0x58]
  0x00007f003f2bcb22: mov    QWORD PTR [rdi+0x8],rsi
  0x00007f003f2bcb26: mov    rax,QWORD PTR [rsi]
  0x00007f003f2bcb29: mov    rbx,rax
  0x00007f003f2bcb2c: and    rbx,0x7
  0x00007f003f2bcb30: cmp    rbx,0x5
  0x00007f003f2bcb34: jne    0x00007f003f2bcbbb
  0x00007f003f2bcb3a: mov    ebx,DWORD PTR [rsi+0x8]
  0x00007f003f2bcb3d: shl    rbx,0x3
  0x00007f003f2bcb41: mov    rbx,QWORD PTR [rbx+0xa8]
  0x00007f003f2bcb48: or     rbx,r15
  0x00007f003f2bcb4b: xor    rbx,rax
  0x00007f003f2bcb4e: and    rbx,0xffffffffffffff87
  0x00007f003f2bcb52: je     0x00007f003f2bcbe3
  0x00007f003f2bcb58: test   rbx,0x7
  0x00007f003f2bcb5f: jne    0x00007f003f2bcba8
  0x00007f003f2bcb61: test   rbx,0x300
  0x00007f003f2bcb68: jne    0x00007f003f2bcb87
  0x00007f003f2bcb6a: and    rax,0x37f
  0x00007f003f2bcb71: mov    rbx,rax
  0x00007f003f2bcb74: or     rbx,r15
  0x00007f003f2bcb77: lock cmpxchg QWORD PTR [rsi],rbx
  0x00007f003f2bcb7c: jne    0x00007f003f2bcea4
  0x00007f003f2bcb82: jmp    0x00007f003f2bcbe3
  0x00007f003f2bcb87: mov    ebx,DWORD PTR [rsi+0x8]
  0x00007f003f2bcb8a: shl    rbx,0x3
  0x00007f003f2bcb8e: mov    rbx,QWORD PTR [rbx+0xa8]
  0x00007f003f2bcb95: or     rbx,r15
  0x00007f003f2bcb98: lock cmpxchg QWORD PTR [rsi],rbx
  0x00007f003f2bcb9d: jne    0x00007f003f2bcea4
  0x00007f003f2bcba3: jmp    0x00007f003f2bcbe3
  0x00007f003f2bcba8: mov    ebx,DWORD PTR [rsi+0x8]
  0x00007f003f2bcbab: shl    rbx,0x3
  0x00007f003f2bcbaf: mov    rbx,QWORD PTR [rbx+0xa8]
  0x00007f003f2bcbb6: lock cmpxchg QWORD PTR [rsi],rbx
  0x00007f003f2bcbbb: mov    rax,QWORD PTR [rsi]
  0x00007f003f2bcbbe: or     rax,0x1
  0x00007f003f2bcbc2: mov    QWORD PTR [rdi],rax
  0x00007f003f2bcbc5: lock cmpxchg QWORD PTR [rsi],rdi
  0x00007f003f2bcbca: je     0x00007f003f2bcbe3
  0x00007f003f2bcbd0: sub    rax,rsp
  0x00007f003f2bcbd3: and    rax,0xfffffffffffff007
  0x00007f003f2bcbda: mov    QWORD PTR [rdi],rax
  0x00007f003f2bcbdd: jne    0x00007f003f2bcea4  ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@20 (line 308)

  0x00007f003f2bcbe3: mov    QWORD PTR [rsp+0x30],rdx
  0x00007f003f2bcbe8: mov    rdi,rsi
  0x00007f003f2bcbeb: movabs rbx,0x7f0038a5ba98  ;   {metadata(method data for {method} {0x00007f0038995a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2bcbf5: add    QWORD PTR [rbx+0x160],0x1
  0x00007f003f2bcbfd: mov    rdi,rsi
  0x00007f003f2bcc00: mov    rsi,rdi            ;*invokespecial ensureOpen {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@22 (line 309)

  0x00007f003f2bcc03: nop
  0x00007f003f2bcc04: nop
  0x00007f003f2bcc05: nop
  0x00007f003f2bcc06: nop
  0x00007f003f2bcc07: call   0x00007f003f1c4d60  ; OopMap{[40]=Oop [48]=Oop [96]=Oop off=396}
                                                ;*invokespecial ensureOpen {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@22 (line 309)
                                                ;   {optimized virtual_call}
  0x00007f003f2bcc0c: mov    rsi,QWORD PTR [rsp+0x28]
  0x00007f003f2bcc11: mov    rdi,QWORD PTR [rsi+0x10]  ;*getfield jzfile {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@26 (line 310)

  0x00007f003f2bcc15: mov    ebx,DWORD PTR [rsi+0x20]
  0x00007f003f2bcc18: shl    rbx,0x3            ;*getfield zc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@30 (line 310)

  0x00007f003f2bcc1c: cmp    rax,QWORD PTR [rbx]  ; implicit exception: dispatches to 0x00007f003f2bceb7
  0x00007f003f2bcc1f: mov    rdx,rbx
  0x00007f003f2bcc22: movabs rax,0x7f0038a5ba98  ;   {metadata(method data for {method} {0x00007f0038995a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2bcc2c: add    QWORD PTR [rax+0x170],0x1
  0x00007f003f2bcc34: mov    rdx,QWORD PTR [rsp+0x30]
  0x00007f003f2bcc39: mov    rsi,rbx            ;*invokevirtual getBytes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@34 (line 310)

  0x00007f003f2bcc3c: mov    QWORD PTR [rsp+0x38],rdi
  0x00007f003f2bcc41: nop
  0x00007f003f2bcc42: nop
  0x00007f003f2bcc43: nop
  0x00007f003f2bcc44: nop
  0x00007f003f2bcc45: nop
  0x00007f003f2bcc46: nop
  0x00007f003f2bcc47: call   0x00007f003f1c4d60  ; OopMap{[48]=Oop [40]=Oop [96]=Oop off=460}
                                                ;*invokevirtual getBytes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@34 (line 310)
                                                ;   {optimized virtual_call}
  0x00007f003f2bcc4c: movabs rsi,0x7f0038a5ba98  ;   {metadata(method data for {method} {0x00007f0038995a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2bcc56: add    QWORD PTR [rsi+0x208],0x1
  0x00007f003f2bcc5e: mov    rsi,QWORD PTR [rsp+0x38]
  0x00007f003f2bcc63: mov    rdx,rax
  0x00007f003f2bcc66: mov    ecx,0x1            ;*invokestatic getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@38 (line 310)

  0x00007f003f2bcc6b: nop
  0x00007f003f2bcc6c: nop
  0x00007f003f2bcc6d: nop
  0x00007f003f2bcc6e: nop
  0x00007f003f2bcc6f: call   0x00007f003f1c5160  ; OopMap{[48]=Oop [40]=Oop [96]=Oop off=500}
                                                ;*invokestatic getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@38 (line 310)
                                                ;   {static_call}
  0x00007f003f2bcc74: movabs rdx,0x0
  0x00007f003f2bcc7e: mov    rcx,rax
  0x00007f003f2bcc81: cmp    rcx,rdx
  0x00007f003f2bcc84: movabs rdx,0x7f0038a5ba98  ;   {metadata(method data for {method} {0x00007f0038995a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2bcc8e: movabs rcx,0x228
  0x00007f003f2bcc98: jne    0x00007f003f2bcca8
  0x00007f003f2bcc9e: movabs rcx,0x218
  0x00007f003f2bcca8: mov    rsi,QWORD PTR [rdx+rcx*1]
  0x00007f003f2bccac: lea    rsi,[rsi+0x1]
  0x00007f003f2bccb0: mov    QWORD PTR [rdx+rcx*1],rsi
  0x00007f003f2bccb4: jne    0x00007f003f2bcd11  ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@44 (line 311)

  0x00007f003f2bccba: lea    rax,[rsp+0x58]
  0x00007f003f2bccbf: mov    rcx,QWORD PTR [rax+0x8]
  0x00007f003f2bccc3: mov    rdx,QWORD PTR [rcx]
  0x00007f003f2bccc6: and    rdx,0x7
  0x00007f003f2bccca: cmp    rdx,0x5
  0x00007f003f2bccce: je     0x00007f003f2bcceb
  0x00007f003f2bccd4: mov    rdx,QWORD PTR [rax]
  0x00007f003f2bccd7: test   rdx,rdx
  0x00007f003f2bccda: je     0x00007f003f2bcceb
  0x00007f003f2bcce0: lock cmpxchg QWORD PTR [rcx],rdx
  0x00007f003f2bcce5: jne    0x00007f003f2bcebc  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@72 (line 316)

  0x00007f003f2bcceb: movabs rax,0x7f0038a5ba98  ;   {metadata(method data for {method} {0x00007f0038995a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2bccf5: inc    DWORD PTR [rax+0x258]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@73 (line 316)

  0x00007f003f2bccfb: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f2bcd05: add    rsp,0x70
  0x00007f003f2bcd09: pop    rbp
  0x00007f003f2bcd0a: test   DWORD PTR [rip+0x1b1053f0],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2bcd10: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@85 (line 317)

  0x00007f003f2bcd11: mov    rdx,QWORD PTR [rsp+0x30]
  0x00007f003f2bcd16: mov    rsi,QWORD PTR [rsp+0x28]
  0x00007f003f2bcd1b: mov    rcx,rsi
  0x00007f003f2bcd1e: movabs rdi,0x7f0038a5ba98  ;   {metadata(method data for {method} {0x00007f0038995a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2bcd28: add    QWORD PTR [rdi+0x238],0x1
  0x00007f003f2bcd30: mov    rcx,rax
  0x00007f003f2bcd33: mov    rdi,rsi
  0x00007f003f2bcd36: mov    rsi,rdi            ;*invokespecial getZipEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@51 (line 312)

  0x00007f003f2bcd39: mov    QWORD PTR [rsp+0x40],rax
  0x00007f003f2bcd3e: nop
  0x00007f003f2bcd3f: call   0x00007f003f1c4d60  ; OopMap{[40]=Oop [96]=Oop off=708}
                                                ;*invokespecial getZipEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@51 (line 312)
                                                ;   {optimized virtual_call}
  0x00007f003f2bcd44: mov    rsi,QWORD PTR [rsp+0x28]
  0x00007f003f2bcd49: mov    rdx,QWORD PTR [rsi+0x10]  ;*getfield jzfile {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@57 (line 313)

  0x00007f003f2bcd4d: movabs rdi,0x7f0038a5ba98  ;   {metadata(method data for {method} {0x00007f0038995a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2bcd57: add    QWORD PTR [rdi+0x248],0x1
  0x00007f003f2bcd5f: mov    rsi,rdx
  0x00007f003f2bcd62: mov    rdx,QWORD PTR [rsp+0x40]  ;*invokestatic freeEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@61 (line 313)

  0x00007f003f2bcd67: mov    QWORD PTR [rsp+0x48],rax
  0x00007f003f2bcd6c: nop
  0x00007f003f2bcd6d: nop
  0x00007f003f2bcd6e: nop
  0x00007f003f2bcd6f: call   0x00007f003f1c5160  ; OopMap{[40]=Oop [72]=Oop [96]=Oop off=756}
                                                ;*invokestatic freeEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@61 (line 313)
                                                ;   {static_call}
  0x00007f003f2bcd74: lea    rax,[rsp+0x58]
  0x00007f003f2bcd79: mov    rsi,QWORD PTR [rax+0x8]
  0x00007f003f2bcd7d: mov    rdx,QWORD PTR [rsi]
  0x00007f003f2bcd80: and    rdx,0x7
  0x00007f003f2bcd84: cmp    rdx,0x5
  0x00007f003f2bcd88: je     0x00007f003f2bcda5
  0x00007f003f2bcd8e: mov    rdx,QWORD PTR [rax]
  0x00007f003f2bcd91: test   rdx,rdx
  0x00007f003f2bcd94: je     0x00007f003f2bcda5
  0x00007f003f2bcd9a: lock cmpxchg QWORD PTR [rsi],rdx
  0x00007f003f2bcd9f: jne    0x00007f003f2bcecf  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@68 (line 314)

  0x00007f003f2bcda5: mov    rax,QWORD PTR [rsp+0x48]
  0x00007f003f2bcdaa: add    rsp,0x70
  0x00007f003f2bcdae: pop    rbp
  0x00007f003f2bcdaf: test   DWORD PTR [rip+0x1b10534b],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2bcdb5: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@69 (line 314)

  0x00007f003f2bcdb6: xchg   ax,ax
  0x00007f003f2bcdb8: jmp    0x00007f003f2bcef1  ;   {no_reloc}
  0x00007f003f2bcdbd: add    BYTE PTR [rax],al
  0x00007f003f2bcdbf: add    BYTE PTR [rax],al
  0x00007f003f2bcdc1: add    BYTE PTR [rcx-0x75],cl
  0x00007f003f2bcdc4: rex.RXB (bad) 
  0x00007f003f2bcdc6: lea    rdi,[rax+0x20]
  0x00007f003f2bcdca: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2bcdce: ja     0x00007f003f2bcefb
  0x00007f003f2bcdd4: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2bcdd8: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2bcddf: mov    QWORD PTR [rax],rcx
  0x00007f003f2bcde2: mov    rcx,rdx
  0x00007f003f2bcde5: shr    rcx,0x3
  0x00007f003f2bcde9: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2bcdec: xor    rcx,rcx
  0x00007f003f2bcdef: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2bcdf2: xor    rcx,rcx
  0x00007f003f2bcdf5: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f2bcdf9: mov    QWORD PTR [rax+0x18],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@4 (line 305)

  0x00007f003f2bcdfd: mov    rdx,rax
  0x00007f003f2bce00: movabs rsi,0x7f0038a5ba98  ;   {metadata(method data for {method} {0x00007f0038995a30} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2bce0a: add    QWORD PTR [rsi+0x150],0x1
  0x00007f003f2bce12: movabs rdx,0x670b94338    ;   {oop(&quot;name&quot;)}
  0x00007f003f2bce1c: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@10 (line 305)

  0x00007f003f2bce1f: mov    QWORD PTR [rsp+0x50],rax
  0x00007f003f2bce24: nop
  0x00007f003f2bce25: nop
  0x00007f003f2bce26: nop
  0x00007f003f2bce27: call   0x00007f003f1c4d60  ; OopMap{[80]=Oop off=940}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@10 (line 305)
                                                ;   {optimized virtual_call}
  0x00007f003f2bce2c: mov    rax,QWORD PTR [rsp+0x50]
  0x00007f003f2bce31: jmp    0x00007f003f2bcf46  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@13 (line 305)

  0x00007f003f2bce36: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2bce3d: xor    r10,r10
  0x00007f003f2bce40: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2bce47: xor    r10,r10
  0x00007f003f2bce4a: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2bce51: mov    rsi,rax
  0x00007f003f2bce54: lea    rax,[rsp+0x58]
  0x00007f003f2bce59: mov    rbx,QWORD PTR [rax+0x8]
  0x00007f003f2bce5d: mov    rdi,QWORD PTR [rbx]
  0x00007f003f2bce60: and    rdi,0x7
  0x00007f003f2bce64: cmp    rdi,0x5
  0x00007f003f2bce68: je     0x00007f003f2bce85
  0x00007f003f2bce6e: mov    rdi,QWORD PTR [rax]
  0x00007f003f2bce71: test   rdi,rdi
  0x00007f003f2bce74: je     0x00007f003f2bce85
  0x00007f003f2bce7a: lock cmpxchg QWORD PTR [rbx],rdi
  0x00007f003f2bce7f: jne    0x00007f003f2bcf08  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@80 (line 316)

  0x00007f003f2bce85: mov    rax,rsi
  0x00007f003f2bce88: jmp    0x00007f003f2bcf46
  0x00007f003f2bce8d: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2bce92: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2bce9a: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [40]=Oop rdx=Oop off=1055}
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipFile::getEntry@-1 (line 304)
                                                ;   {runtime_call}
  0x00007f003f2bce9f: jmp    0x00007f003f2bcae3
  0x00007f003f2bcea4: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2bcea9: mov    QWORD PTR [rsp],rdi
  0x00007f003f2bcead: call   0x00007f003f27ba60  ; OopMap{rsi=Oop [40]=Oop rdx=Oop [96]=Oop off=1074}
                                                ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@20 (line 308)
                                                ;   {runtime_call}
  0x00007f003f2bceb2: jmp    0x00007f003f2bcbe3
  0x00007f003f2bceb7: call   0x00007f003f279000  ; OopMap{[48]=Oop rsi=Oop [40]=Oop rbx=Oop [96]=Oop off=1084}
                                                ;*invokevirtual getBytes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@34 (line 310)
                                                ;   {runtime_call}
  0x00007f003f2bcebc: lea    rax,[rsp+0x58]
  0x00007f003f2bcec1: mov    QWORD PTR [rsp],rax
  0x00007f003f2bcec5: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2bceca: jmp    0x00007f003f2bcceb
  0x00007f003f2bcecf: lea    rax,[rsp+0x58]
  0x00007f003f2bced4: mov    QWORD PTR [rsp],rax
  0x00007f003f2bced8: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2bcedd: jmp    0x00007f003f2bcda5
  0x00007f003f2bcee2: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2bceec: mov    eax,0xa050f00
  0x00007f003f2bcef1: call   0x00007f003f27c5e0  ; OopMap{off=1142}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@4 (line 305)
                                                ;   {runtime_call}
  0x00007f003f2bcef6: jmp    0x00007f003f2bcdb8
  0x00007f003f2bcefb: mov    rdx,rdx
  0x00007f003f2bcefe: call   0x00007f003f279760  ; OopMap{off=1155}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::getEntry@4 (line 305)
                                                ;   {runtime_call}
  0x00007f003f2bcf03: jmp    0x00007f003f2bcdfd
  0x00007f003f2bcf08: lea    rax,[rsp+0x58]
  0x00007f003f2bcf0d: mov    QWORD PTR [rsp],rax
  0x00007f003f2bcf11: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2bcf16: jmp    0x00007f003f2bce85
  0x00007f003f2bcf1b: nop
  0x00007f003f2bcf1c: nop
  0x00007f003f2bcf1d: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2bcf24: movabs r10,0x0
  0x00007f003f2bcf2e: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2bcf35: movabs r10,0x0
  0x00007f003f2bcf3f: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2bcf46: add    rsp,0x70
  0x00007f003f2bcf4a: pop    rbp
  0x00007f003f2bcf4b: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2bcf50: hlt    
  0x00007f003f2bcf51: hlt    
  0x00007f003f2bcf52: hlt    
  0x00007f003f2bcf53: hlt    
  0x00007f003f2bcf54: hlt    
  0x00007f003f2bcf55: hlt    
  0x00007f003f2bcf56: hlt    
  0x00007f003f2bcf57: hlt    
  0x00007f003f2bcf58: hlt    
  0x00007f003f2bcf59: hlt    
  0x00007f003f2bcf5a: hlt    
  0x00007f003f2bcf5b: hlt    
  0x00007f003f2bcf5c: hlt    
  0x00007f003f2bcf5d: hlt    
  0x00007f003f2bcf5e: hlt    
  0x00007f003f2bcf5f: hlt    
[Stub Code]
  0x00007f003f2bcf60: nop                       ;   {no_reloc}
  0x00007f003f2bcf61: nop
  0x00007f003f2bcf62: nop
  0x00007f003f2bcf63: nop
  0x00007f003f2bcf64: nop
  0x00007f003f2bcf65: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2bcf6f: jmp    0x00007f003f2bcf6f  ;   {runtime_call}
  0x00007f003f2bcf74: nop
  0x00007f003f2bcf75: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2bcf7f: jmp    0x00007f003f2bcf7f  ;   {runtime_call}
  0x00007f003f2bcf84: nop
  0x00007f003f2bcf85: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2bcf8f: jmp    0x00007f003f2bcf8f  ;   {runtime_call}
  0x00007f003f2bcf94: nop
  0x00007f003f2bcf95: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2bcf9f: jmp    0x00007f003f2bcf9f  ;   {runtime_call}
  0x00007f003f2bcfa4: nop
  0x00007f003f2bcfa5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2bcfaf: jmp    0x00007f003f2bcfaf  ;   {runtime_call}
  0x00007f003f2bcfb4: nop
  0x00007f003f2bcfb5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2bcfbf: jmp    0x00007f003f2bcfbf  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2bcfc4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2bcfc9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2bcfce: sub    rsp,0x80
  0x00007f003f2bcfd5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2bcfda: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2bcfdf: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2bcfe4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2bcfe9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2bcfee: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2bcff3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2bcff8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2bcffd: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2bd002: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2bd007: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2bd00c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2bd011: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2bd016: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2bd01b: mov    QWORD PTR [rsp],r15
  0x00007f003f2bd01f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2bd029: movabs rsi,0x7f003f2bcfc9  ;   {internal_word}
  0x00007f003f2bd033: mov    rdx,rsp
  0x00007f003f2bd036: and    rsp,0xfffffffffffffff0
  0x00007f003f2bd03a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2bd03f: hlt    
[Deopt Handler Code]
  0x00007f003f2bd040: movabs r10,0x7f003f2bd040  ;   {section_word}
  0x00007f003f2bd04a: push   r10
  0x00007f003f2bd04c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2bd051: hlt    
  0x00007f003f2bd052: hlt    
  0x00007f003f2bd053: hlt    
  0x00007f003f2bd054: hlt    
  0x00007f003f2bd055: hlt    
  0x00007f003f2bd056: hlt    
  0x00007f003f2bd057: hlt    
<nmethod compile_id='98' compiler='C1' level='3' entry='0x00007f003f2bca80' size='3048' address='0x00007f003f2bc890' relocation_offset='312' insts_offset='496' stub_offset='1744' scopes_data_offset='2000' scopes_pcs_offset='2336' dependencies_offset='2880' handler_table_offset='2888' nul_chk_table_offset='3032' metadata_offset='1992' method='java/util/zip/ZipFile getEntry (Ljava/lang/String;)Ljava/util/zip/ZipEntry;' bytes='86' count='649' iicount='649' stamp='0.461'/>
<writer thread='139637818533632'/>
<task_queued compile_id='100' method='java/lang/ClassLoader checkName (Ljava/lang/String;)Z' bytes='43' count='512' iicount='512' level='3' stamp='0.461' comment='tiered' hot_count='512'/>
<task_queued compile_id='101' method='sun/misc/VM allowArraySyntax ()Z' bytes='4' count='512' iicount='512' level='3' stamp='0.461' comment='tiered' hot_count='512'/>
[Loaded java.util.ServiceLoader$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/Integer.intValue  [0x00007f003f2bd600, 0x00007f003f2bd710]  272 bytes
<writer thread='139637818533632'/>
[Loaded java.util.LinkedHashMap$LinkedEntrySet from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
[Entry Point]
[Constants]
  # {method} {0x00007f0038821f00} &apos;intValue&apos; &apos;()I&apos; in &apos;java/lang/Integer&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2bd600: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2bd604: shl    r10,0x3
  0x00007f003f2bd608: cmp    r10,rax
  0x00007f003f2bd60b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2bd611: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2bd61c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2bd620: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2bd627: push   rbp
  0x00007f003f2bd628: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::intValue@0 (line 893)

  0x00007f003f2bd62c: mov    eax,DWORD PTR [rsi+0xc]  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::intValue@1 (line 893)

  0x00007f003f2bd62f: add    rsp,0x30
  0x00007f003f2bd633: pop    rbp
  0x00007f003f2bd634: test   DWORD PTR [rip+0x1b104ac6],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2bd63a: ret    
  0x00007f003f2bd63b: nop
  0x00007f003f2bd63c: nop
  0x00007f003f2bd63d: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2bd644: movabs r10,0x0
  0x00007f003f2bd64e: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2bd655: movabs r10,0x0
  0x00007f003f2bd65f: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2bd666: add    rsp,0x30
  0x00007f003f2bd66a: pop    rbp
  0x00007f003f2bd66b: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2bd670: hlt    
  0x00007f003f2bd671: hlt    
  0x00007f003f2bd672: hlt    
  0x00007f003f2bd673: hlt    
  0x00007f003f2bd674: hlt    
  0x00007f003f2bd675: hlt    
  0x00007f003f2bd676: hlt    
  0x00007f003f2bd677: hlt    
  0x00007f003f2bd678: hlt    
  0x00007f003f2bd679: hlt    
  0x00007f003f2bd67a: hlt    
  0x00007f003f2bd67b: hlt    
  0x00007f003f2bd67c: hlt    
  0x00007f003f2bd67d: hlt    
  0x00007f003f2bd67e: hlt    
  0x00007f003f2bd67f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2bd680: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2bd685: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2bd68a: sub    rsp,0x80
  0x00007f003f2bd691: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2bd696: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2bd69b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2bd6a0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2bd6a5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2bd6aa: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2bd6af: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2bd6b4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2bd6b9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2bd6be: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2bd6c3: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2bd6c8: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2bd6cd: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2bd6d2: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2bd6d7: mov    QWORD PTR [rsp],r15
  0x00007f003f2bd6db: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2bd6e5: movabs rsi,0x7f003f2bd685  ;   {internal_word}
  0x00007f003f2bd6ef: mov    rdx,rsp
  0x00007f003f2bd6f2: and    rsp,0xfffffffffffffff0
  0x00007f003f2bd6f6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2bd6fb: hlt    
[Deopt Handler Code]
  0x00007f003f2bd6fc: movabs r10,0x7f003f2bd6fc  ;   {section_word}
  0x00007f003f2bd706: push   r10
  0x00007f003f2bd708: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2bd70d: hlt    
  0x00007f003f2bd70e: hlt    
  0x00007f003f2bd70f: hlt    
<nmethod compile_id='99' compiler='C1' level='1' entry='0x00007f003f2bd600' size='736' address='0x00007f003f2bd490' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/lang/Integer intValue ()I' bytes='5' count='206' iicount='206' stamp='0.462'/>
<writer thread='139637818533632'/>
[Loaded java.util.LinkedHashMap$LinkedHashIterator from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$LinkedEntryIterator from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$BootClassPathHolder from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/HashMap.put  [0x00007f003f2bd920, 0x00007f003f2bddb8]  1176 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003886d660} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  #           [sp+0x90]  (sp of caller)
  0x00007f003f2bd920: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2bd924: shl    r10,0x3
  0x00007f003f2bd928: cmp    r10,rax
  0x00007f003f2bd92b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2bd931: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2bd93c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2bd940: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2bd947: push   rbp
  0x00007f003f2bd948: sub    rsp,0x80
  0x00007f003f2bd94f: movabs rdi,0x7f0038a5fc20
<writer thread='139637818533632'/>
[Loaded sun.misc.Launcher$BootClassPathHolder$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
                                                ;   {metadata(method data for {method} {0x00007f003886d660} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bd959: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2bd95f: add    ebx,0x8
  0x00007f003f2bd962: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2bd968: movabs rdi,0x7f003886d660  ;   {metadata({method} {0x00007f003886d660} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bd972: and    ebx,0x1ff8
  0x00007f003f2bd978: cmp    ebx,0x0
  0x00007f003f2bd97b: je     0x00007f003f2bdc93  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@0 (line 611)

  0x00007f003f2bd981: movabs rdi,0x7f0038a5fc20  ;   {metadata(method data for {method} {0x00007f003886d660} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bd98b: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f2bd993: movabs rdi,0x7f0038a588a0  ;   {metadata(method data for {method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bd99d: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2bd9a3: add    ebx,0x8
  0x00007f003f2bd9a6: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2bd9ac: movabs rdi,0x7f003886c920  ;   {metadata({method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bd9b6: and    ebx,0x7ffff8
  0x00007f003f2bd9bc: cmp    ebx,0x0
  0x00007f003f2bd9bf: je     0x00007f003f2bdcaa
  0x00007f003f2bd9c5: cmp    rdx,0x0
  0x00007f003f2bd9c9: movabs rdi,0x7f0038a588a0  ;   {metadata(method data for {method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bd9d3: movabs rbx,0x130
  0x00007f003f2bd9dd: jne    0x00007f003f2bd9ed
  0x00007f003f2bd9e3: movabs rbx,0x140
  0x00007f003f2bd9ed: mov    rax,QWORD PTR [rdi+rbx*1]
  0x00007f003f2bd9f1: lea    rax,[rax+0x1]
  0x00007f003f2bd9f5: mov    QWORD PTR [rdi+rbx*1],rax
  0x00007f003f2bd9f9: jne    0x00007f003f2bda28  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)

  0x00007f003f2bd9ff: movabs rdi,0x7f0038a588a0  ;   {metadata(method data for {method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bda09: inc    DWORD PTR [rdi+0x150]
  0x00007f003f2bda0f: mov    edi,0x0
  0x00007f003f2bda14: mov    QWORD PTR [rsp+0x68],rcx
  0x00007f003f2bda19: mov    QWORD PTR [rsp+0x60],rdx
  0x00007f003f2bda1e: mov    QWORD PTR [rsp+0x58],rsi
  0x00007f003f2bda23: jmp    0x00007f003f2bdc48  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)

  0x00007f003f2bda28: mov    QWORD PTR [rsp+0x68],rcx
  0x00007f003f2bda2d: mov    QWORD PTR [rsp+0x58],rsi
  0x00007f003f2bda32: cmp    rax,QWORD PTR [rdx]  ; implicit exception: dispatches to 0x00007f003f2bdcc1
  0x00007f003f2bda35: mov    rdi,rdx
  0x00007f003f2bda38: movabs rbx,0x7f0038a588a0  ;   {metadata(method data for {method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bda42: mov    edi,DWORD PTR [rdi+0x8]
  0x00007f003f2bda45: shl    rdi,0x3
  0x00007f003f2bda49: cmp    rdi,QWORD PTR [rbx+0x178]
  0x00007f003f2bda50: jne    0x00007f003f2bda5f
  0x00007f003f2bda52: add    QWORD PTR [rbx+0x180],0x1
  0x00007f003f2bda5a: jmp    0x00007f003f2bdc21
  0x00007f003f2bda5f: cmp    rdi,QWORD PTR [rbx+0x188]
  0x00007f003f2bda66: jne    0x00007f003f2bda75
  0x00007f003f2bda68: add    QWORD PTR [rbx+0x190],0x1
  0x00007f003f2bda70: jmp    0x00007f003f2bdc21
  0x00007f003f2bda75: cmp    rdi,QWORD PTR [rbx+0x198]
  0x00007f003f2bda7c: jne    0x00007f003f2bda8b
  0x00007f003f2bda7e: add    QWORD PTR [rbx+0x1a0],0x1
  0x00007f003f2bda86: jmp    0x00007f003f2bdc21
  0x00007f003f2bda8b: cmp    rdi,QWORD PTR [rbx+0x1a8]
  0x00007f003f2bda92: jne    0x00007f003f2bdaa1
  0x00007f003f2bda94: add    QWORD PTR [rbx+0x1b0],0x1
  0x00007f003f2bda9c: jmp    0x00007f003f2bdc21
  0x00007f003f2bdaa1: cmp    rdi,QWORD PTR [rbx+0x1b8]
  0x00007f003f2bdaa8: jne    0x00007f003f2bdab7
  0x00007f003f2bdaaa: add    QWORD PTR [rbx+0x1c0],0x1
  0x00007f003f2bdab2: jmp    0x00007f003f2bdc21
  0x00007f003f2bdab7: cmp    rdi,QWORD PTR [rbx+0x1c8]
  0x00007f003f2bdabe: jne    0x00007f003f2bdacd
  0x00007f003f2bdac0: add    QWORD PTR [rbx+0x1d0],0x1
  0x00007f003f2bdac8: jmp    0x00007f003f2bdc21
  0x00007f003f2bdacd: cmp    rdi,QWORD PTR [rbx+0x1d8]
  0x00007f003f2bdad4: jne    0x00007f003f2bdae3
  0x00007f003f2bdad6: add    QWORD PTR [rbx+0x1e0],0x1
  0x00007f003f2bdade: jmp    0x00007f003f2bdc21
  0x00007f003f2bdae3: cmp    rdi,QWORD PTR [rbx+0x1e8]
  0x00007f003f2bdaea: jne    0x00007f003f2bdaf9
  0x00007f003f2bdaec: add    QWORD PTR [rbx+0x1f0],0x1
  0x00007f003f2bdaf4: jmp    0x00007f003f2bdc21
  0x00007f003f2bdaf9: cmp    QWORD PTR [rbx+0x178],0x0
  0x00007f003f2bdb04: jne    0x00007f003f2bdb1d
  0x00007f003f2bdb06: mov    QWORD PTR [rbx+0x178],rdi
  0x00007f003f2bdb0d: mov    QWORD PTR [rbx+0x180],0x1
  0x00007f003f2bdb18: jmp    0x00007f003f2bdc21
  0x00007f003f2bdb1d: cmp    QWORD PTR [rbx+0x188],0x0
  0x00007f003f2bdb28: jne    0x00007f003f2bdb41
  0x00007f003f2bdb2a: mov    QWORD PTR [rbx+0x188],rdi
  0x00007f003f2bdb31: mov    QWORD PTR [rbx+0x190],0x1
  0x00007f003f2bdb3c: jmp    0x00007f003f2bdc21
  0x00007f003f2bdb41: cmp    QWORD PTR [rbx+0x198],0x0
  0x00007f003f2bdb4c: jne    0x00007f003f2bdb65
  0x00007f003f2bdb4e: mov    QWORD PTR [rbx+0x198],rdi
  0x00007f003f2bdb55: mov    QWORD PTR [rbx+0x1a0],0x1
  0x00007f003f2bdb60: jmp    0x00007f003f2bdc21
  0x00007f003f2bdb65: cmp    QWORD PTR [rbx+0x1a8],0x0
  0x00007f003f2bdb70: jne    0x00007f003f2bdb89
  0x00007f003f2bdb72: mov    QWORD PTR [rbx+0x1a8],rdi
  0x00007f003f2bdb79: mov    QWORD PTR [rbx+0x1b0],0x1
  0x00007f003f2bdb84: jmp    0x00007f003f2bdc21
  0x00007f003f2bdb89: cmp    QWORD PTR [rbx+0x1b8],0x0
  0x00007f003f2bdb94: jne    0x00007f003f2bdbad
  0x00007f003f2bdb96: mov    QWORD PTR [rbx+0x1b8],rdi
  0x00007f003f2bdb9d: mov    QWORD PTR [rbx+0x1c0],0x1
  0x00007f003f2bdba8: jmp    0x00007f003f2bdc21
  0x00007f003f2bdbad: cmp    QWORD PTR [rbx+0x1c8],0x0
  0x00007f003f2bdbb8: jne    0x00007f003f2bdbd1
  0x00007f003f2bdbba: mov    QWORD PTR [rbx+0x1c8],rdi
  0x00007f003f2bdbc1: mov    QWORD PTR [rbx+0x1d0],0x1
  0x00007f003f2bdbcc: jmp    0x00007f003f2bdc21
  0x00007f003f2bdbd1: cmp    QWORD PTR [rbx+0x1d8],0x0
  0x00007f003f2bdbdc: jne    0x00007f003f2bdbf5
  0x00007f003f2bdbde: mov    QWORD PTR [rbx+0x1d8],rdi
  0x00007f003f2bdbe5: mov    QWORD PTR [rbx+0x1e0],0x1
  0x00007f003f2bdbf0: jmp    0x00007f003f2bdc21
  0x00007f003f2bdbf5: cmp    QWORD PTR [rbx+0x1e8],0x0
  0x00007f003f2bdc00: jne    0x00007f003f2bdc19
  0x00007f003f2bdc02: mov    QWORD PTR [rbx+0x1e8],rdi
  0x00007f003f2bdc09: mov    QWORD PTR [rbx+0x1f0],0x1
  0x00007f003f2bdc14: jmp    0x00007f003f2bdc21
  0x00007f003f2bdc19: add    QWORD PTR [rbx+0x168],0x1
  0x00007f003f2bdc21: mov    rsi,rdx            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)

  0x00007f003f2bdc24: mov    QWORD PTR [rsp+0x60],rdx
  0x00007f003f2bdc29: nop
  0x00007f003f2bdc2a: nop
  0x00007f003f2bdc2b: nop
  0x00007f003f2bdc2c: nop
  0x00007f003f2bdc2d: movabs rax,0xffffffffffffffff
  0x00007f003f2bdc37: call   0x00007f003f1c4f60  ; OopMap{[88]=Oop [104]=Oop [96]=Oop off=796}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ;   {virtual_call}
  0x00007f003f2bdc3c: mov    rdx,rax
  0x00007f003f2bdc3f: shr    edx,0x10
  0x00007f003f2bdc42: xor    rdx,rax
  0x00007f003f2bdc45: mov    rdi,rdx            ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@19 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)

  0x00007f003f2bdc48: mov    r8,QWORD PTR [rsp+0x68]
  0x00007f003f2bdc4d: mov    rcx,QWORD PTR [rsp+0x60]
  0x00007f003f2bdc52: mov    rsi,QWORD PTR [rsp+0x58]
  0x00007f003f2bdc57: mov    rdx,rsi
  0x00007f003f2bdc5a: movabs r9,0x7f0038a5fc20  ;   {metadata(method data for {method} {0x00007f003886d660} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bdc64: add    QWORD PTR [r9+0x140],0x1
  0x00007f003f2bdc6c: mov    rdx,rdi
  0x00007f003f2bdc6f: mov    r9d,0x0
  0x00007f003f2bdc75: mov    edi,0x1            ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@9 (line 611)

  0x00007f003f2bdc7a: nop
  0x00007f003f2bdc7b: nop
  0x00007f003f2bdc7c: nop
  0x00007f003f2bdc7d: nop
  0x00007f003f2bdc7e: nop
  0x00007f003f2bdc7f: call   0x00007f003f1c4d60  ; OopMap{off=868}
                                                ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@9 (line 611)
                                                ;   {optimized virtual_call}
  0x00007f003f2bdc84: add    rsp,0x80
  0x00007f003f2bdc8b: pop    rbp
  0x00007f003f2bdc8c: test   DWORD PTR [rip+0x1b10446e],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2bdc92: ret    
  0x00007f003f2bdc93: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2bdc98: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2bdca0: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop rcx=Oop off=901}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::put@-1 (line 611)
                                                ;   {runtime_call}
  0x00007f003f2bdca5: jmp    0x00007f003f2bd981
  0x00007f003f2bdcaa: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2bdcaf: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2bdcb7: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop rcx=Oop off=924}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ;   {runtime_call}
  0x00007f003f2bdcbc: jmp    0x00007f003f2bd9c5
  0x00007f003f2bdcc1: call   0x00007f003f279000  ; OopMap{rdx=Oop [104]=Oop [88]=Oop off=934}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ;   {runtime_call}
  0x00007f003f2bdcc6: nop
  0x00007f003f2bdcc7: nop
  0x00007f003f2bdcc8: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2bdccf: movabs r10,0x0
  0x00007f003f2bdcd9: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2bdce0: movabs r10,0x0
  0x00007f003f2bdcea: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2bdcf1: add    rsp,0x80
  0x00007f003f2bdcf8: pop    rbp
  0x00007f003f2bdcf9: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2bdcfe: hlt    
  0x00007f003f2bdcff: hlt    
[Stub Code]
  0x00007f003f2bdd00: nop                       ;   {no_reloc}
  0x00007f003f2bdd01: nop
  0x00007f003f2bdd02: nop
  0x00007f003f2bdd03: nop
  0x00007f003f2bdd04: nop
  0x00007f003f2bdd05: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2bdd0f: jmp    0x00007f003f2bdd0f  ;   {runtime_call}
  0x00007f003f2bdd14: nop
  0x00007f003f2bdd15: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2bdd1f: jmp    0x00007f003f2bdd1f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2bdd24: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2bdd29: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2bdd2e: sub    rsp,0x80
  0x00007f003f2bdd35: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2bdd3a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2bdd3f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2bdd44: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2bdd49: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2bdd4e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2bdd53: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2bdd58: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2bdd5d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2bdd62: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2bdd67: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2bdd6c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2bdd71: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2bdd76: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2bdd7b: mov    QWORD PTR [rsp],r15
  0x00007f003f2bdd7f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2bdd89: movabs rsi,0x7f003f2bdd29  ;   {internal_word}
  0x00007f003f2bdd93: mov    rdx,rsp
  0x00007f003f2bdd96: and    rsp,0xfffffffffffffff0
  0x00007f003f2bdd9a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2bdd9f: hlt    
[Deopt Handler Code]
  0x00007f003f2bdda0: movabs r10,0x7f003f2bdda0  ;   {section_word}
  0x00007f003f2bddaa: push   r10
  0x00007f003f2bddac: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2bddb1: hlt    
  0x00007f003f2bddb2: hlt    
  0x00007f003f2bddb3: hlt    
  0x00007f003f2bddb4: hlt    
  0x00007f003f2bddb5: hlt    
  0x00007f003f2bddb6: hlt    
  0x00007f003f2bddb7: hlt    
<nmethod compile_id='93' compiler='C1' level='3' entry='0x00007f003f2bd920' size='1976' address='0x00007f003f2bd790' relocation_offset='312' insts_offset='400' stub_offset='1392' scopes_data_offset='1592' scopes_pcs_offset='1744' dependencies_offset='1952' nul_chk_table_offset='1960' metadata_offset='1576' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='1534' iicount='1534' stamp='0.464'/>
----------------------------------------------------------------------
java/lang/ClassLoader.checkName  [0x00007f003f2be160, 0x00007f003f2be6d8]  1400 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003877eb00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;
  # this:     rsi:rsi   = &apos;java/lang/ClassLoader&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x60]  (sp of caller)
  0x00007f003f2be160: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2be164: shl    r10,0x3
  0x00007f003f2be168: cmp    r10,rax
  0x00007f003f2be16b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2be171: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2be17c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2be180: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2be187: push   rbp
  0x00007f003f2be188: sub    rsp,0x50
  0x00007f003f2be18c: movabs rcx,0x7f0038a70ef0  ;   {metadata(method data for {method} {0x00007f003877eb00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2be196: mov    edi,DWORD PTR [rcx+0xfc]
  0x00007f003f2be19c: add    edi,0x8
  0x00007f003f2be19f: mov    DWORD PTR [rcx+0xfc],edi
  0x00007f003f2be1a5: movabs rcx,0x7f003877eb00  ;   {metadata({method} {0x00007f003877eb00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2be1af: and    edi,0x1ff8
  0x00007f003f2be1b5: cmp    edi,0x0
  0x00007f003f2be1b8: je     0x00007f003f2be536  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@0 (line 869)

  0x00007f003f2be1be: cmp    rdx,0x0
  0x00007f003f2be1c2: movabs rcx,0x7f0038a70ef0  ;   {metadata(method data for {method} {0x00007f003877eb00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2be1cc: movabs rsi,0x130
  0x00007f003f2be1d6: je     0x00007f003f2be1e6
  0x00007f003f2be1dc: movabs rsi,0x140
  0x00007f003f2be1e6: mov    rdi,QWORD PTR [rcx+rsi*1]
  0x00007f003f2be1ea: lea    rdi,[rdi+0x1]
  0x00007f003f2be1ee: mov    QWORD PTR [rcx+rsi*1],rdi
  0x00007f003f2be1f2: je     0x00007f003f2be4d9  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@1 (line 869)

  0x00007f003f2be1f8: cmp    rax,QWORD PTR [rdx]  ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@5 (line 869)
                                                ; implicit exception: dispatches to 0x00007f003f2be54d
  0x00007f003f2be1fb: mov    rcx,rdx
  0x00007f003f2be1fe: movabs rsi,0x7f0038a70ef0  ;   {metadata(method data for {method} {0x00007f003877eb00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2be208: add    QWORD PTR [rsi+0x150],0x1
  0x00007f003f2be210: movabs rcx,0x7f003898eaf8  ;   {metadata(method data for {method} {0x00007f003876a538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2be21a: mov    esi,DWORD PTR [rcx+0xfc]
  0x00007f003f2be220: add    esi,0x8
  0x00007f003f2be223: mov    DWORD PTR [rcx+0xfc],esi
  0x00007f003f2be229: movabs rcx,0x7f003876a538  ;   {metadata({method} {0x00007f003876a538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2be233: and    esi,0x7ffff8
  0x00007f003f2be239: cmp    esi,0x0
  0x00007f003f2be23c: je     0x00007f003f2be552
  0x00007f003f2be242: mov    ecx,DWORD PTR [rdx+0xc]
  0x00007f003f2be245: shl    rcx,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.ClassLoader::checkName@5 (line 869)

  0x00007f003f2be249: mov    ecx,DWORD PTR [rcx+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.ClassLoader::checkName@5 (line 869)
                                                ; implicit exception: dispatches to 0x00007f003f2be569
  0x00007f003f2be24c: cmp    ecx,0x0
  0x00007f003f2be24f: movabs rcx,0x7f0038a70ef0  ;   {metadata(method data for {method} {0x00007f003877eb00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2be259: movabs rsi,0x1e8
  0x00007f003f2be263: jne    0x00007f003f2be273
  0x00007f003f2be269: movabs rsi,0x1f8
  0x00007f003f2be273: mov    rdi,QWORD PTR [rcx+rsi*1]
  0x00007f003f2be277: lea    rdi,[rdi+0x1]
  0x00007f003f2be27b: mov    QWORD PTR [rcx+rsi*1],rdi
  0x00007f003f2be27f: je     0x00007f003f2be4d9  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@8 (line 869)

  0x00007f003f2be285: mov    rcx,rdx
  0x00007f003f2be288: movabs rsi,0x7f0038a70ef0  ;   {metadata(method data for {method} {0x00007f003877eb00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2be292: add    QWORD PTR [rsi+0x208],0x1
  0x00007f003f2be29a: movabs rcx,0x7f0038a014d0  ;   {metadata(method data for {method} {0x00007f003876bee8} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2be2a4: mov    esi,DWORD PTR [rcx+0xfc]
  0x00007f003f2be2aa: add    esi,0x8
  0x00007f003f2be2ad: mov    DWORD PTR [rcx+0xfc],esi
  0x00007f003f2be2b3: movabs rcx,0x7f003876bee8  ;   {metadata({method} {0x00007f003876bee8} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2be2bd: and    esi,0x7ffff8
  0x00007f003f2be2c3: cmp    esi,0x0
  0x00007f003f2be2c6: je     0x00007f003f2be56e
  0x00007f003f2be2cc: mov    rcx,rdx
  0x00007f003f2be2cf: movabs rsi,0x7f0038a014d0  ;   {metadata(method data for {method} {0x00007f003876bee8} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2be2d9: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2be2e1: mov    rdi,rdx
  0x00007f003f2be2e4: mov    edx,0x2f
  0x00007f003f2be2e9: mov    ecx,0x0
  0x00007f003f2be2ee: mov    rsi,rdi            ;*invokevirtual indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ; - java.lang.ClassLoader::checkName@16 (line 871)

  0x00007f003f2be2f1: mov    QWORD PTR [rsp+0x38],rdi
  0x00007f003f2be2f6: nop
  0x00007f003f2be2f7: call   0x00007f003f1c4d60  ; OopMap{[56]=Oop off=412}
                                                ;*invokevirtual indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ; - java.lang.ClassLoader::checkName@16 (line 871)
                                                ;   {optimized virtual_call}
  0x00007f003f2be2fc: cmp    eax,0xffffffff
  0x00007f003f2be2ff: movabs rax,0x7f0038a70ef0  ;   {metadata(method data for {method} {0x00007f003877eb00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2be309: movabs rdx,0x2a0
  0x00007f003f2be313: jne    0x00007f003f2be323
  0x00007f003f2be319: movabs rdx,0x2b0
  0x00007f003f2be323: mov    rsi,QWORD PTR [rax+rdx*1]
  0x00007f003f2be327: lea    rsi,[rsi+0x1]
  0x00007f003f2be32b: mov    QWORD PTR [rax+rdx*1],rsi
  0x00007f003f2be32f: jne    0x00007f003f2be4c8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@20 (line 871)

  0x00007f003f2be335: movabs rax,0x7f0038a70ef0  ;   {metadata(method data for {method} {0x00007f003877eb00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2be33f: add    QWORD PTR [rax+0x2c0],0x1
  0x00007f003f2be347: movabs rax,0x7f0038a712e0  ;   {metadata(method data for {method} {0x00007f0038874998} &apos;allowArraySyntax&apos; &apos;()Z&apos; in &apos;sun/misc/VM&apos;)}
  0x00007f003f2be351: mov    edx,DWORD PTR [rax+0xfc]
  0x00007f003f2be357: add    edx,0x8
  0x00007f003f2be35a: mov    DWORD PTR [rax+0xfc],edx
  0x00007f003f2be360: movabs rax,0x7f0038874998  ;   {metadata({method} {0x00007f0038874998} &apos;allowArraySyntax&apos; &apos;()Z&apos; in &apos;sun/misc/VM&apos;)}
  0x00007f003f2be36a: and    edx,0x7ffff8
  0x00007f003f2be370: cmp    edx,0x0
  0x00007f003f2be373: je     0x00007f003f2be585
  0x00007f003f2be379: movabs rax,0x670b88a30    ;   {oop(a &apos;java/lang/Class&apos; = &apos;sun/misc/VM&apos;)}
  0x00007f003f2be383: movsx  eax,BYTE PTR [rax+0xa8]  ;*getstatic allowArraySyntax {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.VM::allowArraySyntax@0 (line 232)
                                                ; - java.lang.ClassLoader::checkName@23 (line 872)

  0x00007f003f2be38a: and    eax,0x1
  0x00007f003f2be38d: cmp    eax,0x0
  0x00007f003f2be390: movabs rax,0x7f0038a70ef0  ;   {metadata(method data for {method} {0x00007f003877eb00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2be39a: movabs rdx,0x2d0
  0x00007f003f2be3a4: jne    0x00007f003f2be3b4
  0x00007f003f2be3aa: movabs rdx,0x2e0
  0x00007f003f2be3b4: mov    rsi,QWORD PTR [rax+rdx*1]
  0x00007f003f2be3b8: lea    rsi,[rsi+0x1]
  0x00007f003f2be3bc: mov    QWORD PTR [rax+rdx*1],rsi
  0x00007f003f2be3c0: jne    0x00007f003f2be4b7  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@26 (line 872)

  0x00007f003f2be3c6: mov    rdx,QWORD PTR [rsp+0x38]
  0x00007f003f2be3cb: movabs rax,0x7f0038a70ef0  ;   {metadata(method data for {method} {0x00007f003877eb00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2be3d5: add    QWORD PTR [rax+0x2f0],0x1
  0x00007f003f2be3dd: movabs rax,0x7f00389293b8  ;   {metadata(method data for {method} {0x00007f003876a6b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2be3e7: mov    edx,DWORD PTR [rax+0xfc]
  0x00007f003f2be3ed: add    edx,0x8
  0x00007f003f2be3f0: mov    DWORD PTR [rax+0xfc],edx
  0x00007f003f2be3f6: movabs rax,0x7f003876a6b0  ;   {metadata({method} {0x00007f003876a6b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2be400: and    edx,0x7ffff8
  0x00007f003f2be406: cmp    edx,0x0
  0x00007f003f2be409: je     0x00007f003f2be59c
  0x00007f003f2be40f: movabs rax,0x7f00389293b8  ;   {metadata(method data for {method} {0x00007f003876a6b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2be419: inc    DWORD PTR [rax+0x140]  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)

  0x00007f003f2be41f: mov    rdx,QWORD PTR [rsp+0x38]
  0x00007f003f2be424: mov    eax,DWORD PTR [rdx+0xc]
  0x00007f003f2be427: shl    rax,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)

  0x00007f003f2be42b: mov    edx,DWORD PTR [rax+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)
                                                ; implicit exception: dispatches to 0x00007f003f2be5b3
  0x00007f003f2be42e: cmp    edx,0x0
  0x00007f003f2be431: movabs rdx,0x7f00389293b8  ;   {metadata(method data for {method} {0x00007f003876a6b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2be43b: movabs rsi,0x150
  0x00007f003f2be445: jg     0x00007f003f2be455
  0x00007f003f2be44b: movabs rsi,0x160
  0x00007f003f2be455: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2be459: lea    rdi,[rdi+0x1]
  0x00007f003f2be45d: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2be461: jle    0x00007f003f2be4ea  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)

  0x00007f003f2be467: cmp    DWORD PTR [rax+0xc],0x0
  0x00007f003f2be46e: jbe    0x00007f003f2be5b8
  0x00007f003f2be474: movzx  eax,WORD PTR [rax+0x10]  ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)

  0x00007f003f2be478: and    eax,0xffff
  0x00007f003f2be47e: cmp    eax,0x5b
  0x00007f003f2be481: movabs rax,0x7f0038a70ef0  ;   {metadata(method data for {method} {0x00007f003877eb00} &apos;checkName&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2be48b: movabs rdx,0x388
  0x00007f003f2be495: jne    0x00007f003f2be4a5
  0x00007f003f2be49b: movabs rdx,0x398
  0x00007f003f2be4a5: mov    rsi,QWORD PTR [rax+rdx*1]
  0x00007f003f2be4a9: lea    rsi,[rsi+0x1]
  0x00007f003f2be4ad: mov    QWORD PTR [rax+rdx*1],rsi
  0x00007f003f2be4b1: je     0x00007f003f2be4c8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@36 (line 872)

  0x00007f003f2be4b7: mov    eax,0x1
  0x00007f003f2be4bc: add    rsp,0x50
  0x00007f003f2be4c0: pop    rbp
  0x00007f003f2be4c1: test   DWORD PTR [rip+0x1b103c39],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2be4c7: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@42 (line 874)

  0x00007f003f2be4c8: mov    eax,0x0
  0x00007f003f2be4cd: add    rsp,0x50
  0x00007f003f2be4d1: pop    rbp
  0x00007f003f2be4d2: test   DWORD PTR [rip+0x1b103c28],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2be4d8: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@40 (line 873)

  0x00007f003f2be4d9: mov    eax,0x1
  0x00007f003f2be4de: add    rsp,0x50
  0x00007f003f2be4e2: pop    rbp
  0x00007f003f2be4e3: test   DWORD PTR [rip+0x1b103c17],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2be4e9: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@12 (line 870)

  0x00007f003f2be4ea: nop    WORD PTR [rax+rax*1+0x0]
  0x00007f003f2be4f0: jmp    0x00007f003f2be5d4  ;   {no_reloc}
  0x00007f003f2be4f5: add    BYTE PTR [rax],al
  0x00007f003f2be4f7: add    BYTE PTR [rax],al
  0x00007f003f2be4f9: add    cl,ch
  0x00007f003f2be4fb: fild   WORD PTR [rax]
  0x00007f003f2be4fd: add    BYTE PTR [rax],al  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)

  0x00007f003f2be4ff: mov    rdx,rax
  0x00007f003f2be502: movabs rsi,0x7f00389293b8  ;   {metadata(method data for {method} {0x00007f003876a6b0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2be50c: add    QWORD PTR [rsi+0x170],0x1
  0x00007f003f2be514: mov    edx,0x0
  0x00007f003f2be519: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)

  0x00007f003f2be51c: mov    QWORD PTR [rsp+0x40],rax
  0x00007f003f2be521: nop
  0x00007f003f2be522: nop
  0x00007f003f2be523: nop
  0x00007f003f2be524: nop
  0x00007f003f2be525: nop
  0x00007f003f2be526: nop
  0x00007f003f2be527: call   0x00007f003f1c4d60  ; OopMap{[64]=Oop off=972}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)
                                                ;   {optimized virtual_call}
  0x00007f003f2be52c: mov    rax,QWORD PTR [rsp+0x40]
  0x00007f003f2be531: jmp    0x00007f003f2be616
  0x00007f003f2be536: mov    QWORD PTR [rsp+0x8],rcx
  0x00007f003f2be53b: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2be543: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop off=1000}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::checkName@-1 (line 869)
                                                ;   {runtime_call}
  0x00007f003f2be548: jmp    0x00007f003f2be1be
  0x00007f003f2be54d: call   0x00007f003f279000  ; OopMap{rdx=Oop off=1010}
                                                ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::checkName@5 (line 869)
                                                ;   {runtime_call}
  0x00007f003f2be552: mov    QWORD PTR [rsp+0x8],rcx
  0x00007f003f2be557: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2be55f: call   0x00007f003f27d5e0  ; OopMap{rdx=Oop off=1028}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.ClassLoader::checkName@5 (line 869)
                                                ;   {runtime_call}
  0x00007f003f2be564: jmp    0x00007f003f2be242
  0x00007f003f2be569: call   0x00007f003f279000  ; OopMap{rdx=Oop off=1038}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.ClassLoader::checkName@5 (line 869)
                                                ;   {runtime_call}
  0x00007f003f2be56e: mov    QWORD PTR [rsp+0x8],rcx
  0x00007f003f2be573: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2be57b: call   0x00007f003f27d5e0  ; OopMap{rdx=Oop off=1056}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ; - java.lang.ClassLoader::checkName@16 (line 871)
                                                ;   {runtime_call}
  0x00007f003f2be580: jmp    0x00007f003f2be2cc
  0x00007f003f2be585: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2be58a: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2be592: call   0x00007f003f27d5e0  ; OopMap{[56]=Oop off=1079}
                                                ;*synchronization entry
                                                ; - sun.misc.VM::allowArraySyntax@-1 (line 232)
                                                ; - java.lang.ClassLoader::checkName@23 (line 872)
                                                ;   {runtime_call}
  0x00007f003f2be597: jmp    0x00007f003f2be379
  0x00007f003f2be59c: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2be5a1: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2be5a9: call   0x00007f003f27d5e0  ; OopMap{[56]=Oop off=1102}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)
                                                ;   {runtime_call}
  0x00007f003f2be5ae: jmp    0x00007f003f2be40f
  0x00007f003f2be5b3: call   0x00007f003f279000  ; OopMap{rax=Oop off=1112}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)
                                                ;   {runtime_call}
  0x00007f003f2be5b8: mov    QWORD PTR [rsp],0x0
  0x00007f003f2be5c0: call   0x00007f003f278940  ; OopMap{rax=Oop off=1125}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)
                                                ;   {runtime_call}
  0x00007f003f2be5c5: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2be5cf: mov    eax,0xa050f00
  0x00007f003f2be5d4: call   0x00007f003f27c5e0  ; OopMap{off=1145}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)
                                                ;   {runtime_call}
  0x00007f003f2be5d9: jmp    0x00007f003f2be4f0
  0x00007f003f2be5de: mov    rdx,rdx
  0x00007f003f2be5e1: call   0x00007f003f2794a0  ; OopMap{off=1158}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.lang.ClassLoader::checkName@31 (line 872)
                                                ;   {runtime_call}
  0x00007f003f2be5e6: jmp    0x00007f003f2be4ff
  0x00007f003f2be5eb: nop
  0x00007f003f2be5ec: nop
  0x00007f003f2be5ed: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2be5f4: movabs r10,0x0
  0x00007f003f2be5fe: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2be605: movabs r10,0x0
  0x00007f003f2be60f: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2be616: add    rsp,0x50
  0x00007f003f2be61a: pop    rbp
  0x00007f003f2be61b: jmp    0x00007f003f2785a0  ;   {runtime_call}
[Stub Code]
  0x00007f003f2be620: nop                       ;   {no_reloc}
  0x00007f003f2be621: nop
  0x00007f003f2be622: nop
  0x00007f003f2be623: nop
  0x00007f003f2be624: nop
  0x00007f003f2be625: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2be62f: jmp    0x00007f003f2be62f  ;   {runtime_call}
  0x00007f003f2be634: nop
  0x00007f003f2be635: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2be63f: jmp    0x00007f003f2be63f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2be644: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2be649: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2be64e: sub    rsp,0x80
  0x00007f003f2be655: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2be65a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2be65f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2be664: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2be669: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2be66e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2be673: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2be678: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2be67d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2be682: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2be687: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2be68c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2be691: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2be696: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2be69b: mov    QWORD PTR [rsp],r15
  0x00007f003f2be69f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2be6a9: movabs rsi,0x7f003f2be649  ;   {internal_word}
  0x00007f003f2be6b3: mov    rdx,rsp
  0x00007f003f2be6b6: and    rsp,0xfffffffffffffff0
  0x00007f003f2be6ba: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2be6bf: hlt    
[Deopt Handler Code]
  0x00007f003f2be6c0: movabs r10,0x7f003f2be6c0  ;   {section_word}
  0x00007f003f2be6ca: push   r10
  0x00007f003f2be6cc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2be6d1: hlt    
  0x00007f003f2be6d2: hlt    
  0x00007f003f2be6d3: hlt    
  0x00007f003f2be6d4: hlt    
  0x00007f003f2be6d5: hlt    
  0x00007f003f2be6d6: hlt    
  0x00007f003f2be6d7: hlt    
<nmethod compile_id='100' compiler='C1' level='3' entry='0x00007f003f2be160' size='2832' address='0x00007f003f2bdf90' relocation_offset='312' insts_offset='464' stub_offset='1680' scopes_data_offset='1904' scopes_pcs_offset='2216' dependencies_offset='2792' nul_chk_table_offset='2800' metadata_offset='1864' method='java/lang/ClassLoader checkName (Ljava/lang/String;)Z' bytes='43' count='516' iicount='516' stamp='0.468'/>
----------------------------------------------------------------------
sun/misc/VM.allowArraySyntax  [0x00007f003f2bec40, 0x00007f003f2bed90]  336 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f0038874998} &apos;allowArraySyntax&apos; &apos;()Z&apos; in &apos;sun/misc/VM&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2bec40: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2bec47: push   rbp
  0x00007f003f2bec48: sub    rsp,0x30
  0x00007f003f2bec4c: movabs rax,0x7f0038a712e0  ;   {metadata(method data for {method} {0x00007f0038874998} &apos;allowArraySyntax&apos; &apos;()Z&apos; in &apos;sun/misc/VM&apos;)}
  0x00007f003f2bec56: mov    esi,DWORD PTR [rax+0xfc]
  0x00007f003f2bec5c: add    esi,0x8
  0x00007f003f2bec5f: mov    DWORD PTR [rax+0xfc],esi
  0x00007f003f2bec65: movabs rax,0x7f0038874998  ;   {metadata({method} {0x00007f0038874998} &apos;allowArraySyntax&apos; &apos;()Z&apos; in &apos;sun/misc/VM&apos;)}
  0x00007f003f2bec6f: and    esi,0x1ff8
  0x00007f003f2bec75: cmp    esi,0x0
  0x00007f003f2bec78: je     0x00007f003f2bec9e
  0x00007f003f2bec7e: movabs rax,0x670b88a30    ;   {oop(a &apos;java/lang/Class&apos; = &apos;sun/misc/VM&apos;)}
  0x00007f003f2bec88: movsx  eax,BYTE PTR [rax+0xa8]  ;*getstatic allowArraySyntax {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.VM::allowArraySyntax@0 (line 232)

  0x00007f003f2bec8f: and    eax,0x1
  0x00007f003f2bec92: add    rsp,0x30
  0x00007f003f2bec96: pop    rbp
  0x00007f003f2bec97: test   DWORD PTR [rip+0x1b103463],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2bec9d: ret    
  0x00007f003f2bec9e: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2beca3: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2becab: call   0x00007f003f27d5e0  ; OopMap{off=112}
                                                ;*synchronization entry
                                                ; - sun.misc.VM::allowArraySyntax@-1 (line 232)
                                                ;   {runtime_call}
  0x00007f003f2becb0: jmp    0x00007f003f2bec7e
  0x00007f003f2becb2: nop
  0x00007f003f2becb3: nop
  0x00007f003f2becb4: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2becbb: movabs r10,0x0
  0x00007f003f2becc5: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2beccc: movabs r10,0x0
  0x00007f003f2becd6: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2becdd: add    rsp,0x30
  0x00007f003f2bece1: pop    rbp
  0x00007f003f2bece2: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2bece7: hlt    
  0x00007f003f2bece8: hlt    
  0x00007f003f2bece9: hlt    
  0x00007f003f2becea: hlt    
  0x00007f003f2beceb: hlt    
  0x00007f003f2becec: hlt    
  0x00007f003f2beced: hlt    
  0x00007f003f2becee: hlt    
  0x00007f003f2becef: hlt    
  0x00007f003f2becf0: hlt    
  0x00007f003f2becf1: hlt    
  0x00007f003f2becf2: hlt    
  0x00007f003f2becf3: hlt    
  0x00007f003f2becf4: hlt    
  0x00007f003f2becf5: hlt    
  0x00007f003f2becf6: hlt    
  0x00007f003f2becf7: hlt    
  0x00007f003f2becf8: hlt    
  0x00007f003f2becf9: hlt    
  0x00007f003f2becfa: hlt    
  0x00007f003f2becfb: hlt    
  0x00007f003f2becfc: hlt    
  0x00007f003f2becfd: hlt    
  0x00007f003f2becfe: hlt    
  0x00007f003f2becff: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2bed00: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2bed05: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2bed0a: sub    rsp,0x80
  0x00007f003f2bed11: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2bed16: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2bed1b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2bed20: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2bed25: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2bed2a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2bed2f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2bed34: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2bed39: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2bed3e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2bed43: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2bed48: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2bed4d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2bed52: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2bed57: mov    QWORD PTR [rsp],r15
  0x00007f003f2bed5b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2bed65: movabs rsi,0x7f003f2bed05  ;   {internal_word}
  0x00007f003f2bed6f: mov    rdx,rsp
  0x00007f003f2bed72: and    rsp,0xfffffffffffffff0
  0x00007f003f2bed76: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2bed7b: hlt    
[Deopt Handler Code]
  0x00007f003f2bed7c: movabs r10,0x7f003f2bed7c  ;   {section_word}
  0x00007f003f2bed86: push   r10
  0x00007f003f2bed88: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2bed8d: hlt    
  0x00007f003f2bed8e: hlt    
  0x00007f003f2bed8f: hlt    
<nmethod compile_id='101' compiler='C1' level='3' entry='0x00007f003f2bec40' size='800' address='0x00007f003f2bead0' relocation_offset='312' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='sun/misc/VM allowArraySyntax ()Z' bytes='4' count='516' iicount='516' stamp='0.469'/>
<writer thread='139637818533632'/>
<task_queued compile_id='102' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.469' comment='tiered' hot_count='128'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/net/URLStreamHandler.getDefaultPort  [0x00007f003f2bef80, 0x00007f003f2bf090]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038964d90} &apos;getDefaultPort&apos; &apos;()I&apos; in &apos;java/net/URLStreamHandler&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2bef80: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2bef84: shl    r10,0x3
  0x00007f003f2bef88: cmp    r10,rax
  0x00007f003f2bef8b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2bef91: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2bef9c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2befa0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2befa7: push   rbp
  0x00007f003f2befa8: sub    rsp,0x30           ;*iconst_m1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URLStreamHandler::getDefaultPort@0 (line 320)

  0x00007f003f2befac: mov    eax,0xffffffff
  0x00007f003f2befb1: add    rsp,0x30
  0x00007f003f2befb5: pop    rbp
  0x00007f003f2befb6: test   DWORD PTR [rip+0x1b103144],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2befbc: ret    
  0x00007f003f2befbd: nop
  0x00007f003f2befbe: nop
  0x00007f003f2befbf: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2befc6: movabs r10,0x0
  0x00007f003f2befd0: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2befd7: movabs r10,0x0
  0x00007f003f2befe1: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2befe8: add    rsp,0x30
  0x00007f003f2befec: pop    rbp
  0x00007f003f2befed: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2beff2: hlt    
  0x00007f003f2beff3: hlt    
  0x00007f003f2beff4: hlt    
  0x00007f003f2beff5: hlt    
  0x00007f003f2beff6: hlt    
  0x00007f003f2beff7: hlt    
  0x00007f003f2beff8: hlt    
  0x00007f003f2beff9: hlt    
  0x00007f003f2beffa: hlt    
  0x00007f003f2beffb: hlt    
  0x00007f003f2beffc: hlt    
  0x00007f003f2beffd: hlt    
  0x00007f003f2beffe: hlt    
  0x00007f003f2befff: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2bf000: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2bf005: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2bf00a: sub    rsp,0x80
  0x00007f003f2bf011: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2bf016: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2bf01b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2bf020: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2bf025: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2bf02a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2bf02f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2bf034: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2bf039: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2bf03e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2bf043: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2bf048: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2bf04d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2bf052: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2bf057: mov    QWORD PTR [rsp],r15
  0x00007f003f2bf05b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2bf065: movabs rsi,0x7f003f2bf005  ;   {internal_word}
  0x00007f003f2bf06f: mov    rdx,rsp
  0x00007f003f2bf072: and    rsp,0xfffffffffffffff0
  0x00007f003f2bf076: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2bf07b: hlt    
[Deopt Handler Code]
  0x00007f003f2bf07c: movabs r10,0x7f003f2bf07c  ;   {section_word}
  0x00007f003f2bf086: push   r10
  0x00007f003f2bf088: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2bf08d: hlt    
  0x00007f003f2bf08e: hlt    
  0x00007f003f2bf08f: hlt    
<nmethod compile_id='79' compiler='C1' level='1' entry='0x00007f003f2bef80' size='712' address='0x00007f003f2bee10' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='656' dependencies_offset='704' metadata_offset='640' method='java/net/URLStreamHandler getDefaultPort ()I' bytes='2' count='217' iicount='217' stamp='0.470'/>
<writer thread='139637818533632'/>
<task_queued compile_id='103' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='599' backedge_count='5' iicount='599' level='3' stamp='0.470' comment='tiered' hot_count='599'/>
<task_queued compile_id='104' method='java/lang/StringCoding$StringEncoder requestedCharsetName ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.470' comment='tiered' hot_count='128'/>
[Loaded sun.misc.URLClassPath$2 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$2 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/HashMap.getNode  [0x00007f003f2bf300, 0x00007f003f2c0368]  4200 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x00007f003f2bf300: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2bf304: shl    r10,0x3
  0x00007f003f2bf308: cmp    r10,rax
  0x00007f003f2bf30b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2bf311: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2bf31c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2bf320: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2bf327: push   rbp
  0x00007f003f2bf328: sub    rsp,0x50
  0x00007f003f2bf32c: mov    DWORD PTR [rsp+0x28],edx
  0x00007f003f2bf330: mov    QWORD PTR [rsp+0x30],rcx
  0x00007f003f2bf335: movabs rdi,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bf33f: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2bf345: add    ebx,0x8
  0x00007f003f2bf348: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2bf34e: movabs rdi,0x7f003886d4d8  ;   {metadata({method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bf358: and    ebx,0x1ff8
  0x00007f003f2bf35e: cmp    ebx,0x0
  0x00007f003f2bf361: je     0x00007f003f2c0207  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@0 (line 568)

  0x00007f003f2bf367: mov    esi,DWORD PTR [rsi+0x24]
  0x00007f003f2bf36a: shl    rsi,0x3            ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@1 (line 568)

  0x00007f003f2bf36e: cmp    rsi,0x0
  0x00007f003f2bf372: movabs rdi,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bf37c: movabs rbx,0x130
  0x00007f003f2bf386: je     0x00007f003f2bf396
  0x00007f003f2bf38c: movabs rbx,0x140
  0x00007f003f2bf396: mov    rax,QWORD PTR [rdi+rbx*1]
  0x00007f003f2bf39a: lea    rax,[rax+0x1]
  0x00007f003f2bf39e: mov    QWORD PTR [rdi+rbx*1],rax
  0x00007f003f2bf3a2: je     0x00007f003f2bfd9a  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@6 (line 568)

  0x00007f003f2bf3a8: mov    edi,DWORD PTR [rsi+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@10 (line 568)
                                                ; implicit exception: dispatches to 0x00007f003f2c021e
  0x00007f003f2bf3ab: cmp    edi,0x0
  0x00007f003f2bf3ae: movabs rbx,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bf3b8: movabs rax,0x150
  0x00007f003f2bf3c2: jle    0x00007f003f2bf3d2
  0x00007f003f2bf3c8: movabs rax,0x160
  0x00007f003f2bf3d2: mov    r8,QWORD PTR [rbx+rax*1]
  0x00007f003f2bf3d6: lea    r8,[r8+0x1]
  0x00007f003f2bf3da: mov    QWORD PTR [rbx+rax*1],r8
  0x00007f003f2bf3de: jle    0x00007f003f2bfd9a  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@14 (line 568)

  0x00007f003f2bf3e4: dec    edi
  0x00007f003f2bf3e6: and    rdi,rdx
  0x00007f003f2bf3e9: movsxd rbx,edi
  0x00007f003f2bf3ec: cmp    edi,DWORD PTR [rsi+0xc]
  0x00007f003f2bf3ef: jae    0x00007f003f2c0223
  0x00007f003f2bf3f5: mov    edi,DWORD PTR [rsi+rbx*4+0x10]
  0x00007f003f2bf3f9: shl    rdi,0x3            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@24 (line 568)

  0x00007f003f2bf3fd: cmp    rdi,0x0
  0x00007f003f2bf401: movabs rsi,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bf40b: movabs rbx,0x170
  0x00007f003f2bf415: je     0x00007f003f2bf425
  0x00007f003f2bf41b: movabs rbx,0x180
  0x00007f003f2bf425: mov    rax,QWORD PTR [rsi+rbx*1]
  0x00007f003f2bf429: lea    rax,[rax+0x1]
  0x00007f003f2bf42d: mov    QWORD PTR [rsi+rbx*1],rax
  0x00007f003f2bf431: je     0x00007f003f2bfd9a  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@28 (line 568)

  0x00007f003f2bf437: mov    esi,DWORD PTR [rdi+0xc]  ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@33 (line 570)
                                                ; implicit exception: dispatches to 0x00007f003f2c022c
  0x00007f003f2bf43a: cmp    esi,edx
  0x00007f003f2bf43c: movabs rsi,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bf446: movabs rbx,0x190
  0x00007f003f2bf450: jne    0x00007f003f2bf460
  0x00007f003f2bf456: movabs rbx,0x1a0
  0x00007f003f2bf460: mov    rax,QWORD PTR [rsi+rbx*1]
  0x00007f003f2bf464: lea    rax,[rax+0x1]
  0x00007f003f2bf468: mov    QWORD PTR [rsi+rbx*1],rax
  0x00007f003f2bf46c: jne    0x00007f003f2bf73a  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@37 (line 570)

  0x00007f003f2bf472: mov    esi,DWORD PTR [rdi+0x10]
  0x00007f003f2bf475: shl    rsi,0x3            ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@42 (line 570)

  0x00007f003f2bf479: cmp    rsi,rcx
  0x00007f003f2bf47c: movabs rbx,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bf486: movabs rax,0x1b0
  0x00007f003f2bf490: je     0x00007f003f2bf4a0
  0x00007f003f2bf496: movabs rax,0x1c0
  0x00007f003f2bf4a0: mov    r8,QWORD PTR [rbx+rax*1]
  0x00007f003f2bf4a4: lea    r8,[r8+0x1]
  0x00007f003f2bf4a8: mov    QWORD PTR [rbx+rax*1],r8
  0x00007f003f2bf4ac: je     0x00007f003f2c01f8  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@49 (line 570)

  0x00007f003f2bf4b2: cmp    rcx,0x0
  0x00007f003f2bf4b6: movabs rbx,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bf4c0: movabs rax,0x1d0
  0x00007f003f2bf4ca: je     0x00007f003f2bf4da
  0x00007f003f2bf4d0: movabs rax,0x1e0
  0x00007f003f2bf4da: mov    r8,QWORD PTR [rbx+rax*1]
  0x00007f003f2bf4de: lea    r8,[r8+0x1]
  0x00007f003f2bf4e2: mov    QWORD PTR [rbx+rax*1],r8
  0x00007f003f2bf4e6: je     0x00007f003f2bf73a  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@53 (line 570)

  0x00007f003f2bf4ec: mov    QWORD PTR [rsp+0x20],rdi
  0x00007f003f2bf4f1: cmp    rax,QWORD PTR [rcx]  ; implicit exception: dispatches to 0x00007f003f2c0231
  0x00007f003f2bf4f4: mov    rbx,rcx
  0x00007f003f2bf4f7: movabs rax,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bf501: mov    ebx,DWORD PTR [rbx+0x8]
  0x00007f003f2bf504: shl    rbx,0x3
  0x00007f003f2bf508: cmp    rbx,QWORD PTR [rax+0x200]
  0x00007f003f2bf50f: jne    0x00007f003f2bf51e
  0x00007f003f2bf511: add    QWORD PTR [rax+0x208],0x1
  0x00007f003f2bf519: jmp    0x00007f003f2bf6e0
  0x00007f003f2bf51e: cmp    rbx,QWORD PTR [rax+0x210]
  0x00007f003f2bf525: jne    0x00007f003f2bf534
  0x00007f003f2bf527: add    QWORD PTR [rax+0x218],0x1
  0x00007f003f2bf52f: jmp    0x00007f003f2bf6e0
  0x00007f003f2bf534: cmp    rbx,QWORD PTR [rax+0x220]
  0x00007f003f2bf53b: jne    0x00007f003f2bf54a
  0x00007f003f2bf53d: add    QWORD PTR [rax+0x228],0x1
  0x00007f003f2bf545: jmp    0x00007f003f2bf6e0
  0x00007f003f2bf54a: cmp    rbx,QWORD PTR [rax+0x230]
  0x00007f003f2bf551: jne    0x00007f003f2bf560
  0x00007f003f2bf553: add    QWORD PTR [rax+0x238],0x1
  0x00007f003f2bf55b: jmp    0x00007f003f2bf6e0
  0x00007f003f2bf560: cmp    rbx,QWORD PTR [rax+0x240]
  0x00007f003f2bf567: jne    0x00007f003f2bf576
  0x00007f003f2bf569: add    QWORD PTR [rax+0x248],0x1
  0x00007f003f2bf571: jmp    0x00007f003f2bf6e0
  0x00007f003f2bf576: cmp    rbx,QWORD PTR [rax+0x250]
  0x00007f003f2bf57d: jne    0x00007f003f2bf58c
  0x00007f003f2bf57f: add    QWORD PTR [rax+0x258],0x1
  0x00007f003f2bf587: jmp    0x00007f003f2bf6e0
  0x00007f003f2bf58c: cmp    rbx,QWORD PTR [rax+0x260]
  0x00007f003f2bf593: jne    0x00007f003f2bf5a2
  0x00007f003f2bf595: add    QWORD PTR [rax+0x268],0x1
  0x00007f003f2bf59d: jmp    0x00007f003f2bf6e0
  0x00007f003f2bf5a2: cmp    rbx,QWORD PTR [rax+0x270]
  0x00007f003f2bf5a9: jne    0x00007f003f2bf5b8
  0x00007f003f2bf5ab: add    QWORD PTR [rax+0x278],0x1
  0x00007f003f2bf5b3: jmp    0x00007f003f2bf6e0
  0x00007f003f2bf5b8: cmp    QWORD PTR [rax+0x200],0x0
  0x00007f003f2bf5c3: jne    0x00007f003f2bf5dc
  0x00007f003f2bf5c5: mov    QWORD PTR [rax+0x200],rbx
  0x00007f003f2bf5cc: mov    QWORD PTR [rax+0x208],0x1
  0x00007f003f2bf5d7: jmp    0x00007f003f2bf6e0
  0x00007f003f2bf5dc: cmp    QWORD PTR [rax+0x210],0x0
  0x00007f003f2bf5e7: jne    0x00007f003f2bf600
  0x00007f003f2bf5e9: mov    QWORD PTR [rax+0x210],rbx
  0x00007f003f2bf5f0: mov    QWORD PTR [rax+0x218],0x1
  0x00007f003f2bf5fb: jmp    0x00007f003f2bf6e0
  0x00007f003f2bf600: cmp    QWORD PTR [rax+0x220],0x0
  0x00007f003f2bf60b: jne    0x00007f003f2bf624
  0x00007f003f2bf60d: mov    QWORD PTR [rax+0x220],rbx
  0x00007f003f2bf614: mov    QWORD PTR [rax+0x228],0x1
  0x00007f003f2bf61f: jmp    0x00007f003f2bf6e0
  0x00007f003f2bf624: cmp    QWORD PTR [rax+0x230],0x0
  0x00007f003f2bf62f: jne    0x00007f003f2bf648
  0x00007f003f2bf631: mov    QWORD PTR [rax+0x230],rbx
  0x00007f003f2bf638: mov    QWORD PTR [rax+0x238],0x1
  0x00007f003f2bf643: jmp    0x00007f003f2bf6e0
  0x00007f003f2bf648: cmp    QWORD PTR [rax+0x240],0x0
  0x00007f003f2bf653: jne    0x00007f003f2bf66c
  0x00007f003f2bf655: mov    QWORD PTR [rax+0x240],rbx
  0x00007f003f2bf65c: mov    QWORD PTR [rax+0x248],0x1
  0x00007f003f2bf667: jmp    0x00007f003f2bf6e0
  0x00007f003f2bf66c: cmp    QWORD PTR [rax+0x250],0x0
  0x00007f003f2bf677: jne    0x00007f003f2bf690
  0x00007f003f2bf679: mov    QWORD PTR [rax+0x250],rbx
  0x00007f003f2bf680: mov    QWORD PTR [rax+0x258],0x1
  0x00007f003f2bf68b: jmp    0x00007f003f2bf6e0
  0x00007f003f2bf690: cmp    QWORD PTR [rax+0x260],0x0
  0x00007f003f2bf69b: jne    0x00007f003f2bf6b4
  0x00007f003f2bf69d: mov    QWORD PTR [rax+0x260],rbx
  0x00007f003f2bf6a4: mov    QWORD PTR [rax+0x268],0x1
  0x00007f003f2bf6af: jmp    0x00007f003f2bf6e0
  0x00007f003f2bf6b4: cmp    QWORD PTR [rax+0x270],0x0
  0x00007f003f2bf6bf: jne    0x00007f003f2bf6d8
  0x00007f003f2bf6c1: mov    QWORD PTR [rax+0x270],rbx
  0x00007f003f2bf6c8: mov    QWORD PTR [rax+0x278],0x1
  0x00007f003f2bf6d3: jmp    0x00007f003f2bf6e0
  0x00007f003f2bf6d8: add    QWORD PTR [rax+0x1f0],0x1
  0x00007f003f2bf6e0: mov    rdx,rsi
  0x00007f003f2bf6e3: mov    rsi,rcx            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@59 (line 571)

  0x00007f003f2bf6e6: nop
  0x00007f003f2bf6e7: nop
  0x00007f003f2bf6e8: nop
  0x00007f003f2bf6e9: nop
  0x00007f003f2bf6ea: nop
  0x00007f003f2bf6eb: nop
  0x00007f003f2bf6ec: nop
  0x00007f003f2bf6ed: movabs rax,0xffffffffffffffff
  0x00007f003f2bf6f7: call   0x00007f003f1c4f60  ; OopMap{[32]=Oop [48]=Oop off=1020}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@59 (line 571)
                                                ;   {virtual_call}
  0x00007f003f2bf6fc: cmp    eax,0x0
  0x00007f003f2bf6ff: movabs rdx,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bf709: movabs rsi,0x288
  0x00007f003f2bf713: je     0x00007f003f2bf723
  0x00007f003f2bf719: movabs rsi,0x298
  0x00007f003f2bf723: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2bf727: lea    rdi,[rdi+0x1]
  0x00007f003f2bf72b: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2bf72f: mov    rdi,QWORD PTR [rsp+0x20]
  0x00007f003f2bf734: jne    0x00007f003f2c01f8  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@62 (line 571)

  0x00007f003f2bf73a: mov    edx,DWORD PTR [rdi+0x18]
  0x00007f003f2bf73d: shl    rdx,0x3            ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@70 (line 573)

  0x00007f003f2bf741: cmp    rdx,0x0
  0x00007f003f2bf745: movabs rsi,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bf74f: movabs rbx,0x2a8
  0x00007f003f2bf759: je     0x00007f003f2bf769
  0x00007f003f2bf75f: movabs rbx,0x2b8
  0x00007f003f2bf769: mov    rax,QWORD PTR [rsi+rbx*1]
  0x00007f003f2bf76d: lea    rax,[rax+0x1]
  0x00007f003f2bf771: mov    QWORD PTR [rsi+rbx*1],rax
  0x00007f003f2bf775: je     0x00007f003f2bfd9a  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@76 (line 573)

  0x00007f003f2bf77b: cmp    rdi,0x0
  0x00007f003f2bf77f: jne    0x00007f003f2bf79a
  0x00007f003f2bf781: movabs rax,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bf78b: or     DWORD PTR [rax+0x2c0],0x100
  0x00007f003f2bf795: jmp    0x00007f003f2bf9b6
  0x00007f003f2bf79a: movabs rcx,0x7c0031710    ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00007f003f2bf7a4: mov    ebx,DWORD PTR [rdi+0x8]
  0x00007f003f2bf7a7: shl    rbx,0x3
  0x00007f003f2bf7ab: cmp    rcx,rbx
  0x00007f003f2bf7ae: jne    0x00007f003f2bf99a
  0x00007f003f2bf7b4: movabs rax,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bf7be: mov    ecx,DWORD PTR [rdi+0x8]
  0x00007f003f2bf7c1: shl    rcx,0x3
  0x00007f003f2bf7c5: cmp    rcx,QWORD PTR [rax+0x2d8]
  0x00007f003f2bf7cc: jne    0x00007f003f2bf7db
  0x00007f003f2bf7ce: add    QWORD PTR [rax+0x2e0],0x1
  0x00007f003f2bf7d6: jmp    0x00007f003f2bf9bb
  0x00007f003f2bf7db: cmp    rcx,QWORD PTR [rax+0x2e8]
  0x00007f003f2bf7e2: jne    0x00007f003f2bf7f1
  0x00007f003f2bf7e4: add    QWORD PTR [rax+0x2f0],0x1
  0x00007f003f2bf7ec: jmp    0x00007f003f2bf9bb
  0x00007f003f2bf7f1: cmp    rcx,QWORD PTR [rax+0x2f8]
  0x00007f003f2bf7f8: jne    0x00007f003f2bf807
  0x00007f003f2bf7fa: add    QWORD PTR [rax+0x300],0x1
  0x00007f003f2bf802: jmp    0x00007f003f2bf9bb
  0x00007f003f2bf807: cmp    rcx,QWORD PTR [rax+0x308]
  0x00007f003f2bf80e: jne    0x00007f003f2bf81d
  0x00007f003f2bf810: add    QWORD PTR [rax+0x310],0x1
  0x00007f003f2bf818: jmp    0x00007f003f2bf9bb
  0x00007f003f2bf81d: cmp    rcx,QWORD PTR [rax+0x318]
  0x00007f003f2bf824: jne    0x00007f003f2bf833
  0x00007f003f2bf826: add    QWORD PTR [rax+0x320],0x1
  0x00007f003f2bf82e: jmp    0x00007f003f2bf9bb
  0x00007f003f2bf833: cmp    rcx,QWORD PTR [rax+0x328]
  0x00007f003f2bf83a: jne    0x00007f003f2bf849
  0x00007f003f2bf83c: add    QWORD PTR [rax+0x330],0x1
  0x00007f003f2bf844: jmp    0x00007f003f2bf9bb
  0x00007f003f2bf849: cmp    rcx,QWORD PTR [rax+0x338]
  0x00007f003f2bf850: jne    0x00007f003f2bf85f
  0x00007f003f2bf852: add    QWORD PTR [rax+0x340],0x1
  0x00007f003f2bf85a: jmp    0x00007f003f2bf9bb
  0x00007f003f2bf85f: cmp    rcx,QWORD PTR [rax+0x348]
  0x00007f003f2bf866: jne    0x00007f003f2bf875
  0x00007f003f2bf868: add    QWORD PTR [rax+0x350],0x1
  0x00007f003f2bf870: jmp    0x00007f003f2bf9bb
  0x00007f003f2bf875: cmp    QWORD PTR [rax+0x2d8],0x0
  0x00007f003f2bf880: jne    0x00007f003f2bf899
  0x00007f003f2bf882: mov    QWORD PTR [rax+0x2d8],rcx
  0x00007f003f2bf889: mov    QWORD PTR [rax+0x2e0],0x1
  0x00007f003f2bf894: jmp    0x00007f003f2bf9bb
  0x00007f003f2bf899: cmp    QWORD PTR [rax+0x2e8],0x0
  0x00007f003f2bf8a4: jne    0x00007f003f2bf8bd
  0x00007f003f2bf8a6: mov    QWORD PTR [rax+0x2e8],rcx
  0x00007f003f2bf8ad: mov    QWORD PTR [rax+0x2f0],0x1
  0x00007f003f2bf8b8: jmp    0x00007f003f2bf9bb
  0x00007f003f2bf8bd: cmp    QWORD PTR [rax+0x2f8],0x0
  0x00007f003f2bf8c8: jne    0x00007f003f2bf8e1
  0x00007f003f2bf8ca: mov    QWORD PTR [rax+0x2f8],rcx
  0x00007f003f2bf8d1: mov    QWORD PTR [rax+0x300],0x1
  0x00007f003f2bf8dc: jmp    0x00007f003f2bf9bb
  0x00007f003f2bf8e1: cmp    QWORD PTR [rax+0x308],0x0
  0x00007f003f2bf8ec: jne    0x00007f003f2bf905
  0x00007f003f2bf8ee: mov    QWORD PTR [rax+0x308],rcx
  0x00007f003f2bf8f5: mov    QWORD PTR [rax+0x310],0x1
  0x00007f003f2bf900: jmp    0x00007f003f2bf9bb
  0x00007f003f2bf905: cmp    QWORD PTR [rax+0x318],0x0
  0x00007f003f2bf910: jne    0x00007f003f2bf929
  0x00007f003f2bf912: mov    QWORD PTR [rax+0x318],rcx
  0x00007f003f2bf919: mov    QWORD PTR [rax+0x320],0x1
  0x00007f003f2bf924: jmp    0x00007f003f2bf9bb
  0x00007f003f2bf929: cmp    QWORD PTR [rax+0x328],0x0
  0x00007f003f2bf934: jne    0x00007f003f2bf94d
  0x00007f003f2bf936: mov    QWORD PTR [rax+0x328],rcx
  0x00007f003f2bf93d: mov    QWORD PTR [rax+0x330],0x1
  0x00007f003f2bf948: jmp    0x00007f003f2bf9bb
  0x00007f003f2bf94d: cmp    QWORD PTR [rax+0x338],0x0
  0x00007f003f2bf958: jne    0x00007f003f2bf971
  0x00007f003f2bf95a: mov    QWORD PTR [rax+0x338],rcx
  0x00007f003f2bf961: mov    QWORD PTR [rax+0x340],0x1
  0x00007f003f2bf96c: jmp    0x00007f003f2bf9bb
  0x00007f003f2bf971: cmp    QWORD PTR [rax+0x348],0x0
  0x00007f003f2bf97c: jne    0x00007f003f2bf995
  0x00007f003f2bf97e: mov    QWORD PTR [rax+0x348],rcx
  0x00007f003f2bf985: mov    QWORD PTR [rax+0x350],0x1
  0x00007f003f2bf990: jmp    0x00007f003f2bf9bb
  0x00007f003f2bf995: jmp    0x00007f003f2bf9bb
  0x00007f003f2bf99a: movabs rax,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bf9a4: sub    QWORD PTR [rax+0x2c8],0x1
  0x00007f003f2bf9ac: jmp    0x00007f003f2bf9b6
  0x00007f003f2bf9b1: jmp    0x00007f003f2bf9bb
  0x00007f003f2bf9b6: xor    rsi,rsi
  0x00007f003f2bf9b9: jmp    0x00007f003f2bf9c5
  0x00007f003f2bf9bb: movabs rsi,0x1            ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@81 (line 574)

  0x00007f003f2bf9c5: cmp    esi,0x0
  0x00007f003f2bf9c8: movabs rsi,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bf9d2: movabs rbx,0x360
  0x00007f003f2bf9dc: je     0x00007f003f2bf9ec
  0x00007f003f2bf9e2: movabs rbx,0x370
  0x00007f003f2bf9ec: mov    rax,QWORD PTR [rsi+rbx*1]
  0x00007f003f2bf9f0: lea    rax,[rax+0x1]
  0x00007f003f2bf9f4: mov    QWORD PTR [rsi+rbx*1],rax
  0x00007f003f2bf9f8: jne    0x00007f003f2bfdb0  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@84 (line 574)

  0x00007f003f2bf9fe: xchg   ax,ax
  0x00007f003f2bfa00: mov    rcx,QWORD PTR [rsp+0x30]
  0x00007f003f2bfa05: mov    edi,DWORD PTR [rsp+0x28]
  0x00007f003f2bfa09: mov    esi,DWORD PTR [rdx+0xc]  ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@100 (line 577)
                                                ; implicit exception: dispatches to 0x00007f003f2c0236
  0x00007f003f2bfa0c: cmp    esi,edi
  0x00007f003f2bfa0e: movabs rsi,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bfa18: movabs rbx,0x4b0
  0x00007f003f2bfa22: jne    0x00007f003f2bfa32
  0x00007f003f2bfa28: movabs rbx,0x4c0
  0x00007f003f2bfa32: mov    rax,QWORD PTR [rsi+rbx*1]
  0x00007f003f2bfa36: lea    rax,[rax+0x1]
  0x00007f003f2bfa3a: mov    QWORD PTR [rsi+rbx*1],rax
  0x00007f003f2bfa3e: jne    0x00007f003f2bfd0a  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@104 (line 577)

  0x00007f003f2bfa44: mov    esi,DWORD PTR [rdx+0x10]
  0x00007f003f2bfa47: shl    rsi,0x3            ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@109 (line 577)

  0x00007f003f2bfa4b: cmp    rsi,rcx
  0x00007f003f2bfa4e: movabs rbx,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bfa58: movabs rax,0x4d0
  0x00007f003f2bfa62: je     0x00007f003f2bfa72
  0x00007f003f2bfa68: movabs rax,0x4e0
  0x00007f003f2bfa72: mov    r8,QWORD PTR [rbx+rax*1]
  0x00007f003f2bfa76: lea    r8,[r8+0x1]
  0x00007f003f2bfa7a: mov    QWORD PTR [rbx+rax*1],r8
  0x00007f003f2bfa7e: je     0x00007f003f2bfd8b  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@116 (line 577)

  0x00007f003f2bfa84: cmp    rcx,0x0
  0x00007f003f2bfa88: movabs rbx,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bfa92: movabs rax,0x4f0
  0x00007f003f2bfa9c: je     0x00007f003f2bfaac
  0x00007f003f2bfaa2: movabs rax,0x500
  0x00007f003f2bfaac: mov    r8,QWORD PTR [rbx+rax*1]
  0x00007f003f2bfab0: lea    r8,[r8+0x1]
  0x00007f003f2bfab4: mov    QWORD PTR [rbx+rax*1],r8
  0x00007f003f2bfab8: je     0x00007f003f2bfd0a  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@120 (line 577)

  0x00007f003f2bfabe: mov    QWORD PTR [rsp+0x38],rdx
  0x00007f003f2bfac3: cmp    rax,QWORD PTR [rcx]  ; implicit exception: dispatches to 0x00007f003f2c023b
  0x00007f003f2bfac6: mov    rbx,rcx
  0x00007f003f2bfac9: movabs rax,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bfad3: mov    ebx,DWORD PTR [rbx+0x8]
  0x00007f003f2bfad6: shl    rbx,0x3
  0x00007f003f2bfada: cmp    rbx,QWORD PTR [rax+0x520]
  0x00007f003f2bfae1: jne    0x00007f003f2bfaf0
  0x00007f003f2bfae3: add    QWORD PTR [rax+0x528],0x1
  0x00007f003f2bfaeb: jmp    0x00007f003f2bfcb2
  0x00007f003f2bfaf0: cmp    rbx,QWORD PTR [rax+0x530]
  0x00007f003f2bfaf7: jne    0x00007f003f2bfb06
  0x00007f003f2bfaf9: add    QWORD PTR [rax+0x538],0x1
  0x00007f003f2bfb01: jmp    0x00007f003f2bfcb2
  0x00007f003f2bfb06: cmp    rbx,QWORD PTR [rax+0x540]
  0x00007f003f2bfb0d: jne    0x00007f003f2bfb1c
  0x00007f003f2bfb0f: add    QWORD PTR [rax+0x548],0x1
  0x00007f003f2bfb17: jmp    0x00007f003f2bfcb2
  0x00007f003f2bfb1c: cmp    rbx,QWORD PTR [rax+0x550]
  0x00007f003f2bfb23: jne    0x00007f003f2bfb32
  0x00007f003f2bfb25: add    QWORD PTR [rax+0x558],0x1
  0x00007f003f2bfb2d: jmp    0x00007f003f2bfcb2
  0x00007f003f2bfb32: cmp    rbx,QWORD PTR [rax+0x560]
  0x00007f003f2bfb39: jne    0x00007f003f2bfb48
  0x00007f003f2bfb3b: add    QWORD PTR [rax+0x568],0x1
  0x00007f003f2bfb43: jmp    0x00007f003f2bfcb2
  0x00007f003f2bfb48: cmp    rbx,QWORD PTR [rax+0x570]
  0x00007f003f2bfb4f: jne    0x00007f003f2bfb5e
  0x00007f003f2bfb51: add    QWORD PTR [rax+0x578],0x1
  0x00007f003f2bfb59: jmp    0x00007f003f2bfcb2
  0x00007f003f2bfb5e: cmp    rbx,QWORD PTR [rax+0x580]
  0x00007f003f2bfb65: jne    0x00007f003f2bfb74
  0x00007f003f2bfb67: add    QWORD PTR [rax+0x588],0x1
  0x00007f003f2bfb6f: jmp    0x00007f003f2bfcb2
  0x00007f003f2bfb74: cmp    rbx,QWORD PTR [rax+0x590]
  0x00007f003f2bfb7b: jne    0x00007f003f2bfb8a
  0x00007f003f2bfb7d: add    QWORD PTR [rax+0x598],0x1
  0x00007f003f2bfb85: jmp    0x00007f003f2bfcb2
  0x00007f003f2bfb8a: cmp    QWORD PTR [rax+0x520],0x0
  0x00007f003f2bfb95: jne    0x00007f003f2bfbae
  0x00007f003f2bfb97: mov    QWORD PTR [rax+0x520],rbx
  0x00007f003f2bfb9e: mov    QWORD PTR [rax+0x528],0x1
  0x00007f003f2bfba9: jmp    0x00007f003f2bfcb2
  0x00007f003f2bfbae: cmp    QWORD PTR [rax+0x530],0x0
  0x00007f003f2bfbb9: jne    0x00007f003f2bfbd2
  0x00007f003f2bfbbb: mov    QWORD PTR [rax+0x530],rbx
  0x00007f003f2bfbc2: mov    QWORD PTR [rax+0x538],0x1
  0x00007f003f2bfbcd: jmp    0x00007f003f2bfcb2
  0x00007f003f2bfbd2: cmp    QWORD PTR [rax+0x540],0x0
  0x00007f003f2bfbdd: jne    0x00007f003f2bfbf6
  0x00007f003f2bfbdf: mov    QWORD PTR [rax+0x540],rbx
  0x00007f003f2bfbe6: mov    QWORD PTR [rax+0x548],0x1
  0x00007f003f2bfbf1: jmp    0x00007f003f2bfcb2
  0x00007f003f2bfbf6: cmp    QWORD PTR [rax+0x550],0x0
  0x00007f003f2bfc01: jne    0x00007f003f2bfc1a
  0x00007f003f2bfc03: mov    QWORD PTR [rax+0x550],rbx
  0x00007f003f2bfc0a: mov    QWORD PTR [rax+0x558],0x1
  0x00007f003f2bfc15: jmp    0x00007f003f2bfcb2
  0x00007f003f2bfc1a: cmp    QWORD PTR [rax+0x560],0x0
  0x00007f003f2bfc25: jne    0x00007f003f2bfc3e
  0x00007f003f2bfc27: mov    QWORD PTR [rax+0x560],rbx
  0x00007f003f2bfc2e: mov    QWORD PTR [rax+0x568],0x1
  0x00007f003f2bfc39: jmp    0x00007f003f2bfcb2
  0x00007f003f2bfc3e: cmp    QWORD PTR [rax+0x570],0x0
  0x00007f003f2bfc49: jne    0x00007f003f2bfc62
  0x00007f003f2bfc4b: mov    QWORD PTR [rax+0x570],rbx
  0x00007f003f2bfc52: mov    QWORD PTR [rax+0x578],0x1
  0x00007f003f2bfc5d: jmp    0x00007f003f2bfcb2
  0x00007f003f2bfc62: cmp    QWORD PTR [rax+0x580],0x0
  0x00007f003f2bfc6d: jne    0x00007f003f2bfc86
  0x00007f003f2bfc6f: mov    QWORD PTR [rax+0x580],rbx
  0x00007f003f2bfc76: mov    QWORD PTR [rax+0x588],0x1
  0x00007f003f2bfc81: jmp    0x00007f003f2bfcb2
  0x00007f003f2bfc86: cmp    QWORD PTR [rax+0x590],0x0
  0x00007f003f2bfc91: jne    0x00007f003f2bfcaa
  0x00007f003f2bfc93: mov    QWORD PTR [rax+0x590],rbx
  0x00007f003f2bfc9a: mov    QWORD PTR [rax+0x598],0x1
  0x00007f003f2bfca5: jmp    0x00007f003f2bfcb2
  0x00007f003f2bfcaa: add    QWORD PTR [rax+0x510],0x1
  0x00007f003f2bfcb2: mov    rdx,rsi
  0x00007f003f2bfcb5: mov    rsi,rcx            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@126 (line 578)

  0x00007f003f2bfcb8: nop
  0x00007f003f2bfcb9: nop
  0x00007f003f2bfcba: nop
  0x00007f003f2bfcbb: nop
  0x00007f003f2bfcbc: nop
  0x00007f003f2bfcbd: movabs rax,0xffffffffffffffff
  0x00007f003f2bfcc7: call   0x00007f003f1c4f60  ; OopMap{[56]=Oop [48]=Oop off=2508}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@126 (line 578)
                                                ;   {virtual_call}
  0x00007f003f2bfccc: cmp    eax,0x0
  0x00007f003f2bfccf: movabs rax,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bfcd9: movabs rdx,0x5a8
  0x00007f003f2bfce3: je     0x00007f003f2bfcf3
  0x00007f003f2bfce9: movabs rdx,0x5b8
  0x00007f003f2bfcf3: mov    rcx,QWORD PTR [rax+rdx*1]
  0x00007f003f2bfcf7: lea    rcx,[rcx+0x1]
  0x00007f003f2bfcfb: mov    QWORD PTR [rax+rdx*1],rcx
  0x00007f003f2bfcff: mov    rdx,QWORD PTR [rsp+0x38]
  0x00007f003f2bfd04: jne    0x00007f003f2bfd8b  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@129 (line 578)

  0x00007f003f2bfd0a: mov    eax,DWORD PTR [rdx+0x18]
  0x00007f003f2bfd0d: shl    rax,0x3            ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@137 (line 580)

  0x00007f003f2bfd11: movabs rdx,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bfd1b: mov    ecx,DWORD PTR [rdx+0x100]
  0x00007f003f2bfd21: add    ecx,0x8
  0x00007f003f2bfd24: mov    DWORD PTR [rdx+0x100],ecx
  0x00007f003f2bfd2a: movabs rdx,0x7f003886d4d8  ;   {metadata({method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bfd34: and    ecx,0xfff8
  0x00007f003f2bfd3a: cmp    ecx,0x0
  0x00007f003f2bfd3d: je     0x00007f003f2c0240  ; OopMap{[48]=Oop rax=Oop off=2627}
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 580)

  0x00007f003f2bfd43: test   DWORD PTR [rip+0x1b1023b7],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2bfd49: cmp    rax,0x0
  0x00007f003f2bfd4d: movabs rdx,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bfd57: movabs rcx,0x5c8
  0x00007f003f2bfd61: jne    0x00007f003f2bfd71
  0x00007f003f2bfd67: movabs rcx,0x5d8
  0x00007f003f2bfd71: mov    rsi,QWORD PTR [rdx+rcx*1]
  0x00007f003f2bfd75: lea    rsi,[rsi+0x1]
  0x00007f003f2bfd79: mov    QWORD PTR [rdx+rcx*1],rsi
  0x00007f003f2bfd7d: je     0x00007f003f2bfd9a  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 580)

  0x00007f003f2bfd83: mov    rdx,rax
  0x00007f003f2bfd86: jmp    0x00007f003f2bfa00  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@98 (line 577)

  0x00007f003f2bfd8b: mov    rax,rdx
  0x00007f003f2bfd8e: add    rsp,0x50
  0x00007f003f2bfd92: pop    rbp
  0x00007f003f2bfd93: test   DWORD PTR [rip+0x1b102367],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2bfd99: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@134 (line 579)

  0x00007f003f2bfd9a: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f2bfda4: add    rsp,0x50
  0x00007f003f2bfda8: pop    rbp
  0x00007f003f2bfda9: test   DWORD PTR [rip+0x1b102351],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2bfdaf: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@147 (line 583)

  0x00007f003f2bfdb0: mov    rcx,QWORD PTR [rsp+0x30]
  0x00007f003f2bfdb5: mov    edx,DWORD PTR [rsp+0x28]
  0x00007f003f2bfdb9: cmp    rdi,0x0
  0x00007f003f2bfdbd: jne    0x00007f003f2bfdd8
  0x00007f003f2bfdbf: movabs rbx,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bfdc9: or     DWORD PTR [rbx+0x378],0x100
  0x00007f003f2bfdd3: jmp    0x00007f003f2bfff4
  0x00007f003f2bfdd8: movabs rax,0x7c0031710    ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00007f003f2bfde2: mov    esi,DWORD PTR [rdi+0x8]
  0x00007f003f2bfde5: shl    rsi,0x3
  0x00007f003f2bfde9: cmp    rax,rsi
  0x00007f003f2bfdec: jne    0x00007f003f2bffd8
  0x00007f003f2bfdf2: movabs rbx,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bfdfc: mov    eax,DWORD PTR [rdi+0x8]
  0x00007f003f2bfdff: shl    rax,0x3
  0x00007f003f2bfe03: cmp    rax,QWORD PTR [rbx+0x390]
  0x00007f003f2bfe0a: jne    0x00007f003f2bfe19
  0x00007f003f2bfe0c: add    QWORD PTR [rbx+0x398],0x1
  0x00007f003f2bfe14: jmp    0x00007f003f2bfff4
  0x00007f003f2bfe19: cmp    rax,QWORD PTR [rbx+0x3a0]
  0x00007f003f2bfe20: jne    0x00007f003f2bfe2f
  0x00007f003f2bfe22: add    QWORD PTR [rbx+0x3a8],0x1
  0x00007f003f2bfe2a: jmp    0x00007f003f2bfff4
  0x00007f003f2bfe2f: cmp    rax,QWORD PTR [rbx+0x3b0]
  0x00007f003f2bfe36: jne    0x00007f003f2bfe45
  0x00007f003f2bfe38: add    QWORD PTR [rbx+0x3b8],0x1
  0x00007f003f2bfe40: jmp    0x00007f003f2bfff4
  0x00007f003f2bfe45: cmp    rax,QWORD PTR [rbx+0x3c0]
  0x00007f003f2bfe4c: jne    0x00007f003f2bfe5b
  0x00007f003f2bfe4e: add    QWORD PTR [rbx+0x3c8],0x1
  0x00007f003f2bfe56: jmp    0x00007f003f2bfff4
  0x00007f003f2bfe5b: cmp    rax,QWORD PTR [rbx+0x3d0]
  0x00007f003f2bfe62: jne    0x00007f003f2bfe71
  0x00007f003f2bfe64: add    QWORD PTR [rbx+0x3d8],0x1
  0x00007f003f2bfe6c: jmp    0x00007f003f2bfff4
  0x00007f003f2bfe71: cmp    rax,QWORD PTR [rbx+0x3e0]
  0x00007f003f2bfe78: jne    0x00007f003f2bfe87
  0x00007f003f2bfe7a: add    QWORD PTR [rbx+0x3e8],0x1
  0x00007f003f2bfe82: jmp    0x00007f003f2bfff4
  0x00007f003f2bfe87: cmp    rax,QWORD PTR [rbx+0x3f0]
  0x00007f003f2bfe8e: jne    0x00007f003f2bfe9d
  0x00007f003f2bfe90: add    QWORD PTR [rbx+0x3f8],0x1
  0x00007f003f2bfe98: jmp    0x00007f003f2bfff4
  0x00007f003f2bfe9d: cmp    rax,QWORD PTR [rbx+0x400]
  0x00007f003f2bfea4: jne    0x00007f003f2bfeb3
  0x00007f003f2bfea6: add    QWORD PTR [rbx+0x408],0x1
  0x00007f003f2bfeae: jmp    0x00007f003f2bfff4
  0x00007f003f2bfeb3: cmp    QWORD PTR [rbx+0x390],0x0
  0x00007f003f2bfebe: jne    0x00007f003f2bfed7
  0x00007f003f2bfec0: mov    QWORD PTR [rbx+0x390],rax
  0x00007f003f2bfec7: mov    QWORD PTR [rbx+0x398],0x1
  0x00007f003f2bfed2: jmp    0x00007f003f2bfff4
  0x00007f003f2bfed7: cmp    QWORD PTR [rbx+0x3a0],0x0
  0x00007f003f2bfee2: jne    0x00007f003f2bfefb
  0x00007f003f2bfee4: mov    QWORD PTR [rbx+0x3a0],rax
  0x00007f003f2bfeeb: mov    QWORD PTR [rbx+0x3a8],0x1
  0x00007f003f2bfef6: jmp    0x00007f003f2bfff4
  0x00007f003f2bfefb: cmp    QWORD PTR [rbx+0x3b0],0x0
  0x00007f003f2bff06: jne    0x00007f003f2bff1f
  0x00007f003f2bff08: mov    QWORD PTR [rbx+0x3b0],rax
  0x00007f003f2bff0f: mov    QWORD PTR [rbx+0x3b8],0x1
  0x00007f003f2bff1a: jmp    0x00007f003f2bfff4
  0x00007f003f2bff1f: cmp    QWORD PTR [rbx+0x3c0],0x0
  0x00007f003f2bff2a: jne    0x00007f003f2bff43
  0x00007f003f2bff2c: mov    QWORD PTR [rbx+0x3c0],rax
  0x00007f003f2bff33: mov    QWORD PTR [rbx+0x3c8],0x1
  0x00007f003f2bff3e: jmp    0x00007f003f2bfff4
  0x00007f003f2bff43: cmp    QWORD PTR [rbx+0x3d0],0x0
  0x00007f003f2bff4e: jne    0x00007f003f2bff67
  0x00007f003f2bff50: mov    QWORD PTR [rbx+0x3d0],rax
  0x00007f003f2bff57: mov    QWORD PTR [rbx+0x3d8],0x1
  0x00007f003f2bff62: jmp    0x00007f003f2bfff4
  0x00007f003f2bff67: cmp    QWORD PTR [rbx+0x3e0],0x0
  0x00007f003f2bff72: jne    0x00007f003f2bff8b
  0x00007f003f2bff74: mov    QWORD PTR [rbx+0x3e0],rax
  0x00007f003f2bff7b: mov    QWORD PTR [rbx+0x3e8],0x1
  0x00007f003f2bff86: jmp    0x00007f003f2bfff4
  0x00007f003f2bff8b: cmp    QWORD PTR [rbx+0x3f0],0x0
  0x00007f003f2bff96: jne    0x00007f003f2bffaf
  0x00007f003f2bff98: mov    QWORD PTR [rbx+0x3f0],rax
  0x00007f003f2bff9f: mov    QWORD PTR [rbx+0x3f8],0x1
  0x00007f003f2bffaa: jmp    0x00007f003f2bfff4
  0x00007f003f2bffaf: cmp    QWORD PTR [rbx+0x400],0x0
  0x00007f003f2bffba: jne    0x00007f003f2bffd3
  0x00007f003f2bffbc: mov    QWORD PTR [rbx+0x400],rax
  0x00007f003f2bffc3: mov    QWORD PTR [rbx+0x408],0x1
  0x00007f003f2bffce: jmp    0x00007f003f2bfff4
  0x00007f003f2bffd3: jmp    0x00007f003f2bfff4
  0x00007f003f2bffd8: movabs rbx,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2bffe2: sub    QWORD PTR [rbx+0x380],0x1
  0x00007f003f2bffea: jmp    0x00007f003f2c0257
  0x00007f003f2bffef: jmp    0x00007f003f2bfff4
  0x00007f003f2bfff4: mov    rsi,rdi            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@89 (line 575)

  0x00007f003f2bfff7: cmp    rax,QWORD PTR [rsi]  ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@94 (line 575)
                                                ; implicit exception: dispatches to 0x00007f003f2c0260
  0x00007f003f2bfffa: mov    rdi,rsi
  0x00007f003f2bfffd: movabs rbx,0x7f0038a5e070  ;   {metadata(method data for {method} {0x00007f003886d4d8} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2c0007: mov    edi,DWORD PTR [rdi+0x8]
  0x00007f003f2c000a: shl    rdi,0x3
  0x00007f003f2c000e: cmp    rdi,QWORD PTR [rbx+0x428]
  0x00007f003f2c0015: jne    0x00007f003f2c0024
  0x00007f003f2c0017: add    QWORD PTR [rbx+0x430],0x1
  0x00007f003f2c001f: jmp    0x00007f003f2c01e6
  0x00007f003f2c0024: cmp    rdi,QWORD PTR [rbx+0x438]
  0x00007f003f2c002b: jne    0x00007f003f2c003a
  0x00007f003f2c002d: add    QWORD PTR [rbx+0x440],0x1
  0x00007f003f2c0035: jmp    0x00007f003f2c01e6
  0x00007f003f2c003a: cmp    rdi,QWORD PTR [rbx+0x448]
  0x00007f003f2c0041: jne    0x00007f003f2c0050
  0x00007f003f2c0043: add    QWORD PTR [rbx+0x450],0x1
  0x00007f003f2c004b: jmp    0x00007f003f2c01e6
  0x00007f003f2c0050: cmp    rdi,QWORD PTR [rbx+0x458]
  0x00007f003f2c0057: jne    0x00007f003f2c0066
  0x00007f003f2c0059: add    QWORD PTR [rbx+0x460],0x1
  0x00007f003f2c0061: jmp    0x00007f003f2c01e6
  0x00007f003f2c0066: cmp    rdi,QWORD PTR [rbx+0x468]
  0x00007f003f2c006d: jne    0x00007f003f2c007c
  0x00007f003f2c006f: add    QWORD PTR [rbx+0x470],0x1
  0x00007f003f2c0077: jmp    0x00007f003f2c01e6
  0x00007f003f2c007c: cmp    rdi,QWORD PTR [rbx+0x478]
  0x00007f003f2c0083: jne    0x00007f003f2c0092
  0x00007f003f2c0085: add    QWORD PTR [rbx+0x480],0x1
  0x00007f003f2c008d: jmp    0x00007f003f2c01e6
  0x00007f003f2c0092: cmp    rdi,QWORD PTR [rbx+0x488]
  0x00007f003f2c0099: jne    0x00007f003f2c00a8
  0x00007f003f2c009b: add    QWORD PTR [rbx+0x490],0x1
  0x00007f003f2c00a3: jmp    0x00007f003f2c01e6
  0x00007f003f2c00a8: cmp    rdi,QWORD PTR [rbx+0x498]
  0x00007f003f2c00af: jne    0x00007f003f2c00be
  0x00007f003f2c00b1: add    QWORD PTR [rbx+0x4a0],0x1
  0x00007f003f2c00b9: jmp    0x00007f003f2c01e6
  0x00007f003f2c00be: cmp    QWORD PTR [rbx+0x428],0x0
  0x00007f003f2c00c9: jne    0x00007f003f2c00e2
  0x00007f003f2c00cb: mov    QWORD PTR [rbx+0x428],rdi
  0x00007f003f2c00d2: mov    QWORD PTR [rbx+0x430],0x1
  0x00007f003f2c00dd: jmp    0x00007f003f2c01e6
  0x00007f003f2c00e2: cmp    QWORD PTR [rbx+0x438],0x0
  0x00007f003f2c00ed: jne    0x00007f003f2c0106
  0x00007f003f2c00ef: mov    QWORD PTR [rbx+0x438],rdi
  0x00007f003f2c00f6: mov    QWORD PTR [rbx+0x440],0x1
  0x00007f003f2c0101: jmp    0x00007f003f2c01e6
  0x00007f003f2c0106: cmp    QWORD PTR [rbx+0x448],0x0
  0x00007f003f2c0111: jne    0x00007f003f2c012a
  0x00007f003f2c0113: mov    QWORD PTR [rbx+0x448],rdi
  0x00007f003f2c011a: mov    QWORD PTR [rbx+0x450],0x1
  0x00007f003f2c0125: jmp    0x00007f003f2c01e6
  0x00007f003f2c012a: cmp    QWORD PTR [rbx+0x458],0x0
  0x00007f003f2c0135: jne    0x00007f003f2c014e
  0x00007f003f2c0137: mov    QWORD PTR [rbx+0x458],rdi
  0x00007f003f2c013e: mov    QWORD PTR [rbx+0x460],0x1
  0x00007f003f2c0149: jmp    0x00007f003f2c01e6
  0x00007f003f2c014e: cmp    QWORD PTR [rbx+0x468],0x0
  0x00007f003f2c0159: jne    0x00007f003f2c0172
  0x00007f003f2c015b: mov    QWORD PTR [rbx+0x468],rdi
  0x00007f003f2c0162: mov    QWORD PTR [rbx+0x470],0x1
  0x00007f003f2c016d: jmp    0x00007f003f2c01e6
  0x00007f003f2c0172: cmp    QWORD PTR [rbx+0x478],0x0
  0x00007f003f2c017d: jne    0x00007f003f2c0196
  0x00007f003f2c017f: mov    QWORD PTR [rbx+0x478],rdi
  0x00007f003f2c0186: mov    QWORD PTR [rbx+0x480],0x1
  0x00007f003f2c0191: jmp    0x00007f003f2c01e6
  0x00007f003f2c0196: cmp    QWORD PTR [rbx+0x488],0x0
  0x00007f003f2c01a1: jne    0x00007f003f2c01ba
  0x00007f003f2c01a3: mov    QWORD PTR [rbx+0x488],rdi
  0x00007f003f2c01aa: mov    QWORD PTR [rbx+0x490],0x1
  0x00007f003f2c01b5: jmp    0x00007f003f2c01e6
  0x00007f003f2c01ba: cmp    QWORD PTR [rbx+0x498],0x0
  0x00007f003f2c01c5: jne    0x00007f003f2c01de
  0x00007f003f2c01c7: mov    QWORD PTR [rbx+0x498],rdi
  0x00007f003f2c01ce: mov    QWORD PTR [rbx+0x4a0],0x1
  0x00007f003f2c01d9: jmp    0x00007f003f2c01e6
  0x00007f003f2c01de: add    QWORD PTR [rbx+0x418],0x1
  0x00007f003f2c01e6: nop
  0x00007f003f2c01e7: call   0x00007f003f1c4d60  ; OopMap{off=3820}
                                                ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@94 (line 575)
                                                ;   {optimized virtual_call}
  0x00007f003f2c01ec: add    rsp,0x50
  0x00007f003f2c01f0: pop    rbp
  0x00007f003f2c01f1: test   DWORD PTR [rip+0x1b101f09],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c01f7: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@97 (line 575)

  0x00007f003f2c01f8: mov    rax,rdi
  0x00007f003f2c01fb: add    rsp,0x50
  0x00007f003f2c01ff: pop    rbp
  0x00007f003f2c0200: test   DWORD PTR [rip+0x1b101efa],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c0206: ret    
  0x00007f003f2c0207: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2c020c: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c0214: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rcx=Oop [48]=Oop off=3865}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::getNode@-1 (line 568)
                                                ;   {runtime_call}
  0x00007f003f2c0219: jmp    0x00007f003f2bf367
  0x00007f003f2c021e: call   0x00007f003f279000  ; OopMap{rsi=Oop rcx=Oop [48]=Oop off=3875}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@10 (line 568)
                                                ;   {runtime_call}
  0x00007f003f2c0223: mov    QWORD PTR [rsp],rdi
  0x00007f003f2c0227: call   0x00007f003f278940  ; OopMap{rcx=Oop [48]=Oop rsi=Oop off=3884}
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@24 (line 568)
                                                ;   {runtime_call}
  0x00007f003f2c022c: call   0x00007f003f279000  ; OopMap{rdi=Oop rcx=Oop [48]=Oop off=3889}
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@33 (line 570)
                                                ;   {runtime_call}
  0x00007f003f2c0231: call   0x00007f003f279000  ; OopMap{rcx=Oop [48]=Oop [32]=Oop rsi=Oop off=3894}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@59 (line 571)
                                                ;   {runtime_call}
  0x00007f003f2c0236: call   0x00007f003f279000  ; OopMap{rdx=Oop rcx=Oop [48]=Oop off=3899}
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@100 (line 577)
                                                ;   {runtime_call}
  0x00007f003f2c023b: call   0x00007f003f279000  ; OopMap{rcx=Oop [48]=Oop [56]=Oop rsi=Oop off=3904}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@126 (line 578)
                                                ;   {runtime_call}
  0x00007f003f2c0240: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2c0245: mov    QWORD PTR [rsp],0x8f
  0x00007f003f2c024d: call   0x00007f003f27d5e0  ; OopMap{[48]=Oop rax=Oop off=3922}
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 580)
                                                ;   {runtime_call}
  0x00007f003f2c0252: jmp    0x00007f003f2bfd43
  0x00007f003f2c0257: mov    QWORD PTR [rsp],rdi
  0x00007f003f2c025b: call   0x00007f003f27b2c0  ; OopMap{rcx=Oop [48]=Oop off=3936}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@89 (line 575)
                                                ;   {runtime_call}
  0x00007f003f2c0260: call   0x00007f003f279000  ; OopMap{rcx=Oop [48]=Oop rsi=Oop off=3941}
                                                ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@94 (line 575)
                                                ;   {runtime_call}
  0x00007f003f2c0265: nop
  0x00007f003f2c0266: nop
  0x00007f003f2c0267: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c026e: movabs r10,0x0
  0x00007f003f2c0278: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c027f: movabs r10,0x0
  0x00007f003f2c0289: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c0290: add    rsp,0x50
  0x00007f003f2c0294: pop    rbp
  0x00007f003f2c0295: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2c029a: hlt    
  0x00007f003f2c029b: hlt    
  0x00007f003f2c029c: hlt    
  0x00007f003f2c029d: hlt    
  0x00007f003f2c029e: hlt    
  0x00007f003f2c029f: hlt    
[Stub Code]
  0x00007f003f2c02a0: nop                       ;   {no_reloc}
  0x00007f003f2c02a1: nop
  0x00007f003f2c02a2: nop
  0x00007f003f2c02a3: nop
  0x00007f003f2c02a4: nop
  0x00007f003f2c02a5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c02af: jmp    0x00007f003f2c02af  ;   {runtime_call}
  0x00007f003f2c02b4: nop
  0x00007f003f2c02b5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c02bf: jmp    0x00007f003f2c02bf  ;   {runtime_call}
  0x00007f003f2c02c4: nop
  0x00007f003f2c02c5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c02cf: jmp    0x00007f003f2c02cf  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2c02d4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2c02d9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2c02de: sub    rsp,0x80
  0x00007f003f2c02e5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2c02ea: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2c02ef: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2c02f4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2c02f9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2c02fe: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2c0303: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2c0308: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2c030d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2c0312: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2c0317: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2c031c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2c0321: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2c0326: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2c032b: mov    QWORD PTR [rsp],r15
  0x00007f003f2c032f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2c0339: movabs rsi,0x7f003f2c02d9  ;   {internal_word}
  0x00007f003f2c0343: mov    rdx,rsp
  0x00007f003f2c0346: and    rsp,0xfffffffffffffff0
  0x00007f003f2c034a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2c034f: hlt    
[Deopt Handler Code]
  0x00007f003f2c0350: movabs r10,0x7f003f2c0350  ;   {section_word}
  0x00007f003f2c035a: push   r10
  0x00007f003f2c035c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2c0361: hlt    
  0x00007f003f2c0362: hlt    
  0x00007f003f2c0363: hlt    
  0x00007f003f2c0364: hlt    
  0x00007f003f2c0365: hlt    
  0x00007f003f2c0366: hlt    
  0x00007f003f2c0367: hlt    
<nmethod compile_id='103' compiler='C1' level='3' entry='0x00007f003f2bf300' size='5936' address='0x00007f003f2bf110' relocation_offset='312' insts_offset='496' stub_offset='4496' scopes_data_offset='4704' scopes_pcs_offset='5088' dependencies_offset='5872' nul_chk_table_offset='5880' metadata_offset='4696' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='622' backedge_count='5' iicount='622' stamp='0.476'/>
<writer thread='139637818533632'/>
[Loaded sun.misc.URLClassPath$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/io/File.getPath  [0x00007f003f2c09c0, 0x00007f003f2c0ad0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00387fcfc0} &apos;getPath&apos;
<writer thread='139637818533632'/>
[Loaded java.net.URLClassLoader$3 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
 &apos;()Ljava/lang/String;&apos; in &apos;java/io/File&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2c09c0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2c09c4: shl    r10,0x3
  0x00007f003f2c09c8: cmp    r10,rax
  0x00007f003f2c09cb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2c09d1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2c09dc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2c09e0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2c09e7: push   rbp
  0x00007f003f2c09e8: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.io.File::getPath@0 (line 512)

  0x00007f003f2c09ec: mov    eax,DWORD PTR [rsi+0x10]
  0x00007f003f2c09ef: shl    rax,0x3            ;*getfield path {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.io.File::getPath@1 (line 512)

  0x00007f003f2c09f3: add    rsp,0x30
  0x00007f003f2c09f7: pop    rbp
  0x00007f003f2c09f8: test   DWORD PTR [rip+0x1b101702],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c09fe: ret    
  0x00007f003f2c09ff: nop
  0x00007f003f2c0a00: nop
  0x00007f003f2c0a01: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c0a08: movabs r10,0x0
  0x00007f003f2c0a12: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c0a19: movabs r10,0x0
  0x00007f003f2c0a23: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c0a2a: add    rsp,0x30
  0x00007f003f2c0a2e: pop    rbp
  0x00007f003f2c0a2f: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2c0a34: hlt    
  0x00007f003f2c0a35: hlt    
  0x00007f003f2c0a36: hlt    
  0x00007f003f2c0a37: hlt    
  0x00007f003f2c0a38: hlt    
  0x00007f003f2c0a39: hlt    
  0x00007f003f2c0a3a: hlt    
  0x00007f003f2c0a3b: hlt    
  0x00007f003f2c0a3c: hlt    
  0x00007f003f2c0a3d: hlt    
  0x00007f003f2c0a3e: hlt    
  0x00007f003f2c0a3f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2c0a40: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2c0a45: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2c0a4a: sub    rsp,0x80
  0x00007f003f2c0a51: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2c0a56: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2c0a5b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2c0a60: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2c0a65: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2c0a6a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2c0a6f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2c0a74: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2c0a79: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2c0a7e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2c0a83: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2c0a88: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2c0a8d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2c0a92: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2c0a97: mov    QWORD PTR [rsp],r15
  0x00007f003f2c0a9b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2c0aa5: movabs rsi,0x7f003f2c0a45  ;   {internal_word}
  0x00007f003f2c0aaf: mov    rdx,rsp
  0x00007f003f2c0ab2: and    rsp,0xfffffffffffffff0
  0x00007f003f2c0ab6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2c0abb: hlt    
[Deopt Handler Code]
  0x00007f003f2c0abc: movabs r10,0x7f003f2c0abc  ;   {section_word}
  0x00007f003f2c0ac6: push   r10
  0x00007f003f2c0ac8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2c0acd: hlt    
  0x00007f003f2c0ace: hlt    
  0x00007f003f2c0acf: hlt    
<nmethod compile_id='102' compiler='C1' level='1' entry='0x00007f003f2c09c0' size='736' address='0x00007f003f2c0850' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='158' iicount='158' stamp='0.477'/>
<writer thread='139637818533632'/>
[Loaded sun.misc.CompoundEnumeration from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/security/CodeSource.getLocation  [0x00007f003f2c0cc0, 0x00007f003f2c0dd0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003880d788} &apos;getLocation&apos; &apos;()Ljava/net/URL;&apos; in &apos;java/security/CodeSource&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2c0cc0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2c0cc4: shl    r10,0x3
  0x00007f003f2c0cc8: cmp    r10,rax
  0x00007f003f2c0ccb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2c0cd1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2c0cdc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2c0ce0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2c0ce7: push   rbp
  0x00007f003f2c0ce8: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.security.CodeSource::getLocation@0 (line 168)

  0x00007f003f2c0cec: mov    eax,DWORD PTR [rsi+0xc]
  0x00007f003f2c0cef: shl    rax,0x3            ;*getfield location {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.security.CodeSource::getLocation@1 (line 168)

  0x00007f003f2c0cf3: add    rsp,0x30
  0x00007f003f2c0cf7: pop    rbp
  0x00007f003f2c0cf8: test   DWORD PTR [rip+0x1b101402],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c0cfe: ret    
  0x00007f003f2c0cff: nop
  0x00007f003f2c0d00: nop
  0x00007f003f2c0d01: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c0d08: movabs r10,0x0
  0x00007f003f2c0d12: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c0d19: movabs r10,0x0
  0x00007f003f2c0d23: mov    QWORD PTR [r15+0x2c8],r10
<writer thread='139637818533632'/>
[Loaded java.io.IOException from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
  0x00007f003f2c0d2a: add    rsp,0x30
  0x00007f003f2c0d2e: pop    rbp
  0x00007f003f2c0d2f: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2c0d34: hlt    
  0x00007f003f2c0d35: hlt    
  0x00007f003f2c0d36: hlt    
  0x00007f003f2c0d37: hlt    
  0x00007f003f2c0d38: hlt    
  0x00007f003f2c0d39: hlt    
  0x00007f003f2c0d3a: hlt    
  0x00007f003f2c0d3b: hlt    
  0x00007f003f2c0d3c: hlt    
  0x00007f003f2c0d3d: hlt    
  0x00007f003f2c0d3e: hlt    
  0x00007f003f2c0d3f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2c0d40: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2c0d45: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2c0d4a: sub    rsp,0x80
  0x00007f003f2c0d51: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2c0d56: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2c0d5b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2c0d60: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2c0d65: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2c0d6a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2c0d6f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2c0d74: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2c0d79: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2c0d7e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2c0d83: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2c0d88: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2c0d8d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2c0d92: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2c0d97: mov    QWORD PTR [rsp],r15
  0x00007f003f2c0d9b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2c0da5: movabs rsi,0x7f003f2c0d45  ;   {internal_word}
  0x00007f003f2c0daf: mov    rdx,rsp
  0x00007f003f2c0db2: and    rsp,0xfffffffffffffff0
  0x00007f003f2c0db6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2c0dbb: hlt    
[Deopt Handler Code]
  0x00007f003f2c0dbc: movabs r10,0x7f003f2c0dbc  ;   {section_word}
  0x00007f003f2c0dc6: push   r10
  0x00007f003f2c0dc8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2c0dcd: hlt    
  0x00007f003f2c0dce: hlt    
  0x00007f003f2c0dcf: hlt    
<nmethod compile_id='81' compiler='C1' level='1' entry='0x00007f003f2c0cc0' size='736' address='0x00007f003f2c0b50' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/security/CodeSource getLocation ()Ljava/net/URL;' bytes='5' count='208' iicount='208' stamp='0.477'/>
<writer thread='139637818533632'/>
[Loaded java.io.FileNotFoundException from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.security.PrivilegedActionException from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/StringCoding$StringEncoder.requestedCharsetName  [0x00007f003f2c0fc0, 0x00007f003f2c10d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038902f28} &apos;requestedCharsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2c0fc0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2c0fc4: shl    r10,0x3
  0x00007f003f2c0fc8: cmp    r10,rax
  0x00007f003f2c0fcb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2c0fd1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2c0fdc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2c0fe0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2c0fe7: push   rbp
  0x00007f003f2c0fe8: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding$StringEncoder::requestedCharsetName@0 (line 295)

  0x00007f003f2c0fec: mov    eax,DWORD PTR [rsi+0x18]
  0x00007f003f2c0fef: shl    rax,0x3            ;*getfield requestedCharsetName {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding$StringEncoder::requestedCharsetName@1 (line 295)

  0x00007f003f2c0ff3: add    rsp,0x30
  0x00007f003f2c0ff7: pop    rbp
  0x00007f003f2c0ff8: test   DWORD PTR [rip+0x1b101102],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c0ffe: ret    
  0x00007f003f2c0fff: nop
  0x00007f003f2c1000: nop
  0x00007f003f2c1001: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c1008: movabs r10,0x0
  0x00007f003f2c1012: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c1019: movabs r10,0x0
  0x00007f003f2c1023: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c102a: add    rsp,0x30
  0x00007f003f2c102e: pop    rbp
  0x00007f003f2c102f: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2c1034: hlt    
  0x00007f003f2c1035: hlt    
  0x00007f003f2c1036: hlt    
  0x00007f003f2c1037: hlt    
  0x00007f003f2c1038: hlt    
  0x00007f003f2c1039: hlt    
  0x00007f003f2c103a: hlt    
  0x00007f003f2c103b: hlt    
  0x00007f003f2c103c: hlt    
  0x00007f003f2c103d: hlt    
  0x00007f003f2c103e: hlt    
  0x00007f003f2c103f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2c1040: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2c1045: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2c104a: sub    rsp,0x80
  0x00007f003f2c1051: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2c1056: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2c105b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2c1060: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2c1065: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2c106a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2c106f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2c1074: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2c1079: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2c107e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2c1083: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2c1088: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2c108d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2c1092: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2c1097: mov    QWORD PTR [rsp],r15
  0x00007f003f2c109b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2c10a5: movabs rsi,0x7f003f2c1045  ;   {internal_word}
  0x00007f003f2c10af: mov    rdx,rsp
  0x00007f003f2c10b2: and    rsp,0xfffffffffffffff0
  0x00007f003f2c10b6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2c10bb: hlt    
[Deopt Handler Code]
  0x00007f003f2c10bc: movabs r10,0x7f003f2c10bc  ;   {section_word}
  0x00007f003f2c10c6: push   r10
  0x00007f003f2c10c8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2c10cd: hlt    
  0x00007f003f2c10ce: hlt    
  0x00007f003f2c10cf: hlt    
<nmethod compile_id='104' compiler='C1' level='1' entry='0x00007f003f2c0fc0' size='736' address='0x00007f003f2c0e50' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/lang/StringCoding$StringEncoder requestedCharsetName ()Ljava/lang/String;' bytes='5' count='132' iicount='132' stamp='0.478'/>
----------------------------------------------------------------------
java/net/URLClassLoader.access$000  [0x00007f003f2c12c0, 0x00007f003f2c13b0]  240 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f0038802df0} &apos;access$000&apos; &apos;(Ljava/net/URLClassLoader;)Lsun/misc/URLClassPath;&apos; in &apos;java/net/URLClassLoader&apos;
  # parm0:    rsi:rsi   = &apos;java/net/URLClassLoader&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2c12c0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2c12c7: push   rbp
  0x00007f003f2c12c8: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URLClassLoader::access$000@0 (line 73)

  0x00007f003f2c12cc: mov    eax,DWORD PTR [rsi+0x4c]  ; implicit exception: dispatches to 0x00007f003f2c12df
  0x00007f003f2c12cf: shl    rax,0x3            ;*getfield ucp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.URLClassLoader::access$000@1 (line 73)

  0x00007f003f2c12d3: add    rsp,0x30
  0x00007f003f2c12d7: pop    rbp
  0x00007f003f2c12d8: test   DWORD PTR [rip+0x1b100e22],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c12de: ret    
  0x00007f003f2c12df: call   0x00007f003f279000  ; OopMap{off=36}
                                                ;*getfield ucp {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.net.URLClassLoader::access$000@1 (line 73)
                                                ;   {runtime_call}
  0x00007f003f2c12e4: nop
  0x00007f003f2c12e5: nop
  0x00007f003f2c12e6: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c12ed: movabs r10,0x0
  0x00007f003f2c12f7: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c12fe: movabs r10,0x0
  0x00007f003f2c1308: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c130f: add    rsp,0x30
  0x00007f003f2c1313: pop    rbp
  0x00007f003f2c1314: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2c1319: hlt    
  0x00007f003f2c131a: hlt    
  0x00007f003f2c131b: hlt    
  0x00007f003f2c131c: hlt    
  0x00007f003f2c131d: hlt    
  0x00007f003f2c131e: hlt    
  0x00007f003f2c131f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2c1320: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2c1325: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2c132a: sub    rsp,0x80
  0x00007f003f2c1331: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2c1336: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2c133b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2c1340: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2c1345: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2c134a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2c134f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2c1354: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2c1359: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2c135e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2c1363: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2c1368: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2c136d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2c1372: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2c1377: mov    QWORD PTR [rsp],r15
  0x00007f003f2c137b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2c1385: movabs rsi,0x7f003f2c1325  ;   {internal_word}
  0x00007f003f2c138f: mov    rdx,rsp
  0x00007f003f2c1392: and    rsp,0xfffffffffffffff0
  0x00007f003f2c1396: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2c139b: hlt    
[Deopt Handler Code]
  0x00007f003f2c139c: movabs r10,0x7f003f2c139c  ;   {section_word}
  0x00007f003f2c13a6: push   r10
  0x00007f003f2c13a8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2c13ad: hlt    
  0x00007f003f2c13ae: hlt    
  0x00007f003f2c13af: hlt    
<nmethod compile_id='82' compiler='C1' level='1' entry='0x00007f003f2c12c0' size='744' address='0x00007f003f2c1150' relocation_offset='312' insts_offset='368' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='640' dependencies_offset='720' nul_chk_table_offset='728' metadata_offset='608' method='java/net/URLClassLoader access$000 (Ljava/net/URLClassLoader;)Lsun/misc/URLClassPath;' bytes='5' count='206' iicount='206' stamp='0.478'/>
<writer thread='139637818533632'/>
<task_queued compile_id='105' method='java/lang/StringBuffer append (Ljava/lang/String;)Ljava/lang/StringBuffer;' bytes='13' count='384' iicount='384' level='3' stamp='0.478' comment='tiered' hot_count='384'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
sun/misc/URLClassPath$JarLoader.access$700  [0x00007f003f2c15c0, 0x00007f003f2c16b0]  240 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f00389916e0} &apos;access$700&apos; &apos;(Lsun/misc/URLClassPath$JarLoader;)Ljava/util/jar/JarFile;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;
  # parm0:    rsi:rsi   = &apos;sun/misc/URLClassPath$JarLoader&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2c15c0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2c15c7: push   rbp
  0x00007f003f2c15c8: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::access$700@0 (line 791)

  0x00007f003f2c15cc: mov    eax,DWORD PTR [rsi+0x18]  ; implicit exception: dispatches to 0x00007f003f2c15df
  0x00007f003f2c15cf: shl    rax,0x3            ;*getfield jar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::access$700
<writer thread='139637818533632'/>
[Loaded java.net.URLClassLoader$3$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
@1 (line 791)

  0x00007f003f2c15d3: add    rsp,0x30
  0x00007f003f2c15d7: pop    rbp
  0x00007f003f2c15d8: test   DWORD PTR [rip+0x1b100b22],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c15de: ret    
  0x00007f003f2c15df: call   0x00007f003f279000  ; OopMap{off=36}
                                                ;*getfield jar {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::access$700@1 (line 791)
                                                ;   {runtime_call}
  0x00007f003f2c15e4: nop
  0x00007f003f2c15e5: nop
  0x00007f003f2c15e6: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c15ed: movabs r10,0x0
  0x00007f003f2c15f7: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c15fe: movabs r10,0x0
  0x00007f003f2c1608: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c160f: add    rsp,0x30
  0x00007f003f2c1613: pop    rbp
  0x00007f003f2c1614: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2c1619: hlt    
  0x00007f003f2c161a: hlt    
  0x00007f003f2c161b: hlt    
  0x00007f003f2c161c: hlt    
  0x00007f003f2c161d: hlt    
  0x00007f003f2c161e: hlt    
  0x00007f003f2c161f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2c1620: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2c1625: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2c162a: sub    rsp,0x80
  0x00007f003f2c1631: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2c1636: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2c163b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2c1640: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2c1645: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2c164a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2c164f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2c1654: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2c1659: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2c165e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2c1663: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2c1668: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2c166d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2c1672: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2c1677: mov    QWORD PTR [rsp],r15
  0x00007f003f2c167b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2c1685: movabs rsi,0x7f003f2c1625  ;   {internal_word}
  0x00007f003f2c168f: mov    rdx,rsp
  0x00007f003f2c1692: and    rsp,0xfffffffffffffff0
  0x00007f003f2c1696: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2c169b: hlt    
[Deopt Handler Code]
  0x00007f003f2c169c: movabs r10,0x7f003f2c169c  ;   {section_word}
  0x00007f003f2c16a6: push   r10
  0x00007f003f2c16a8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2c16ad: hlt    
  0x00007f003f2c16ae: hlt    
  0x00007f003f2c16af: hlt    
<nmethod compile_id='83' compiler='C1' level='1' entry='0x00007f003f2c15c0' size='744' address='0x00007f003f2c1450' relocation_offset='312' insts_offset='368' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='640' dependencies_offset='720' nul_chk_table_offset='728' metadata_offset='608' method='sun/misc/URLClassPath$JarLoader access$700 (Lsun/misc/URLClassPath$JarLoader;)Ljava/util/jar/JarFile;' bytes='5' count='209' iicount='209' stamp='0.479'/>
<writer thread='139637818533632'/>
<task_queued compile_id='106' method='sun/net/www/ParseUtil encodePath (Ljava/lang/String;Z)Ljava/lang/String;' bytes='336' count='134' backedge_count='6144' iicount='134' level='3' stamp='0.479' comment='tiered' hot_count='134'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/StringBuffer.append  [0x00007f003f2c18e0, 0x00007f003f2c1c08]  808 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00387e6098} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;
  # this:     rsi:rsi   = &apos;java/lang/StringBuffer&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           
<writer thread='139637818533632'/>
[Loaded java.net.JarURLConnection from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
[sp+0x50]  (sp of caller)
  0x00007f003f2c18e0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2c18e4: shl    r10,0x3
  0x00007f003f2c18e8: cmp    r10,rax
  0x00007f003f2c18eb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2c18f1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2c18fc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2c1900: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2c1907: push   rbp
  0x00007f003f2c1908: sub    rsp,0x40
  0x00007f003f2c190c: lea    rdi,[rsp+0x28]
  0x00007f003f2c1911: mov    QWORD PTR [rdi+0x8],rsi
  0x00007f003f2c1915: mov    rax,QWORD PTR [rsi]
  0x00007f003f2c1918: mov    rbx,rax
  0x00007f003f2c191b: and    rbx,0x7
  0x00007f003f2c191f: cmp    rbx,0x5
  0x00007f003f2c1923: jne    0x00007f003f2c19aa
  0x00007f003f2c1929: mov    ebx,DWORD PTR [rsi+0x8]
  0x00007f003f2c192c: shl    rbx,0x3
  0x00007f003f2c1930: mov    rbx,QWORD PTR [rbx+0xa8]
  0x00007f003f2c1937: or     rbx,r15
  0x00007f003f2c193a: xor    rbx,rax
  0x00007f003f2c193d: and    rbx,0xffffffffffffff87
  0x00007f003f2c1941: je     0x00007f003f2c19d2
  0x00007f003f2c1947: test   rbx,0x7
  0x00007f003f2c194e: jne    0x00007f003f2c1997
  0x00007f003f2c1950: test   rbx,0x300
  0x00007f003f2c1957: jne    0x00007f003f2c1976
  0x00007f003f2c1959: and    rax,0x37f
  0x00007f003f2c1960: mov    rbx,rax
  0x00007f003f2c1963: or     rbx,r15
  0x00007f003f2c1966: lock cmpxchg QWORD PTR [rsi],rbx
  0x00007f003f2c196b: jne    0x00007f003f2c1a8e
  0x00007f003f2c1971: jmp    0x00007f003f2c19d2
  0x00007f003f2c1976: mov    ebx,DWORD PTR [rsi+0x8]
  0x00007f003f2c1979: shl    rbx,0x3
  0x00007f003f2c197d: mov    rbx,QWORD PTR [rbx+0xa8]
  0x00007f003f2c1984: or     rbx,r15
  0x00007f003f2c1987: lock cmpxchg QWORD PTR [rsi],rbx
  0x00007f003f2c198c: jne    0x00007f003f2c1a8e
  0x00007f003f2c1992: jmp    0x00007f003f2c19d2
  0x00007f003f2c1997: mov    ebx,DWORD PTR [rsi+0x8]
  0x00007f003f2c199a: shl    rbx,0x3
  0x00007f003f2c199e: mov    rbx,QWORD PTR [rbx+0xa8]
  0x00007f003f2c19a5: lock cmpxchg QWORD PTR [rsi],rbx
  0x00007f003f2c19aa: mov    rax,QWORD PTR [rsi]
  0x00007f003f2c19ad: or     rax,0x1
  0x00007f003f2c19b1: mov    QWORD PTR [rdi],rax
  0x00007f003f2c19b4: lock cmpxchg QWORD PTR [rsi],rdi
  0x00007f003f2c19b9: je     0x00007f003f2c19d2
  0x00007f003f2c19bf: sub    rax,rsp
  0x00007f003f2c19c2: and    rax,0xfffffffffffff007
  0x00007f003f2c19c9: mov    QWORD PTR [rdi],rax
  0x00007f003f2c19cc: jne    0x00007f003f2c1a8e
  0x00007f003f2c19d2: movabs rdi,0x7f0038a78c10  ;   {metadata(method data for {method} {0x00007f00387e6098} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00007f003f2c19dc: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2c19e2: add    ebx,0x8
  0x00007f003f2c19e5: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2c19eb: movabs rdi,0x7f00387e6098  ;   {metadata({method} {0x00007f00387e6098} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00007f003f2c19f5: and    ebx,0x1ff8
  0x00007f003f2c19fb: cmp    ebx,0x0
  0x00007f003f2c19fe: je     0x00007f003f2c1aa1  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuffer::append@0 (line 269)

  0x00007f003f2c1a04: mov    DWORD PTR [rsi+0x14],0x0
  0x00007f003f2c1a0b: mov    rdi,rsi
  0x00007f003f2c1a0e: shr    rdi,0x9
  0x00007f003f2c1a12: movabs rbx,0x7f003ae7c000
  0x00007f003f2c1a1c: mov    BYTE PTR [rdi+rbx*1],0x0  ;*putfield toStringCache {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuffer::append@2 (line 269)

  0x00007f003f2c1a20: mov    rdi,rsi
  0x00007f003f2c1a23: movabs rbx,0x7f0038a78c10  ;   {metadata(method data for {method} {0x00007f00387e6098} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00007f003f2c1a2d: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f2c1a35: mov    rdi,rsi
  0x00007f003f2c1a38: mov    rsi,rdi            ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuffer::append@7 (line 270)

  0x00007f003f2c1a3b: mov    QWORD PTR [rsp+0x20],rdi
  0x00007f003f2c1a40: nop
  0x00007f003f2c1a41: nop
  0x00007f003f2c1a42: nop
  0x00007f003f2c1a43: nop
  0x00007f003f2c1a44: nop
  0x00007f003f2c1a45: nop
  0x00007f003f2c1a46: nop
  0x00007f003f2c1a47: call   0x00007f003f1c4d60  ; OopMap{[32]=Oop [48]=Oop off=364}
                                                ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuffer::append@7 (line 270)
                                                ;   {optimized virtual_call}
  0x00007f003f2c1a4c: lea    rax,[rsp+0x28]
  0x00007f003f2c1a51: mov    rdi,QWORD PTR [rax+0x8]
  0x00007f003f2c1a55: mov    rsi,QWORD PTR [rdi]
  0x00007f003f2c1a58: and    rsi,0x7
  0x00007f003f2c1a5c: cmp    rsi,0x5
  0x00007f003f2c1a60: je     0x00007f003f2c1a7d
  0x00007f003f2c1a66: mov    rsi,QWORD PTR [rax]
  0x00007f003f2c1a69: test   rsi,rsi
  0x00007f003f2c1a6c: je     0x00007f003f2c1a7d
  0x00007f003f2c1a72: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2c1a77: jne    0x00007f003f2c1ab8  ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuffer::append@12 (line 271)

  0x00007f003f2c1a7d: mov    rax,QWORD PTR [rsp+0x20]
  0x00007f003f2c1a82: add    rsp,0x40
  0x00007f003f2c1a86: pop    rbp
  0x00007f003f2c1a87: test   DWORD PTR [rip+0x1b100673],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c1a8d: ret    
  0x00007f003f2c1a8e: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2c1a93: mov    QWORD PTR [rsp],rdi
  0x00007f003f2c1a97: call   0x00007f003f27ba60  ; OopMap{rsi=Oop rdx=Oop [48]=Oop off=444}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 269)
                                                ;   {runtime_call}
  0x00007f003f2c1a9c: jmp    0x00007f003f2c19d2
  0x00007f003f2c1aa1: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2c1aa6: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c1aae: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop [48]=Oop off=467}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 269)
                                                ;   {runtime_call}
  0x00007f003f2c1ab3: jmp    0x00007f003f2c1a04
  0x00007f003f2c1ab8: lea    rax,[rsp+0x28]
  0x00007f003f2c1abd: mov    QWORD PTR [rsp],rax
  0x00007f003f2c1ac1: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2c1ac6: jmp    0x00007f003f2c1a7d
  0x00007f003f2c1ac8: nop
  0x00007f003f2c1ac9: nop
  0x00007f003f2c1aca: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c1ad1: movabs r10,0x0
  0x00007f003f2c1adb: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c1ae2: movabs r10,0x0
  0x00007f003f2c1aec: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c1af3: mov    rbx,rax
  0x00007f003f2c1af6: lea    rax,[rsp+0x28]
  0x00007f003f2c1afb: mov    rsi,QWORD PTR [rax+0x8]
  0x00007f003f2c1aff: mov    rdi,QWORD PTR [rsi]
  0x00007f003f2c1b02: and    rdi,0x7
  0x00007f003f2c1b06: cmp    rdi,0x5
  0x00007f003f2c1b0a: je     0x00007f003f2c1b27
  0x00007f003f2c1b10: mov    rdi,QWORD PTR [rax]
  0x00007f003f2c1b13: test   rdi,rdi
  0x00007f003f2c1b16: je     0x00007f003f2c1b27
  0x00007f003f2c1b1c: lock cmpxchg QWORD PTR [rsi],rdi
  0x00007f003f2c1b21: jne    0x00007f003f2c1b34
  0x00007f003f2c1b27: mov    rax,rbx
  0x00007f003f2c1b2a: add    rsp,0x40
  0x00007f003f2c1b2e: pop    rbp
  0x00007f003f2c1b2f: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2c1b34: lea    rax,[rsp+0x28]
  0x00007f003f2c1b39: mov    QWORD PTR [rsp],rax
  0x00007f003f2c1b3d: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2c1b42: jmp    0x00007f003f2c1b27
  0x00007f003f2c1b44: hlt    
  0x00007f003f2c1b45: hlt    
  0x00007f003f2c1b46: hlt    
  0x00007f003f2c1b47: hlt    
  0x00007f003f2c1b48: hlt    
  0x00007f003f2c1b49: hlt    
  0x00007f003f2c1b4a: hlt    
  0x00007f003f2c1b4b: hlt    
  0x00007f003f2c1b4c: hlt    
  0x00007f003f2c1b4d: hlt    
  0x00007f003f2c1b4e: hlt    
  0x00007f003f2c1b4f: hlt    
  0x00007f003f2c1b50: hlt    
  0x00007f003f2c1b51: hlt    
  0x00007f003f2c1b52: hlt    
  0x00007f003f2c1b53: hlt    
  0x00007f003f2c1b54: hlt    
  0x00007f003f2c1b55: hlt    
  0x00007f003f2c1b56: hlt    
  0x00007f003f2c1b57: hlt    
  0x00007f003f2c1b58: hlt    
  0x00007f003f2c1b59: hlt    
  0x00007f003f2c1b5a: hlt    
  0x00007f003f2c1b5b: hlt    
  0x00007f003f2c1b5c: hlt    
  0x00007f003f2c1b5d: hlt    
  0x00007f003f2c1b5e: hlt    
  0x00007f003f2c1b5f: hlt    
[Stub Code]
  0x00007f003f2c1b60: nop                       ;   {no_reloc}
  0x00007f003f2c1b61: nop
  0x00007f003f2c1b62: nop
  0x00007f003f2c1b63: nop
  0x00007f003f2c1b64: nop
  0x00007f003f2c1b65: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c1b6f: jmp    0x00007f003f2c1b6f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2c1b74: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2c1b79: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2c1b7e: sub    rsp,0x80
  0x00007f003f2c1b85: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2c1b8a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2c1b8f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2c1b94: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2c1b99: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2c1b9e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2c1ba3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2c1ba8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2c1bad: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2c1bb2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2c1bb7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2c1bbc: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2c1bc1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2c1bc6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2c1bcb: mov    QWORD PTR [rsp],r15
  0x00007f003f2c1bcf: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2c1bd9: movabs rsi,0x7f003f2c1b79  ;   {internal_word}
  0x00007f003f2c1be3: mov    rdx,rsp
  0x00007f003f2c1be6: and    rsp,0xfffffffffffffff0
  0x00007f003f2c1bea: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2c1bef: hlt    
[Deopt Handler Code]
  0x00007f003f2c1bf0: movabs r10,0x7f003f2c1bf0  ;   {section_word}
  0x00007f003f2c1bfa: push   r10
  0x00007f003f2c1bfc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2c1c01: hlt    
  0x00007f003f2c1c02: hlt    
  0x00007f003f2c1c03: hlt    
  0x00007f003f2c1c04: hlt    
  0x00007f003f2c1c05: hlt    
  0x00007f003f2c1c06: hlt    
  0x00007f003f2c1c07: hlt    
<nmethod compile_id='105' compiler='C1' level='3' entry='0x00007f003f2c18e0' size='1424' address='0x00007f003f2c1750' relocation_offset='312' insts_offset='400' stub_offset='1040' scopes_data_offset='1216' scopes_pcs_offset='1272' dependencies_offset='1416' metadata_offset='1208' method='java/lang/StringBuffer append (Ljava/lang/String;)Ljava/lang/StringBuffer;' bytes='13' count='390' iicount='390' stamp='0.480'/>
<writer thread='139637818533632'/>
[Loaded sun.net.www.protocol.jar.JarURLConnection from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.jar.URLJarFile$URLJarFileCloseController from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.jar.JarFileFactory from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.jar.URLJarFile from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<dependency_failed type='leaf_type' ctxk='java/util/jar/JarFile' witness='sun/net/www/protocol/jar/URLJarFile' stamp='0.481'/>
<dependency_failed type='leaf_type' ctxk='java/util/jar/JarFile' witness='sun/net/www/protocol/jar/URLJarFile' stamp='0.481'/>
<writer thread='139637828175616'/>
<make_not_entrant thread='139637828175616' compile_id='80' compiler='C1' level='3' stamp='0.481'/>
<make_not_entrant thread='139637828175616' compile_id='90' compiler='C1' level='3' stamp='0.481'/>
<writer thread='139637818533632'/>
<task_queued compile_id='107' method='java/lang/StringCoding deref (Ljava/lang/ThreadLocal;)Ljava/lang/Object;' bytes='19' count='256' iicount='256' level='3' stamp='0.481' comment='tiered' hot_count='256'/>
[Loaded sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.jar.JarURLConnection$JarURLInputStream from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<task_queued compile_id='108' method='java/lang/String endsWith (Ljava/lang/String;)Z' bytes='17' count='512' iicount='512' level='3' stamp='0.481' comment='tiered' hot_count='512'/>
<task_queued compile_id='109' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='4608' iicount='4608' level='1' stamp='0.481' comment='tiered' hot_count='4608'/>
[Loaded java.util.ArrayList$Itr from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
sun/net/www/ParseUtil.encodePath  [0x00007f003f2c1f80, 0x00007f003f2c2e18]  3736 bytes
[Entry Point]
[Verified Entry Point]
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.amd64.AMD64HotSpotJVMCIBackendFactory from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
[Constants]
  # {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/String&apos;
  # parm1:    rdx       = boolean
  #           [sp+0xc0]  (sp of caller)
  0x00007f003f2c1f80: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2c1f87: push   rbp
  0x00007f003f2c1f88: sub    rsp,0xb0
  0x00007f003f2c1f8f: mov    DWORD PTR [rsp+0x78],edx
  0x00007f003f2c1f93: movabs rbx,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c1f9d: mov    edi,DWORD PTR [rbx+0xfc]
  0x00007f003f2c1fa3: add    edi,0x8
  0x00007f003f2c1fa6: mov    DWORD PTR [rbx+0xfc],edi
  0x00007f003f2c1fac: movabs rbx,0x7f003892f388  ;   {metadata({method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c1fb6: and    edi,0x1ff8
  0x00007f003f2c1fbc: cmp    edi,0x0
  0x00007f003f2c1fbf: je     0x00007f003f2c2b83  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@0 (line 105)

  0x00007f003f2c1fc5: cmp    rax,QWORD PTR [rsi]  ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@1 (line 105)
                                                ; implicit exception: dispatches to 0x00007f003f2c2b9a
  0x00007f003f2c1fc8: mov    rbx,rsi
  0x00007f003f2c1fcb: movabs rdi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c1fd5: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f2c1fdd: movabs rbx,0x7f003898eaf8  ;   {metadata(method data for {method} {0x00007f003876a538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2c1fe7: mov    edi,DWORD PTR [rbx+0xfc]
  0x00007f003f2c1fed: add    edi,0x8
  0x00007f003f2c1ff0: mov    DWORD PTR [rbx+0xfc],edi
  0x00007f003f2c1ff6: movabs rbx,0x7f003876a538  ;   {metadata({method} {0x00007f003876a538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2c2000: and    edi,0x7ffff8
  0x00007f003f2c2006: cmp    edi,0x0
  0x00007f003f2c2009: je     0x00007f003f2c2b9f
  0x00007f003f2c200f: mov    r8d,DWORD PTR [rsi+0xc]
  0x00007f003f2c2013: shl    r8,0x3             ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@1 (line 105)

  0x00007f003f2c2017: mov    r9d,DWORD PTR [r8+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@1 (line 105)
                                                ; implicit exception: dispatches to 0x00007f003f2c2bb6
  0x00007f003f2c201b: mov    rbx,r9
  0x00007f003f2c201e: shl    ebx,1
  0x00007f003f2c2020: add    ebx,0x10
  0x00007f003f2c2023: movabs rdx,0x7c00001f8    ;   {metadata({type array char})}
  0x00007f003f2c202d: mov    r13,rsi
  0x00007f003f2c2030: movsxd rbx,ebx
  0x00007f003f2c2033: mov    rdi,rbx
  0x00007f003f2c2036: cmp    rbx,0xffffff
  0x00007f003f2c203d: ja     0x00007f003f2c2bbb
  0x00007f003f2c2043: movabs rsi,0x17
  0x00007f003f2c204d: lea    rsi,[rsi+rbx*2]
  0x00007f003f2c2051: and    rsi,0xfffffffffffffff8
  0x00007f003f2c2055: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2c2059: lea    rsi,[rax+rsi*1]
  0x00007f003f2c205d: cmp    rsi,QWORD PTR [r15+0x70]
  0x00007f003f2c2061: ja     0x00007f003f2c2bbb
  0x00007f003f2c2067: mov    QWORD PTR [r15+0x60],rsi
  0x00007f003f2c206b: sub    rsi,rax
  0x00007f003f2c206e: mov    QWORD PTR [rax],0x1
  0x00007f003f2c2075: mov    rcx,rdx
  0x00007f003f2c2078: shr    rcx,0x3
  0x00007f003f2c207c: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2c207f: mov    DWORD PTR [rax+0xc],ebx
  0x00007f003f2c2082: sub    rsi,0x10
  0x00007f003f2c2086: je     0x00007f003f2c209d
  0x00007f003f2c208c: xor    rbx,rbx
  0x00007f003f2c208f: shr    rsi,0x3
  0x00007f003f2c2093: mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x00007f003f2c2098: dec    rsi
  0x00007f003f2c209b: jne    0x00007f003f2c2093  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@9 (line 105)

  0x00007f003f2c209d: mov    rsi,r13
  0x00007f003f2c20a0: movabs rbx,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c20aa: add    QWORD PTR [rbx+0x1c8],0x1
  0x00007f003f2c20b2: movabs rbx,0x7f0038a57c38  ;   {metadata(method data for {method} {0x00007f003876e640} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2c20bc: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f2c20c2: add    edx,0x8
  0x00007f003f2c20c5: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f2c20cb: movabs rbx,0x7f003876e640  ;   {metadata({method} {0x00007f003876e640} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2c20d5: and    edx,0x7ffff8
  0x00007f003f2c20db: cmp    edx,0x0
  0x00007f003f2c20de: je     0x00007f003f2c2bc5
  0x00007f003f2c20e4: mov    rbx,r9
  0x00007f003f2c20e7: movabs rdx,0x7c00001f8    ;   {metadata({type array char})}
  0x00007f003f2c20f1: mov    QWORD PTR [rsp+0x68],rax
  0x00007f003f2c20f6: movsxd rbx,ebx
  0x00007f003f2c20f9: mov    rdi,rbx
  0x00007f003f2c20fc: cmp    rbx,0xffffff
  0x00007f003f2c2103: ja     0x00007f003f2c2bdc
  0x00007f003f2c2109: movabs rsi,0x17
  0x00007f003f2c2113: lea    rsi,[rsi+rbx*2]
  0x00007f003f2c2117: and    rsi,0xfffffffffffffff8
  0x00007f003f2c211b: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2c211f: lea    rsi,[rax+rsi*1]
  0x00007f003f2c2123: cmp    rsi,QWORD PTR [r15+0x70]
  0x00007f003f2c2127: ja     0x00007f003f2c2bdc
  0x00007f003f2c212d: mov    QWORD PTR [r15+0x60],rsi
  0x00007f003f2c2131: sub    rsi,rax
  0x00007f003f2c2134: mov    QWORD PTR [rax],0x1
  0x00007f003f2c213b: mov    rcx,rdx
  0x00007f003f2c213e: shr    rcx,0x3
  0x00007f003f2c2142: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2c2145: mov    DWORD PTR [rax+0xc],ebx
  0x00007f003f2c2148: sub    rsi,0x10
  0x00007f003f2c214c: je     0x00007f003f2c2163
  0x00007f003f2c2152: xor    rbx,rbx
  0x00007f003f2c2155: shr    rsi,0x3
  0x00007f003f2c2159: mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x00007f003f2c215e: dec    rsi
  0x00007f003f2c2161: jne    0x00007f003f2c2159  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@5 (line 2899)
                                                ; - sun.net.www.ParseUtil::encodePath@15 (line 107)

  0x00007f003f2c2163: mov    QWORD PTR [rsp+0x70],rax
  0x00007f003f2c2168: movabs rsi,0x7f0038a57c38  ;   {metadata(method data for {method} {0x00007f003876e640} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2c2172: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2c217a: mov    rsi,r8
  0x00007f003f2c217d: mov    edx,0x0
  0x00007f003f2c2182: mov    rcx,rax
  0x00007f003f2c2185: mov    r8d,0x0
  0x00007f003f2c218b: mov    QWORD PTR [rsp+0x60],r13
  0x00007f003f2c2190: lea    rdi,[r8+r9*1]
  0x00007f003f2c2194: cmp    edi,DWORD PTR [rcx+0xc]
  0x00007f003f2c2197: ja     0x00007f003f2c2be6
  0x00007f003f2c219d: movsxd rdx,edx
  0x00007f003f2c21a0: movsxd r8,r8d
  0x00007f003f2c21a3: lea    rdi,[rsi+rdx*2+0x10]
  0x00007f003f2c21a8: lea    rsi,[rcx+r8*2+0x10]
  0x00007f003f2c21ad: mov    rdx,r9
  0x00007f003f2c21b0: test   esp,0xf
  0x00007f003f2c21b6: je     0x00007f003f2c21ce
  0x00007f003f2c21bc: sub    rsp,0x8
  0x00007f003f2c21c0: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007f003f2c21c5: add    rsp,0x8
  0x00007f003f2c21c9: jmp    0x00007f003f2c21d3
  0x00007f003f2c21ce: call   Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@20 (line 2900)
                                                ; - sun.net.www.ParseUtil::encodePath@15 (line 107)
                                                ;   {runtime_call}
  0x00007f003f2c21d3: mov    rsi,QWORD PTR [rsp+0x60]
  0x00007f003f2c21d8: movabs rdx,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c21e2: add    QWORD PTR [rdx+0x260],0x1
  0x00007f003f2c21ea: movabs rdx,0x7f003898eaf8  ;   {metadata(method data for {method} {0x00007f003876a538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2c21f4: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2c21fa: add    esi,0x8
  0x00007f003f2c21fd: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2c2203: movabs rdx,0x7f003876a538  ;   {metadata({method} {0x00007f003876a538} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2c220d: and    esi,0x7ffff8
  0x00007f003f2c2213: cmp    esi,0x0
  0x00007f003f2c2216: je     0x00007f003f2c2bf1
  0x00007f003f2c221c: mov    rsi,QWORD PTR [rsp+0x60]
  0x00007f003f2c2221: mov    edx,DWORD PTR [rsi+0xc]
  0x00007f003f2c2224: shl    rdx,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@21 (line 109)

  0x00007f003f2c2228: mov    edi,DWORD PTR [rdx+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@21 (line 109)
                                                ; implicit exception: dispatches to 0x00007f003f2c2c08
  0x00007f003f2c222b: mov    DWORD PTR [rsp+0x90],edi
  0x00007f003f2c2232: mov    rax,QWORD PTR [rsp+0x68]
  0x00007f003f2c2237: mov    ebx,0x0
  0x00007f003f2c223c: mov    ecx,0x0            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@29 (line 110)

  0x00007f003f2c2241: mov    DWORD PTR [rsp+0x88],ecx
  0x00007f003f2c2248: mov    QWORD PTR [rsp+0x80],rax
  0x00007f003f2c2250: mov    rax,QWORD PTR [rsp+0x70]
  0x00007f003f2c2255: data16 xchg ax,ax
  0x00007f003f2c2258: mov    edx,DWORD PTR [rsp+0x78]
  0x00007f003f2c225c: cmp    ebx,edi
  0x00007f003f2c225e: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c2268: movabs r9,0x2f8
  0x00007f003f2c2272: jge    0x00007f003f2c2282
  0x00007f003f2c2278: movabs r9,0x308
  0x00007f003f2c2282: mov    r11,QWORD PTR [rsi+r9*1]
  0x00007f003f2c2286: lea    r11,[r11+0x1]
  0x00007f003f2c228a: mov    QWORD PTR [rsi+r9*1],r11
  0x00007f003f2c228e: jge    0x00007f003f2c2aeb  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@33 (line 110)

  0x00007f003f2c2294: movsxd rsi,ebx
  0x00007f003f2c2297: cmp    ebx,DWORD PTR [rax+0xc]
  0x00007f003f2c229a: jae    0x00007f003f2c2c0d
  0x00007f003f2c22a0: movzx  r9d,WORD PTR [rax+rsi*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@40 (line 111)

  0x00007f003f2c22a6: mov    DWORD PTR [rsp+0x7c],r9d
  0x00007f003f2c22ab: cmp    edx,0x0
  0x00007f003f2c22ae: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c22b8: movabs r11,0x318
  0x00007f003f2c22c2: jne    0x00007f003f2c22d2
  0x00007f003f2c22c8: movabs r11,0x328
  0x00007f003f2c22d2: mov    r13,QWORD PTR [rsi+r11*1]
  0x00007f003f2c22d6: lea    r13,[r13+0x1]
  0x00007f003f2c22da: mov    QWORD PTR [rsi+r11*1],r13
  0x00007f003f2c22de: jne    0x00007f003f2c231e  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@44 (line 112)

  0x00007f003f2c22e4: cmp    r9d,0x2f
  0x00007f003f2c22e8: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c22f2: movabs r11,0x338
  0x00007f003f2c22fc: je     0x00007f003f2c230c
  0x00007f003f2c2302: movabs r11,0x348
  0x00007f003f2c230c: mov    r13,QWORD PTR [rsi+r11*1]
  0x00007f003f2c2310: lea    r13,[r13+0x1]
  0x00007f003f2c2314: mov    QWORD PTR [rsi+r11*1],r13
  0x00007f003f2c2318: je     0x00007f003f2c2849  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@51 (line 112)

  0x00007f003f2c231e: cmp    edx,0x0
  0x00007f003f2c2321: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c232b: movabs r11,0x358
  0x00007f003f2c2335: je     0x00007f003f2c2345
  0x00007f003f2c233b: movabs r11,0x368
  0x00007f003f2c2345: mov    r13,QWORD PTR [rsi+r11*1]
  0x00007f003f2c2349: lea    r13,[r13+0x1]
  0x00007f003f2c234d: mov    QWORD PTR [rsi+r11*1],r13
  0x00007f003f2c2351: je     0x00007f003f2c2391  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@55 (line 112)

  0x00007f003f2c2357: cmp    r9d,0x2f
  0x00007f003f2c235b: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c2365: movabs r11,0x378
  0x00007f003f2c236f: jne    0x00007f003f2c237f
  0x00007f003f2c2375: movabs r11,0x388
  0x00007f003f2c237f: mov    r13,QWORD PTR [rsi+r11*1]
  0x00007f003f2c2383: lea    r13,[r13+0x1]
  0x00007f003f2c2387: mov    QWORD PTR [rsi+r11*1],r13
  0x00007f003f2c238b: je     0x00007f003f2c2849  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@63 (line 112)

  0x00007f003f2c2391: cmp    r9d,0x7f
  0x00007f003f2c2395: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c239f: movabs r11,0x3b0
  0x00007f003f2c23a9: jg     0x00007f003f2c23b9
  0x00007f003f2c23af: movabs r11,0x3c0
  0x00007f003f2c23b9: mov    r13,QWORD PTR [rsi+r11*1]
  0x00007f003f2c23bd: lea    r13,[r13+0x1]
  0x00007f003f2c23c1: mov    QWORD PTR [rsi+r11*1],r13
  0x00007f003f2c23c5: jg     0x00007f003f2c268a  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@81 (line 115)

  0x00007f003f2c23cb: cmp    r9d,0x61
  0x00007f003f2c23cf: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c23d9: movabs r11,0x3d0
  0x00007f003f2c23e3: jl     0x00007f003f2c23f3
  0x00007f003f2c23e9: movabs r11,0x3e0
  0x00007f003f2c23f3: mov    r13,QWORD PTR [rsi+r11*1]
  0x00007f003f2c23f7: lea    r13,[r13+0x1]
  0x00007f003f2c23fb: mov    QWORD PTR [rsi+r11*1],r13
  0x00007f003f2c23ff: jl     0x00007f003f2c243f  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@88 (line 116)

  0x00007f003f2c2405: cmp    r9d,0x7a
  0x00007f003f2c2409: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c2413: movabs r11,0x3f0
  0x00007f003f2c241d: jle    0x00007f003f2c242d
  0x00007f003f2c2423: movabs r11,0x400
  0x00007f003f2c242d: mov    r13,QWORD PTR [rsi+r11*1]
  0x00007f003f2c2431: lea    r13,[r13+0x1]
  0x00007f003f2c2435: mov    QWORD PTR [rsi+r11*1],r13
  0x00007f003f2c2439: jle    0x00007f003f2c2642  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@95 (line 116)

  0x00007f003f2c243f: cmp    r9d,0x41
  0x00007f003f2c2443: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c244d: movabs r11,0x410
  0x00007f003f2c2457: jl     0x00007f003f2c2467
  0x00007f003f2c245d: movabs r11,0x420
  0x00007f003f2c2467: mov    r13,QWORD PTR [rsi+r11*1]
  0x00007f003f2c246b: lea    r13,[r13+0x1]
  0x00007f003f2c246f: mov    QWORD PTR [rsi+r11*1],r13
  0x00007f003f2c2473: jl     0x00007f003f2c24b3  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@102 (line 116)

  0x00007f003f2c2479: cmp    r9d,0x5a
  0x00007f003f2c247d: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c2487: movabs r11,0x430
  0x00007f003f2c2491: jle    0x00007f003f2c24a1
  0x00007f003f2c2497: movabs r11,0x440
  0x00007f003f2c24a1: mov    r13,QWORD PTR [rsi+r11*1]
  0x00007f003f2c24a5: lea    r13,[r13+0x1]
  0x00007f003f2c24a9: mov    QWORD PTR [rsi+r11*1],r13
  0x00007f003f2c24ad: jle    0x00007f003f2c2642  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@109 (line 116)

  0x00007f003f2c24b3: cmp    r9d,0x30
  0x00007f003f2c24b7: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c24c1: movabs r11,0x450
  0x00007f003f2c24cb: jl     0x00007f003f2c24db
  0x00007f003f2c24d1: movabs r11,0x460
  0x00007f003f2c24db: mov    r13,QWORD PTR [rsi+r11*1]
  0x00007f003f2c24df: lea    r13,[r13+0x1]
  0x00007f003f2c24e3: mov    QWORD PTR [rsi+r11*1],r13
  0x00007f003f2c24e7: jl     0x00007f003f2c2527  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@116 (line 116)

  0x00007f003f2c24ed: cmp    r9d,0x39
  0x00007f003f2c24f1: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c24fb: movabs r11,0x470
  0x00007f003f2c2505: jg     0x00007f003f2c2515
  0x00007f003f2c250b: movabs r11,0x480
  0x00007f003f2c2515: mov    r13,QWORD PTR [rsi+r11*1]
  0x00007f003f2c2519: lea    r13,[r13+0x1]
  0x00007f003f2c251d: mov    QWORD PTR [rsi+r11*1],r13
  0x00007f003f2c2521: jle    0x00007f003f2c2642  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@123 (line 116)

  0x00007f003f2c2527: mov    DWORD PTR [rsp+0x8c],ebx
  0x00007f003f2c252e: movabs rsi,0x670bbc170    ;   {oop(a &apos;java/lang/Class&apos; = &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c2538: mov    esi,DWORD PTR [rsi+0x68]
  0x00007f003f2c253b: shl    rsi,0x3            ;*getstatic encodedInPath {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@137 (line 121)

  0x00007f003f2c253f: cmp    rax,QWORD PTR [rsi]  ; implicit exception: dispatches to 0x00007f003f2c2c16
  0x00007f003f2c2542: mov    r11,rsi
  0x00007f003f2c2545: movabs r13,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c254f: movabs r10,0x7c0031d40    ;   {metadata(&apos;java/util/BitSet&apos;)}
  0x00007f003f2c2559: mov    QWORD PTR [r13+0x4b8],r10
  0x00007f003f2c2560: add    QWORD PTR [r13+0x4c0],0x1
  0x00007f003f2c2568: mov    rdx,r9             ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@142 (line 121)

  0x00007f003f2c256b: nop
  0x00007f003f2c256c: nop
  0x00007f003f2c256d: nop
  0x00007f003f2c256e: nop
  0x00007f003f2c256f: call   0x00007f003f1c4d60  ; OopMap{[112]=Oop [128]=Oop off=1524}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@142 (line 121)
                                                ;   {optimized virtual_call}
  0x00007f003f2c2574: cmp    eax,0x0
  0x00007f003f2c2577: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c2581: movabs rdx,0x540
  0x00007f003f2c258b: je     0x00007f003f2c259b
  0x00007f003f2c2591: movabs rdx,0x550
  0x00007f003f2c259b: mov    rcx,QWORD PTR [rsi+rdx*1]
  0x00007f003f2c259f: lea    rcx,[rcx+0x1]
  0x00007f003f2c25a3: mov    QWORD PTR [rsi+rdx*1],rcx
  0x00007f003f2c25a7: je     0x00007f003f2c25f9  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@145 (line 121)

  0x00007f003f2c25ad: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c25b7: add    QWORD PTR [rsi+0x560],0x1
  0x00007f003f2c25bf: mov    rsi,QWORD PTR [rsp+0x80]
  0x00007f003f2c25c7: mov    edx,DWORD PTR [rsp+0x7c]
  0x00007f003f2c25cb: mov    ecx,DWORD PTR [rsp+0x88]  ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@152 (line 122)

  0x00007f003f2c25d2: nop
  0x00007f003f2c25d3: nop
  0x00007f003f2c25d4: nop
  0x00007f003f2c25d5: nop
  0x00007f003f2c25d6: nop
  0x00007f003f2c25d7: call   0x00007f003f1c5160  ; OopMap{[112]=Oop [128]=Oop off=1628}
                                                ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@152 (line 122)
                                                ;   {static_call}
  0x00007f003f2c25dc: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c25e6: inc    DWORD PTR [rsi+0x570]
  0x00007f003f2c25ec: mov    r8,QWORD PTR [rsp+0x80]
  0x00007f003f2c25f4: jmp    0x00007f003f2c288f  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@156 (line 122)

  0x00007f003f2c25f9: mov    r9d,DWORD PTR [rsp+0x7c]
  0x00007f003f2c25fe: mov    ebx,DWORD PTR [rsp+0x88]
  0x00007f003f2c2605: mov    rax,QWORD PTR [rsp+0x80]
  0x00007f003f2c260d: mov    rcx,rbx
  0x00007f003f2c2610: inc    ecx
  0x00007f003f2c2612: movsxd rsi,ebx
  0x00007f003f2c2615: cmp    ebx,DWORD PTR [rax+0xc]  ; implicit exception: dispatches to 0x00007f003f2c2c1b
  0x00007f003f2c2618: jae    0x00007f003f2c2c25
  0x00007f003f2c261e: mov    WORD PTR [rax+rsi*2+0x10],r9w
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@166 (line 124)

  0x00007f003f2c2624: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c262e: inc    DWORD PTR [rsi+0x588]
  0x00007f003f2c2634: mov    rdi,rax
  0x00007f003f2c2637: mov    rax,rcx
  0x00007f003f2c263a: mov    r8,rdi
  0x00007f003f2c263d: jmp    0x00007f003f2c288f  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@167 (line 124)

  0x00007f003f2c2642: mov    DWORD PTR [rsp+0x8c],ebx
  0x00007f003f2c2649: mov    ebx,DWORD PTR [rsp+0x88]
  0x00007f003f2c2650: mov    rdi,QWORD PTR [rsp+0x80]
  0x00007f003f2c2658: mov    rcx,rbx
  0x00007f003f2c265b: inc    ecx
  0x00007f003f2c265d: movsxd rsi,ebx
  0x00007f003f2c2660: cmp    ebx,DWORD PTR [rdi+0xc]  ; implicit exception: dispatches to 0x00007f003f2c2c2e
  0x00007f003f2c2663: jae    0x00007f003f2c2c38
  0x00007f003f2c2669: mov    WORD PTR [rdi+rsi*2+0x10],r9w
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@133 (line 119)

  0x00007f003f2c266f: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c2679: inc    DWORD PTR [rsi+0x490]
  0x00007f003f2c267f: mov    rax,rcx
  0x00007f003f2c2682: mov    r8,rdi
  0x00007f003f2c2685: jmp    0x00007f003f2c288f  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@134 (line 119)

  0x00007f003f2c268a: mov    DWORD PTR [rsp+0x8c],ebx
  0x00007f003f2c2691: mov    ebx,DWORD PTR [rsp+0x88]
  0x00007f003f2c2698: mov    rdi,QWORD PTR [rsp+0x80]
  0x00007f003f2c26a0: cmp    r9d,0x7ff
  0x00007f003f2c26a7: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c26b1: movabs rdx,0x5a0
  0x00007f003f2c26bb: jle    0x00007f003f2c26cb
  0x00007f003f2c26c1: movabs rdx,0x5b0
  0x00007f003f2c26cb: mov    rcx,QWORD PTR [rsi+rdx*1]
  0x00007f003f2c26cf: lea    rcx,[rcx+0x1]
  0x00007f003f2c26d3: mov    QWORD PTR [rsi+rdx*1],rcx
  0x00007f003f2c26d7: jle    0x00007f003f2c27b9  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@175 (line 125)

  0x00007f003f2c26dd: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c26e7: add    QWORD PTR [rsi+0x5c0],0x1
  0x00007f003f2c26ef: mov    rsi,r9
  0x00007f003f2c26f2: sar    esi,0xc
  0x00007f003f2c26f5: and    esi,0xf
  0x00007f003f2c26f8: or     esi,0xe0
  0x00007f003f2c26fe: mov    rdx,rsi
  0x00007f003f2c2701: and    edx,0xffff
  0x00007f003f2c2707: mov    rsi,rdi
  0x00007f003f2c270a: mov    rcx,rbx            ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@193 (line 126)

  0x00007f003f2c270d: mov    QWORD PTR [rsp+0x80],rdi
  0x00007f003f2c2715: nop
  0x00007f003f2c2716: nop
  0x00007f003f2c2717: call   0x00007f003f1c5160  ; OopMap{[112]=Oop [128]=Oop off=1948}
                                                ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@193 (line 126)
                                                ;   {static_call}
  0x00007f003f2c271c: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c2726: add    QWORD PTR [rsi+0x5d0],0x1
  0x00007f003f2c272e: mov    r9d,DWORD PTR [rsp+0x7c]
  0x00007f003f2c2733: sar    r9d,0x6
  0x00007f003f2c2737: and    r9d,0x3f
  0x00007f003f2c273b: or     r9d,0x80
  0x00007f003f2c2742: and    r9d,0xffff
  0x00007f003f2c2749: mov    rsi,QWORD PTR [rsp+0x80]
  0x00007f003f2c2751: mov    rdx,r9
  0x00007f003f2c2754: mov    rcx,rax            ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@212 (line 127)

  0x00007f003f2c2757: call   0x00007f003f1c5160  ; OopMap{[112]=Oop [128]=Oop off=2012}
                                                ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@212 (line 127)
                                                ;   {static_call}
  0x00007f003f2c275c: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c2766: add    QWORD PTR [rsi+0x5e0],0x1
  0x00007f003f2c276e: mov    r9d,DWORD PTR [rsp+0x7c]
  0x00007f003f2c2773: and    r9d,0x3f
  0x00007f003f2c2777: or     r9d,0x80
  0x00007f003f2c277e: and    r9d,0xffff
  0x00007f003f2c2785: mov    rsi,QWORD PTR [rsp+0x80]
  0x00007f003f2c278d: mov    rdx,r9
  0x00007f003f2c2790: mov    rcx,rax            ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@230 (line 128)

  0x00007f003f2c2793: nop
  0x00007f003f2c2794: nop
  0x00007f003f2c2795: nop
  0x00007f003f2c2796: nop
  0x00007f003f2c2797: call   0x00007f003f1c5160  ; OopMap{[112]=Oop [128]=Oop off=2076}
                                                ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@230 (line 128)
                                                ;   {static_call}
  0x00007f003f2c279c: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c27a6: inc    DWORD PTR [rsi+0x5f0]
  0x00007f003f2c27ac: mov    r8,QWORD PTR [rsp+0x80]
  0x00007f003f2c27b4: jmp    0x00007f003f2c288f  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@234 (line 128)

  0x00007f003f2c27b9: mov    QWORD PTR [rsp+0x80],rdi
  0x00007f003f2c27c1: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c27cb: add    QWORD PTR [rsi+0x608],0x1
  0x00007f003f2c27d3: mov    rsi,r9
  0x00007f003f2c27d6: sar    esi,0x6
  0x00007f003f2c27d9: and    esi,0x1f
  0x00007f003f2c27dc: or     esi,0xc0
  0x00007f003f2c27e2: mov    rdx,rsi
  0x00007f003f2c27e5: and    edx,0xffff
  0x00007f003f2c27eb: mov    rsi,QWORD PTR [rsp+0x80]
  0x00007f003f2c27f3: mov    rcx,rbx            ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@252 (line 130)

  0x00007f003f2c27f6: nop
  0x00007f003f2c27f7: call   0x00007f003f1c5160  ; OopMap{[112]=Oop [128]=Oop off=2172}
                                                ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@252 (line 130)
                                                ;   {static_call}
  0x00007f003f2c27fc: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c2806: add    QWORD PTR [rsi+0x618],0x1
  0x00007f003f2c280e: mov    r9d,DWORD PTR [rsp+0x7c]
  0x00007f003f2c2813: and    r9d,0x3f
  0x00007f003f2c2817: or     r9d,0x80
  0x00007f003f2c281e: and    r9d,0xffff
  0x00007f003f2c2825: mov    rsi,QWORD PTR [rsp+0x80]
  0x00007f003f2c282d: mov    rdx,r9
  0x00007f003f2c2830: mov    rcx,rax            ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@270 (line 131)

  0x00007f003f2c2833: nop
  0x00007f003f2c2834: nop
  0x00007f003f2c2835: nop
  0x00007f003f2c2836: nop
  0x00007f003f2c2837: call   0x00007f003f1c5160  ; OopMap{[112]=Oop [128]=Oop off=2236}
                                                ;*invokestatic escape {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@270 (line 131)
                                                ;   {static_call}
  0x00007f003f2c283c: mov    r8,QWORD PTR [rsp+0x80]
  0x00007f003f2c2844: jmp    0x00007f003f2c288f  ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@274 (line 136)

  0x00007f003f2c2849: mov    DWORD PTR [rsp+0x8c],ebx
  0x00007f003f2c2850: mov    ebx,DWORD PTR [rsp+0x88]
  0x00007f003f2c2857: mov    r8,QWORD PTR [rsp+0x80]
  0x00007f003f2c285f: mov    rcx,rbx
  0x00007f003f2c2862: inc    ecx
  0x00007f003f2c2864: mov    edx,0x2f
  0x00007f003f2c2869: movsxd rsi,ebx
  0x00007f003f2c286c: cmp    ebx,DWORD PTR [r8+0xc]  ; implicit exception: dispatches to 0x00007f003f2c2c41
  0x00007f003f2c2870: jae    0x00007f003f2c2c4b
  0x00007f003f2c2876: mov    WORD PTR [r8+rsi*2+0x10],dx
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@73 (line 113)

  0x00007f003f2c287c: movabs rbx,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c2886: inc    DWORD PTR [rbx+0x398]
  0x00007f003f2c288c: mov    rax,rcx            ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@74 (line 113)

  0x00007f003f2c288f: mov    ebx,DWORD PTR [r8+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@279 (line 136)
                                                ; implicit exception: dispatches to 0x00007f003f2c2c54
  0x00007f003f2c2893: mov    rdx,rax
  0x00007f003f2c2896: add    edx,0x9
  0x00007f003f2c2899: cmp    edx,ebx
  0x00007f003f2c289b: movabs rdx,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c28a5: movabs rsi,0x628
  0x00007f003f2c28af: jle    0x00007f003f2c28bf
  0x00007f003f2c28b5: movabs rsi,0x638
  0x00007f003f2c28bf: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2c28c3: lea    rdi,[rdi+0x1]
  0x00007f003f2c28c7: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2c28cb: jg     0x00007f003f2c28d9  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@280 (line 136)

  0x00007f003f2c28d1: mov    rsi,r8
  0x00007f003f2c28d4: jmp    0x00007f003f2c2a6e  ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@319 (line 110)

  0x00007f003f2c28d9: shl    ebx,1
  0x00007f003f2c28db: add    ebx,0x10
  0x00007f003f2c28de: cmp    ebx,0x0
  0x00007f003f2c28e1: movabs rdx,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c28eb: movabs rsi,0x648
  0x00007f003f2c28f5: jge    0x00007f003f2c2905
  0x00007f003f2c28fb: movabs rsi,0x658
  0x00007f003f2c2905: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2c2909: lea    rdi,[rdi+0x1]
  0x00007f003f2c290d: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2c2911: jge    0x00007f003f2c291c  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@294 (line 138)

  0x00007f003f2c2917: mov    ebx,0x7fffffff     ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@301 (line 141)

  0x00007f003f2c291c: movabs rdx,0x7c00001f8    ;   {metadata({type array char})}
  0x00007f003f2c2926: mov    r11,rax
  0x00007f003f2c2929: movsxd rbx,ebx
  0x00007f003f2c292c: mov    rdi,rbx
  0x00007f003f2c292f: cmp    rbx,0xffffff
  0x00007f003f2c2936: ja     0x00007f003f2c2c59
  0x00007f003f2c293c: movabs rsi,0x17
  0x00007f003f2c2946: lea    rsi,[rsi+rbx*2]
  0x00007f003f2c294a: and    rsi,0xfffffffffffffff8
  0x00007f003f2c294e: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2c2952: lea    rsi,[rax+rsi*1]
  0x00007f003f2c2956: cmp    rsi,QWORD PTR [r15+0x70]
  0x00007f003f2c295a: ja     0x00007f003f2c2c59
  0x00007f003f2c2960: mov    QWORD PTR [r15+0x60],rsi
  0x00007f003f2c2964: sub    rsi,rax
  0x00007f003f2c2967: mov    QWORD PTR [rax],0x1
  0x00007f003f2c296e: mov    rcx,rdx
  0x00007f003f2c2971: shr    rcx,0x3
  0x00007f003f2c2975: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2c2978: mov    DWORD PTR [rax+0xc],ebx
  0x00007f003f2c297b: sub    rsi,0x10
  0x00007f003f2c297f: je     0x00007f003f2c2996
  0x00007f003f2c2985: xor    rbx,rbx
  0x00007f003f2c2988: shr    rsi,0x3
  0x00007f003f2c298c: mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x00007f003f2c2991: dec    rsi
  0x00007f003f2c2994: jne    0x00007f003f2c298c  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@303 (line 141)

  0x00007f003f2c2996: movabs rsi,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c29a0: add    QWORD PTR [rsi+0x668],0x1
  0x00007f003f2c29a8: mov    rsi,r8
  0x00007f003f2c29ab: mov    edx,0x0
  0x00007f003f2c29b0: mov    rcx,rax
  0x00007f003f2c29b3: mov    r8d,0x0
  0x00007f003f2c29b9: mov    r9,r11
  0x00007f003f2c29bc: mov    DWORD PTR [rsp+0x94],r11d
  0x00007f003f2c29c4: mov    QWORD PTR [rsp+0x98],rax
  0x00007f003f2c29cc: mov    edi,DWORD PTR [rcx+0x8]
  0x00007f003f2c29cf: shl    rdi,0x3
  0x00007f003f2c29d3: cmp    DWORD PTR [rdi+0x8],0x0
  0x00007f003f2c29da: jge    0x00007f003f2c2c63
  0x00007f003f2c29e0: mov    edi,DWORD PTR [rsi+0x8]
  0x00007f003f2c29e3: shl    rdi,0x3
  0x00007f003f2c29e7: cmp    DWORD PTR [rdi+0x8],0x0
  0x00007f003f2c29ee: jge    0x00007f003f2c2c63
  0x00007f003f2c29f4: lea    rdi,[rdx+r9*1]
  0x00007f003f2c29f8: cmp    edi,DWORD PTR [rsi+0xc]
  0x00007f003f2c29fb: ja     0x00007f003f2c2c63
  0x00007f003f2c2a01: lea    rdi,[r8+r9*1]
  0x00007f003f2c2a05: cmp    edi,DWORD PTR [rcx+0xc]
  0x00007f003f2c2a08: ja     0x00007f003f2c2c63
  0x00007f003f2c2a0e: test   r9d,r9d
  0x00007f003f2c2a11: jl     0x00007f003f2c2c63
  0x00007f003f2c2a17: je     0x00007f003f2c2a5f
  0x00007f003f2c2a1d: movsxd rdx,edx
  0x00007f003f2c2a20: movsxd r8,r8d
  0x00007f003f2c2a23: mov    edi,DWORD PTR [rsi+0x8]
  0x00007f003f2c2a26: cmp    edi,DWORD PTR [rcx+0x8]
  0x00007f003f2c2a29: jne    0x00007f003f2c2c63
  0x00007f003f2c2a2f: lea    rdi,[rsi+rdx*2+0x10]
  0x00007f003f2c2a34: lea    rsi,[rcx+r8*2+0x10]
  0x00007f003f2c2a39: mov    rdx,r9
  0x00007f003f2c2a3c: test   esp,0xf
  0x00007f003f2c2a42: je     0x00007f003f2c2a5a
  0x00007f003f2c2a48: sub    rsp,0x8
  0x00007f003f2c2a4c: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007f003f2c2a51: add    rsp,0x8
  0x00007f003f2c2a55: jmp    0x00007f003f2c2a5f
  0x00007f003f2c2a5a: call   Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@313 (line 142)
                                                ;   {runtime_call}
  0x00007f003f2c2a5f: mov    rsi,QWORD PTR [rsp+0x98]  ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@319 (line 110)

  0x00007f003f2c2a67: mov    eax,DWORD PTR [rsp+0x94]
  0x00007f003f2c2a6e: mov    ebx,DWORD PTR [rsp+0x8c]
  0x00007f003f2c2a75: inc    ebx
  0x00007f003f2c2a77: movabs rdx,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c2a81: mov    edi,DWORD PTR [rdx+0x100]
  0x00007f003f2c2a87: add    edi,0x8
  0x00007f003f2c2a8a: mov    DWORD PTR [rdx+0x100],edi
  0x00007f003f2c2a90: movabs rdx,0x7f003892f388  ;   {metadata({method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c2a9a: and    edi,0xfff8
  0x00007f003f2c2aa0: cmp    edi,0x0
  0x00007f003f2c2aa3: je     0x00007f003f2c2c71  ; OopMap{[112]=Oop rsi=Oop off=2857}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@322 (line 110)

  0x00007f003f2c2aa9: test   DWORD PTR [rip+0x1b0ff651],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2c2aaf: movabs rdx,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c2ab9: inc    DWORD PTR [rdx+0x678]
  0x00007f003f2c2abf: mov    rdx,rbx
  0x00007f003f2c2ac2: mov    rbx,rax
  0x00007f003f2c2ac5: mov    r8,rsi
  0x00007f003f2c2ac8: mov    DWORD PTR [rsp+0x88],ebx
  0x00007f003f2c2acf: mov    QWORD PTR [rsp+0x80],r8
  0x00007f003f2c2ad7: mov    edi,DWORD PTR [rsp+0x90]
  0x00007f003f2c2ade: mov    rax,QWORD PTR [rsp+0x70]
  0x00007f003f2c2ae3: mov    rbx,rdx
  0x00007f003f2c2ae6: jmp    0x00007f003f2c2258  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@322 (line 110)

  0x00007f003f2c2aeb: mov    ebx,DWORD PTR [rsp+0x88]
  0x00007f003f2c2af2: mov    r8,QWORD PTR [rsp+0x80]
  0x00007f003f2c2afa: movabs rdx,0x7c0001610    ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007f003f2c2b04: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2c2b08: lea    rdi,[rax+0x18]
  0x00007f003f2c2b0c: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2c2b10: ja     0x00007f003f2c2c88
  0x00007f003f2c2b16: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2c2b1a: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2c2b21: mov    QWORD PTR [rax],rcx
  0x00007f003f2c2b24: mov    rcx,rdx
  0x00007f003f2c2b27: shr    rcx,0x3
  0x00007f003f2c2b2b: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2c2b2e: xor    rcx,rcx
  0x00007f003f2c2b31: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2c2b34: xor    rcx,rcx
  0x00007f003f2c2b37: mov    QWORD PTR [rax+0x10],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@325 (line 146)

  0x00007f003f2c2b3b: mov    rdx,rax
  0x00007f003f2c2b3e: movabs rcx,0x7f0038a7bb20  ;   {metadata(method data for {method} {0x00007f003892f388} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x00007f003f2c2b48: add    QWORD PTR [rcx+0x690],0x1
  0x00007f003f2c2b50: mov    rdx,r8
  0x00007f003f2c2b53: mov    ecx,0x0
  0x00007f003f2c2b58: mov    r8,rbx
  0x00007f003f2c2b5b: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@332 (line 146)

  0x00007f003f2c2b5e: mov    QWORD PTR [rsp+0xa0],rax
  0x00007f003f2c2b66: nop
  0x00007f003f2c2b67: call   0x00007f003f1c4d60  ; OopMap{[160]=Oop off=3052}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@332 (line 146)
                                                ;   {optimized virtual_call}
  0x00007f003f2c2b6c: mov    rax,QWORD PTR [rsp+0xa0]
  0x00007f003f2c2b74: add    rsp,0xb0
  0x00007f003f2c2b7b: pop    rbp
  0x00007f003f2c2b7c: test   DWORD PTR [rip+0x1b0ff57e],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c2b82: ret    
  0x00007f003f2c2b83: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2c2b88: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c2b90: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=3093}
                                                ;*synchronization entry
                                                ; - sun.net.www.ParseUtil::encodePath@-1 (line 105)
                                                ;   {runtime_call}
  0x00007f003f2c2b95: jmp    0x00007f003f2c1fc5
  0x00007f003f2c2b9a: call   0x00007f003f279000  ; OopMap{rsi=Oop off=3103}
                                                ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@1 (line 105)
                                                ;   {runtime_call}
  0x00007f003f2c2b9f: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2c2ba4: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c2bac: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=3121}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@1 (line 105)
                                                ;   {runtime_call}
  0x00007f003f2c2bb1: jmp    0x00007f003f2c200f
  0x00007f003f2c2bb6: call   0x00007f003f279000  ; OopMap{rsi=Oop r8=Oop off=3131}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@1 (line 105)
                                                ;   {runtime_call}
  0x00007f003f2c2bbb: call   0x00007f003f27a020  ; OopMap{r8=Oop r13=Oop off=3136}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@9 (line 105)
                                                ;   {runtime_call}
  0x00007f003f2c2bc0: jmp    0x00007f003f2c209d
  0x00007f003f2c2bc5: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2c2bca: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c2bd2: call   0x00007f003f27d5e0  ; OopMap{r8=Oop r13=Oop rax=Oop off=3159}
                                                ;*synchronization entry
                                                ; - java.lang.String::toCharArray@-1 (line 2899)
                                                ; - sun.net.www.ParseUtil::encodePath@15 (line 107)
                                                ;   {runtime_call}
  0x00007f003f2c2bd7: jmp    0x00007f003f2c20e4
  0x00007f003f2c2bdc: call   0x00007f003f27a020  ; OopMap{r8=Oop r13=Oop [104]=Oop off=3169}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@5 (line 2899)
                                                ; - sun.net.www.ParseUtil::encodePath@15 (line 107)
                                                ;   {runtime_call}
  0x00007f003f2c2be1: jmp    0x00007f003f2c2163
  0x00007f003f2c2be6: nop
  0x00007f003f2c2be7: call   0x00007f003f1c5160  ; OopMap{[112]=Oop [104]=Oop [96]=Oop off=3180}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toCharArray@20 (line 2900)
                                                ; - sun.net.www.ParseUtil::encodePath@15 (line 107)
                                                ;   {static_call}
  0x00007f003f2c2bec: jmp    0x00007f003f2c21d3
  0x00007f003f2c2bf1: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2c2bf6: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c2bfe: call   0x00007f003f27d5e0  ; OopMap{[112]=Oop [104]=Oop [96]=Oop off=3203}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@21 (line 109)
                                                ;   {runtime_call}
  0x00007f003f2c2c03: jmp    0x00007f003f2c221c
  0x00007f003f2c2c08: call   0x00007f003f279000  ; OopMap{[112]=Oop [104]=Oop off=3213}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@21 (line 109)
                                                ;   {runtime_call}
  0x00007f003f2c2c0d: mov    QWORD PTR [rsp],rbx
  0x00007f003f2c2c11: call   0x00007f003f278940  ; OopMap{[128]=Oop rax=Oop [112]=Oop off=3222}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@40 (line 111)
                                                ;   {runtime_call}
  0x00007f003f2c2c16: call   0x00007f003f279000  ; OopMap{[128]=Oop [112]=Oop rsi=Oop off=3227}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@142 (line 121)
                                                ;   {runtime_call}
  0x00007f003f2c2c1b: call   0x00007f003f279000  ; OopMap{[112]=Oop rax=Oop off=3232}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@166 (line 124)
                                                ;   {runtime_call}
  0x00007f003f2c2c20: call   0x00007f003f279000  ; OopMap{[112]=Oop rax=Oop off=3237}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@166 (line 124)
                                                ;   {runtime_call}
  0x00007f003f2c2c25: mov    QWORD PTR [rsp],rbx
  0x00007f003f2c2c29: call   0x00007f003f278940  ; OopMap{[112]=Oop rax=Oop off=3246}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@166 (line 124)
                                                ;   {runtime_call}
  0x00007f003f2c2c2e: call   0x00007f003f279000  ; OopMap{[112]=Oop rdi=Oop off=3251}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@133 (line 119)
                                                ;   {runtime_call}
  0x00007f003f2c2c33: call   0x00007f003f279000  ; OopMap{[112]=Oop rdi=Oop off=3256}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@133 (line 119)
                                                ;   {runtime_call}
  0x00007f003f2c2c38: mov    QWORD PTR [rsp],rbx
  0x00007f003f2c2c3c: call   0x00007f003f278940  ; OopMap{[112]=Oop rdi=Oop off=3265}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@133 (line 119)
                                                ;   {runtime_call}
  0x00007f003f2c2c41: call   0x00007f003f279000  ; OopMap{[112]=Oop r8=Oop off=3270}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@73 (line 113)
                                                ;   {runtime_call}
  0x00007f003f2c2c46: call   0x00007f003f279000  ; OopMap{[112]=Oop r8=Oop off=3275}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@73 (line 113)
                                                ;   {runtime_call}
  0x00007f003f2c2c4b: mov    QWORD PTR [rsp],rbx
  0x00007f003f2c2c4f: call   0x00007f003f278940  ; OopMap{[112]=Oop r8=Oop off=3284}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@73 (line 113)
                                                ;   {runtime_call}
  0x00007f003f2c2c54: call   0x00007f003f279000  ; OopMap{[112]=Oop r8=Oop off=3289}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@279 (line 136)
                                                ;   {runtime_call}
  0x00007f003f2c2c59: call   0x00007f003f27a020  ; OopMap{[112]=Oop r8=Oop off=3294}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@303 (line 141)
                                                ;   {runtime_call}
  0x00007f003f2c2c5e: jmp    0x00007f003f2c2996
  0x00007f003f2c2c63: nop
  0x00007f003f2c2c64: nop
  0x00007f003f2c2c65: nop
  0x00007f003f2c2c66: nop
  0x00007f003f2c2c67: call   0x00007f003f1c5160  ; OopMap{[112]=Oop [152]=Oop off=3308}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@313 (line 142)
                                                ;   {static_call}
  0x00007f003f2c2c6c: jmp    0x00007f003f2c2a5f
  0x00007f003f2c2c71: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2c2c76: mov    QWORD PTR [rsp],0x142
  0x00007f003f2c2c7e: call   0x00007f003f27d5e0  ; OopMap{[112]=Oop rsi=Oop off=3331}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@322 (line 110)
                                                ;   {runtime_call}
  0x00007f003f2c2c83: jmp    0x00007f003f2c2aa9
  0x00007f003f2c2c88: mov    rdx,rdx
  0x00007f003f2c2c8b: call   0x00007f003f279760  ; OopMap{r8=Oop off=3344}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::encodePath@325 (line 146)
                                                ;   {runtime_call}
  0x00007f003f2c2c90: jmp    0x00007f003f2c2b3b
  0x00007f003f2c2c95: nop
  0x00007f003f2c2c96: nop
  0x00007f003f2c2c97: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c2c9e: movabs r10,0x0
  0x00007f003f2c2ca8: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c2caf: movabs r10,0x0
  0x00007f003f2c2cb9: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c2cc0: add    rsp,0xb0
  0x00007f003f2c2cc7: pop    rbp
  0x00007f003f2c2cc8: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2c2ccd: hlt    
  0x00007f003f2c2cce: hlt    
  0x00007f003f2c2ccf: hlt    
  0x00007f003f2c2cd0: hlt    
  0x00007f003f2c2cd1: hlt    
  0x00007f003f2c2cd2: hlt    
  0x00007f003f2c2cd3: hlt    
  0x00007f003f2c2cd4: hlt    
  0x00007f003f2c2cd5: hlt    
  0x00007f003f2c2cd6: hlt    
  0x00007f003f2c2cd7: hlt    
  0x00007f003f2c2cd8: hlt    
  0x00007f003f2c2cd9: hlt    
  0x00007f003f2c2cda: hlt    
  0x00007f003f2c2cdb: hlt    
  0x00007f003f2c2cdc: hlt    
  0x00007f003f2c2cdd: hlt    
  0x00007f003f2c2cde: hlt    
  0x00007f003f2c2cdf: hlt    
[Stub Code]
  0x00007f003f2c2ce0: nop                       ;   {no_reloc}
  0x00007f003f2c2ce1: nop
  0x00007f003f2c2ce2: nop
  0x00007f003f2c2ce3: nop
  0x00007f003f2c2ce4: nop
  0x00007f003f2c2ce5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c2cef: jmp    0x00007f003f2c2cef  ;   {runtime_call}
  0x00007f003f2c2cf4: nop
  0x00007f003f2c2cf5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c2cff: jmp    0x00007f003f2c2cff  ;   {runtime_call}
  0x00007f003f2c2d04: nop
  0x00007f003f2c2d05: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c2d0f: jmp    0x00007f003f2c2d0f  ;   {runtime_call}
  0x00007f003f2c2d14: nop
  0x00007f003f2c2d15: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c2d1f: jmp    0x00007f003f2c2d1f  ;   {runtime_call}
  0x00007f003f2c2d24: nop
  0x00007f003f2c2d25: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c2d2f: jmp    0x00007f003f2c2d2f  ;   {runtime_call}
  0x00007f003f2c2d34: nop
  0x00007f003f2c2d35: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c2d3f: jmp    0x00007f003f2c2d3f  ;   {runtime_call}
  0x00007f003f2c2d44: nop
  0x00007f003f2c2d45: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c2d4f: jmp    0x00007f003f2c2d4f  ;   {runtime_call}
  0x00007f003f2c2d54: nop
  0x00007f003f2c2d55: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c2d5f: jmp    0x00007f003f2c2d5f  ;   {runtime_call}
  0x00007f003f2c2d64: nop
  0x00007f003f2c2d65: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c2d6f: jmp    0x00007f003f2c2d6f  ;   {runtime_call}
  0x00007f003f2c2d74: nop
  0x00007f003f2c2d75: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c2d7f: jmp    0x00007f003f2c2d7f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2c2d84: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2c2d89: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2c2d8e: sub    rsp,0x80
  0x00007f003f2c2d95: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2c2d9a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2c2d9f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2c2da4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2c2da9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2c2dae: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2c2db3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2c2db8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2c2dbd: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2c2dc2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2c2dc7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2c2dcc: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2c2dd1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2c2dd6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2c2ddb: mov    QWORD PTR [rsp],r15
  0x00007f003f2c2ddf: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2c2de9: movabs rsi,0x7f003f2c2d89  ;   {internal_word}
  0x00007f003f2c2df3: mov    rdx,rsp
  0x00007f003f2c2df6: and    rsp,0xfffffffffffffff0
  0x00007f003f2c2dfa: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2c2dff: hlt    
[Deopt Handler Code]
  0x00007f003f2c2e00: movabs r10,0x7f003f2c2e00  ;   {section_word}
  0x00007f003f2c2e0a: push   r10
  0x00007f003f2c2e0c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2c2e11: hlt    
  0x00007f003f2c2e12: hlt    
  0x00007f003f2c2e13: hlt    
  0x00007f003f2c2e14: hlt    
  0x00007f003f2c2e15: hlt    
  0x00007f003f2c2e16: hlt    
  0x00007f003f2c2e17: hlt    
<nmethod compile_id='106' compiler='C1' level='3' entry='0x00007f003f2c1f80' size='6928' address='0x00007f003f2c1d10' relocation_offset='312' insts_offset='624' stub_offset='4048' scopes_data_offset='4392' scopes_pcs_offset='5384' dependencies_offset='6824' nul_chk_table_offset='6832' metadata_offset='4360' method='sun/net/www/ParseUtil encodePath (Ljava/lang/String;Z)Ljava/lang/String;' bytes='336' count='135' backedge_count='6228' iicount='135' stamp='0.506'/>
----------------------------------------------------------------------
java/lang/CharacterDataLatin1.getProperties  [0x00007f003f2c39c0, 0x00007f003f2c3af0]  304 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038960e08} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rsi:rsi   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2c39c0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2c39c4: shl    r10,0x3
  0x00007f003f2c39c8: cmp    r10,rax
  0x00007f003f2c39cb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2c39d1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2c39dc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2c39e0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2c39e7: push   rbp
  0x00007f003f2c39e8: sub    rsp,0x30           ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x00007f003f2c39ec: and    edx,0xffff
  0x00007f003f2c39f2: movabs rax,0x670bc4928    ;   {oop([I)}
  0x00007f003f2c39fc: movsxd rsi,edx
  0x00007f003f2c39ff: cmp    edx,DWORD PTR [rax+0xc]  ; implicit exception: dispatches to 0x00007f003f2c3a18
  0x00007f003f2c3a02: jae    0x00007f003f2c3a22
  0x00007f003f2c3a08: mov    eax,DWORD PTR [rax+rsi*4+0x10]
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x00007f003f2c3a0c: add    rsp,0x30
  0x00007f003f2c3a10: pop    rbp
  0x00007f003f2c3a11: test   DWORD PTR [rip+0x1b0fe6e9],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c3a17: ret    
  0x00007f003f2c3a18: call   0x00007f003f279000  ; OopMap{rax=Oop off=93}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00007f003f2c3a1d: call   0x00007f003f279000  ; OopMap{rax=Oop off=98}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00007f003f2c3a22: mov    QWORD PTR [rsp],rdx
  0x00007f003f2c3a26: call   0x00007f003f278940  ; OopMap{rax=Oop off=107}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00007f003f2c3a2b: nop
  0x00007f003f2c3a2c: nop
  0x00007f003f2c3a2d: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c3a34: movabs r10,0x0
  0x00007f003f2c3a3e: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c3a45: movabs r10,0x0
  0x00007f003f2c3a4f: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c3a56: add    rsp,0x30
  0x00007f003f2c3a5a: pop    rbp
  0x00007f003f2c3a5b: jmp    0x00007f003f2785a0  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x00007f003f2c3a60: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2c3a65: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2c3a6a: sub    rsp,0x80
  0x00007f003f2c3a71: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2c3a76: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2c3a7b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2c3a80: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2c3a85: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2c3a8a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2c3a8f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2c3a94: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2c3a99: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2c3a9e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2c3aa3: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2c3aa8: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2c3aad: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2c3ab2: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2c3ab7: mov    QWORD PTR [rsp],r15
  0x00007f003f2c3abb: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2c3ac5: movabs rsi,0x7f003f2c3a65  ;   {internal_word}
  0x00007f003f2c3acf: mov    rdx,rsp
  0x00007f003f2c3ad2: and    rsp,0xfffffffffffffff0
  0x00007f003f2c3ad6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2c3adb: hlt    
[Deopt Handler Code]
  0x00007f003f2c3adc: movabs r10,0x7f003f2c3adc  ;   {section_word}
  0x00007f003f2c3ae6: push   r10
  0x00007f003f2c3ae8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2c3aed: hlt    
  0x00007f003f2c3aee: hlt    
  0x00007f003f2c3aef: hlt    
<nmethod compile_id='109' compiler='C1' level='1' entry='0x00007f003f2c39c0' size='856' address='0x00007f003f2c3850' relocation_offset='312' insts_offset='368' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='712' dependencies_offset='824' nul_chk_table_offset='832' metadata_offset='672' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='4777' iicount='4777' stamp='0.507'/>
<make_not_entrant thread='139637817480960' compile_id='37' compiler='C1' level='3' stamp='0.507'/>
<writer thread='139637818533632'/>
<task_queued compile_id='110' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='603' iicount='603' level='3' stamp='0.507' comment='tiered' hot_count='603'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/String.endsWith  [0x00007f003f2c3d60, 0x00007f003f2c3f08]  424 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003876bd38} &apos;endsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.amd64.AMD64HotSpotVMConfig from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2c3d60: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2c3d64: shl    r10,0x3
  0x00007f003f2c3d68: cmp    r10,rax
  0x00007f003f2c3d6b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2c3d71: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2c3d7c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2c3d80: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2c3d87: push   rbp
  0x00007f003f2c3d88: sub    rsp,0x30
  0x00007f003f2c3d8c: movabs rcx,0x7f0038a81858  ;   {metadata(method data for {method} {0x00007f003876bd38} &apos;endsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2c3d96: mov    edi,DWORD PTR [rcx+0xfc]
  0x00007f003f2c3d9c: add    edi,0x8
  0x00007f003f2c3d9f: mov    DWORD PTR [rcx+0xfc],edi
  0x00007f003f2c3da5: movabs rcx,0x7f003876bd38  ;   {metadata({method} {0x00007f003876bd38} &apos;endsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2c3daf: and    edi,0x1ff8
  0x00007f003f2c3db5: cmp    edi,0x0
  0x00007f003f2c3db8: je     0x00007f003f2c3e03  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::endsWith@0 (line 1449)

  0x00007f003f2c3dbe: mov    ecx,DWORD PTR [rsi+0xc]
  0x00007f003f2c3dc1: shl    rcx,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::endsWith@3 (line 1449)

  0x00007f003f2c3dc5: mov    ecx,DWORD PTR [rcx+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::endsWith@6 (line 1449)
                                                ; implicit exception: dispatches to 0x00007f003f2c3e17
  0x00007f003f2c3dc8: mov    edi,DWORD PTR [rdx+0xc]  ; implicit exception: dispatches to 0x00007f003f2c3e1c
  0x00007f003f2c3dcb: shl    rdi,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::endsWith@8 (line 1449)

  0x00007f003f2c3dcf: mov    edi,DWORD PTR [rdi+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::endsWith@11 (line 1449)
                                                ; implicit exception: dispatches to 0x00007f003f2c3e21
  0x00007f003f2c3dd2: mov    rbx,rsi
  0x00007f003f2c3dd5: movabs rax,0x7f0038a81858  ;   {metadata(method data for {method} {0x00007f003876bd38} &apos;endsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2c3ddf: add    QWORD PTR [rax+0x130],0x1
  0x00007f003f2c3de7: sub    ecx,edi
  0x00007f003f2c3de9: nop
  0x00007f003f2c3dea: nop
  0x00007f003f2c3deb: nop
  0x00007f003f2c3dec: nop
  0x00007f003f2c3ded: nop
  0x00007f003f2c3dee: nop
  0x00007f003f2c3def: call   0x00007f003f1c4d60  ; OopMap{off=148}
                                                ;*invokevirtual startsWith {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::endsWith@13 (line 1449)
                                                ;   {optimized virtual_call}
  0x00007f003f2c3df4: and    eax,0x1
  0x00007f003f2c3df7: add    rsp,0x30
  0x00007f003f2c3dfb: pop    rbp
  0x00007f003f2c3dfc: test   DWORD PTR [rip+0x1b0fe2fe],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c3e02: ret    
  0x00007f003f2c3e03: mov    QWORD PTR [rsp+0x8],rcx
  0x00007f003f2c3e08: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c3e10: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop off=181}
                                                ;*synchronization entry
                                                ; - java.lang.String::endsWith@-1 (line 1449)
                                                ;   {runtime_call}
  0x00007f003f2c3e15: jmp    0x00007f003f2c3dbe
  0x00007f003f2c3e17: call   0x00007f003f279000  ; OopMap{rsi=Oop rdx=Oop off=188}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::endsWith@6 (line 1449)
                                                ;   {runtime_call}
  0x00007f003f2c3e1c: call   0x00007f003f279000  ; OopMap{rsi=Oop rdx=Oop off=193}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::endsWith@8 (line 1449)
                                                ;   {runtime_call}
  0x00007f003f2c3e21: call   0x00007f003f279000  ; OopMap{rsi=Oop rdx=Oop off=198}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::endsWith@11 (line 1449)
                                                ;   {runtime_call}
  0x00007f003f2c3e26: nop
  0x00007f003f2c3e27: nop
  0x00007f003f2c3e28: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c3e2f: movabs r10,0x0
  0x00007f003f2c3e39: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c3e40: movabs r10,0x0
  0x00007f003f2c3e4a: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c3e51: add    rsp,0x30
  0x00007f003f2c3e55: pop    rbp
  0x00007f003f2c3e56: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2c3e5b: hlt    
  0x00007f003f2c3e5c: hlt    
  0x00007f003f2c3e5d: hlt    
  0x00007f003f2c3e5e: hlt    
  0x00007f003f2c3e5f: hlt    
[Stub Code]
  0x00007f003f2c3e60: nop                       ;   {no_reloc}
  0x00007f003f2c3e61: nop
  0x00007f003f2c3e62: nop
  0x00007f003f2c3e63: nop
  0x00007f003f2c3e64: nop
  0x00007f003f2c3e65: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c3e6f: jmp    0x00007f003f2c3e6f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2c3e74: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2c3e79: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2c3e7e: sub    rsp,0x80
  0x00007f003f2c3e85: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2c3e8a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2c3e8f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2c3e94: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2c3e99: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2c3e9e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2c3ea3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2c3ea8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2c3ead: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2c3eb2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2c3eb7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2c3ebc: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2c3ec1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2c3ec6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2c3ecb: mov    QWORD PTR [rsp],r15
  0x00007f003f2c3ecf: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2c3ed9: movabs rsi,0x7f003f2c3e79  ;   {internal_word}
  0x00007f003f2c3ee3: mov    rdx,rsp
  0x00007f003f2c3ee6: and    rsp,0xfffffffffffffff0
  0x00007f003f2c3eea: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2c3eef: hlt    
[Deopt Handler Code]
  0x00007f003f2c3ef0: movabs r10,0x7f003f2c3ef0  ;   {section_word}
  0x00007f003f2c3efa: push   r10
  0x00007f003f2c3efc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2c3f01: hlt    
  0x00007f003f2c3f02: hlt    
  0x00007f003f2c3f03: hlt    
  0x00007f003f2c3f04: hlt    
  0x00007f003f2c3f05: hlt    
  0x00007f003f2c3f06: hlt    
  0x00007f003f2c3f07: hlt    
<nmethod compile_id='108' compiler='C1' level='3' entry='0x00007f003f2c3d60' size='1136' address='0x00007f003f2c3bd0' relocation_offset='312' insts_offset='400' stub_offset='656' scopes_data_offset='832' scopes_pcs_offset='904' dependencies_offset='1096' nul_chk_table_offset='1104' metadata_offset='824' method='java/lang/String endsWith (Ljava/lang/String;)Z' bytes='17' count='518' iicount='518' stamp='0.508'/>
----------------------------------------------------------------------
java/lang/String.&lt;init&gt;  [0x00007f003f2c41c0, 0x00007f003f2c4390]  464 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003876a490} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    rcx       = boolean
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2c41c0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2c41c4: shl    r10,0x3
  0x00007f003f2c41c8: cmp    r10,rax
  0x00007f003f2c41cb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2c41d1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2c41dc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2c41e0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2c41e7: push   rbp
  0x00007f003f2c41e8: sub    rsp,0x30
  0x00007f003f2c41ec: movabs rdi,0x7f0038a5c010  ;   {metadata(method data for {method} {0x00007f003876a490} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2c41f6: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2c41fc: add    ebx,0x8
  0x00007f003f2c41ff: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2c4205: movabs rdi,0x7f003876a490  ;   {metadata({method} {0x00007f003876a490} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2c420f: and    ebx,0x1ff8
  0x00007f003f2c4215: cmp    ebx,0x0
  0x00007f003f2c4218: je     0x00007f003f2c428e  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@0 (line 609)

  0x00007f003f2c421e: mov    rdi,rsi
  0x00007f003f2c4221: movabs rbx,0x7f0038a5c010  ;   {metadata(method data for {method} {0x00007f003876a490} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2c422b: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f2c4233: movabs rdi,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2c423d: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2c4243: add    ebx,0x8
  0x00007f003f2c4246: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2c424c: movabs rdi,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2c4256: and    ebx,0x7ffff8
  0x00007f003f2c425c: cmp    ebx,0x0
  0x00007f003f2c425f: je     0x00007f003f2c42a5
  0x00007f003f2c4265: mov    r10,rdx
  0x00007f003f2c4268: shr    r10,0x3
  0x00007f003f2c426c: mov    DWORD PTR [rsi+0xc],r10d
  0x00007f003f2c4270: shr    rsi,0x9
  0x00007f003f2c4274: movabs rdi,0x7f003ae7c000
  0x00007f003f2c427e: mov    BYTE PTR [rsi+rdi*1],0x0  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)

  0x00007f003f2c4282: add    rsp,0x30
  0x00007f003f2c4286: pop    rbp
  0x00007f003f2c4287: test   DWORD PTR [rip+0x1b0fde73],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c428d: ret    
  0x00007f003f2c428e: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2c4293: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c429b: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop off=224}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 609)
                                                ;   {runtime_call}
  0x00007f003f2c42a0: jmp    0x00007f003f2c421e
  0x00007f003f2c42a5: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2c42aa: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c42b2: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop off=247}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ;   {runtime_call}
  0x00007f003f2c42b7: jmp    0x00007f003f2c4265
  0x00007f003f2c42b9: nop
  0x00007f003f2c42ba: nop
  0x00007f003f2c42bb: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c42c2: movabs r10,0x0
  0x00007f003f2c42cc: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c42d3: movabs r10,0x0
  0x00007f003f2c42dd: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c42e4: add    rsp,0x30
  0x00007f003f2c42e8: pop    rbp
  0x00007f003f2c42e9: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2c42ee: hlt    
  0x00007f003f2c42ef: hlt    
  0x00007f003f2c42f0: hlt    
  0x00007f003f2c42f1: hlt    
  0x00007f003f2c42f2: hlt    
  0x00007f003f2c42f3: hlt    
  0x00007f003f2c42f4: hlt    
  0x00007f003f2c42f5: hlt    
  0x00007f003f2c42f6: hlt    
  0x00007f003f2c42f7: hlt    
  0x00007f003f2c42f8: hlt    
  0x00007f003f2c42f9: hlt    
  0x00007f003f2c42fa: hlt    
  0x00007f003f2c42fb: hlt    
  0x00007f003f2c42fc: hlt    
  0x00007f003f2c42fd: hlt    
  0x00007f003f2c42fe: hlt    
  0x00007f003f2c42ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2c4300: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2c4305: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2c430a: sub    rsp,0x80
  0x00007f003f2c4311: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2c4316: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2c431b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2c4320: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2c4325: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2c432a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2c432f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2c4334: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2c4339: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2c433e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2c4343: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2c4348: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2c434d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2c4352: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2c4357: mov    QWORD PTR [rsp],r15
  0x00007f003f2c435b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2c4365: movabs rsi,0x7f003f2c4305  ;   {internal_word}
  0x00007f003f2c436f: mov    rdx,rsp
  0x00007f003f2c4372: and    rsp,0xfffffffffffffff0
  0x00007f003f2c4376: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2c437b: hlt    
[Deopt Handler Code]
  0x00007f003f2c437c: movabs r10,0x7f003f2c437c  ;   {section_word}
  0x00007f003f2c4386: push   r10
  0x00007f003f2c4388: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2c438d: hlt    
  0x00007f003f2c438e: hlt    
  0x00007f003f2c438f: hlt    
<nmethod compile_id='110' compiler='C1' level='3' entry='0x00007f003f2c41c0' size='1008' address='0x00007f003f2c4050' relocation_offset='312' insts_offset='368' stub_offset='688' scopes_data_offset='848' scopes_pcs_offset='904' dependencies_offset='1000' metadata_offset='832' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='604' iicount='604' stamp='0.509'/>
<writer thread='139637818533632'/>
<task_queued compile_id='111' method='java/util/HashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='23' count='512' iicount='512' level='3' stamp='0.509' comment='tiered' hot_count='512'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/zip/ZipFile.access$000  [0x00007f003f2c45c0, 0x00007f003f2c46b0]  240 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f00389972c8} &apos;access$000&apos; &apos;(Ljava/util/zip/ZipFile;)Ljava/util/Map;&apos; in &apos;java/util/zip/ZipFile&apos;
  # parm0:    rsi:rsi   = &apos;java/util/zip/ZipFile&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2c45c0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2c45c7: push   rbp
  0x00007f003f2c45c8: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::access$000@0 (line 60)

  0x00007f003f2c45cc: mov    eax,DWORD PTR [rsi+0x24]  ; implicit exception: dispatches to 0x00007f003f2c45df
  0x00007f003f2c45cf: shl    rax,0x3            ;*getfield streams {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::access$000@1 (line 60)

  0x00007f003f2c45d3: add    rsp,0x30
  0x00007f003f2c45d7: pop    rbp
  0x00007f003f2c45d8: test   DWORD PTR [rip+0x1b0fdb22],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c45de: ret    
  0x00007f003f2c45df: call   0x00007f003f279000  ; OopMap{off=36}
                                                ;*getfield streams {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::access$000@1 (line 60)
                                                ;   {runtime_call}
  0x00007f003f2c45e4: nop
  0x00007f003f2c45e5: nop
  0x00007f003f2c45e6: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c45ed: movabs r10,0x0
  0x00007f003f2c45f7: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c45fe: movabs r10,0x0
  0x00007f003f2c4608: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c460f: add    rsp,0x30
  0x00007f003f2c4613: pop    rbp
  0x00007f003f2c4614: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2c4619: hlt    
  0x00007f003f2c461a: hlt    
  0x00007f003f2c461b: hlt    
  0x00007f003f2c461c: hlt    
  0x00007f003f2c461d: hlt    
  0x00007f003f2c461e: hlt    
  0x00007f003f2c461f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2c4620: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2c4625: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2c462a: sub    rsp,0x80
  0x00007f003f2c4631: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2c4636: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2c463b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2c4640: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2c4645: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2c464a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2c464f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2c4654: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2c4659: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2c465e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2c4663: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2c4668: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2c466d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2c4672: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2c4677: mov    QWORD PTR [rsp],r15
  0x00007f003f2c467b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2c4685: movabs rsi,0x7f003f2c4625  ;   {internal_word}
  0x00007f003f2c468f: mov    rdx,rsp
  0x00007f003f2c4692: and    rsp,0xfffffffffffffff0
  0x00007f003f2c4696: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2c469b: hlt    
[Deopt Handler Code]
  0x00007f003f2c469c: movabs r10,0x7f003f2c469c  ;   {section_word}
  0x00007f003f2c46a6: push   r10
  0x00007f003f2c46a8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2c46ad: hlt    
  0x00007f003f2c46ae: hlt    
  0x00007f003f2c46af: hlt    
<nmethod compile_id='84' compiler='C1' level='1' entry='0x00007f003f2c45c0' size='744' address='0x00007f003f2c4450' relocation_offset='312' insts_offset='368' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='640' dependencies_offset='720' nul_chk_table_offset='728' metadata_offset='608' method='java/util/zip/ZipFile access$000 (Ljava/util/zip/ZipFile;)Ljava/util/Map;' bytes='5' count='206' iicount='206' stamp='0.509'/>
<writer thread='139637818533632'/>
<task_queued compile_id='112' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='384' iicount='384' level='3' stamp='0.509' comment='tiered' hot_count='384'/>
[Loaded jdk.vm.ci.amd64.AMD64 from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/HashMap.get  [0x00007f003f2c4b80, 0x00007f003f2c5078]  1272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003886d338} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x70]  (sp of caller)
  0x00007f003f2c4b80: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2c4b84: shl    r10,0x3
  0x00007f003f2c4b88: cmp    r10,rax
  0x00007f003f2c4b8b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2c4b91: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2c4b9c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2c4ba0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2c4ba7: push   rbp
  0x00007f003f2c4ba8: sub    rsp,0x60
  0x00007f003f2c4bac: movabs rdi,0x7f0038a82af8  ;   {metadata(method data for {method} {0x00007f003886d338} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2c4bb6: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2c4bbc: add    ebx,0x8
  0x00007f003f2c4bbf: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2c4bc5: movabs rdi,0x7f003886d338  ;   {metadata({method} {0x00007f003886d338} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2c4bcf: and    ebx,0x1ff8
  0x00007f003f2c4bd5: cmp    ebx,0x0
  0x00007f003f2c4bd8: je     0x00007f003f2c4f37  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@0 (line 556)

  0x00007f003f2c4bde: movabs rdi,0x7f0038a82af8  ;   {metadata(method data for {method} {0x00007f003886d338} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2c4be8: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f2c4bf0: movabs rdi,0x7f0038a588a0  ;   {metadata(method data for {method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2c4bfa: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2c4c00: add    ebx,0x8
  0x00007f003f2c4c03: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2c4c09: movabs rdi,0x7f003886c920  ;   {metadata({method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2c4c13: and    ebx,0x7ffff8
  0x00007f003f2c4c19: cmp    ebx,0x0
  0x00007f003f2c4c1c: je     0x00007f003f2c4f4e
  0x00007f003f2c4c22: cmp    rdx,0x0
  0x00007f003f2c4c26: movabs rdi,0x7f0038a588a0  ;   {metadata(method data for {method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2c4c30: movabs rbx,0x130
  0x00007f003f2c4c3a: jne    0x00007f003f2c4c4a
  0x00007f003f2c4c40: movabs rbx,0x140
  0x00007f003f2c4c4a: mov    rax,QWORD PTR [rdi+rbx*1]
  0x00007f003f2c4c4e: lea    rax,[rax+0x1]
  0x00007f003f2c4c52: mov    QWORD PTR [rdi+rbx*1],rax
  0x00007f003f2c4c56: jne    0x00007f003f2c4c80  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 338)
                                                ; - java.util.HashMap::get@2 (line 556)

  0x00007f003f2c4c5c: movabs rdi,0x7f0038a588a0  ;   {metadata(method data for {method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2c4c66: inc    DWORD PTR [rdi+0x150]
  0x00007f003f2c4c6c: mov    edi,0x0
  0x00007f003f2c4c71: mov    QWORD PTR [rsp+0x48],rdx
  0x00007f003f2c4c76: mov    QWORD PTR [rsp+0x40],rsi
  0x00007f003f2c4c7b: jmp    0x00007f003f2c4e98  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 338)
                                                ; - java.util.HashMap::get@2 (line 556)

  0x00007f003f2c4c80: mov    QWORD PTR [rsp+0x40],rsi
  0x00007f003f2c4c85: cmp    rax,QWORD PTR [rdx]  ; implicit exception: dispatches to 0x00007f003f2c4f65
  0x00007f003f2c4c88: mov    rdi,rdx
  0x00007f003f2c4c8b: movabs rbx,0x7f0038a588a0  ;   {metadata(method data for {method} {0x00007f003886c920} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2c4c95: mov    edi,DWORD PTR [rdi+0x8]
  0x00007f003f2c4c98: shl    rdi,0x3
  0x00007f003f2c4c9c: cmp    rdi,QWORD PTR [rbx+0x178]
  0x00007f003f2c4ca3: jne    0x00007f003f2c4cb2
  0x00007f003f2c4ca5: add    QWORD PTR [rbx+0x180],0x1
  0x00007f003f2c4cad: jmp    0x00007f003f2c4e74
  0x00007f003f2c4cb2: cmp    rdi,QWORD PTR [rbx+0x188]
  0x00007f003f2c4cb9: jne    0x00007f003f2c4cc8
  0x00007f003f2c4cbb: add    QWORD PTR [rbx+0x190],0x1
  0x00007f003f2c4cc3: jmp    0x00007f003f2c4e74
  0x00007f003f2c4cc8: cmp    rdi,QWORD PTR [rbx+0x198]
  0x00007f003f2c4ccf: jne    0x00007f003f2c4cde
  0x00007f003f2c4cd1: add    QWORD PTR [rbx+0x1a0],0x1
  0x00007f003f2c4cd9: jmp    0x00007f003f2c4e74
  0x00007f003f2c4cde: cmp    rdi,QWORD PTR [rbx+0x1a8]
  0x00007f003f2c4ce5: jne    0x00007f003f2c4cf4
  0x00007f003f2c4ce7: add    QWORD PTR [rbx+0x1b0],0x1
  0x00007f003f2c4cef: jmp    0x00007f003f2c4e74
  0x00007f003f2c4cf4: cmp    rdi,QWORD PTR [rbx+0x1b8]
  0x00007f003f2c4cfb: jne    0x00007f003f2c4d0a
  0x00007f003f2c4cfd: add    QWORD PTR [rbx+0x1c0],0x1
  0x00007f003f2c4d05: jmp    0x00007f003f2c4e74
  0x00007f003f2c4d0a: cmp    rdi,QWORD PTR [rbx+0x1c8]
  0x00007f003f2c4d11: jne    0x00007f003f2c4d20
  0x00007f003f2c4d13: add    QWORD PTR [rbx+0x1d0],0x1
  0x00007f003f2c4d1b: jmp    0x00007f003f2c4e74
  0x00007f003f2c4d20: cmp    rdi,QWORD PTR [rbx+0x1d8]
  0x00007f003f2c4d27: jne    0x00007f003f2c4d36
  0x00007f003f2c4d29: add    QWORD PTR [rbx+0x1e0],0x1
  0x00007f003f2c4d31: jmp    0x00007f003f2c4e74
  0x00007f003f2c4d36: cmp    rdi,QWORD PTR [rbx+0x1e8]
  0x00007f003f2c4d3d: jne    0x00007f003f2c4d4c
  0x00007f003f2c4d3f: add    QWORD PTR [rbx+0x1f0],0x1
  0x00007f003f2c4d47: jmp    0x00007f003f2c4e74
  0x00007f003f2c4d4c: cmp    QWORD PTR [rbx+0x178],0x0
  0x00007f003f2c4d57: jne    0x00007f003f2c4d70
  0x00007f003f2c4d59: mov    QWORD PTR [rbx+0x178],rdi
  0x00007f003f2c4d60: mov    QWORD PTR [rbx+0x180],0x1
  0x00007f003f2c4d6b: jmp    0x00007f003f2c4e74
  0x00007f003f2c4d70: cmp    QWORD PTR [rbx+0x188],0x0
  0x00007f003f2c4d7b: jne    0x00007f003f2c4d94
  0x00007f003f2c4d7d: mov    QWORD PTR [rbx+0x188],rdi
  0x00007f003f2c4d84: mov    QWORD PTR [rbx+0x190],0x1
  0x00007f003f2c4d8f: jmp    0x00007f003f2c4e74
  0x00007f003f2c4d94: cmp    QWORD PTR [rbx+0x198],0x0
  0x00007f003f2c4d9f: jne    0x00007f003f2c4db8
  0x00007f003f2c4da1: mov    QWORD PTR [rbx+0x198],rdi
  0x00007f003f2c4da8: mov    QWORD PTR [rbx+0x1a0],0x1
  0x00007f003f2c4db3: jmp    0x00007f003f2c4e74
  0x00007f003f2c4db8: cmp    QWORD PTR [rbx+0x1a8],0x0
  0x00007f003f2c4dc3: jne    0x00007f003f2c4ddc
  0x00007f003f2c4dc5: mov    QWORD PTR [rbx+0x1a8],rdi
  0x00007f003f2c4dcc: mov    QWORD PTR [rbx+0x1b0],0x1
  0x00007f003f2c4dd7: jmp    0x00007f003f2c4e74
  0x00007f003f2c4ddc: cmp    QWORD PTR [rbx+0x1b8],0x0
  0x00007f003f2c4de7: jne    0x00007f003f2c4e00
  0x00007f003f2c4de9: mov    QWORD PTR [rbx+0x1b8],rdi
  0x00007f003f2c4df0: mov    QWORD PTR [rbx+0x1c0],0x1
  0x00007f003f2c4dfb: jmp    0x00007f003f2c4e74
  0x00007f003f2c4e00: cmp    QWORD PTR [rbx+0x1c8],0x0
  0x00007f003f2c4e0b: jne    0x00007f003f2c4e24
  0x00007f003f2c4e0d: mov    QWORD PTR [rbx+0x1c8],rdi
  0x00007f003f2c4e14: mov    QWORD PTR [rbx+0x1d0],0x1
  0x00007f003f2c4e1f: jmp    0x00007f003f2c4e74
  0x00007f003f2c4e24: cmp    QWORD PTR [rbx+0x1d8],0x0
  0x00007f003f2c4e2f: jne    0x00007f003f2c4e48
  0x00007f003f2c4e31: mov    QWORD PTR [rbx+0x1d8],rdi
  0x00007f003f2c4e38: mov    QWORD PTR [rbx+0x1e0],0x1
  0x00007f003f2c4e43: jmp    0x00007f003f2c4e74
  0x00007f003f2c4e48: cmp    QWORD PTR [rbx+0x1e8],0x0
  0x00007f003f2c4e53: jne    0x00007f003f2c4e6c
  0x00007f003f2c4e55: mov    QWORD PTR [rbx+0x1e8],rdi
  0x00007f003f2c4e5c: mov    QWORD PTR [rbx+0x1f0],0x1
  0x00007f003f2c4e67: jmp    0x00007f003f2c4e74
  0x00007f003f2c4e6c: add    QWORD PTR [rbx+0x168],0x1
  0x00007f003f2c4e74: mov    rsi,rdx            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::get@2 (line 556)

  0x00007f003f2c4e77: mov    QWORD PTR [rsp+0x48],rdx
  0x00007f003f2c4e7c: nop
  0x00007f003f2c4e7d: movabs rax,0xffffffffffffffff
  0x00007f003f2c4e87: call   0x00007f003f1c4f60  ; OopMap{[64]=Oop [72]=Oop off=780}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::get@2 (line 556)
                                                ;   {virtual_call}
  0x00007f003f2c4e8c: mov    rdx,rax
  0x00007f003f2c4e8f: shr    edx,0x10
  0x00007f003f2c4e92: xor    rdx,rax
  0x00007f003f2c4e95: mov    rdi,rdx            ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@19 (line 338)
                                                ; - java.util.HashMap::get@2 (line 556)

  0x00007f003f2c4e98: mov    rcx,QWORD PTR [rsp+0x48]
  0x00007f003f2c4e9d: mov    rsi,QWORD PTR [rsp+0x40]
  0x00007f003f2c4ea2: mov    rdx,rsi
  0x00007f003f2c4ea5: movabs rbx,0x7f0038a82af8  ;   {metadata(method data for {method} {0x00007f003886d338} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2c4eaf: add    QWORD PTR [rbx+0x140],0x1
  0x00007f003f2c4eb7: mov    rdx,rdi            ;*invokevirtual getNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@6 (line 556)

  0x00007f003f2c4eba: nop
  0x00007f003f2c4ebb: nop
  0x00007f003f2c4ebc: nop
  0x00007f003f2c4ebd: nop
  0x00007f003f2c4ebe: nop
  0x00007f003f2c4ebf: call   0x00007f003f1c4d60  ; OopMap{off=836}
                                                ;*invokevirtual getNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@6 (line 556)
                                                ;   {optimized virtual_call}
  0x00007f003f2c4ec4: cmp    rax,0x0
  0x00007f003f2c4ec8: movabs rsi,0x7f0038a82af8  ;   {metadata(method data for {method} {0x00007f003886d338} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2c4ed2: movabs rdi,0x1d8
  0x00007f003f2c4edc: jne    0x00007f003f2c4eec
  0x00007f003f2c4ee2: movabs rdi,0x1e8
  0x00007f003f2c4eec: mov    rbx,QWORD PTR [rsi+rdi*1]
  0x00007f003f2c4ef0: lea    rbx,[rbx+0x1]
  0x00007f003f2c4ef4: mov    QWORD PTR [rsi+rdi*1],rbx
  0x00007f003f2c4ef8: jne    0x00007f003f2c4f24  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@11 (line 556)

  0x00007f003f2c4efe: movabs rax,0x7f0038a82af8  ;   {metadata(method data for {method} {0x00007f003886d338} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2c4f08: inc    DWORD PTR [rax+0x1f8]
  0x00007f003f2c4f0e: movabs rax,0x0            ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@15 (line 556)
                                                ;   {oop(NULL)}
  0x00007f003f2c4f18: add    rsp,0x60
  0x00007f003f2c4f1c: pop    rbp
  0x00007f003f2c4f1d: test   DWORD PTR [rip+0x1b0fd1dd],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c4f23: ret    
  0x00007f003f2c4f24: mov    eax,DWORD PTR [rax+0x14]  ; implicit exception: dispatches to 0x00007f003f2c4f6a
  0x00007f003f2c4f27: shl    rax,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@19 (line 556)

  0x00007f003f2c4f2b: add    rsp,0x60
  0x00007f003f2c4f2f: pop    rbp
  0x00007f003f2c4f30: test   DWORD PTR [rip+0x1b0fd1ca],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c4f36: ret    
  0x00007f003f2c4f37: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2c4f3c: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c4f44: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop off=969}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::get@-1 (line 556)
                                                ;   {runtime_call}
  0x00007f003f2c4f49: jmp    0x00007f003f2c4bde
  0x00007f003f2c4f4e: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2c4f53: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c4f5b: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop off=992}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ; - java.util.HashMap::get@2 (line 556)
                                                ;   {runtime_call}
  0x00007f003f2c4f60: jmp    0x00007f003f2c4c22
  0x00007f003f2c4f65: call   0x00007f003f279000  ; OopMap{rdx=Oop [64]=Oop off=1002}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::get@2 (line 556)
                                                ;   {runtime_call}
  0x00007f003f2c4f6a: call   0x00007f003f279000  ; OopMap{off=1007}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@19 (line 556)
                                                ;   {runtime_call}
  0x00007f003f2c4f6f: nop
  0x00007f003f2c4f70: nop
  0x00007f003f2c4f71: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c4f78: movabs r10,0x0
  0x00007f003f2c4f82: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c4f89: movabs r10,0x0
  0x00007f003f2c4f93: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c4f9a: add    rsp,0x60
  0x00007f003f2c4f9e: pop    rbp
  0x00007f003f2c4f9f: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2c4fa4: hlt    
  0x00007f003f2c4fa5: hlt    
  0x00007f003f2c4fa6: hlt    
  0x00007f003f2c4fa7: hlt    
  0x00007f003f2c4fa8: hlt    
  0x00007f003f2c4fa9: hlt    
  0x00007f003f2c4faa: hlt    
  0x00007f003f2c4fab: hlt    
  0x00007f003f2c4fac: hlt    
  0x00007f003f2c4fad: hlt    
  0x00007f003f2c4fae: hlt    
  0x00007f003f2c4faf: hlt    
  0x00007f003f2c4fb0: hlt    
  0x00007f003f2c4fb1: hlt    
  0x00007f003f2c4fb2: hlt    
  0x00007f003f2c4fb3: hlt    
  0x00007f003f2c4fb4: hlt    
  0x00007f003f2c4fb5: hlt    
  0x00007f003f2c4fb6: hlt    
  0x00007f003f2c4fb7: hlt    
  0x00007f003f2c4fb8: hlt    
  0x00007f003f2c4fb9: hlt    
  0x00007f003f2c4fba: hlt    
  0x00007f003f2c4fbb: hlt    
  0x00007f003f2c4fbc: hlt    
  0x00007f003f2c4fbd: hlt    
  0x00007f003f2c4fbe: hlt    
  0x00007f003f2c4fbf: hlt    
[Stub Code]
  0x00007f003f2c4fc0: nop                       ;   {no_reloc}
  0x00007f003f2c4fc1: nop
  0x00007f003f2c4fc2: nop
  0x00007f003f2c4fc3: nop
  0x00007f003f2c4fc4: nop
  0x00007f003f2c4fc5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c4fcf: jmp    0x00007f003f2c4fcf  ;   {runtime_call}
  0x00007f003f2c4fd4: nop
  0x00007f003f2c4fd5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c4fdf: jmp    0x00007f003f2c4fdf  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2c4fe4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2c4fe9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2c4fee: sub    rsp,0x80
  0x00007f003f2c4ff5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2c4ffa: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2c4fff: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2c5004: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2c5009: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2c500e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2c5013: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2c5018: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2c501d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2c5022: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2c5027: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2c502c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2c5031: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2c5036: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2c503b: mov    QWORD PTR [rsp],r15
  0x00007f003f2c503f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2c5049: movabs rsi,0x7f003f2c4fe9  ;   {internal_word}
  0x00007f003f2c5053: mov    rdx,rsp
  0x00007f003f2c5056: and    rsp,0xfffffffffffffff0
  0x00007f003f2c505a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2c505f: hlt    
[Deopt Handler Code]
  0x00007f003f2c5060: movabs r10,0x7f003f2c5060  ;   {section_word}
  0x00007f003f2c506a: push   r10
  0x00007f003f2c506c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2c5071: hlt    
  0x00007f003f2c5072: hlt    
  0x00007f003f2c5073: hlt    
  0x00007f003f2c5074: hlt    
  0x00007f003f2c5075: hlt    
  0x00007f003f2c5076: hlt    
  0x00007f003f2c5077: hlt    
<nmethod compile_id='111' compiler='C1' level='3' entry='0x00007f003f2c4b80' size='2192' address='0x00007f003f2c49d0' relocation_offset='312' insts_offset='432' stub_offset='1520' scopes_data_offset='1720' scopes_pcs_offset='1888' dependencies_offset='2160' nul_chk_table_offset='2168' metadata_offset='1704' method='java/util/HashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='23' count='542' iicount='542' stamp='0.512'/>
<writer thread='139637818533632'/>
<task_queued compile_id='113' method='java/lang/String lastIndexOf (I)I' bytes='13' count='512' iicount='512' level='3' stamp='0.512' comment='tiered' hot_count='512'/>
[Loaded jdk.vm.ci.code.Register$RegisterCategory from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/String.lastIndexOf  [0x00007f003f2c5400, 0x00007f003f2c5588]  392 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003876c218} &apos;lastIndexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2c5400: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2c5404: shl    r10,0x3
  0x00007f003f2c5408: cmp    r10,rax
  0x00007f003f2c540b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2c5411: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2c541c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2c5420: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2c5427: push   rbp
  0x00007f003f2c5428: sub    rsp,0x30
  0x00007f003f2c542c: movabs rcx,0x7f0038a82d50  ;   {metadata(method data for {method} {0x00007f003876c218} &apos;lastIndexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2c5436: mov    edi,DWORD PTR [rcx+0xfc]
  0x00007f003f2c543c: add    edi,0x8
  0x00007f003f2c543f: mov    DWORD PTR [rcx+0xfc],edi
  0x00007f003f2c5445: movabs rcx,0x7f003876c218  ;   {metadata({method} {0x00007f003876c218} &apos;lastIndexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2c544f: and    edi,0x1ff8
  0x00007f003f2c5455: cmp    edi,0x0
  0x00007f003f2c5458: je     0x00007f003f2c5490  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@0 (line 1611)

  0x00007f003f2c545e: mov    ecx,DWORD PTR [rsi+0xc]
  0x00007f003f2c5461: shl    rcx,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@3 (line 1611)

  0x00007f003f2c5465: mov    ecx,DWORD PTR [rcx+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@6 (line 1611)
                                                ; implicit exception: dispatches to 0x00007f003f2c54a4
  0x00007f003f2c5468: mov    rdi,rsi
  0x00007f003f2c546b: movabs rbx,0x7f0038a82d50  ;   {metadata(method data for {method} {0x00007f003876c218} &apos;lastIndexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2c5475: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f2c547d: dec    ecx
  0x00007f003f2c547f: call   0x00007f003f1c4d60  ; OopMap{off=132}
                                                ;*invokevirtual lastIndexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@9 (line 1611)
                                                ;   {optimized virtual_call}
  0x00007f003f2c5484: add    rsp,0x30
  0x00007f003f2c5488: pop    rbp
  0x00007f003f2c5489: test   DWORD PTR [rip+0x1b0fcc71],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c548f: ret    
  0x00007f003f2c5490: mov    QWORD PTR [rsp+0x8],rcx
  0x00007f003f2c5495: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c549d: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=162}
                                                ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1611)
                                                ;   {runtime_call}
  0x00007f003f2c54a2: jmp    0x00007f003f2c545e
  0x00007f003f2c54a4: call   0x00007f003f279000  ; OopMap{rsi=Oop off=169}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@6 (line 1611)
                                                ;   {runtime_call}
  0x00007f003f2c54a9: nop
  0x00007f003f2c54aa: nop
  0x00007f003f2c54ab: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c54b2: movabs r10,0x0
  0x00007f003f2c54bc: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c54c3: movabs r10,0x0
  0x00007f003f2c54cd: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c54d4: add    rsp,0x30
  0x00007f003f2c54d8: pop    rbp
  0x00007f003f2c54d9: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2c54de: hlt    
  0x00007f003f2c54df: hlt    
[Stub Code]
  0x00007f003f2c54e0: nop                       ;   {no_reloc}
  0x00007f003f2c54e1: nop
  0x00007f003f2c54e2: nop
  0x00007f003f2c54e3: nop
  0x00007f003f2c54e4: nop
  0x00007f003f2c54e5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c54ef: jmp    0x00007f003f2c54ef  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2c54f4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2c54f9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2c54fe: sub    rsp,0x80
  0x00007f003f2c5505: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2c550a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2c550f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2c5514: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2c5519: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2c551e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2c5523: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2c5528: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2c552d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2c5532: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2c5537: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2c553c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2c5541: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2c5546: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2c554b: mov    QWORD PTR [rsp],r15
  0x00007f003f2c554f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2c5559: movabs rsi,0x7f003f2c54f9  ;   {internal_word}
  0x00007f003f2c5563: mov    rdx,rsp
  0x00007f003f2c5566: and    rsp,0xfffffffffffffff0
  0x00007f003f2c556a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2c556f: hlt    
[Deopt Handler Code]
  0x00007f003f2c5570: movabs r10,0x7f003f2c5570  ;   {section_word}
  0x00007f003f2c557a: push   r10
  0x00007f003f2c557c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2c5581: hlt    
  0x00007f003f2c5582: hlt    
  0x00007f003f2c5583: hlt    
  0x00007f003f2c5584: hlt    
  0x00007f003f2c5585: hlt    
  0x00007f003f2c5586: hlt    
  0x00007f003f2c5587: hlt    
<nmethod compile_id='113' compiler='C1' level='3' entry='0x00007f003f2c5400' size='968' address='0x00007f003f2c5290' relocation_offset='312' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='816' dependencies_offset='944' nul_chk_table_offset='952' metadata_offset='760' method='java/lang/String lastIndexOf (I)I' bytes='13' count='514' iicount='514' stamp='0.512'/>
----------------------------------------------------------------------
java/lang/ref/Reference.&lt;init&gt;  [0x00007f003f2c5800, 0x00007f003f2c5a50]  592 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038794788} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;
  # this:     rsi:rsi   = &apos;java/lang/ref/Reference&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/ref/ReferenceQueue&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2c5800: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2c5804: shl    r10,0x3
  0x00007f003f2c5808: cmp    r10,rax
  0x00007f003f2c580b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2c5811: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2c581c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2c5820: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2c5827: push   rbp
  0x00007f003f2c5828: sub    rsp,0x30
  0x00007f003f2c582c: movabs rdi,0x7f0038a82f60  ;   {metadata(method data for {method} {0x00007f0038794788} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00007f003f2c5836: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2c583c: add    ebx,0x8
  0x00007f003f2c583f: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2c5845: movabs rdi,0x7f0038794788  ;   {metadata({method} {0x00007f0038794788} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00007f003f2c584f: and    ebx,0x1ff8
  0x00007f003f2c5855: cmp    ebx,0x0
  0x00007f003f2c5858: je     0x00007f003f2c5956  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.Reference::&lt;init&gt;@0 (line 306)

  0x00007f003f2c585e: mov    rdi,rsi
  0x00007f003f2c5861: movabs rbx,0x7f0038a82f60  ;   {metadata(method data for {method} {0x00007f0038794788} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00007f003f2c586b: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f2c5873: movabs rdi,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2c587d: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2c5883: add    ebx,0x8
  0x00007f003f2c5886: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2c588c: movabs rdi,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2c5896: and    ebx,0x7ffff8
  0x00007f003f2c589c: cmp    ebx,0x0
  0x00007f003f2c589f: je     0x00007f003f2c596d
  0x00007f003f2c58a5: mov    r10,rdx
  0x00007f003f2c58a8: shr    r10,0x3
  0x00007f003f2c58ac: mov    DWORD PTR [rsi+0xc],r10d
  0x00007f003f2c58b0: mov    rdi,rsi
  0x00007f003f2c58b3: shr    rdi,0x9
  0x00007f003f2c58b7: movabs rbx,0x7f003ae7c000
  0x00007f003f2c58c1: mov    BYTE PTR [rdi+rbx*1],0x0  ;*putfield 
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.code.RegisterArray from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
referent {reexecute=0 rethrow=0 return_oop=0}   ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 307)

  0x00007f003f2c58c5: cmp    rcx,0x0
  0x00007f003f2c58c9: movabs rdi,0x7f0038a82f60  ;   {metadata(method data for {method} {0x00007f0038794788} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00007f003f2c58d3: movabs rbx,0x140
  0x00007f003f2c58dd: jne    0x00007f003f2c58ed
  0x00007f003f2c58e3: movabs rbx,0x150
  0x00007f003f2c58ed: mov    rax,QWORD PTR [rdi+rbx*1]
  0x00007f003f2c58f1: lea    rax,[rax+0x1]
  0x00007f003f2c58f5: mov    QWORD PTR [rdi+rbx*1],rax
  0x00007f003f2c58f9: jne    0x00007f003f2c5925  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.Reference::&lt;init&gt;@11 (line 308)

  0x00007f003f2c58ff: movabs rdi,0x670b873e0    ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x00007f003f2c5909: mov    edi,DWORD PTR [rdi+0x68]
  0x00007f003f2c590c: shl    rdi,0x3            ;*getstatic NULL {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.Reference::&lt;init&gt;@14 (line 308)

  0x00007f003f2c5910: movabs rbx,0x7f0038a82f60  ;   {metadata(method data for {method} {0x00007f0038794788} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00007f003f2c591a: inc    DWORD PTR [rbx+0x160]
  0x00007f003f2c5920: jmp    0x00007f003f2c5928  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.Reference::&lt;init&gt;@17 (line 308)

  0x00007f003f2c5925: mov    rdi,rcx
  0x00007f003f2c5928: mov    r10,rdi
  0x00007f003f2c592b: shr    r10,0x3
  0x00007f003f2c592f: mov    DWORD PTR [rsi+0x10],r10d
  0x00007f003f2c5933: shr    rsi,0x9
  0x00007f003f2c5937: movabs rdi,0x7f003ae7c000
  0x00007f003f2c5941: mov    BYTE PTR [rsi+rdi*1],0x0
  0x00007f003f2c5945: lock add DWORD PTR [rsp],0x0  ;*putfield queue {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.Reference::&lt;init&gt;@21 (line 308)

  0x00007f003f2c594a: add    rsp,0x30
  0x00007f003f2c594e: pop    rbp
  0x00007f003f2c594f: test   DWORD PTR [rip+0x1b0fc7ab],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c5955: ret    
  0x00007f003f2c5956: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2c595b: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c5963: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop rcx=Oop off=360}
                                                ;*synchronization entry
                                                ; - java.lang.ref.Reference::&lt;init&gt;@-1 (line 306)
                                                ;   {runtime_call}
  0x00007f003f2c5968: jmp    0x00007f003f2c585e
  0x00007f003f2c596d: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2c5972: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c597a: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop rcx=Oop off=383}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.ref.Reference::&lt;init&gt;@1 (line 306)
                                                ;   {runtime_call}
  0x00007f003f2c597f: jmp    0x00007f003f2c58a5
  0x00007f003f2c5984: nop
  0x00007f003f2c5985: nop
  0x00007f003f2c5986: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c598d: movabs r10,0x0
  0x00007f003f2c5997: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c599e: movabs r10,0x0
  0x00007f003f2c59a8: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c59af: add    rsp,0x30
  0x00007f003f2c59b3: pop    rbp
  0x00007f003f2c59b4: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2c59b9: hlt    
  0x00007f003f2c59ba: hlt    
  0x00007f003f2c59bb: hlt    
  0x00007f003f2c59bc: hlt    
  0x00007f003f2c59bd: hlt    
  0x00007f003f2c59be: hlt    
  0x00007f003f2c59bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2c59c0: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2c59c5: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2c59ca: sub    rsp,0x80
  0x00007f003f2c59d1: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2c59d6: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2c59db: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2c59e0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2c59e5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2c59ea: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2c59ef: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2c59f4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2c59f9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2c59fe: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2c5a03: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2c5a08: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2c5a0d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2c5a12: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2c5a17: mov    QWORD PTR [rsp],r15
  0x00007f003f2c5a1b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2c5a25: movabs rsi,0x7f003f2c59c5  ;   {internal_word}
  0x00007f003f2c5a2f: mov    rdx,rsp
  0x00007f003f2c5a32: and    rsp,0xfffffffffffffff0
  0x00007f003f2c5a36: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2c5a3b: hlt    
[Deopt Handler Code]
  0x00007f003f2c5a3c: movabs r10,0x7f003f2c5a3c  ;   {section_word}
  0x00007f003f2c5a46: push   r10
  0x00007f003f2c5a48: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2c5a4d: hlt    
  0x00007f003f2c5a4e: hlt    
  0x00007f003f2c5a4f: hlt    
<nmethod compile_id='112' compiler='C1' level='3' entry='0x00007f003f2c5800' size='1224' address='0x00007f003f2c5690' relocation_offset='312' insts_offset='368' stub_offset='816' scopes_data_offset='984' scopes_pcs_offset='1056' dependencies_offset='1216' metadata_offset='960' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='389' iicount='389' stamp='0.513'/>
----------------------------------------------------------------------
java/lang/StringCoding.deref  [0x00007f003f2c5d20, 0x00007f003f2c65e8]  2248 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f00388af100} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/ThreadLocal&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2c5d20: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2c5d27: push   rbp
  0x00007f003f2c5d28: sub    rsp,0x40
  0x00007f003f2c5d2c: movabs rdi,0x7f0038a83118  ;   {metadata(method data for {method} {0x00007f00388af100} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00007f003f2c5d36: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2c5d3c: add    ebx,0x8
  0x00007f003f2c5d3f: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2c5d45: movabs rdi,0x7f00388af100  ;   {metadata({method} {0x00007f00388af100} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00007f003f2c5d4f: and    ebx,0x1ff8
  0x00007f003f2c5d55: cmp    ebx,0x0
  0x00007f003f2c5d58: je     0x00007f003f2c64b5  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::deref@0 (line 63)

  0x00007f003f2c5d5e: cmp    rax,QWORD PTR [rsi]  ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::deref@1 (line 63)
                                                ; implicit exception: dispatches to 0x00007f003f2c64cc
  0x00007f003f2c5d61: mov    rdi,rsi
  0x00007f003f2c5d64: movabs rbx,0x7f0038a83118  ;   {metadata(method data for {method} {0x00007f00388af100} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00007f003f2c5d6e: mov    edi,DWORD PTR [rdi+0x8]
  0x00007f003f2c5d71: shl    rdi,0x3
  0x00007f003f2c5d75: cmp    rdi,QWORD PTR [rbx+0x140]
  0x00007f003f2c5d7c: jne    0x00007f003f2c5d8b
  0x00007f003f2c5d7e: add    QWORD PTR [rbx+0x148],0x1
  0x00007f003f2c5d86: jmp    0x00007f003f2c5f4d
  0x00007f003f2c5d8b: cmp    rdi,QWORD PTR [rbx+0x150]
  0x00007f003f2c5d92: jne    0x00007f003f2c5da1
  0x00007f003f2c5d94: add    QWORD PTR [rbx+0x158],0x1
  0x00007f003f2c5d9c: jmp    0x00007f003f2c5f4d
  0x00007f003f2c5da1: cmp    rdi,QWORD PTR [rbx+0x160]
  0x00007f003f2c5da8: jne    0x00007f003f2c5db7
  0x00007f003f2c5daa: add    QWORD PTR [rbx+0x168],0x1
  0x00007f003f2c5db2: jmp    0x00007f003f2c5f4d
  0x00007f003f2c5db7: cmp    rdi,QWORD PTR [rbx+0x170]
  0x00007f003f2c5dbe: jne    0x00007f003f2c5dcd
  0x00007f003f2c5dc0: add    QWORD PTR [rbx+0x178],0x1
  0x00007f003f2c5dc8: jmp    0x00007f003f2c5f4d
  0x00007f003f2c5dcd: cmp    rdi,QWORD PTR [rbx+0x180]
  0x00007f003f2c5dd4: jne    0x00007f003f2c5de3
  0x00007f003f2c5dd6: add    QWORD PTR [rbx+0x188],0x1
  0x00007f003f2c5dde: jmp    0x00007f003f2c5f4d
  0x00007f003f2c5de3: cmp    rdi,QWORD PTR [rbx+0x190]
  0x00007f003f2c5dea: jne    0x00007f003f2c5df9
  0x00007f003f2c5dec: add    QWORD PTR [rbx+0x198],0x1
  0x00007f003f2c5df4: jmp    0x00007f003f2c5f4d
  0x00007f003f2c5df9: cmp    rdi,QWORD PTR [rbx+0x1a0]
  0x00007f003f2c5e00: jne    0x00007f003f2c5e0f
  0x00007f003f2c5e02: add    QWORD PTR [rbx+0x1a8],0x1
  0x00007f003f2c5e0a: jmp    0x00007f003f2c5f4d
  0x00007f003f2c5e0f: cmp    rdi,QWORD PTR [rbx+0x1b0]
  0x00007f003f2c5e16: jne    0x00007f003f2c5e25
  0x00007f003f2c5e18: add    QWORD PTR [rbx+0x1b8],0x1
  0x00007f003f2c5e20: jmp    0x00007f003f2c5f4d
  0x00007f003f2c5e25: cmp    QWORD PTR [rbx+0x140],0x0
  0x00007f003f2c5e30: jne    0x00007f003f2c5e49
  0x00007f003f2c5e32: mov    QWORD PTR [rbx+0x140],rdi
  0x00007f003f2c5e39: mov    QWORD PTR [rbx+0x148],0x1
  0x00007f003f2c5e44: jmp    0x00007f003f2c5f4d
  0x00007f003f2c5e49: cmp    QWORD PTR [rbx+0x150],0x0
  0x00007f003f2c5e54: jne    0x00007f003f2c5e6d
  0x00007f003f2c5e56: mov    QWORD PTR [rbx+0x150],rdi
  0x00007f003f2c5e5d: mov    QWORD PTR [rbx+0x158],0x1
  0x00007f003f2c5e68: jmp    0x00007f003f2c5f4d
  0x00007f003f2c5e6d: cmp    QWORD PTR [rbx+0x160],0x0
  0x00007f003f2c5e78: jne    0x00007f003f2c5e91
  0x00007f003f2c5e7a: mov    QWORD PTR [rbx+0x160],rdi
  0x00007f003f2c5e81: mov    QWORD PTR [rbx+0x168],0x1
  0x00007f003f2c5e8c: jmp    0x00007f003f2c5f4d
  0x00007f003f2c5e91: cmp    QWORD PTR [rbx+0x170],0x0
  0x00007f003f2c5e9c: jne    0x00007f003f2c5eb5
  0x00007f003f2c5e9e: mov    QWORD PTR [rbx+0x170],rdi
  0x00007f003f2c5ea5: mov    QWORD PTR [rbx+0x178],0x1
  0x00007f003f2c5eb0: jmp    0x00007f003f2c5f4d
  0x00007f003f2c5eb5: cmp    QWORD PTR [rbx+0x180],0x0
  0x00007f003f2c5ec0: jne    0x00007f003f2c5ed9
  0x00007f003f2c5ec2: mov    QWORD PTR [rbx+0x180],rdi
  0x00007f003f2c5ec9: mov    QWORD PTR [rbx+0x188],0x1
  0x00007f003f2c5ed4: jmp    0x00007f003f2c5f4d
  0x00007f003f2c5ed9: cmp    QWORD PTR [rbx+0x190],0x0
  0x00007f003f2c5ee4: jne    0x00007f003f2c5efd
  0x00007f003f2c5ee6: mov    QWORD PTR [rbx+0x190],rdi
  0x00007f003f2c5eed: mov    QWORD PTR [rbx+0x198],0x1
  0x00007f003f2c5ef8: jmp    0x00007f003f2c5f4d
  0x00007f003f2c5efd: cmp    QWORD PTR [rbx+0x1a0],0x0
  0x00007f003f2c5f08: jne    0x00007f003f2c5f21
  0x00007f003f2c5f0a: mov    QWORD PTR [rbx+0x1a0],rdi
  0x00007f003f2c5f11: mov    QWORD PTR [rbx+0x1a8],0x1
  0x00007f003f2c5f1c: jmp    0x00007f003f2c5f4d
  0x00007f003f2c5f21: cmp    QWORD PTR [rbx+0x1b0],0x0
  0x00007f003f2c5f2c: jne    0x00007f003f2c5f45
  0x00007f003f2c5f2e: mov    QWORD PTR [rbx+0x1b0],rdi
  0x00007f003f2c5f35: mov    QWORD PTR [rbx+0x1b8],0x1
  0x00007f003f2c5f40: jmp    0x00007f003f2c5f4d
  0x00007f003f2c5f45: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f2c5f4d: nop
  0x00007f003f2c5f4e: nop
  0x00007f003f2c5f4f: call   0x00007f003f1c4d60  ; OopMap{off=564}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::deref@1 (line 63)
                                                ;   {optimized virtual_call}
  0x00007f003f2c5f54: cmp    rax,0x0
  0x00007f003f2c5f58: jne    0x00007f003f2c5f73
  0x00007f003f2c5f5a: movabs rdi,0x7f0038a83118  ;   {metadata(method data for {method} {0x00007f00388af100} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00007f003f2c5f64: or     DWORD PTR [rdi+0x1c0],0x100
  0x00007f003f2c5f6e: jmp    0x00007f003f2c6190
  0x00007f003f2c5f73: movabs rbx,0x7c0005890    ;   {metadata(&apos;java/lang/ref/SoftReference&apos;)}
  0x00007f003f2c5f7d: mov    edi,DWORD PTR [rax+0x8]
  0x00007f003f2c5f80: shl    rdi,0x3
  0x00007f003f2c5f84: cmp    rbx,QWORD PTR [rdi+0x38]
  0x00007f003f2c5f88: jne    0x00007f003f2c6174
  0x00007f003f2c5f8e: movabs rdi,0x7f0038a83118  ;   {metadata(method data for {method} {0x00007f00388af100} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00007f003f2c5f98: mov    ebx,DWORD PTR [rax+0x8]
  0x00007f003f2c5f9b: shl    rbx,0x3
  0x00007f003f2c5f9f: cmp    rbx,QWORD PTR [rdi+0x1d8]
  0x00007f003f2c5fa6: jne    0x00007f003f2c5fb5
  0x00007f003f2c5fa8: add    QWORD PTR [rdi+0x1e0],0x1
  0x00007f003f2c5fb0: jmp    0x00007f003f2c6190
  0x00007f003f2c5fb5: cmp    rbx,QWORD PTR [rdi+0x1e8]
  0x00007f003f2c5fbc: jne    0x00007f003f2c5fcb
  0x00007f003f2c5fbe: add    QWORD PTR [rdi+0x1f0],0x1
  0x00007f003f2c5fc6: jmp    0x00007f003f2c6190
  0x00007f003f2c5fcb: cmp    rbx,QWORD PTR [rdi+0x1f8]
  0x00007f003f2c5fd2: jne    0x00007f003f2c5fe1
  0x00007f003f2c5fd4: add    QWORD PTR [rdi+0x200],0x1
  0x00007f003f2c5fdc: jmp    0x00007f003f2c6190
  0x00007f003f2c5fe1: cmp    rbx,QWORD PTR [rdi+0x208]
  0x00007f003f2c5fe8: jne    0x00007f003f2c5ff7
  0x00007f003f2c5fea: add    QWORD PTR [rdi+0x210],0x1
  0x00007f003f2c5ff2: jmp    0x00007f003f2c6190
  0x00007f003f2c5ff7: cmp    rbx,QWORD PTR [rdi+0x218]
  0x00007f003f2c5ffe: jne    0x00007f003f2c600d
  0x00007f003f2c6000: add    QWORD PTR [rdi+0x220],0x1
  0x00007f003f2c6008: jmp    0x00007f003f2c6190
  0x00007f003f2c600d: cmp    rbx,QWORD PTR [rdi+0x228]
  0x00007f003f2c6014: jne    0x00007f003f2c6023
  0x00007f003f2c6016: add    QWORD PTR [rdi+0x230],0x1
  0x00007f003f2c601e: jmp    0x00007f003f2c6190
  0x00007f003f2c6023: cmp    rbx,QWORD PTR [rdi+0x238]
  0x00007f003f2c602a: jne    0x00007f003f2c6039
  0x00007f003f2c602c: add    QWORD PTR [rdi+0x240],0x1
  0x00007f003f2c6034: jmp    0x00007f003f2c6190
  0x00007f003f2c6039: cmp    rbx,QWORD PTR [rdi+0x248]
  0x00007f003f2c6040: jne    0x00007f003f2c604f
  0x00007f003f2c6042: add    QWORD PTR [rdi+0x250],0x1
  0x00007f003f2c604a: jmp    0x00007f003f2c6190
  0x00007f003f2c604f: cmp    QWORD PTR [rdi+0x1d8],0x0
  0x00007f003f2c605a: jne    0x00007f003f2c6073
  0x00007f003f2c605c: mov    QWORD PTR [rdi+0x1d8],rbx
  0x00007f003f2c6063: mov    QWORD PTR [rdi+0x1e0],0x1
  0x00007f003f2c606e: jmp    0x00007f003f2c6190
  0x00007f003f2c6073: cmp    QWORD PTR [rdi+0x1e8],0x0
  0x00007f003f2c607e: jne    0x00007f003f2c6097
  0x00007f003f2c6080: mov    QWORD PTR [rdi+0x1e8],rbx
  0x00007f003f2c6087: mov    QWORD PTR [rdi+0x1f0],0x1
  0x00007f003f2c6092: jmp    0x00007f003f2c6190
  0x00007f003f2c6097: cmp    QWORD PTR [rdi+0x1f8],0x0
  0x00007f003f2c60a2: jne    0x00007f003f2c60bb
  0x00007f003f2c60a4: mov    QWORD PTR [rdi+0x1f8],rbx
  0x00007f003f2c60ab: mov    QWORD PTR [rdi+0x200],0x1
  0x00007f003f2c60b6: jmp    0x00007f003f2c6190
  0x00007f003f2c60bb: cmp    QWORD PTR [rdi+0x208],0x0
  0x00007f003f2c60c6: jne    0x00007f003f2c60df
  0x00007f003f2c60c8: mov    QWORD PTR [rdi+0x208],rbx
  0x00007f003f2c60cf: mov    QWORD PTR [rdi+0x210],0x1
  0x00007f003f2c60da: jmp    0x00007f003f2c6190
  0x00007f003f2c60df: cmp    QWORD PTR [rdi+0x218],0x0
  0x00007f003f2c60ea: jne    0x00007f003f2c6103
  0x00007f003f2c60ec: mov    QWORD PTR [rdi+0x218],rbx
  0x00007f003f2c60f3: mov    QWORD PTR [rdi+0x220],0x1
  0x00007f003f2c60fe: jmp    0x00007f003f2c6190
  0x00007f003f2c6103: cmp    QWORD PTR [rdi+0x228],0x0
  0x00007f003f2c610e: jne    0x00007f003f2c6127
  0x00007f003f2c6110: mov    QWORD PTR [rdi+0x228],rbx
  0x00007f003f2c6117: mov    QWORD PTR [rdi+0x230],0x1
  0x00007f003f2c6122: jmp    0x00007f003f2c6190
  0x00007f003f2c6127: cmp    QWORD PTR [rdi+0x238],0x0
  0x00007f003f2c6132: jne    0x00007f003f2c614b
  0x00007f003f2c6134: mov    QWORD PTR [rdi+0x238],rbx
  0x00007f003f2c613b: mov    QWORD PTR [rdi+0x240],0x1
  0x00007f003f2c6146: jmp    0x00007f003f2c6190
  0x00007f003f2c614b: cmp    QWORD PTR [rdi+0x248],0x0
  0x00007f003f2c6156: jne    0x00007f003f2c616f
  0x00007f003f2c6158: mov    QWORD PTR [rdi+0x248],rbx
  0x00007f003f2c615f: mov    QWORD PTR [rdi+0x250],0x1
  0x00007f003f2c616a: jmp    0x00007f003f2c6190
  0x00007f003f2c616f: jmp    0x00007f003f2c6190
  0x00007f003f2c6174: movabs rdi,0x7f0038a83118  ;   {metadata(method data for {method} {0x00007f00388af100} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00007f003f2c617e: sub    QWORD PTR [rdi+0x1c8],0x1
  0x00007f003f2c6186: jmp    0x00007f003f2c64d1
  0x00007f003f2c618b: jmp    0x00007f003f2c6190  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::deref@4 (line 63)

  0x00007f003f2c6190: cmp    rax,0x0
  0x00007f003f2c6194: movabs rsi,0x7f0038a83118  ;   {metadata(method data for {method} {0x00007f00388af100} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00007f003f2c619e: movabs rdi,0x260
  0x00007f003f2c61a8: jne    0x00007f003f2c61b8
  0x00007f003f2c61ae: movabs rdi,0x270
  0x00007f003f2c61b8: mov    rbx,QWORD PTR [rsi+rdi*1]
  0x00007f003f2c61bc: lea    rbx,[rbx+0x1]
  0x00007f003f2c61c0: mov    QWORD PTR [rsi+rdi*1],rbx
  0x00007f003f2c61c4: je     0x00007f003f2c649f  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::deref@9 (line 64)

  0x00007f003f2c61ca: cmp    rax,QWORD PTR [rax]  ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::deref@15 (line 66)
                                                ; implicit exception: dispatches to 0x00007f003f2c64da
  0x00007f003f2c61cd: mov    rsi,rax
  0x00007f003f2c61d0: movabs rdi,0x7f0038a83118  ;   {metadata(method data for {method} {0x00007f00388af100} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00007f003f2c61da: mov    esi,DWORD PTR [rsi+0x8]
  0x00007f003f2c61dd: shl    rsi,0x3
  0x00007f003f2c61e1: cmp    rsi,QWORD PTR [rdi+0x290]
  0x00007f003f2c61e8: jne    0x00007f003f2c61f7
  0x00007f003f2c61ea: add    QWORD PTR [rdi+0x298],0x1
  0x00007f003f2c61f2: jmp    0x00007f003f2c63b9
  0x00007f003f2c61f7: cmp    rsi,QWORD PTR [rdi+0x2a0]
  0x00007f003f2c61fe: jne    0x00007f003f2c620d
  0x00007f003f2c6200: add    QWORD PTR [rdi+0x2a8],0x1
  0x00007f003f2c6208: jmp    0x00007f003f2c63b9
  0x00007f003f2c620d: cmp    rsi,QWORD PTR [rdi+0x2b0]
  0x00007f003f2c6214: jne    0x00007f003f2c6223
  0x00007f003f2c6216: add    QWORD PTR [rdi+0x2b8],0x1
  0x00007f003f2c621e: jmp    0x00007f003f2c63b9
  0x00007f003f2c6223: cmp    rsi,QWORD PTR [rdi+0x2c0]
  0x00007f003f2c622a: jne    0x00007f003f2c6239
  0x00007f003f2c622c: add    QWORD PTR [rdi+0x2c8],0x1
  0x00007f003f2c6234: jmp    0x00007f003f2c63b9
  0x00007f003f2c6239: cmp    rsi,QWORD PTR [rdi+0x2d0]
  0x00007f003f2c6240: jne    0x00007f003f2c624f
  0x00007f003f2c6242: add    QWORD PTR [rdi+0x2d8],0x1
  0x00007f003f2c624a: jmp    0x00007f003f2c63b9
  0x00007f003f2c624f: cmp    rsi,QWORD PTR [rdi+0x2e0]
  0x00007f003f2c6256: jne    0x00007f003f2c6265
  0x00007f003f2c6258: add    QWORD PTR [rdi+0x2e8],0x1
  0x00007f003f2c6260: jmp    0x00007f003f2c63b9
  0x00007f003f2c6265: cmp    rsi,QWORD PTR [rdi+0x2f0]
  0x00007f003f2c626c: jne    0x00007f003f2c627b
  0x00007f003f2c626e: add    QWORD PTR [rdi+0x2f8],0x1
  0x00007f003f2c6276: jmp    0x00007f003f2c63b9
  0x00007f003f2c627b: cmp    rsi,QWORD PTR [rdi+0x300]
  0x00007f003f2c6282: jne    0x00007f003f2c6291
  0x00007f003f2c6284: add    QWORD PTR [rdi+0x308],0x1
  0x00007f003f2c628c: jmp    0x00007f003f2c63b9
  0x00007f003f2c6291: cmp    QWORD PTR [rdi+0x290],0x0
  0x00007f003f2c629c: jne    0x00007f003f2c62b5
  0x00007f003f2c629e: mov    QWORD PTR [rdi+0x290],rsi
  0x00007f003f2c62a5: mov    QWORD PTR [rdi+0x298],0x1
  0x00007f003f2c62b0: jmp    0x00007f003f2c63b9
  0x00007f003f2c62b5: cmp    QWORD PTR [rdi+0x2a0],0x0
  0x00007f003f2c62c0: jne    0x00007f003f2c62d9
  0x00007f003f2c62c2: mov    QWORD PTR [rdi+0x2a0],rsi
  0x00007f003f2c62c9: mov    QWORD PTR [rdi+0x2a8],0x1
  0x00007f003f2c62d4: jmp    0x00007f003f2c63b9
  0x00007f003f2c62d9: cmp    QWORD PTR [rdi+0x2b0],0x0
  0x00007f003f2c62e4: jne    0x00007f003f2c62fd
  0x00007f003f2c62e6: mov    QWORD PTR [rdi+0x2b0],rsi
  0x00007f003f2c62ed: mov    QWORD PTR [rdi+0x2b8],0x1
  0x00007f003f2c62f8: jmp    0x00007f003f2c63b9
  0x00007f003f2c62fd: cmp    QWORD PTR [rdi+0x2c0],0x0
  0x00007f003f2c6308: jne    0x00007f003f2c6321
  0x00007f003f2c630a: mov    QWORD PTR [rdi+0x2c0],rsi
  0x00007f003f2c6311: mov    QWORD PTR [rdi+0x2c8],0x1
  0x00007f003f2c631c: jmp    0x00007f003f2c63b9
  0x00007f003f2c6321: cmp    QWORD PTR [rdi+0x2d0],0x0
  0x00007f003f2c632c: jne    0x00007f003f2c6345
  0x00007f003f2c632e: mov    QWORD PTR [rdi+0x2d0],rsi
  0x00007f003f2c6335: mov    QWORD PTR [rdi+0x2d8],0x1
  0x00007f003f2c6340: jmp    0x00007f003f2c63b9
  0x00007f003f2c6345: cmp    QWORD PTR [rdi+0x2e0],0x0
  0x00007f003f2c6350: jne    0x00007f003f2c6369
  0x00007f003f2c6352: mov    QWORD PTR [rdi+0x2e0],rsi
  0x00007f003f2c6359: mov    QWORD PTR [rdi+0x2e8],0x1
  0x00007f003f2c6364: jmp    0x00007f003f2c63b9
  0x00007f003f2c6369: cmp    QWORD PTR [rdi+0x2f0],0x0
  0x00007f003f2c6374: jne    0x00007f003f2c638d
  0x00007f003f2c6376: mov    QWORD PTR [rdi+0x2f0],rsi
  0x00007f003f2c637d: mov    QWORD PTR [rdi+0x2f8],0x1
  0x00007f003f2c6388: jmp    0x00007f003f2c63b9
  0x00007f003f2c638d: cmp    QWORD PTR [rdi+0x300],0x0
  0x00007f003f2c6398: jne    0x00007f003f2c63b1
  0x00007f003f2c639a: mov    QWORD PTR [rdi+0x300],rsi
  0x00007f003f2c63a1: mov    QWORD PTR [rdi+0x308],0x1
  0x00007f003f2c63ac: jmp    0x00007f003f2c63b9
  0x00007f003f2c63b1: add    QWORD PTR [rdi+0x280],0x1
  0x00007f003f2c63b9: movabs rsi,0x7f0038a836e8  ;   {metadata(method data for {method} {0x00007f0038794d50} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/SoftReference&apos;)}
  0x00007f003f2c63c3: mov    edi,DWORD PTR [rsi+0xfc]
  0x00007f003f2c63c9: add    edi,0x8
  0x00007f003f2c63cc: mov    DWORD PTR [rsi+0xfc],edi
  0x00007f003f2c63d2: movabs rsi,0x7f0038794d50  ;   {metadata({method} {0x00007f0038794d50} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/SoftReference&apos;)}
  0x00007f003f2c63dc: and    edi,0x7ffff8
  0x00007f003f2c63e2: cmp    edi,0x0
  0x00007f003f2c63e5: je     0x00007f003f2c64df
  0x00007f003f2c63eb: mov    rsi,rax
  0x00007f003f2c63ee: movabs rdi,0x7f0038a836e8  ;   {metadata(method data for {method} {0x00007f0038794d50} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/SoftReference&apos;)}
  0x00007f003f2c63f8: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f2c6400: mov    esi,DWORD PTR [rax+0xc]
  0x00007f003f2c6403: shl    rsi,0x3            ;*invokespecial get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.SoftReference::get@1 (line 112)
                                                ; - java.lang.StringCoding::deref@15 (line 66)

  0x00007f003f2c6407: cmp    rsi,0x0
  0x00007f003f2c640b: movabs rdi,0x7f0038a836e8  ;   {metadata(method data for {method} {0x00007f0038794d50} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/SoftReference&apos;)}
  0x00007f003f2c6415: movabs rbx,0x140
  0x00007f003f2c641f: je     0x00007f003f2c642f
  0x00007f003f2c6425: movabs rbx,0x150
  0x00007f003f2c642f: mov    rdx,QWORD PTR [rdi+rbx*1]
  0x00007f003f2c6433: lea    rdx,[rdx+0x1]
  0x00007f003f2c6437: mov    QWORD PTR [rdi+rbx*1],rdx
  0x00007f003f2c643b: je     0x00007f003f2c6490  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.SoftReference::get@6 (line 113)
                                                ; - java.lang.StringCoding::deref@15 (line 66)

  0x00007f003f2c6441: mov    rdi,QWORD PTR [rax+0x20]  ;*getfield timestamp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.SoftReference::get@10 (line 113)
                                                ; - java.lang.StringCoding::deref@15 (line 66)

  0x00007f003f2c6445: movabs rbx,0x670b818a0    ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/ref/SoftReference&apos;)}
  0x00007f003f2c644f: mov    rdx,QWORD PTR [rbx+0x68]  ;*getstatic clock {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.SoftReference::get@13 (line 113)
                                                ; - java.lang.StringCoding::deref@15 (line 66)

  0x00007f003f2c6453: cmp    rdi,rdx
  0x00007f003f2c6456: movabs rdi,0x7f0038a836e8  ;   {metadata(method data for {method} {0x00007f0038794d50} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/SoftReference&apos;)}
  0x00007f003f2c6460: movabs rbx,0x170
  0x00007f003f2c646a: jne    0x00007f003f2c647a
  0x00007f003f2c6470: movabs rbx,0x160
  0x00007f003f2c647a: mov    rcx,QWORD PTR [rdi+rbx*1]
  0x00007f003f2c647e: lea    rcx,[rcx+0x1]
  0x00007f003f2c6482: mov    QWORD PTR [rdi+rbx*1],rcx
  0x00007f003f2c6486: je     0x00007f003f2c6490  ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.SoftReference::get@16 (line 113)
                                                ; - java.lang.StringCoding::deref@15 (line 66)

  0x00007f003f2c648c: mov    QWORD PTR [rax+0x20],rdx  ;*putfield timestamp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.SoftReference::get@24 (line 114)
                                                ; - java.lang.StringCoding::deref@15 (line 66)

  0x00007f003f2c6490: mov    rax,rsi
  0x00007f003f2c6493: add    rsp,0x40
  0x00007f003f2c6497: pop    rbp
  0x00007f003f2c6498: test   DWORD PTR [rip+0x1b0fbc62],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c649e: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::deref@18 (line 66)

  0x00007f003f2c649f: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f2c64a9: add    rsp,0x40
  0x00007f003f2c64ad: pop    rbp
  0x00007f003f2c64ae: test   DWORD PTR [rip+0x1b0fbc4c],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c64b4: ret    
  0x00007f003f2c64b5: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2c64ba: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c64c2: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=1959}
                                                ;*synchronization entry
                                                ; - java.lang.StringCoding::deref@-1 (line 63)
                                                ;   {runtime_call}
  0x00007f003f2c64c7: jmp    0x00007f003f2c5d5e
  0x00007f003f2c64cc: call   0x00007f003f279000  ; OopMap{rsi=Oop off=1969}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::deref@1 (line 63)
                                                ;   {runtime_call}
  0x00007f003f2c64d1: mov    QWORD PTR [rsp],rax
  0x00007f003f2c64d5: call   0x00007f003f27b2c0  ; OopMap{off=1978}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::deref@4 (line 63)
                                                ;   {runtime_call}
  0x00007f003f2c64da: call   0x00007f003f279000  ; OopMap{rax=Oop off=1983}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::deref@15 (line 66)
                                                ;   {runtime_call}
  0x00007f003f2c64df: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2c64e4: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c64ec: call   0x00007f003f27d5e0  ; OopMap{rax=Oop off=2001}
                                                ;*synchronization entry
                                                ; - java.lang.ref.SoftReference::get@-1 (line 112)
                                                ; - java.lang.StringCoding::deref@15 (line 66)
                                                ;   {runtime_call}
  0x00007f003f2c64f1: jmp    0x00007f003f2c63eb
  0x00007f003f2c64f6: nop
  0x00007f003f2c64f7: nop
  0x00007f003f2c64f8: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c64ff: movabs r10,0x0
  0x00007f003f2c6509: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c6510: movabs r10,0x0
  0x00007f003f2c651a: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c6521: add    rsp,0x40
  0x00007f003f2c6525: pop    rbp
  0x00007f003f2c6526: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2c652b: hlt    
  0x00007f003f2c652c: hlt    
  0x00007f003f2c652d: hlt    
  0x00007f003f2c652e: hlt    
  0x00007f003f2c652f: hlt    
  0x00007f003f2c6530: hlt    
  0x00007f003f2c6531: hlt    
  0x00007f003f2c6532: hlt    
  0x00007f003f2c6533: hlt    
  0x00007f003f2c6534: hlt    
  0x00007f003f2c6535: hlt    
  0x00007f003f2c6536: hlt    
  0x00007f003f2c6537: hlt    
  0x00007f003f2c6538: hlt    
  0x00007f003f2c6539: hlt    
  0x00007f003f2c653a: hlt    
  0x00007f003f2c653b: hlt    
  0x00007f003f2c653c: hlt    
  0x00007f003f2c653d: hlt    
  0x00007f003f2c653e: hlt    
  0x00007f003f2c653f: hlt    
[Stub Code]
  0x00007f003f2c6540: nop                       ;   {no_reloc}
  0x00007f003f2c6541: nop
  0x00007f003f2c6542: nop
  0x00007f003f2c6543: nop
  0x00007f003f2c6544: nop
  0x00007f003f2c6545: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c654f: jmp    0x00007f003f2c654f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2c6554: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2c6559: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2c655e: sub    rsp,0x80
  0x00007f003f2c6565: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2c656a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2c656f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2c6574: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2c6579: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2c657e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2c6583: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2c6588: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2c658d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2c6592: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2c6597: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2c659c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2c65a1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2c65a6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2c65ab: mov    QWORD PTR [rsp],r15
  0x00007f003f2c65af: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2c65b9: movabs rsi,0x7f003f2c6559  ;   {internal_word}
  0x00007f003f2c65c3: mov    rdx,rsp
  0x00007f003f2c65c6: and    rsp,0xfffffffffffffff0
  0x00007f003f2c65ca: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2c65cf: hlt    
[Deopt Handler Code]
  0x00007f003f2c65d0: movabs r10,0x7f003f2c65d0  ;   {section_word}
  0x00007f003f2c65da: push   r10
  0x00007f003f2c65dc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2c65e1: hlt    
  0x00007f003f2c65e2: hlt    
  0x00007f003f2c65e3: hlt    
  0x00007f003f2c65e4: hlt    
  0x00007f003f2c65e5: hlt    
  0x00007f003f2c65e6: hlt    
  0x00007f003f2c65e7: hlt    
<nmethod compile_id='107' compiler='C1' level='3' entry='0x00007f003f2c5d20' size='3144' address='0x00007f003f2c5b90' relocation_offset='312' insts_offset='400' stub_offset='2480' scopes_data_offset='2672' scopes_pcs_offset='2792' dependencies_offset='3112' nul_chk_table_offset='3120' metadata_offset='2648' method='java/lang/StringCoding deref (Ljava/lang/ThreadLocal;)Ljava/lang/Object;' bytes='19' count='256' iicount='256' stamp='0.515'/>
<writer thread='139637818533632'/>
----------------------------------------------------------------------
java/security/AccessController.doPrivileged  [0x00007f003f2c69a0, 0x00007f003f2c6bb8]  536 bytes
[Entry Point]
  # {method} {0x00007f0038837158} &apos;doPrivileged&apos; &apos;(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;&apos; in &apos;java/security/AccessController&apos;
  # parm0:    rsi:rsi   = &apos;java/security/PrivilegedExceptionAction&apos;
  # parm1:    rdx:rdx   = &apos;java/security/AccessControlContext&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2c69a0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2c69a4: shl    r10,0x3
  0x00007f003f2c69a8: cmp    rax,r10
  0x00007f003f2c69ab: je     0x00007f003f2c69b8
  0x00007f003f2c69b1: jmp    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2c69b6: xchg   ax,ax
[Verified Entry Point]
  0x00007f003f2c69b8: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2c69bf: push   rbp
  0x00007f003f2c69c0: mov    rbp,rsp
  0x00007f003f2c69c3: sub    rsp,0x40
  0x00007f003f2c69c7: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2c69cc: cmp    rdx,0x0
  0x00007f003f2c69d0: lea    rcx,[rsp+0x8]
  0x00007f003f2c69d5: cmove  rcx,QWORD PTR [rsp+0x8]
  0x00007f003f2c69db: mov    QWORD PTR [rsp],rsi
  0x00007f003f2c69df: cmp    rsi,0x0
  0x00007f003f2c69e3: lea    rdx,[rsp]
  0x00007f003f2c69e7: cmove  rdx,QWORD PTR [rsp]
  0x00007f003f2c69ec: movabs r14,0x670b85e58    ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/security/AccessController&apos;)}
  0x00007f003f2c69f6: mov    QWORD PTR [rsp+0x30],r14
  0x00007f003f2c69fb: lea    r14,[rsp+0x30]
  0x00007f003f2c6a00: mov    rsi,r14            ; OopMap{[8]=Oop [0]=Oop [48]=Oop off=99}
  0x00007f003f2c6a03: movabs r10,0x7f003f2c6a03  ;   {section_word}
  0x00007f003f2c6a0d: mov    QWORD PTR [r15+0x1c8],r10
  0x00007f003f2c6a14: mov    QWORD PTR [r15+0x1c0],rsp
  0x00007f003f2c6a1b: cmp    BYTE PTR [rip+0x1a28dfb2],0x0        # 0x00007f00595549d4
                                                ;   {external_word}
  0x00007f003f2c6a22: je     0x00007f003f2c6a5e
  0x00007f003f2c6a28: push   rsi
  0x00007f003f2c6a29: push   rdx
  0x00007f003f2c6a2a: push   rcx
  0x00007f003f2c6a2b: movabs rsi,0x7f0038837158  ;   {metadata({method} {0x00007f0038837158} &apos;doPrivileged&apos; &apos;(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;&apos; in &apos;java/security/AccessController&apos;)}
  0x00007f003f2c6a35: mov    rdi,r15
  0x00007f003f2c6a38: test   esp,0xf
  0x00007f003f2c6a3e: je     0x00007f003f2c6a56
  0x00007f003f2c6a44: sub    rsp,0x8
  0x00007f003f2c6a48: call   0x00007f0058f49f20  ;   {runtime_call}
  0x00007f003f2c6a4d: add    rsp,0x8
  0x00007f003f2c6a51: jmp    0x00007f003f2c6a5b
  0x00007f003f2c6a56: call   0x00007f0058f49f20  ;   {runtime_call}
  0x00007f003f2c6a5b: pop    rcx
  0x00007f003f2c6a5c: pop    rdx
  0x00007f003f2c6a5d: pop    rsi
  0x00007f003f2c6a5e: lea    rdi,[r15+0x1e0]
  0x00007f003f2c6a65: mov    DWORD PTR [r15+0x258],0x4
  0x00007f003f2c6a70: call   0x00007f0053bd27a0  ;   {runtime_call}
  0x00007f003f2c6a75: vzeroupper 
  0x00007f003f2c6a78: mov    DWORD PTR [r15+0x258],0x5
  0x00007f003f2c6a83: mov    ecx,r15d
  0x00007f003f2c6a86: shr    ecx,0x4
  0x00007f003f2c6a89: and    ecx,0xffc
  0x00007f003f2c6a8f: movabs r10,0x7f005a3c1000  ;   {external_word}
  0x00007f003f2c6a99: mov    DWORD PTR [r10+rcx*1],ecx
  0x00007f003f2c6a9d: cmp    DWORD PTR [rip+0x1a298f15],0x0        # 0x00007f005955f9bc
                                                ;   {external_word}
  0x00007f003f2c6aa7: jne    0x00007f003f2c6abb
  0x00007f003f2c6aad: cmp    DWORD PTR [r15+0x30],0x0
  0x00007f003f2c6ab5: je     0x00007f003f2c6adc
  0x00007f003f2c6abb: mov    QWORD PTR [rbp-0x8],rax
  0x00007f003f2c6abf: mov    rdi,r15
  0x00007f003f2c6ac2: mov    r12,rsp
  0x00007f003f2c6ac5: sub    rsp,0x0
  0x00007f003f2c6ac9: and    rsp,0xfffffffffffffff0
  0x00007f003f2c6acd: call   0x00007f0058fefce0  ;   {runtime_call}
  0x00007f003f2c6ad2: mov    rsp,r12
  0x00007f003f2c6ad5: xor    r12,r12
  0x00007f003f2c6ad8: mov    rax,QWORD PTR [rbp-0x8]
  0x00007f003f2c6adc: mov    DWORD PTR [r15+0x258],0x8
  0x00007f003f2c6ae7: cmp    DWORD PTR [r15+0x2b0],0x1
  0x00007f003f2c6af2: je     0x00007f003f2c6b8e
  0x00007f003f2c6af8: cmp    BYTE PTR [rip+0x1a28ded5],0x0        # 0x00007f00595549d4
                                                ;   {external_word}
  0x00007f003f2c6aff: je     0x00007f003f2c6b3d
  0x00007f003f2c6b05: mov    QWORD PTR [rbp-0x8],rax
  0x00007f003f2c6b09: movabs rsi,0x7f0038837158  ;   {metadata({method} {0x00007f0038837158} &apos;doPrivileged&apos; &apos;(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;&apos; in &apos;java/security/AccessController&apos;)}
  0x00007f003f2c6b13: mov    rdi,r15
  0x00007f003f2c6b16: test   esp,0xf
  0x00007f003f2c6b1c: je     0x00007f003f2c6b34
  0x00007f003f2c6b22: sub    rsp,0x8
  0x00007f003f2c6b26: call   0x00007f0058f49f30  ;   {runtime_call}
  0x00007f003f2c6b2b: add    rsp,0x8
  0x00007f003f2c6b2f: jmp    0x00007f003f2c6b39
  0x00007f003f2c6b34: call   0x00007f0058f49f30  ;   {runtime_call}
  0x00007f003f2c6b39: mov    rax,QWORD PTR [rbp-0x8]
  0x00007f003f2c6b3d: movabs r10,0x0
  0x00007f003f2c6b47: mov    QWORD PTR [r15+0x1c0],r10
  0x00007f003f2c6b4e: movabs r10,0x0
  0x00007f003f2c6b58: mov    QWORD PTR [r15+0x1c8],r10
  0x00007f003f2c6b5f: test   rax,rax
  0x00007f003f2c6b62: je     0x00007f003f2c6b6b
  0x00007f003f2c6b68: mov    rax,QWORD PTR [rax]
  0x00007f003f2c6b6b: mov    rcx,QWORD PTR [r15+0x38]
  0x00007f003f2c6b6f: mov    DWORD PTR [rcx+0x100],0x0
  0x00007f003f2c6b79: leave  
  0x00007f003f2c6b7a: cmp    QWORD PTR [r15+0x8],0x0
  0x00007f003f2c6b82: jne    0x00007f003f2c6b89
  0x00007f003f2c6b88: ret    
  0x00007f003f2c6b89: jmp    Stub::forward exception  ;   {runtime_call}
  0x00007f003f2c6b8e: mov    QWORD PTR [rbp-0x8],rax
  0x00007f003f2c6b92: mov    r12,rsp
  0x00007f003f2c6b95: sub    rsp,0x0
  0x00007f003f2c6b99: and    rsp,0xfffffffffffffff0
  0x00007f003f2c6b9d: call   0x00007f0058f521e0  ;   {runtime_call}
  0x00007f003f2c6ba2: mov    rsp,r12
  0x00007f003f2c6ba5: xor    r12,r12
  0x00007f003f2c6ba8: mov    rax,QWORD PTR [rbp-0x8]
  0x00007f003f2c6bac: jmp    0x00007f003f2c6af8
  0x00007f003f2c6bb1: hlt    
  0x00007f003f2c6bb2: hlt    
  0x00007f003f2c6bb3: hlt    
  0x00007f003f2c6bb4: hlt    
  0x00007f003f2c6bb5: hlt    
  0x00007f003f2c6bb6: hlt    
  0x00007f003f2c6bb7: hlt    
<nmethod compile_id='114' compile_kind='c2n' level='0' entry='0x00007f003f2c69a0' size='936' address='0x00007f003f2c6810' relocation_offset='312' consts_offset='936' insts_offset='400' method='java/security/AccessController doPrivileged (Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;' bytes='0' count='256' iicount='256' throwouts='6' stamp='0.516'/>
<task_queued compile_id='115' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='424' iicount='424' level='3' stamp='0.516' comment='tiered' hot_count='424'/>
[Loaded jdk.vm.ci.amd64.AMD64$CPUFeature from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/StringBuilder.&lt;init&gt;  [0x00007f003f2c6d60, 0x00007f003f2c7010]  688 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00387eefd0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2c6d60: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2c6d64: shl    r10,0x3
  0x00007f003f2c6d68: cmp    r10,rax
  0x00007f003f2c6d6b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2c6d71: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2c6d7c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2c6d80: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2c6d87: push   rbp
  0x00007f003f2c6d88: sub    rsp,0x40
<writer thread='139637818533632'/>
[Loaded java.util.EnumSet from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
  0x00007f003f2c6d8c: mov    r8,rsi
  0x00007f003f2c6d8f: movabs rbx,0x7f0038a558d8  ;   {metadata(method data for {method} {0x00007f00387eefd0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f2c6d99: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f2c6d9f: add    edx,0x8
  0x00007f003f2c6da2: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f2c6da8: movabs rbx,0x7f00387eefd0  ;   {metadata({method} {0x00007f00387eefd0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f2c6db2: and    edx,0x1ff8
  0x00007f003f2c6db8: cmp    edx,0x0
  0x00007f003f2c6dbb: je     0x00007f003f2c6ef5  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::&lt;init&gt;@0 (line 89)

  0x00007f003f2c6dc1: mov    rbx,r8
  0x00007f003f2c6dc4: movabs rdx,0x7f0038a558d8  ;   {metadata(method data for {method} {0x00007f00387eefd0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f2c6dce: add    QWORD PTR [rdx+0x130],0x1
  0x00007f003f2c6dd6: movabs rbx,0x7f0038a55a38  ;   {metadata(method data for {method} {0x00007f00387ea920} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2c6de0: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f2c6de6: add    edx,0x8
  0x00007f003f2c6de9: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f2c6def: movabs rbx,0x7f00387ea920  ;   {metadata({method} {0x00007f00387ea920} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2c6df9: and    edx,0x7ffff8
  0x00007f003f2c6dff: cmp    edx,0x0
  0x00007f003f2c6e02: je     0x00007f003f2c6f0c
  0x00007f003f2c6e08: mov    rbx,r8
  0x00007f003f2c6e0b: movabs rdx,0x7f0038a55a38  ;   {metadata(method data for {method} {0x00007f00387ea920} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f003f2c6e15: add    QWORD PTR [rdx+0x130],0x1
  0x00007f003f2c6e1d: movabs rbx,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2c6e27: mov    edx,DWORD PTR [rbx+0xfc]
  0x00007f003f2c6e2d: add    edx,0x8
  0x00007f003f2c6e30: mov    DWORD PTR [rbx+0xfc],edx
  0x00007f003f2c6e36: movabs rbx,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2c6e40: and    edx,0x7ffff8
  0x00007f003f2c6e46: cmp    edx,0x0
  0x00007f003f2c6e49: je     0x00007f003f2c6f23
  0x00007f003f2c6e4f: mov    ebx,0x10
  0x00007f003f2c6e54: movabs rdx,0x7c00001f8    ;   {metadata({type array char})}
  0x00007f003f2c6e5e: movsxd rbx,ebx
  0x00007f003f2c6e61: mov    rdi,rbx
  0x00007f003f2c6e64: cmp    rbx,0xffffff
  0x00007f003f2c6e6b: ja     0x00007f003f2c6f3a
  0x00007f003f2c6e71: movabs rsi,0x17
  0x00007f003f2c6e7b: lea    rsi,[rsi+rbx*2]
  0x00007f003f2c6e7f: and    rsi,0xfffffffffffffff8
  0x00007f003f2c6e83: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2c6e87: lea    rsi,[rax+rsi*1]
  0x00007f003f2c6e8b: cmp    rsi,QWORD PTR [r15+0x70]
  0x00007f003f2c6e8f: ja     0x00007f003f2c6f3a
  0x00007f003f2c6e95: mov    QWORD PTR [r15+0x60],rsi
  0x00007f003f2c6e99: sub    rsi,rax
  0x00007f003f2c6e9c: mov    QWORD PTR [rax],0x1
  0x00007f003f2c6ea3: mov    rcx,rdx
  0x00007f003f2c6ea6: shr    rcx,0x3
  0x00007f003f2c6eaa: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2c6ead: mov    DWORD PTR [rax+0xc],ebx
  0x00007f003f2c6eb0: sub    rsi,0x10
  0x00007f003f2c6eb4: je     0x00007f003f2c6ecb
  0x00007f003f2c6eba: xor    rbx,rbx
  0x00007f003f2c6ebd: shr    rsi,0x3
  0x00007f003f2c6ec1: mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x00007f003f2c6ec6: dec    rsi
  0x00007f003f2c6ec9: jne    0x00007f003f2c6ec1  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)

  0x00007f003f2c6ecb: mov    r10,rax
  0x00007f003f2c6ece: shr    r10,0x3
  0x00007f003f2c6ed2: mov    DWORD PTR [r8+0x10],r10d
  0x00007f003f2c6ed6: shr    r8,0x9
  0x00007f003f2c6eda: movabs rsi,0x7f003ae7c000
  0x00007f003f2c6ee4: mov    BYTE PTR [r8+rsi*1],0x0  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)

  0x00007f003f2c6ee9: add    rsp,0x40
  0x00007f003f2c6eed: pop    rbp
  0x00007f003f2c6eee: test   DWORD PTR [rip+0x1b0fb20c],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c6ef4: ret    
  0x00007f003f2c6ef5: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2c6efa: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c6f02: call   0x00007f003f27d5e0  ; OopMap{r8=Oop off=423}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ;   {runtime_call}
  0x00007f003f2c6f07: jmp    0x00007f003f2c6dc1
  0x00007f003f2c6f0c: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2c6f11: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c6f19: call   0x00007f003f27d5e0  ; OopMap{r8=Oop off=446}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x00007f003f2c6f1e: jmp    0x00007f003f2c6e08
  0x00007f003f2c6f23: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2c6f28: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c6f30: call   0x00007f003f27d5e0  ; OopMap{r8=Oop off=469}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x00007f003f2c6f35: jmp    0x00007f003f2c6e4f
  0x00007f003f2c6f3a: call   0x00007f003f27a020  ; OopMap{r8=Oop off=479}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x00007f003f2c6f3f: jmp    0x00007f003f2c6ecb
  0x00007f003f2c6f41: nop
  0x00007f003f2c6f42: nop
  0x00007f003f2c6f43: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c6f4a: movabs r10,0x0
  0x00007f003f2c6f54: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c6f5b: movabs r10,0x0
  0x00007f003f2c6f65: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c6f6c: add    rsp,0x40
  0x00007f003f2c6f70: pop    rbp
  0x00007f003f2c6f71: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2c6f76: hlt    
  0x00007f003f2c6f77: hlt    
  0x00007f003f2c6f78: hlt    
  0x00007f003f2c6f79: hlt    
  0x00007f003f2c6f7a: hlt    
  0x00007f003f2c6f7b: hlt    
  0x00007f003f2c6f7c: hlt    
  0x00007f003f2c6f7d: hlt    
  0x00007f003f2c6f7e: hlt    
  0x00007f003f2c6f7f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2c6f80: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2c6f85: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2c6f8a: sub    rsp,0x80
  0x00007f003f2c6f91: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2c6f96: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2c6f9b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2c6fa0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2c6fa5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2c6faa: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2c6faf: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2c6fb4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2c6fb9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2c6fbe: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2c6fc3: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2c6fc8: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2c6fcd: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2c6fd2: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2c6fd7: mov    QWORD PTR [rsp],r15
  0x00007f003f2c6fdb: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2c6fe5: movabs rsi,0x7f003f2c6f85  ;   {internal_word}
  0x00007f003f2c6fef: mov    rdx,rsp
  0x00007f003f2c6ff2: and    rsp,0xfffffffffffffff0
  0x00007f003f2c6ff6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2c6ffb: hlt    
[Deopt Handler Code]
  0x00007f003f2c6ffc: movabs r10,0x7f003f2c6ffc  ;   {section_word}
  0x00007f003f2c7006: push   r10
  0x00007f003f2c7008: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2c700d: hlt    
  0x00007f003f2c700e: hlt    
  0x00007f003f2c700f: hlt    
<nmethod compile_id='115' compiler='C1' level='3' entry='0x00007f003f2c6d60' size='1344' address='0x00007f003f2c6bd0' relocation_offset='312' insts_offset='400' stub_offset='944' scopes_data_offset='1112' scopes_pcs_offset='1192' dependencies_offset='1336' metadata_offset='1088' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='425' iicount='425' stamp='0.517'/>
<writer thread='139637818533632'/>
[Loaded java.lang.Class$4 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.NativeMethodAccessorImpl from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingMethodAccessorImpl from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.RegularEnumSet from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<task_queued compile_id='116' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='433' iicount='433' level='3' stamp='0.517' comment='tiered' hot_count='433'/>
[Loaded jdk.vm.ci.amd64.AMD64$Flag from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/StringBuilder.toString  [0x00007f003f2c72e0, 0x00007f003f2c74e8]  520 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00387f0b88} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2c72e0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2c72e4: shl    r10,0x3
  0x00007f003f2c72e8: cmp    r10,rax
  0x00007f003f2c72eb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2c72f1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2c72fc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2c7300: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2c7307: push   rbp
  0x00007f003f2c7308: sub    rsp,0x40
  0x00007f003f2c730c: mov    r8,rsi
  0x00007f003f2c730f: movabs rdx,0x7f0038a56138  ;   {metadata(method data for {method} {0x00007f00387f0b88} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f2c7319: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2c731f: add    esi,0x8
  0x00007f003f2c7322: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2c7328: movabs rdx,0x7f00387f0b88  ;   {metadata({method} {0x00007f00387f0b88} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f2c7332: and    esi,0x1ff8
  0x00007f003f2c7338: cmp    esi,0x0
  0x00007f003f2c733b: je     0x00007f003f2c73cd
  0x00007f003f2c7341: movabs rdx,0x7c0001610    ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007f003f2c734b: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2c734f: lea    rdi,[rax+0x18]
  0x00007f003f2c7353: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2c7357: ja     0x00007f003f2c73e4
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.amd64.AMD64Kind from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>

  0x00007f003f2c735d: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2c7361: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2c7368: mov    QWORD PTR [rax],rcx
  0x00007f003f2c736b: mov    rcx,rdx
  0x00007f003f2c736e: shr    rcx,0x3
  0x00007f003f2c7372: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2c7375: xor    rcx,rcx
  0x00007f003f2c7378: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2c737b: xor    rcx,rcx
  0x00007f003f2c737e: mov    QWORD PTR [rax+0x10],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@0 (line 407)

  0x00007f003f2c7382: mov    edx,DWORD PTR [r8+0x10]
  0x00007f003f2c7386: shl    rdx,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@5 (line 407)

  0x00007f003f2c738a: mov    r8d,DWORD PTR [r8+0xc]  ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@10 (line 407)

  0x00007f003f2c738e: mov    rcx,rax
  0x00007f003f2c7391: movabs rsi,0x7f0038a56138  ;   {metadata(method data for {method} {0x00007f00387f0b88} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f003f2c739b: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2c73a3: mov    ecx,0x0
  0x00007f003f2c73a8: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@13 (line 407)

  0x00007f003f2c73ab: mov    QWORD PTR [rsp+0x30],rax
  0x00007f003f2c73b0: nop
  0x00007f003f2c73b1: nop
  0x00007f003f2c73b2: nop
  0x00007f003f2c73b3: nop
  0x00007f003f2c73b4: nop
  0x00007f003f2c73b5: nop
  0x00007f003f2c73b6: nop
  0x00007f003f2c73b7: call   0x00007f003f1c4d60  ; OopMap{[48]=Oop off=220}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ;   {optimized virtual_call}
  0x00007f003f2c73bc: mov    rax,QWORD PTR [rsp+0x30]
  0x00007f003f2c73c1: add    rsp,0x40
  0x00007f003f2c73c5: pop    rbp
  0x00007f003f2c73c6: test   DWORD PTR [rip+0x1b0fad34],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c73cc: ret    
  0x00007f003f2c73cd: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2c73d2: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c73da: call   0x00007f003f27d5e0  ; OopMap{r8=Oop off=255}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ;   {runtime_call}
  0x00007f003f2c73df: jmp    0x00007f003f2c7341
  0x00007f003f2c73e4: mov    rdx,rdx
  0x00007f003f2c73e7: call   0x00007f003f279760  ; OopMap{r8=Oop off=268}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ;   {runtime_call}
  0x00007f003f2c73ec: jmp    0x00007f003f2c7382
  0x00007f003f2c73ee: nop
  0x00007f003f2c73ef: nop
  0x00007f003f2c73f0: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c73f7: movabs r10,0x0
  0x00007f003f2c7401: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c7408: movabs r10,0x0
  0x00007f003f2c7412: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c7419: add    rsp,0x40
  0x00007f003f2c741d: pop    rbp
  0x00007f003f2c741e: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2c7423: hlt    
  0x00007f003f2c7424: hlt    
  0x00007f003f2c7425: hlt    
  0x00007f003f2c7426: hlt    
  0x00007f003f2c7427: hlt    
  0x00007f003f2c7428: hlt    
  0x00007f003f2c7429: hlt    
  0x00007f003f2c742a: hlt    
  0x00007f003f2c742b: hlt    
  0x00007f003f2c742c: hlt    
  0x00007f003f2c742d: hlt    
  0x00007f003f2c742e: hlt    
  0x00007f003f2c742f: hlt    
  0x00007f003f2c7430: hlt    
  0x00007f003f2c7431: hlt    
  0x00007f003f2c7432: hlt    
  0x00007f003f2c7433: hlt    
  0x00007f003f2c7434: hlt    
  0x00007f003f2c7435: hlt    
  0x00007f003f2c7436: hlt    
  0x00007f003f2c7437: hlt    
  0x00007f003f2c7438: hlt    
  0x00007f003f2c7439: hlt    
  0x00007f003f2c743a: hlt    
  0x00007f003f2c743b: hlt    
  0x00007f003f2c743c: hlt    
  0x00007f003f2c743d: hlt    
  0x00007f003f2c743e: hlt    
  0x00007f003f2c743f: hlt    
[Stub Code]
  0x00007f003f2c7440: nop                       ;   {no_reloc}
  0x00007f003f2c7441: nop
  0x00007f003f2c7442: nop
  0x00007f003f2c7443: nop
  0x00007f003f2c7444: nop
  0x00007f003f2c7445: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c744f: jmp    0x00007f003f2c744f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2c7454: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2c7459: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2c745e: sub    rsp,0x80
  0x00007f003f2c7465: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2c746a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2c746f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2c7474: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2c7479: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2c747e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2c7483: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2c7488: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2c748d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2c7492: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2c7497: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2c749c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2c74a1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2c74a6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2c74ab: mov    QWORD PTR [rsp],r15
  0x00007f003f2c74af: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2c74b9: movabs rsi,0x7f003f2c7459  ;   {internal_word}
  0x00007f003f2c74c3: mov    rdx,rsp
  0x00007f003f2c74c6: and    rsp,0xfffffffffffffff0
  0x00007f003f2c74ca: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2c74cf: hlt    
[Deopt Handler Code]
  0x00007f003f2c74d0: movabs r10,0x7f003f2c74d0  ;   {section_word}
  0x00007f003f2c74da: push   r10
  0x00007f003f2c74dc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2c74e1: hlt    
  0x00007f003f2c74e2: hlt    
  0x00007f003f2c74e3: hlt    
  0x00007f003f2c74e4: hlt    
  0x00007f003f2c74e5: hlt    
  0x00007f003f2c74e6: hlt    
  0x00007f003f2c74e7: hlt    
<nmethod compile_id='116' compiler='C1' level='3' entry='0x00007f003f2c72e0' size='1136' address='0x00007f003f2c7150' relocation_offset='312' insts_offset='400' stub_offset='752' scopes_data_offset='928' scopes_pcs_offset='984' dependencies_offset='1128' metadata_offset='920' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='436' iicount='436' stamp='0.518'/>
<writer thread='139637818533632'/>
<task_queued compile_id='117' method='java/lang/ref/ReferenceQueue poll ()Ljava/lang/ref/Reference;' bytes='28' count='256' iicount='256' level='3' stamp='0.518' comment='tiered' hot_count='256'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/ref/ReferenceQueue.poll  [0x00007f003f2c79a0, 0x00007f003f2c7d28]  904 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00388654f0} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.meta.MetaAccessProvider from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
/ReferenceQueue&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2c79a0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2c79a4: shl    r10,0x3
  0x00007f003f2c79a8: cmp    r10,rax
  0x00007f003f2c79ab: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2c79b1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2c79bc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2c79c0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2c79c7: push   rbp
  0x00007f003f2c79c8: sub    rsp,0x40
  0x00007f003f2c79cc: movabs rax,0x7f0038a88be0  ;   {metadata(method data for {method} {0x00007f00388654f0} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x00007f003f2c79d6: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f2c79dc: add    edi,0x8
  0x00007f003f2c79df: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f2c79e5: movabs rax,0x7f00388654f0  ;   {metadata({method} {0x00007f00388654f0} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x00007f003f2c79ef: and    edi,0x1ff8
  0x00007f003f2c79f5: cmp    edi,0x0
  0x00007f003f2c79f8: je     0x00007f003f2c7bdc  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@0 (line 105)

  0x00007f003f2c79fe: mov    eax,DWORD PTR [rsi+0x18]
  0x00007f003f2c7a01: shl    rax,0x3            ;*getfield head {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@1 (line 105)

  0x00007f003f2c7a05: cmp    rax,0x0
  0x00007f003f2c7a09: movabs rax,0x7f0038a88be0  ;   {metadata(method data for {method} {0x00007f00388654f0} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x00007f003f2c7a13: movabs rdi,0x130
  0x00007f003f2c7a1d: jne    0x00007f003f2c7a2d
  0x00007f003f2c7a23: movabs rdi,0x140
  0x00007f003f2c7a2d: mov    rbx,QWORD PTR [rax+rdi*1]
  0x00007f003f2c7a31: lea    rbx,[rbx+0x1]
  0x00007f003f2c7a35: mov    QWORD PTR [rax+rdi*1],rbx
  0x00007f003f2c7a39: je     0x00007f003f2c7b6f  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@4 (line 105)

  0x00007f003f2c7a3f: mov    edi,DWORD PTR [rsi+0xc]
  0x00007f003f2c7a42: shl    rdi,0x3            ;*getfield lock {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@10 (line 107)

  0x00007f003f2c7a46: lea    rbx,[rsp+0x28]
  0x00007f003f2c7a4b: mov    QWORD PTR [rbx+0x8],rdi
  0x00007f003f2c7a4f: mov    rax,QWORD PTR [rdi]  ; implicit exception: dispatches to 0x00007f003f2c7bf3
  0x00007f003f2c7a52: mov    rdx,rax
  0x00007f003f2c7a55: and    rdx,0x7
  0x00007f003f2c7a59: cmp    rdx,0x5
  0x00007f003f2c7a5d: jne    0x00007f003f2c7ae4
  0x00007f003f2c7a63: mov    edx,DWORD PTR [rdi+0x8]
  0x00007f003f2c7a66: shl    rdx,0x3
  0x00007f003f2c7a6a: mov    rdx,QWORD PTR [rdx+0xa8]
  0x00007f003f2c7a71: or     rdx,r15
  0x00007f003f2c7a74: xor    rdx,rax
  0x00007f003f2c7a77: and    rdx,0xffffffffffffff87
  0x00007f003f2c7a7b: je     0x00007f003f2c7b0c
  0x00007f003f2c7a81: test   rdx,0x7
  0x00007f003f2c7a88: jne    0x00007f003f2c7ad1
  0x00007f003f2c7a8a: test   rdx,0x300
  0x00007f003f2c7a91: jne    0x00007f003f2c7ab0
  0x00007f003f2c7a93: and    rax,0x37f
  0x00007f003f2c7a9a: mov    rdx,rax
  0x00007f003f2c7a9d: or     rdx,r15
  0x00007f003f2c7aa0: lock cmpxchg QWORD PTR [rdi],rdx
  0x00007f003f2c7aa5: jne    0x00007f003f2c7bf8
  0x00007f003f2c7aab: jmp    0x00007f003f2c7b0c
  0x00007f003f2c7ab0: mov    edx,DWORD PTR [rdi+0x8]
  0x00007f003f2c7ab3: shl    rdx,0x3
  0x00007f003f2c7ab7: mov    rdx,QWORD PTR [rdx+0xa8]
  0x00007f003f2c7abe: or     rdx,r15
  0x00007f003f2c7ac1: lock cmpxchg QWORD PTR [rdi],rdx
  0x00007f003f2c7ac6: jne    0x00007f003f2c7bf8
  0x00007f003f2c7acc: jmp    0x00007f003f2c7b0c
  0x00007f003f2c7ad1: mov    edx,DWORD PTR [rdi+0x8]
  0x00007f003f2c7ad4: shl    rdx,0x3
  0x00007f003f2c7ad8: mov    rdx,QWORD PTR [rdx+0xa8]
  0x00007f003f2c7adf: lock cmpxchg QWORD PTR [rdi],rdx
  0x00007f003f2c7ae4: mov    rax,QWORD PTR [rdi]
  0x00007f003f2c7ae7: or     rax,0x1
  0x00007f003f2c7aeb: mov    QWORD PTR [rbx],rax
  0x00007f003f2c7aee: lock cmpxchg QWORD PTR [rdi],rbx
  0x00007f003f2c7af3: je     0x00007f003f2c7b0c
  0x00007f003f2c7af9: sub    rax,rsp
  0x00007f003f2c7afc: and    rax,0xfffffffffffff007
  0x00007f003f2c7b03: mov    QWORD PTR [rbx],rax
  0x00007f003f2c7b06: jne    0x00007f003f2c7bf8  ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@15 (line 107)

  0x00007f003f2c7b0c: mov    QWORD PTR [rsp+0x20],rdi
  0x00007f003f2c7b11: mov    rbx,rsi
  0x00007f003f2c7b14: movabs rax,0x7f0038a88be0  ;   {metadata(method data for {method} {0x00007f00388654f0} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x00007f003f2c7b1e: add    QWORD PTR [rax+0x150],0x1
  0x00007f003f2c7b26: nop
  0x00007f003f2c7b27: call   0x00007f003f1c4d60  ; OopMap{[32]=Oop [48]=Oop off=396}
                                                ;*invokespecial reallyPoll {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@17 (line 108)
                                                ;   {optimized virtual_call}
  0x00007f003f2c7b2c: mov    rsi,rax            ;*invokespecial reallyPoll {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@17 (line 108)

  0x00007f003f2c7b2f: lea    rax,[rsp+0x28]
  0x00007f003f2c7b34: mov    rbx,QWORD PTR [rax+0x8]
  0x00007f003f2c7b38: mov    rdi,QWORD PTR [rbx]
  0x00007f003f2c7b3b: and    rdi,0x7
  0x00007f003f2c7b3f: cmp    rdi,0x5
  0x00007f003f2c7b43: je     0x00007f003f2c7b60
  0x00007f003f2c7b49: mov    rdi,QWORD PTR [rax]
  0x00007f003f2c7b4c: test   rdi,rdi
  0x00007f003f2c7b4f: je     0x00007f003f2c7b60
  0x00007f003f2c7b55: lock cmpxchg QWORD PTR [rbx],rdi
  0x00007f003f2c7b5a: jne    0x00007f003f2c7c0b  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@21 (line 108)

  0x00007f003f2c7b60: mov    rax,rsi
  0x00007f003f2c7b63: add    rsp,0x40
  0x00007f003f2c7b67: pop    rbp
  0x00007f003f2c7b68: test   DWORD PTR [rip+0x1b0fa592],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c7b6e: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@22 (line 108)

  0x00007f003f2c7b6f: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f2c7b79: add    rsp,0x40
  0x00007f003f2c7b7d: pop    rbp
  0x00007f003f2c7b7e: test   DWORD PTR [rip+0x1b0fa57c],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c7b84: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@8 (line 106)

  0x00007f003f2c7b85: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c7b8c: xor    r10,r10
  0x00007f003f2c7b8f: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c7b96: xor    r10,r10
  0x00007f003f2c7b99: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c7ba0: mov    rsi,rax
  0x00007f003f2c7ba3: lea    rax,[rsp+0x28]
  0x00007f003f2c7ba8: mov    rbx,QWORD PTR [rax+0x8]
  0x00007f003f2c7bac: mov    rdi,QWORD PTR [rbx]
  0x00007f003f2c7baf: and    rdi,0x7
  0x00007f003f2c7bb3: cmp    rdi,0x5
  0x00007f003f2c7bb7: je     0x00007f003f2c7bd4
  0x00007f003f2c7bbd: mov    rdi,QWORD PTR [rax]
  0x00007f003f2c7bc0: test   rdi,rdi
  0x00007f003f2c7bc3: je     0x00007f003f2c7bd4
  0x00007f003f2c7bc9: lock cmpxchg QWORD PTR [rbx],rdi
  0x00007f003f2c7bce: jne    0x00007f003f2c7c1e  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@25 (line 109)

  0x00007f003f2c7bd4: mov    rax,rsi
  0x00007f003f2c7bd7: jmp    0x00007f003f2c7c59
  0x00007f003f2c7bdc: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2c7be1: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c7be9: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=590}
                                                ;*synchronization entry
                                                ; - java.lang.ref.ReferenceQueue::poll@-1 (line 105)
                                                ;   {runtime_call}
  0x00007f003f2c7bee: jmp    0x00007f003f2c79fe
  0x00007f003f2c7bf3: call   0x00007f003f279000  ; OopMap{rsi=Oop rdi=Oop off=600}
                                                ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@15 (line 107)
                                                ;   {runtime_call}
  0x00007f003f2c7bf8: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2c7bfd: mov    QWORD PTR [rsp],rbx
  0x00007f003f2c7c01: call   0x00007f003f27ba60  ; OopMap{rsi=Oop rdi=Oop [48]=Oop off=614}
                                                ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@15 (line 107)
                                                ;   {runtime_call}
  0x00007f003f2c7c06: jmp    0x00007f003f2c7b0c
  0x00007f003f2c7c0b: lea    rax,[rsp+0x28]
  0x00007f003f2c7c10: mov    QWORD PTR [rsp],rax
  0x00007f003f2c7c14: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2c7c19: jmp    0x00007f003f2c7b60
  0x00007f003f2c7c1e: lea    rax,[rsp+0x28]
  0x00007f003f2c7c23: mov    QWORD PTR [rsp],rax
  0x00007f003f2c7c27: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2c7c2c: jmp    0x00007f003f2c7bd4
  0x00007f003f2c7c2e: nop
  0x00007f003f2c7c2f: nop
  0x00007f003f2c7c30: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c7c37: movabs r10,0x0
  0x00007f003f2c7c41: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c7c48: movabs r10,0x0
  0x00007f003f2c7c52: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c7c59: add    rsp,0x40
  0x00007f003f2c7c5d: pop    rbp
  0x00007f003f2c7c5e: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2c7c63: hlt    
  0x00007f003f2c7c64: hlt    
  0x00007f003f2c7c65: hlt    
  0x00007f003f2c7c66: hlt    
  0x00007f003f2c7c67: hlt    
  0x00007f003f2c7c68: hlt    
  0x00007f003f2c7c69: hlt    
  0x00007f003f2c7c6a: hlt    
  0x00007f003f2c7c6b: hlt    
  0x00007f003f2c7c6c: hlt    
  0x00007f003f2c7c6d: hlt    
  0x00007f003f2c7c6e: hlt    
  0x00007f003f2c7c6f: hlt    
  0x00007f003f2c7c70: hlt    
  0x00007f003f2c7c71: hlt    
  0x00007f003f2c7c72: hlt    
  0x00007f003f2c7c73: hlt    
  0x00007f003f2c7c74: hlt    
  0x00007f003f2c7c75: hlt    
  0x00007f003f2c7c76: hlt    
  0x00007f003f2c7c77: hlt    
  0x00007f003f2c7c78: hlt    
  0x00007f003f2c7c79: hlt    
  0x00007f003f2c7c7a: hlt    
  0x00007f003f2c7c7b: hlt    
  0x00007f003f2c7c7c: hlt    
  0x00007f003f2c7c7d: hlt    
  0x00007f003f2c7c7e: hlt    
  0x00007f003f2c7c7f: hlt    
[Stub Code]
  0x00007f003f2c7c80: nop                       ;   {no_reloc}
  0x00007f003f2c7c81: nop
  0x00007f003f2c7c82: nop
  0x00007f003f2c7c83: nop
  0x00007f003f2c7c84: nop
  0x00007f003f2c7c85: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c7c8f: jmp    0x00007f003f2c7c8f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2c7c94: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2c7c99: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2c7c9e: sub    rsp,0x80
  0x00007f003f2c7ca5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2c7caa: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2c7caf: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2c7cb4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2c7cb9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2c7cbe: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2c7cc3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2c7cc8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2c7ccd: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2c7cd2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2c7cd7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2c7cdc: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2c7ce1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2c7ce6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2c7ceb: mov    QWORD PTR [rsp],r15
  0x00007f003f2c7cef: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2c7cf9: movabs rsi,0x7f003f2c7c99  ;   {internal_word}
  0x00007f003f2c7d03: mov    rdx,rsp
  0x00007f003f2c7d06: and    rsp,0xfffffffffffffff0
  0x00007f003f2c7d0a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2c7d0f: hlt    
[Deopt Handler Code]
  0x00007f003f2c7d10: movabs r10,0x7f003f2c7d10  ;   {section_word}
  0x00007f003f2c7d1a: push   r10
  0x00007f003f2c7d1c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2c7d21: hlt    
  0x00007f003f2c7d22: hlt    
  0x00007f003f2c7d23: hlt    
  0x00007f003f2c7d24: hlt    
  0x00007f003f2c7d25: hlt    
  0x00007f003f2c7d26: hlt    
  0x00007f003f2c7d27: hlt    
<nmethod compile_id='117' compiler='C1' level='3' entry='0x00007f003f2c79a0' size='1744' address='0x00007f003f2c7810' relocation_offset='312' insts_offset='400' stub_offset='1136' scopes_data_offset='1312' scopes_pcs_offset='1440' dependencies_offset='1696' handler_table_offset='1704' nul_chk_table_offset='1728' metadata_offset='1304' method='java/lang/ref/ReferenceQueue poll ()Ljava/lang/ref/Reference;' bytes='28' count='258' iicount='258' stamp='0.537'/>
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.HotSpotMetaAccessProvider from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.code.RegisterConfig from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.hotspot.amd64.AMD64HotSpotRegisterConfig from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded java.util.AbstractList$Itr from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableCollection$1 from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
[Loaded jdk.vm.ci.code.RegisterAttributes from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<task_queued compile_id='118' method='jdk/vm/ci/code/Register equals (Ljava/lang/Object;)Z' bytes='108' count='256' iicount='256' level='3' stamp='0.538' comment='tiered' hot_count='256'/>
<task_queued compile_id='119' method='java/util/Arrays$ArrayList indexOf (Ljava/lang/Object;)I' bytes='62' count='128' backedge_count='1946' iicount='128' level='3' stamp='0.539' comment='tiered' hot_count='128'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
jdk/vm/ci/code/Register.equals  [0x00007f003f2c82e0, 0x00007f003f2c8990]  1712 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038badf30} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;jdk/vm/ci/code/Register&apos;
  # this:     rsi:rsi   = &apos;jdk/vm/ci/code/Register&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2c82e0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2c82e4: shl    r10,0x3
  0x00007f003f2c82e8: cmp    r10,rax
  0x00007f003f2c82eb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2c82f1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2c82fc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2c8300: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2c8307: push   rbp
  0x00007f003f2c8308: sub    rsp,0x30
  0x00007f003f2c830c: movabs rax,0x7f0038be6450  ;   {metadata(method data for {method} {0x00007f0038badf30} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;jdk/vm/ci/code/Register&apos;)}
  0x00007f003f2c8316: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f2c831c: add    edi,0x8
  0x00007f003f2c831f: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f2c8325: movabs rax,0x7f0038badf30  ;   {metadata({method} {0x00007f0038badf30} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;jdk/vm/ci/code/Register&apos;)}
  0x00007f003f2c832f: and    edi,0x1ff8
  0x00007f003f2c8335: cmp    edi,0x0
  0x00007f003f2c8338: je     0x00007f003f2c888f  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.vm.ci.code.Register::equals@0 (line 183)

  0x00007f003f2c833e: cmp    rdx,0x0
  0x00007f003f2c8342: jne    0x00007f003f2c835d
  0x00007f003f2c8344: movabs rbx,0x7f0038be6450  ;   {metadata(method data for {method} {0x00007f0038badf30} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;jdk/vm/ci/code/Register&apos;)}
  0x00007f003f2c834e: or     DWORD PTR [rbx+0x128],0x100
  0x00007f003f2c8358: jmp    0x00007f003f2c8579
  0x00007f003f2c835d: movabs rcx,0x7c0069bb0    ;   {metadata(&apos;jdk/vm/ci/code/Register&apos;)}
  0x00007f003f2c8367: mov    edi,DWORD PTR [rdx+0x8]
  0x00007f003f2c836a: shl    rdi,0x3
  0x00007f003f2c836e: cmp    rcx,rdi
  0x00007f003f2c8371: jne    0x00007f003f2c855d
  0x00007f003f2c8377: movabs rbx,0x7f0038be6450  ;   {metadata(method data for {method} {0x00007f0038badf30} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;jdk/vm/ci/code/Register&apos;)}
  0x00007f003f2c8381: mov    ecx,DWORD PTR [rdx+0x8]
  0x00007f003f2c8384: shl    rcx,0x3
  0x00007f003f2c8388: cmp    rcx,QWORD PTR [rbx+0x140]
  0x00007f003f2c838f: jne    0x00007f003f2c839e
  0x00007f003f2c8391: add    QWORD PTR [rbx+0x148],0x1
  0x00007f003f2c8399: jmp    0x00007f003f2c857e
  0x00007f003f2c839e: cmp    rcx,QWORD PTR [rbx+0x150]
  0x00007f003f2c83a5: jne    0x00007f003f2c83b4
  0x00007f003f2c83a7: add    QWORD PTR [rbx+0x158],0x1
  0x00007f003f2c83af: jmp    0x00007f003f2c857e
  0x00007f003f2c83b4: cmp    rcx,QWORD PTR [rbx+0x160]
  0x00007f003f2c83bb: jne    0x00007f003f2c83ca
  0x00007f003f2c83bd: add    QWORD PTR [rbx+0x168],0x1
  0x00007f003f2c83c5: jmp    0x00007f003f2c857e
  0x00007f003f2c83ca: cmp    rcx,QWORD PTR [rbx+0x170]
  0x00007f003f2c83d1: jne    0x00007f003f2c83e0
  0x00007f003f2c83d3: add    QWORD PTR [rbx+0x178],0x1
  0x00007f003f2c83db: jmp    0x00007f003f2c857e
  0x00007f003f2c83e0: cmp    rcx,QWORD PTR [rbx+0x180]
  0x00007f003f2c83e7: jne    0x00007f003f2c83f6
  0x00007f003f2c83e9: add    QWORD PTR [rbx+0x188],0x1
  0x00007f003f2c83f1: jmp    0x00007f003f2c857e
  0x00007f003f2c83f6: cmp    rcx,QWORD PTR [rbx+0x190]
  0x00007f003f2c83fd: jne    0x00007f003f2c840c
  0x00007f003f2c83ff: add    QWORD PTR [rbx+0x198],0x1
  0x00007f003f2c8407: jmp    0x00007f003f2c857e
  0x00007f003f2c840c: cmp    rcx,QWORD PTR [rbx+0x1a0]
  0x00007f003f2c8413: jne    0x00007f003f2c8422
  0x00007f003f2c8415: add    QWORD PTR [rbx+0x1a8],0x1
  0x00007f003f2c841d: jmp    0x00007f003f2c857e
  0x00007f003f2c8422: cmp    rcx,QWORD PTR [rbx+0x1b0]
  0x00007f003f2c8429: jne    0x00007f003f2c8438
  0x00007f003f2c842b: add    QWORD PTR [rbx+0x1b8],0x1
  0x00007f003f2c8433: jmp    0x00007f003f2c857e
  0x00007f003f2c8438: cmp    QWORD PTR [rbx+0x140],0x0
  0x00007f003f2c8443: jne    0x00007f003f2c845c
  0x00007f003f2c8445: mov    QWORD PTR [rbx+0x140],rcx
  0x00007f003f2c844c: mov    QWORD PTR [rbx+0x148],0x1
  0x00007f003f2c8457: jmp    0x00007f003f2c857e
  0x00007f003f2c845c: cmp    QWORD PTR [rbx+0x150],0x0
  0x00007f003f2c8467: jne    0x00007f003f2c8480
  0x00007f003f2c8469: mov    QWORD PTR [rbx+0x150],rcx
  0x00007f003f2c8470: mov    QWORD PTR [rbx+0x158],0x1
  0x00007f003f2c847b: jmp    0x00007f003f2c857e
  0x00007f003f2c8480: cmp    QWORD PTR [rbx+0x160],0x0
  0x00007f003f2c848b: jne    0x00007f003f2c84a4
  0x00007f003f2c848d: mov    QWORD PTR [rbx+0x160],rcx
  0x00007f003f2c8494: mov    QWORD PTR [rbx+0x168],0x1
  0x00007f003f2c849f: jmp    0x00007f003f2c857e
  0x00007f003f2c84a4: cmp    QWORD PTR [rbx+0x170],0x0
  0x00007f003f2c84af: jne    0x00007f003f2c84c8
  0x00007f003f2c84b1: mov    QWORD PTR [rbx+0x170],rcx
  0x00007f003f2c84b8: mov    QWORD PTR [rbx+0x178],0x1
  0x00007f003f2c84c3: jmp    0x00007f003f2c857e
  0x00007f003f2c84c8: cmp    QWORD PTR [rbx+0x180],0x0
  0x00007f003f2c84d3: jne    0x00007f003f2c84ec
  0x00007f003f2c84d5: mov    QWORD PTR [rbx+0x180],rcx
  0x00007f003f2c84dc: mov    QWORD PTR [rbx+0x188],0x1
  0x00007f003f2c84e7: jmp    0x00007f003f2c857e
  0x00007f003f2c84ec: cmp    QWORD PTR [rbx+0x190],0x0
  0x00007f003f2c84f7: jne    0x00007f003f2c8510
  0x00007f003f2c84f9: mov    QWORD PTR [rbx+0x190],rcx
  0x00007f003f2c8500: mov    QWORD PTR [rbx+0x198],0x1
  0x00007f003f2c850b: jmp    0x00007f003f2c857e
  0x00007f003f2c8510: cmp    QWORD PTR [rbx+0x1a0],0x0
  0x00007f003f2c851b: jne    0x00007f003f2c8534
  0x00007f003f2c851d: mov    QWORD PTR [rbx+0x1a0],rcx
  0x00007f003f2c8524: mov    QWORD PTR [rbx+0x1a8],0x1
  0x00007f003f2c852f: jmp    0x00007f003f2c857e
  0x00007f003f2c8534: cmp    QWORD PTR [rbx+0x1b0],0x0
  0x00007f003f2c853f: jne    0x00007f003f2c8558
  0x00007f003f2c8541: mov    QWORD PTR [rbx+0x1b0],rcx
  0x00007f003f2c8548: mov    QWORD PTR [rbx+0x1b8],0x1
  0x00007f003f2c8553: jmp    0x00007f003f2c857e
  0x00007f003f2c8558: jmp    0x00007f003f2c857e
  0x00007f003f2c855d: movabs rbx,0x7f0038be6450  ;   {metadata(method data for {method} {0x00007f0038badf30} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;jdk/vm/ci/code/Register&apos;)}
  0x00007f003f2c8567: sub    QWORD PTR [rbx+0x130],0x1
  0x00007f003f2c856f: jmp    0x00007f003f2c8579
  0x00007f003f2c8574: jmp    0x00007f003f2c857e
  0x00007f003f2c8579: xor    rax,rax
  0x00007f003f2c857c: jmp    0x00007f003f2c8588
  0x00007f003f2c857e: movabs rax,0x1            ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.vm.ci.code.Register::equals@1 (line 183)

  0x00007f003f2c8588: cmp    eax,0x0
  0x00007f003f2c858b: movabs rax,0x7f0038be6450  ;   {metadata(method data for {method} {0x00007f0038badf30} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;jdk/vm/ci/code/Register&apos;)}
  0x00007f003f2c8595: movabs rdi,0x1c8
  0x00007f003f2c859f: je     0x00007f003f2c85af
  0x00007f003f2c85a5: movabs rdi,0x1d8
  0x00007f003f2c85af: mov    rbx,QWORD PTR [rax+rdi*1]
  0x00007f003f2c85b3: lea    rbx,[rbx+0x1]
  0x00007f003f2c85b7: mov    QWORD PTR [rax+rdi*1],rbx
  0x00007f003f2c85bb: je     0x00007f003f2c887e  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.vm.ci.code.Register::equals@4 (line 183)

  0x00007f003f2c85c1: cmp    rdx,0x0
  0x00007f003f2c85c5: jne    0x00007f003f2c85e0
  0x00007f003f2c85c7: movabs rbx,0x7f0038be6450  ;   {metadata(method data for {method} {0x00007f0038badf30} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;jdk/vm/ci/code/Register&apos;)}
  0x00007f003f2c85d1: or     DWORD PTR [rbx+0x1e0],0x100
  0x00007f003f2c85db: jmp    0x00007f003f2c87fc
  0x00007f003f2c85e0: movabs rax,0x7c0069bb0    ;   {metadata(&apos;jdk/vm/ci/code/Register&apos;)}
  0x00007f003f2c85ea: mov    edi,DWORD PTR [rdx+0x8]
  0x00007f003f2c85ed: shl    rdi,0x3
  0x00007f003f2c85f1: cmp    rax,rdi
  0x00007f003f2c85f4: jne    0x00007f003f2c87e0
  0x00007f003f2c85fa: movabs rbx,0x7f0038be6450  ;   {metadata(method data for {method} {0x00007f0038badf30} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;jdk/vm/ci/code/Register&apos;)}
  0x00007f003f2c8604: mov    eax,DWORD PTR [rdx+0x8]
  0x00007f003f2c8607: shl    rax,0x3
  0x00007f003f2c860b: cmp    rax,QWORD PTR [rbx+0x1f8]
  0x00007f003f2c8612: jne    0x00007f003f2c8621
  0x00007f003f2c8614: add    QWORD PTR [rbx+0x200],0x1
  0x00007f003f2c861c: jmp    0x00007f003f2c87fc
  0x00007f003f2c8621: cmp    rax,QWORD PTR [rbx+0x208]
  0x00007f003f2c8628: jne    0x00007f003f2c8637
  0x00007f003f2c862a: add    QWORD PTR [rbx+0x210],0x1
  0x00007f003f2c8632: jmp    0x00007f003f2c87fc
  0x00007f003f2c8637: cmp    rax,QWORD PTR [rbx+0x218]
  0x00007f003f2c863e: jne    0x00007f003f2c864d
  0x00007f003f2c8640: add    QWORD PTR [rbx+0x220],0x1
  0x00007f003f2c8648: jmp    0x00007f003f2c87fc
  0x00007f003f2c864d: cmp    rax,QWORD PTR [rbx+0x228]
  0x00007f003f2c8654: jne    0x00007f003f2c8663
  0x00007f003f2c8656: add    QWORD PTR [rbx+0x230],0x1
  0x00007f003f2c865e: jmp    0x00007f003f2c87fc
  0x00007f003f2c8663: cmp    rax,QWORD PTR [rbx+0x238]
  0x00007f003f2c866a: jne    0x00007f003f2c8679
  0x00007f003f2c866c: add    QWORD PTR [rbx+0x240],0x1
  0x00007f003f2c8674: jmp    0x00007f003f2c87fc
  0x00007f003f2c8679: cmp    rax,QWORD PTR [rbx+0x248]
  0x00007f003f2c8680: jne    0x00007f003f2c868f
  0x00007f003f2c8682: add    QWORD PTR [rbx+0x250],0x1
  0x00007f003f2c868a: jmp    0x00007f003f2c87fc
  0x00007f003f2c868f: cmp    rax,QWORD PTR [rbx+0x258]
  0x00007f003f2c8696: jne    0x00007f003f2c86a5
  0x00007f003f2c8698: add    QWORD PTR [rbx+0x260],0x1
  0x00007f003f2c86a0: jmp    0x00007f003f2c87fc
  0x00007f003f2c86a5: cmp    rax,QWORD PTR [rbx+0x268]
  0x00007f003f2c86ac: jne    0x00007f003f2c86bb
  0x00007f003f2c86ae: add    QWORD PTR [rbx+0x270],0x1
  0x00007f003f2c86b6: jmp    0x00007f003f2c87fc
  0x00007f003f2c86bb: cmp    QWORD PTR [rbx+0x1f8],0x0
  0x00007f003f2c86c6: jne    0x00007f003f2c86df
  0x00007f003f2c86c8: mov    QWORD PTR [rbx+0x1f8],rax
  0x00007f003f2c86cf: mov    QWORD PTR [rbx+0x200],0x1
  0x00007f003f2c86da: jmp    0x00007f003f2c87fc
  0x00007f003f2c86df: cmp    QWORD PTR [rbx+0x208],0x0
  0x00007f003f2c86ea: jne    0x00007f003f2c8703
  0x00007f003f2c86ec: mov    QWORD PTR [rbx+0x208],rax
  0x00007f003f2c86f3: mov    QWORD PTR [rbx+0x210],0x1
  0x00007f003f2c86fe: jmp    0x00007f003f2c87fc
  0x00007f003f2c8703: cmp    QWORD PTR [rbx+0x218],0x0
  0x00007f003f2c870e: jne    0x00007f003f2c8727
  0x00007f003f2c8710: mov    QWORD PTR [rbx+0x218],rax
  0x00007f003f2c8717: mov    QWORD PTR [rbx+0x220],0x1
  0x00007f003f2c8722: jmp    0x00007f003f2c87fc
  0x00007f003f2c8727: cmp    QWORD PTR [rbx+0x228],0x0
  0x00007f003f2c8732: jne    0x00007f003f2c874b
  0x00007f003f2c8734: mov    QWORD PTR [rbx+0x228],rax
  0x00007f003f2c873b: mov    QWORD PTR [rbx+0x230],0x1
  0x00007f003f2c8746: jmp    0x00007f003f2c87fc
  0x00007f003f2c874b: cmp    QWORD PTR [rbx+0x238],0x0
  0x00007f003f2c8756: jne    0x00007f003f2c876f
  0x00007f003f2c8758: mov    QWORD PTR [rbx+0x238],rax
  0x00007f003f2c875f: mov    QWORD PTR [rbx+0x240],0x1
  0x00007f003f2c876a: jmp    0x00007f003f2c87fc
  0x00007f003f2c876f: cmp    QWORD PTR [rbx+0x248],0x0
  0x00007f003f2c877a: jne    0x00007f003f2c8793
  0x00007f003f2c877c: mov    QWORD PTR [rbx+0x248],rax
  0x00007f003f2c8783: mov    QWORD PTR [rbx+0x250],0x1
  0x00007f003f2c878e: jmp    0x00007f003f2c87fc
  0x00007f003f2c8793: cmp    QWORD PTR [rbx+0x258],0x0
  0x00007f003f2c879e: jne    0x00007f003f2c87b7
  0x00007f003f2c87a0: mov    QWORD PTR [rbx+0x258],rax
  0x00007f003f2c87a7: mov    QWORD PTR [rbx+0x260],0x1
  0x00007f003f2c87b2: jmp    0x00007f003f2c87fc
  0x00007f003f2c87b7: cmp    QWORD PTR [rbx+0x268],0x0
  0x00007f003f2c87c2: jne    0x00007f003f2c87db
  0x00007f003f2c87c4: mov    QWORD PTR [rbx+0x268],rax
  0x00007f003f2c87cb: mov    QWORD PTR [rbx+0x270],0x1
  0x00007f003f2c87d6: jmp    0x00007f003f2c87fc
  0x00007f003f2c87db: jmp    0x00007f003f2c87fc
  0x00007f003f2c87e0: movabs rbx,0x7f0038be6450  ;   {metadata(method data for {method} {0x00007f0038badf30} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;jdk/vm/ci/code/Register&apos;)}
  0x00007f003f2c87ea: sub    QWORD PTR [rbx+0x1e8],0x1
  0x00007f003f2c87f2: jmp    0x00007f003f2c88a6
  0x00007f003f2c87f7: jmp    0x00007f003f2c87fc
  0x00007f003f2c87fc: mov    rax,rdx            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.vm.ci.code.Register::equals@8 (line 184)

  0x00007f003f2c87ff: mov    esi,DWORD PTR [rsi+0xc]  ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.vm.ci.code.Register::equals@13 (line 185)

  0x00007f003f2c8802: mov    eax,DWORD PTR [rax+0xc]  ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.vm.ci.code.Register::equals@17 (line 185)
                                                ; implicit exception: dispatches to 0x00007f003f2c88af
  0x00007f003f2c8805: cmp    esi,eax
  0x00007f003f2c8807: movabs rax,0x7f0038be6450  ;   {metadata(method data for {method} {0x00007f0038badf30} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;jdk/vm/ci/code/Register&apos;)}
  0x00007f003f2c8811: movabs rsi,0x280
  0x00007f003f2c881b: jne    0x00007f003f2c882b
  0x00007f003f2c8821: movabs rsi,0x290
  0x00007f003f2c882b: mov    rdi,QWORD PTR [rax+rsi*1]
  0x00007f003f2c882f: lea    rdi,[rdi+0x1]
  0x00007f003f2c8833: mov    QWORD PTR [rax+rsi*1],rdi
  0x00007f003f2c8837: jne    0x00007f003f2c887e  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.vm.ci.code.Register::equals@20 (line 185)

  0x00007f003f2c883d: movabs rax,0x7f0038be6450  ;   {metadata(method data for {method} {0x00007f0038badf30} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;jdk/vm/ci/code/Register&apos;)}
  0x00007f003f2c8847: inc    DWORD PTR [rax+0x2a0]  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.vm.ci.code.Register::equals@26 (line 186)

  0x00007f003f2c884d: movabs rax,0x7f0038be6450  ;   {metadata(method data for {method} {0x00007f0038badf30} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;jdk/vm/ci/code/Register&apos;)}
  0x00007f003f2c8857: inc    DWORD PTR [rax+0x388]  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.vm.ci.code.Register::equals@54 (line 187)

  0x00007f003f2c885d: movabs rax,0x7f0038be6450  ;   {metadata(method data for {method} {0x00007f0038badf30} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;jdk/vm/ci/code/Register&apos;)}
  0x00007f003f2c8867: inc    DWORD PTR [rax+0x3d8]  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.vm.ci.code.Register::equals@79 (line 188)

  0x00007f003f2c886d: mov    eax,0x1
  0x00007f003f2c8872: add    rsp,0x30
  0x00007f003f2c8876: pop    rbp
  0x00007f003f2c8877: test   DWORD PTR [rip+0x1b0f9883],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c887d: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.vm.ci.code.Register::equals@105 (line 189)

  0x00007f003f2c887e: mov    eax,0x0
  0x00007f003f2c8883: add    rsp,0x30
  0x00007f003f2c8887: pop    rbp
  0x00007f003f2c8888: test   DWORD PTR [rip+0x1b0f9872],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c888e: ret    
  0x00007f003f2c888f: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2c8894: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c889c: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop off=1473}
                                                ;*synchronization entry
                                                ; - jdk.vm.ci.code.Register::equals@-1 (line 183)
                                                ;   {runtime_call}
  0x00007f003f2c88a1: jmp    0x00007f003f2c833e
  0x00007f003f2c88a6: mov    QWORD PTR [rsp],rdx
  0x00007f003f2c88aa: call   0x00007f003f27b2c0  ; OopMap{rsi=Oop off=1487}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.vm.ci.code.Register::equals@8 (line 184)
                                                ;   {runtime_call}
  0x00007f003f2c88af: call   0x00007f003f279000  ; OopMap{off=1492}
                                                ;*getfield number {reexecute=1 rethrow=0 return_oop=0}
                                                ; - jdk.vm.ci.code.Register::equals@17 (line 185)
                                                ;   {runtime_call}
  0x00007f003f2c88b4: nop
  0x00007f003f2c88b5: nop
  0x00007f003f2c88b6: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c88bd: movabs r10,0x0
  0x00007f003f2c88c7: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c88ce: movabs r10,0x0
  0x00007f003f2c88d8: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c88df: add    rsp,0x30
  0x00007f003f2c88e3: pop    rbp
  0x00007f003f2c88e4: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2c88e9: hlt    
  0x00007f003f2c88ea: hlt    
  0x00007f003f2c88eb: hlt    
  0x00007f003f2c88ec: hlt    
  0x00007f003f2c88ed: hlt    
  0x00007f003f2c88ee: hlt    
  0x00007f003f2c88ef: hlt    
  0x00007f003f2c88f0: hlt    
  0x00007f003f2c88f1: hlt    
  0x00007f003f2c88f2: hlt    
  0x00007f003f2c88f3: hlt    
  0x00007f003f2c88f4: hlt    
  0x00007f003f2c88f5: hlt    
  0x00007f003f2c88f6: hlt    
  0x00007f003f2c88f7: hlt    
  0x00007f003f2c88f8: hlt    
  0x00007f003f2c88f9: hlt    
  0x00007f003f2c88fa: hlt    
  0x00007f003f2c88fb: hlt    
  0x00007f003f2c88fc: hlt    
  0x00007f003f2c88fd: hlt    
  0x00007f003f2c88fe: hlt    
  0x00007f003f2c88ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2c8900: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2c8905: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2c890a: sub    rsp,0x80
  0x00007f003f2c8911: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2c8916: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2c891b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2c8920: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2c8925: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2c892a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2c892f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2c8934: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2c8939: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2c893e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2c8943: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2c8948: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2c894d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2c8952: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2c8957: mov    QWORD PTR [rsp],r15
  0x00007f003f2c895b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2c8965: movabs rsi,0x7f003f2c8905  ;   {internal_word}
  0x00007f003f2c896f: mov    rdx,rsp
  0x00007f003f2c8972: and    rsp,0xfffffffffffffff0
  0x00007f003f2c8976: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2c897b: hlt    
[Deopt Handler Code]
  0x00007f003f2c897c: movabs r10,0x7f003f2c897c  ;   {section_word}
  0x00007f003f2c8986: push   r10
  0x00007f003f2c8988: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2c898d: hlt    
  0x00007f003f2c898e: hlt    
  0x00007f003f2c898f: hlt    
<nmethod compile_id='118' compiler='C1' level='3' entry='0x00007f003f2c82e0' size='2512' address='0x00007f003f2c8150' relocation_offset='312' insts_offset='400' stub_offset='1968' scopes_data_offset='2128' scopes_pcs_offset='2232' dependencies_offset='2488' nul_chk_table_offset='2496' oops_offset='2112' metadata_offset='2120' method='jdk/vm/ci/code/Register equals (Ljava/lang/Object;)Z' bytes='108' count='2587' iicount='2587' stamp='0.541'/>
<writer thread='139637818533632'/>
<task_queued compile_id='120' method='sun/misc/URLClassPath$JarLoader getResource (Ljava/lang/String;Z)Lsun/misc/Resource;' bytes='85' count='640' iicount='640' level='3' stamp='0.541' comment='tiered' hot_count='640'/>
<task_queued compile_id='121' method='sun/misc/URLClassPath$JarLoader ensureOpen ()V' bytes='36' count='640' iicount='640' throwouts='3' level='3' stamp='0.541' comment='tiered' hot_count='640'/>
[Loaded jdk.vm.ci.code.CodeCacheProvider from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotCodeCacheProvider from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='122' method='sun/misc/URLClassPath$JarLoader access$600 (Lsun/misc/URLClassPath$JarLoader;)Ljava/net/URL;' bytes='5' count='128' iicount='128' level='1' stamp='0.542' comment='tiered' hot_count='128'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
sun/misc/URLClassPath$JarLoader.getResource  [0x00007f003f2c8d80, 0x00007f003f2c9c38]  3768 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;
  # this:     rsi:rsi   = &apos;sun/misc/URLClassPath$JarLoader&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  # parm1:    rcx       = boolean
  #           [sp+0xb0]  (sp of caller)
  0x00007f003f2c8d80: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2c8d84: shl    r10,0x3
  0x00007f003f2c8d88: cmp    r10,rax
  0x00007f003f2c8d8b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2c8d91: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2c8d9c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2c8da0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2c8da7: push   rbp
  0x00007f003f2c8da8: sub    rsp,0xa0
  0x00007f003f2c8daf: mov    QWORD PTR [rsp+0x78],rsi
  0x00007f003f2c8db4: movabs rdi,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2c8dbe: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2c8dc4: add    ebx,0x8
  0x00007f003f2c8dc7: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2c8dcd: movabs rdi,0x7f0038990d30  ;   {metadata({method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2c8dd7: and    ebx,0x1ff8
  0x00007f003f2c8ddd: cmp    ebx,0x0
  0x00007f003f2c8de0: je     0x00007f003f2c99b1  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@0 (line 1031)

  0x00007f003f2c8de6: mov    edi,DWORD PTR [rsi+0x24]
  0x00007f003f2c8de9: shl    rdi,0x3            ;*getfield metaIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@1 (line 1031)

  0x00007f003f2c8ded: cmp    rdi,0x0
  0x00007f003f2c8df1: movabs rbx,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2c8dfb: movabs rax,0x130
  0x00007f003f2c8e05: je     0x00007f003f2c8e15
  0x00007f003f2c8e0b: movabs rax,0x140
  0x00007f003f2c8e15: mov    r8,QWORD PTR [rbx+rax*1]
  0x00007f003f2c8e19: lea    r8,[r8+0x1]
  0x00007f003f2c8e1d: mov    QWORD PTR [rbx+rax*1],r8
  0x00007f003f2c8e21: mov    DWORD PTR [rsp+0x88],ecx
  0x00007f003f2c8e28: jne    0x00007f003f2c8e3b  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@4 (line 1031)

  0x00007f003f2c8e2e: mov    QWORD PTR [rsp+0x80],rdx
  0x00007f003f2c8e36: jmp    0x00007f003f2c8ea5  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@20 (line 1038)

  0x00007f003f2c8e3b: cmp    rax,QWORD PTR [rdi]  ; implicit exception: dispatches to 0x00007f003f2c99c8
  0x00007f003f2c8e3e: mov    rbx,rdi
  0x00007f003f2c8e41: movabs rax,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2c8e4b: add    QWORD PTR [rax+0x168],0x1
  0x00007f003f2c8e53: mov    rbx,rdx
  0x00007f003f2c8e56: mov    rdx,rbx
  0x00007f003f2c8e59: mov    rsi,rdi            ;*invokevirtual mayContain {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@12 (line 1032)

  0x00007f003f2c8e5c: mov    QWORD PTR [rsp+0x80],rbx
  0x00007f003f2c8e64: nop
  0x00007f003f2c8e65: nop
  0x00007f003f2c8e66: nop
  0x00007f003f2c8e67: call   0x00007f003f1c4d60  ; OopMap{[120]=Oop [128]=Oop off=236}
                                                ;*invokevirtual mayContain {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@12 (line 1032)
                                                ;   {optimized virtual_call}
  0x00007f003f2c8e6c: cmp    eax,0x0
  0x00007f003f2c8e6f: movabs rsi,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2c8e79: movabs rdi,0x1e8
  0x00007f003f2c8e83: jne    0x00007f003f2c8e93
  0x00007f003f2c8e89: movabs rdi,0x1f8
  0x00007f003f2c8e93: mov    rbx,QWORD PTR [rsi+rdi*1]
  0x00007f003f2c8e97: lea    rbx,[rbx+0x1]
  0x00007f003f2c8e9b: mov    QWORD PTR [rsi+rdi*1],rbx
  0x00007f003f2c8e9f: je     0x00007f003f2c992b  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@15 (line 1032)

  0x00007f003f2c8ea5: mov    rsi,QWORD PTR [rsp+0x78]
  0x00007f003f2c8eaa: movabs rdi,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2c8eb4: add    QWORD PTR [rdi+0x208],0x1
  0x00007f003f2c8ebc: mov    rsi,QWORD PTR [rsp+0x78]  ;*invokespecial ensureOpen {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@21 (line 1038)

  0x00007f003f2c8ec1: nop
  0x00007f003f2c8ec2: nop
  0x00007f003f2c8ec3: nop
  0x00007f003f2c8ec4: nop
  0x00007f003f2c8ec5: nop
  0x00007f003f2c8ec6: nop
  0x00007f003f2c8ec7: call   0x00007f003f1c4d60  ; OopMap{[120]=Oop [128]=Oop off=332}
                                                ;*invokespecial ensureOpen {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@21 (line 1038)
                                                ;   {optimized virtual_call}
  0x00007f003f2c8ecc: movabs rdx,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2c8ed6: inc    DWORD PTR [rdx+0x218]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@24 (line 1041)

  0x00007f003f2c8edc: mov    rsi,QWORD PTR [rsp+0x78]
  0x00007f003f2c8ee1: mov    edi,DWORD PTR [rsi+0x18]
  0x00007f003f2c8ee4: shl    rdi,0x3            ;*getfield jar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@38 (line 1042)

  0x00007f003f2c8ee8: cmp    rax,QWORD PTR [rdi]  ;*invokevirtual getJarEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ; implicit exception: dispatches to 0x00007f003f2c99cd
  0x00007f003f2c8eeb: mov    rdx,rdi
  0x00007f003f2c8eee: movabs rbx,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2c8ef8: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2c8efb: shl    rdx,0x3
  0x00007f003f2c8eff: cmp    rdx,QWORD PTR [rbx+0x250]
  0x00007f003f2c8f06: jne    0x00007f003f2c8f15
  0x00007f003f2c8f08: add    QWORD PTR [rbx+0x258],0x1
  0x00007f003f2c8f10: jmp    0x00007f003f2c90d7
  0x00007f003f2c8f15: cmp    rdx,QWORD PTR [rbx+0x260]
  0x00007f003f2c8f1c: jne    0x00007f003f2c8f2b
  0x00007f003f2c8f1e: add    QWORD PTR [rbx+0x268],0x1
  0x00007f003f2c8f26: jmp    0x00007f003f2c90d7
  0x00007f003f2c8f2b: cmp    rdx,QWORD PTR [rbx+0x270]
  0x00007f003f2c8f32: jne    0x00007f003f2c8f41
  0x00007f003f2c8f34: add    QWORD PTR [rbx+0x278],0x1
  0x00007f003f2c8f3c: jmp    0x00007f003f2c90d7
  0x00007f003f2c8f41: cmp    rdx,QWORD PTR [rbx+0x280]
  0x00007f003f2c8f48: jne    0x00007f003f2c8f57
  0x00007f003f2c8f4a: add    QWORD PTR [rbx+0x288],0x1
  0x00007f003f2c8f52: jmp    0x00007f003f2c90d7
  0x00007f003f2c8f57: cmp    rdx,QWORD PTR [rbx+0x290]
  0x00007f003f2c8f5e: jne    0x00007f003f2c8f6d
  0x00007f003f2c8f60: add    QWORD PTR [rbx+0x298],0x1
  0x00007f003f2c8f68: jmp    0x00007f003f2c90d7
  0x00007f003f2c8f6d: cmp    rdx,QWORD PTR [rbx+0x2a0]
  0x00007f003f2c8f74: jne    0x00007f003f2c8f83
  0x00007f003f2c8f76: add    QWORD PTR [rbx+0x2a8],0x1
  0x00007f003f2c8f7e: jmp    0x00007f003f2c90d7
  0x00007f003f2c8f83: cmp    rdx,QWORD PTR [rbx+0x2b0]
  0x00007f003f2c8f8a: jne    0x00007f003f2c8f99
  0x00007f003f2c8f8c: add    QWORD PTR [rbx+0x2b8],0x1
  0x00007f003f2c8f94: jmp    0x00007f003f2c90d7
  0x00007f003f2c8f99: cmp    rdx,QWORD PTR [rbx+0x2c0]
  0x00007f003f2c8fa0: jne    0x00007f003f2c8faf
  0x00007f003f2c8fa2: add    QWORD PTR [rbx+0x2c8],0x1
  0x00007f003f2c8faa: jmp    0x00007f003f2c90d7
  0x00007f003f2c8faf: cmp    QWORD PTR [rbx+0x250],0x0
  0x00007f003f2c8fba: jne    0x00007f003f2c8fd3
  0x00007f003f2c8fbc: mov    QWORD PTR [rbx+0x250],rdx
  0x00007f003f2c8fc3: mov    QWORD PTR [rbx+0x258],0x1
  0x00007f003f2c8fce: jmp    0x00007f003f2c90d7
  0x00007f003f2c8fd3: cmp    QWORD PTR [rbx+0x260],0x0
  0x00007f003f2c8fde: jne    0x00007f003f2c8ff7
  0x00007f003f2c8fe0: mov    QWORD PTR [rbx+0x260],rdx
  0x00007f003f2c8fe7: mov    QWORD PTR [rbx+0x268],0x1
  0x00007f003f2c8ff2: jmp    0x00007f003f2c90d7
  0x00007f003f2c8ff7: cmp    QWORD PTR [rbx+0x270],0x0
  0x00007f003f2c9002: jne    0x00007f003f2c901b
  0x00007f003f2c9004: mov    QWORD PTR [rbx+0x270],rdx
  0x00007f003f2c900b: mov    QWORD PTR [rbx+0x278],0x1
  0x00007f003f2c9016: jmp    0x00007f003f2c90d7
  0x00007f003f2c901b: cmp    QWORD PTR [rbx+0x280],0x0
  0x00007f003f2c9026: jne    0x00007f003f2c903f
  0x00007f003f2c9028: mov    QWORD PTR [rbx+0x280],rdx
  0x00007f003f2c902f: mov    QWORD PTR [rbx+0x288],0x1
  0x00007f003f2c903a: jmp    0x00007f003f2c90d7
  0x00007f003f2c903f: cmp    QWORD PTR [rbx+0x290],0x0
  0x00007f003f2c904a: jne    0x00007f003f2c9063
  0x00007f003f2c904c: mov    QWORD PTR [rbx+0x290],rdx
  0x00007f003f2c9053: mov    QWORD PTR [rbx+0x298],0x1
  0x00007f003f2c905e: jmp    0x00007f003f2c90d7
  0x00007f003f2c9063: cmp    QWORD PTR [rbx+0x2a0],0x0
  0x00007f003f2c906e: jne    0x00007f003f2c9087
  0x00007f003f2c9070: mov    QWORD PTR [rbx+0x2a0],rdx
  0x00007f003f2c9077: mov    QWORD PTR [rbx+0x2a8],0x1
  0x00007f003f2c9082: jmp    0x00007f003f2c90d7
  0x00007f003f2c9087: cmp    QWORD PTR [rbx+0x2b0],0x0
  0x00007f003f2c9092: jne    0x00007f003f2c90ab
  0x00007f003f2c9094: mov    QWORD PTR [rbx+0x2b0],rdx
  0x00007f003f2c909b: mov    QWORD PTR [rbx+0x2b8],0x1
  0x00007f003f2c90a6: jmp    0x00007f003f2c90d7
  0x00007f003f2c90ab: cmp    QWORD PTR [rbx+0x2c0],0x0
  0x00007f003f2c90b6: jne    0x00007f003f2c90cf
  0x00007f003f2c90b8: mov    QWORD PTR [rbx+0x2c0],rdx
  0x00007f003f2c90bf: mov    QWORD PTR [rbx+0x2c8],0x1
  0x00007f003f2c90ca: jmp    0x00007f003f2c90d7
  0x00007f003f2c90cf: add    QWORD PTR [rbx+0x240],0x1
  0x00007f003f2c90d7: movabs rdx,0x7f0038a5b648  ;   {metadata(method data for {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2c90e1: mov    ebx,DWORD PTR [rdx+0xfc]
  0x00007f003f2c90e7: add    ebx,0x8
  0x00007f003f2c90ea: mov    DWORD PTR [rdx+0xfc],ebx
  0x00007f003f2c90f0: movabs rdx,0x7f0038a3bd38  ;   {metadata({method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2c90fa: and    ebx,0x7ffff8
  0x00007f003f2c9100: cmp    ebx,0x0
  0x00007f003f2c9103: je     0x00007f003f2c99d2
  0x00007f003f2c9109: mov    rdx,rdi
  0x00007f003f2c910c: movabs rbx,0x7f0038a5b648  ;   {metadata(method data for {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2c9116: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2c9119: shl    rdx,0x3
  0x00007f003f2c911d: cmp    rdx,QWORD PTR [rbx+0x140]
  0x00007f003f2c9124: jne    0x00007f003f2c9133
  0x00007f003f2c9126: add    QWORD PTR [rbx+0x148],0x1
  0x00007f003f2c912e: jmp    0x00007f003f2c92f5
  0x00007f003f2c9133: cmp    rdx,QWORD PTR [rbx+0x150]
  0x00007f003f2c913a: jne    0x00007f003f2c9149
  0x00007f003f2c913c: add    QWORD PTR [rbx+0x158],0x1
  0x00007f003f2c9144: jmp    0x00007f003f2c92f5
  0x00007f003f2c9149: cmp    rdx,QWORD PTR [rbx+0x160]
  0x00007f003f2c9150: jne    0x00007f003f2c915f
  0x00007f003f2c9152: add    QWORD PTR [rbx+0x168],0x1
  0x00007f003f2c915a: jmp    0x00007f003f2c92f5
  0x00007f003f2c915f: cmp    rdx,QWORD PTR [rbx+0x170]
  0x00007f003f2c9166: jne    0x00007f003f2c9175
  0x00007f003f2c9168: add    QWORD PTR [rbx+0x178],0x1
  0x00007f003f2c9170: jmp    0x00007f003f2c92f5
  0x00007f003f2c9175: cmp    rdx,QWORD PTR [rbx+0x180]
  0x00007f003f2c917c: jne    0x00007f003f2c918b
  0x00007f003f2c917e: add    QWORD PTR [rbx+0x188],0x1
  0x00007f003f2c9186: jmp    0x00007f003f2c92f5
  0x00007f003f2c918b: cmp    rdx,QWORD PTR [rbx+0x190]
  0x00007f003f2c9192: jne    0x00007f003f2c91a1
  0x00007f003f2c9194: add    QWORD PTR [rbx+0x198],0x1
  0x00007f003f2c919c: jmp    0x00007f003f2c92f5
  0x00007f003f2c91a1: cmp    rdx,QWORD PTR [rbx+0x1a0]
  0x00007f003f2c91a8: jne    0x00007f003f2c91b7
  0x00007f003f2c91aa: add    QWORD PTR [rbx+0x1a8],0x1
  0x00007f003f2c91b2: jmp    0x00007f003f2c92f5
  0x00007f003f2c91b7: cmp    rdx,QWORD PTR [rbx+0x1b0]
  0x00007f003f2c91be: jne    0x00007f003f2c91cd
  0x00007f003f2c91c0: add    QWORD PTR [rbx+0x1b8],0x1
  0x00007f003f2c91c8: jmp    0x00007f003f2c92f5
  0x00007f003f2c91cd: cmp    QWORD PTR [rbx+0x140],0x0
  0x00007f003f2c91d8: jne    0x00007f003f2c91f1
  0x00007f003f2c91da: mov    QWORD PTR [rbx+0x140],rdx
  0x00007f003f2c91e1: mov    QWORD PTR [rbx+0x148],0x1
  0x00007f003f2c91ec: jmp    0x00007f003f2c92f5
  0x00007f003f2c91f1: cmp    QWORD PTR [rbx+0x150],0x0
  0x00007f003f2c91fc: jne    0x00007f003f2c9215
  0x00007f003f2c91fe: mov    QWORD PTR [rbx+0x150],rdx
  0x00007f003f2c9205: mov    QWORD PTR [rbx+0x158],0x1
  0x00007f003f2c9210: jmp    0x00007f003f2c92f5
  0x00007f003f2c9215: cmp    QWORD PTR [rbx+0x160],0x0
  0x00007f003f2c9220: jne    0x00007f003f2c9239
  0x00007f003f2c9222: mov    QWORD PTR [rbx+0x160],rdx
  0x00007f003f2c9229: mov    QWORD PTR [rbx+0x168],0x1
  0x00007f003f2c9234: jmp    0x00007f003f2c92f5
  0x00007f003f2c9239: cmp    QWORD PTR [rbx+0x170],0x0
  0x00007f003f2c9244: jne    0x00007f003f2c925d
  0x00007f003f2c9246: mov    QWORD PTR [rbx+0x170],rdx
  0x00007f003f2c924d: mov    QWORD PTR [rbx+0x178],0x1
  0x00007f003f2c9258: jmp    0x00007f003f2c92f5
  0x00007f003f2c925d: cmp    QWORD PTR [rbx+0x180],0x0
  0x00007f003f2c9268: jne    0x00007f003f2c9281
  0x00007f003f2c926a: mov    QWORD PTR [rbx+0x180],rdx
  0x00007f003f2c9271: mov    QWORD PTR [rbx+0x188],0x1
  0x00007f003f2c927c: jmp    0x00007f003f2c92f5
  0x00007f003f2c9281: cmp    QWORD PTR [rbx+0x190],0x0
  0x00007f003f2c928c: jne    0x00007f003f2c92a5
  0x00007f003f2c928e: mov    QWORD PTR [rbx+0x190],rdx
  0x00007f003f2c9295: mov    QWORD PTR [rbx+0x198],0x1
  0x00007f003f2c92a0: jmp    0x00007f003f2c92f5
  0x00007f003f2c92a5: cmp    QWORD PTR [rbx+0x1a0],0x0
  0x00007f003f2c92b0: jne    0x00007f003f2c92c9
  0x00007f003f2c92b2: mov    QWORD PTR [rbx+0x1a0],rdx
  0x00007f003f2c92b9: mov    QWORD PTR [rbx+0x1a8],0x1
  0x00007f003f2c92c4: jmp    0x00007f003f2c92f5
  0x00007f003f2c92c9: cmp    QWORD PTR [rbx+0x1b0],0x0
  0x00007f003f2c92d4: jne    0x00007f003f2c92ed
  0x00007f003f2c92d6: mov    QWORD PTR [rbx+0x1b0],rdx
  0x00007f003f2c92dd: mov    QWORD PTR [rbx+0x1b8],0x1
  0x00007f003f2c92e8: jmp    0x00007f003f2c92f5
  0x00007f003f2c92ed: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f2c92f5: mov    rdx,QWORD PTR [rsp+0x80]
  0x00007f003f2c92fd: mov    rsi,rdi            ;*invokevirtual getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)

  0x00007f003f2c9300: nop
  0x00007f003f2c9301: nop
  0x00007f003f2c9302: nop
  0x00007f003f2c9303: nop
  0x00007f003f2c9304: nop
  0x00007f003f2c9305: movabs rax,0xffffffffffffffff
  0x00007f003f2c930f: call   0x00007f003f1c4f60  ; OopMap{[128]=Oop [120]=Oop off=1428}
                                                ;*invokevirtual getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {virtual_call}
  0x00007f003f2c9314: cmp    rax,0x0
  0x00007f003f2c9318: jne    0x00007f003f2c9333
  0x00007f003f2c931a: movabs rdx,0x7f0038a5b648  ;   {metadata(method data for {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2c9324: or     DWORD PTR [rdx+0x1c0],0x100
  0x00007f003f2c932e: jmp    0x00007f003f2c9550
  0x00007f003f2c9333: movabs rdi,0x7c00508e8    ;   {metadata(&apos;java/util/jar/JarEntry&apos;)}
  0x00007f003f2c933d: mov    edx,DWORD PTR [rax+0x8]
  0x00007f003f2c9340: shl    rdx,0x3
  0x00007f003f2c9344: cmp    rdi,QWORD PTR [rdx+0x38]
  0x00007f003f2c9348: jne    0x00007f003f2c9534
  0x00007f003f2c934e: movabs rdx,0x7f0038a5b648  ;   {metadata(method data for {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2c9358: mov    edi,DWORD PTR [rax+0x8]
  0x00007f003f2c935b: shl    rdi,0x3
  0x00007f003f2c935f: cmp    rdi,QWORD PTR [rdx+0x1d8]
  0x00007f003f2c9366: jne    0x00007f003f2c9375
  0x00007f003f2c9368: add    QWORD PTR [rdx+0x1e0],0x1
  0x00007f003f2c9370: jmp    0x00007f003f2c9550
  0x00007f003f2c9375: cmp    rdi,QWORD PTR [rdx+0x1e8]
  0x00007f003f2c937c: jne    0x00007f003f2c938b
  0x00007f003f2c937e: add    QWORD PTR [rdx+0x1f0],0x1
  0x00007f003f2c9386: jmp    0x00007f003f2c9550
  0x00007f003f2c938b: cmp    rdi,QWORD PTR [rdx+0x1f8]
  0x00007f003f2c9392: jne    0x00007f003f2c93a1
  0x00007f003f2c9394: add    QWORD PTR [rdx+0x200],0x1
  0x00007f003f2c939c: jmp    0x00007f003f2c9550
  0x00007f003f2c93a1: cmp    rdi,QWORD PTR [rdx+0x208]
  0x00007f003f2c93a8: jne    0x00007f003f2c93b7
  0x00007f003f2c93aa: add    QWORD PTR [rdx+0x210],0x1
  0x00007f003f2c93b2: jmp    0x00007f003f2c9550
  0x00007f003f2c93b7: cmp    rdi,QWORD PTR [rdx+0x218]
  0x00007f003f2c93be: jne    0x00007f003f2c93cd
  0x00007f003f2c93c0: add    QWORD PTR [rdx+0x220],0x1
  0x00007f003f2c93c8: jmp    0x00007f003f2c9550
  0x00007f003f2c93cd: cmp    rdi,QWORD PTR [rdx+0x228]
  0x00007f003f2c93d4: jne    0x00007f003f2c93e3
  0x00007f003f2c93d6: add    QWORD PTR [rdx+0x230],0x1
  0x00007f003f2c93de: jmp    0x00007f003f2c9550
  0x00007f003f2c93e3: cmp    rdi,QWORD PTR [rdx+0x238]
  0x00007f003f2c93ea: jne    0x00007f003f2c93f9
  0x00007f003f2c93ec: add    QWORD PTR [rdx+0x240],0x1
  0x00007f003f2c93f4: jmp    0x00007f003f2c9550
  0x00007f003f2c93f9: cmp    rdi,QWORD PTR [rdx+0x248]
  0x00007f003f2c9400: jne    0x00007f003f2c940f
  0x00007f003f2c9402: add    QWORD PTR [rdx+0x250],0x1
  0x00007f003f2c940a: jmp    0x00007f003f2c9550
  0x00007f003f2c940f: cmp    QWORD PTR [rdx+0x1d8],0x0
  0x00007f003f2c941a: jne    0x00007f003f2c9433
  0x00007f003f2c941c: mov    QWORD PTR [rdx+0x1d8],rdi
  0x00007f003f2c9423: mov    QWORD PTR [rdx+0x1e0],0x1
  0x00007f003f2c942e: jmp    0x00007f003f2c9550
  0x00007f003f2c9433: cmp    QWORD PTR [rdx+0x1e8],0x0
  0x00007f003f2c943e: jne    0x00007f003f2c9457
  0x00007f003f2c9440: mov    QWORD PTR [rdx+0x1e8],rdi
  0x00007f003f2c9447: mov    QWORD PTR [rdx+0x1f0],0x1
  0x00007f003f2c9452: jmp    0x00007f003f2c9550
  0x00007f003f2c9457: cmp    QWORD PTR [rdx+0x1f8],0x0
  0x00007f003f2c9462: jne    0x00007f003f2c947b
  0x00007f003f2c9464: mov    QWORD PTR [rdx+0x1f8],rdi
  0x00007f003f2c946b: mov    QWORD PTR [rdx+0x200],0x1
  0x00007f003f2c9476: jmp    0x00007f003f2c9550
  0x00007f003f2c947b: cmp    QWORD PTR [rdx+0x208],0x0
  0x00007f003f2c9486: jne    0x00007f003f2c949f
  0x00007f003f2c9488: mov    QWORD PTR [rdx+0x208],rdi
  0x00007f003f2c948f: mov    QWORD PTR [rdx+0x210],0x1
  0x00007f003f2c949a: jmp    0x00007f003f2c9550
  0x00007f003f2c949f: cmp    QWORD PTR [rdx+0x218],0x0
  0x00007f003f2c94aa: jne    0x00007f003f2c94c3
  0x00007f003f2c94ac: mov    QWORD PTR [rdx+0x218],rdi
  0x00007f003f2c94b3: mov    QWORD PTR [rdx+0x220],0x1
  0x00007f003f2c94be: jmp    0x00007f003f2c9550
  0x00007f003f2c94c3: cmp    QWORD PTR [rdx+0x228],0x0
  0x00007f003f2c94ce: jne    0x00007f003f2c94e7
  0x00007f003f2c94d0: mov    QWORD PTR [rdx+0x228],rdi
  0x00007f003f2c94d7: mov    QWORD PTR [rdx+0x230],0x1
  0x00007f003f2c94e2: jmp    0x00007f003f2c9550
  0x00007f003f2c94e7: cmp    QWORD PTR [rdx+0x238],0x0
  0x00007f003f2c94f2: jne    0x00007f003f2c950b
  0x00007f003f2c94f4: mov    QWORD PTR [rdx+0x238],rdi
  0x00007f003f2c94fb: mov    QWORD PTR [rdx+0x240],0x1
  0x00007f003f2c9506: jmp    0x00007f003f2c9550
  0x00007f003f2c950b: cmp    QWORD PTR [rdx+0x248],0x0
  0x00007f003f2c9516: jne    0x00007f003f2c952f
  0x00007f003f2c9518: mov    QWORD PTR [rdx+0x248],rdi
  0x00007f003f2c951f: mov    QWORD PTR [rdx+0x250],0x1
  0x00007f003f2c952a: jmp    0x00007f003f2c9550
  0x00007f003f2c952f: jmp    0x00007f003f2c9550
  0x00007f003f2c9534: movabs rdx,0x7f0038a5b648  ;   {metadata(method data for {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2c953e: sub    QWORD PTR [rdx+0x1c8],0x1
  0x00007f003f2c9546: jmp    0x00007f003f2c99e9
  0x00007f003f2c954b: jmp    0x00007f003f2c9550
  0x00007f003f2c9550: mov    rsi,rax            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@5 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)

  0x00007f003f2c9553: cmp    rsi,0x0
  0x00007f003f2c9557: movabs rax,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2c9561: movabs rdx,0x2d8
  0x00007f003f2c956b: je     0x00007f003f2c957b
  0x00007f003f2c9571: movabs rdx,0x2e8
  0x00007f003f2c957b: mov    rdi,QWORD PTR [rax+rdx*1]
  0x00007f003f2c957f: lea    rdi,[rdi+0x1]
  0x00007f003f2c9583: mov    QWORD PTR [rax+rdx*1],rdi
  0x00007f003f2c9587: jne    0x00007f003f2c98e3  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@47 (line 1043)

  0x00007f003f2c958d: mov    rbx,QWORD PTR [rsp+0x78]
  0x00007f003f2c9592: mov    eax,DWORD PTR [rbx+0x20]
  0x00007f003f2c9595: shl    rax,0x3            ;*getfield index {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@59 (line 1046)

  0x00007f003f2c9599: cmp    rax,0x0
  0x00007f003f2c959d: movabs rax,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2c95a7: movabs rdx,0x390
  0x00007f003f2c95b1: jne    0x00007f003f2c95c1
  0x00007f003f2c95b7: movabs rdx,0x3a0
  0x00007f003f2c95c1: mov    rsi,QWORD PTR [rax+rdx*1]
  0x00007f003f2c95c5: lea    rsi,[rsi+0x1]
  0x00007f003f2c95c9: mov    QWORD PTR [rax+rdx*1],rsi
  0x00007f003f2c95cd: jne    0x00007f003f2c95ec  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@62 (line 1046)

  0x00007f003f2c95d3: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f2c95dd: add    rsp,0xa0
  0x00007f003f2c95e4: pop    rbp
  0x00007f003f2c95e5: test   DWORD PTR [rip+0x1b0f8b15],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c95eb: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@66 (line 1047)

  0x00007f003f2c95ec: nop    DWORD PTR [rax+0x0]
  0x00007f003f2c95f0: jmp    0x00007f003f2c9a01  ;   {no_reloc}
  0x00007f003f2c95f5: add    BYTE PTR [rax],al
  0x00007f003f2c95f7: add    BYTE PTR [rax],al
  0x00007f003f2c95f9: add    BYTE PTR [rcx-0x75],cl
  0x00007f003f2c95fc: rex.RXB (bad) 
  0x00007f003f2c95fe: lea    rdi,[rax+0x10]
  0x00007f003f2c9602: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2c9606: ja     0x00007f003f2c9a0b
  0x00007f003f2c960c: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2c9610: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2c9617: mov    QWORD PTR [rax],rcx
  0x00007f003f2c961a: mov    rcx,rdx
  0x00007f003f2c961d: shr    rcx,0x3
  0x00007f003f2c9621: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2c9624: xor    rcx,rcx
  0x00007f003f2c9627: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2c962a: xor    rcx,rcx
  0x00007f003f2c962d: mov    r8,rax             ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@67 (line 1049)

  0x00007f003f2c9630: mov    rdx,r8
  0x00007f003f2c9633: movabs rsi,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2c963d: add    QWORD PTR [rsi+0x3b0],0x1
  0x00007f003f2c9645: movabs rdx,0x7f0038a67050  ;   {metadata(method data for {method} {0x00007f00389694c0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/HashSet&apos;)}
  0x00007f003f2c964f: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2c9655: add    esi,0x8
  0x00007f003f2c9658: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2c965e: movabs rdx,0x7f00389694c0  ;   {metadata({method} {0x00007f00389694c0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/HashSet&apos;)}
  0x00007f003f2c9668: and    esi,0x7ffff8
  0x00007f003f2c966e: cmp    esi,0x0
  0x00007f003f2c9671: je     0x00007f003f2c9a18
  0x00007f003f2c9677: mov    rdx,r8
  0x00007f003f2c967a: movabs rsi,0x7f0038a67050  ;   {metadata(method data for {method} {0x00007f00389694c0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/HashSet&apos;)}
  0x00007f003f2c9684: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2c968c: movabs rdx,0x7f0038a671d0  ;   {metadata(method data for {method} {0x00007f003885c3d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractSet&apos;)}
  0x00007f003f2c9696: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2c969c: add    esi,0x8
  0x00007f003f2c969f: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2c96a5: movabs rdx,0x7f003885c3d8  ;   {metadata({method} {0x00007f003885c3d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractSet&apos;)}
  0x00007f003f2c96af: and    esi,0x7ffff8
  0x00007f003f2c96b5: cmp    esi,0x0
  0x00007f003f2c96b8: je     0x00007f003f2c9a2f
  0x00007f003f2c96be: mov    rdx,r8
  0x00007f003f2c96c1: movabs rsi,0x7f0038a671d0  ;   {metadata(method data for {method} {0x00007f003885c3d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractSet&apos;)}
  0x00007f003f2c96cb: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2c96d3: movabs rdx,0x7f0038a67330  ;   {metadata(method data for {method} {0x00007f00388468f8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x00007f003f2c96dd: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2c96e3: add    esi,0x8
  0x00007f003f2c96e6: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2c96ec: movabs rdx,0x7f00388468f8  ;   {metadata({method} {0x00007f00388468f8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x00007f003f2c96f6: and    esi,0x7ffff8
  0x00007f003f2c96fc: cmp    esi,0x0
  0x00007f003f2c96ff: je     0x00007f003f2c9a46
  0x00007f003f2c9705: mov    rdx,r8
  0x00007f003f2c9708: movabs rsi,0x7f0038a67330  ;   {metadata(method data for {method} {0x00007f00388468f8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x00007f003f2c9712: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2c971a: movabs rdx,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2c9724: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2c972a: add    esi,0x8
  0x00007f003f2c972d: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2c9733: movabs rdx,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2c973d: and    esi,0x7ffff8
  0x00007f003f2c9743: cmp    esi,0x0
  0x00007f003f2c9746: je     0x00007f003f2c9a5d
  0x00007f003f2c974c: movabs rdx,0x7c001b1e8    ;   {metadata(&apos;java/util/HashMap&apos;)}
  0x00007f003f2c9756: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2c975a: lea    rdi,[rax+0x30]
  0x00007f003f2c975e: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2c9762: ja     0x00007f003f2c9a74
  0x00007f003f2c9768: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2c976c: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2c9773: mov    QWORD PTR [rax],rcx
  0x00007f003f2c9776: mov    rcx,rdx
  0x00007f003f2c9779: shr    rcx,0x3
  0x00007f003f2c977d: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2c9780: xor    rcx,rcx
  0x00007f003f2c9783: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2c9786: xor    rcx,rcx
  0x00007f003f2c9789: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f2c978d: mov    QWORD PTR [rax+0x18],rcx
  0x00007f003f2c9791: mov    QWORD PTR [rax+0x20],rcx
  0x00007f003f2c9795: mov    QWORD PTR [rax+0x28],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashSet::&lt;init&gt;@5 (line 105)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)

  0x00007f003f2c9799: mov    rdx,rax
  0x00007f003f2c979c: movabs rcx,0x7f0038a67050  ;   {metadata(method data for {method} {0x00007f00389694c0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/HashSet&apos;)}
  0x00007f003f2c97a6: add    QWORD PTR [rcx+0x140],0x1
  0x00007f003f2c97ae: movabs rdx,0x7f0038a67490  ;   {metadata(method data for {method} {0x00007f003886ceb8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2c97b8: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2c97be: add    ecx,0x8
  0x00007f003f2c97c1: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2c97c7: movabs rdx,0x7f003886ceb8  ;   {metadata({method} {0x00007f003886ceb8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2c97d1: and    ecx,0x7ffff8
  0x00007f003f2c97d7: cmp    ecx,0x0
  0x00007f003f2c97da: je     0x00007f003f2c9a81
  0x00007f003f2c97e0: mov    rdx,rax
  0x00007f003f2c97e3: movabs rcx,0x7f0038a67490  ;   {metadata(method data for {method} {0x00007f003886ceb8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/HashMap&apos;)}
  0x00007f003f2c97ed: add    QWORD PTR [rcx+0x130],0x1
  0x00007f003f2c97f5: movabs rdx,0x7f0038a67600  ;   {metadata(method data for {method} {0x00007f00388600e0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractMap&apos;)}
  0x00007f003f2c97ff: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2c9805: add    ecx,0x8
  0x00007f003f2c9808: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2c980e: movabs rdx,0x7f00388600e0  ;   {metadata({method} {0x00007f00388600e0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractMap&apos;)}
  0x00007f003f2c9818: and    ecx,0x7ffff8
  0x00007f003f2c981e: cmp    ecx,0x0
  0x00007f003f2c9821: je     0x00007f003f2c9a98
  0x00007f003f2c9827: mov    rdx,rax
  0x00007f003f2c982a: movabs rcx,0x7f0038a67600  ;   {metadata(method data for {method} {0x00007f00388600e0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractMap&apos;)}
  0x00007f003f2c9834: add    QWORD PTR [rcx+0x130],0x1
  0x00007f003f2c983c: movabs rdx,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2c9846: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2c984c: add    ecx,0x8
  0x00007f003f2c984f: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2c9855: movabs rdx,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2c985f: and    ecx,0x7ffff8
  0x00007f003f2c9865: cmp    ecx,0x0
  0x00007f003f2c9868: je     0x00007f003f2c9aaf
  0x00007f003f2c986e: mov    DWORD PTR [rax+0x20],0x3f400000
                                                ;*putfield loadFactor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::&lt;init&gt;@7 (line 475)
                                                ; - java.util.HashSet::&lt;init&gt;@9 (line 105)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)

  0x00007f003f2c9875: mov    r10,rax
  0x00007f003f2c9878: shr    r10,0x3
  0x00007f003f2c987c: mov    DWORD PTR [r8+0xc],r10d
  0x00007f003f2c9880: mov    rdx,r8
  0x00007f003f2c9883: shr    rdx,0x9
  0x00007f003f2c9887: movabs rcx,0x7f003ae7c000
  0x00007f003f2c9891: mov    BYTE PTR [rdx+rcx*1],0x0  ;*putfield map {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashSet::&lt;init&gt;@12 (line 105)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)

  0x00007f003f2c9895: mov    rsi,rbx
  0x00007f003f2c9898: movabs rdx,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2c98a2: movabs r10,0x7c003adc0    ;   {metadata(&apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2c98ac: mov    QWORD PTR [rdx+0x3d0],r10
  0x00007f003f2c98b3: add    QWORD PTR [rdx+0x3d8],0x1
  0x00007f003f2c98bb: mov    rdx,QWORD PTR [rsp+0x80]
  0x00007f003f2c98c3: mov    ecx,DWORD PTR [rsp+0x88]
  0x00007f003f2c98ca: mov    rsi,rbx            ;*invokevirtual getResource {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@81 (line 1050)

  0x00007f003f2c98cd: nop
  0x00007f003f2c98ce: nop
  0x00007f003f2c98cf: call   0x00007f003f1c4d60  ; OopMap{off=2900}
                                                ;*invokevirtual getResource {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@81 (line 1050)
                                                ;   {optimized virtual_call}
  0x00007f003f2c98d4: add    rsp,0xa0
  0x00007f003f2c98db: pop    rbp
  0x00007f003f2c98dc: test   DWORD PTR [rip+0x1b0f881e],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c98e2: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@84 (line 1050)

  0x00007f003f2c98e3: mov    ecx,DWORD PTR [rsp+0x88]
  0x00007f003f2c98ea: mov    rdx,QWORD PTR [rsp+0x80]
  0x00007f003f2c98f2: mov    rbx,QWORD PTR [rsp+0x78]
  0x00007f003f2c98f7: mov    r8,rbx
  0x00007f003f2c98fa: movabs rdi,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2c9904: add    QWORD PTR [rdi+0x310],0x1
  0x00007f003f2c990c: mov    r8,rsi
  0x00007f003f2c990f: mov    rsi,rbx            ;*invokevirtual checkResource {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@54 (line 1044)

  0x00007f003f2c9912: nop
  0x00007f003f2c9913: nop
  0x00007f003f2c9914: nop
  0x00007f003f2c9915: nop
  0x00007f003f2c9916: nop
  0x00007f003f2c9917: call   0x00007f003f1c4d60  ; OopMap{off=2972}
                                                ;*invokevirtual checkResource {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@54 (line 1044)
                                                ;   {optimized virtual_call}
  0x00007f003f2c991c: add    rsp,0xa0
  0x00007f003f2c9923: pop    rbp
  0x00007f003f2c9924: test   DWORD PTR [rip+0x1b0f87d6],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c992a: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@57 (line 1044)

  0x00007f003f2c992b: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f2c9935: add    rsp,0xa0
  0x00007f003f2c993c: pop    rbp
  0x00007f003f2c993d: test   DWORD PTR [rip+0x1b0f87bd],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2c9943: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@19 (line 1033)

  0x00007f003f2c9944: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c994b: xor    r10,r10
  0x00007f003f2c994e: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c9955: xor    r10,r10
  0x00007f003f2c9958: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c995f: mov    rsi,rax
  0x00007f003f2c9962: nop    WORD PTR [rax+rax*1+0x0]
  0x00007f003f2c9968: jmp    0x00007f003f2c9ad5  ;   {no_reloc}
  0x00007f003f2c996d: add    BYTE PTR [rax],al
  0x00007f003f2c996f: add    BYTE PTR [rax],al
  0x00007f003f2c9971: add    cl,ch
  0x00007f003f2c9973: push   0x48000001         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@28 (line 1040)

  0x00007f003f2c9978: mov    edx,eax
  0x00007f003f2c997a: movabs rdi,0x7f0038a62358  ;   {metadata(method data for {method} {0x00007f0038990d30} &apos;getResource&apos; &apos;(Ljava/lang/String;Z)Lsun/misc/Resource;&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2c9984: add    QWORD PTR [rdi+0x230],0x1
  0x00007f003f2c998c: mov    rdx,rsi
  0x00007f003f2c998f: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@33 (line 1040)

  0x00007f003f2c9992: mov    QWORD PTR [rsp+0x90],rax
  0x00007f003f2c999a: nop
  0x00007f003f2c999b: nop
  0x00007f003f2c999c: nop
  0x00007f003f2c999d: nop
  0x00007f003f2c999e: nop
  0x00007f003f2c999f: call   0x00007f003f1c4d60  ; OopMap{[144]=Oop off=3108}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@33 (line 1040)
                                                ;   {optimized virtual_call}
  0x00007f003f2c99a4: mov    rax,QWORD PTR [rsp+0x90]
  0x00007f003f2c99ac: jmp    0x00007f003f2c9b17
  0x00007f003f2c99b1: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2c99b6: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c99be: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [120]=Oop rdx=Oop off=3139}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@-1 (line 1031)
                                                ;   {runtime_call}
  0x00007f003f2c99c3: jmp    0x00007f003f2c8de6
  0x00007f003f2c99c8: call   0x00007f003f279000  ; OopMap{rdx=Oop [120]=Oop rdi=Oop off=3149}
                                                ;*invokevirtual mayContain {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@12 (line 1032)
                                                ;   {runtime_call}
  0x00007f003f2c99cd: call   0x00007f003f279000  ; OopMap{[128]=Oop rsi=Oop [120]=Oop rdi=Oop off=3154}
                                                ;*invokevirtual getJarEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {runtime_call}
  0x00007f003f2c99d2: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2c99d7: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c99df: call   0x00007f003f27d5e0  ; OopMap{[128]=Oop rsi=Oop [120]=Oop rdi=Oop off=3172}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarFile::getJarEntry@-1 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {runtime_call}
  0x00007f003f2c99e4: jmp    0x00007f003f2c9109
  0x00007f003f2c99e9: mov    QWORD PTR [rsp],rax
  0x00007f003f2c99ed: call   0x00007f003f27b2c0  ; OopMap{[128]=Oop [120]=Oop off=3186}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@5 (line 223)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@42 (line 1042)
                                                ;   {runtime_call}
  0x00007f003f2c99f2: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2c99fc: mov    eax,0xa050f00
  0x00007f003f2c9a01: call   0x00007f003f27c5e0  ; OopMap{rbx=Oop [120]=Oop [128]=Oop off=3206}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@67 (line 1049)
                                                ;   {runtime_call}
  0x00007f003f2c9a06: jmp    0x00007f003f2c95f0
  0x00007f003f2c9a0b: mov    rdx,rdx
  0x00007f003f2c9a0e: call   0x00007f003f279760  ; OopMap{rbx=Oop [120]=Oop [128]=Oop off=3219}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@67 (line 1049)
                                                ;   {runtime_call}
  0x00007f003f2c9a13: jmp    0x00007f003f2c962d
  0x00007f003f2c9a18: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2c9a1d: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c9a25: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop [120]=Oop [128]=Oop r8=Oop off=3242}
                                                ;*synchronization entry
                                                ; - java.util.HashSet::&lt;init&gt;@-1 (line 104)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007f003f2c9a2a: jmp    0x00007f003f2c9677
  0x00007f003f2c9a2f: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2c9a34: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c9a3c: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop [120]=Oop [128]=Oop r8=Oop off=3265}
                                                ;*synchronization entry
                                                ; - java.util.AbstractSet::&lt;init&gt;@-1 (line 63)
                                                ; - java.util.HashSet::&lt;init&gt;@1 (line 104)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007f003f2c9a41: jmp    0x00007f003f2c96be
  0x00007f003f2c9a46: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2c9a4b: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c9a53: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop [120]=Oop [128]=Oop r8=Oop off=3288}
                                                ;*synchronization entry
                                                ; - java.util.AbstractCollection::&lt;init&gt;@-1 (line 66)
                                                ; - java.util.AbstractSet::&lt;init&gt;@1 (line 63)
                                                ; - java.util.HashSet::&lt;init&gt;@1 (line 104)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007f003f2c9a58: jmp    0x00007f003f2c9705
  0x00007f003f2c9a5d: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2c9a62: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c9a6a: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop [120]=Oop [128]=Oop r8=Oop off=3311}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.AbstractCollection::&lt;init&gt;@1 (line 66)
                                                ; - java.util.AbstractSet::&lt;init&gt;@1 (line 63)
                                                ; - java.util.HashSet::&lt;init&gt;@1 (line 104)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007f003f2c9a6f: jmp    0x00007f003f2c974c
  0x00007f003f2c9a74: mov    rdx,rdx
  0x00007f003f2c9a77: call   0x00007f003f279760  ; OopMap{rbx=Oop [120]=Oop [128]=Oop r8=Oop off=3324}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashSet::&lt;init&gt;@5 (line 105)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007f003f2c9a7c: jmp    0x00007f003f2c9799
  0x00007f003f2c9a81: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2c9a86: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c9a8e: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop [120]=Oop [128]=Oop r8=Oop rax=Oop off=3347}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::&lt;init&gt;@-1 (line 474)
                                                ; - java.util.HashSet::&lt;init&gt;@9 (line 105)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007f003f2c9a93: jmp    0x00007f003f2c97e0
  0x00007f003f2c9a98: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2c9a9d: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c9aa5: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop [120]=Oop [128]=Oop r8=Oop rax=Oop off=3370}
                                                ;*synchronization entry
                                                ; - java.util.AbstractMap::&lt;init&gt;@-1 (line 73)
                                                ; - java.util.HashMap::&lt;init&gt;@1 (line 474)
                                                ; - java.util.HashSet::&lt;init&gt;@9 (line 105)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007f003f2c9aaa: jmp    0x00007f003f2c9827
  0x00007f003f2c9aaf: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2c9ab4: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2c9abc: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop [120]=Oop [128]=Oop r8=Oop rax=Oop off=3393}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.AbstractMap::&lt;init&gt;@1 (line 73)
                                                ; - java.util.HashMap::&lt;init&gt;@1 (line 474)
                                                ; - java.util.HashSet::&lt;init&gt;@9 (line 105)
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@71 (line 1049)
                                                ;   {runtime_call}
  0x00007f003f2c9ac1: jmp    0x00007f003f2c986e
  0x00007f003f2c9ac6: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2c9ad0: mov    eax,0xa050f00
  0x00007f003f2c9ad5: call   0x00007f003f27c5e0  ; OopMap{rsi=Oop off=3418}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@28 (line 1040)
                                                ;   {runtime_call}
  0x00007f003f2c9ada: jmp    0x00007f003f2c9968
  0x00007f003f2c9adf: mov    rdx,rdx
  0x00007f003f2c9ae2: call   0x00007f003f2794a0  ; OopMap{rsi=Oop off=3431}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::getResource@28 (line 1040)
                                                ;   {runtime_call}
  0x00007f003f2c9ae7: jmp    0x00007f003f2c9977
  0x00007f003f2c9aec: nop
  0x00007f003f2c9aed: nop
  0x00007f003f2c9aee: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2c9af5: movabs r10,0x0
  0x00007f003f2c9aff: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2c9b06: movabs r10,0x0
  0x00007f003f2c9b10: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2c9b17: add    rsp,0xa0
  0x00007f003f2c9b1e: pop    rbp
  0x00007f003f2c9b1f: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2c9b24: hlt    
  0x00007f003f2c9b25: hlt    
  0x00007f003f2c9b26: hlt    
  0x00007f003f2c9b27: hlt    
  0x00007f003f2c9b28: hlt    
  0x00007f003f2c9b29: hlt    
  0x00007f003f2c9b2a: hlt    
  0x00007f003f2c9b2b: hlt    
  0x00007f003f2c9b2c: hlt    
  0x00007f003f2c9b2d: hlt    
  0x00007f003f2c9b2e: hlt    
  0x00007f003f2c9b2f: hlt    
  0x00007f003f2c9b30: hlt    
  0x00007f003f2c9b31: hlt    
  0x00007f003f2c9b32: hlt    
  0x00007f003f2c9b33: hlt    
  0x00007f003f2c9b34: hlt    
  0x00007f003f2c9b35: hlt    
  0x00007f003f2c9b36: hlt    
  0x00007f003f2c9b37: hlt    
  0x00007f003f2c9b38: hlt    
  0x00007f003f2c9b39: hlt    
  0x00007f003f2c9b3a: hlt    
  0x00007f003f2c9b3b: hlt    
  0x00007f003f2c9b3c: hlt    
  0x00007f003f2c9b3d: hlt    
  0x00007f003f2c9b3e: hlt    
  0x00007f003f2c9b3f: hlt    
[Stub Code]
  0x00007f003f2c9b40: nop                       ;   {no_reloc}
  0x00007f003f2c9b41: nop
  0x00007f003f2c9b42: nop
  0x00007f003f2c9b43: nop
  0x00007f003f2c9b44: nop
  0x00007f003f2c9b45: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c9b4f: jmp    0x00007f003f2c9b4f  ;   {runtime_call}
  0x00007f003f2c9b54: nop
  0x00007f003f2c9b55: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c9b5f: jmp    0x00007f003f2c9b5f  ;   {runtime_call}
  0x00007f003f2c9b64: nop
  0x00007f003f2c9b65: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c9b6f: jmp    0x00007f003f2c9b6f  ;   {runtime_call}
  0x00007f003f2c9b74: nop
  0x00007f003f2c9b75: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c9b7f: jmp    0x00007f003f2c9b7f  ;   {runtime_call}
  0x00007f003f2c9b84: nop
  0x00007f003f2c9b85: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c9b8f: jmp    0x00007f003f2c9b8f  ;   {runtime_call}
  0x00007f003f2c9b94: nop
  0x00007f003f2c9b95: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2c9b9f: jmp    0x00007f003f2c9b9f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2c9ba4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2c9ba9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2c9bae: sub    rsp,0x80
  0x00007f003f2c9bb5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2c9bba: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2c9bbf: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2c9bc4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2c9bc9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2c9bce: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2c9bd3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2c9bd8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2c9bdd: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2c9be2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2c9be7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2c9bec: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2c9bf1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2c9bf6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2c9bfb: mov    QWORD PTR [rsp],r15
  0x00007f003f2c9bff: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2c9c09: movabs rsi,0x7f003f2c9ba9  ;   {internal_word}
  0x00007f003f2c9c13: mov    rdx,rsp
  0x00007f003f2c9c16: and    rsp,0xfffffffffffffff0
  0x00007f003f2c9c1a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2c9c1f: hlt    
[Deopt Handler Code]
  0x00007f003f2c9c20: movabs r10,0x7f003f2c9c20  ;   {section_word}
  0x00007f003f2c9c2a: push   r10
  0x00007f003f2c9c2c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2c9c31: hlt    
  0x00007f003f2c9c32: hlt    
  0x00007f003f2c9c33: hlt    
  0x00007f003f2c9c34: hlt    
  0x00007f003f2c9c35: hlt    
  0x00007f003f2c9c36: hlt    
  0x00007f003f2c9c37: hlt    
<nmethod compile_id='120' compiler='C1' level='3' entry='0x00007f003f2c8d80' size='5800' address='0x00007f003f2c8b50' relocation_offset='312' insts_offset='560' stub_offset='4080' scopes_data_offset='4408' scopes_pcs_offset='4912' dependencies_offset='5744' handler_table_offset='5752' nul_chk_table_offset='5776' metadata_offset='4328' method='sun/misc/URLClassPath$JarLoader getResource (Ljava/lang/String;Z)Lsun/misc/Resource;' bytes='85' count='656' iicount='656' stamp='0.547'/>
<writer thread='139637818533632'/>
<task_queued compile_id='123' method='java/util/jar/JarFile getEntry (Ljava/lang/String;)Ljava/util/zip/ZipEntry;' bytes='22' count='768' iicount='768' level='3' stamp='0.547' comment='tiered' hot_count='768'/>
[Loaded jdk.vm.ci.meta.ConstantReflectionProvider from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotConstantReflectionProvider from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/Arrays$ArrayList.indexOf  [0x00007f003f2ca3c0, 0x00007f003f2ca9c8]  1544 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038a65f60} &apos;indexOf&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/Arrays$ArrayList&apos;
  # this:     rsi:rsi   = &apos;java/util/Arrays$ArrayList&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2ca3c0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2ca3c4: shl    r10,0x3
  0x00007f003f2ca3c8: cmp    r10,rax
  0x00007f003f2ca3cb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2ca3d1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2ca3dc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2ca3e0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2ca3e7: push   rbp
  0x00007f003f2ca3e8: sub    rsp,0x40
  0x00007f003f2ca3ec: mov    QWORD PTR [rsp+0x28],rdx
  0x00007f003f2ca3f1: movabs rdi,0x7f0038a8a590  ;   {metadata(method data for {method} {0x00007f0038a65f60} &apos;indexOf&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/Arrays$ArrayList&apos;)}
  0x00007f003f2ca3fb: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2ca401: add    ebx,0x8
  0x00007f003f2ca404: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2ca40a: movabs rdi,0x7f0038a65f60  ;   {metadata({method} {0x00007f0038a65f60} &apos;indexOf&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/Arrays$ArrayList&apos;)}
  0x00007f003f2ca414: and    ebx,0x1ff8
  0x00007f003f2ca41a: cmp    ebx,0x0
  0x00007f003f2ca41d: je     0x00007f003f2ca884  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@0 (line 3853)

  0x00007f003f2ca423: mov    edi,DWORD PTR [rsi+0x10]
  0x00007f003f2ca426: shl    rdi,0x3            ;*getfield a {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@1 (line 3853)

  0x00007f003f2ca42a: mov    QWORD PTR [rsp+0x30],rdi
  0x00007f003f2ca42f: cmp    rdx,0x0
  0x00007f003f2ca433: movabs rsi,0x7f0038a8a590  ;   {metadata(method data for {method} {0x00007f0038a65f60} &apos;indexOf&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/Arrays$ArrayList&apos;)}
  0x00007f003f2ca43d: movabs rbx,0x130
  0x00007f003f2ca447: jne    0x00007f003f2ca457
  0x00007f003f2ca44d: movabs rbx,0x140
  0x00007f003f2ca457: mov    rax,QWORD PTR [rsi+rbx*1]
  0x00007f003f2ca45b: lea    rax,[rax+0x1]
  0x00007f003f2ca45f: mov    QWORD PTR [rsi+rbx*1],rax
  0x00007f003f2ca463: jne    0x00007f003f2ca547  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@6 (line 3854)

  0x00007f003f2ca469: mov    esi,0x0
  0x00007f003f2ca46e: jmp    0x00007f003f2ca507  ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@11 (line 3855)

  0x00007f003f2ca473: nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f003f2ca478: movsxd rdx,esi
  0x00007f003f2ca47b: mov    edx,DWORD PTR [rdi+rdx*4+0x10]
  0x00007f003f2ca47f: shl    rdx,0x3            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@19 (line 3856)

  0x00007f003f2ca483: cmp    rdx,0x0
  0x00007f003f2ca487: movabs rdx,0x7f0038a8a590  ;   {metadata(method data for {method} {0x00007f0038a65f60} &apos;indexOf&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/Arrays$ArrayList&apos;)}
  0x00007f003f2ca491: movabs rbx,0x170
  0x00007f003f2ca49b: jne    0x00007f003f2ca4ab
  0x00007f003f2ca4a1: movabs rbx,0x180
  0x00007f003f2ca4ab: mov    rax,QWORD PTR [rdx+rbx*1]
  0x00007f003f2ca4af: lea    rax,[rax+0x1]
  0x00007f003f2ca4b3: mov    QWORD PTR [rdx+rbx*1],rax
  0x00007f003f2ca4b7: je     0x00007f003f2ca854  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@20 (line 3856)

  0x00007f003f2ca4bd: inc    esi
  0x00007f003f2ca4bf: movabs rdx,0x7f0038a8a590  ;   {metadata(method data for {method} {0x00007f0038a65f60} &apos;indexOf&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/Arrays$ArrayList&apos;)}
  0x00007f003f2ca4c9: mov    ebx,DWORD PTR [rdx+0x100]
  0x00007f003f2ca4cf: add    ebx,0x8
  0x00007f003f2ca4d2: mov    DWORD PTR [rdx+0x100],ebx
  0x00007f003f2ca4d8: movabs rdx,0x7f0038a65f60  ;   {metadata({method} {0x00007f0038a65f60} &apos;indexOf&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/Arrays$ArrayList&apos;)}
  0x00007f003f2ca4e2: and    ebx,0xfff8
  0x00007f003f2ca4e8: cmp    ebx,0x0
  0x00007f003f2ca4eb: je     0x00007f003f2ca89b  ; OopMap{rdi=Oop [48]=Oop off=305}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@28 (line 3855)

  0x00007f003f2ca4f1: test   DWORD PTR [rip+0x1b0f7c09],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2ca4f7: movabs rdx,0x7f0038a8a590  ;   {metadata(method data for {method} {0x00007f0038a65f60} &apos;indexOf&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/Arrays$ArrayList&apos;)}
  0x00007f003f2ca501: inc    DWORD PTR [rdx+0x190]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@28 (line 3855)

  0x00007f003f2ca507: mov    edx,DWORD PTR [rdi+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@13 (line 3855)
                                                ; implicit exception: dispatches to 0x00007f003f2ca8b2
  0x00007f003f2ca50a: cmp    esi,edx
  0x00007f003f2ca50c: movabs rdx,0x7f0038a8a590  ;   {metadata(method data for {method} {0x00007f0038a65f60} &apos;indexOf&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/Arrays$ArrayList&apos;)}
  0x00007f003f2ca516: movabs rbx,0x150
  0x00007f003f2ca520: jge    0x00007f003f2ca530
  0x00007f003f2ca526: movabs rbx,0x160
  0x00007f003f2ca530: mov    rax,QWORD PTR [rdx+rbx*1]
  0x00007f003f2ca534: lea    rax,[rax+0x1]
  0x00007f003f2ca538: mov    QWORD PTR [rdx+rbx*1],rax
  0x00007f003f2ca53c: jge    0x00007f003f2ca863
  0x00007f003f2ca542: jmp    0x00007f003f2ca478  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@14 (line 3855)

  0x00007f003f2ca547: mov    ebx,0x0
  0x00007f003f2ca54c: jmp    0x00007f003f2ca805  ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@36 (line 3859)

  0x00007f003f2ca551: nop    DWORD PTR [rax+0x0]
  0x00007f003f2ca558: movsxd rsi,ebx
  0x00007f003f2ca55b: mov    esi,DWORD PTR [rdi+rsi*4+0x10]
  0x00007f003f2ca55f: shl    rsi,0x3            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@45 (line 3860)

  0x00007f003f2ca563: cmp    rax,QWORD PTR [rdx]  ; implicit exception: dispatches to 0x00007f003f2ca8b7
  0x00007f003f2ca566: mov    rax,rdx
  0x00007f003f2ca569: movabs rcx,0x7f0038a8a590  ;   {metadata(method data for {method} {0x00007f0038a65f60} &apos;indexOf&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/Arrays$ArrayList&apos;)}
  0x00007f003f2ca573: mov    eax,DWORD PTR [rax+0x8]
  0x00007f003f2ca576: shl    rax,0x3
  0x00007f003f2ca57a: cmp    rax,QWORD PTR [rcx+0x1f0]
  0x00007f003f2ca581: jne    0x00007f003f2ca590
  0x00007f003f2ca583: add    QWORD PTR [rcx+0x1f8],0x1
  0x00007f003f2ca58b: jmp    0x00007f003f2ca752
  0x00007f003f2ca590: cmp    rax,QWORD PTR [rcx+0x200]
  0x00007f003f2ca597: jne    0x00007f003f2ca5a6
  0x00007f003f2ca599: add    QWORD PTR [rcx+0x208],0x1
  0x00007f003f2ca5a1: jmp    0x00007f003f2ca752
  0x00007f003f2ca5a6: cmp    rax,QWORD PTR [rcx+0x210]
  0x00007f003f2ca5ad: jne    0x00007f003f2ca5bc
  0x00007f003f2ca5af: add    QWORD PTR [rcx+0x218],0x1
  0x00007f003f2ca5b7: jmp    0x00007f003f2ca752
  0x00007f003f2ca5bc: cmp    rax,QWORD PTR [rcx+0x220]
  0x00007f003f2ca5c3: jne    0x00007f003f2ca5d2
  0x00007f003f2ca5c5: add    QWORD PTR [rcx+0x228],0x1
  0x00007f003f2ca5cd: jmp    0x00007f003f2ca752
  0x00007f003f2ca5d2: cmp    rax,QWORD PTR [rcx+0x230]
  0x00007f003f2ca5d9: jne    0x00007f003f2ca5e8
  0x00007f003f2ca5db: add    QWORD PTR [rcx+0x238],0x1
  0x00007f003f2ca5e3: jmp    0x00007f003f2ca752
  0x00007f003f2ca5e8: cmp    rax,QWORD PTR [rcx+0x240]
  0x00007f003f2ca5ef: jne    0x00007f003f2ca5fe
  0x00007f003f2ca5f1: add    QWORD PTR [rcx+0x248],0x1
  0x00007f003f2ca5f9: jmp    0x00007f003f2ca752
  0x00007f003f2ca5fe: cmp    rax,QWORD PTR [rcx+0x250]
  0x00007f003f2ca605: jne    0x00007f003f2ca614
  0x00007f003f2ca607: add    QWORD PTR [rcx+0x258],0x1
  0x00007f003f2ca60f: jmp    0x00007f003f2ca752
  0x00007f003f2ca614: cmp    rax,QWORD PTR [rcx+0x260]
  0x00007f003f2ca61b: jne    0x00007f003f2ca62a
  0x00007f003f2ca61d: add    QWORD PTR [rcx+0x268],0x1
  0x00007f003f2ca625: jmp    0x00007f003f2ca752
  0x00007f003f2ca62a: cmp    QWORD PTR [rcx+0x1f0],0x0
  0x00007f003f2ca635: jne    0x00007f003f2ca64e
  0x00007f003f2ca637: mov    QWORD PTR [rcx+0x1f0],rax
  0x00007f003f2ca63e: mov    QWORD PTR [rcx+0x1f8],0x1
  0x00007f003f2ca649: jmp    0x00007f003f2ca752
  0x00007f003f2ca64e: cmp    QWORD PTR [rcx+0x200],0x0
  0x00007f003f2ca659: jne    0x00007f003f2ca672
  0x00007f003f2ca65b: mov    QWORD PTR [rcx+0x200],rax
  0x00007f003f2ca662: mov    QWORD PTR [rcx+0x208],0x1
  0x00007f003f2ca66d: jmp    0x00007f003f2ca752
  0x00007f003f2ca672: cmp    QWORD PTR [rcx+0x210],0x0
  0x00007f003f2ca67d: jne    0x00007f003f2ca696
  0x00007f003f2ca67f: mov    QWORD PTR [rcx+0x210],rax
  0x00007f003f2ca686: mov    QWORD PTR [rcx+0x218],0x1
  0x00007f003f2ca691: jmp    0x00007f003f2ca752
  0x00007f003f2ca696: cmp    QWORD PTR [rcx+0x220],0x0
  0x00007f003f2ca6a1: jne    0x00007f003f2ca6ba
  0x00007f003f2ca6a3: mov    QWORD PTR [rcx+0x220],rax
  0x00007f003f2ca6aa: mov    QWORD PTR [rcx+0x228],0x1
  0x00007f003f2ca6b5: jmp    0x00007f003f2ca752
  0x00007f003f2ca6ba: cmp    QWORD PTR [rcx+0x230],0x0
  0x00007f003f2ca6c5: jne    0x00007f003f2ca6de
  0x00007f003f2ca6c7: mov    QWORD PTR [rcx+0x230],rax
  0x00007f003f2ca6ce: mov    QWORD PTR [rcx+0x238],0x1
  0x00007f003f2ca6d9: jmp    0x00007f003f2ca752
  0x00007f003f2ca6de: cmp    QWORD PTR [rcx+0x240],0x0
  0x00007f003f2ca6e9: jne    0x00007f003f2ca702
  0x00007f003f2ca6eb: mov    QWORD PTR [rcx+0x240],rax
  0x00007f003f2ca6f2: mov    QWORD PTR [rcx+0x248],0x1
  0x00007f003f2ca6fd: jmp    0x00007f003f2ca752
  0x00007f003f2ca702: cmp    QWORD PTR [rcx+0x250],0x0
  0x00007f003f2ca70d: jne    0x00007f003f2ca726
  0x00007f003f2ca70f: mov    QWORD PTR [rcx+0x250],rax
  0x00007f003f2ca716: mov    QWORD PTR [rcx+0x258],0x1
  0x00007f003f2ca721: jmp    0x00007f003f2ca752
  0x00007f003f2ca726: cmp    QWORD PTR [rcx+0x260],0x0
  0x00007f003f2ca731: jne    0x00007f003f2ca74a
  0x00007f003f2ca733: mov    QWORD PTR [rcx+0x260],rax
  0x00007f003f2ca73a: mov    QWORD PTR [rcx+0x268],0x1
  0x00007f003f2ca745: jmp    0x00007f003f2ca752
  0x00007f003f2ca74a: add    QWORD PTR [rcx+0x1e0],0x1
  0x00007f003f2ca752: mov    rax,rdx
  0x00007f003f2ca755: mov    rdx,rsi
  0x00007f003f2ca758: mov    rsi,rax            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@46 (line 3860)

  0x00007f003f2ca75b: mov    DWORD PTR [rsp+0x20],ebx
  0x00007f003f2ca75f: nop
  0x00007f003f2ca760: nop
  0x00007f003f2ca761: nop
  0x00007f003f2ca762: nop
  0x00007f003f2ca763: nop
  0x00007f003f2ca764: nop
  0x00007f003f2ca765: movabs rax,0xffffffffffffffff
  0x00007f003f2ca76f: call   0x00007f003f1c4f60  ; OopMap{[40]=Oop [48]=Oop off=948}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@46 (line 3860)
                                                ;   {virtual_call}
  0x00007f003f2ca774: cmp    eax,0x0
  0x00007f003f2ca777: movabs rax,0x7f0038a8a590  ;   {metadata(method data for {method} {0x00007f0038a65f60} &apos;indexOf&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/Arrays$ArrayList&apos;)}
  0x00007f003f2ca781: movabs rsi,0x278
  0x00007f003f2ca78b: je     0x00007f003f2ca79b
  0x00007f003f2ca791: movabs rsi,0x288
  0x00007f003f2ca79b: mov    rdi,QWORD PTR [rax+rsi*1]
  0x00007f003f2ca79f: lea    rdi,[rdi+0x1]
  0x00007f003f2ca7a3: mov    QWORD PTR [rax+rsi*1],rdi
  0x00007f003f2ca7a7: mov    ebx,DWORD PTR [rsp+0x20]
  0x00007f003f2ca7ab: jne    0x00007f003f2ca845  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@49 (line 3860)

  0x00007f003f2ca7b1: inc    ebx
  0x00007f003f2ca7b3: movabs rax,0x7f0038a8a590  ;   {metadata(method data for {method} {0x00007f0038a65f60} &apos;indexOf&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/Arrays$ArrayList&apos;)}
  0x00007f003f2ca7bd: mov    esi,DWORD PTR [rax+0x100]
  0x00007f003f2ca7c3: add    esi,0x8
  0x00007f003f2ca7c6: mov    DWORD PTR [rax+0x100],esi
  0x00007f003f2ca7cc: movabs rax,0x7f0038a65f60  ;   {metadata({method} {0x00007f0038a65f60} &apos;indexOf&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/Arrays$ArrayList&apos;)}
  0x00007f003f2ca7d6: and    esi,0xfff8
  0x00007f003f2ca7dc: cmp    esi,0x0
  0x00007f003f2ca7df: je     0x00007f003f2ca8bc  ; OopMap{[40]=Oop [48]=Oop off=1061}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@57 (line 3859)

  0x00007f003f2ca7e5: test   DWORD PTR [rip+0x1b0f7915],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2ca7eb: movabs rax,0x7f0038a8a590  ;   {metadata(method data for {method} {0x00007f0038a65f60} &apos;indexOf&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/Arrays$ArrayList&apos;)}
  0x00007f003f2ca7f5: inc    DWORD PTR [rax+0x298]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@57 (line 3859)

  0x00007f003f2ca7fb: mov    rdi,QWORD PTR [rsp+0x30]
  0x00007f003f2ca800: mov    rdx,QWORD PTR [rsp+0x28]
  0x00007f003f2ca805: mov    esi,DWORD PTR [rdi+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@38 (line 3859)
                                                ; implicit exception: dispatches to 0x00007f003f2ca8d3
  0x00007f003f2ca808: cmp    ebx,esi
  0x00007f003f2ca80a: movabs rsi,0x7f0038a8a590  ;   {metadata(method data for {method} {0x00007f0038a65f60} &apos;indexOf&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/Arrays$ArrayList&apos;)}
  0x00007f003f2ca814: movabs rax,0x1c0
  0x00007f003f2ca81e: jge    0x00007f003f2ca82e
  0x00007f003f2ca824: movabs rax,0x1d0
  0x00007f003f2ca82e: mov    rcx,QWORD PTR [rsi+rax*1]
  0x00007f003f2ca832: lea    rcx,[rcx+0x1]
  0x00007f003f2ca836: mov    QWORD PTR [rsi+rax*1],rcx
  0x00007f003f2ca83a: jge    0x00007f003f2ca873
  0x00007f003f2ca840: jmp    0x00007f003f2ca558  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@39 (line 3859)

  0x00007f003f2ca845: mov    rax,rbx
  0x00007f003f2ca848: add    rsp,0x40
  0x00007f003f2ca84c: pop    rbp
  0x00007f003f2ca84d: test   DWORD PTR [rip+0x1b0f78ad],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2ca853: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@53 (line 3861)

  0x00007f003f2ca854: mov    rax,rsi
  0x00007f003f2ca857: add    rsp,0x40
  0x00007f003f2ca85b: pop    rbp
  0x00007f003f2ca85c: test   DWORD PTR [rip+0x1b0f789e],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2ca862: ret                       ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@24 (line 3857)

  0x00007f003f2ca863: movabs rax,0x7f0038a8a590  ;   {metadata(method data for {method} {0x00007f0038a65f60} &apos;indexOf&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/Arrays$ArrayList&apos;)}
  0x00007f003f2ca86d: inc    DWORD PTR [rax+0x1a8]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@31 (line 3855)

  0x00007f003f2ca873: mov    eax,0xffffffff
  0x00007f003f2ca878: add    rsp,0x40
  0x00007f003f2ca87c: pop    rbp
  0x00007f003f2ca87d: test   DWORD PTR [rip+0x1b0f787d],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2ca883: ret    
  0x00007f003f2ca884: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2ca889: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2ca891: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop [40]=Oop off=1238}
                                                ;*synchronization entry
                                                ; - java.util.Arrays$ArrayList::indexOf@-1 (line 3853)
                                                ;   {runtime_call}
  0x00007f003f2ca896: jmp    0x00007f003f2ca423
  0x00007f003f2ca89b: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2ca8a0: mov    QWORD PTR [rsp],0x1c
  0x00007f003f2ca8a8: call   0x00007f003f27d5e0  ; OopMap{rdi=Oop [48]=Oop off=1261}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@28 (line 3855)
                                                ;   {runtime_call}
  0x00007f003f2ca8ad: jmp    0x00007f003f2ca4f1
  0x00007f003f2ca8b2: call   0x00007f003f279000  ; OopMap{rdi=Oop [48]=Oop off=1271}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@13 (line 3855)
                                                ;   {runtime_call}
  0x00007f003f2ca8b7: call   0x00007f003f279000  ; OopMap{rdi=Oop [48]=Oop rdx=Oop [40]=Oop rsi=Oop off=1276}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@46 (line 3860)
                                                ;   {runtime_call}
  0x00007f003f2ca8bc: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2ca8c1: mov    QWORD PTR [rsp],0x39
  0x00007f003f2ca8c9: call   0x00007f003f27d5e0  ; OopMap{[40]=Oop [48]=Oop off=1294}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@57 (line 3859)
                                                ;   {runtime_call}
  0x00007f003f2ca8ce: jmp    0x00007f003f2ca7e5
  0x00007f003f2ca8d3: call   0x00007f003f279000  ; OopMap{rdi=Oop [48]=Oop rdx=Oop [40]=Oop off=1304}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays$ArrayList::indexOf@38 (line 3859)
                                                ;   {runtime_call}
  0x00007f003f2ca8d8: nop
  0x00007f003f2ca8d9: nop
  0x00007f003f2ca8da: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2ca8e1: movabs r10,0x0
  0x00007f003f2ca8eb: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2ca8f2: movabs r10,0x0
  0x00007f003f2ca8fc: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2ca903: add    rsp,0x40
  0x00007f003f2ca907: pop    rbp
  0x00007f003f2ca908: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2ca90d: hlt    
  0x00007f003f2ca90e: hlt    
  0x00007f003f2ca90f: hlt    
  0x00007f003f2ca910: hlt    
  0x00007f003f2ca911: hlt    
  0x00007f003f2ca912: hlt    
  0x00007f003f2ca913: hlt    
  0x00007f003f2ca914: hlt    
  0x00007f003f2ca915: hlt    
  0x00007f003f2ca916: hlt    
  0x00007f003f2ca917: hlt    
  0x00007f003f2ca918: hlt    
  0x00007f003f2ca919: hlt    
  0x00007f003f2ca91a: hlt    
  0x00007f003f2ca91b: hlt    
  0x00007f003f2ca91c: hlt    
  0x00007f003f2ca91d: hlt    
  0x00007f003f2ca91e: hlt    
  0x00007f003f2ca91f: hlt    
[Stub Code]
  0x00007f003f2ca920: nop                       ;   {no_reloc}
  0x00007f003f2ca921: nop
  0x00007f003f2ca922: nop
  0x00007f003f2ca923: nop
  0x00007f003f2ca924: nop
  0x00007f003f2ca925: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2ca92f: jmp    0x00007f003f2ca92f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2ca934: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2ca939: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2ca93e: sub    rsp,0x80
  0x00007f003f2ca945: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2ca94a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2ca94f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2ca954: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2ca959: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2ca95e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2ca963: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2ca968: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2ca96d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2ca972: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2ca977: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2ca97c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2ca981: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2ca986: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2ca98b: mov    QWORD PTR [rsp],r15
  0x00007f003f2ca98f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2ca999: movabs rsi,0x7f003f2ca939  ;   {internal_word}
  0x00007f003f2ca9a3: mov    rdx,rsp
  0x00007f003f2ca9a6: and    rsp,0xfffffffffffffff0
  0x00007f003f2ca9aa: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2ca9af: hlt    
[Deopt Handler Code]
  0x00007f003f2ca9b0: movabs r10,0x7f003f2ca9b0  ;   {section_word}
  0x00007f003f2ca9ba: push   r10
  0x00007f003f2ca9bc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2ca9c1: hlt    
  0x00007f003f2ca9c2: hlt    
  0x00007f003f2ca9c3: hlt    
  0x00007f003f2ca9c4: hlt    
  0x00007f003f2ca9c5: hlt    
  0x00007f003f2ca9c6: hlt    
  0x00007f003f2ca9c7: hlt    
<nmethod compile_id='119' compiler='C1' level='3' entry='0x00007f003f2ca3c0' size='2720' address='0x00007f003f2ca210' relocation_offset='312' insts_offset='432' stub_offset='1808' scopes_data_offset='1984' scopes_pcs_offset='2200' dependencies_offset='2680' nul_chk_table_offset='2688' metadata_offset='1976' method='java/util/Arrays$ArrayList indexOf (Ljava/lang/Object;)I' bytes='62' count='146' backedge_count='2497' iicount='146' stamp='0.550'/>
<writer thread='139637818533632'/>
<task_queued compile_id='124' method='sun/misc/URLClassPath$Loader getBaseURL ()Ljava/net/URL;' bytes='5' count='128' iicount='128' level='1' stamp='0.550' comment='tiered' hot_count='128'/>
[Loaded jdk.vm.ci.meta.MethodHandleAccessProvider from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotMethodHandleAccessProvider from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='125' method='java/lang/Character toUpperCase (C)C' bytes='6' count='512' iicount='512' level='3' stamp='0.550' comment='tiered' hot_count='512'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
sun/misc/URLClassPath$JarLoader.ensureOpen  [0x00007f003f2cae80, 0x00007f003f2cb408]  1416 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038990568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;
  #           [sp+0x60]  (sp of caller)
  0x00007f003f2cae80: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2cae84: shl    r10,0x3
  0x00007f003f2cae88: cmp    r10,rax
  0x00007f003f2cae8b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2cae91: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2cae9c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2caea0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2caea7: push   rbp
  0x00007f003f2caea8: sub    rsp,0x50
  0x00007f003f2caeac: mov    rbx,rsi
  0x00007f003f2caeaf: movabs rdx,0x7f0038a64c20  ;   {metadata(method data for {method} {0x00007f0038990568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2caeb9: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2caebf: add    esi,0x8
  0x00007f003f2caec2: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2caec8: movabs rdx,0x7f0038990568  ;   {metadata({method} {0x00007f0038990568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2caed2: and    esi,0x1ff8
  0x00007f003f2caed8: cmp    esi,0x0
  0x00007f003f2caedb: je     0x00007f003f2cb2cb  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@0 (line 866)

  0x00007f003f2caee1: mov    edx,DWORD PTR [rbx+0x18]
  0x00007f003f2caee4: shl    rdx,0x3            ;*getfield jar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@1 (line 866)

  0x00007f003f2caee8: cmp    rdx,0x0
  0x00007f003f2caeec: movabs rdx,0x7f0038a64c20  ;   {metadata(method data for {method} {0x00007f0038990568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2caef6: movabs rsi,0x130
  0x00007f003f2caf00: jne    0x00007f003f2caf10
  0x00007f003f2caf06: movabs rsi,0x140
  0x00007f003f2caf10: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2caf14: lea    rdi,[rdi+0x1]
  0x00007f003f2caf18: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2caf1c: jne    0x00007f003f2cb044  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@4 (line 866)

  0x00007f003f2caf22: movabs rdx,0x7c004dd48    ;   {metadata(&apos;sun/misc/URLClassPath$JarLoader$1&apos;)}
  0x00007f003f2caf2c: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2caf30: lea    rdi,[rax+0x10]
  0x00007f003f2caf34: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2caf38: ja     0x00007f003f2cb2e2
  0x00007f003f2caf3e: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2caf42: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2caf49: mov    QWORD PTR [rax],rcx
  0x00007f003f2caf4c: mov    rcx,rdx
  0x00007f003f2caf4f: shr    rcx,0x3
  0x00007f003f2caf53: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2caf56: xor    rcx,rcx
  0x00007f003f2caf59: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2caf5c: xor    rcx,rcx            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@7 (line 868)

  0x00007f003f2caf5f: mov    rsi,rax
  0x00007f003f2caf62: movabs rdx,0x7f0038a64c20  ;   {metadata(method data for {method} {0x00007f0038990568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2caf6c: add    QWORD PTR [rdx+0x150],0x1
  0x00007f003f2caf74: movabs rsi,0x7f0038a8a888  ;   {metadata(method data for {method} {0x00007f0038a393e8} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath$JarLoader;)V&apos; in &apos;sun/misc/URLClassPath$JarLoader$1&apos;)}
  0x00007f003f2caf7e: mov    edx,DWORD PTR [rsi+0xfc]
  0x00007f003f2caf84: add    edx,0x8
  0x00007f003f2caf87: mov    DWORD PTR [rsi+0xfc],edx
  0x00007f003f2caf8d: movabs rsi,0x7f0038a393e8  ;   {metadata({method} {0x00007f0038a393e8} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath$JarLoader;)V&apos; in &apos;sun/misc/URLClassPath$JarLoader$1&apos;)}
  0x00007f003f2caf97: and    edx,0x7ffff8
  0x00007f003f2caf9d: cmp    edx,0x0
  0x00007f003f2cafa0: je     0x00007f003f2cb2ef
  0x00007f003f2cafa6: mov    r10,rbx
  0x00007f003f2cafa9: shr    r10,0x3
  0x00007f003f2cafad: mov    DWORD PTR [rax+0xc],r10d
  0x00007f003f2cafb1: mov    rsi,rax
  0x00007f003f2cafb4: shr    rsi,0x9
  0x00007f003f2cafb8: movabs rdx,0x7f003ae7c000
  0x00007f003f2cafc2: mov    BYTE PTR [rsi+rdx*1],0x0  ;*putfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader$1::&lt;init&gt;@2 (line 869)
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@12 (line 868)

  0x00007f003f2cafc6: mov    rsi,rax
  0x00007f003f2cafc9: movabs rdx,0x7f0038a8a888  ;   {metadata(method data for {method} {0x00007f0038a393e8} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath$JarLoader;)V&apos; in &apos;sun/misc/URLClassPath$JarLoader$1&apos;)}
  0x00007f003f2cafd3: add    QWORD PTR [rdx+0x130],0x1
  0x00007f003f2cafdb: movabs rsi,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2cafe5: mov    edx,DWORD PTR [rsi+0xfc]
  0x00007f003f2cafeb: add    edx,0x8
  0x00007f003f2cafee: mov    DWORD PTR [rsi+0xfc],edx
  0x00007f003f2caff4: movabs rsi,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2caffe: and    edx,0x7ffff8
  0x00007f003f2cb004: cmp    edx,0x0
  0x00007f003f2cb007: je     0x00007f003f2cb306
  0x00007f003f2cb00d: mov    edx,DWORD PTR [rbx+0x30]
  0x00007f003f2cb010: shl    rdx,0x3            ;*getfield acc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@16 (line 868)

  0x00007f003f2cb014: movabs rsi,0x7f0038a64c20  ;   {metadata(method data for {method} {0x00007f0038990568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2cb01e: add    QWORD PTR [rsi+0x160],0x1
  0x00007f003f2cb026: mov    rsi,rax            ;*invokestatic doPrivileged {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@19 (line 868)

  0x00007f003f2cb029: nop
  0x00007f003f2cb02a: nop
  0x00007f003f2cb02b: nop
  0x00007f003f2cb02c: nop
  0x00007f003f2cb02d: nop
  0x00007f003f2cb02e: nop
  0x00007f003f2cb02f: call   0x00007f003f1c5160  ; OopMap{off=436}
                                                ;*invokestatic doPrivileged {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@19 (line 868)
                                                ;   {static_call}
  0x00007f003f2cb034: movabs rax,0x7f0038a64c20  ;   {metadata(method data for {method} {0x00007f0038990568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2cb03e: inc    DWORD PTR [rax+0x170]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@23 (line 903)

  0x00007f003f2cb044: add    rsp,0x50
  0x00007f003f2cb048: pop    rbp
  0x00007f003f2cb049: test   DWORD PTR [rip+0x1b0f70b1],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2cb04f: ret                       ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@35 (line 905)

  0x00007f003f2cb050: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2cb057: xor    r10,r10
  0x00007f003f2cb05a: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2cb061: xor    r10,r10
  0x00007f003f2cb064: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2cb06b: mov    rsi,rax
  0x00007f003f2cb06e: movabs rdi,0x7f0038a64c20  ;   {metadata(method data for {method} {0x00007f0038990568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2cb078: add    QWORD PTR [rdi+0x1a0],0x1
  0x00007f003f2cb080: mov    eax,DWORD PTR [rax+0x20]
  0x00007f003f2cb083: shl    rax,0x3            ;*getfield exception {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.security.PrivilegedActionException::getException@1 (line 86)
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@28 (line 902)

  0x00007f003f2cb087: cmp    rax,0x0
  0x00007f003f2cb08b: jne    0x00007f003f2cb0a6
  0x00007f003f2cb08d: movabs rdi,0x7f0038a64c20  ;   {metadata(method data for {method} {0x00007f0038990568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2cb097: or     DWORD PTR [rdi+0x218],0x100
  0x00007f003f2cb0a1: jmp    0x00007f003f2cb2c3
  0x00007f003f2cb0a6: movabs rbx,0x7c00543d8    ;   {metadata(&apos;java/io/IOException&apos;)}
  0x00007f003f2cb0b0: mov    edi,DWORD PTR [rax+0x8]
  0x00007f003f2cb0b3: shl    rdi,0x3
  0x00007f003f2cb0b7: cmp    rbx,QWORD PTR [rdi+0x40]
  0x00007f003f2cb0bb: jne    0x00007f003f2cb2a7
  0x00007f003f2cb0c1: movabs rdi,0x7f0038a64c20  ;   {metadata(method data for {method} {0x00007f0038990568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2cb0cb: mov    ebx,DWORD PTR [rax+0x8]
  0x00007f003f2cb0ce: shl    rbx,0x3
  0x00007f003f2cb0d2: cmp    rbx,QWORD PTR [rdi+0x230]
  0x00007f003f2cb0d9: jne    0x00007f003f2cb0e8
  0x00007f003f2cb0db: add    QWORD PTR [rdi+0x238],0x1
  0x00007f003f2cb0e3: jmp    0x00007f003f2cb2c3
  0x00007f003f2cb0e8: cmp    rbx,QWORD PTR [rdi+0x240]
  0x00007f003f2cb0ef: jne    0x00007f003f2cb0fe
  0x00007f003f2cb0f1: add    QWORD PTR [rdi+0x248],0x1
  0x00007f003f2cb0f9: jmp    0x00007f003f2cb2c3
  0x00007f003f2cb0fe: cmp    rbx,QWORD PTR [rdi+0x250]
  0x00007f003f2cb105: jne    0x00007f003f2cb114
  0x00007f003f2cb107: add    QWORD PTR [rdi+0x258],0x1
  0x00007f003f2cb10f: jmp    0x00007f003f2cb2c3
  0x00007f003f2cb114: cmp    rbx,QWORD PTR [rdi+0x260]
  0x00007f003f2cb11b: jne    0x00007f003f2cb12a
  0x00007f003f2cb11d: add    QWORD PTR [rdi+0x268],0x1
  0x00007f003f2cb125: jmp    0x00007f003f2cb2c3
  0x00007f003f2cb12a: cmp    rbx,QWORD PTR [rdi+0x270]
  0x00007f003f2cb131: jne    0x00007f003f2cb140
  0x00007f003f2cb133: add    QWORD PTR [rdi+0x278],0x1
  0x00007f003f2cb13b: jmp    0x00007f003f2cb2c3
  0x00007f003f2cb140: cmp    rbx,QWORD PTR [rdi+0x280]
  0x00007f003f2cb147: jne    0x00007f003f2cb156
  0x00007f003f2cb149: add    QWORD PTR [rdi+0x288],0x1
  0x00007f003f2cb151: jmp    0x00007f003f2cb2c3
  0x00007f003f2cb156: cmp    rbx,QWORD PTR [rdi+0x290]
  0x00007f003f2cb15d: jne    0x00007f003f2cb16c
  0x00007f003f2cb15f: add    QWORD PTR [rdi+0x298],0x1
  0x00007f003f2cb167: jmp    0x00007f003f2cb2c3
  0x00007f003f2cb16c: cmp    rbx,QWORD PTR [rdi+0x2a0]
  0x00007f003f2cb173: jne    0x00007f003f2cb182
  0x00007f003f2cb175: add    QWORD PTR [rdi+0x2a8],0x1
  0x00007f003f2cb17d: jmp    0x00007f003f2cb2c3
  0x00007f003f2cb182: cmp    QWORD PTR [rdi+0x230],0x0
  0x00007f003f2cb18d: jne    0x00007f003f2cb1a6
  0x00007f003f2cb18f: mov    QWORD PTR [rdi+0x230],rbx
  0x00007f003f2cb196: mov    QWORD PTR [rdi+0x238],0x1
  0x00007f003f2cb1a1: jmp    0x00007f003f2cb2c3
  0x00007f003f2cb1a6: cmp    QWORD PTR [rdi+0x240],0x0
  0x00007f003f2cb1b1: jne    0x00007f003f2cb1ca
  0x00007f003f2cb1b3: mov    QWORD PTR [rdi+0x240],rbx
  0x00007f003f2cb1ba: mov    QWORD PTR [rdi+0x248],0x1
  0x00007f003f2cb1c5: jmp    0x00007f003f2cb2c3
  0x00007f003f2cb1ca: cmp    QWORD PTR [rdi+0x250],0x0
  0x00007f003f2cb1d5: jne    0x00007f003f2cb1ee
  0x00007f003f2cb1d7: mov    QWORD PTR [rdi+0x250],rbx
  0x00007f003f2cb1de: mov    QWORD PTR [rdi+0x258],0x1
  0x00007f003f2cb1e9: jmp    0x00007f003f2cb2c3
  0x00007f003f2cb1ee: cmp    QWORD PTR [rdi+0x260],0x0
  0x00007f003f2cb1f9: jne    0x00007f003f2cb212
  0x00007f003f2cb1fb: mov    QWORD PTR [rdi+0x260],rbx
  0x00007f003f2cb202: mov    QWORD PTR [rdi+0x268],0x1
  0x00007f003f2cb20d: jmp    0x00007f003f2cb2c3
  0x00007f003f2cb212: cmp    QWORD PTR [rdi+0x270],0x0
  0x00007f003f2cb21d: jne    0x00007f003f2cb236
  0x00007f003f2cb21f: mov    QWORD PTR [rdi+0x270],rbx
  0x00007f003f2cb226: mov    QWORD PTR [rdi+0x278],0x1
  0x00007f003f2cb231: jmp    0x00007f003f2cb2c3
  0x00007f003f2cb236: cmp    QWORD PTR [rdi+0x280],0x0
  0x00007f003f2cb241: jne    0x00007f003f2cb25a
  0x00007f003f2cb243: mov    QWORD PTR [rdi+0x280],rbx
  0x00007f003f2cb24a: mov    QWORD PTR [rdi+0x288],0x1
  0x00007f003f2cb255: jmp    0x00007f003f2cb2c3
  0x00007f003f2cb25a: cmp    QWORD PTR [rdi+0x290],0x0
  0x00007f003f2cb265: jne    0x00007f003f2cb27e
  0x00007f003f2cb267: mov    QWORD PTR [rdi+0x290],rbx
  0x00007f003f2cb26e: mov    QWORD PTR [rdi+0x298],0x1
  0x00007f003f2cb279: jmp    0x00007f003f2cb2c3
  0x00007f003f2cb27e: cmp    QWORD PTR [rdi+0x2a0],0x0
  0x00007f003f2cb289: jne    0x00007f003f2cb2a2
  0x00007f003f2cb28b: mov    QWORD PTR [rdi+0x2a0],rbx
  0x00007f003f2cb292: mov    QWORD PTR [rdi+0x2a8],0x1
  0x00007f003f2cb29d: jmp    0x00007f003f2cb2c3
  0x00007f003f2cb2a2: jmp    0x00007f003f2cb2c3
  0x00007f003f2cb2a7: movabs rdi,0x7f0038a64c20  ;   {metadata(method data for {method} {0x00007f0038990568} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00007f003f2cb2b1: sub    QWORD PTR [rdi+0x220],0x1
  0x00007f003f2cb2b9: jmp    0x00007f003f2cb31d
  0x00007f003f2cb2be: jmp    0x00007f003f2cb2c3  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@31 (line 902)

  0x00007f003f2cb2c3: cmp    rax,QWORD PTR [rax]  ; implicit exception: dispatches to 0x00007f003f2cb326
  0x00007f003f2cb2c6: jmp    0x00007f003f2cb356
  0x00007f003f2cb2cb: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2cb2d0: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2cb2d8: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop off=1117}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@-1 (line 866)
                                                ;   {runtime_call}
  0x00007f003f2cb2dd: jmp    0x00007f003f2caee1
  0x00007f003f2cb2e2: mov    rdx,rdx
  0x00007f003f2cb2e5: call   0x00007f003f279760  ; OopMap{rbx=Oop off=1130}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@7 (line 868)
                                                ;   {runtime_call}
  0x00007f003f2cb2ea: jmp    0x00007f003f2caf5f
  0x00007f003f2cb2ef: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2cb2f4: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2cb2fc: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop rax=Oop off=1153}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath$JarLoader$1::&lt;init&gt;@-1 (line 869)
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@12 (line 868)
                                                ;   {runtime_call}
  0x00007f003f2cb301: jmp    0x00007f003f2cafa6
  0x00007f003f2cb306: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2cb30b: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2cb313: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop rax=Oop off=1176}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - sun.misc.URLClassPath$JarLoader$1::&lt;init&gt;@6 (line 869)
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@12 (line 868)
                                                ;   {runtime_call}
  0x00007f003f2cb318: jmp    0x00007f003f2cb00d
  0x00007f003f2cb31d: mov    QWORD PTR [rsp],rax
  0x00007f003f2cb321: call   0x00007f003f27b2c0  ; OopMap{off=1190}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@31 (line 902)
                                                ;   {runtime_call}
  0x00007f003f2cb326: call   0x00007f003f279000  ; OopMap{rax=Oop off=1195}
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@34 (line 902)
                                                ;   {runtime_call}
  0x00007f003f2cb32b: nop
  0x00007f003f2cb32c: nop
  0x00007f003f2cb32d: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2cb334: movabs r10,0x0
  0x00007f003f2cb33e: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2cb345: movabs r10,0x0
  0x00007f003f2cb34f: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2cb356: add    rsp,0x50
  0x00007f003f2cb35a: pop    rbp
  0x00007f003f2cb35b: jmp    0x00007f003f2785a0  ;   {runtime_call}
[Stub Code]
  0x00007f003f2cb360: nop                       ;   {no_reloc}
  0x00007f003f2cb361: nop
  0x00007f003f2cb362: nop
  0x00007f003f2cb363: nop
  0x00007f003f2cb364: nop
  0x00007f003f2cb365: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2cb36f: jmp    0x00007f003f2cb36f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2cb374: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2cb379: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2cb37e: sub    rsp,0x80
  0x00007f003f2cb385: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2cb38a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2cb38f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2cb394: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2cb399: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2cb39e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2cb3a3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2cb3a8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2cb3ad: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2cb3b2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2cb3b7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2cb3bc: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2cb3c1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2cb3c6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2cb3cb: mov    QWORD PTR [rsp],r15
  0x00007f003f2cb3cf: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2cb3d9: movabs rsi,0x7f003f2cb379  ;   {internal_word}
  0x00007f003f2cb3e3: mov    rdx,rsp
  0x00007f003f2cb3e6: and    rsp,0xfffffffffffffff0
  0x00007f003f2cb3ea: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2cb3ef: hlt    
[Deopt Handler Code]
  0x00007f003f2cb3f0: movabs r10,0x7f003f2cb3f0  ;   {section_word}
  0x00007f003f2cb3fa: push   r10
  0x00007f003f2cb3fc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2cb401: hlt    
  0x00007f003f2cb402: hlt    
  0x00007f003f2cb403: hlt    
  0x00007f003f2cb404: hlt    
  0x00007f003f2cb405: hlt    
  0x00007f003f2cb406: hlt    
  0x00007f003f2cb407: hlt    
<nmethod compile_id='121' compiler='C1' level='3' entry='0x00007f003f2cae80' size='2440' address='0x00007f003f2cacd0' relocation_offset='312' insts_offset='432' stub_offset='1680' scopes_data_offset='1888' scopes_pcs_offset='2048' dependencies_offset='2368' handler_table_offset='2376' nul_chk_table_offset='2424' metadata_offset='1848' method='sun/misc/URLClassPath$JarLoader ensureOpen ()V' bytes='36' count='675' iicount='675' throwouts='3' stamp='0.551'/>
<writer thread='139637818533632'/>
<task_queued compile_id='126' method='java/lang/Character toUpperCase (I)I' bytes='9' count='512' iicount='512' level='3' stamp='0.551' comment='tiered' hot_count='512'/>
<task_queued compile_id='127' method='java/lang/CharacterDataLatin1 toUpperCase (I)I' bytes='53' count='512' iicount='512' level='3' stamp='0.551' comment='tiered' hot_count='512'/>
<task_queued compile_id='128' method='java/util/zip/ZipFile access$400 (Ljava/util/zip/ZipFile;)J' bytes='5' count='512' iicount='512' level='3' stamp='0.551' comment='tiered' hot_count='512'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/jar/JarFile.getEntry  [0x00007f003f2cb840, 0x00007f003f2cbb98]  856 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038a3be08} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;
  # this:     rsi:rsi   = &apos;java/util/jar/JarFile&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x80]  (sp of caller)
  0x00007f003f2cb840: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2cb844: shl    r10,0x3
  0x00007f003f2cb848: cmp    r10,rax
  0x00007f003f2cb84b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2cb851: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2cb85c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2cb860: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2cb867: push   rbp
  0x00007f003f2cb868: sub    rsp,0x70
  0x00007f003f2cb86c: movabs rdi,0x7f0038a5b8f0  ;   {metadata(method data for {method} {0x00007f0038a3be08} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2cb876: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2cb87c: add    ebx,0x8
  0x00007f003f2cb87f: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2cb885: movabs rdi,0x7f0038a3be08  ;   {metadata({method} {0x00007f0038a3be08} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2cb88f: and    ebx,0x1ff8
  0x00007f003f2cb895: cmp    ebx,0x0
  0x00007f003f2cb898: je     0x00007f003f2cba53  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@0 (line 240)

  0x00007f003f2cb89e: mov    rdi,rsi
  0x00007f003f2cb8a1: movabs rbx,0x7f0038a5b8f0  ;   {metadata(method data for {method} {0x00007f0038a3be08} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2cb8ab: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f2cb8b3: mov    rdi,rsi
  0x00007f003f2cb8b6: mov    rsi,rdi            ;*invokespecial getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@2 (line 240)

  0x00007f003f2cb8b9: mov    QWORD PTR [rsp+0x58],rdi
  0x00007f003f2cb8be: nop
  0x00007f003f2cb8bf: call   0x00007f003f1c4d60  ; OopMap{[88]=Oop off=132}
                                                ;*invokespecial getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@2 (line 240)
                                                ;   {optimized virtual_call}
  0x00007f003f2cb8c4: mov    rbx,rax            ;*invokespecial getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@2 (line 240)

  0x00007f003f2cb8c7: cmp    rbx,0x0
  0x00007f003f2cb8cb: movabs rdx,0x7f0038a5b8f0  ;   {metadata(method data for {method} {0x00007f0038a3be08} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2cb8d5: movabs rsi,0x140
  0x00007f003f2cb8df: je     0x00007f003f2cb8ef
  0x00007f003f2cb8e5: movabs rsi,0x150
  0x00007f003f2cb8ef: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2cb8f3: lea    rdi,[rdi+0x1]
  0x00007f003f2cb8f7: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2cb8fb: je     0x00007f003f2cba3d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@7 (line 241)

  0x00007f003f2cb901: mov    r8,QWORD PTR [rsp+0x58]
  0x00007f003f2cb906: movabs rdx,0x7c0050ba0    ;   {metadata(&apos;java/util/jar/JarFile$JarFileEntry&apos;)}
  0x00007f003f2cb910: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2cb914: lea    rdi,[rax+0x60]
  0x00007f003f2cb918: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2cb91c: ja     0x00007f003f2cba6a
  0x00007f003f2cb922: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2cb926: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2cb92d: mov    QWORD PTR [rax],rcx
  0x00007f003f2cb930: mov    rcx,rdx
  0x00007f003f2cb933: shr    rcx,0x3
  0x00007f003f2cb937: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2cb93a: xor    rcx,rcx
  0x00007f003f2cb93d: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2cb940: xor    rcx,rcx
  0x00007f003f2cb943: movabs rdi,0xa
  0x00007f003f2cb94d: mov    QWORD PTR [rax+rdi*8+0x8],rcx
  0x00007f003f2cb952: dec    rdi
  0x00007f003f2cb955: jne    0x00007f003f2cb94d  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@10 (line 242)

  0x00007f003f2cb957: mov    rdx,rax
  0x00007f003f2cb95a: movabs rsi,0x7f0038a5b8f0  ;   {metadata(method data for {method} {0x00007f0038a3be08} &apos;getEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/zip/ZipEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2cb964: add    QWORD PTR [rsi+0x160],0x1
  0x00007f003f2cb96c: movabs rdx,0x7f0038a64f18  ;   {metadata(method data for {method} {0x00007f0038a52bd8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/jar/JarFile;Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarFile$JarFileEntry&apos;)}
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.meta.MemoryAccessProvider from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
  0x00007f003f2cb976: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2cb97c: add    esi,0x8
  0x00007f003f2cb97f: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2cb985: movabs rdx,0x7f0038a52bd8  ;   {metadata({method} {0x00007f0038a52bd8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/jar/JarFile;Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarFile$JarFileEntry&apos;)}
  0x00007f003f2cb98f: and    esi,0x7ffff8
  0x00007f003f2cb995: cmp    esi,0x0
  0x00007f003f2cb998: je     0x00007f003f2cba77
  0x00007f003f2cb99e: mov    r10,r8
  0x00007f003f2cb9a1: shr    r10,0x3
  0x00007f003f2cb9a5: mov    DWORD PTR [rax+0x58],r10d
  0x00007f003f2cb9a9: mov    rdx,rax
  0x00007f003f2cb9ac: shr    rdx,0x9
  0x00007f003f2cb9b0: movabs rsi,0x7f003ae7c000
  0x00007f003f2cb9ba: mov    BYTE PTR [rdx+rsi*1],0x0  ;*putfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@2 (line 286)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)

  0x00007f003f2cb9be: mov    rdx,rax
  0x00007f003f2cb9c1: movabs rsi,0x7f0038a64f18  ;   {metadata(method data for {method} {0x00007f0038a52bd8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/jar/JarFile;Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarFile$JarFileEntry&apos;)}
  0x00007f003f2cb9cb: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2cb9d3: movabs rdx,0x7f0038a65098  ;   {metadata(method data for {method} {0x00007f0038a532e8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarEntry&apos;)}
  0x00007f003f2cb9dd: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2cb9e3: add    esi,0x8
  0x00007f003f2cb9e6: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2cb9ec: movabs rdx,0x7f0038a532e8  ;   {metadata({method} {0x00007f0038a532e8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarEntry&apos;)}
  0x00007f003f2cb9f6: and    esi,0x7ffff8
  0x00007f003f2cb9fc: cmp    esi,0x0
  0x00007f003f2cb9ff: je     0x00007f003f2cba8e
  0x00007f003f2cba05: mov    rdx,rax
  0x00007f003f2cba08: movabs rsi,0x7f0038a65098  ;   {metadata(method data for {method} {0x00007f0038a532e8} &apos;&lt;init&gt;&apos; &apos;(Ljava/util/zip/ZipEntry;)V&apos; in &apos;java/util/jar/JarEntry&apos;)}
  0x00007f003f2cba12: add    QWORD PTR [rsi+0x130],0x1
  0x00007f003f2cba1a: mov    rdx,rbx
  0x00007f003f2cba1d: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarEntry::&lt;init&gt;@2 (line 62)
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@7 (line 287)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)

  0x00007f003f2cba20: mov    QWORD PTR [rsp+0x60],rax
  0x00007f003f2cba25: nop
  0x00007f003f2cba26: nop
  0x00007f003f2cba27: call   0x00007f003f1c4d60  ; OopMap{[96]=Oop off=492}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarEntry::&lt;init&gt;@2 (line 62)
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@7 (line 287)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ;   {optimized virtual_call}
  0x00007f003f2cba2c: mov    rax,QWORD PTR [rsp+0x60]
  0x00007f003f2cba31: add    rsp,0x70
  0x00007f003f2cba35: pop    rbp
  0x00007f003f2cba36: test   DWORD PTR [rip+0x1b0f66c4],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2cba3c: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@19 (line 242)

  0x00007f003f2cba3d: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f2cba47: add    rsp,0x70
  0x00007f003f2cba4b: pop    rbp
  0x00007f003f2cba4c: test   DWORD PTR [rip+0x1b0f66ae],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2cba52: ret    
  0x00007f003f2cba53: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2cba58: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2cba60: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop off=549}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarFile::getEntry@-1 (line 240)
                                                ;   {runtime_call}
  0x00007f003f2cba65: jmp    0x00007f003f2cb89e
  0x00007f003f2cba6a: mov    rdx,rdx
  0x00007f003f2cba6d: call   0x00007f003f279760  ; OopMap{rbx=Oop r8=Oop off=562}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getEntry@10 (line 242)
                                                ;   {runtime_call}
  0x00007f003f2cba72: jmp    0x00007f003f2cb957
  0x00007f003f2cba77: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2cba7c: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2cba84: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop r8=Oop rax=Oop off=585}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@-1 (line 286)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ;   {runtime_call}
  0x00007f003f2cba89: jmp    0x00007f003f2cb99e
  0x00007f003f2cba8e: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2cba93: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2cba9b: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop rax=Oop off=608}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarEntry::&lt;init&gt;@-1 (line 62)
                                                ; - java.util.jar.JarFile$JarFileEntry::&lt;init&gt;@7 (line 287)
                                                ; - java.util.jar.JarFile::getEntry@16 (line 242)
                                                ;   {runtime_call}
  0x00007f003f2cbaa0: jmp    0x00007f003f2cba05
  0x00007f003f2cbaa5: nop
  0x00007f003f2cbaa6: nop
  0x00007f003f2cbaa7: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2cbaae: movabs r10,0x0
  0x00007f003f2cbab8: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2cbabf: movabs r10,0x0
  0x00007f003f2cbac9: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2cbad0: add    rsp,0x70
  0x00007f003f2cbad4: pop    rbp
  0x00007f003f2cbad5: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2cbada: hlt    
  0x00007f003f2cbadb: hlt    
  0x00007f003f2cbadc: hlt    
  0x00007f003f2cbadd: hlt    
  0x00007f003f2cbade: hlt    
  0x00007f003f2cbadf: hlt    
[Stub Code]
  0x00007f003f2cbae0: nop                       ;   {no_reloc}
  0x00007f003f2cbae1: nop
  0x00007f003f2cbae2: nop
  0x00007f003f2cbae3: nop
  0x00007f003f2cbae4: nop
  0x00007f003f2cbae5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2cbaef: jmp    0x00007f003f2cbaef  ;   {runtime_call}
  0x00007f003f2cbaf4: nop
  0x00007f003f2cbaf5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2cbaff: jmp    0x00007f003f2cbaff  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2cbb04: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2cbb09: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2cbb0e: sub    rsp,0x80
  0x00007f003f2cbb15: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2cbb1a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2cbb1f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2cbb24: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2cbb29: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2cbb2e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2cbb33: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2cbb38: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2cbb3d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2cbb42: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2cbb47: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2cbb4c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2cbb51: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2cbb56: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2cbb5b: mov    QWORD PTR [rsp],r15
  0x00007f003f2cbb5f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2cbb69: movabs rsi,0x7f003f2cbb09  ;   {internal_word}
  0x00007f003f2cbb73: mov    rdx,rsp
  0x00007f003f2cbb76: and    rsp,0xfffffffffffffff0
  0x00007f003f2cbb7a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2cbb7f: hlt    
[Deopt Handler Code]
  0x00007f003f2cbb80: movabs r10,0x7f003f2cbb80  ;   {section_word}
  0x00007f003f2cbb8a: push   r10
  0x00007f003f2cbb8c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2cbb91: hlt    
  0x00007f003f2cbb92: hlt    
  0x00007f003f2cbb93: hlt    
  0x00007f003f2cbb94: hlt    
  0x00007f003f2cbb95: hlt    
  0x00007f003f2cbb96: hlt    
  0x00007f003f2cbb97: hlt    
<nmethod compile_id='123' compiler='C1' level='3' entry='0x00007f003f2cb840' size='1752' address='0x00007f003f2cb690' relocation_offset='312' insts_offset='432' stub_offset='1104' scopes_data_offset='1312' scopes_pcs_offset='1488' dependencies_offset='1744' metadata_offset='1288' method='java/util/jar/JarFile getEntry (Ljava/lang/String;)Ljava/util/zip/ZipEntry;' bytes='22' count='806' iicount='806' stamp='0.553'/>
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.HotSpotMemoryAccessProvider from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
----------------------------------------------------------------------
sun/misc/Unsafe.putLong  [0x00007f003f2cbf20, 0x00007f003f2cc0e8]  456 bytes
[Entry Point]
  # {method} {0x00007f00387f62f0} &apos;putLong&apos; &apos;(JJ)V&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rsi:rsi   = &apos;sun/misc/Unsafe&apos;
  # parm0:    rdx:rdx   = long
  # parm1:    rcx:rcx   = long
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2cbf20: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2cbf24: shl    r10,0x3
  0x00007f003f2cbf28: cmp    rax,r10
  0x00007f003f2cbf2b: je     0x00007f003f2cbf38
  0x00007f003f2cbf31: jmp    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2cbf36: xchg   ax,ax
[Verified Entry Point]
  0x00007f003f2cbf38: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2cbf3f: push   rbp
  0x00007f003f2cbf40: mov    rbp,rsp
  0x00007f003f2cbf43: sub    rsp,0x40
  0x00007f003f2cbf47: mov    QWORD PTR [rsp],rsi
  0x00007f003f2cbf4b: cmp    rsi,0x0
  0x00007f003f2cbf4f: lea    rsi,[rsp]
  0x00007f003f2cbf53: cmove  rsi,QWORD PTR [rsp]  ; OopMap{[0]=Oop off=56}
  0x00007f003f2cbf58: movabs r10,0x7f003f2cbf58  ;   {section_word}
  0x00007f003f2cbf62: mov    QWORD PTR [r15+0x1c8],r10
  0x00007f003f2cbf69: mov    QWORD PTR [r15+0x1c0],rsp
  0x00007f003f2cbf70: cmp    BYTE PTR [rip+0x1a288a5d],0x0        # 0x00007f00595549d4
                                                ;   {external_word}
  0x00007f003f2cbf77: je     0x00007f003f2cbfb3
  0x00007f003f2cbf7d: push   rsi
  0x00007f003f2cbf7e: push   rdx
  0x00007f003f2cbf7f: push   rcx
  0x00007f003f2cbf80: movabs rsi,0x7f00387f62f0  ;   {metadata({method} {0x00007f00387f62f0} &apos;putLong&apos; &apos;(JJ)V&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00007f003f2cbf8a: mov    rdi,r15
  0x00007f003f2cbf8d: test   esp,0xf
  0x00007f003f2cbf93: je     0x00007f003f2cbfab
  0x00007f003f2cbf99: sub    rsp,0x8
  0x00007f003f2cbf9d: call   0x00007f0058f49f20  ;   {runtime_call}
  0x00007f003f2cbfa2: add    rsp,0x8
  0x00007f003f2cbfa6: jmp    0x00007f003f2cbfb0
  0x00007f003f2cbfab: call   0x00007f0058f49f20  ;   {runtime_call}
  0x00007f003f2cbfb0: pop    rcx
  0x00007f003f2cbfb1: pop    rdx
  0x00007f003f2cbfb2: pop    rsi
  0x00007f003f2cbfb3: lea    rdi,[r15+0x1e0]
  0x00007f003f2cbfba: mov    DWORD PTR [r15+0x258],0x4
  0x00007f003f2cbfc5: call   0x00007f0059019040  ;   {runtime_call}
  0x00007f003f2cbfca: vzeroupper 
  0x00007f003f2cbfcd: mov    DWORD PTR [r15+0x258],0x5
  0x00007f003f2cbfd8: mov    ecx,r15d
  0x00007f003f2cbfdb: shr    ecx,0x4
  0x00007f003f2cbfde: and    ecx,0xffc
  0x00007f003f2cbfe4: movabs r10,0x7f005a3c1000  ;   {external_word}
  0x00007f003f2cbfee: mov    DWORD PTR [r10+rcx*1],ecx
  0x00007f003f2cbff2: cmp    DWORD PTR [rip+0x1a2939c0],0x0        # 0x00007f005955f9bc
                                                ;   {external_word}
  0x00007f003f2cbffc: jne    0x00007f003f2cc010
  0x00007f003f2cc002: cmp    DWORD PTR [r15+0x30],0x0
  0x00007f003f2cc00a: je     0x00007f003f2cc029
  0x00007f003f2cc010: mov    rdi,r15
  0x00007f003f2cc013: mov    r12,rsp
  0x00007f003f2cc016: sub    rsp,0x0
  0x00007f003f2cc01a: and    rsp,0xfffffffffffffff0
  0x00007f003f2cc01e: call   0x00007f0058fefce0  ;   {runtime_call}
  0x00007f003f2cc023: mov    rsp,r12
  0x00007f003f2cc026: xor    r12,r12
  0x00007f003f2cc029: mov    DWORD PTR [r15+0x258],0x8
  0x00007f003f2cc034: cmp    DWORD PTR [r15+0x2b0],0x1
  0x00007f003f2cc03f: je     0x00007f003f2cc0c7
  0x00007f003f2cc045: cmp    BYTE PTR [rip+0x1a288988],0x0        # 0x00007f00595549d4
                                                ;   {external_word}
  0x00007f003f2cc04c: je     0x00007f003f2cc082
  0x00007f003f2cc052: movabs rsi,0x7f00387f62f0  ;   {metadata({method} {0x00007f00387f62f0} &apos;putLong&apos; &apos;(JJ)V&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00007f003f2cc05c: mov    rdi,r15
  0x00007f003f2cc05f: test   esp,0xf
  0x00007f003f2cc065: je     0x00007f003f2cc07d
  0x00007f003f2cc06b: sub    rsp,0x8
  0x00007f003f2cc06f: call   0x00007f0058f49f30  ;   {runtime_call}
  0x00007f003f2cc074: add    rsp,0x8
  0x00007f003f2cc078: jmp    0x00007f003f2cc082
  0x00007f003f2cc07d: call   0x00007f0058f49f30  ;   {runtime_call}
  0x00007f003f2cc082: movabs r10,0x0
  0x00007f003f2cc08c: mov    QWORD PTR [r15+0x1c0],r10
  0x00007f003f2cc093: movabs r10,0x0
  0x00007f003f2cc09d: mov    QWORD PTR [r15+0x1c8],r10
  0x00007f003f2cc0a4: mov    rcx,QWORD PTR [r15+0x38]
  0x00007f003f2cc0a8: mov    DWORD PTR [rcx+0x100],0x0
  0x00007f003f2cc0b2: leave  
  0x00007f003f2cc0b3: cmp    QWORD PTR [r15+0x8],0x0
  0x00007f003f2cc0bb: jne    0x00007f003f2cc0c2
  0x00007f003f2cc0c1: ret    
  0x00007f003f2cc0c2: jmp    Stub::forward exception  ;   {runtime_call}
  0x00007f003f2cc0c7: mov    r12,rsp
  0x00007f003f2cc0ca: sub    rsp,0x0
  0x00007f003f2cc0ce: and    rsp,0xfffffffffffffff0
  0x00007f003f2cc0d2: call   0x00007f0058f521e0  ;   {runtime_call}
  0x00007f003f2cc0d7: mov    rsp,r12
  0x00007f003f2cc0da: xor    r12,r12
  0x00007f003f2cc0dd: jmp    0x00007f003f2cc045
  0x00007f003f2cc0e2: hlt    
  0x00007f003f2cc0e3: hlt    
  0x00007f003f2cc0e4: hlt    
  0x00007f003f2cc0e5: hlt    
  0x00007f003f2cc0e6: hlt    
  0x00007f003f2cc0e7: hlt    
<nmethod compile_id='129' compile_kind='c2n' level='0' entry='0x00007f003f2cbf20' size='856' address='0x00007f003f2cbd90' relocation_offset='312' consts_offset='856' insts_offset='400' method='sun/misc/Unsafe putLong (JJ)V' bytes='0' count='512' iicount='512' stamp='0.553'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/CharacterDataLatin1.toUpperCase  [0x00007f003f2cc2a0, 0x00007f003f2cc570]  720 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00389618b8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rsi:rsi   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2cc2a0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2cc2a4: shl    r10,0x3
  0x00007f003f2cc2a8: cmp    r10,rax
  0x00007f003f2cc2ab: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2cc2b1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2cc2bc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2cc2c0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2cc2c7: push   rbp
  0x00007f003f2cc2c8: sub    rsp,0x40
  0x00007f003f2cc2cc: movabs rax,0x7f0038a8ad98  ;   {metadata(method data for {method} {0x00007f00389618b8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f2cc2d6: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f2cc2dc: add    edi,0x8
  0x00007f003f2cc2df: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f2cc2e5: movabs rax,0x7f00389618b8  ;   {metadata({method} {0x00007f00389618b8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f2cc2ef: and    edi,0x1ff8
  0x00007f003f2cc2f5: cmp    edi,0x0
  0x00007f003f2cc2f8: je     0x00007f003f2cc459  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@0 (line 145)

  0x00007f003f2cc2fe: movabs rax,0x7f0038a8ad98  ;   {metadata(method data for {method} {0x00007f00389618b8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f2cc308: add    QWORD PTR [rax+0x148],0x1
  0x00007f003f2cc310: movabs rax,0x7f0038a4f8d0  ;   {metadata(method data for {method} {0x00007f0038960e08} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f2cc31a: mov    esi,DWORD PTR [rax+0xfc]
  0x00007f003f2cc320: add    esi,0x8
  0x00007f003f2cc323: mov    DWORD PTR [rax+0xfc],esi
  0x00007f003f2cc329: movabs rax,0x7f0038960e08  ;   {metadata({method} {0x00007f0038960e08} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f2cc333: and    esi,0x7ffff8
  0x00007f003f2cc339: cmp    esi,0x0
  0x00007f003f2cc33c: je     0x00007f003f2cc470
  0x00007f003f2cc342: mov    rax,rdx
  0x00007f003f2cc345: and    eax,0xffff
  0x00007f003f2cc34b: movabs rsi,0x670bc4928    ;   {oop([I)}
  0x00007f003f2cc355: movsxd rdi,eax
  0x00007f003f2cc358: cmp    eax,DWORD PTR [rsi+0xc]  ; implicit exception: dispatches to 0x00007f003f2cc487
  0x00007f003f2cc35b: jae    0x00007f003f2cc491
  0x00007f003f2cc361: mov    eax,DWORD PTR [rsi+rdi*4+0x10]
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)

  0x00007f003f2cc365: mov    rsi,rax
  0x00007f003f2cc368: and    esi,0x10000
  0x00007f003f2cc36e: cmp    esi,0x0
  0x00007f003f2cc371: movabs rsi,0x7f0038a8ad98  ;   {metadata(method data for {method} {0x00007f00389618b8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f2cc37b: movabs rdi,0x1c8
  0x00007f003f2cc385: je     0x00007f003f2cc395
  0x00007f003f2cc38b: movabs rdi,0x1d8
  0x00007f003f2cc395: mov    rbx,QWORD PTR [rsi+rdi*1]
  0x00007f003f2cc399: lea    rbx,[rbx+0x1]
  0x00007f003f2cc39d: mov    QWORD PTR [rsi+rdi*1],rbx
  0x00007f003f2cc3a1: je     0x00007f003f2cc44a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@12 (line 148)

  0x00007f003f2cc3a7: mov    rsi,rax
  0x00007f003f2cc3aa: and    esi,0x7fc0000
  0x00007f003f2cc3b0: cmp    esi,0x7fc0000
  0x00007f003f2cc3b6: movabs rsi,0x7f0038a8ad98  ;   {metadata(method data for {method} {0x00007f00389618b8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f2cc3c0: movabs rdi,0x1e8
  0x00007f003f2cc3ca: je     0x00007f003f2cc3da
  0x00007f003f2cc3d0: movabs rdi,0x1f8
  0x00007f003f2cc3da: mov    rbx,QWORD PTR [rsi+rdi*1]
  0x00007f003f2cc3de: lea    rbx,[rbx+0x1]
  0x00007f003f2cc3e2: mov    QWORD PTR [rsi+rdi*1],rbx
  0x00007f003f2cc3e6: jne    0x00007f003f2cc432  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@21 (line 149)

  0x00007f003f2cc3ec: cmp    edx,0xb5
  0x00007f003f2cc3f2: movabs rax,0x7f0038a8ad98  ;   {metadata(method data for {method} {0x00007f00389618b8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f2cc3fc: movabs rsi,0x220
  0x00007f003f2cc406: jne    0x00007f003f2cc416
  0x00007f003f2cc40c: movabs rsi,0x230
  0x00007f003f2cc416: mov    rdi,QWORD PTR [rax+rsi*1]
  0x00007f003f2cc41a: lea    rdi,[rdi+0x1]
  0x00007f003f2cc41e: mov    QWORD PTR [rax+rsi*1],rdi
  0x00007f003f2cc422: jne    0x00007f003f2cc44a  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@44 (line 152)

  0x00007f003f2cc428: mov    edx,0x39c
  0x00007f003f2cc42d: jmp    0x00007f003f2cc44a  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@51 (line 156)

  0x00007f003f2cc432: shl    eax,0x5
  0x00007f003f2cc435: sar    eax,0x17
  0x00007f003f2cc438: sub    edx,eax
  0x00007f003f2cc43a: movabs rax,0x7f0038a8ad98  ;   {metadata(method data for {method} {0x00007f00389618b8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007f003f2cc444: inc    DWORD PTR [rax+0x208]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@37 (line 152)

  0x00007f003f2cc44a: mov    rax,rdx
  0x00007f003f2cc44d: add    rsp,0x40
  0x00007f003f2cc451: pop    rbp
  0x00007f003f2cc452: test   DWORD PTR [rip+0x1b0f5ca8],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2cc458: ret    
  0x00007f003f2cc459: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2cc45e: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2cc466: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=459}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@-1 (line 145)
                                                ;   {runtime_call}
  0x00007f003f2cc46b: jmp    0x00007f003f2cc2fe
  0x00007f003f2cc470: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2cc475: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2cc47d: call   0x00007f003f27d5e0  ; OopMap{off=482}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x00007f003f2cc482: jmp    0x00007f003f2cc342
  0x00007f003f2cc487: call   0x00007f003f279000  ; OopMap{rsi=Oop off=492}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x00007f003f2cc48c: call   0x00007f003f279000  ; OopMap{rsi=Oop off=497}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x00007f003f2cc491: mov    QWORD PTR [rsp],rax
  0x00007f003f2cc495: call   0x00007f003f278940  ; OopMap{rsi=Oop off=506}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x00007f003f2cc49a: nop
  0x00007f003f2cc49b: nop
  0x00007f003f2cc49c: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2cc4a3: movabs r10,0x0
  0x00007f003f2cc4ad: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2cc4b4: movabs r10,0x0
  0x00007f003f2cc4be: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2cc4c5: add    rsp,0x40
  0x00007f003f2cc4c9: pop    rbp
  0x00007f003f2cc4ca: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2cc4cf: hlt    
  0x00007f003f2cc4d0: hlt    
  0x00007f003f2cc4d1: hlt    
  0x00007f003f2cc4d2: hlt    
  0x00007f003f2cc4d3: hlt    
  0x00007f003f2cc4d4: hlt    
  0x00007f003f2cc4d5: hlt    
  0x00007f003f2cc4d6: hlt    
  0x00007f003f2cc4d7: hlt    
  0x00007f003f2cc4d8: hlt    
  0x00007f003f2cc4d9: hlt    
  0x00007f003f2cc4da: hlt    
  0x00007f003f2cc4db: hlt    
  0x00007f003f2cc4dc: hlt    
  0x00007f003f2cc4dd: hlt    
  0x00007f003f2cc4de: hlt    
  0x00007f003f2cc4df: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2cc4e0: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2cc4e5: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2cc4ea: sub    rsp,0x80
  0x00007f003f2cc4f1: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2cc4f6: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2cc4fb: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2cc500: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2cc505: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2cc50a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2cc50f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2cc514: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2cc519: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2cc51e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2cc523: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2cc528: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2cc52d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2cc532: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2cc537: mov    QWORD PTR [rsp],r15
  0x00007f003f2cc53b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2cc545: movabs rsi,0x7f003f2cc4e5  ;   {internal_word}
  0x00007f003f2cc54f: mov    rdx,rsp
  0x00007f003f2cc552: and    rsp,0xfffffffffffffff0
  0x00007f003f2cc556: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2cc55b: hlt    
[Deopt Handler Code]
  0x00007f003f2cc55c: movabs r10,0x7f003f2cc55c  ;   {section_word}
  0x00007f003f2cc566: push   r10
  0x00007f003f2cc568: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2cc56d: hlt    
  0x00007f003f2cc56e: hlt    
  0x00007f003f2cc56f: hlt    
<nmethod compile_id='127' compiler='C1' level='3' entry='0x00007f003f2cc2a0' size='1520' address='0x00007f003f2cc110' relocation_offset='312' insts_offset='400' stub_offset='976' scopes_data_offset='1144' scopes_pcs_offset='1264' dependencies_offset='1488' nul_chk_table_offset='1496' metadata_offset='1120' method='java/lang/CharacterDataLatin1 toUpperCase (I)I' bytes='53' count='522' iicount='522' stamp='0.554'/>
<writer thread='139637818533632'/>
<task_queued compile_id='130' method='sun/misc/PerfCounter add (J)V' bytes='18' count='512' iicount='512' level='3' stamp='0.554' comment='tiered' hot_count='512'/>
<task_queued compile_id='131' method='sun/misc/PerfCounter get ()J' bytes='9' count='512' iicount='512' level='3' stamp='0.554' comment='tiered' hot_count='512'/>
<task_queued compile_id='132' method='java/nio/DirectLongBufferU get (I)J' bytes='16' count='512' iicount='512' level='3' stamp='0.554' comment='tiered' hot_count='512'/>
----------------------------------------------------------------------
sun/misc/Unsafe.getLong  [0x00007f003f2cc8a0, 0x00007f003f2cca78]  472 bytes
[Entry Point]
  # {method} {0x00007f00387f6258} &apos;getLong&apos; &apos;(J)J&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rsi:rsi   = &apos;sun/misc/Unsafe&apos;
  # parm0:    rdx:rdx   = long
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2cc8a0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2cc8a4: shl    r10,0x3
  0x00007f003f2cc8a8: cmp    rax,r10
  0x00007f003f2cc8ab: je     0x00007f003f2cc8b8
  0x00007f003f2cc8b1: jmp    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2cc8b6: xchg   ax,ax
[Verified Entry Point]
  0x00007f003f2cc8b8: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2cc8bf: push   rbp
  0x00007f003f2cc8c0: mov    rbp,rsp
  0x00007f003f2cc8c3: sub    rsp,0x40
  0x00007f003f2cc8c7: mov    QWORD PTR [rsp],rsi
  0x00007f003f2cc8cb: cmp    rsi,0x0
  0x00007f003f2cc8cf: lea    rsi,[rsp]
  0x00007f003f2cc8d3: cmove  rsi,QWORD PTR [rsp]  ; OopMap{[0]=Oop off=56}
  0x00007f003f2cc8d8: movabs r10,0x7f003f2cc8d8  ;   {section_word}
  0x00007f003f2cc8e2: mov    QWORD PTR [r15+0x1c8],r10
  0x00007f003f2cc8e9: mov    QWORD PTR [r15+0x1c0],rsp
  0x00007f003f2cc8f0: cmp    BYTE PTR [rip+0x1a2880dd],0x0        # 0x00007f00595549d4
                                                ;   {external_word}
  0x00007f003f2cc8f7: je     0x00007f003f2cc931
  0x00007f003f2cc8fd: push   rsi
  0x00007f003f2cc8fe: push   rdx
  0x00007f003f2cc8ff: movabs rsi,0x7f00387f6258  ;   {metadata({method} {0x00007f00387f6258} &apos;getLong&apos; &apos;(J)J&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00007f003f2cc909: mov    rdi,r15
  0x00007f003f2cc90c: test   esp,0xf
  0x00007f003f2cc912: je     0x00007f003f2cc92a
  0x00007f003f2cc918: sub    rsp,0x8
  0x00007f003f2cc91c: call   0x00007f0058f49f20  ;   {runtime_call}
  0x00007f003f2cc921: add    rsp,0x8
  0x00007f003f2cc925: jmp    0x00007f003f2cc92f
  0x00007f003f2cc92a: call   0x00007f0058f49f20  ;   {runtime_call}
  0x00007f003f2cc92f: pop    rdx
  0x00007f003f2cc930: pop    rsi
  0x00007f003f2cc931: lea    rdi,[r15+0x1e0]
  0x00007f003f2cc938: mov    DWORD PTR [r15+0x258],0x4
  0x00007f003f2cc943: call   0x00007f00590191b0  ;   {runtime_call}
  0x00007f003f2cc948: vzeroupper 
  0x00007f003f2cc94b: mov    DWORD PTR [r15+0x258],0x5
  0x00007f003f2cc956: mov    ecx,r15d
  0x00007f003f2cc959: shr    ecx,0x4
  0x00007f003f2cc95c: and    ecx,0xffc
  0x00007f003f2cc962: movabs r10,0x7f005a3c1000  ;   {external_word}
  0x00007f003f2cc96c: mov    DWORD PTR [r10+rcx*1],ecx
  0x00007f003f2cc970: cmp    DWORD PTR [rip+0x1a293042],0x0        # 0x00007f005955f9bc
                                                ;   {external_word}
  0x00007f003f2cc97a: jne    0x00007f003f2cc98e
  0x00007f003f2cc980: cmp    DWORD PTR [r15+0x30],0x0
  0x00007f003f2cc988: je     0x00007f003f2cc9af
  0x00007f003f2cc98e: mov    QWORD PTR [rbp-0x8],rax
  0x00007f003f2cc992: mov    rdi,r15
  0x00007f003f2cc995: mov    r12,rsp
  0x00007f003f2cc998: sub    rsp,0x0
  0x00007f003f2cc99c: and    rsp,0xfffffffffffffff0
  0x00007f003f2cc9a0: call   0x00007f0058fefce0  ;   {runtime_call}
  0x00007f003f2cc9a5: mov    rsp,r12
  0x00007f003f2cc9a8: xor    r12,r12
  0x00007f003f2cc9ab: mov    rax,QWORD PTR [rbp-0x8]
  0x00007f003f2cc9af: mov    DWORD PTR [r15+0x258],0x8
  0x00007f003f2cc9ba: cmp    DWORD PTR [r15+0x2b0],0x1
  0x00007f003f2cc9c5: je     0x00007f003f2cca55
  0x00007f003f2cc9cb: cmp    BYTE PTR [rip+0x1a288002],0x0        # 0x00007f00595549d4
                                                ;   {external_word}
  0x00007f003f2cc9d2: je     0x00007f003f2cca10
  0x00007f003f2cc9d8: mov    QWORD PTR [rbp-0x8],rax
  0x00007f003f2cc9dc: movabs rsi,0x7f00387f6258  ;   {metadata({method} {0x00007f00387f6258} &apos;getLong&apos; &apos;(J)J&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00007f003f2cc9e6: mov    rdi,r15
  0x00007f003f2cc9e9: test   esp,0xf
  0x00007f003f2cc9ef: je     0x00007f003f2cca07
  0x00007f003f2cc9f5: sub    rsp,0x8
  0x00007f003f2cc9f9: call   0x00007f0058f49f30  ;   {runtime_call}
  0x00007f003f2cc9fe: add    rsp,0x8
  0x00007f003f2cca02: jmp    0x00007f003f2cca0c
  0x00007f003f2cca07: call   0x00007f0058f49f30  ;   {runtime_call}
  0x00007f003f2cca0c: mov    rax,QWORD PTR [rbp-0x8]
  0x00007f003f2cca10: movabs r10,0x0
  0x00007f003f2cca1a: mov    QWORD PTR [r15+0x1c0],r10
  0x00007f003f2cca21: movabs r10,0x0
  0x00007f003f2cca2b: mov    QWORD PTR [r15+0x1c8],r10
  0x00007f003f2cca32: mov    rcx,QWORD PTR [r15+0x38]
  0x00007f003f2cca36: mov    DWORD PTR [rcx+0x100],0x0
  0x00007f003f2cca40: leave  
  0x00007f003f2cca41: cmp    QWORD PTR [r15+0x8],0x0
  0x00007f003f2cca49: jne    0x00007f003f2cca50
  0x00007f003f2cca4f: ret    
  0x00007f003f2cca50: jmp    Stub::forward exception  ;   {runtime_call}
  0x00007f003f2cca55: mov    QWORD PTR [rbp-0x8],rax
  0x00007f003f2cca59: mov    r12,rsp
  0x00007f003f2cca5c: sub    rsp,0x0
  0x00007f003f2cca60: and    rsp,0xfffffffffffffff0
  0x00007f003f2cca64: call   0x00007f0058f521e0  ;   {runtime_call}
  0x00007f003f2cca69: mov    rsp,r12
  0x00007f003f2cca6c: xor    r12,r12
  0x00007f003f2cca6f: mov    rax,QWORD PTR [rbp-0x8]
  0x00007f003f2cca73: jmp    0x00007f003f2cc9cb
<nmethod compile_id='133' compile_kind='c2n' level='0' entry='0x00007f003f2cc8a0' size='872' address='0x00007f003f2cc710' relocation_offset='312' consts_offset='872' insts_offset='400' method='sun/misc/Unsafe getLong (J)J' bytes='0' count='512' iicount='512' stamp='0.570'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/zip/ZipFile.access$400  [0x00007f003f2ccc00, 0x00007f003f2ccd30]  304 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f0038997558} &apos;access$400&apos; &apos;(Ljava/util/zip/ZipFile;)J&apos; in &apos;java/util/zip/ZipFile&apos;
  # parm0:    rsi:rsi   = &apos;java/util/zip/ZipFile&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2ccc00: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2ccc07: push   rbp
  0x00007f003f2ccc08: sub    rsp,0x30
  0x00007f003f2ccc0c: movabs rax,0x7f0038a8b020  ;   {metadata(method data for {method} {0x00007f0038997558} &apos;access$400&apos; &apos;(Ljava/util/zip/ZipFile;)J&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2ccc16: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f2ccc1c: add    edi,0x8
  0x00007f003f2ccc1f: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f2ccc25: movabs rax,0x7f0038997558  ;   {metadata({method} {0x00007f0038997558} &apos;access$400&apos; &apos;(Ljava/util/zip/ZipFile;)J&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00007f003f2ccc2f: and    edi,0x1ff8
  0x00007f003f2ccc35: cmp    edi,0x0
  0x00007f003f2ccc38: je     0x00007f003f2ccc4e  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::access$400@0 (line 60)

  0x00007f003f2ccc3e: mov    rax,QWORD PTR [rsi+0x10]  ;*getfield jzfile {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::access$400@1 (line 60)
                                                ; implicit exception: dispatches to 0x00007f003f2ccc62
  0x00007f003f2ccc42: add    rsp,0x30
  0x00007f003f2ccc46: pop    rbp
  0x00007f003f2ccc47: test   DWORD PTR [rip+0x1b0f54b3],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2ccc4d: ret    
  0x00007f003f2ccc4e: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2ccc53: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2ccc5b: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=96}
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipFile::access$400@-1 (line 60)
                                                ;   {runtime_call}
  0x00007f003f2ccc60: jmp    0x00007f003f2ccc3e
  0x00007f003f2ccc62: call   0x00007f003f279000  ; OopMap{rsi=Oop off=103}
                                                ;*getfield jzfile {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile::access$400@1 (line 60)
                                                ;   {runtime_call}
  0x00007f003f2ccc67: nop
  0x00007f003f2ccc68: nop
  0x00007f003f2ccc69: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2ccc70: movabs r10,0x0
  0x00007f003f2ccc7a: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2ccc81: movabs r10,0x0
  0x00007f003f2ccc8b: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2ccc92: add    rsp,0x30
  0x00007f003f2ccc96: pop    rbp
  0x00007f003f2ccc97: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2ccc9c: hlt    
  0x00007f003f2ccc9d: hlt    
  0x00007f003f2ccc9e: hlt    
  0x00007f003f2ccc9f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2ccca0: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2ccca5: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2cccaa: sub    rsp,0x80
  0x00007f003f2cccb1: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2cccb6: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2cccbb: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2cccc0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2cccc5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2cccca: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2ccccf: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2cccd4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2cccd9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2cccde: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2ccce3: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2ccce8: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2ccced: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2cccf2: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2cccf7: mov    QWORD PTR [rsp],r15
  0x00007f003f2cccfb: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2ccd05: movabs rsi,0x7f003f2ccca5  ;   {internal_word}
  0x00007f003f2ccd0f: mov    rdx,rsp
  0x00007f003f2ccd12: and    rsp,0xfffffffffffffff0
  0x00007f003f2ccd16: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2ccd1b: hlt    
[Deopt Handler Code]
  0x00007f003f2ccd1c: movabs r10,0x7f003f2ccd1c  ;   {section_word}
  0x00007f003f2ccd26: push   r10
  0x00007f003f2ccd28: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2ccd2d: hlt    
  0x00007f003f2ccd2e: hlt    
  0x00007f003f2ccd2f: hlt    
<nmethod compile_id='128' compiler='C1' level='3' entry='0x00007f003f2ccc00' size='832' address='0x00007f003f2cca90' relocation_offset='312' insts_offset='368' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='712' dependencies_offset='808' nul_chk_table_offset='816' metadata_offset='672' method='java/util/zip/ZipFile access$400 (Ljava/util/zip/ZipFile;)J' bytes='5' count='518' iicount='518' stamp='0.571'/>
<writer thread='139637818533632'/>
<task_queued compile_id='134' method='java/nio/DirectLongBufferU put (IJ)Ljava/nio/LongBuffer;' bytes='18' count='512' iicount='512' level='3' stamp='0.571' comment='tiered' hot_count='512'/>
[Loaded jdk.vm.ci.hotspot.HotSpotMemoryAccessProviderImpl from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/Character.toUpperCase  [0x00007f003f2cd3a0, 0x00007f003f2cd798]  1016 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f0038816b58} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;
  # parm0:    rsi       = char
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2cd3a0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2cd3a7: push   rbp
  0x00007f003f2cd3a8: sub    rsp,0x40
  0x00007f003f2cd3ac: movabs rdi,0x7f0038a8aa00  ;   {metadata(method data for {method} {0x00007f0038816b58} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2cd3b6: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2cd3bc: add    ebx,0x8
  0x00007f003f2cd3bf: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2cd3c5: movabs rdi,0x7f0038816b58  ;   {metadata({method} {0x00007f0038816b58} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2cd3cf: and    ebx,0x1ff8
  0x00007f003f2cd3d5: cmp    ebx,0x0
  0x00007f003f2cd3d8: je     0x00007f003f2cd664  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@0 (line 6369)

  0x00007f003f2cd3de: movabs rdi,0x7f0038a8aa00  ;   {metadata(method data for {method} {0x00007f0038816b58} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2cd3e8: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f2cd3f0: movabs rdi,0x7f0038a8ab80  ;   {metadata(method data for {method} {0x00007f0038816c00} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2cd3fa: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2cd400: add    ebx,0x8
  0x00007f003f2cd403: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2cd409: movabs rdi,0x7f0038816c00  ;   {metadata({method} {0x00007f0038816c00} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2cd413: and    ebx,0x7ffff8
  0x00007f003f2cd419: cmp    ebx,0x0
  0x00007f003f2cd41c: je     0x00007f003f2cd67b
  0x00007f003f2cd422: movabs rdi,0x7f0038a8ab80  ;   {metadata(method data for {method} {0x00007f0038816c00} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2cd42c: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f2cd434: mov    rdi,rsi
  0x00007f003f2cd437: mov    rsi,rdi            ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)

  0x00007f003f2cd43a: mov    DWORD PTR [rsp+0x28],edi
  0x00007f003f2cd43e: nop
  0x00007f003f2cd43f: call   0x00007f003f1c5160  ; OopMap{off=164}
                                                ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {static_call}
  0x00007f003f2cd444: cmp    rax,QWORD PTR [rax]  ; implicit exception: dispatches to 0x00007f003f2cd692
  0x00007f003f2cd447: mov    rdx,rax
  0x00007f003f2cd44a: movabs rsi,0x7f0038a8ab80  ;   {metadata(method data for {method} {0x00007f0038816c00} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2cd454: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2cd457: shl    rdx,0x3
  0x00007f003f2cd45b: cmp    rdx,QWORD PTR [rsi+0x150]
  0x00007f003f2cd462: jne    0x00007f003f2cd471
  0x00007f003f2cd464: add    QWORD PTR [rsi+0x158],0x1
  0x00007f003f2cd46c: jmp    0x00007f003f2cd633
  0x00007f003f2cd471: cmp    rdx,QWORD PTR [rsi+0x160]
  0x00007f003f2cd478: jne    0x00007f003f2cd487
  0x00007f003f2cd47a: add    QWORD PTR [rsi+0x168],0x1
  0x00007f003f2cd482: jmp    0x00007f003f2cd633
  0x00007f003f2cd487: cmp    rdx,QWORD PTR [rsi+0x170]
  0x00007f003f2cd48e: jne    0x00007f003f2cd49d
  0x00007f003f2cd490: add    QWORD PTR [rsi+0x178],0x1
  0x00007f003f2cd498: jmp    0x00007f003f2cd633
  0x00007f003f2cd49d: cmp    rdx,QWORD PTR [rsi+0x180]
  0x00007f003f2cd4a4: jne    0x00007f003f2cd4b3
  0x00007f003f2cd4a6: add    QWORD PTR [rsi+0x188],0x1
  0x00007f003f2cd4ae: jmp    0x00007f003f2cd633
  0x00007f003f2cd4b3: cmp    rdx,QWORD PTR [rsi+0x190]
  0x00007f003f2cd4ba: jne    0x00007f003f2cd4c9
  0x00007f003f2cd4bc: add    QWORD PTR [rsi+0x198],0x1
  0x00007f003f2cd4c4: jmp    0x00007f003f2cd633
  0x00007f003f2cd4c9: cmp    rdx,QWORD PTR [rsi+0x1a0]
  0x00007f003f2cd4d0: jne    0x00007f003f2cd4df
  0x00007f003f2cd4d2: add    QWORD PTR [rsi+0x1a8],0x1
  0x00007f003f2cd4da: jmp    0x00007f003f2cd633
  0x00007f003f2cd4df: cmp    rdx,QWORD PTR [rsi+0x1b0]
  0x00007f003f2cd4e6: jne    0x00007f003f2cd4f5
  0x00007f003f2cd4e8: add    QWORD PTR [rsi+0x1b8],0x1
  0x00007f003f2cd4f0: jmp    0x00007f003f2cd633
  0x00007f003f2cd4f5: cmp    rdx,QWORD PTR [rsi+0x1c0]
  0x00007f003f2cd4fc: jne    0x00007f003f2cd50b
  0x00007f003f2cd4fe: add    QWORD PTR [rsi+0x1c8],0x1
  0x00007f003f2cd506: jmp    0x00007f003f2cd633
  0x00007f003f2cd50b: cmp    QWORD PTR [rsi+0x150],0x0
  0x00007f003f2cd516: jne    0x00007f003f2cd52f
  0x00007f003f2cd518: mov    QWORD PTR [rsi+0x150],rdx
  0x00007f003f2cd51f: mov    QWORD PTR [rsi+0x158],0x1
  0x00007f003f2cd52a: jmp    0x00007f003f2cd633
  0x00007f003f2cd52f: cmp    QWORD PTR [rsi+0x160],0x0
  0x00007f003f2cd53a: jne    0x00007f003f2cd553
  0x00007f003f2cd53c: mov    QWORD PTR [rsi+0x160],rdx
  0x00007f003f2cd543: mov    QWORD PTR [rsi+0x168],0x1
  0x00007f003f2cd54e: jmp    0x00007f003f2cd633
  0x00007f003f2cd553: cmp    QWORD PTR [rsi+0x170],0x0
  0x00007f003f2cd55e: jne    0x00007f003f2cd577
  0x00007f003f2cd560: mov    QWORD PTR [rsi+0x170],rdx
  0x00007f003f2cd567: mov    QWORD PTR [rsi+0x178],0x1
  0x00007f003f2cd572: jmp    0x00007f003f2cd633
  0x00007f003f2cd577: cmp    QWORD PTR [rsi+0x180],0x0
  0x00007f003f2cd582: jne    0x00007f003f2cd59b
  0x00007f003f2cd584: mov    QWORD PTR [rsi+0x180],rdx
  0x00007f003f2cd58b: mov    QWORD PTR [rsi+0x188],0x1
  0x00007f003f2cd596: jmp    0x00007f003f2cd633
  0x00007f003f2cd59b: cmp    QWORD PTR [rsi+0x190],0x0
  0x00007f003f2cd5a6: jne    0x00007f003f2cd5bf
  0x00007f003f2cd5a8: mov    QWORD PTR [rsi+0x190],rdx
  0x00007f003f2cd5af: mov    QWORD PTR [rsi+0x198],0x1
  0x00007f003f2cd5ba: jmp    0x00007f003f2cd633
  0x00007f003f2cd5bf: cmp    QWORD PTR [rsi+0x1a0],0x0
  0x00007f003f2cd5ca: jne    0x00007f003f2cd5e3
  0x00007f003f2cd5cc: mov    QWORD PTR [rsi+0x1a0],rdx
  0x00007f003f2cd5d3: mov    QWORD PTR [rsi+0x1a8],0x1
  0x00007f003f2cd5de: jmp    0x00007f003f2cd633
  0x00007f003f2cd5e3: cmp    QWORD PTR [rsi+0x1b0],0x0
  0x00007f003f2cd5ee: jne    0x00007f003f2cd607
  0x00007f003f2cd5f0: mov    QWORD PTR [rsi+0x1b0],rdx
  0x00007f003f2cd5f7: mov    QWORD PTR [rsi+0x1b8],0x1
  0x00007f003f2cd602: jmp    0x00007f003f2cd633
  0x00007f003f2cd607: cmp    QWORD PTR [rsi+0x1c0],0x0
  0x00007f003f2cd612: jne    0x00007f003f2cd62b
  0x00007f003f2cd614: mov    QWORD PTR [rsi+0x1c0],rdx
  0x00007f003f2cd61b: mov    QWORD PTR [rsi+0x1c8],0x1
  0x00007f003f2cd626: jmp    0x00007f003f2cd633
  0x00007f003f2cd62b: add    QWORD PTR [rsi+0x140],0x1
  0x00007f003f2cd633: mov    edx,DWORD PTR [rsp+0x28]
  0x00007f003f2cd637: mov    rsi,rax            ;*invokevirtual toUpperCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)

  0x00007f003f2cd63a: nop
  0x00007f003f2cd63b: nop
  0x00007f003f2cd63c: nop
  0x00007f003f2cd63d: movabs rax,0xffffffffffffffff
  0x00007f003f2cd647: call   0x00007f003f1c4f60  ; OopMap{off=684}
                                                ;*invokevirtual toUpperCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {virtual_call}
  0x00007f003f2cd64c: and    eax,0xffff
  0x00007f003f2cd652: and    eax,0xffff
  0x00007f003f2cd658: add    rsp,0x40
  0x00007f003f2cd65c: pop    rbp
  0x00007f003f2cd65d: test   DWORD PTR [rip+0x1b0f4a9d],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2cd663: ret    
  0x00007f003f2cd664: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2cd669: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2cd671: call   0x00007f003f27d5e0  ; OopMap{off=726}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1 (line 6369)
                                                ;   {runtime_call}
  0x00007f003f2cd676: jmp    0x00007f003f2cd3de
  0x00007f003f2cd67b: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2cd680: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2cd688: call   0x00007f003f27d5e0  ; OopMap{off=749}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {runtime_call}
  0x00007f003f2cd68d: jmp    0x00007f003f2cd422
  0x00007f003f2cd692: call   0x00007f003f279000  ; OopMap{rax=Oop off=759}
                                                ;*invokevirtual toUpperCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {runtime_call}
  0x00007f003f2cd697: nop
  0x00007f003f2cd698: nop
  0x00007f003f2cd699: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2cd6a0: movabs r10,0x0
  0x00007f003f2cd6aa: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2cd6b1: movabs r10,0x0
  0x00007f003f2cd6bb: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2cd6c2: add    rsp,0x40
  0x00007f003f2cd6c6: pop    rbp
  0x00007f003f2cd6c7: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2cd6cc: hlt    
  0x00007f003f2cd6cd: hlt    
  0x00007f003f2cd6ce: hlt    
  0x00007f003f2cd6cf: hlt    
  0x00007f003f2cd6d0: hlt    
  0x00007f003f2cd6d1: hlt    
  0x00007f003f2cd6d2: hlt    
  0x00007f003f2cd6d3: hlt    
  0x00007f003f2cd6d4: hlt    
  0x00007f003f2cd6d5: hlt    
  0x00007f003f2cd6d6: hlt    
  0x00007f003f2cd6d7: hlt    
  0x00007f003f2cd6d8: hlt    
  0x00007f003f2cd6d9: hlt    
  0x00007f003f2cd6da: hlt    
  0x00007f003f2cd6db: hlt    
  0x00007f003f2cd6dc: hlt    
  0x00007f003f2cd6dd: hlt    
  0x00007f003f2cd6de: hlt    
  0x00007f003f2cd6df: hlt    
[Stub Code]
  0x00007f003f2cd6e0: nop                       ;   {no_reloc}
  0x00007f003f2cd6e1: nop
  0x00007f003f2cd6e2: nop
  0x00007f003f2cd6e3: nop
  0x00007f003f2cd6e4: nop
  0x00007f003f2cd6e5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2cd6ef: jmp    0x00007f003f2cd6ef  ;   {runtime_call}
  0x00007f003f2cd6f4: nop
  0x00007f003f2cd6f5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2cd6ff: jmp    0x00007f003f2cd6ff  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2cd704: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2cd709: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2cd70e: sub    rsp,0x80
  0x00007f003f2cd715: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2cd71a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2cd71f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2cd724: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2cd729: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2cd72e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2cd733: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2cd738: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2cd73d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2cd742: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2cd747: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2cd74c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2cd751: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2cd756: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2cd75b: mov    QWORD PTR [rsp],r15
  0x00007f003f2cd75f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2cd769: movabs rsi,0x7f003f2cd709  ;   {internal_word}
  0x00007f003f2cd773: mov    rdx,rsp
  0x00007f003f2cd776: and    rsp,0xfffffffffffffff0
  0x00007f003f2cd77a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2cd77f: hlt    
[Deopt Handler Code]
  0x00007f003f2cd780: movabs r10,0x7f003f2cd780  ;   {section_word}
  0x00007f003f2cd78a: push   r10
  0x00007f003f2cd78c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2cd791: hlt    
  0x00007f003f2cd792: hlt    
  0x00007f003f2cd793: hlt    
  0x00007f003f2cd794: hlt    
  0x00007f003f2cd795: hlt    
  0x00007f003f2cd796: hlt    
  0x00007f003f2cd797: hlt    
<nmethod compile_id='125' compiler='C1' level='3' entry='0x00007f003f2cd3a0' size='1688' address='0x00007f003f2cd210' relocation_offset='312' insts_offset='400' stub_offset='1232' scopes_data_offset='1432' scopes_pcs_offset='1504' dependencies_offset='1664' nul_chk_table_offset='1672' metadata_offset='1416' method='java/lang/Character toUpperCase (C)C' bytes='6' count='528' iicount='528' stamp='0.573'/>
<writer thread='139637818533632'/>
<task_queued compile_id='135' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='512' iicount='512' level='3' stamp='0.573' comment='tiered' hot_count='512'/>
[Loaded jdk.vm.ci.code.stack.StackIntrospection from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotStackIntrospection from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.runtime.JVMCIBackend from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotJVMCIMetaAccessContext$ChunkedList from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='136' method='java/util/zip/ZipCoder isUTF8 ()Z' bytes='5' count='128' iicount='128' level='1' stamp='0.574' comment='tiered' hot_count='128'/>
[Loaded jdk.vm.ci.hotspot.HotSpotJVMCIMetaAccessContext$1 from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='137' method='java/util/jar/JarFile access$300 (Ljava/util/jar/JarFile;)Ljava/util/jar/JarVerifier;' bytes='5' count='128' iicount='128' level='1' stamp='0.574' comment='tiered' hot_count='128'/>
[Loaded jdk.vm.ci.hotspot.HotSpotJVMCICompilerConfig from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotJVMCIRuntime$Option from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.runtime.JVMCICompilerFactory from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.services.JVMCIServiceLocator from /home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci-services.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/nio/DirectLongBufferU.put  [0x00007f003f2cda40, 0x00007f003f2cdc30]  496 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00389ad9b0} &apos;put&apos; &apos;(IJ)Ljava/nio/LongBuffer;&apos; in &apos;java/nio/DirectLongBufferU&apos;
  # this:     rsi:rsi   = &apos;java/nio/DirectLongBufferU&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = long
  #           [sp+0x80]  (sp of caller)
  0x00007f003f2cda40: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2cda44: shl    r10,0x3
  0x00007f003f2cda48: cmp    r10,rax
  0x00007f003f2cda4b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2cda51: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2cda5c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2cda60: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2cda67: push   rbp
  0x00007f003f2cda68: sub    rsp,0x70
  0x00007f003f2cda6c: movabs rax,0x7f0038a8b8e8  ;   {metadata(method data for {method} {0x00007f00389ad9b0} &apos;put&apos; &apos;(IJ)Ljava/nio/LongBuffer;&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007f003f2cda76: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f2cda7c: add    edi,0x8
  0x00007f003f2cda7f: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f2cda85: movabs rax,0x7f00389ad9b0  ;   {metadata({method} {0x00007f00389ad9b0} &apos;put&apos; &apos;(IJ)Ljava/nio/LongBuffer;&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007f003f2cda8f: and    edi,0x1ff8
  0x00007f003f2cda95: cmp    edi,0x0
  0x00007f003f2cda98: je     0x00007f003f2cdb21  ;*getstatic unsafe {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::put@0 (line 306)

  0x00007f003f2cda9e: mov    rax,rsi
  0x00007f003f2cdaa1: movabs rdi,0x7f0038a8b8e8  ;   {metadata(method data for {method} {0x00007f00389ad9b0} &apos;put&apos; &apos;(IJ)Ljava/nio/LongBuffer;&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007f003f2cdaab: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f2cdab3: cmp    edx,DWORD PTR [rsi+0x1c]  ; implicit exception: dispatches to 0x00007f003f2cdb38
  0x00007f003f2cdab6: jae    0x00007f003f2cdb42  ;*invokevirtual checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::put@6 (line 306)

  0x00007f003f2cdabc: mov    rax,rsi
  0x00007f003f2cdabf: movabs rdi,0x7f0038a8b8e8  ;   {metadata(method data for {method} {0x00007f00389ad9b0} &apos;put&apos; &apos;(IJ)Ljava/nio/LongBuffer;&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007f003f2cdac9: add    QWORD PTR [rdi+0x1c8],0x1
  0x00007f003f2cdad1: movabs rax,0x7f0038a57278  ;   {metadata(method data for {method} {0x00007f00389ad530} &apos;ix&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007f003f2cdadb: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f2cdae1: add    edi,0x8
  0x00007f003f2cdae4: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f2cdaea: movabs rax,0x7f00389ad530  ;   {metadata({method} {0x00007f00389ad530} &apos;ix&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007f003f2cdaf4: and    edi,0x7ffff8
  0x00007f003f2cdafa: cmp    edi,0x0
  0x00007f003f2cdafd: je     0x00007f003f2cdb4b
  0x00007f003f2cdb03: mov    rax,QWORD PTR [rsi+0x10]  ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::ix@1 (line 245)
                                                ; - java.nio.DirectLongBufferU::put@9 (line 306)

  0x00007f003f2cdb07: movsxd rdx,edx
  0x00007f003f2cdb0a: shl    rdx,0x3
  0x00007f003f2cdb0e: mov    QWORD PTR [rax+rdx*1],rcx
  0x00007f003f2cdb12: mov    rax,rsi
  0x00007f003f2cdb15: add    rsp,0x70
  0x00007f003f2cdb19: pop    rbp
  0x00007f003f2cdb1a: test   DWORD PTR [rip+0x1b0f45e0],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2cdb20: ret    
  0x00007f003f2cdb21: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2cdb26: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2cdb2e: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=243}
                                                ;*synchronization entry
                                                ; - java.nio.DirectLongBufferU::put@-1 (line 306)
                                                ;   {runtime_call}
  0x00007f003f2cdb33: jmp    0x00007f003f2cda9e
  0x00007f003f2cdb38: call   0x00007f003f279000  ; OopMap{rsi=Oop off=253}
                                                ;*invokevirtual checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::put@6 (line 306)
                                                ;   {runtime_call}
  0x00007f003f2cdb3d: call   0x00007f003f279000  ; OopMap{rsi=Oop off=258}
                                                ;*invokevirtual checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::put@6 (line 306)
                                                ;   {runtime_call}
  0x00007f003f2cdb42: mov    QWORD PTR [rsp],rdx
  0x00007f003f2cdb46: call   0x00007f003f278b80  ; OopMap{rsi=Oop off=267}
                                                ;*invokevirtual checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::put@6 (line 306)
                                                ;   {runtime_call}
  0x00007f003f2cdb4b: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2cdb50: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2cdb58: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=285}
                                                ;*synchronization entry
                                                ; - java.nio.DirectLongBufferU::ix@-1 (line 245)
                                                ; - java.nio.DirectLongBufferU::put@9 (line 306)
                                                ;   {runtime_call}
  0x00007f003f2cdb5d: jmp    0x00007f003f2cdb03
  0x00007f003f2cdb5f: nop
  0x00007f003f2cdb60: nop
  0x00007f003f2cdb61: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2cdb68: movabs r10,0x0
  0x00007f003f2cdb72: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2cdb79: movabs r10,0x0
  0x00007f003f2cdb83: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2cdb8a: add    rsp,0x70
  0x00007f003f2cdb8e: pop    rbp
  0x00007f003f2cdb8f: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2cdb94: hlt    
  0x00007f003f2cdb95: hlt    
  0x00007f003f2cdb96: hlt    
  0x00007f003f2cdb97: hlt    
  0x00007f003f2cdb98: hlt    
  0x00007f003f2cdb99: hlt    
  0x00007f003f2cdb9a: hlt    
  0x00007f003f2cdb9b: hlt    
  0x00007f003f2cdb9c: hlt    
  0x00007f003f2cdb9d: hlt    
  0x00007f003f2cdb9e: hlt    
  0x00007f003f2cdb9f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2cdba0: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2cdba5: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2cdbaa: sub    rsp,0x80
  0x00007f003f2cdbb1: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2cdbb6: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2cdbbb: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2cdbc0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2cdbc5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2cdbca: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2cdbcf: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2cdbd4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2cdbd9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2cdbde: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2cdbe3: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2cdbe8: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2cdbed: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2cdbf2: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2cdbf7: mov    QWORD PTR [rsp],r15
  0x00007f003f2cdbfb: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2cdc05: movabs rsi,0x7f003f2cdba5  ;   {internal_word}
  0x00007f003f2cdc0f: mov    rdx,rsp
  0x00007f003f2cdc12: and    rsp,0xfffffffffffffff0
  0x00007f003f2cdc16: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2cdc1b: hlt    
[Deopt Handler Code]
  0x00007f003f2cdc1c: movabs r10,0x7f003f2cdc1c  ;   {section_word}
  0x00007f003f2cdc26: push   r10
  0x00007f003f2cdc28: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2cdc2d: hlt    
  0x00007f003f2cdc2e: hlt    
  0x00007f003f2cdc2f: hlt    
<nmethod compile_id='134' compiler='C1' level='3' entry='0x00007f003f2cda40' size='1176' address='0x00007f003f2cd8d0' relocation_offset='312' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='984' dependencies_offset='1144' nul_chk_table_offset='1152' oops_offset='864' metadata_offset='872' method='java/nio/DirectLongBufferU put (IJ)Ljava/nio/LongBuffer;' bytes='18' count='552' iicount='552' stamp='0.576'/>
<writer thread='139637818533632'/>
<task_queued compile_id='138' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='8704' iicount='8704' level='4' stamp='0.576' comment='tiered' hot_count='8704'/>
<writer thread='139637817480960'/>
<sweeper state='finished' traversals='1'  total_blobs='373' nmethods='121' adapters='182' free_code_cache='334164608' stamp='0.576'/>
----------------------------------------------------------------------
java/lang/String.startsWith  [0x00007f003f2cdf00, 0x00007f003f2ce088]  392 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003876bc80} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2cdf00: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2cdf04: shl    r10,0x3
  0x00007f003f2cdf08: cmp    r10,rax
  0x00007f003f2cdf0b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2cdf11: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2cdf1c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2cdf20: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2cdf27: push   rbp
  0x00007f003f2cdf28: sub    rsp,0x30
  0x00007f003f2cdf2c: movabs rcx,0x7f0038a8bbb0  ;   {metadata(method data for {method} {0x00007f003876bc80} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2cdf36: mov    edi,DWORD PTR [rcx+0xfc]
  0x00007f003f2cdf3c: add    edi,0x8
  0x00007f003f2cdf3f: mov    DWORD PTR [rcx+0xfc],edi
  0x00007f003f2cdf45: movabs rcx,0x7f003876bc80  ;   {metadata({method} {0x00007f003876bc80} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2cdf4f: and    edi,0x1ff8
  0x00007f003f2cdf55: cmp    edi,0x0
  0x00007f003f2cdf58: je     0x00007f003f2cdf93  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@0 (line 1434)

  0x00007f003f2cdf5e: mov    rcx,rsi
  0x00007f003f2cdf61: movabs rdi,0x7f0038a8bbb0  ;   {metadata(method data for {method} {0x00007f003876bc80} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2cdf6b: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f2cdf73: mov    ecx,0x0            ;*invokevirtual startsWith {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@3 (line 1434)

  0x00007f003f2cdf78: nop
  0x00007f003f2cdf79: nop
  0x00007f003f2cdf7a: nop
  0x00007f003f2cdf7b: nop
  0x00007f003f2cdf7c: nop
  0x00007f003f2cdf7d: nop
  0x00007f003f2cdf7e: nop
  0x00007f003f2cdf7f: call   0x00007f003f1c4d60  ; OopMap{off=132}
                                                ;*invokevirtual startsWith {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@3 (line 1434)
                                                ;   {optimized virtual_call}
  0x00007f003f2cdf84: and    eax,0x1
  0x00007f003f2cdf87: add    rsp,0x30
  0x00007f003f2cdf8b: pop    rbp
  0x00007f003f2cdf8c: test   DWORD PTR [rip+0x1b0f416e],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2cdf92: ret    
  0x00007f003f2cdf93: mov    QWORD PTR [rsp+0x8],rcx
  0x00007f003f2cdf98: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2cdfa0: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop off=165}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1434)
                                                ;   {runtime_call}
  0x00007f003f2cdfa5: jmp    0x00007f003f2cdf5e
  0x00007f003f2cdfa7: nop
  0x00007f003f2cdfa8: nop
  0x00007f003f2cdfa9: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2cdfb0: movabs r10,0x0
  0x00007f003f2cdfba: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2cdfc1: movabs r10,0x0
  0x00007f003f2cdfcb: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2cdfd2: add    rsp,0x30
  0x00007f003f2cdfd6: pop    rbp
  0x00007f003f2cdfd7: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2cdfdc: hlt    
  0x00007f003f2cdfdd: hlt    
  0x00007f003f2cdfde: hlt    
  0x00007f003f2cdfdf: hlt    
[Stub Code]
  0x00007f003f2cdfe0: nop                       ;   {no_reloc}
  0x00007f003f2cdfe1: nop
  0x00007f003f2cdfe2: nop
  0x00007f003f2cdfe3: nop
  0x00007f003f2cdfe4: nop
  0x00007f003f2cdfe5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2cdfef: jmp    0x00007f003f2cdfef  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2cdff4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2cdff9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2cdffe: sub    rsp,0x80
  0x00007f003f2ce005: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2ce00a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2ce00f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2ce014: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2ce019: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2ce01e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2ce023: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2ce028: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2ce02d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2ce032: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2ce037: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2ce03c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2ce041: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2ce046: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2ce04b: mov    QWORD PTR [rsp],r15
  0x00007f003f2ce04f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2ce059: movabs rsi,0x7f003f2cdff9  ;   {internal_word}
  0x00007f003f2ce063: mov    rdx,rsp
  0x00007f003f2ce066: and    rsp,0xfffffffffffffff0
  0x00007f003f2ce06a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2ce06f: hlt    
[Deopt Handler Code]
  0x00007f003f2ce070: movabs r10,0x7f003f2ce070  ;   {section_word}
  0x00007f003f2ce07a: push   r10
  0x00007f003f2ce07c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2ce081: hlt    
  0x00007f003f2ce082: hlt    
  0x00007f003f2ce083: hlt    
  0x00007f003f2ce084: hlt    
  0x00007f003f2ce085: hlt    
  0x00007f003f2ce086: hlt    
  0x00007f003f2ce087: hlt    
<nmethod compile_id='135' compiler='C1' level='3' entry='0x00007f003f2cdf00' size='912' address='0x00007f003f2cdd90' relocation_offset='312' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='808' dependencies_offset='904' metadata_offset='760' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='572' iicount='572' stamp='0.577'/>
<writer thread='139637818533632'/>
<task_queued compile_id='139' method='sun/util/locale/BaseLocale getLanguage ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.577' comment='tiered' hot_count='128'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/Character.toUpperCase  [0x00007f003f2ce2e0, 0x00007f003f2ce678]  920 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f0038816c00} &apos;toUpperCa
<writer thread='139637818533632'/>
[Loaded org.graalvm.compiler.hotspot.HotSpotGraalJVMCIServiceLocator from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
<writer thread='139637817480960'/>
se&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2ce2e0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2ce2e7: push   rbp
  0x00007f003f2ce2e8: sub    rsp,0x30
  0x00007f003f2ce2ec: movabs rdi,0x7f0038a8ab80  ;   {metadata(method data for {method} {0x00007f0038816c00} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2ce2f6: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2ce2fc: add    ebx,0x8
  0x00007f003f2ce2ff: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2ce305: movabs rdi,0x7f0038816c00  ;   {metadata({method} {0x00007f0038816c00} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2ce30f: and    ebx,0x1ff8
  0x00007f003f2ce315: cmp    ebx,0x0
  0x00007f003f2ce318: je     0x00007f003f2ce558  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@0 (line 6398)

  0x00007f003f2ce31e: movabs rdi,0x7f0038a8ab80  ;   {metadata(method data for {method} {0x00007f0038816c00} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2ce328: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f2ce330: mov    rdi,rsi
  0x00007f003f2ce333: mov    rsi,rdi            ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)

  0x00007f003f2ce336: mov    DWORD PTR [rsp+0x20],edi
  0x00007f003f2ce33a: nop
  0x00007f003f2ce33b: nop
  0x00007f003f2ce33c: nop
  0x00007f003f2ce33d: nop
  0x00007f003f2ce33e: nop
  0x00007f003f2ce33f: call   0x00007f003f1c5160  ; OopMap{off=100}
                                                ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)
                                                ;   {static_call}
  0x00007f003f2ce344: cmp    rax,QWORD PTR [rax]  ; implicit exception: dispatches to 0x00007f003f2ce56f
  0x00007f003f2ce347: mov    rdx,rax
  0x00007f003f2ce34a: movabs rsi,0x7f0038a8ab80  ;   {metadata(method data for {method} {0x00007f0038816c00} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2ce354: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2ce357: shl    rdx,0x3
  0x00007f003f2ce35b: cmp    rdx,QWORD PTR [rsi+0x150]
  0x00007f003f2ce362: jne    0x00007f003f2ce371
  0x00007f003f2ce364: add    QWORD PTR [rsi+0x158],0x1
  0x00007f003f2ce36c: jmp    0x00007f003f2ce533
  0x00007f003f2ce371: cmp    rdx,QWORD PTR [rsi+0x160]
  0x00007f003f2ce378: jne    0x00007f003f2ce387
  0x00007f003f2ce37a: add    QWORD PTR [rsi+0x168],0x1
  0x00007f003f2ce382: jmp    0x00007f003f2ce533
  0x00007f003f2ce387: cmp    rdx,QWORD PTR [rsi+0x170]
  0x00007f003f2ce38e: jne    0x00007f003f2ce39d
  0x00007f003f2ce390: add    QWORD PTR [rsi+0x178],0x1
  0x00007f003f2ce398: jmp    0x00007f003f2ce533
  0x00007f003f2ce39d: cmp    rdx,QWORD PTR [rsi+0x180]
  0x00007f003f2ce3a4: jne    0x00007f003f2ce3b3
  0x00007f003f2ce3a6: add    QWORD PTR [rsi+0x188],0x1
  0x00007f003f2ce3ae: jmp    0x00007f003f2ce533
  0x00007f003f2ce3b3: cmp    rdx,QWORD PTR [rsi+0x190]
  0x00007f003f2ce3ba: jne    0x00007f003f2ce3c9
  0x00007f003f2ce3bc: add    QWORD PTR [rsi+0x198],0x1
  0x00007f003f2ce3c4: jmp    0x00007f003f2ce533
  0x00007f003f2ce3c9: cmp    rdx,QWORD PTR [rsi+0x1a0]
  0x00007f003f2ce3d0: jne    0x00007f003f2ce3df
  0x00007f003f2ce3d2: add    QWORD PTR [rsi+0x1a8],0x1
  0x00007f003f2ce3da: jmp    0x00007f003f2ce533
  0x00007f003f2ce3df: cmp    rdx,QWORD PTR [rsi+0x1b0]
  0x00007f003f2ce3e6: jne    0x00007f003f2ce3f5
  0x00007f003f2ce3e8: add    QWORD PTR [rsi+0x1b8],0x1
  0x00007f003f2ce3f0: jmp    0x00007f003f2ce533
  0x00007f003f2ce3f5: cmp    rdx,QWORD PTR [rsi+0x1c0]
  0x00007f003f2ce3fc: jne    0x00007f003f2ce40b
  0x00007f003f2ce3fe: add    QWORD PTR [rsi+0x1c8],0x1
  0x00007f003f2ce406: jmp    0x00007f003f2ce533
  0x00007f003f2ce40b: cmp    QWORD PTR [rsi+0x150],0x0
  0x00007f003f2ce416: jne    0x00007f003f2ce42f
  0x00007f003f2ce418: mov    QWORD PTR [rsi+0x150],rdx
  0x00007f003f2ce41f: mov    QWORD PTR [rsi+0x158],0x1
  0x00007f003f2ce42a: jmp    0x00007f003f2ce533
  0x00007f003f2ce42f: cmp    QWORD PTR [rsi+0x160],0x0
  0x00007f003f2ce43a: jne    0x00007f003f2ce453
  0x00007f003f2ce43c: mov    QWORD PTR [rsi+0x160],rdx
  0x00007f003f2ce443: mov    QWORD PTR [rsi+0x168],0x1
  0x00007f003f2ce44e: jmp    0x00007f003f2ce533
  0x00007f003f2ce453: cmp    QWORD PTR [rsi+0x170],0x0
  0x00007f003f2ce45e: jne    0x00007f003f2ce477
  0x00007f003f2ce460: mov    QWORD PTR [rsi+0x170],rdx
  0x00007f003f2ce467: mov    QWORD PTR [rsi+0x178],0x1
  0x00007f003f2ce472: jmp    0x00007f003f2ce533
  0x00007f003f2ce477: cmp    QWORD PTR [rsi+0x180],0x0
  0x00007f003f2ce482: jne    0x00007f003f2ce49b
  0x00007f003f2ce484: mov    QWORD PTR [rsi+0x180],rdx
  0x00007f003f2ce48b: mov    QWORD PTR [rsi+0x188],0x1
  0x00007f003f2ce496: jmp    0x00007f003f2ce533
  0x00007f003f2ce49b: cmp    QWORD PTR [rsi+0x190],0x0
  0x00007f003f2ce4a6: jne    0x00007f003f2ce4bf
  0x00007f003f2ce4a8: mov    QWORD PTR [rsi+0x190],rdx
  0x00007f003f2ce4af: mov    QWORD PTR [rsi+0x198],0x1
  0x00007f003f2ce4ba: jmp    0x00007f003f2ce533
  0x00007f003f2ce4bf: cmp    QWORD PTR [rsi+0x1a0],0x0
  0x00007f003f2ce4ca: jne    0x00007f003f2ce4e3
  0x00007f003f2ce4cc: mov    QWORD PTR [rsi+0x1a0],rdx
  0x00007f003f2ce4d3: mov    QWORD PTR [rsi+0x1a8],0x1
  0x00007f003f2ce4de: jmp    0x00007f003f2ce533
  0x00007f003f2ce4e3: cmp    QWORD PTR [rsi+0x1b0],0x0
  0x00007f003f2ce4ee: jne    0x00007f003f2ce507
  0x00007f003f2ce4f0: mov    QWORD PTR [rsi+0x1b0],rdx
  0x00007f003f2ce4f7: mov    QWORD PTR [rsi+0x1b8],0x1
  0x00007f003f2ce502: jmp    0x00007f003f2ce533
  0x00007f003f2ce507: cmp    QWORD PTR [rsi+0x1c0],0x0
  0x00007f003f2ce512: jne    0x00007f003f2ce52b
  0x00007f003f2ce514: mov    QWORD PTR [rsi+0x1c0],rdx
  0x00007f003f2ce51b: mov    QWORD PTR [rsi+0x1c8],0x1
  0x00007f003f2ce526: jmp    0x00007f003f2ce533
  0x00007f003f2ce52b: add    QWORD PTR [rsi+0x140],0x1
  0x00007f003f2ce533: mov    edx,DWORD PTR [rsp+0x20]
  0x00007f003f2ce537: mov    rsi,rax            ;*invokevirtual toUpperCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)

  0x00007f003f2ce53a: nop
  0x00007f003f2ce53b: nop
  0x00007f003f2ce53c: nop
  0x00007f003f2ce53d: movabs rax,0xffffffffffffffff
  0x00007f003f2ce547: call   0x00007f003f1c4f60  ; OopMap{off=620}
                                                ;*invokevirtual toUpperCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ;   {virtual_call}
  0x00007f003f2ce54c: add    rsp,0x30
  0x00007f003f2ce550: pop    rbp
  0x00007f003f2ce551: test   DWORD PTR [rip+0x1b0f3ba9],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2ce557: ret    
  0x00007f003f2ce558: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2ce55d: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2ce565: call   0x00007f003f27d5e0  ; OopMap{off=650}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1 (line 6398)
                                                ;   {runtime_call}
  0x00007f003f2ce56a: jmp    0x00007f003f2ce31e
  0x00007f003f2ce56f: call   0x00007f003f279000  ; OopMap{rax=Oop off=660}
                                                ;*invokevirtual toUpperCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ;   {runtime_call}
  0x00007f003f2ce574: nop
  0x00007f003f2ce575: nop
  0x00007f003f2ce576: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2ce57d: movabs r10,0x0
  0x00007f003f2ce587: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2ce58e: movabs r10,0x0
  0x00007f003f2ce598: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2ce59f: add    rsp,0x30
  0x00007f003f2ce5a3: pop    rbp
  0x00007f003f2ce5a4: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2ce5a9: hlt    
  0x00007f003f2ce5aa: hlt    
  0x00007f003f2ce5ab: hlt    
  0x00007f003f2ce5ac: hlt    
  0x00007f003f2ce5ad: hlt    
  0x00007f003f2ce5ae: hlt    
  0x00007f003f2ce5af: hlt    
  0x00007f003f2ce5b0: hlt    
  0x00007f003f2ce5b1: hlt    
  0x00007f003f2ce5b2: hlt    
  0x00007f003f2ce5b3: hlt    
  0x00007f003f2ce5b4: hlt    
  0x00007f003f2ce5b5: hlt    
  0x00007f003f2ce5b6: hlt    
  0x00007f003f2ce5b7: hlt    
  0x00007f003f2ce5b8: hlt    
  0x00007f003f2ce5b9: hlt    
  0x00007f003f2ce5ba: hlt    
  0x00007f003f2ce5bb: hlt    
  0x00007f003f2ce5bc: hlt    
  0x00007f003f2ce5bd: hlt    
  0x00007f003f2ce5be: hlt    
  0x00007f003f2ce5bf: hlt    
[Stub Code]
  0x00007f003f2ce5c0: nop                       ;   {no_reloc}
  0x00007f003f2ce5c1: nop
  0x00007f003f2ce5c2: nop
  0x00007f003f2ce5c3: nop
  0x00007f003f2ce5c4: nop
  0x00007f003f2ce5c5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2ce5cf: jmp    0x00007f003f2ce5cf  ;   {runtime_call}
  0x00007f003f2ce5d4: nop
  0x00007f003f2ce5d5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2ce5df: jmp    0x00007f003f2ce5df  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2ce5e4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2ce5e9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2ce5ee: sub    rsp,0x80
  0x00007f003f2ce5f5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2ce5fa: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2ce5ff: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2ce604: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2ce609: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2ce60e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2ce613: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2ce618: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2ce61d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2ce622: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2ce627: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2ce62c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2ce631: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2ce636: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2ce63b: mov    QWORD PTR [rsp],r15
  0x00007f003f2ce63f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2ce649: movabs rsi,0x7f003f2ce5e9  ;   {internal_word}
  0x00007f003f2ce653: mov    rdx,rsp
  0x00007f003f2ce656: and    rsp,0xfffffffffffffff0
  0x00007f003f2ce65a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2ce65f: hlt    
[Deopt Handler Code]
  0x00007f003f2ce660: movabs r10,0x7f003f2ce660  ;   {section_word}
  0x00007f003f2ce66a: push   r10
  0x00007f003f2ce66c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2ce671: hlt    
  0x00007f003f2ce672: hlt    
  0x00007f003f2ce673: hlt    
  0x00007f003f2ce674: hlt    
  0x00007f003f2ce675: hlt    
  0x00007f003f2ce676: hlt    
  0x00007f003f2ce677: hlt    
<nmethod compile_id='126' compiler='C1' level='3' entry='0x00007f003f2ce2e0' size='1544' address='0x00007f003f2ce150' relocation_offset='312' insts_offset='400' stub_offset='1136' scopes_data_offset='1328' scopes_pcs_offset='1376' dependencies_offset='1520' nul_chk_table_offset='1528' metadata_offset='1320' method='java/lang/Character toUpperCase (I)I' bytes='9' count='564' iicount='564' stamp='0.579'/>
<writer thread='139637818533632'/>
<task_queued compile_id='140' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='1174' backedge_count='49587' iicount='1174' level='4' stamp='0.579' comment='tiered' hot_count='1174'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
sun/misc/PerfCounter.add  [0x00007f003f2ce940, 0x00007f003f2cf258]  2328 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00389a2120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;
  # this:     rsi:rsi   = &apos;sun/misc/PerfCounter&apos;
  # parm0:    rdx:rdx   = long
  #           [sp+0x90]  (sp of caller)
  0x00007f003f2ce940: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2ce944: shl    r10,0x3
  0x00007f003f2ce948: cmp    r10,rax
<writer thread='139637818533632'/>
[Loaded org.graalvm.compiler.hotspot.HotSpotGraalJVMCIServiceLocator$Shared from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
<writer thread='139637817480960'/>
  0x00007f003f2ce94b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2ce951: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2ce95c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2ce960: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2ce967: push   rbp
  0x00007f003f2ce968: sub    rsp,0x80
  0x00007f003f2ce96f: lea    rdi,[rsp+0x50]
  0x00007f003f2ce974: mov    QWORD PTR [rdi+0x8],rsi
  0x00007f003f2ce978: mov    rax,QWORD PTR [rsi]
  0x00007f003f2ce97b: mov    rbx,rax
  0x00007f003f2ce97e: and    rbx,0x7
  0x00007f003f2ce982: cmp    rbx,0x5
  0x00007f003f2ce986: jne    0x00007f003f2cea0d
  0x00007f003f2ce98c: mov    ebx,DWORD PTR [rsi+0x8]
  0x00007f003f2ce98f: shl    rbx,0x3
  0x00007f003f2ce993: mov    rbx,QWORD PTR [rbx+0xa8]
  0x00007f003f2ce99a: or     rbx,r15
  0x00007f003f2ce99d: xor    rbx,rax
  0x00007f003f2ce9a0: and    rbx,0xffffffffffffff87
  0x00007f003f2ce9a4: je     0x00007f003f2cea35
  0x00007f003f2ce9aa: test   rbx,0x7
  0x00007f003f2ce9b1: jne    0x00007f003f2ce9fa
  0x00007f003f2ce9b3: test   rbx,0x300
  0x00007f003f2ce9ba: jne    0x00007f003f2ce9d9
  0x00007f003f2ce9bc: and    rax,0x37f
  0x00007f003f2ce9c3: mov    rbx,rax
  0x00007f003f2ce9c6: or     rbx,r15
  0x00007f003f2ce9c9: lock cmpxchg QWORD PTR [rsi],rbx
  0x00007f003f2ce9ce: jne    0x00007f003f2cf073
  0x00007f003f2ce9d4: jmp    0x00007f003f2cea35
  0x00007f003f2ce9d9: mov    ebx,DWORD PTR [rsi+0x8]
  0x00007f003f2ce9dc: shl    rbx,0x3
  0x00007f003f2ce9e0: mov    rbx,QWORD PTR [rbx+0xa8]
  0x00007f003f2ce9e7: or     rbx,r15
  0x00007f003f2ce9ea: lock cmpxchg QWORD PTR [rsi],rbx
  0x00007f003f2ce9ef: jne    0x00007f003f2cf073
  0x00007f003f2ce9f5: jmp    0x00007f003f2cea35
  0x00007f003f2ce9fa: mov    ebx,DWORD PTR [rsi+0x8]
  0x00007f003f2ce9fd: shl    rbx,0x3
  0x00007f003f2cea01: mov    rbx,QWORD PTR [rbx+0xa8]
  0x00007f003f2cea08: lock cmpxchg QWORD PTR [rsi],rbx
  0x00007f003f2cea0d: mov    rax,QWORD PTR [rsi]
  0x00007f003f2cea10: or     rax,0x1
  0x00007f003f2cea14: mov    QWORD PTR [rdi],rax
  0x00007f003f2cea17: lock cmpxchg QWORD PTR [rsi],rdi
  0x00007f003f2cea1c: je     0x00007f003f2cea35
  0x00007f003f2cea22: sub    rax,rsp
  0x00007f003f2cea25: and    rax,0xfffffffffffff007
  0x00007f003f2cea2c: mov    QWORD PTR [rdi],rax
  0x00007f003f2cea2f: jne    0x00007f003f2cf073
  0x00007f003f2cea35: movabs rax,0x7f0038a8b178  ;   {metadata(method data for {method} {0x00007f00389a2120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2cea3f: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f2cea45: add    edi,0x8
  0x00007f003f2cea48: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f2cea4e: movabs rax,0x7f00389a2120  ;   {metadata({method} {0x00007f00389a2120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2cea58: and    edi,0x1ff8
  0x00007f003f2cea5e: cmp    edi,0x0
  0x00007f003f2cea61: je     0x00007f003f2cf086  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@0 (line 97)

  0x00007f003f2cea67: mov    QWORD PTR [rsp+0x40],rdx
  0x00007f003f2cea6c: mov    rax,rsi
  0x00007f003f2cea6f: movabs rdi,0x7f0038a8b178  ;   {metadata(method data for {method} {0x00007f00389a2120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2cea79: add    QWORD PTR [rdi+0x148],0x1
  0x00007f003f2cea81: lea    rdi,[rsp+0x60]
  0x00007f003f2cea86: mov    QWORD PTR [rdi+0x8],rsi
  0x00007f003f2cea8a: mov    rax,QWORD PTR [rsi]
  0x00007f003f2cea8d: mov    rbx,rax
  0x00007f003f2cea90: and    rbx,0x7
  0x00007f003f2cea94: cmp    rbx,0x5
  0x00007f003f2cea98: jne    0x00007f003f2ceb1f
  0x00007f003f2cea9e: mov    ebx,DWORD PTR [rsi+0x8]
  0x00007f003f2ceaa1: shl    rbx,0x3
  0x00007f003f2ceaa5: mov    rbx,QWORD PTR [rbx+0xa8]
  0x00007f003f2ceaac: or     rbx,r15
  0x00007f003f2ceaaf: xor    rbx,rax
  0x00007f003f2ceab2: and    rbx,0xffffffffffffff87
  0x00007f003f2ceab6: je     0x00007f003f2ceb47
  0x00007f003f2ceabc: test   rbx,0x7
  0x00007f003f2ceac3: jne    0x00007f003f2ceb0c
  0x00007f003f2ceac5: test   rbx,0x300
  0x00007f003f2ceacc: jne    0x00007f003f2ceaeb
  0x00007f003f2ceace: and    rax,0x37f
  0x00007f003f2cead5: mov    rbx,rax
  0x00007f003f2cead8: or     rbx,r15
  0x00007f003f2ceadb: lock cmpxchg QWORD PTR [rsi],rbx
  0x00007f003f2ceae0: jne    0x00007f003f2cf09d
  0x00007f003f2ceae6: jmp    0x00007f003f2ceb47
  0x00007f003f2ceaeb: mov    ebx,DWORD PTR [rsi+0x8]
  0x00007f003f2ceaee: shl    rbx,0x3
  0x00007f003f2ceaf2: mov    rbx,QWORD PTR [rbx+0xa8]
  0x00007f003f2ceaf9: or     rbx,r15
  0x00007f003f2ceafc: lock cmpxchg QWORD PTR [rsi],rbx
  0x00007f003f2ceb01: jne    0x00007f003f2cf09d
  0x00007f003f2ceb07: jmp    0x00007f003f2ceb47
  0x00007f003f2ceb0c: mov    ebx,DWORD PTR [rsi+0x8]
  0x00007f003f2ceb0f: shl    rbx,0x3
  0x00007f003f2ceb13: mov    rbx,QWORD PTR [rbx+0xa8]
  0x00007f003f2ceb1a: lock cmpxchg QWORD PTR [rsi],rbx
  0x00007f003f2ceb1f: mov    rax,QWORD PTR [rsi]
  0x00007f003f2ceb22: or     rax,0x1
  0x00007f003f2ceb26: mov    QWORD PTR [rdi],rax
  0x00007f003f2ceb29: lock cmpxchg QWORD PTR [rsi],rdi
  0x00007f003f2ceb2e: je     0x00007f003f2ceb47
  0x00007f003f2ceb34: sub    rax,rsp
  0x00007f003f2ceb37: and    rax,0xfffffffffffff007
  0x00007f003f2ceb3e: mov    QWORD PTR [rdi],rax
  0x00007f003f2ceb41: jne    0x00007f003f2cf09d  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)

  0x00007f003f2ceb47: movabs rdi,0x7f0038a8b428  ;   {metadata(method data for {method} {0x00007f00389a1fa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2ceb51: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2ceb57: add    ebx,0x8
  0x00007f003f2ceb5a: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2ceb60: movabs rdi,0x7f00389a1fa0  ;   {metadata({method} {0x00007f00389a1fa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2ceb6a: and    ebx,0x7ffff8
  0x00007f003f2ceb70: cmp    ebx,0x0
  0x00007f003f2ceb73: je     0x00007f003f2cf0b0
  0x00007f003f2ceb79: mov    edi,DWORD PTR [rsi+0x10]
  0x00007f003f2ceb7c: shl    rdi,0x3            ;*getfield lb {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)

  0x00007f003f2ceb80: cmp    rax,QWORD PTR [rdi]  ; implicit exception: dispatches to 0x00007f003f2cf0c7
  0x00007f003f2ceb83: mov    rbx,rdi
  0x00007f003f2ceb86: movabs rax,0x7f0038a8b428  ;   {metadata(method data for {method} {0x00007f00389a1fa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2ceb90: mov    ebx,DWORD PTR [rbx+0x8]
  0x00007f003f2ceb93: shl    rbx,0x3
  0x00007f003f2ceb97: cmp    rbx,QWORD PTR [rax+0x140]
  0x00007f003f2ceb9e: jne    0x00007f003f2cebad
  0x00007f003f2ceba0: add    QWORD PTR [rax+0x148],0x1
  0x00007f003f2ceba8: jmp    0x00007f003f2ced6f
  0x00007f003f2cebad: cmp    rbx,QWORD PTR [rax+0x150]
  0x00007f003f2cebb4: jne    0x00007f003f2cebc3
  0x00007f003f2cebb6: add    QWORD PTR [rax+0x158],0x1
  0x00007f003f2cebbe: jmp    0x00007f003f2ced6f
  0x00007f003f2cebc3: cmp    rbx,QWORD PTR [rax+0x160]
  0x00007f003f2cebca: jne    0x00007f003f2cebd9
  0x00007f003f2cebcc: add    QWORD PTR [rax+0x168],0x1
  0x00007f003f2cebd4: jmp    0x00007f003f2ced6f
  0x00007f003f2cebd9: cmp    rbx,QWORD PTR [rax+0x170]
  0x00007f003f2cebe0: jne    0x00007f003f2cebef
  0x00007f003f2cebe2: add    QWORD PTR [rax+0x178],0x1
  0x00007f003f2cebea: jmp    0x00007f003f2ced6f
  0x00007f003f2cebef: cmp    rbx,QWORD PTR [rax+0x180]
  0x00007f003f2cebf6: jne    0x00007f003f2cec05
  0x00007f003f2cebf8: add    QWORD PTR [rax+0x188],0x1
  0x00007f003f2cec00: jmp    0x00007f003f2ced6f
  0x00007f003f2cec05: cmp    rbx,QWORD PTR [rax+0x190]
  0x00007f003f2cec0c: jne    0x00007f003f2cec1b
  0x00007f003f2cec0e: add    QWORD PTR [rax+0x198],0x1
  0x00007f003f2cec16: jmp    0x00007f003f2ced6f
  0x00007f003f2cec1b: cmp    rbx,QWORD PTR [rax+0x1a0]
  0x00007f003f2cec22: jne    0x00007f003f2cec31
  0x00007f003f2cec24: add    QWORD PTR [rax+0x1a8],0x1
  0x00007f003f2cec2c: jmp    0x00007f003f2ced6f
  0x00007f003f2cec31: cmp    rbx,QWORD PTR [rax+0x1b0]
  0x00007f003f2cec38: jne    0x00007f003f2cec47
  0x00007f003f2cec3a: add    QWORD PTR [rax+0x1b8],0x1
  0x00007f003f2cec42: jmp    0x00007f003f2ced6f
  0x00007f003f2cec47: cmp    QWORD PTR [rax+0x140],0x0
  0x00007f003f2cec52: jne    0x00007f003f2cec6b
  0x00007f003f2cec54: mov    QWORD PTR [rax+0x140],rbx
  0x00007f003f2cec5b: mov    QWORD PTR [rax+0x148],0x1
  0x00007f003f2cec66: jmp    0x00007f003f2ced6f
  0x00007f003f2cec6b: cmp    QWORD PTR [rax+0x150],0x0
  0x00007f003f2cec76: jne    0x00007f003f2cec8f
  0x00007f003f2cec78: mov    QWORD PTR [rax+0x150],rbx
  0x00007f003f2cec7f: mov    QWORD PTR [rax+0x158],0x1
  0x00007f003f2cec8a: jmp    0x00007f003f2ced6f
  0x00007f003f2cec8f: cmp    QWORD PTR [rax+0x160],0x0
  0x00007f003f2cec9a: jne    0x00007f003f2cecb3
  0x00007f003f2cec9c: mov    QWORD PTR [rax+0x160],rbx
  0x00007f003f2ceca3: mov    QWORD PTR [rax+0x168],0x1
  0x00007f003f2cecae: jmp    0x00007f003f2ced6f
  0x00007f003f2cecb3: cmp    QWORD PTR [rax+0x170],0x0
  0x00007f003f2cecbe: jne    0x00007f003f2cecd7
  0x00007f003f2cecc0: mov    QWORD PTR [rax+0x170],rbx
  0x00007f003f2cecc7: mov    QWORD PTR [rax+0x178],0x1
  0x00007f003f2cecd2: jmp    0x00007f003f2ced6f
  0x00007f003f2cecd7: cmp    QWORD PTR [rax+0x180],0x0
  0x00007f003f2cece2: jne    0x00007f003f2cecfb
  0x00007f003f2cece4: mov    QWORD PTR [rax+0x180],rbx
  0x00007f003f2ceceb: mov    QWORD PTR [rax+0x188],0x1
  0x00007f003f2cecf6: jmp    0x00007f003f2ced6f
  0x00007f003f2cecfb: cmp    QWORD PTR [rax+0x190],0x0
  0x00007f003f2ced06: jne    0x00007f003f2ced1f
  0x00007f003f2ced08: mov    QWORD PTR [rax+0x190],rbx
  0x00007f003f2ced0f: mov    QWORD PTR [rax+0x198],0x1
  0x00007f003f2ced1a: jmp    0x00007f003f2ced6f
  0x00007f003f2ced1f: cmp    QWORD PTR [rax+0x1a0],0x0
  0x00007f003f2ced2a: jne    0x00007f003f2ced43
  0x00007f003f2ced2c: mov    QWORD PTR [rax+0x1a0],rbx
  0x00007f003f2ced33: mov    QWORD PTR [rax+0x1a8],0x1
  0x00007f003f2ced3e: jmp    0x00007f003f2ced6f
  0x00007f003f2ced43: cmp    QWORD PTR [rax+0x1b0],0x0
  0x00007f003f2ced4e: jne    0x00007f003f2ced67
  0x00007f003f2ced50: mov    QWORD PTR [rax+0x1b0],rbx
  0x00007f003f2ced57: mov    QWORD PTR [rax+0x1b8],0x1
  0x00007f003f2ced62: jmp    0x00007f003f2ced6f
  0x00007f003f2ced67: add    QWORD PTR [rax+0x130],0x1
  0x00007f003f2ced6f: mov    edx,0x0
  0x00007f003f2ced74: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2ced79: mov    rsi,rdi            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)

  0x00007f003f2ced7c: nop
  0x00007f003f2ced7d: movabs rax,0xffffffffffffffff
  0x00007f003f2ced87: call   0x00007f003f1c4f60  ; OopMap{[72]=Oop [88]=Oop [104]=Oop off=1100}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ;   {virtual_call}
  0x00007f003f2ced8c: mov    rdx,rax            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)

  0x00007f003f2ced8f: lea    rax,[rsp+0x60]
  0x00007f003f2ced94: mov    rsi,QWORD PTR [rax+0x8]
  0x00007f003f2ced98: mov    rcx,QWORD PTR [rsi]
  0x00007f003f2ced9b: and    rcx,0x7
  0x00007f003f2ced9f: cmp    rcx,0x5
  0x00007f003f2ceda3: je     0x00007f003f2cedc0
  0x00007f003f2ceda9: mov    rcx,QWORD PTR [rax]
  0x00007f003f2cedac: test   rcx,rcx
  0x00007f003f2cedaf: je     0x00007f003f2cedc0
  0x00007f003f2cedb5: lock cmpxchg QWORD PTR [rsi],rcx
  0x00007f003f2cedba: jne    0x00007f003f2cf0cc  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)

  0x00007f003f2cedc0: mov    rcx,rdx
  0x00007f003f2cedc3: mov    rdx,QWORD PTR [rsp+0x40]
  0x00007f003f2cedc8: add    rcx,rdx
  0x00007f003f2cedcb: mov    rsi,QWORD PTR [rsp+0x48]
  0x00007f003f2cedd0: mov    esi,DWORD PTR [rsi+0x10]
  0x00007f003f2cedd3: shl    rsi,0x3            ;*getfield lb {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@8 (line 98)

  0x00007f003f2cedd7: cmp    rax,QWORD PTR [rsi]  ; implicit exception: dispatches to 0x00007f003f2cf0df
  0x00007f003f2cedda: mov    rdx,rsi
  0x00007f003f2ceddd: movabs rdi,0x7f0038a8b178  ;   {metadata(method data for {method} {0x00007f00389a2120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2cede7: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2cedea: shl    rdx,0x3
  0x00007f003f2cedee: cmp    rdx,QWORD PTR [rdi+0x1d8]
  0x00007f003f2cedf5: jne    0x00007f003f2cee04
  0x00007f003f2cedf7: add    QWORD PTR [rdi+0x1e0],0x1
  0x00007f003f2cedff: jmp    0x00007f003f2cefc6
  0x00007f003f2cee04: cmp    rdx,QWORD PTR [rdi+0x1e8]
  0x00007f003f2cee0b: jne    0x00007f003f2cee1a
  0x00007f003f2cee0d: add    QWORD PTR [rdi+0x1f0],0x1
  0x00007f003f2cee15: jmp    0x00007f003f2cefc6
  0x00007f003f2cee1a: cmp    rdx,QWORD PTR [rdi+0x1f8]
  0x00007f003f2cee21: jne    0x00007f003f2cee30
  0x00007f003f2cee23: add    QWORD PTR [rdi+0x200],0x1
  0x00007f003f2cee2b: jmp    0x00007f003f2cefc6
  0x00007f003f2cee30: cmp    rdx,QWORD PTR [rdi+0x208]
  0x00007f003f2cee37: jne    0x00007f003f2cee46
  0x00007f003f2cee39: add    QWORD PTR [rdi+0x210],0x1
  0x00007f003f2cee41: jmp    0x00007f003f2cefc6
  0x00007f003f2cee46: cmp    rdx,QWORD PTR [rdi+0x218]
  0x00007f003f2cee4d: jne    0x00007f003f2cee5c
  0x00007f003f2cee4f: add    QWORD PTR [rdi+0x220],0x1
  0x00007f003f2cee57: jmp    0x00007f003f2cefc6
  0x00007f003f2cee5c: cmp    rdx,QWORD PTR [rdi+0x228]
  0x00007f003f2cee63: jne    0x00007f003f2cee72
  0x00007f003f2cee65: add    QWORD PTR [rdi+0x230],0x1
  0x00007f003f2cee6d: jmp    0x00007f003f2cefc6
  0x00007f003f2cee72: cmp    rdx,QWORD PTR [rdi+0x238]
  0x00007f003f2cee79: jne    0x00007f003f2cee88
  0x00007f003f2cee7b: add    QWORD PTR [rdi+0x240],0x1
  0x00007f003f2cee83: jmp    0x00007f003f2cefc6
  0x00007f003f2cee88: cmp    rdx,QWORD PTR [rdi+0x248]
  0x00007f003f2cee8f: jne    0x00007f003f2cee9e
  0x00007f003f2cee91: add    QWORD PTR [rdi+0x250],0x1
  0x00007f003f2cee99: jmp    0x00007f003f2cefc6
  0x00007f003f2cee9e: cmp    QWORD PTR [rdi+0x1d8],0x0
  0x00007f003f2ceea9: jne    0x00007f003f2ceec2
  0x00007f003f2ceeab: mov    QWORD PTR [rdi+0x1d8],rdx
  0x00007f003f2ceeb2: mov    QWORD PTR [rdi+0x1e0],0x1
  0x00007f003f2ceebd: jmp    0x00007f003f2cefc6
  0x00007f003f2ceec2: cmp    QWORD PTR [rdi+0x1e8],0x0
  0x00007f003f2ceecd: jne    0x00007f003f2ceee6
  0x00007f003f2ceecf: mov    QWORD PTR [rdi+0x1e8],rdx
  0x00007f003f2ceed6: mov    QWORD PTR [rdi+0x1f0],0x1
  0x00007f003f2ceee1: jmp    0x00007f003f2cefc6
  0x00007f003f2ceee6: cmp    QWORD PTR [rdi+0x1f8],0x0
  0x00007f003f2ceef1: jne    0x00007f003f2cef0a
  0x00007f003f2ceef3: mov    QWORD PTR [rdi+0x1f8],rdx
  0x00007f003f2ceefa: mov    QWORD PTR [rdi+0x200],0x1
  0x00007f003f2cef05: jmp    0x00007f003f2cefc6
  0x00007f003f2cef0a: cmp    QWORD PTR [rdi+0x208],0x0
  0x00007f003f2cef15: jne    0x00007f003f2cef2e
  0x00007f003f2cef17: mov    QWORD PTR [rdi+0x208],rdx
  0x00007f003f2cef1e: mov    QWORD PTR [rdi+0x210],0x1
  0x00007f003f2cef29: jmp    0x00007f003f2cefc6
  0x00007f003f2cef2e: cmp    QWORD PTR [rdi+0x218],0x0
  0x00007f003f2cef39: jne    0x00007f003f2cef52
  0x00007f003f2cef3b: mov    QWORD PTR [rdi+0x218],rdx
  0x00007f003f2cef42: mov    QWORD PTR [rdi+0x220],0x1
  0x00007f003f2cef4d: jmp    0x00007f003f2cefc6
  0x00007f003f2cef52: cmp    QWORD PTR [rdi+0x228],0x0
  0x00007f003f2cef5d: jne    0x00007f003f2cef76
  0x00007f003f2cef5f: mov    QWORD PTR [rdi+0x228],rdx
  0x00007f003f2cef66: mov    QWORD PTR [rdi+0x230],0x1
  0x00007f003f2cef71: jmp    0x00007f003f2cefc6
  0x00007f003f2cef76: cmp    QWORD PTR [rdi+0x238],0x0
  0x00007f003f2cef81: jne    0x00007f003f2cef9a
  0x00007f003f2cef83: mov    QWORD PTR [rdi+0x238],rdx
  0x00007f003f2cef8a: mov    QWORD PTR [rdi+0x240],0x1
  0x00007f003f2cef95: jmp    0x00007f003f2cefc6
  0x00007f003f2cef9a: cmp    QWORD PTR [rdi+0x248],0x0
  0x00007f003f2cefa5: jne    0x00007f003f2cefbe
  0x00007f003f2cefa7: mov    QWORD PTR [rdi+0x248],rdx
  0x00007f003f2cefae: mov    QWORD PTR [rdi+0x250],0x1
  0x00007f003f2cefb9: jmp    0x00007f003f2cefc6
  0x00007f003f2cefbe: add    QWORD PTR [rdi+0x1c8],0x1
  0x00007f003f2cefc6: mov    edx,0x0            ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@13 (line 98)

  0x00007f003f2cefcb: nop
  0x00007f003f2cefcc: nop
  0x00007f003f2cefcd: movabs rax,0xffffffffffffffff
  0x00007f003f2cefd7: call   0x00007f003f1c4f60  ; OopMap{[88]=Oop off=1692}
                                                ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@13 (line 98)
                                                ;   {virtual_call}
  0x00007f003f2cefdc: lea    rax,[rsp+0x50]
  0x00007f003f2cefe1: mov    rdi,QWORD PTR [rax+0x8]
  0x00007f003f2cefe5: mov    rsi,QWORD PTR [rdi]
  0x00007f003f2cefe8: and    rsi,0x7
  0x00007f003f2cefec: cmp    rsi,0x5
  0x00007f003f2ceff0: je     0x00007f003f2cf00d
  0x00007f003f2ceff6: mov    rsi,QWORD PTR [rax]
  0x00007f003f2ceff9: test   rsi,rsi
  0x00007f003f2ceffc: je     0x00007f003f2cf00d
  0x00007f003f2cf002: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2cf007: jne    0x00007f003f2cf0e4
  0x00007f003f2cf00d: add    rsp,0x80
  0x00007f003f2cf014: pop    rbp
  0x00007f003f2cf015: test   DWORD PTR [rip+0x1b0f30e5],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2cf01b: ret                       ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@17 (line 99)

  0x00007f003f2cf01c: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2cf023: xor    r10,r10
  0x00007f003f2cf026: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2cf02d: xor    r10,r10
  0x00007f003f2cf030: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2cf037: mov    rsi,rax
  0x00007f003f2cf03a: lea    rax,[rsp+0x60]
  0x00007f003f2cf03f: mov    rbx,QWORD PTR [rax+0x8]
  0x00007f003f2cf043: mov    rdi,QWORD PTR [rbx]
  0x00007f003f2cf046: and    rdi,0x7
  0x00007f003f2cf04a: cmp    rdi,0x5
  0x00007f003f2cf04e: je     0x00007f003f2cf06b
  0x00007f003f2cf054: mov    rdi,QWORD PTR [rax]
  0x00007f003f2cf057: test   rdi,rdi
  0x00007f003f2cf05a: je     0x00007f003f2cf06b
  0x00007f003f2cf060: lock cmpxchg QWORD PTR [rbx],rdi
  0x00007f003f2cf065: jne    0x00007f003f2cf0f7  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)

  0x00007f003f2cf06b: mov    rax,rsi
  0x00007f003f2cf06e: jmp    0x00007f003f2cf135
  0x00007f003f2cf073: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2cf078: mov    QWORD PTR [rsp],rdi
  0x00007f003f2cf07c: call   0x00007f003f27ba60  ; OopMap{rsi=Oop [88]=Oop off=1857}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ;   {runtime_call}
  0x00007f003f2cf081: jmp    0x00007f003f2cea35
  0x00007f003f2cf086: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2cf08b: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2cf093: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [88]=Oop off=1880}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ;   {runtime_call}
  0x00007f003f2cf098: jmp    0x00007f003f2cea67
  0x00007f003f2cf09d: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2cf0a2: mov    QWORD PTR [rsp],rdi
  0x00007f003f2cf0a6: call   0x00007f003f27ba60  ; OopMap{rsi=Oop [88]=Oop [104]=Oop off=1899}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ;   {runtime_call}
  0x00007f003f2cf0ab: jmp    0x00007f003f2ceb47
  0x00007f003f2cf0b0: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2cf0b5: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2cf0bd: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [88]=Oop [104]=Oop off=1922}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ;   {runtime_call}
  0x00007f003f2cf0c2: jmp    0x00007f003f2ceb79
  0x00007f003f2cf0c7: call   0x00007f003f279000  ; OopMap{rsi=Oop rdi=Oop [88]=Oop [104]=Oop off=1932}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ;   {runtime_call}
  0x00007f003f2cf0cc: lea    rax,[rsp+0x60]
  0x00007f003f2cf0d1: mov    QWORD PTR [rsp],rax
  0x00007f003f2cf0d5: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2cf0da: jmp    0x00007f003f2cedc0
  0x00007f003f2cf0df: call   0x00007f003f279000  ; OopMap{rsi=Oop [88]=Oop off=1956}
                                                ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@13 (line 98)
                                                ;   {runtime_call}
  0x00007f003f2cf0e4: lea    rax,[rsp+0x50]
  0x00007f003f2cf0e9: mov    QWORD PTR [rsp],rax
  0x00007f003f2cf0ed: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2cf0f2: jmp    0x00007f003f2cf00d
  0x00007f003f2cf0f7: lea    rax,[rsp+0x60]
  0x00007f003f2cf0fc: mov    QWORD PTR [rsp],rax
  0x00007f003f2cf100: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2cf105: jmp    0x00007f003f2cf06b
  0x00007f003f2cf10a: nop
  0x00007f003f2cf10b: nop
  0x00007f003f2cf10c: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2cf113: movabs r10,0x0
  0x00007f003f2cf11d: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2cf124: movabs r10,0x0
  0x00007f003f2cf12e: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2cf135: mov    rbx,rax
  0x00007f003f2cf138: lea    rax,[rsp+0x50]
  0x00007f003f2cf13d: mov    rsi,QWORD PTR [rax+0x8]
  0x00007f003f2cf141: mov    rdi,QWORD PTR [rsi]
  0x00007f003f2cf144: and    rdi,0x7
  0x00007f003f2cf148: cmp    rdi,0x5
  0x00007f003f2cf14c: je     0x00007f003f2cf169
  0x00007f003f2cf152: mov    rdi,QWORD PTR [rax]
  0x00007f003f2cf155: test   rdi,rdi
  0x00007f003f2cf158: je     0x00007f003f2cf169
  0x00007f003f2cf15e: lock cmpxchg QWORD PTR [rsi],rdi
  0x00007f003f2cf163: jne    0x00007f003f2cf179
  0x00007f003f2cf169: mov    rax,rbx
  0x00007f003f2cf16c: add    rsp,0x80
  0x00007f003f2cf173: pop    rbp
  0x00007f003f2cf174: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2cf179: lea    rax,[rsp+0x50]
  0x00007f003f2cf17e: mov    QWORD PTR [rsp],rax
  0x00007f003f2cf182: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2cf187: jmp    0x00007f003f2cf169
  0x00007f003f2cf189: hlt    
  0x00007f003f2cf18a: hlt    
  0x00007f003f2cf18b: hlt    
  0x00007f003f2cf18c: hlt    
  0x00007f003f2cf18d: hlt    
  0x00007f003f2cf18e: hlt    
  0x00007f003f2cf18f: hlt    
  0x00007f003f2cf190: hlt    
  0x00007f003f2cf191: hlt    
  0x00007f003f2cf192: hlt    
  0x00007f003f2cf193: hlt    
  0x00007f003f2cf194: hlt    
  0x00007f003f2cf195: hlt    
  0x00007f003f2cf196: hlt    
  0x00007f003f2cf197: hlt    
  0x00007f003f2cf198: hlt    
  0x00007f003f2cf199: hlt    
  0x00007f003f2cf19a: hlt    
  0x00007f003f2cf19b: hlt    
  0x00007f003f2cf19c: hlt    
  0x00007f003f2cf19d: hlt    
  0x00007f003f2cf19e: hlt    
  0x00007f003f2cf19f: hlt    
[Stub Code]
  0x00007f003f2cf1a0: nop                       ;   {no_reloc}
  0x00007f003f2cf1a1: nop
  0x00007f003f2cf1a2: nop
  0x00007f003f2cf1a3: nop
  0x00007f003f2cf1a4: nop
  0x00007f003f2cf1a5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2cf1af: jmp    0x00007f003f2cf1af  ;   {runtime_call}
  0x00007f003f2cf1b4: nop
  0x00007f003f2cf1b5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2cf1bf: jmp    0x00007f003f2cf1bf  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2cf1c4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2cf1c9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2cf1ce: sub    rsp,0x80
  0x00007f003f2cf1d5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2cf1da: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2cf1df: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2cf1e4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2cf1e9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2cf1ee: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2cf1f3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2cf1f8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2cf1fd: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2cf202: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2cf207: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2cf20c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2cf211: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2cf216: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2cf21b: mov    QWORD PTR [rsp],r15
  0x00007f003f2cf21f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2cf229: movabs rsi,0x7f003f2cf1c9  ;   {internal_word}
  0x00007f003f2cf233: mov    rdx,rsp
  0x00007f003f2cf236: and    rsp,0xfffffffffffffff0
  0x00007f003f2cf23a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2cf23f: hlt    
[Deopt Handler Code]
  0x00007f003f2cf240: movabs r10,0x7f003f2cf240  ;   {section_word}
  0x00007f003f2cf24a: push   r10
  0x00007f003f2cf24c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2cf251: hlt    
  0x00007f003f2cf252: hlt    
  0x00007f003f2cf253: hlt    
  0x00007f003f2cf254: hlt    
  0x00007f003f2cf255: hlt    
  0x00007f003f2cf256: hlt    
  0x00007f003f2cf257: hlt    
<nmethod compile_id='130' compiler='C1' level='3' entry='0x00007f003f2ce940' size='3352' address='0x00007f003f2ce790' relocation_offset='312' insts_offset='432' stub_offset='2576' scopes_data_offset='2784' scopes_pcs_offset='2952' dependencies_offset='3272' handler_table_offset='3280' nul_chk_table_offset='3328' metadata_offset='2760' method='sun/misc/PerfCounter add (J)V' bytes='18' count='557' iicount='557' stamp='0.583'/>
----------------------------------------------------------------------
sun/misc/PerfCounter.get  [0x00007f003f2cf660, 0x00007f003f2cfb48]  1256 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00389a1fa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2cf660: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2cf664: shl    r10,0x3
  0x00007f003f2cf668: cmp    r10,rax
  0x00007f003f2cf66b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2cf671: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2cf67c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2cf680: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2cf687: push   rbp
  0x00007f003f2cf688: sub    rsp,0x40
  0x00007f003f2cf68c: lea    rdx,[rsp+0x20]
  0x00007f003f2cf691: mov    QWORD PTR [rdx+0x8],rsi
  0x00007f003f2cf695: mov    rax,QWORD PTR [rsi]
  0x00007f003f2cf698: mov    rdi,rax
  0x00007f003f2cf69b: and    rdi,0x7
  0x00007f003f2cf69f: cmp    rdi,0x5
  0x00007f003f2cf6a3: jne    0x00007f003f2cf72a
  0x00007f003f2cf6a9: mov    edi,DWORD PTR [rsi+0x8]
  0x00007f003f2cf6ac: shl    rdi,0x3
  0x00007f003f2cf6b0: mov    rdi,QWORD PTR [rdi+0xa8]
  0x00007f003f2cf6b7: or     rdi,r15
  0x00007f003f2cf6ba: xor    rdi,rax
  0x00007f003f2cf6bd: and    rdi,0xffffffffffffff87
  0x00007f003f2cf6c1: je     0x00007f003f2cf752
  0x00007f003f2cf6c7: test   rdi,0x7
  0x00007f003f2cf6ce: jne    0x00007f003f2cf717
  0x00007f003f2cf6d0: test   rdi,0x300
  0x00007f003f2cf6d7: jne    0x00007f003f2cf6f6
  0x00007f003f2cf6d9: and    rax,0x37f
  0x00007f003f2cf6e0: mov    rdi,rax
  0x00007f003f2cf6e3: or     rdi,r15
  0x00007f003f2cf6e6: lock cmpxchg QWORD PTR [rsi],rdi
  0x00007f003f2cf6eb: jne    0x00007f003f2cf9d7
  0x00007f003f2cf6f1: jmp    0x00007f003f2cf752
  0x00007f003f2cf6f6: mov    edi,DWORD PTR [rsi+0x8]
  0x00007f003f2cf6f9: shl    rdi,0x3
  0x00007f003f2cf6fd: mov    rdi,QWORD PTR [rdi+0xa8]
  0x00007f003f2cf704: or     rdi,r15
  0x00007f003f2cf707: lock cmpxchg QWORD PTR [rsi],rdi
  0x00007f003f2cf70c: jne    0x00007f003f2cf9d7
  0x00007f003f2cf712: jmp    0x00007f003f2cf752
  0x00007f003f2cf717: mov    edi,DWORD PTR [rsi+0x8]
  0x00007f003f2cf71a: shl    rdi,0x3
  0x00007f003f2cf71e: mov    rdi,QWORD PTR [rdi+0xa8]
  0x00007f003f2cf725: lock cmpxchg QWORD PTR [rsi],rdi
  0x00007f003f2cf72a: mov    rax,QWORD PTR [rsi]
  0x00007f003f2cf72d: or     rax,0x1
  0x00007f003f2cf731: mov    QWORD PTR [rdx],rax
  0x00007f003f2cf734: lock cmpxchg QWORD PTR [rsi],rdx
  0x00007f003f2cf739: je     0x00007f003f2cf752
  0x00007f003f2cf73f: sub    rax,rsp
  0x00007f003f2cf742: and    rax,0xfffffffffffff007
  0x00007f003f2cf749: mov    QWORD PTR [rdx],rax
  0x00007f003f2cf74c: jne    0x00007f003f2cf9d7
  0x00007f003f2cf752: movabs rdx,0x7f0038a8b428  ;   {metadata(method data for {method} {0x00007f00389a1fa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2cf75c: mov    edi,DWORD PTR [rdx+0xfc]
  0x00007f003f2cf762: add    edi,0x8
  0x00007f003f2cf765: mov    DWORD PTR [rdx+0xfc],edi
  0x00007f003f2cf76b: movabs rdx,0x7f00389a1fa0  ;   {metadata({method} {0x00007f00389a1fa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2cf775: and    edi,0x1ff8
  0x00007f003f2cf77b: cmp    edi,0x0
  0x00007f003f2cf77e: je     0x00007f003f2cf9ea  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@0 (line 83)

  0x00007f003f2cf784: mov    esi,DWORD PTR [rsi+0x10]
  0x00007f003f2cf787: shl    rsi,0x3            ;*getfield lb {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@1 (line 83)

  0x00007f003f2cf78b: cmp    rax,QWORD PTR [rsi]  ; implicit exception: dispatches to 0x00007f003f2cfa01
  0x00007f003f2cf78e: mov    rdx,rsi
  0x00007f003f2cf791: movabs rdi,0x7f0038a8b428  ;   {metadata(method data for {method} {0x00007f00389a1fa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2cf79b: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2cf79e: shl    rdx,0x3
  0x00007f003f2cf7a2: cmp    rdx,QWORD PTR [rdi+0x140]
  0x00007f003f2cf7a9: jne    0x00007f003f2cf7b8
  0x00007f003f2cf7ab: add    QWORD PTR [rdi+0x148],0x1
  0x00007f003f2cf7b3: jmp    0x00007f003f2cf97a
  0x00007f003f2cf7b8: cmp    rdx,QWORD PTR [rdi+0x150]
  0x00007f003f2cf7bf: jne    0x00007f003f2cf7ce
  0x00007f003f2cf7c1: add    QWORD PTR [rdi+0x158],0x1
  0x00007f003f2cf7c9: jmp    0x00007f003f2cf97a
  0x00007f003f2cf7ce: cmp    rdx,QWORD PTR [rdi+0x160]
  0x00007f003f2cf7d5: jne    0x00007f003f2cf7e4
  0x00007f003f2cf7d7: add    QWORD PTR [rdi+0x168],0x1
  0x00007f003f2cf7df: jmp    0x00007f003f2cf97a
  0x00007f003f2cf7e4: cmp    rdx,QWORD PTR [rdi+0x170]
  0x00007f003f2cf7eb: jne    0x00007f003f2cf7fa
  0x00007f003f2cf7ed: add    QWORD PTR [rdi+0x178],0x1
  0x00007f003f2cf7f5: jmp    0x00007f003f2cf97a
  0x00007f003f2cf7fa: cmp    rdx,QWORD PTR [rdi+0x180]
  0x00007f003f2cf801: jne    0x00007f003f2cf810
  0x00007f003f2cf803: add    QWORD PTR [rdi+0x188],0x1
  0x00007f003f2cf80b: jmp    0x00007f003f2cf97a
  0x00007f003f2cf810: cmp    rdx,QWORD PTR [rdi+0x190]
  0x00007f003f2cf817: jne    0x00007f003f2cf826
  0x00007f003f2cf819: add    QWORD PTR [rdi+0x198],0x1
  0x00007f003f2cf821: jmp    0x00007f003f2cf97a
  0x00007f003f2cf826: cmp    rdx,QWORD PTR [rdi+0x1a0]
  0x00007f003f2cf82d: jne    0x00007f003f2cf83c
  0x00007f003f2cf82f: add    QWORD PTR [rdi+0x1a8],0x1
  0x00007f003f2cf837: jmp    0x00007f003f2cf97a
  0x00007f003f2cf83c: cmp    rdx,QWORD PTR [rdi+0x1b0]
  0x00007f003f2cf843: jne    0x00007f003f2cf852
  0x00007f003f2cf845: add    QWORD PTR [rdi+0x1b8],0x1
  0x00007f003f2cf84d: jmp    0x00007f003f2cf97a
  0x00007f003f2cf852: cmp    QWORD PTR [rdi+0x140],0x0
  0x00007f003f2cf85d: jne    0x00007f003f2cf876
  0x00007f003f2cf85f: mov    QWORD PTR [rdi+0x140],rdx
  0x00007f003f2cf866: mov    QWORD PTR [rdi+0x148],0x1
  0x00007f003f2cf871: jmp    0x00007f003f2cf97a
  0x00007f003f2cf876: cmp    QWORD PTR [rdi+0x150],0x0
  0x00007f003f2cf881: jne    0x00007f003f2cf89a
  0x00007f003f2cf883: mov    QWORD PTR [rdi+0x150],rdx
  0x00007f003f2cf88a: mov    QWORD PTR [rdi+0x158],0x1
  0x00007f003f2cf895: jmp    0x00007f003f2cf97a
  0x00007f003f2cf89a: cmp    QWORD PTR [rdi+0x160],0x0
  0x00007f003f2cf8a5: jne    0x00007f003f2cf8be
  0x00007f003f2cf8a7: mov    QWORD PTR [rdi+0x160],rdx
  0x00007f003f2cf8ae: mov    QWORD PTR [rdi+0x168],0x1
  0x00007f003f2cf8b9: jmp    0x00007f003f2cf97a
  0x00007f003f2cf8be: cmp    QWORD PTR [rdi+0x170],0x0
  0x00007f003f2cf8c9: jne    0x00007f003f2cf8e2
  0x00007f003f2cf8cb: mov    QWORD PTR [rdi+0x170],rdx
  0x00007f003f2cf8d2: mov    QWORD PTR [rdi+0x178],0x1
  0x00007f003f2cf8dd: jmp    0x00007f003f2cf97a
  0x00007f003f2cf8e2: cmp    QWORD PTR [rdi+0x180],0x0
  0x00007f003f2cf8ed: jne    0x00007f003f2cf906
  0x00007f003f2cf8ef: mov    QWORD PTR [rdi+0x180],rdx
  0x00007f003f2cf8f6: mov    QWORD PTR [rdi+0x188],0x1
  0x00007f003f2cf901: jmp    0x00007f003f2cf97a
  0x00007f003f2cf906: cmp    QWORD PTR [rdi+0x190],0x0
  0x00007f003f2cf911: jne    0x00007f003f2cf92a
  0x00007f003f2cf913: mov    QWORD PTR [rdi+0x190],rdx
  0x00007f003f2cf91a: mov    QWORD PTR [rdi+0x198],0x1
  0x00007f003f2cf925: jmp    0x00007f003f2cf97a
  0x00007f003f2cf92a: cmp    QWORD PTR [rdi+0x1a0],0x0
  0x00007f003f2cf935: jne    0x00007f003f2cf94e
  0x00007f003f2cf937: mov    QWORD PTR [rdi+0x1a0],rdx
  0x00007f003f2cf93e: mov    QWORD PTR [rdi+0x1a8],0x1
  0x00007f003f2cf949: jmp    0x00007f003f2cf97a
  0x00007f003f2cf94e: cmp    QWORD PTR [rdi+0x1b0],0x0
  0x00007f003f2cf959: jne    0x00007f003f2cf972
  0x00007f003f2cf95b: mov    QWORD PTR [rdi+0x1b0],rdx
  0x00007f003f2cf962: mov    QWORD PTR [rdi+0x1b8],0x1
  0x00007f003f2cf96d: jmp    0x00007f003f2cf97a
  0x00007f003f2cf972: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f2cf97a: mov    edx,0x0            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)

  0x00007f003f2cf97f: nop
  0x00007f003f2cf980: nop
  0x00007f003f2cf981: nop
  0x00007f003f2cf982: nop
  0x00007f003f2cf983: nop
  0x00007f003f2cf984: nop
  0x00007f003f2cf985: movabs rax,0xffffffffffffffff
  0x00007f003f2cf98f: call   0x00007f003f1c4f60  ; OopMap{[40]=Oop off=820}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ;   {virtual_call}
  0x00007f003f2cf994: mov    rsi,rax            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)

  0x00007f003f2cf997: lea    rax,[rsp+0x20]
  0x00007f003f2cf99c: mov    rbx,QWORD PTR [rax+0x8]
  0x00007f003f2cf9a0: mov    rdi,QWORD PTR [rbx]
  0x00007f003f2cf9a3: and    rdi,0x7
  0x00007f003f2cf9a7: cmp    rdi,0x5
  0x00007f003f2cf9ab: je     0x00007f003f2cf9c8
  0x00007f003f2cf9b1: mov    rdi,QWORD PTR [rax]
  0x00007f003f2cf9b4: test   rdi,rdi
  0x00007f003f2cf9b7: je     0x00007f003f2cf9c8
  0x00007f003f2cf9bd: lock cmpxchg QWORD PTR [rbx],rdi
  0x00007f003f2cf9c2: jne    0x00007f003f2cfa06  ;*lreturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@8 (line 83)

  0x00007f003f2cf9c8: mov    rax,rsi
  0x00007f003f2cf9cb: add    rsp,0x40
  0x00007f003f2cf9cf: pop    rbp
  0x00007f003f2cf9d0: test   DWORD PTR [rip+0x1b0f272a],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2cf9d6: ret    
  0x00007f003f2cf9d7: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2cf9dc: mov    QWORD PTR [rsp],rdx
  0x00007f003f2cf9e0: call   0x00007f003f27ba60  ; OopMap{rsi=Oop [40]=Oop off=901}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ;   {runtime_call}
  0x00007f003f2cf9e5: jmp    0x00007f003f2cf752
  0x00007f003f2cf9ea: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2cf9ef: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2cf9f7: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [40]=Oop off=924}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ;   {runtime_call}
  0x00007f003f2cf9fc: jmp    0x00007f003f2cf784
  0x00007f003f2cfa01: call   0x00007f003f279000  ; OopMap{rsi=Oop [40]=Oop off=934}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ;   {runtime_call}
  0x00007f003f2cfa06: lea    rax,[rsp+0x20]
  0x00007f003f2cfa0b: mov    QWORD PTR [rsp],rax
  0x00007f003f2cfa0f: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2cfa14: jmp    0x00007f003f2cf9c8
  0x00007f003f2cfa16: nop
  0x00007f003f2cfa17: nop
  0x00007f003f2cfa18: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2cfa1f: movabs r10,0x0
  0x00007f003f2cfa29: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2cfa30: movabs r10,0x0
  0x00007f003f2cfa3a: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2cfa41: mov    rbx,rax
  0x00007f003f2cfa44: lea    rax,[rsp+0x20]
  0x00007f003f2cfa49: mov    rsi,QWORD PTR [rax+0x8]
  0x00007f003f2cfa4d: mov    rdi,QWORD PTR [rsi]
  0x00007f003f2cfa50: and    rdi,0x7
  0x00007f003f2cfa54: cmp    rdi,0x5
  0x00007f003f2cfa58: je     0x00007f003f2cfa75
  0x00007f003f2cfa5e: mov    rdi,QWORD PTR [rax]
  0x00007f003f2cfa61: test   rdi,rdi
  0x00007f003f2cfa64: je     0x00007f003f2cfa75
  0x00007f003f2cfa6a: lock cmpxchg QWORD PTR [rsi],rdi
  0x00007f003f2cfa6f: jne    0x00007f003f2cfa82
  0x00007f003f2cfa75: mov    rax,rbx
  0x00007f003f2cfa78: add    rsp,0x40
  0x00007f003f2cfa7c: pop    rbp
  0x00007f003f2cfa7d: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2cfa82: lea    rax,[rsp+0x20]
  0x00007f003f2cfa87: mov    QWORD PTR [rsp],rax
  0x00007f003f2cfa8b: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2cfa90: jmp    0x00007f003f2cfa75
  0x00007f003f2cfa92: hlt    
  0x00007f003f2cfa93: hlt    
  0x00007f003f2cfa94: hlt    
  0x00007f003f2cfa95: hlt    
  0x00007f003f2cfa96: hlt    
  0x00007f003f2cfa97: hlt    
  0x00007f003f2cfa98: hlt    
  0x00007f003f2cfa99: hlt    
  0x00007f003f2cfa9a: hlt    
  0x00007f003f2cfa9b: hlt    
  0x00007f003f2cfa9c: hlt    
  0x00007f003f2cfa9d: hlt    
  0x00007f003f2cfa9e: hlt    
  0x00007f003f2cfa9f: hlt    
[Stub Code]
  0x00007f003f2cfaa0: nop                       ;   {no_reloc}
  0x00007f003f2cfaa1: nop
  0x00007f003f2cfaa2: nop
  0x00007f003f2cfaa3: nop
  0x00007f003f2cfaa4: nop
  0x00007f003f2cfaa5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2cfaaf: jmp    0x00007f003f2cfaaf  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2cfab4: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2cfab9: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2cfabe: sub    rsp,0x80
  0x00007f003f2cfac5: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2cfaca: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2cfacf: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2cfad4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2cfad9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2cfade: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2cfae3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2cfae8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2cfaed: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2cfaf2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2cfaf7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2cfafc: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2cfb01: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2cfb06: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2cfb0b: mov    QWORD PTR [rsp],r15
  0x00007f003f2cfb0f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2cfb19: movabs rsi,0x7f003f2cfab9  ;   {internal_word}
  0x00007f003f2cfb23: mov    rdx,rsp
  0x00007f003f2cfb26: and    rsp,0xfffffffffffffff0
  0x00007f003f2cfb2a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2cfb2f: hlt    
[Deopt Handler Code]
  0x00007f003f2cfb30: movabs r10,0x7f003f2cfb30  ;   {section_word}
  0x00007f003f2cfb3a: push   r10
  0x00007f003f2cfb3c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2cfb41: hlt    
  0x00007f003f2cfb42: hlt    
  0x00007f003f2cfb43: hlt    
  0x00007f003f2cfb44: hlt    
  0x00007f003f2cfb45: hlt    
  0x00007f003f2cfb46: hlt    
  0x00007f003f2cfb47: hlt    
<nmethod compile_id='131' compiler='C1' level='3' entry='0x00007f003f2cf660' size='1920' address='0x00007f003f2cf4d0' relocation_offset='312' insts_offset='400' stub_offset='1488' scopes_data_offset='1664' scopes_pcs_offset='1720' dependencies_offset='1896' nul_chk_table_offset='1904' metadata_offset='1656' method='sun/misc/PerfCounter get ()J' bytes='9' count='560' iicount='560' stamp='0.585'/>
<writer thread='139637818533632'/>
<task_queued compile_id='141' method='java/lang/Character toUpperCaseEx (I)I' bytes='30' count='9728' iicount='9728' level='4' stamp='0.585' comment='tiered' hot_count='9728'/>
<task_queued compile_id='142' method='java/lang/CharacterDataLatin1 toUpperCaseEx (I)I' bytes='71' count='9728' iicount='9728' level='4' stamp='0.585' comment='tiered' hot_count='9728'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/nio/DirectLongBufferU.get  [0x00007f003f2cfe00, 0x00007f003f2cfff0]  496 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00389ad698} &apos;get&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;
  # this:     rsi:rsi   = &apos;java/nio/DirectLongBufferU&apos;
  # parm0:    rdx       = int
  #           [sp+0x70]  (sp of caller)
  0x00007f003f2cfe00: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2cfe04: shl    r10,0x3
  0x00007f003f2cfe08: cmp    r10,rax
  0x00007f003f2cfe0b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2cfe11: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2cfe1c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2cfe20: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2cfe27: push   rbp
  0x00007f003f2cfe28: sub    rsp,0x60
  0x00007f003f2cfe2c: movabs rax,0x7f0038a8b630  ;   {metadata(method data for {method} {0x00007f00389ad698} &apos;get&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007f003f2cfe36: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f2cfe3c: add    edi,0x8
  0x00007f003f2cfe3f: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f2cfe45: movabs rax,0x7f00389ad698  ;   {metadata({method} {0x00007f00389ad698} &apos;get&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007f003f2cfe4f: and    edi,0x1ff8
  0x00007f003f2cfe55: cmp    edi,0x0
  0x00007f003f2cfe58: je     0x00007f003f2cfedd  ;*getstatic unsafe {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::get@0 (line 253)

  0x00007f003f2cfe5e: mov    rax,rsi
  0x00007f003f2cfe61: movabs rdi,0x7f0038a8b630
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.HotSpotJVMCICompilerFactory from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
  ;   {metadata(method data for {method} {0x00007f00389ad698} &apos;get&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007f003f2cfe6b: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f2cfe73: cmp    edx,DWORD PTR [rsi+0x1c]  ; implicit exception: dispatches to 0x00007f003f2cfef4
  0x00007f003f2cfe76: jae    0x00007f003f2cfefe  ;*invokevirtual checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::get@6 (line 253)

  0x00007f003f2cfe7c: mov    rax,rsi
  0x00007f003f2cfe7f: movabs rdi,0x7f0038a8b630  ;   {metadata(method data for {method} {0x00007f00389ad698} &apos;get&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007f003f2cfe89: add    QWORD PTR [rdi+0x1c8],0x1
  0x00007f003f2cfe91: movabs rax,0x7f0038a57278  ;   {metadata(method data for {method} {0x00007f00389ad530} &apos;ix&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007f003f2cfe9b: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f2cfea1: add    edi,0x8
  0x00007f003f2cfea4: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f2cfeaa: movabs rax,0x7f00389ad530  ;   {metadata({method} {0x00007f00389ad530} &apos;ix&apos; &apos;(I)J&apos; in &apos;java/nio/DirectLongBufferU&apos;)}
  0x00007f003f2cfeb4: and    edi,0x7ffff8
  0x00007f003f2cfeba: cmp    edi,0x0
  0x00007f003f2cfebd: je     0x00007f003f2cff07
  0x00007f003f2cfec3: mov    rax,QWORD PTR [rsi+0x10]  ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::ix@1 (line 245)
                                                ; - java.nio.DirectLongBufferU::get@9 (line 253)

  0x00007f003f2cfec7: movsxd rdx,edx
  0x00007f003f2cfeca: mov    rsi,QWORD PTR [rax+rdx*8]
  0x00007f003f2cfece: mov    rax,rsi
  0x00007f003f2cfed1: add    rsp,0x60
  0x00007f003f2cfed5: pop    rbp
  0x00007f003f2cfed6: test   DWORD PTR [rip+0x1b0f2224],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2cfedc: ret    
  0x00007f003f2cfedd: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2cfee2: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2cfeea: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=239}
                                                ;*synchronization entry
                                                ; - java.nio.DirectLongBufferU::get@-1 (line 253)
                                                ;   {runtime_call}
  0x00007f003f2cfeef: jmp    0x00007f003f2cfe5e
  0x00007f003f2cfef4: call   0x00007f003f279000  ; OopMap{rsi=Oop off=249}
                                                ;*invokevirtual checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::get@6 (line 253)
                                                ;   {runtime_call}
  0x00007f003f2cfef9: call   0x00007f003f279000  ; OopMap{rsi=Oop off=254}
                                                ;*invokevirtual checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::get@6 (line 253)
                                                ;   {runtime_call}
  0x00007f003f2cfefe: mov    QWORD PTR [rsp],rdx
  0x00007f003f2cff02: call   0x00007f003f278b80  ; OopMap{rsi=Oop off=263}
                                                ;*invokevirtual checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.nio.DirectLongBufferU::get@6 (line 253)
                                                ;   {runtime_call}
  0x00007f003f2cff07: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2cff0c: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2cff14: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=281}
                                                ;*synchronization entry
                                                ; - java.nio.DirectLongBufferU::ix@-1 (line 245)
                                                ; - java.nio.DirectLongBufferU::get@9 (line 253)
                                                ;   {runtime_call}
  0x00007f003f2cff19: jmp    0x00007f003f2cfec3
  0x00007f003f2cff1b: nop
  0x00007f003f2cff1c: nop
  0x00007f003f2cff1d: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2cff24: movabs r10,0x0
  0x00007f003f2cff2e: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2cff35: movabs r10,0x0
  0x00007f003f2cff3f: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2cff46: add    rsp,0x60
  0x00007f003f2cff4a: pop    rbp
  0x00007f003f2cff4b: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2cff50: hlt    
  0x00007f003f2cff51: hlt    
  0x00007f003f2cff52: hlt    
  0x00007f003f2cff53: hlt    
  0x00007f003f2cff54: hlt    
  0x00007f003f2cff55: hlt    
  0x00007f003f2cff56: hlt    
  0x00007f003f2cff57: hlt    
  0x00007f003f2cff58: hlt    
  0x00007f003f2cff59: hlt    
  0x00007f003f2cff5a: hlt    
  0x00007f003f2cff5b: hlt    
  0x00007f003f2cff5c: hlt    
  0x00007f003f2cff5d: hlt    
  0x00007f003f2cff5e: hlt    
  0x00007f003f2cff5f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2cff60: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2cff65: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2cff6a: sub    rsp,0x80
  0x00007f003f2cff71: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2cff76: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2cff7b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2cff80: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2cff85: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2cff8a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2cff8f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2cff94: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2cff99: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2cff9e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2cffa3: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2cffa8: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2cffad: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2cffb2: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2cffb7: mov    QWORD PTR [rsp],r15
  0x00007f003f2cffbb: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2cffc5: movabs rsi,0x7f003f2cff65  ;   {internal_word}
  0x00007f003f2cffcf: mov    rdx,rsp
  0x00007f003f2cffd2: and    rsp,0xfffffffffffffff0
  0x00007f003f2cffd6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2cffdb: hlt    
[Deopt Handler Code]
  0x00007f003f2cffdc: movabs r10,0x7f003f2cffdc  ;   {section_word}
  0x00007f003f2cffe6: push   r10
  0x00007f003f2cffe8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2cffed: hlt    
  0x00007f003f2cffee: hlt    
  0x00007f003f2cffef: hlt    
<nmethod compile_id='132' compiler='C1' level='3' entry='0x00007f003f2cfe00' size='1152' address='0x00007f003f2cfc90' relocation_offset='312' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='960' dependencies_offset='1120' nul_chk_table_offset='1128' oops_offset='864' metadata_offset='872' method='java/nio/DirectLongBufferU get (I)J' bytes='16' count='562' iicount='562' stamp='0.586'/>
<writer thread='139637818533632'/>
[Loaded org.graalvm.compiler.hotspot.HotSpotGraalCompilerFactory from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
sun/util/locale/BaseLocale.getLanguage  [0x00007f003f2d02c0, 0x00007f003f2d03d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038959cb8} &apos;getLanguage&apos; &apos;()Ljava/lang/String;&apos; in &apos;sun/util/locale/BaseLocale&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2d02c0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2d02c4: shl    r10,0x3
  0x00007f003f2d02c8: cmp    r10,rax
  0x00007f003f2d02cb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2d02d1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2d02dc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2d02e0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2d02e7: push   rbp
  0x00007f003f2d02e8: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.util.locale.BaseLocale::getLanguage@0 (line 92)

  0x00007f003f2d02ec: mov    eax,DWORD PTR [rsi+0x10]
  0x00007f003f2d02ef: shl    rax,0x3            ;*getfield language {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.util.locale.BaseLocale::getLanguage@1 (line 92)

  0x00007f003f2d02f3: add    rsp,0x30
  0x00007f003f2d02f7: pop    rbp
  0x00007f003f2d02f8: test   DWORD PTR [rip+0x1b0f1e02],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2d02fe: ret    
  0x00007f003f2d02ff: nop
  0x00007f003f2d0300: nop
  0x00007f003f2d0301: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2d0308: movabs r10,0x0
  0x00007f003f2d0312: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2d0319: movabs r10,0x0
  0x00007f003f2d0323: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2d032a: add    rsp,0x30
  0x00007f003f2d032e: pop    rbp
  0x00007f003f2d032f: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2d0334: hlt    
  0x00007f003f2d0335: hlt    
  0x00007f003f2d0336: hlt    
  0x00007f003f2d0337: hlt    
  0x00007f003f2d0338: hlt    
  0x00007f003f2d0339: hlt    
  0x00007f003f2d033a: hlt    
  0x00007f003f2d033b: hlt    
  0x00007f003f2d033c: hlt    
  0x00007f003f2d033d: hlt    
  0x00007f003f2d033e: hlt    
  0x00007f003f2d033f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2d0340: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2d0345: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2d034a: sub    rsp,0x80
  0x00007f003f2d0351: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2d0356: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2d035b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2d0360: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2d0365: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2d036a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2d036f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2d0374: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2d0379: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2d037e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2d0383: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2d0388: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2d038d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2d0392: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2d0397: mov    QWORD PTR [rsp],r15
  0x00007f003f2d039b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2d03a5: movabs rsi,0x7f003f2d0345  ;   {internal_word}
  0x00007f003f2d03af: mov    rdx,rsp
  0x00007f003f2d03b2: and    rsp,0xfffffffffffffff0
  0x00007f003f2d03b6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2d03bb: hlt    
[Deopt Handler Code]
  0x00007f003f2d03bc: movabs r10,0x7f003f2d03bc  ;   {section_word}
  0x00007f003f2d03c6: push   r10
  0x00007f003f2d03c8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2d03cd: hlt    
  0x00007f003f2d03ce: hlt    
  0x00007f003f2d03cf: hlt    
<nmethod compile_id='139' compiler='C1' level='1' entry='0x00007f003f2d02c0' size='736' address='0x00007f003f2d0150' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='sun/util/locale/BaseLocale getLanguage ()Ljava/lang/String;' bytes='5' count='177' iicount='177' stamp='0.587'/>
----------------------------------------------------------------------
sun/misc/URLClassPath$JarLoader.access$600  [0x00007f003f2d05c0, 0x00007f003f2d06b0]  240 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f0038991428} &apos;access$600&apos; &apos;(Lsun/misc/URLClassPath$JarLoader;)Ljava/net/URL;&apos; in &apos;sun/misc/URLC
<writer thread='139637818533632'/>
[Loaded org.graalvm.compiler.hotspot.JVMCIVersionCheck from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
<writer thread='139637817480960'/>
lassPath$JarLoader&apos;
  # parm0:    rsi:rsi   = &apos;sun/misc/URLClassPath$JarLoader&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2d05c0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2d05c7: push   rbp
  0x00007f003f2d05c8: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::access$600@0 (line 791)

  0x00007f003f2d05cc: mov    eax,DWORD PTR [rsi+0x1c]  ; implicit exception: dispatches to 0x00007f003f2d05df
  0x00007f003f2d05cf: shl    rax,0x3            ;*getfield csu {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::access$600@1 (line 791)

  0x00007f003f2d05d3: add    rsp,0x30
  0x00007f003f2d05d7: pop    rbp
  0x00007f003f2d05d8: test   DWORD PTR [rip+0x1b0f1b22],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2d05de: ret    
  0x00007f003f2d05df: call   0x00007f003f279000  ; OopMap{off=36}
                                                ;*getfield csu {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$JarLoader::access$600@1 (line 791)
                                                ;   {runtime_call}
  0x00007f003f2d05e4: nop
  0x00007f003f2d05e5: nop
  0x00007f003f2d05e6: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2d05ed: movabs r10,0x0
  0x00007f003f2d05f7: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2d05fe: movabs r10,0x0
  0x00007f003f2d0608: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2d060f: add    rsp,0x30
  0x00007f003f2d0613: pop    rbp
  0x00007f003f2d0614: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2d0619: hlt    
  0x00007f003f2d061a: hlt    
  0x00007f003f2d061b: hlt    
  0x00007f003f2d061c: hlt    
  0x00007f003f2d061d: hlt    
  0x00007f003f2d061e: hlt    
  0x00007f003f2d061f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2d0620: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2d0625: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2d062a: sub    rsp,0x80
  0x00007f003f2d0631: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2d0636: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2d063b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2d0640: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2d0645: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2d064a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2d064f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2d0654: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2d0659: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2d065e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2d0663: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2d0668: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2d066d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2d0672: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2d0677: mov    QWORD PTR [rsp],r15
  0x00007f003f2d067b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2d0685: movabs rsi,0x7f003f2d0625  ;   {internal_word}
  0x00007f003f2d068f: mov    rdx,rsp
  0x00007f003f2d0692: and    rsp,0xfffffffffffffff0
  0x00007f003f2d0696: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2d069b: hlt    
[Deopt Handler Code]
  0x00007f003f2d069c: movabs r10,0x7f003f2d069c  ;   {section_word}
  0x00007f003f2d06a6: push   r10
  0x00007f003f2d06a8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2d06ad: hlt    
  0x00007f003f2d06ae: hlt    
  0x00007f003f2d06af: hlt    
<nmethod compile_id='122' compiler='C1' level='1' entry='0x00007f003f2d05c0' size='744' address='0x00007f003f2d0450' relocation_offset='312' insts_offset='368' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='640' dependencies_offset='720' nul_chk_table_offset='728' metadata_offset='608' method='sun/misc/URLClassPath$JarLoader access$600 (Lsun/misc/URLClassPath$JarLoader;)Ljava/net/URL;' bytes='5' count='149' iicount='149' stamp='0.587'/>
----------------------------------------------------------------------
sun/misc/URLClassPath$Loader.getBaseURL  [0x00007f003f2d08c0, 0x00007f003f2d09d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038992238} &apos;getBaseURL&apos; &apos;()Ljava/net/URL;&apos; in &apos;sun/misc/URLClassPath$Loader&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2d08c0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2d08c4: shl    r10,0x3
  0x00007f003f2d08c8: cmp    r10,rax
  0x00007f003f2d08cb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2d08d1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2d08dc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2d08e0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2d08e7: push   rbp
  0x00007f003f2d08e8: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$Loader::getBaseURL@0 (line 685)

  0x00007f003f2d08ec: mov    eax,DWORD PTR [rsi+0xc]
  0x00007f003f2d08ef: shl    rax,0x3            ;*getfield base {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.URLClassPath$Loader::getBaseURL@1 (line 685)

  0x00007f003f2d08f3: add    rsp,0x30
  0x00007f003f2d08f7: pop    rbp
  0x00007f003f2d08f8: test   DWORD PTR [rip+0x1b0f1802],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2d08fe: ret    
  0x00007f003f2d08ff: nop
  0x00007f003f2d0900: nop
  0x00007f003f2d0901: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2d0908: movabs r10,0x0
  0x00007f003f2d0912: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2d0919: movabs r10,0x0
  0x00007f003f2d0923: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2d092a: add    rsp,0x30
  0x00007f003f2d092e: pop    rbp
  0x00007f003f2d092f: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2d0934: hlt    
  0x00007f003f2d0935: hlt    
  0x00007f003f2d0936: hlt    
  0x00007f003f2d0937: hlt    
  0x00007f003f2d0938: hlt    
  0x00007f003f2d0939: hlt    
  0x00007f003f2d093a: hlt    
  0x00007f003f2d093b: hlt    
  0x00007f003f2d093c: hlt    
  0x00007f003f2d093d: hlt    
  0x00007f003f2d093e: hlt    
  0x00007f003f2d093f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2d0940: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2d0945: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2d094a: sub    rsp,0x80
  0x00007f003f2d0951: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2d0956: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2d095b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2d0960: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2d0965: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2d096a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2d096f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2d0974: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2d0979: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2d097e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2d0983: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2d0988: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2d098d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2d0992: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2d0997: mov    QWORD PTR [rsp],r15
  0x00007f003f2d099b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2d09a5: movabs rsi,0x7f003f2d0945  ;   {internal_word}
  0x00007f003f2d09af: mov    rdx,rsp
  0x00007f003f2d09b2: and    rsp,0xfffffffffffffff0
  0x00007f003f2d09b6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2d09bb: hlt    
[Deopt Handler Code]
  0x00007f003f2d09bc: movabs r10,0x7f003f2d09bc  ;   {section_word}
  0x00007f003f2d09c6: push   r10
  0x00007f003f2d09c8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2d09cd: hlt    
  0x00007f003f2d09ce: hlt    
  0x00007f003f2d09cf: hlt    
<nmethod compile_id='124' compiler='C1' level='1' entry='0x00007f003f2d08c0' size='736' address='0x00007f003f2d0750' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='sun/misc/URLClassPath$Loader getBaseURL ()Ljava/net/URL;' bytes='5' count='146' iicount='146' stamp='0.588'/>
<writer thread='139637818533632'/>
<task_queued compile_id='143' method='java/lang/String toUpperCase (Ljava/util/Locale;)Ljava/lang/String;' bytes='439' count='190' backedge_count='12288' iicount='190' level='3' stamp='0.588' comment='tiered' hot_count='190'/>
[Loaded org.graalvm.compiler.options.OptionValuesAccess from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
[Loaded org.graalvm.compiler.hotspot.HotSpotGraalOptionValues from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
[Loaded org.graalvm.compiler.options.OptionValues from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
[Loaded org.graalvm.util.Equivalence from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
[Loaded org.graalvm.util.Equivalence$1 from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/String.toUpperCase  [0x00007f003f2d0d80, 0x00007f003f2d27b8]  6712 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/util/Locale&apos;
  #           [sp+0xe0]  (sp of caller)
  0x00007f003f2d0d80: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2d0d84: shl    r10,0x3
  0x00007f003f2d0d88: cmp    r10,rax
  0x00007f003f2d0d8b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2d0d91: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2d0d9c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2d0da0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2d0da7: push   rbp
  0x00007f003f2d0da8: sub    rsp,0xd0
  0x00007f003f2d0daf: mov    QWORD PTR [rsp+0x60],rsi
  0x00007f003f2d0db4: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2d0db9: movabs rdi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d0dc3: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2d0dc9: add    ebx,0x8
  0x00007f003f2d0dcc: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2d0dd2: movabs rdi,0x7f003876e318  ;   {metadata({method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d0ddc: and    ebx,0x1ff8
  0x00007f003f2d0de2: cmp    ebx,0x0
  0x00007f003f2d0de5: je     0x00007f003f2d2419  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@0 (line 2722)

  0x00007f003f2d0deb: cmp    rdx,0x0
  0x00007f003f2d0def: movabs rdi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d0df9: movabs rbx,0x130
  0x00007f003f2d0e03: jne    0x00007f003f2d0e13
  0x00007f003f2d0e09: movabs rbx,0x140
  0x00007f003f2d0e13: mov    rax,QWORD PTR [rdi+rbx*1]
  0x00007f003f2d0e17: lea    rax,[rax+0x1]
  0x00007f003f2d0e1b: mov    QWORD PTR [rdi+rbx*1],rax
  0x00007f003f2d0e1f: je     0x00007f003f2d239d  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@1 (line 2722)

  0x00007f003f2d0e25: mov    edi,DWORD PTR [rsi+0xc]
  0x00007f003f2d0e28: shl    rdi,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@13 (line 2727)

  0x00007f003f2d0e2c: mov    edi,DWORD PTR [rdi+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@16 (line 2727)
                                                ; implicit exception: dispatches to 0x00007f003f2d2430
  0x00007f003f2d0e2f: mov    DWORD PTR [rsp+0x5c],edi
  0x00007f003f2d0e33: mov    ebx,0x0            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@20 (line 2731)

  0x00007f003f2d0e38: cmp    ebx,edi
  0x00007f003f2d0e3a: movabs rax,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d0e44: movabs rcx,0x160
  0x00007f003f2d0e4e: jge    0x00007f003f2d0e5e
  0x00007f003f2d0e54: movabs rcx,0x170
  0x00007f003f2d0e5e: mov    r8,QWORD PTR [rax+rcx*1]
  0x00007f003f2d0e62: lea    r8,[r8+0x1]
  0x00007f003f2d0e66: mov    QWORD PTR [rax+rcx*1],r8
  0x00007f003f2d0e6a: jge    0x00007f003f2d238b  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@22 (line 2731)

  0x00007f003f2d0e70: mov    eax,DWORD PTR [rsi+0xc]
  0x00007f003f2d0e73: shl    rax,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@26 (line 2732)

  0x00007f003f2d0e77: movsxd rcx,ebx
  0x00007f003f2d0e7a: cmp    ebx,DWORD PTR [rax+0xc]  ; implicit exception: dispatches to 0x00007f003f2d2435
  0x00007f003f2d0e7d: jae    0x00007f003f2d243f
  0x00007f003f2d0e83: movzx  eax,WORD PTR [rax+rcx*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@30 (line 2732)

  0x00007f003f2d0e88: cmp    eax,0xd800
  0x00007f003f2d0e8e: movabs rcx,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d0e98: movabs r8,0x180
  0x00007f003f2d0ea2: jl     0x00007f003f2d0eb2
  0x00007f003f2d0ea8: movabs r8,0x190
  0x00007f003f2d0eb2: mov    r9,QWORD PTR [rcx+r8*1]
  0x00007f003f2d0eb6: lea    r9,[r9+0x1]
  0x00007f003f2d0eba: mov    QWORD PTR [rcx+r8*1],r9
  0x00007f003f2d0ebe: jl     0x00007f003f2d0f00  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@37 (line 2734)

  0x00007f003f2d0ec4: cmp    eax,0xdbff
  0x00007f003f2d0eca: movabs rcx,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d0ed4: movabs r8,0x1a0
  0x00007f003f2d0ede: jg     0x00007f003f2d0eee
  0x00007f003f2d0ee4: movabs r8,0x1b0
  0x00007f003f2d0eee: mov    r9,QWORD PTR [rcx+r8*1]
  0x00007f003f2d0ef2: lea    r9,[r9+0x1]
  0x00007f003f2d0ef6: mov    QWORD PTR [rcx+r8*1],r9
  0x00007f003f2d0efa: jle    0x00007f003f2d0f0e  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@44 (line 2734)

  0x00007f003f2d0f00: mov    ecx,0x1
  0x00007f003f2d0f05: mov    DWORD PTR [rsp+0x58],ebx
  0x00007f003f2d0f09: jmp    0x00007f003f2d0fee  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@67 (line 2741)

  0x00007f003f2d0f0e: mov    rax,rsi
  0x00007f003f2d0f11: movabs rcx,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d0f1b: add    QWORD PTR [rcx+0x1c0],0x1
  0x00007f003f2d0f23: mov    rdx,rbx
  0x00007f003f2d0f26: mov    rcx,rsi
  0x00007f003f2d0f29: mov    rsi,rcx            ;*invokevirtual codePointAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@49 (line 2736)

  0x00007f003f2d0f2c: mov    DWORD PTR [rsp+0x58],ebx
  0x00007f003f2d0f30: nop
  0x00007f003f2d0f31: nop
  0x00007f003f2d0f32: nop
  0x00007f003f2d0f33: nop
  0x00007f003f2d0f34: nop
  0x00007f003f2d0f35: nop
  0x00007f003f2d0f36: nop
  0x00007f003f2d0f37: call   0x00007f003f1c4d60  ; OopMap{[96]=Oop [104]=Oop off=444}
                                                ;*invokevirtual codePointAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@49 (line 2736)
                                                ;   {optimized virtual_call}
  0x00007f003f2d0f3c: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d0f46: add    QWORD PTR [rsi+0x258],0x1
  0x00007f003f2d0f4e: movabs rsi,0x7f0038a8e278  ;   {metadata(method data for {method} {0x00007f00388143a0} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d0f58: mov    edi,DWORD PTR [rsi+0xfc]
  0x00007f003f2d0f5e: add    edi,0x8
  0x00007f003f2d0f61: mov    DWORD PTR [rsi+0xfc],edi
  0x00007f003f2d0f67: movabs rsi,0x7f00388143a0  ;   {metadata({method} {0x00007f00388143a0} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d0f71: and    edi,0x7ffff8
  0x00007f003f2d0f77: cmp    edi,0x0
  0x00007f003f2d0f7a: je     0x00007f003f2d2448
  0x00007f003f2d0f80: cmp    eax,0x10000
  0x00007f003f2d0f86: movabs rsi,0x7f0038a8e278  ;   {metadata(method data for {method} {0x00007f00388143a0} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d0f90: movabs rdi,0x130
  0x00007f003f2d0f9a: jl     0x00007f003f2d0faa
  0x00007f003f2d0fa0: movabs rdi,0x140
  0x00007f003f2d0faa: mov    rbx,QWORD PTR [rsi+rdi*1]
  0x00007f003f2d0fae: lea    rbx,[rbx+0x1]
  0x00007f003f2d0fb2: mov    QWORD PTR [rsi+rdi*1],rbx
  0x00007f003f2d0fb6: jl     0x00007f003f2d0fd6  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::charCount@3 (line 4818)
                                                ; - java.lang.String::toUpperCase@56 (line 2737)

  0x00007f003f2d0fbc: movabs rsi,0x7f0038a8e278  ;   {metadata(method data for {method} {0x00007f00388143a0} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d0fc6: inc    DWORD PTR [rsi+0x150]
  0x00007f003f2d0fcc: mov    esi,0x2
  0x00007f003f2d0fd1: jmp    0x00007f003f2d0fdb  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::charCount@7 (line 4818)
                                                ; - java.lang.String::toUpperCase@56 (line 2737)

  0x00007f003f2d0fd6: mov    esi,0x1            ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::charCount@11 (line 4818)
                                                ; - java.lang.String::toUpperCase@56 (line 2737)

  0x00007f003f2d0fdb: movabs rdi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d0fe5: inc    DWORD PTR [rdi+0x268]
  0x00007f003f2d0feb: mov    rcx,rsi            ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@61 (line 2737)

  0x00007f003f2d0fee: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d0ff8: add    QWORD PTR [rsi+0x280],0x1
  0x00007f003f2d1000: movabs rsi,0x7f0038a4fa30  ;   {metadata(method data for {method} {0x00007f0038817be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d100a: mov    edi,DWORD PTR [rsi+0xfc]
  0x00007f003f2d1010: add    edi,0x8
  0x00007f003f2d1013: mov    DWORD PTR [rsi+0xfc],edi
  0x00007f003f2d1019: movabs rsi,0x7f0038817be0  ;   {metadata({method} {0x00007f0038817be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d1023: and    edi,0x7ffff8
  0x00007f003f2d1029: cmp    edi,0x0
  0x00007f003f2d102c: je     0x00007f003f2d245f
  0x00007f003f2d1032: movabs rsi,0x7f0038a4fa30  ;   {metadata(method data for {method} {0x00007f0038817be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d103c: inc    DWORD PTR [rsi+0x130]  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@3 (line 7137)
                                                ; - java.lang.String::toUpperCase@69 (line 2741)

  0x00007f003f2d1042: mov    DWORD PTR [rsp+0x74],ecx
  0x00007f003f2d1046: movabs rsi,0x7f0038a4fa30  ;   {metadata(method data for {method} {0x00007f0038817be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d1050: add    QWORD PTR [rsi+0x190],0x1
  0x00007f003f2d1058: mov    rsi,rax            ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@22 (line 7138)
                                                ; - java.lang.String::toUpperCase@69 (line 2741)

  0x00007f003f2d105b: mov    DWORD PTR [rsp+0x70],eax
  0x00007f003f2d105f: call   0x00007f003f1c5160  ; OopMap{[96]=Oop [104]=Oop off=740}
                                                ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@22 (line 7138)
                                                ; - java.lang.String::toUpperCase@69 (line 2741)
                                                ;   {static_call}
  0x00007f003f2d1064: cmp    rax,QWORD PTR [rax]  ; implicit exception: dispatches to 0x00007f003f2d2476
  0x00007f003f2d1067: mov    rdx,rax
  0x00007f003f2d106a: movabs rsi,0x7f0038a4fa30  ;   {metadata(method data for {method} {0x00007f0038817be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d1074: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2d1077: shl    rdx,0x3
  0x00007f003f2d107b: cmp    rdx,QWORD PTR [rsi+0x1b0]
  0x00007f003f2d1082: jne    0x00007f003f2d1091
  0x00007f003f2d1084: add    QWORD PTR [rsi+0x1b8],0x1
  0x00007f003f2d108c: jmp    0x00007f003f2d1253
  0x00007f003f2d1091: cmp    rdx,QWORD PTR [rsi+0x1c0]
  0x00007f003f2d1098: jne    0x00007f003f2d10a7
  0x00007f003f2d109a: add    QWORD PTR [rsi+0x1c8],0x1
  0x00007f003f2d10a2: jmp    0x00007f003f2d1253
  0x00007f003f2d10a7: cmp    rdx,QWORD PTR [rsi+0x1d0]
  0x00007f003f2d10ae: jne    0x00007f003f2d10bd
  0x00007f003f2d10b0: add    QWORD PTR [rsi+0x1d8],0x1
  0x00007f003f2d10b8: jmp    0x00007f003f2d1253
  0x00007f003f2d10bd: cmp    rdx,QWORD PTR [rsi+0x1e0]
  0x00007f003f2d10c4: jne    0x00007f003f2d10d3
  0x00007f003f2d10c6: add    QWORD PTR [rsi+0x1e8],0x1
  0x00007f003f2d10ce: jmp    0x00007f003f2d1253
  0x00007f003f2d10d3: cmp    rdx,QWORD PTR [rsi+0x1f0]
  0x00007f003f2d10da: jne    0x00007f003f2d10e9
  0x00007f003f2d10dc: add    QWORD PTR [rsi+0x1f8],0x1
  0x00007f003f2d10e4: jmp    0x00007f003f2d1253
  0x00007f003f2d10e9: cmp    rdx,QWORD PTR [rsi+0x200]
  0x00007f003f2d10f0: jne    0x00007f003f2d10ff
  0x00007f003f2d10f2: add    QWORD PTR [rsi+0x208],0x1
  0x00007f003f2d10fa: jmp    0x00007f003f2d1253
  0x00007f003f2d10ff: cmp    rdx,QWORD PTR [rsi+0x210]
  0x00007f003f2d1106: jne    0x00007f003f2d1115
  0x00007f003f2d1108: add    QWORD PTR [rsi+0x218],0x1
  0x00007f003f2d1110: jmp    0x00007f003f2d1253
  0x00007f003f2d1115: cmp    rdx,QWORD PTR [rsi+0x220]
  0x00007f003f2d111c: jne    0x00007f003f2d112b
  0x00007f003f2d111e: add    QWORD PTR [rsi+0x228],0x1
  0x00007f003f2d1126: jmp    0x00007f003f2d1253
  0x00007f003f2d112b: cmp    QWORD PTR [rsi+0x1b0],0x0
  0x00007f003f2d1136: jne    0x00007f003f2d114f
  0x00007f003f2d1138: mov    QWORD PTR [rsi+0x1b0],rdx
  0x00007f003f2d113f: mov    QWORD PTR [rsi+0x1b8],0x1
  0x00007f003f2d114a: jmp    0x00007f003f2d1253
  0x00007f003f2d114f: cmp    QWORD PTR [rsi+0x1c0],0x0
  0x00007f003f2d115a: jne    0x00007f003f2d1173
  0x00007f003f2d115c: mov    QWORD PTR [rsi+0x1c0],rdx
  0x00007f003f2d1163: mov    QWORD PTR [rsi+0x1c8],0x1
  0x00007f003f2d116e: jmp    0x00007f003f2d1253
  0x00007f003f2d1173: cmp    QWORD PTR [rsi+0x1d0],0x0
  0x00007f003f2d117e: jne    0x00007f003f2d1197
  0x00007f003f2d1180: mov    QWORD PTR [rsi+0x1d0],rdx
  0x00007f003f2d1187: mov    QWORD PTR [rsi+0x1d8],0x1
  0x00007f003f2d1192: jmp    0x00007f003f2d1253
  0x00007f003f2d1197: cmp    QWORD PTR [rsi+0x1e0],0x0
  0x00007f003f2d11a2: jne    0x00007f003f2d11bb
  0x00007f003f2d11a4: mov    QWORD PTR [rsi+0x1e0],rdx
  0x00007f003f2d11ab: mov    QWORD PTR [rsi+0x1e8],0x1
  0x00007f003f2d11b6: jmp    0x00007f003f2d1253
  0x00007f003f2d11bb: cmp    QWORD PTR [rsi+0x1f0],0x0
  0x00007f003f2d11c6: jne    0x00007f003f2d11df
  0x00007f003f2d11c8: mov    QWORD PTR [rsi+0x1f0],rdx
  0x00007f003f2d11cf: mov    QWORD PTR [rsi+0x1f8],0x1
  0x00007f003f2d11da: jmp    0x00007f003f2d1253
  0x00007f003f2d11df: cmp    QWORD PTR [rsi+0x200],0x0
  0x00007f003f2d11ea: jne    0x00007f003f2d1203
  0x00007f003f2d11ec: mov    QWORD PTR [rsi+0x200],rdx
  0x00007f003f2d11f3: mov    QWORD PTR [rsi+0x208],0x1
  0x00007f003f2d11fe: jmp    0x00007f003f2d1253
  0x00007f003f2d1203: cmp    QWORD PTR [rsi+0x210],0x0
  0x00007f003f2d120e: jne    0x00007f003f2d1227
  0x00007f003f2d1210: mov    QWORD PTR [rsi+0x210],rdx
  0x00007f003f2d1217: mov    QWORD PTR [rsi+0x218],0x1
  0x00007f003f2d1222: jmp    0x00007f003f2d1253
  0x00007f003f2d1227: cmp    QWORD PTR [rsi+0x220],0x0
  0x00007f003f2d1232: jne    0x00007f003f2d124b
  0x00007f003f2d1234: mov    QWORD PTR [rsi+0x220],rdx
  0x00007f003f2d123b: mov    QWORD PTR [rsi+0x228],0x1
  0x00007f003f2d1246: jmp    0x00007f003f2d1253
  0x00007f003f2d124b: add    QWORD PTR [rsi+0x1a0],0x1
  0x00007f003f2d1253: mov    edx,DWORD PTR [rsp+0x70]
  0x00007f003f2d1257: mov    rsi,rax            ;*invokevirtual toUpperCaseEx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@26 (line 7138)
                                                ; - java.lang.String::toUpperCase@69 (line 2741)

  0x00007f003f2d125a: nop
  0x00007f003f2d125b: nop
  0x00007f003f2d125c: nop
  0x00007f003f2d125d: movabs rax,0xffffffffffffffff
  0x00007f003f2d1267: call   0x00007f003f1c4f60  ; OopMap{[96]=Oop [104]=Oop off=1260}
                                                ;*invokevirtual toUpperCaseEx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@26 (line 7138)
                                                ; - java.lang.String::toUpperCase@69 (line 2741)
                                                ;   {virtual_call}
  0x00007f003f2d126c: cmp    eax,0xffffffff
  0x00007f003f2d126f: movabs rbx,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1279: movabs rdx,0x290
  0x00007f003f2d1283: je     0x00007f003f2d1293
  0x00007f003f2d1289: movabs rdx,0x2a0
  0x00007f003f2d1293: mov    rsi,QWORD PTR [rbx+rdx*1]
  0x00007f003f2d1297: lea    rsi,[rsi+0x1]
  0x00007f003f2d129b: mov    QWORD PTR [rbx+rdx*1],rsi
  0x00007f003f2d129f: je     0x00007f003f2d1342  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@77 (line 2742)

  0x00007f003f2d12a5: mov    ebx,DWORD PTR [rsp+0x70]
  0x00007f003f2d12a9: cmp    ebx,eax
  0x00007f003f2d12ab: movabs rbx,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d12b5: movabs rdx,0x2b0
  0x00007f003f2d12bf: je     0x00007f003f2d12cf
  0x00007f003f2d12c5: movabs rdx,0x2c0
  0x00007f003f2d12cf: mov    rsi,QWORD PTR [rbx+rdx*1]
  0x00007f003f2d12d3: lea    rsi,[rsi+0x1]
  0x00007f003f2d12d7: mov    QWORD PTR [rbx+rdx*1],rsi
  0x00007f003f2d12db: jne    0x00007f003f2d134b  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@84 (line 2742)

  0x00007f003f2d12e1: mov    ecx,DWORD PTR [rsp+0x74]
  0x00007f003f2d12e5: add    ecx,DWORD PTR [rsp+0x58]
  0x00007f003f2d12e9: movabs rbx,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d12f3: mov    edx,DWORD PTR [rbx+0x100]
  0x00007f003f2d12f9: add    edx,0x8
  0x00007f003f2d12fc: mov    DWORD PTR [rbx+0x100],edx
  0x00007f003f2d1302: movabs rbx,0x7f003876e318  ;   {metadata({method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d130c: and    edx,0xfff8
  0x00007f003f2d1312: cmp    edx,0x0
  0x00007f003f2d1315: je     0x00007f003f2d247b  ; OopMap{[96]=Oop [104]=Oop off=1435}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@95 (line 2747)

  0x00007f003f2d131b: test   DWORD PTR [rip+0x1b0f0ddf],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2d1321: movabs rbx,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d132b: inc    DWORD PTR [rbx+0x2e8]
  0x00007f003f2d1331: mov    rbx,rcx
  0x00007f003f2d1334: mov    edi,DWORD PTR [rsp+0x5c]
  0x00007f003f2d1338: mov    rsi,QWORD PTR [rsp+0x60]
  0x00007f003f2d133d: jmp    0x00007f003f2d0e38  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@95 (line 2747)

  0x00007f003f2d1342: mov    ebx,DWORD PTR [rsp+0x58]
  0x00007f003f2d1346: jmp    0x00007f003f2d135f  ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@100 (line 2752)

  0x00007f003f2d134b: mov    ebx,DWORD PTR [rsp+0x58]
  0x00007f003f2d134f: movabs rdx,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1359: inc    DWORD PTR [rdx+0x2d0]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@87 (line 2744)

  0x00007f003f2d135f: mov    rsi,QWORD PTR [rsp+0x60]
  0x00007f003f2d1364: mov    r11,rbx
  0x00007f003f2d1367: mov    ebx,DWORD PTR [rsp+0x5c]
  0x00007f003f2d136b: movabs rdx,0x7c00001f8    ;   {metadata({type array char})}
  0x00007f003f2d1375: mov    r14,rsi
  0x00007f003f2d1378: movsxd rbx,ebx
  0x00007f003f2d137b: mov    rdi,rbx
  0x00007f003f2d137e: cmp    rbx,0xffffff
  0x00007f003f2d1385: ja     0x00007f003f2d2492
  0x00007f003f2d138b: movabs rsi,0x17
  0x00007f003f2d1395: lea    rsi,[rsi+rbx*2]
  0x00007f003f2d1399: and    rsi,0xfffffffffffffff8
  0x00007f003f2d139d: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2d13a1: lea    rsi,[rax+rsi*1]
  0x00007f003f2d13a5: cmp    rsi,QWORD PTR [r15+0x70]
  0x00007f003f2d13a9: ja     0x00007f003f2d2492
  0x00007f003f2d13af: mov    QWORD PTR [r15+0x60],rsi
  0x00007f003f2d13b3: sub    rsi,rax
  0x00007f003f2d13b6: mov    QWORD PTR [rax],0x1
  0x00007f003f2d13bd: mov    rcx,rdx
  0x00007f003f2d13c0: shr    rcx,0x3
  0x00007f003f2d13c4: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2d13c7: mov    DWORD PTR [rax+0xc],ebx
  0x00007f003f2d13ca: sub    rsi,0x10
  0x00007f003f2d13ce: je     0x00007f003f2d13e5
  0x00007f003f2d13d4: xor    rbx,rbx
  0x00007f003f2d13d7: shr    rsi,0x3
  0x00007f003f2d13db: mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x00007f003f2d13e0: dec    rsi
  0x00007f003f2d13e3: jne    0x00007f003f2d13db  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@104 (line 2753)

  0x00007f003f2d13e5: mov    esi,DWORD PTR [r14+0xc]
  0x00007f003f2d13e9: shl    rsi,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@109 (line 2756)

  0x00007f003f2d13ed: movabs rdx,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d13f7: add    QWORD PTR [rdx+0x300],0x1
  0x00007f003f2d13ff: mov    edx,0x0
  0x00007f003f2d1404: mov    rcx,rax
  0x00007f003f2d1407: mov    r8d,0x0
  0x00007f003f2d140d: mov    r9,r11
  0x00007f003f2d1410: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2d1415: mov    DWORD PTR [rsp+0x58],r11d
  0x00007f003f2d141a: test   rsi,rsi
  0x00007f003f2d141d: je     0x00007f003f2d249c
  0x00007f003f2d1423: lea    rdi,[rdx+r9*1]
  0x00007f003f2d1427: cmp    edi,DWORD PTR [rsi+0xc]
  0x00007f003f2d142a: ja     0x00007f003f2d249c
  0x00007f003f2d1430: lea    rdi,[r8+r9*1]
  0x00007f003f2d1434: cmp    edi,DWORD PTR [rcx+0xc]
  0x00007f003f2d1437: ja     0x00007f003f2d249c
  0x00007f003f2d143d: test   r9d,r9d
  0x00007f003f2d1440: jl     0x00007f003f2d249c
  0x00007f003f2d1446: je     0x00007f003f2d1482
  0x00007f003f2d144c: movsxd rdx,edx
  0x00007f003f2d144f: movsxd r8,r8d
  0x00007f003f2d1452: lea    rdi,[rsi+rdx*2+0x10]
  0x00007f003f2d1457: lea    rsi,[rcx+r8*2+0x10]
  0x00007f003f2d145c: mov    rdx,r9
  0x00007f003f2d145f: test   esp,0xf
  0x00007f003f2d1465: je     0x00007f003f2d147d
  0x00007f003f2d146b: sub    rsp,0x8
  0x00007f003f2d146f: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007f003f2d1474: add    rsp,0x8
  0x00007f003f2d1478: jmp    0x00007f003f2d1482
  0x00007f003f2d147d: call   Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@117 (line 2756)
                                                ;   {runtime_call}
  0x00007f003f2d1482: mov    rdx,QWORD PTR [rsp+0x68]
  0x00007f003f2d1487: cmp    rax,QWORD PTR [rdx]  ;*invokevirtual getLanguage {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@121 (line 2758)
                                                ; implicit exception: dispatches to 0x00007f003f2d24a9
  0x00007f003f2d148a: mov    rsi,rdx
  0x00007f003f2d148d: movabs rdi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1497: add    QWORD PTR [rdi+0x310],0x1
  0x00007f003f2d149f: movabs rsi,0x7f0038a8e400  ;   {metadata(method data for {method} {0x00007f003893cb88} &apos;getLanguage&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/util/Locale&apos;)}
  0x00007f003f2d14a9: mov    edi,DWORD PTR [rsi+0xfc]
  0x00007f003f2d14af: add    edi,0x8
  0x00007f003f2d14b2: mov    DWORD PTR [rsi+0xfc],edi
  0x00007f003f2d14b8: movabs rsi,0x7f003893cb88  ;   {metadata({method} {0x00007f003893cb88} &apos;getLanguage&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/util/Locale&apos;)}
  0x00007f003f2d14c2: and    edi,0x7ffff8
  0x00007f003f2d14c8: cmp    edi,0x0
  0x00007f003f2d14cb: je     0x00007f003f2d24ae
  0x00007f003f2d14d1: mov    esi,DWORD PTR [rdx+0x10]
  0x00007f003f2d14d4: shl    rsi,0x3            ;*getfield baseLocale {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Locale::getLanguage@1 (line 1076)
                                                ; - java.lang.String::toUpperCase@121 (line 2758)

  0x00007f003f2d14d8: cmp    rax,QWORD PTR [rsi]  ;*invokevirtual getLanguage {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Locale::getLanguage@4 (line 1076)
                                                ; - java.lang.String::toUpperCase@121 (line 2758)
                                                ; implicit exception: dispatches to 0x00007f003f2d24c5
  0x00007f003f2d14db: mov    rdi,rsi
  0x00007f003f2d14de: movabs rbx,0x7f0038a8e400  ;   {metadata(method data for {method} {0x00007f003893cb88} &apos;getLanguage&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/util/Locale&apos;)}
  0x00007f003f2d14e8: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f2d14f0: mov    esi,DWORD PTR [rsi+0x10]
  0x00007f003f2d14f3: shl    rsi,0x3            ;*getfield language {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.util.locale.BaseLocale::getLanguage@1 (line 92)
                                                ; - java.util.Locale::getLanguage@4 (line 1076)
                                                ; - java.lang.String::toUpperCase@121 (line 2758)

  0x00007f003f2d14f7: movabs r10,0x67109ca18    ;   {oop(&quot;tr&quot;)}
  0x00007f003f2d1501: cmp    rsi,r10
  0x00007f003f2d1504: movabs rdi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d150e: movabs rbx,0x3a8
  0x00007f003f2d1518: je     0x00007f003f2d1528
  0x00007f003f2d151e: movabs rbx,0x3b8
  0x00007f003f2d1528: mov    rax,QWORD PTR [rdi+rbx*1]
  0x00007f003f2d152c: lea    rax,[rax+0x1]
  0x00007f003f2d1530: mov    QWORD PTR [rdi+rbx*1],rax
  0x00007f003f2d1534: je     0x00007f003f2d15c0  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@130 (line 2759)

  0x00007f003f2d153a: movabs r10,0x67109ca48    ;   {oop(&quot;az&quot;)}
  0x00007f003f2d1544: cmp    rsi,r10
  0x00007f003f2d1547: movabs rdi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1551: movabs rbx,0x3c8
  0x00007f003f2d155b: je     0x00007f003f2d156b
  0x00007f003f2d1561: movabs rbx,0x3d8
  0x00007f003f2d156b: mov    rax,QWORD PTR [rdi+rbx*1]
  0x00007f003f2d156f: lea    rax,[rax+0x1]
  0x00007f003f2d1573: mov    QWORD PTR [rdi+rbx*1],rax
  0x00007f003f2d1577: je     0x00007f003f2d15c0  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@137 (line 2759)

  0x00007f003f2d157d: movabs r10,0x67109ca78    ;   {oop(&quot;lt&quot;)}
  0x00007f003f2d1587: cmp    rsi,r10
  0x00007f003f2d158a: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1594: movabs rdi,0x3e8
  0x00007f003f2d159e: jne    0x00007f003f2d15ae
  0x00007f003f2d15a4: movabs rdi,0x3f8
  0x00007f003f2d15ae: mov    rbx,QWORD PTR [rsi+rdi*1]
  0x00007f003f2d15b2: lea    rbx,[rbx+0x1]
  0x00007f003f2d15b6: mov    QWORD PTR [rsi+rdi*1],rbx
  0x00007f003f2d15ba: jne    0x00007f003f2d15da  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@144 (line 2759)

  0x00007f003f2d15c0: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d15ca: inc    DWORD PTR [rsi+0x408]
  0x00007f003f2d15d0: mov    edi,0x1
  0x00007f003f2d15d5: jmp    0x00007f003f2d15df  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@148 (line 2759)

  0x00007f003f2d15da: mov    edi,0x0            ;*istore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@152 (line 2759)

  0x00007f003f2d15df: mov    rax,QWORD PTR [rsp+0x78]
  0x00007f003f2d15e4: mov    ebx,DWORD PTR [rsp+0x58]
  0x00007f003f2d15e8: mov    ecx,0x0            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@157 (line 2765)

  0x00007f003f2d15ed: mov    QWORD PTR [rsp+0x90],rax
  0x00007f003f2d15f5: mov    DWORD PTR [rsp+0x88],ecx
  0x00007f003f2d15fc: mov    DWORD PTR [rsp+0x80],edi
  0x00007f003f2d1603: nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f003f2d1608: mov    rsi,QWORD PTR [rsp+0x60]
  0x00007f003f2d160d: cmp    ebx,DWORD PTR [rsp+0x5c]
  0x00007f003f2d1611: movabs r8,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d161b: movabs r9,0x420
  0x00007f003f2d1625: jge    0x00007f003f2d1635
  0x00007f003f2d162b: movabs r9,0x430
  0x00007f003f2d1635: mov    r11,QWORD PTR [r8+r9*1]
  0x00007f003f2d1639: lea    r11,[r11+0x1]
  0x00007f003f2d163d: mov    QWORD PTR [r8+r9*1],r11
  0x00007f003f2d1641: jge    0x00007f003f2d22e6  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@160 (line 2765)

  0x00007f003f2d1647: mov    r8d,DWORD PTR [rsi+0xc]
  0x00007f003f2d164b: shl    r8,0x3             ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@164 (line 2766)

  0x00007f003f2d164f: movsxd r9,ebx
  0x00007f003f2d1652: cmp    ebx,DWORD PTR [r8+0xc]  ; implicit exception: dispatches to 0x00007f003f2d24ca
  0x00007f003f2d1656: jae    0x00007f003f2d24d4
  0x00007f003f2d165c: movzx  r8d,WORD PTR [r8+r9*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@169 (line 2766)

  0x00007f003f2d1662: cmp    r8d,0xd800
  0x00007f003f2d1669: movabs r9,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1673: movabs r11,0x440
  0x00007f003f2d167d: jl     0x00007f003f2d168d
  0x00007f003f2d1683: movabs r11,0x450
  0x00007f003f2d168d: mov    r13,QWORD PTR [r9+r11*1]
  0x00007f003f2d1691: lea    r13,[r13+0x1]
  0x00007f003f2d1695: mov    QWORD PTR [r9+r11*1],r13
  0x00007f003f2d1699: jl     0x00007f003f2d16dc  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@177 (line 2767)

  0x00007f003f2d169f: cmp    r8d,0xdbff
  0x00007f003f2d16a6: movabs r9,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d16b0: movabs r11,0x460
  0x00007f003f2d16ba: jg     0x00007f003f2d16ca
  0x00007f003f2d16c0: movabs r11,0x470
  0x00007f003f2d16ca: mov    r13,QWORD PTR [r9+r11*1]
  0x00007f003f2d16ce: lea    r13,[r13+0x1]
  0x00007f003f2d16d2: mov    QWORD PTR [r9+r11*1],r13
  0x00007f003f2d16d6: jle    0x00007f003f2d16ee  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@185 (line 2767)

  0x00007f003f2d16dc: mov    r9d,0x1
  0x00007f003f2d16e2: mov    DWORD PTR [rsp+0x84],ebx
  0x00007f003f2d16e9: jmp    0x00007f003f2d17d1  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@209 (line 2774)

  0x00007f003f2d16ee: mov    r8,rsi
  0x00007f003f2d16f1: movabs r9,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d16fb: add    QWORD PTR [r9+0x480],0x1
  0x00007f003f2d1703: mov    rdx,rbx
  0x00007f003f2d1706: mov    r9,rsi
  0x00007f003f2d1709: mov    rsi,r9             ;*invokevirtual codePointAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@191 (line 2769)

  0x00007f003f2d170c: mov    DWORD PTR [rsp+0x84],ebx
  0x00007f003f2d1713: nop
  0x00007f003f2d1714: nop
  0x00007f003f2d1715: nop
  0x00007f003f2d1716: nop
  0x00007f003f2d1717: call   0x00007f003f1c4d60  ; OopMap{[96]=Oop [104]=Oop [144]=Oop off=2460}
                                                ;*invokevirtual codePointAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@191 (line 2769)
                                                ;   {optimized virtual_call}
  0x00007f003f2d171c: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1726: add    QWORD PTR [rsi+0x518],0x1
  0x00007f003f2d172e: movabs rsi,0x7f0038a8e278  ;   {metadata(method data for {method} {0x00007f00388143a0} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d1738: mov    edx,DWORD PTR [rsi+0xfc]
  0x00007f003f2d173e: add    edx,0x8
  0x00007f003f2d1741: mov    DWORD PTR [rsi+0xfc],edx
  0x00007f003f2d1747: movabs rsi,0x7f00388143a0  ;   {metadata({method} {0x00007f00388143a0} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d1751: and    edx,0x7ffff8
  0x00007f003f2d1757: cmp    edx,0x0
  0x00007f003f2d175a: je     0x00007f003f2d24dd
  0x00007f003f2d1760: cmp    eax,0x10000
  0x00007f003f2d1766: movabs rsi,0x7f0038a8e278  ;   {metadata(method data for {method} {0x00007f00388143a0} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d1770: movabs rdx,0x130
  0x00007f003f2d177a: jl     0x00007f003f2d178a
  0x00007f003f2d1780: movabs rdx,0x140
  0x00007f003f2d178a: mov    rcx,QWORD PTR [rsi+rdx*1]
  0x00007f003f2d178e: lea    rcx,[rcx+0x1]
  0x00007f003f2d1792: mov    QWORD PTR [rsi+rdx*1],rcx
  0x00007f003f2d1796: jl     0x00007f003f2d17b6  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::charCount@3 (line 4818)
                                                ; - java.lang.String::toUpperCase@198 (line 2770)

  0x00007f003f2d179c: movabs rsi,0x7f0038a8e278  ;   {metadata(method data for {method} {0x00007f00388143a0} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d17a6: inc    DWORD PTR [rsi+0x150]
  0x00007f003f2d17ac: mov    esi,0x2
  0x00007f003f2d17b1: jmp    0x00007f003f2d17bb  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::charCount@7 (line 4818)
                                                ; - java.lang.String::toUpperCase@198 (line 2770)

  0x00007f003f2d17b6: mov    esi,0x1            ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::charCount@11 (line 4818)
                                                ; - java.lang.String::toUpperCase@198 (line 2770)

  0x00007f003f2d17bb: movabs rdx,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d17c5: inc    DWORD PTR [rdx+0x528]
  0x00007f003f2d17cb: mov    r9,rsi
  0x00007f003f2d17ce: mov    r8,rax             ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@203 (line 2770)

  0x00007f003f2d17d1: mov    edi,DWORD PTR [rsp+0x80]
  0x00007f003f2d17d8: cmp    edi,0x0
  0x00007f003f2d17db: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d17e5: movabs rdx,0x540
  0x00007f003f2d17ef: je     0x00007f003f2d17ff
  0x00007f003f2d17f5: movabs rdx,0x550
  0x00007f003f2d17ff: mov    rcx,QWORD PTR [rsi+rdx*1]
  0x00007f003f2d1803: lea    rcx,[rcx+0x1]
  0x00007f003f2d1807: mov    QWORD PTR [rsi+rdx*1],rcx
  0x00007f003f2d180b: mov    DWORD PTR [rsp+0x98],r9d
  0x00007f003f2d1813: mov    DWORD PTR [rsp+0x8c],r8d
  0x00007f003f2d181b: mov    DWORD PTR [rsp+0x80],edi
  0x00007f003f2d1822: je     0x00007f003f2d1869  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@211 (line 2774)

  0x00007f003f2d1828: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1832: add    QWORD PTR [rsi+0x560],0x1
  0x00007f003f2d183a: mov    rsi,QWORD PTR [rsp+0x60]
  0x00007f003f2d183f: mov    edx,DWORD PTR [rsp+0x84]
  0x00007f003f2d1846: mov    rcx,QWORD PTR [rsp+0x68]  ;*invokestatic toUpperCaseEx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@218 (line 2775)

  0x00007f003f2d184b: nop
  0x00007f003f2d184c: nop
  0x00007f003f2d184d: nop
  0x00007f003f2d184e: nop
  0x00007f003f2d184f: call   0x00007f003f1c5160  ; OopMap{[96]=Oop [104]=Oop [144]=Oop off=2772}
                                                ;*invokestatic toUpperCaseEx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@218 (line 2775)
                                                ;   {static_call}
  0x00007f003f2d1854: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d185e: inc    DWORD PTR [rsi+0x570]
  0x00007f003f2d1864: jmp    0x00007f003f2d1ae4  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@223 (line 2775)

  0x00007f003f2d1869: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1873: add    QWORD PTR [rsi+0x588],0x1
  0x00007f003f2d187b: movabs rsi,0x7f0038a4fa30  ;   {metadata(method data for {method} {0x00007f0038817be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d1885: mov    edi,DWORD PTR [rsi+0xfc]
  0x00007f003f2d188b: add    edi,0x8
  0x00007f003f2d188e: mov    DWORD PTR [rsi+0xfc],edi
  0x00007f003f2d1894: movabs rsi,0x7f0038817be0  ;   {metadata({method} {0x00007f0038817be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d189e: and    edi,0x7ffff8
  0x00007f003f2d18a4: cmp    edi,0x0
  0x00007f003f2d18a7: je     0x00007f003f2d24f4
  0x00007f003f2d18ad: movabs rsi,0x7f0038a4fa30  ;   {metadata(method data for {method} {0x00007f0038817be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d18b7: inc    DWORD PTR [rsi+0x130]  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@3 (line 7137)
                                                ; - java.lang.String::toUpperCase@228 (line 2777)

  0x00007f003f2d18bd: movabs rsi,0x7f0038a4fa30  ;   {metadata(method data for {method} {0x00007f0038817be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d18c7: add    QWORD PTR [rsi+0x190],0x1
  0x00007f003f2d18cf: mov    esi,DWORD PTR [rsp+0x8c]  ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@22 (line 7138)
                                                ; - java.lang.String::toUpperCase@228 (line 2777)

  0x00007f003f2d18d6: nop
  0x00007f003f2d18d7: call   0x00007f003f1c5160  ; OopMap{[96]=Oop [104]=Oop [144]=Oop off=2908}
                                                ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@22 (line 7138)
                                                ; - java.lang.String::toUpperCase@228 (line 2777)
                                                ;   {static_call}
  0x00007f003f2d18dc: cmp    rax,QWORD PTR [rax]  ; implicit exception: dispatches to 0x00007f003f2d250b
  0x00007f003f2d18df: mov    rdx,rax
  0x00007f003f2d18e2: movabs rsi,0x7f0038a4fa30  ;   {metadata(method data for {method} {0x00007f0038817be0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d18ec: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2d18ef: shl    rdx,0x3
  0x00007f003f2d18f3: cmp    rdx,QWORD PTR [rsi+0x1b0]
  0x00007f003f2d18fa: jne    0x00007f003f2d1909
  0x00007f003f2d18fc: add    QWORD PTR [rsi+0x1b8],0x1
  0x00007f003f2d1904: jmp    0x00007f003f2d1acb
  0x00007f003f2d1909: cmp    rdx,QWORD PTR [rsi+0x1c0]
  0x00007f003f2d1910: jne    0x00007f003f2d191f
  0x00007f003f2d1912: add    QWORD PTR [rsi+0x1c8],0x1
  0x00007f003f2d191a: jmp    0x00007f003f2d1acb
  0x00007f003f2d191f: cmp    rdx,QWORD PTR [rsi+0x1d0]
  0x00007f003f2d1926: jne    0x00007f003f2d1935
  0x00007f003f2d1928: add    QWORD PTR [rsi+0x1d8],0x1
  0x00007f003f2d1930: jmp    0x00007f003f2d1acb
  0x00007f003f2d1935: cmp    rdx,QWORD PTR [rsi+0x1e0]
  0x00007f003f2d193c: jne    0x00007f003f2d194b
  0x00007f003f2d193e: add    QWORD PTR [rsi+0x1e8],0x1
  0x00007f003f2d1946: jmp    0x00007f003f2d1acb
  0x00007f003f2d194b: cmp    rdx,QWORD PTR [rsi+0x1f0]
  0x00007f003f2d1952: jne    0x00007f003f2d1961
  0x00007f003f2d1954: add    QWORD PTR [rsi+0x1f8],0x1
  0x00007f003f2d195c: jmp    0x00007f003f2d1acb
  0x00007f003f2d1961: cmp    rdx,QWORD PTR [rsi+0x200]
  0x00007f003f2d1968: jne    0x00007f003f2d1977
  0x00007f003f2d196a: add    QWORD PTR [rsi+0x208],0x1
  0x00007f003f2d1972: jmp    0x00007f003f2d1acb
  0x00007f003f2d1977: cmp    rdx,QWORD PTR [rsi+0x210]
  0x00007f003f2d197e: jne    0x00007f003f2d198d
  0x00007f003f2d1980: add    QWORD PTR [rsi+0x218],0x1
  0x00007f003f2d1988: jmp    0x00007f003f2d1acb
  0x00007f003f2d198d: cmp    rdx,QWORD PTR [rsi+0x220]
  0x00007f003f2d1994: jne    0x00007f003f2d19a3
  0x00007f003f2d1996: add    QWORD PTR [rsi+0x228],0x1
  0x00007f003f2d199e: jmp    0x00007f003f2d1acb
  0x00007f003f2d19a3: cmp    QWORD PTR [rsi+0x1b0],0x0
  0x00007f003f2d19ae: jne    0x00007f003f2d19c7
  0x00007f003f2d19b0: mov    QWORD PTR [rsi+0x1b0],rdx
  0x00007f003f2d19b7: mov    QWORD PTR [rsi+0x1b8],0x1
  0x00007f003f2d19c2: jmp    0x00007f003f2d1acb
  0x00007f003f2d19c7: cmp    QWORD PTR [rsi+0x1c0],0x0
  0x00007f003f2d19d2: jne    0x00007f003f2d19eb
  0x00007f003f2d19d4: mov    QWORD PTR [rsi+0x1c0],rdx
  0x00007f003f2d19db: mov    QWORD PTR [rsi+0x1c8],0x1
  0x00007f003f2d19e6: jmp    0x00007f003f2d1acb
  0x00007f003f2d19eb: cmp    QWORD PTR [rsi+0x1d0],0x0
  0x00007f003f2d19f6: jne    0x00007f003f2d1a0f
  0x00007f003f2d19f8: mov    QWORD PTR [rsi+0x1d0],rdx
  0x00007f003f2d19ff: mov    QWORD PTR [rsi+0x1d8],0x1
  0x00007f003f2d1a0a: jmp    0x00007f003f2d1acb
  0x00007f003f2d1a0f: cmp    QWORD PTR [rsi+0x1e0],0x0
  0x00007f003f2d1a1a: jne    0x00007f003f2d1a33
  0x00007f003f2d1a1c: mov    QWORD PTR [rsi+0x1e0],rdx
  0x00007f003f2d1a23: mov    QWORD PTR [rsi+0x1e8],0x1
  0x00007f003f2d1a2e: jmp    0x00007f003f2d1acb
  0x00007f003f2d1a33: cmp    QWORD PTR [rsi+0x1f0],0x0
  0x00007f003f2d1a3e: jne    0x00007f003f2d1a57
  0x00007f003f2d1a40: mov    QWORD PTR [rsi+0x1f0],rdx
  0x00007f003f2d1a47: mov    QWORD PTR [rsi+0x1f8],0x1
  0x00007f003f2d1a52: jmp    0x00007f003f2d1acb
  0x00007f003f2d1a57: cmp    QWORD PTR [rsi+0x200],0x0
  0x00007f003f2d1a62: jne    0x00007f003f2d1a7b
  0x00007f003f2d1a64: mov    QWORD PTR [rsi+0x200],rdx
  0x00007f003f2d1a6b: mov    QWORD PTR [rsi+0x208],0x1
  0x00007f003f2d1a76: jmp    0x00007f003f2d1acb
  0x00007f003f2d1a7b: cmp    QWORD PTR [rsi+0x210],0x0
  0x00007f003f2d1a86: jne    0x00007f003f2d1a9f
  0x00007f003f2d1a88: mov    QWORD PTR [rsi+0x210],rdx
  0x00007f003f2d1a8f: mov    QWORD PTR [rsi+0x218],0x1
  0x00007f003f2d1a9a: jmp    0x00007f003f2d1acb
  0x00007f003f2d1a9f: cmp    QWORD PTR [rsi+0x220],0x0
  0x00007f003f2d1aaa: jne    0x00007f003f2d1ac3
  0x00007f003f2d1aac: mov    QWORD PTR [rsi+0x220],rdx
  0x00007f003f2d1ab3: mov    QWORD PTR [rsi+0x228],0x1
  0x00007f003f2d1abe: jmp    0x00007f003f2d1acb
  0x00007f003f2d1ac3: add    QWORD PTR [rsi+0x1a0],0x1
  0x00007f003f2d1acb: mov    edx,DWORD PTR [rsp+0x8c]
  0x00007f003f2d1ad2: mov    rsi,rax            ;*invokevirtual toUpperCaseEx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@26 (line 7138)
                                                ; - java.lang.String::toUpperCase@228 (line 2777)

  0x00007f003f2d1ad5: movabs rax,0xffffffffffffffff
  0x00007f003f2d1adf: call   0x00007f003f1c4f60  ; OopMap{[96]=Oop [104]=Oop [144]=Oop off=3428}
                                                ;*invokevirtual toUpperCaseEx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@26 (line 7138)
                                                ; - java.lang.String::toUpperCase@228 (line 2777)
                                                ;   {virtual_call}
  0x00007f003f2d1ae4: cmp    eax,0xffffffff
  0x00007f003f2d1ae7: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1af1: movabs rdx,0x598
  0x00007f003f2d1afb: je     0x00007f003f2d1b0b
  0x00007f003f2d1b01: movabs rdx,0x5a8
  0x00007f003f2d1b0b: mov    rcx,QWORD PTR [rsi+rdx*1]
  0x00007f003f2d1b0f: lea    rcx,[rcx+0x1]
  0x00007f003f2d1b13: mov    QWORD PTR [rsi+rdx*1],rcx
  0x00007f003f2d1b17: je     0x00007f003f2d1b59  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@236 (line 2779)

  0x00007f003f2d1b1d: cmp    eax,0x10000
  0x00007f003f2d1b23: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1b2d: movabs rdx,0x5b8
  0x00007f003f2d1b37: jl     0x00007f003f2d1b47
  0x00007f003f2d1b3d: movabs rdx,0x5c8
  0x00007f003f2d1b47: mov    rcx,QWORD PTR [rsi+rdx*1]
  0x00007f003f2d1b4b: lea    rcx,[rcx+0x1]
  0x00007f003f2d1b4f: mov    QWORD PTR [rsi+rdx*1],rcx
  0x00007f003f2d1b53: jl     0x00007f003f2d223d  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@243 (line 2779)

  0x00007f003f2d1b59: cmp    eax,0xffffffff
  0x00007f003f2d1b5c: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1b66: movabs rdx,0x5d8
  0x00007f003f2d1b70: jne    0x00007f003f2d1b80
  0x00007f003f2d1b76: movabs rdx,0x5e8
  0x00007f003f2d1b80: mov    rcx,QWORD PTR [rsi+rdx*1]
  0x00007f003f2d1b84: lea    rcx,[rcx+0x1]
  0x00007f003f2d1b88: mov    QWORD PTR [rsi+rdx*1],rcx
  0x00007f003f2d1b8c: jne    0x00007f003f2d1eb9  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@249 (line 2781)

  0x00007f003f2d1b92: mov    edi,DWORD PTR [rsp+0x80]
  0x00007f003f2d1b99: cmp    edi,0x0
  0x00007f003f2d1b9c: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1ba6: movabs rdx,0x5f8
  0x00007f003f2d1bb0: je     0x00007f003f2d1bc0
  0x00007f003f2d1bb6: movabs rdx,0x608
  0x00007f003f2d1bc0: mov    rcx,QWORD PTR [rsi+rdx*1]
  0x00007f003f2d1bc4: lea    rcx,[rcx+0x1]
  0x00007f003f2d1bc8: mov    QWORD PTR [rsi+rdx*1],rcx
  0x00007f003f2d1bcc: mov    DWORD PTR [rsp+0x80],edi
  0x00007f003f2d1bd3: je     0x00007f003f2d1c19  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@254 (line 2782)

  0x00007f003f2d1bd9: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1be3: add    QWORD PTR [rsi+0x618],0x1
  0x00007f003f2d1beb: mov    rsi,QWORD PTR [rsp+0x60]
  0x00007f003f2d1bf0: mov    edx,DWORD PTR [rsp+0x84]
  0x00007f003f2d1bf7: mov    rcx,QWORD PTR [rsp+0x68]  ;*invokestatic toUpperCaseCharArray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@261 (line 2784)

  0x00007f003f2d1bfc: nop
  0x00007f003f2d1bfd: nop
  0x00007f003f2d1bfe: nop
  0x00007f003f2d1bff: call   0x00007f003f1c5160  ; OopMap{[96]=Oop [104]=Oop [144]=Oop off=3716}
                                                ;*invokestatic toUpperCaseCharArray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@261 (line 2784)
                                                ;   {static_call}
  0x00007f003f2d1c04: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1c0e: inc    DWORD PTR [rsi+0x628]
  0x00007f003f2d1c14: jmp    0x00007f003f2d1f7c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@266 (line 2784)

  0x00007f003f2d1c19: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1c23: add    QWORD PTR [rsi+0x640],0x1
  0x00007f003f2d1c2b: movabs rsi,0x7f0038a8e608  ;   {metadata(method data for {method} {0x00007f0038817ca0} &apos;toUpperCaseCharArray&apos; &apos;(I)[C&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d1c35: mov    edi,DWORD PTR [rsi+0xfc]
  0x00007f003f2d1c3b: add    edi,0x8
  0x00007f003f2d1c3e: mov    DWORD PTR [rsi+0xfc],edi
  0x00007f003f2d1c44: movabs rsi,0x7f0038817ca0  ;   {metadata({method} {0x00007f0038817ca0} &apos;toUpperCaseCharArray&apos; &apos;(I)[C&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d1c4e: and    edi,0x7ffff8
  0x00007f003f2d1c54: cmp    edi,0x0
  0x00007f003f2d1c57: je     0x00007f003f2d2510
  0x00007f003f2d1c5d: movabs rsi,0x7f0038a8e608  ;   {metadata(method data for {method} {0x00007f0038817ca0} &apos;toUpperCaseCharArray&apos; &apos;(I)[C&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d1c67: inc    DWORD PTR [rsi+0x130]  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseCharArray@3 (line 7154)
                                                ; - java.lang.String::toUpperCase@271 (line 2786)

  0x00007f003f2d1c6d: mov    r8d,DWORD PTR [rsp+0x8c]
  0x00007f003f2d1c75: movabs rsi,0x7f0038a8e608  ;   {metadata(method data for {method} {0x00007f0038817ca0} &apos;toUpperCaseCharArray&apos; &apos;(I)[C&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d1c7f: add    QWORD PTR [rsi+0x190],0x1
  0x00007f003f2d1c87: mov    rsi,r8             ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseCharArray@22 (line 7155)
                                                ; - java.lang.String::toUpperCase@271 (line 2786)

  0x00007f003f2d1c8a: mov    DWORD PTR [rsp+0x8c],r8d
  0x00007f003f2d1c92: nop
  0x00007f003f2d1c93: nop
  0x00007f003f2d1c94: nop
  0x00007f003f2d1c95: nop
  0x00007f003f2d1c96: nop
  0x00007f003f2d1c97: call   0x00007f003f1c5160  ; OopMap{[96]=Oop [104]=Oop [144]=Oop off=3868}
                                                ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseCharArray@22 (line 7155)
                                                ; - java.lang.String::toUpperCase@271 (line 2786)
                                                ;   {static_call}
  0x00007f003f2d1c9c: cmp    rax,QWORD PTR [rax]  ; implicit exception: dispatches to 0x00007f003f2d2527
  0x00007f003f2d1c9f: mov    rdx,rax
  0x00007f003f2d1ca2: movabs rsi,0x7f0038a8e608  ;   {metadata(method data for {method} {0x00007f0038817ca0} &apos;toUpperCaseCharArray&apos; &apos;(I)[C&apos; in &apos;java/lang/Character&apos;)}
  0x00007f003f2d1cac: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2d1caf: shl    rdx,0x3
  0x00007f003f2d1cb3: cmp    rdx,QWORD PTR [rsi+0x1b0]
  0x00007f003f2d1cba: jne    0x00007f003f2d1cc9
  0x00007f003f2d1cbc: add    QWORD PTR [rsi+0x1b8],0x1
  0x00007f003f2d1cc4: jmp    0x00007f003f2d1e8b
  0x00007f003f2d1cc9: cmp    rdx,QWORD PTR [rsi+0x1c0]
  0x00007f003f2d1cd0: jne    0x00007f003f2d1cdf
  0x00007f003f2d1cd2: add    QWORD PTR [rsi+0x1c8],0x1
  0x00007f003f2d1cda: jmp    0x00007f003f2d1e8b
  0x00007f003f2d1cdf: cmp    rdx,QWORD PTR [rsi+0x1d0]
  0x00007f003f2d1ce6: jne    0x00007f003f2d1cf5
  0x00007f003f2d1ce8: add    QWORD PTR [rsi+0x1d8],0x1
  0x00007f003f2d1cf0: jmp    0x00007f003f2d1e8b
  0x00007f003f2d1cf5: cmp    rdx,QWORD PTR [rsi+0x1e0]
  0x00007f003f2d1cfc: jne    0x00007f003f2d1d0b
  0x00007f003f2d1cfe: add    QWORD PTR [rsi+0x1e8],0x1
  0x00007f003f2d1d06: jmp    0x00007f003f2d1e8b
  0x00007f003f2d1d0b: cmp    rdx,QWORD PTR [rsi+0x1f0]
  0x00007f003f2d1d12: jne    0x00007f003f2d1d21
  0x00007f003f2d1d14: add    QWORD PTR [rsi+0x1f8],0x1
  0x00007f003f2d1d1c: jmp    0x00007f003f2d1e8b
  0x00007f003f2d1d21: cmp    rdx,QWORD PTR [rsi+0x200]
  0x00007f003f2d1d28: jne    0x00007f003f2d1d37
  0x00007f003f2d1d2a: add    QWORD PTR [rsi+0x208],0x1
  0x00007f003f2d1d32: jmp    0x00007f003f2d1e8b
  0x00007f003f2d1d37: cmp    rdx,QWORD PTR [rsi+0x210]
  0x00007f003f2d1d3e: jne    0x00007f003f2d1d4d
  0x00007f003f2d1d40: add    QWORD PTR [rsi+0x218],0x1
  0x00007f003f2d1d48: jmp    0x00007f003f2d1e8b
  0x00007f003f2d1d4d: cmp    rdx,QWORD PTR [rsi+0x220]
  0x00007f003f2d1d54: jne    0x00007f003f2d1d63
  0x00007f003f2d1d56: add    QWORD PTR [rsi+0x228],0x1
  0x00007f003f2d1d5e: jmp    0x00007f003f2d1e8b
  0x00007f003f2d1d63: cmp    QWORD PTR [rsi+0x1b0],0x0
  0x00007f003f2d1d6e: jne    0x00007f003f2d1d87
  0x00007f003f2d1d70: mov    QWORD PTR [rsi+0x1b0],rdx
  0x00007f003f2d1d77: mov    QWORD PTR [rsi+0x1b8],0x1
  0x00007f003f2d1d82: jmp    0x00007f003f2d1e8b
  0x00007f003f2d1d87: cmp    QWORD PTR [rsi+0x1c0],0x0
  0x00007f003f2d1d92: jne    0x00007f003f2d1dab
  0x00007f003f2d1d94: mov    QWORD PTR [rsi+0x1c0],rdx
  0x00007f003f2d1d9b: mov    QWORD PTR [rsi+0x1c8],0x1
  0x00007f003f2d1da6: jmp    0x00007f003f2d1e8b
  0x00007f003f2d1dab: cmp    QWORD PTR [rsi+0x1d0],0x0
  0x00007f003f2d1db6: jne    0x00007f003f2d1dcf
  0x00007f003f2d1db8: mov    QWORD PTR [rsi+0x1d0],rdx
  0x00007f003f2d1dbf: mov    QWORD PTR [rsi+0x1d8],0x1
  0x00007f003f2d1dca: jmp    0x00007f003f2d1e8b
  0x00007f003f2d1dcf: cmp    QWORD PTR [rsi+0x1e0],0x0
  0x00007f003f2d1dda: jne    0x00007f003f2d1df3
  0x00007f003f2d1ddc: mov    QWORD PTR [rsi+0x1e0],rdx
  0x00007f003f2d1de3: mov    QWORD PTR [rsi+0x1e8],0x1
  0x00007f003f2d1dee: jmp    0x00007f003f2d1e8b
  0x00007f003f2d1df3: cmp    QWORD PTR [rsi+0x1f0],0x0
  0x00007f003f2d1dfe: jne    0x00007f003f2d1e17
  0x00007f003f2d1e00: mov    QWORD PTR [rsi+0x1f0],rdx
  0x00007f003f2d1e07: mov    QWORD PTR [rsi+0x1f8],0x1
  0x00007f003f2d1e12: jmp    0x00007f003f2d1e8b
  0x00007f003f2d1e17: cmp    QWORD PTR [rsi+0x200],0x0
  0x00007f003f2d1e22: jne    0x00007f003f2d1e3b
  0x00007f003f2d1e24: mov    QWORD PTR [rsi+0x200],rdx
  0x00007f003f2d1e2b: mov    QWORD PTR [rsi+0x208],0x1
  0x00007f003f2d1e36: jmp    0x00007f003f2d1e8b
  0x00007f003f2d1e3b: cmp    QWORD PTR [rsi+0x210],0x0
  0x00007f003f2d1e46: jne    0x00007f003f2d1e5f
  0x00007f003f2d1e48: mov    QWORD PTR [rsi+0x210],rdx
  0x00007f003f2d1e4f: mov    QWORD PTR [rsi+0x218],0x1
  0x00007f003f2d1e5a: jmp    0x00007f003f2d1e8b
  0x00007f003f2d1e5f: cmp    QWORD PTR [rsi+0x220],0x0
  0x00007f003f2d1e6a: jne    0x00007f003f2d1e83
  0x00007f003f2d1e6c: mov    QWORD PTR [rsi+0x220],rdx
  0x00007f003f2d1e73: mov    QWORD PTR [rsi+0x228],0x1
  0x00007f003f2d1e7e: jmp    0x00007f003f2d1e8b
  0x00007f003f2d1e83: add    QWORD PTR [rsi+0x1a0],0x1
  0x00007f003f2d1e8b: mov    edx,DWORD PTR [rsp+0x8c]
  0x00007f003f2d1e92: mov    rsi,rax            ;*invokevirtual toUpperCaseCharArray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseCharArray@26 (line 7155)
                                                ; - java.lang.String::toUpperCase@271 (line 2786)

  0x00007f003f2d1e95: movabs rax,0xffffffffffffffff
  0x00007f003f2d1e9f: call   0x00007f003f1c4f60  ; OopMap{[96]=Oop [104]=Oop [144]=Oop off=4388}
                                                ;*invokevirtual toUpperCaseCharArray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseCharArray@26 (line 7155)
                                                ; - java.lang.String::toUpperCase@271 (line 2786)
                                                ;   {virtual_call}
  0x00007f003f2d1ea4: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1eae: inc    DWORD PTR [rsi+0x650]
  0x00007f003f2d1eb4: jmp    0x00007f003f2d1f7c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@276 (line 2786)

  0x00007f003f2d1eb9: mov    r9d,DWORD PTR [rsp+0x98]
  0x00007f003f2d1ec1: cmp    r9d,0x2
  0x00007f003f2d1ec5: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1ecf: movabs rdx,0x668
  0x00007f003f2d1ed9: jne    0x00007f003f2d1ee9
  0x00007f003f2d1edf: movabs rdx,0x678
  0x00007f003f2d1ee9: mov    rcx,QWORD PTR [rsi+rdx*1]
  0x00007f003f2d1eed: lea    rcx,[rcx+0x1]
  0x00007f003f2d1ef1: mov    QWORD PTR [rsi+rdx*1],rcx
  0x00007f003f2d1ef5: mov    DWORD PTR [rsp+0x98],r9d
  0x00007f003f2d1efd: jne    0x00007f003f2d1f5f  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@282 (line 2788)

  0x00007f003f2d1f03: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1f0d: add    QWORD PTR [rsi+0x688],0x1
  0x00007f003f2d1f15: mov    ecx,DWORD PTR [rsp+0x88]
  0x00007f003f2d1f1c: add    ecx,DWORD PTR [rsp+0x84]
  0x00007f003f2d1f23: mov    rsi,rax
  0x00007f003f2d1f26: mov    rdx,QWORD PTR [rsp+0x90]  ;*invokestatic toChars {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@296 (line 2789)

  0x00007f003f2d1f2e: nop
  0x00007f003f2d1f2f: call   0x00007f003f1c5160  ; OopMap{[96]=Oop [104]=Oop [144]=Oop off=4532}
                                                ;*invokestatic toChars {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@296 (line 2789)
                                                ;   {static_call}
  0x00007f003f2d1f34: sub    eax,DWORD PTR [rsp+0x98]
  0x00007f003f2d1f3b: add    eax,DWORD PTR [rsp+0x88]
  0x00007f003f2d1f42: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1f4c: inc    DWORD PTR [rsi+0x698]
  0x00007f003f2d1f52: mov    rsi,QWORD PTR [rsp+0x90]
  0x00007f003f2d1f5a: jmp    0x00007f003f2d2270  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@305 (line 2790)

  0x00007f003f2d1f5f: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1f69: add    QWORD PTR [rsi+0x6b0],0x1
  0x00007f003f2d1f71: mov    rsi,rax            ;*invokestatic toChars {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@310 (line 2792)

  0x00007f003f2d1f74: nop
  0x00007f003f2d1f75: nop
  0x00007f003f2d1f76: nop
  0x00007f003f2d1f77: call   0x00007f003f1c5160  ; OopMap{[96]=Oop [104]=Oop [144]=Oop off=4604}
                                                ;*invokestatic toChars {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@310 (line 2792)
                                                ;   {static_call}
  0x00007f003f2d1f7c: mov    r11d,DWORD PTR [rax+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@317 (line 2796)
                                                ; implicit exception: dispatches to 0x00007f003f2d252c
  0x00007f003f2d1f80: cmp    r11d,DWORD PTR [rsp+0x98]
  0x00007f003f2d1f88: movabs rbx,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d1f92: movabs rdx,0x6c0
  0x00007f003f2d1f9c: jle    0x00007f003f2d1fac
  0x00007f003f2d1fa2: movabs rdx,0x6d0
  0x00007f003f2d1fac: mov    rsi,QWORD PTR [rbx+rdx*1]
  0x00007f003f2d1fb0: lea    rsi,[rsi+0x1]
  0x00007f003f2d1fb4: mov    QWORD PTR [rbx+rdx*1],rsi
  0x00007f003f2d1fb8: jg     0x00007f003f2d1fdb  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@324 (line 2797)

  0x00007f003f2d1fbe: mov    rsi,QWORD PTR [rsp+0x90]
  0x00007f003f2d1fc6: mov    DWORD PTR [rsp+0x9c],r11d
  0x00007f003f2d1fce: mov    QWORD PTR [rsp+0xa8],rax
  0x00007f003f2d1fd6: jmp    0x00007f003f2d214e  ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@358 (line 2802)

  0x00007f003f2d1fdb: mov    QWORD PTR [rsp+0xa8],rax
  0x00007f003f2d1fe3: mov    r8,QWORD PTR [rsp+0x90]
  0x00007f003f2d1feb: mov    ebx,DWORD PTR [r8+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@329 (line 2798)
                                                ; implicit exception: dispatches to 0x00007f003f2d2531
  0x00007f003f2d1fef: add    ebx,r11d
  0x00007f003f2d1ff2: sub    ebx,DWORD PTR [rsp+0x98]
  0x00007f003f2d1ff9: movabs rdx,0x7c00001f8    ;   {metadata({type array char})}
  0x00007f003f2d2003: movsxd rbx,ebx
  0x00007f003f2d2006: mov    rdi,rbx
  0x00007f003f2d2009: cmp    rbx,0xffffff
  0x00007f003f2d2010: ja     0x00007f003f2d2536
  0x00007f003f2d2016: movabs rsi,0x17
  0x00007f003f2d2020: lea    rsi,[rsi+rbx*2]
  0x00007f003f2d2024: and    rsi,0xfffffffffffffff8
  0x00007f003f2d2028: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2d202c: lea    rsi,[rax+rsi*1]
  0x00007f003f2d2030: cmp    rsi,QWORD PTR [r15+0x70]
  0x00007f003f2d2034: ja     0x00007f003f2d2536
  0x00007f003f2d203a: mov    QWORD PTR [r15+0x60],rsi
  0x00007f003f2d203e: sub    rsi,rax
  0x00007f003f2d2041: mov    QWORD PTR [rax],0x1
  0x00007f003f2d2048: mov    rcx,rdx
  0x00007f003f2d204b: shr    rcx,0x3
  0x00007f003f2d204f: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2d2052: mov    DWORD PTR [rax+0xc],ebx
  0x00007f003f2d2055: sub    rsi,0x10
  0x00007f003f2d2059: je     0x00007f003f2d2070
  0x00007f003f2d205f: xor    rbx,rbx
  0x00007f003f2d2062: shr    rsi,0x3
  0x00007f003f2d2066: mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x00007f003f2d206b: dec    rsi
  0x00007f003f2d206e: jne    0x00007f003f2d2066  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@336 (line 2798)

  0x00007f003f2d2070: movabs rsi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d207a: add    QWORD PTR [rsi+0x6e0],0x1
  0x00007f003f2d2082: mov    r9d,DWORD PTR [rsp+0x88]
  0x00007f003f2d208a: add    r9d,DWORD PTR [rsp+0x84]
  0x00007f003f2d2092: mov    rsi,r8
  0x00007f003f2d2095: mov    edx,0x0
  0x00007f003f2d209a: mov    rcx,rax
  0x00007f003f2d209d: mov    r8d,0x0
  0x00007f003f2d20a3: mov    DWORD PTR [rsp+0x9c],r11d
  0x00007f003f2d20ab: mov    QWORD PTR [rsp+0xa0],rax
  0x00007f003f2d20b3: mov    edi,DWORD PTR [rcx+0x8]
  0x00007f003f2d20b6: shl    rdi,0x3
  0x00007f003f2d20ba: cmp    DWORD PTR [rdi+0x8],0x0
  0x00007f003f2d20c1: jge    0x00007f003f2d2540
  0x00007f003f2d20c7: mov    edi,DWORD PTR [rsi+0x8]
  0x00007f003f2d20ca: shl    rdi,0x3
  0x00007f003f2d20ce: cmp    DWORD PTR [rdi+0x8],0x0
  0x00007f003f2d20d5: jge    0x00007f003f2d2540
  0x00007f003f2d20db: lea    rdi,[rdx+r9*1]
  0x00007f003f2d20df: cmp    edi,DWORD PTR [rsi+0xc]
  0x00007f003f2d20e2: ja     0x00007f003f2d2540
  0x00007f003f2d20e8: lea    rdi,[r8+r9*1]
  0x00007f003f2d20ec: cmp    edi,DWORD PTR [rcx+0xc]
  0x00007f003f2d20ef: ja     0x00007f003f2d2540
  0x00007f003f2d20f5: test   r9d,r9d
  0x00007f003f2d20f8: jl     0x00007f003f2d2540
  0x00007f003f2d20fe: je     0x00007f003f2d2146
  0x00007f003f2d2104: movsxd rdx,edx
  0x00007f003f2d2107: movsxd r8,r8d
  0x00007f003f2d210a: mov    edi,DWORD PTR [rsi+0x8]
  0x00007f003f2d210d: cmp    edi,DWORD PTR [rcx+0x8]
  0x00007f003f2d2110: jne    0x00007f003f2d2540
  0x00007f003f2d2116: lea    rdi,[rsi+rdx*2+0x10]
  0x00007f003f2d211b: lea    rsi,[rcx+r8*2+0x10]
  0x00007f003f2d2120: mov    rdx,r9
  0x00007f003f2d2123: test   esp,0xf
  0x00007f003f2d2129: je     0x00007f003f2d2141
  0x00007f003f2d212f: sub    rsp,0x8
  0x00007f003f2d2133: call   Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007f003f2d2138: add    rsp,0x8
  0x00007f003f2d213c: jmp    0x00007f003f2d2146
  0x00007f003f2d2141: call   Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@351 (line 2799)
                                                ;   {runtime_call}
  0x00007f003f2d2146: mov    rsi,QWORD PTR [rsp+0xa0]  ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@358 (line 2802)

  0x00007f003f2d214e: mov    edx,0x0
  0x00007f003f2d2153: mov    r11d,DWORD PTR [rsp+0x9c]
  0x00007f003f2d215b: mov    rax,QWORD PTR [rsp+0xa8]
  0x00007f003f2d2163: jmp    0x00007f003f2d21dc  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@361 (line 2802)

  0x00007f003f2d2168: movsxd rdi,edx
  0x00007f003f2d216b: movzx  edi,WORD PTR [rax+rdi*2+0x10]
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@382 (line 2803)

  0x00007f003f2d2170: mov    ecx,DWORD PTR [rsp+0x88]
  0x00007f003f2d2177: add    ecx,DWORD PTR [rsp+0x84]
  0x00007f003f2d217e: add    ecx,edx
  0x00007f003f2d2180: movsxd r8,ecx
  0x00007f003f2d2183: cmp    ecx,DWORD PTR [rsi+0xc]  ; implicit exception: dispatches to 0x00007f003f2d2551
  0x00007f003f2d2186: jae    0x00007f003f2d255b
  0x00007f003f2d218c: mov    WORD PTR [rsi+r8*2+0x10],di
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@383 (line 2803)

  0x00007f003f2d2192: inc    edx
  0x00007f003f2d2194: movabs rdi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d219e: mov    ecx,DWORD PTR [rdi+0x100]
  0x00007f003f2d21a4: add    ecx,0x8
  0x00007f003f2d21a7: mov    DWORD PTR [rdi+0x100],ecx
  0x00007f003f2d21ad: movabs rdi,0x7f003876e318  ;   {metadata({method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d21b7: and    ecx,0xfff8
  0x00007f003f2d21bd: cmp    ecx,0x0
  0x00007f003f2d21c0: je     0x00007f003f2d2564  ; OopMap{[96]=Oop [104]=Oop rsi=Oop rax=Oop off=5190}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@387 (line 2802)

  0x00007f003f2d21c6: test   DWORD PTR [rip+0x1b0eff34],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2d21cc: movabs rdi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d21d6: inc    DWORD PTR [rdi+0x710]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@387 (line 2802)

  0x00007f003f2d21dc: cmp    edx,r11d
  0x00007f003f2d21df: movabs rdi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d21e9: movabs rcx,0x6f0
  0x00007f003f2d21f3: jge    0x00007f003f2d2203
  0x00007f003f2d21f9: movabs rcx,0x700
  0x00007f003f2d2203: mov    r8,QWORD PTR [rdi+rcx*1]
  0x00007f003f2d2207: lea    r8,[r8+0x1]
  0x00007f003f2d220b: mov    QWORD PTR [rdi+rcx*1],r8
  0x00007f003f2d220f: jl     0x00007f003f2d2168  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@365 (line 2802)

  0x00007f003f2d2215: sub    r11d,DWORD PTR [rsp+0x98]
  0x00007f003f2d221d: add    r11d,DWORD PTR [rsp+0x88]
  0x00007f003f2d2225: movabs rdx,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d222f: inc    DWORD PTR [rdx+0x728]
  0x00007f003f2d2235: mov    rax,r11
  0x00007f003f2d2238: jmp    0x00007f003f2d2270  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@400 (line 2806)

  0x00007f003f2d223d: mov    r8,QWORD PTR [rsp+0x90]
  0x00007f003f2d2245: mov    ecx,DWORD PTR [rsp+0x88]
  0x00007f003f2d224c: add    ecx,DWORD PTR [rsp+0x84]
  0x00007f003f2d2253: movsxd rdx,ecx
  0x00007f003f2d2256: cmp    ecx,DWORD PTR [r8+0xc]  ; implicit exception: dispatches to 0x00007f003f2d257b
  0x00007f003f2d225a: jae    0x00007f003f2d2585
  0x00007f003f2d2260: mov    WORD PTR [r8+rdx*2+0x10],ax
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@413 (line 2807)

  0x00007f003f2d2266: mov    rsi,r8
  0x00007f003f2d2269: mov    eax,DWORD PTR [rsp+0x88]  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@414 (line 2765)

  0x00007f003f2d2270: mov    r9d,DWORD PTR [rsp+0x98]
  0x00007f003f2d2278: add    r9d,DWORD PTR [rsp+0x84]
  0x00007f003f2d2280: movabs rdx,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d228a: mov    edi,DWORD PTR [rdx+0x100]
  0x00007f003f2d2290: add    edi,0x8
  0x00007f003f2d2293: mov    DWORD PTR [rdx+0x100],edi
  0x00007f003f2d2299: movabs rdx,0x7f003876e318  ;   {metadata({method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d22a3: and    edi,0xfff8
  0x00007f003f2d22a9: cmp    edi,0x0
  0x00007f003f2d22ac: je     0x00007f003f2d258e  ; OopMap{[96]=Oop [104]=Oop rsi=Oop off=5426}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@421 (line 2765)

  0x00007f003f2d22b2: test   DWORD PTR [rip+0x1b0efe48],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2d22b8: movabs rdx,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d22c2: inc    DWORD PTR [rdx+0x740]
  0x00007f003f2d22c8: mov    rbx,r9
  0x00007f003f2d22cb: mov    r8,rsi
  0x00007f003f2d22ce: mov    r9,rax
  0x00007f003f2d22d1: mov    QWORD PTR [rsp+0x90],r8
  0x00007f003f2d22d9: mov    DWORD PTR [rsp+0x88],r9d
  0x00007f003f2d22e1: jmp    0x00007f003f2d1608  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@421 (line 2765)

  0x00007f003f2d22e6: mov    r8,QWORD PTR [rsp+0x90]
  0x00007f003f2d22ee: mov    r9d,DWORD PTR [rsp+0x88]
  0x00007f003f2d22f6: mov    ebx,DWORD PTR [rsp+0x5c]
  0x00007f003f2d22fa: movabs rdx,0x7c0001610    ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007f003f2d2304: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2d2308: lea    rdi,[rax+0x18]
  0x00007f003f2d230c: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2d2310: ja     0x00007f003f2d25a5
  0x00007f003f2d2316: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2d231a: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2d2321: mov    QWORD PTR [rax],rcx
  0x00007f003f2d2324: mov    rcx,rdx
  0x00007f003f2d2327: shr    rcx,0x3
  0x00007f003f2d232b: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2d232e: xor    rcx,rcx
  0x00007f003f2d2331: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2d2334: xor    rcx,rcx
  0x00007f003f2d2337: mov    QWORD PTR [rax+0x10],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@424 (line 2810)

  0x00007f003f2d233b: mov    rdx,rax
  0x00007f003f2d233e: movabs rcx,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d2348: add    QWORD PTR [rcx+0x758],0x1
  0x00007f003f2d2350: mov    rsi,r9
  0x00007f003f2d2353: add    esi,ebx
  0x00007f003f2d2355: mov    rdx,r8
  0x00007f003f2d2358: mov    ecx,0x0
  0x00007f003f2d235d: mov    r8,rsi
  0x00007f003f2d2360: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@435 (line 2810)

  0x00007f003f2d2363: mov    QWORD PTR [rsp+0xb0],rax
  0x00007f003f2d236b: nop
  0x00007f003f2d236c: nop
  0x00007f003f2d236d: nop
  0x00007f003f2d236e: nop
  0x00007f003f2d236f: call   0x00007f003f1c4d60  ; OopMap{[176]=Oop off=5620}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@435 (line 2810)
                                                ;   {optimized virtual_call}
  0x00007f003f2d2374: mov    rax,QWORD PTR [rsp+0xb0]
  0x00007f003f2d237c: add    rsp,0xd0
  0x00007f003f2d2383: pop    rbp
  0x00007f003f2d2384: test   DWORD PTR [rip+0x1b0efd76],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2d238a: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@438 (line 2810)

  0x00007f003f2d238b: mov    rax,rsi
  0x00007f003f2d238e: add    rsp,0xd0
  0x00007f003f2d2395: pop    rbp
  0x00007f003f2d2396: test   DWORD PTR [rip+0x1b0efd64],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2d239c: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@99 (line 2748)

  0x00007f003f2d239d: data16 xchg ax,ax
  0x00007f003f2d23a0: jmp    0x00007f003f2d25c1  ;   {no_reloc}
  0x00007f003f2d23a5: add    BYTE PTR [rax],al
  0x00007f003f2d23a7: add    BYTE PTR [rax],al
  0x00007f003f2d23a9: add    BYTE PTR [rcx-0x75],cl
  0x00007f003f2d23ac: rex.RXB (bad) 
  0x00007f003f2d23ae: lea    rdi,[rax+0x20]
  0x00007f003f2d23b2: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2d23b6: ja     0x00007f003f2d25cb
  0x00007f003f2d23bc: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2d23c0: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2d23c7: mov    QWORD PTR [rax],rcx
  0x00007f003f2d23ca: mov    rcx,rdx
  0x00007f003f2d23cd: shr    rcx,0x3
  0x00007f003f2d23d1: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2d23d4: xor    rcx,rcx
  0x00007f003f2d23d7: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2d23da: xor    rcx,rcx
  0x00007f003f2d23dd: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f2d23e1: mov    QWORD PTR [rax+0x18],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@4 (line 2723)

  0x00007f003f2d23e5: mov    rsi,rax
  0x00007f003f2d23e8: movabs rdi,0x7f0038a8d770  ;   {metadata(method data for {method} {0x00007f003876e318} &apos;toUpperCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2d23f2: add    QWORD PTR [rdi+0x150],0x1
  0x00007f003f2d23fa: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@8 (line 2723)

  0x00007f003f2d23fd: mov    QWORD PTR [rsp+0xb8],rax
  0x00007f003f2d2405: nop
  0x00007f003f2d2406: nop
  0x00007f003f2d2407: call   0x00007f003f1c4d60  ; OopMap{[184]=Oop off=5772}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@8 (line 2723)
                                                ;   {optimized virtual_call}
  0x00007f003f2d240c: mov    rax,QWORD PTR [rsp+0xb8]
  0x00007f003f2d2414: jmp    0x00007f003f2d2603
  0x00007f003f2d2419: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2d241e: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d2426: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [96]=Oop rdx=Oop [104]=Oop off=5803}
                                                ;*synchronization entry
                                                ; - java.lang.String::toUpperCase@-1 (line 2722)
                                                ;   {runtime_call}
  0x00007f003f2d242b: jmp    0x00007f003f2d0deb
  0x00007f003f2d2430: call   0x00007f003f279000  ; OopMap{rsi=Oop [96]=Oop rdx=Oop [104]=Oop off=5813}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@16 (line 2727)
                                                ;   {runtime_call}
  0x00007f003f2d2435: call   0x00007f003f279000  ; OopMap{rsi=Oop [96]=Oop [104]=Oop rax=Oop off=5818}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@30 (line 2732)
                                                ;   {runtime_call}
  0x00007f003f2d243a: call   0x00007f003f279000  ; OopMap{rsi=Oop [96]=Oop [104]=Oop rax=Oop off=5823}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@30 (line 2732)
                                                ;   {runtime_call}
  0x00007f003f2d243f: mov    QWORD PTR [rsp],rbx
  0x00007f003f2d2443: call   0x00007f003f278940  ; OopMap{rsi=Oop [96]=Oop [104]=Oop rax=Oop off=5832}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@30 (line 2732)
                                                ;   {runtime_call}
  0x00007f003f2d2448: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2d244d: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d2455: call   0x00007f003f27d5e0  ; OopMap{[96]=Oop [104]=Oop off=5850}
                                                ;*synchronization entry
                                                ; - java.lang.Character::charCount@-1 (line 4818)
                                                ; - java.lang.String::toUpperCase@56 (line 2737)
                                                ;   {runtime_call}
  0x00007f003f2d245a: jmp    0x00007f003f2d0f80
  0x00007f003f2d245f: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2d2464: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d246c: call   0x00007f003f27d5e0  ; OopMap{[96]=Oop [104]=Oop off=5873}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCaseEx@-1 (line 7137)
                                                ; - java.lang.String::toUpperCase@69 (line 2741)
                                                ;   {runtime_call}
  0x00007f003f2d2471: jmp    0x00007f003f2d1032
  0x00007f003f2d2476: call   0x00007f003f279000  ; OopMap{[96]=Oop [104]=Oop rax=Oop off=5883}
                                                ;*invokevirtual toUpperCaseEx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@26 (line 7138)
                                                ; - java.lang.String::toUpperCase@69 (line 2741)
                                                ;   {runtime_call}
  0x00007f003f2d247b: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2d2480: mov    QWORD PTR [rsp],0x5f
  0x00007f003f2d2488: call   0x00007f003f27d5e0  ; OopMap{[96]=Oop [104]=Oop off=5901}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@95 (line 2747)
                                                ;   {runtime_call}
  0x00007f003f2d248d: jmp    0x00007f003f2d131b
  0x00007f003f2d2492: call   0x00007f003f27a020  ; OopMap{[104]=Oop r14=Oop [96]=Oop off=5911}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@104 (line 2753)
                                                ;   {runtime_call}
  0x00007f003f2d2497: jmp    0x00007f003f2d13e5
  0x00007f003f2d249c: nop
  0x00007f003f2d249d: nop
  0x00007f003f2d249e: nop
  0x00007f003f2d249f: call   0x00007f003f1c5160  ; OopMap{[120]=Oop [96]=Oop [104]=Oop off=5924}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@117 (line 2756)
                                                ;   {static_call}
  0x00007f003f2d24a4: jmp    0x00007f003f2d1482
  0x00007f003f2d24a9: call   0x00007f003f279000  ; OopMap{[120]=Oop [96]=Oop rdx=Oop [104]=Oop off=5934}
                                                ;*invokevirtual getLanguage {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@121 (line 2758)
                                                ;   {runtime_call}
  0x00007f003f2d24ae: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2d24b3: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d24bb: call   0x00007f003f27d5e0  ; OopMap{[120]=Oop [96]=Oop rdx=Oop [104]=Oop off=5952}
                                                ;*synchronization entry
                                                ; - java.util.Locale::getLanguage@-1 (line 1076)
                                                ; - java.lang.String::toUpperCase@121 (line 2758)
                                                ;   {runtime_call}
  0x00007f003f2d24c0: jmp    0x00007f003f2d14d1
  0x00007f003f2d24c5: call   0x00007f003f279000  ; OopMap{[120]=Oop [96]=Oop rdx=Oop [104]=Oop rsi=Oop off=5962}
                                                ;*invokevirtual getLanguage {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Locale::getLanguage@4 (line 1076)
                                                ; - java.lang.String::toUpperCase@121 (line 2758)
                                                ;   {runtime_call}
  0x00007f003f2d24ca: call   0x00007f003f279000  ; OopMap{[144]=Oop [104]=Oop rsi=Oop [96]=Oop r8=Oop off=5967}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@169 (line 2766)
                                                ;   {runtime_call}
  0x00007f003f2d24cf: call   0x00007f003f279000  ; OopMap{[144]=Oop [104]=Oop rsi=Oop [96]=Oop r8=Oop off=5972}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@169 (line 2766)
                                                ;   {runtime_call}
  0x00007f003f2d24d4: mov    QWORD PTR [rsp],rbx
  0x00007f003f2d24d8: call   0x00007f003f278940  ; OopMap{[144]=Oop [104]=Oop rsi=Oop [96]=Oop r8=Oop off=5981}
                                                ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@169 (line 2766)
                                                ;   {runtime_call}
  0x00007f003f2d24dd: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2d24e2: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d24ea: call   0x00007f003f27d5e0  ; OopMap{[96]=Oop [104]=Oop [144]=Oop off=5999}
                                                ;*synchronization entry
                                                ; - java.lang.Character::charCount@-1 (line 4818)
                                                ; - java.lang.String::toUpperCase@198 (line 2770)
                                                ;   {runtime_call}
  0x00007f003f2d24ef: jmp    0x00007f003f2d1760
  0x00007f003f2d24f4: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2d24f9: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d2501: call   0x00007f003f27d5e0  ; OopMap{[96]=Oop [104]=Oop [144]=Oop off=6022}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCaseEx@-1 (line 7137)
                                                ; - java.lang.String::toUpperCase@228 (line 2777)
                                                ;   {runtime_call}
  0x00007f003f2d2506: jmp    0x00007f003f2d18ad
  0x00007f003f2d250b: call   0x00007f003f279000  ; OopMap{[96]=Oop [104]=Oop [144]=Oop rax=Oop off=6032}
                                                ;*invokevirtual toUpperCaseEx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseEx@26 (line 7138)
                                                ; - java.lang.String::toUpperCase@228 (line 2777)
                                                ;   {runtime_call}
  0x00007f003f2d2510: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2d2515: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d251d: call   0x00007f003f27d5e0  ; OopMap{[96]=Oop [104]=Oop [144]=Oop off=6050}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCaseCharArray@-1 (line 7154)
                                                ; - java.lang.String::toUpperCase@271 (line 2786)
                                                ;   {runtime_call}
  0x00007f003f2d2522: jmp    0x00007f003f2d1c5d
  0x00007f003f2d2527: call   0x00007f003f279000  ; OopMap{[96]=Oop [104]=Oop [144]=Oop rax=Oop off=6060}
                                                ;*invokevirtual toUpperCaseCharArray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toUpperCaseCharArray@26 (line 7155)
                                                ; - java.lang.String::toUpperCase@271 (line 2786)
                                                ;   {runtime_call}
  0x00007f003f2d252c: call   0x00007f003f279000  ; OopMap{[96]=Oop [104]=Oop [144]=Oop rax=Oop off=6065}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@317 (line 2796)
                                                ;   {runtime_call}
  0x00007f003f2d2531: call   0x00007f003f279000  ; OopMap{[96]=Oop [104]=Oop [168]=Oop r8=Oop off=6070}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@329 (line 2798)
                                                ;   {runtime_call}
  0x00007f003f2d2536: call   0x00007f003f27a020  ; OopMap{[96]=Oop [104]=Oop r8=Oop [168]=Oop off=6075}
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@336 (line 2798)
                                                ;   {runtime_call}
  0x00007f003f2d253b: jmp    0x00007f003f2d2070
  0x00007f003f2d2540: nop
  0x00007f003f2d2541: nop
  0x00007f003f2d2542: nop
  0x00007f003f2d2543: nop
  0x00007f003f2d2544: nop
  0x00007f003f2d2545: nop
  0x00007f003f2d2546: nop
  0x00007f003f2d2547: call   0x00007f003f1c5160  ; OopMap{[96]=Oop [104]=Oop [160]=Oop [168]=Oop off=6092}
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@351 (line 2799)
                                                ;   {static_call}
  0x00007f003f2d254c: jmp    0x00007f003f2d2146
  0x00007f003f2d2551: call   0x00007f003f279000  ; OopMap{[96]=Oop [104]=Oop rsi=Oop rax=Oop off=6102}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@383 (line 2803)
                                                ;   {runtime_call}
  0x00007f003f2d2556: call   0x00007f003f279000  ; OopMap{[96]=Oop [104]=Oop rsi=Oop rax=Oop off=6107}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@383 (line 2803)
                                                ;   {runtime_call}
  0x00007f003f2d255b: mov    QWORD PTR [rsp],rcx
  0x00007f003f2d255f: call   0x00007f003f278940  ; OopMap{[96]=Oop [104]=Oop rsi=Oop rax=Oop off=6116}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@383 (line 2803)
                                                ;   {runtime_call}
  0x00007f003f2d2564: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2d2569: mov    QWORD PTR [rsp],0x183
  0x00007f003f2d2571: call   0x00007f003f27d5e0  ; OopMap{[96]=Oop [104]=Oop rsi=Oop rax=Oop off=6134}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@387 (line 2802)
                                                ;   {runtime_call}
  0x00007f003f2d2576: jmp    0x00007f003f2d21c6
  0x00007f003f2d257b: call   0x00007f003f279000  ; OopMap{[96]=Oop [104]=Oop r8=Oop off=6144}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@413 (line 2807)
                                                ;   {runtime_call}
  0x00007f003f2d2580: call   0x00007f003f279000  ; OopMap{[96]=Oop [104]=Oop r8=Oop off=6149}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@413 (line 2807)
                                                ;   {runtime_call}
  0x00007f003f2d2585: mov    QWORD PTR [rsp],rcx
  0x00007f003f2d2589: call   0x00007f003f278940  ; OopMap{[96]=Oop [104]=Oop r8=Oop off=6158}
                                                ;*castore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@413 (line 2807)
                                                ;   {runtime_call}
  0x00007f003f2d258e: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2d2593: mov    QWORD PTR [rsp],0x1a5
  0x00007f003f2d259b: call   0x00007f003f27d5e0  ; OopMap{[96]=Oop [104]=Oop rsi=Oop off=6176}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@421 (line 2765)
                                                ;   {runtime_call}
  0x00007f003f2d25a0: jmp    0x00007f003f2d22b2
  0x00007f003f2d25a5: mov    rdx,rdx
  0x00007f003f2d25a8: call   0x00007f003f279760  ; OopMap{r8=Oop off=6189}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@424 (line 2810)
                                                ;   {runtime_call}
  0x00007f003f2d25ad: jmp    0x00007f003f2d233b
  0x00007f003f2d25b2: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2d25bc: mov    eax,0xa050f00
  0x00007f003f2d25c1: call   0x00007f003f27c5e0  ; OopMap{off=6214}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@4 (line 2723)
                                                ;   {runtime_call}
  0x00007f003f2d25c6: jmp    0x00007f003f2d23a0
  0x00007f003f2d25cb: mov    rdx,rdx
  0x00007f003f2d25ce: call   0x00007f003f279760  ; OopMap{off=6227}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::toUpperCase@4 (line 2723)
                                                ;   {runtime_call}
  0x00007f003f2d25d3: jmp    0x00007f003f2d23e5
  0x00007f003f2d25d8: nop
  0x00007f003f2d25d9: nop
  0x00007f003f2d25da: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2d25e1: movabs r10,0x0
  0x00007f003f2d25eb: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2d25f2: movabs r10,0x0
  0x00007f003f2d25fc: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2d2603: add    rsp,0xd0
  0x00007f003f2d260a: pop    rbp
  0x00007f003f2d260b: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2d2610: hlt    
  0x00007f003f2d2611: hlt    
  0x00007f003f2d2612: hlt    
  0x00007f003f2d2613: hlt    
  0x00007f003f2d2614: hlt    
  0x00007f003f2d2615: hlt    
  0x00007f003f2d2616: hlt    
  0x00007f003f2d2617: hlt    
  0x00007f003f2d2618: hlt    
  0x00007f003f2d2619: hlt    
  0x00007f003f2d261a: hlt    
  0x00007f003f2d261b: hlt    
  0x00007f003f2d261c: hlt    
  0x00007f003f2d261d: hlt    
  0x00007f003f2d261e: hlt    
  0x00007f003f2d261f: hlt    
[Stub Code]
  0x00007f003f2d2620: nop                       ;   {no_reloc}
  0x00007f003f2d2621: nop
  0x00007f003f2d2622: nop
  0x00007f003f2d2623: nop
  0x00007f003f2d2624: nop
  0x00007f003f2d2625: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d262f: jmp    0x00007f003f2d262f  ;   {runtime_call}
  0x00007f003f2d2634: nop
  0x00007f003f2d2635: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d263f: jmp    0x00007f003f2d263f  ;   {runtime_call}
  0x00007f003f2d2644: nop
  0x00007f003f2d2645: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d264f: jmp    0x00007f003f2d264f  ;   {runtime_call}
  0x00007f003f2d2654: nop
  0x00007f003f2d2655: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d265f: jmp    0x00007f003f2d265f  ;   {runtime_call}
  0x00007f003f2d2664: nop
  0x00007f003f2d2665: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d266f: jmp    0x00007f003f2d266f  ;   {runtime_call}
  0x00007f003f2d2674: nop
  0x00007f003f2d2675: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d267f: jmp    0x00007f003f2d267f  ;   {runtime_call}
  0x00007f003f2d2684: nop
  0x00007f003f2d2685: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d268f: jmp    0x00007f003f2d268f  ;   {runtime_call}
  0x00007f003f2d2694: nop
  0x00007f003f2d2695: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d269f: jmp    0x00007f003f2d269f  ;   {runtime_call}
  0x00007f003f2d26a4: nop
  0x00007f003f2d26a5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d26af: jmp    0x00007f003f2d26af  ;   {runtime_call}
  0x00007f003f2d26b4: nop
  0x00007f003f2d26b5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d26bf: jmp    0x00007f003f2d26bf  ;   {runtime_call}
  0x00007f003f2d26c4: nop
  0x00007f003f2d26c5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d26cf: jmp    0x00007f003f2d26cf  ;   {runtime_call}
  0x00007f003f2d26d4: nop
  0x00007f003f2d26d5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d26df: jmp    0x00007f003f2d26df  ;   {runtime_call}
  0x00007f003f2d26e4: nop
  0x00007f003f2d26e5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d26ef: jmp    0x00007f003f2d26ef  ;   {runtime_call}
  0x00007f003f2d26f4: nop
  0x00007f003f2d26f5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d26ff: jmp    0x00007f003f2d26ff  ;   {runtime_call}
  0x00007f003f2d2704: nop
  0x00007f003f2d2705: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d270f: jmp    0x00007f003f2d270f  ;   {runtime_call}
  0x00007f003f2d2714: nop
  0x00007f003f2d2715: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d271f: jmp    0x00007f003f2d271f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2d2724: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2d2729: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2d272e: sub    rsp,0x80
  0x00007f003f2d2735: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2d273a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2d273f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2d2744: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2d2749: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2d274e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2d2753: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2d2758: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2d275d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2d2762: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2d2767: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2d276c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2d2771: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2d2776: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2d277b: mov    QWORD PTR [rsp],r15
  0x00007f003f2d277f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2d2789: movabs rsi,0x7f003f2d2729  ;   {internal_word}
  0x00007f003f2d2793: mov    rdx,rsp
  0x00007f003f2d2796: and    rsp,0xfffffffffffffff0
  0x00007f003f2d279a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2d279f: hlt    
[Deopt Handler Code]
  0x00007f003f2d27a0: movabs r10,0x7f003f2d27a0  ;   {section_word}
  0x00007f003f2d27aa: push   r10
  0x00007f003f2d27ac: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2d27b1: hlt    
  0x00007f003f2d27b2: hlt    
  0x00007f003f2d27b3: hlt    
  0x00007f003f2d27b4: hlt    
  0x00007f003f2d27b5: hlt    
  0x00007f003f2d27b6: hlt    
  0x00007f003f2d27b7: hlt    
<nmethod compile_id='143' compiler='C1' level='3' entry='0x00007f003f2d0d80' size='11792' address='0x00007f003f2d0a50' relocation_offset='312' insts_offset='816' stub_offset='7120' scopes_data_offset='7576' scopes_pcs_offset='9312' dependencies_offset='11648' nul_chk_table_offset='11656' metadata_offset='7528' method='java/lang/String toUpperCase (Ljava/util/Locale;)Ljava/lang/String;' bytes='439' count='259' backedge_count='17168' iicount='259' stamp='0.619'/>
<writer thread='139637818533632'/>
<task_queued compile_id='144' method='java/lang/ClassLoader loadClass (Ljava/lang/String;Z)Ljava/lang/Class;' bytes='122' count='384' iicount='384' throwouts='142' level='3' stamp='0.619' comment='tiered' hot_count='384'/>
<task_queued compile_id='145' method='java/lang/ClassLoader getClassLoadingLock (Ljava/lang/String;)Ljava/lang/Object;' bytes='35' count='384' iicount='384' level='3' stamp='0.619' comment='tiered' hot_count='384'/>
<task_queued compile_id='146' method='java/util/concurrent/ConcurrentHashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V' bytes='26' count='512' iicount='512' level='3' stamp='0.619' comment='tiered' hot_count='512'/>
<task_queued compile_id='147' method='java/lang/ClassLoader findLoadedClass (Ljava/lang/String;)Ljava/lang/Class;' bytes='16' count='384' iicount='384' level='3' stamp='0.619' comment='tiered' hot_count='384'/>
[Loaded org.graalvm.util.Equivalence$2 from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
[Loaded org.graalvm.util.Equivalence$3 from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
[Loaded org.graalvm.util.UnmodifiableEconomicMap from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
[Loaded org.graalvm.util.EconomicMap from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
[Loaded org.graalvm.util.UnmodifiableEconomicSet from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/ClassLoader.loadClass  [0x00007f003f2d3c20, 0x00007f003f2d6a18]  11768 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;
  # this:     rsi:rsi   = &apos;java/lang/ClassLoader&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  # parm1:    rcx       = boolean
  #           [sp+0x160]  (sp of caller)
  0x00007f003f2d3c20: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2d3c24: shl    r10,0x3
  0x00007f003f2d3c28: cmp    r10,rax
  0x00007f003f2d3c2b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2d3c31: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2d3c3c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2d3c40: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2d3c47: push   rbp
  0x00007f003f2d3c48: sub    rsp,0x150
  0x00007f003f2d3c4f: mov    QWORD PTR [rsp+0xa8],rsi
  0x00007f003f2d3c57: mov    QWORD PTR [rsp+0xb0],rdx
  0x00007f003f2d3c5f: movabs rdi,0x7f0038a8ee00  ;   {metadata(method data for {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d3c69: mov    eax,DWORD PTR [rdi+0xfc]
  0x00007f003f2d3c6f: add    eax,0x8
  0x00007f003f2d3c72: mov    DWORD PTR [rdi+0xfc],eax
  0x00007f003f2d3c78: movabs rdi,0x7f003877dd00  ;   {metadata({method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d3c82: and    eax,0x1ff8
  0x00007f003f2d3c88: cmp    eax,0x0
  0x00007f003f2d3c8b: je     0x00007f003f2d63ae  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@0 (line 404)

  0x00007f003f2d3c91: mov    rdi,rsi
  0x00007f003f2d3c94: movabs rax,0x7f0038a8ee00  ;   {metadata(method data for {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d3c9e: mov    edi,DWORD PTR [rdi+0x8]
  0x00007f003f2d3ca1: shl    rdi,0x3
  0x00007f003f2d3ca5: cmp    rdi,QWORD PTR [rax+0x140]
  0x00007f003f2d3cac: jne    0x00007f003f2d3cbb
  0x00007f003f2d3cae: add    QWORD PTR [rax+0x148],0x1
  0x00007f003f2d3cb6: jmp    0x00007f003f2d3e7d
  0x00007f003f2d3cbb: cmp    rdi,QWORD PTR [rax+0x150]
  0x00007f003f2d3cc2: jne    0x00007f003f2d3cd1
  0x00007f003f2d3cc4: add    QWORD PTR [rax+0x158],0x1
  0x00007f003f2d3ccc: jmp    0x00007f003f2d3e7d
  0x00007f003f2d3cd1: cmp    rdi,QWORD PTR [rax+0x160]
  0x00007f003f2d3cd8: jne    0x00007f003f2d3ce7
  0x00007f003f2d3cda: add    QWORD PTR [rax+0x168],0x1
  0x00007f003f2d3ce2: jmp    0x00007f003f2d3e7d
  0x00007f003f2d3ce7: cmp    rdi,QWORD PTR [rax+0x170]
  0x00007f003f2d3cee: jne    0x00007f003f2d3cfd
  0x00007f003f2d3cf0: add    QWORD PTR [rax+0x178],0x1
  0x00007f003f2d3cf8: jmp    0x00007f003f2d3e7d
  0x00007f003f2d3cfd: cmp    rdi,QWORD PTR [rax+0x180]
  0x00007f003f2d3d04: jne    0x00007f003f2d3d13
  0x00007f003f2d3d06: add    QWORD PTR [rax+0x188],0x1
  0x00007f003f2d3d0e: jmp    0x00007f003f2d3e7d
  0x00007f003f2d3d13: cmp    rdi,QWORD PTR [rax+0x190]
  0x00007f003f2d3d1a: jne    0x00007f003f2d3d29
  0x00007f003f2d3d1c: add    QWORD PTR [rax+0x198],0x1
  0x00007f003f2d3d24: jmp    0x00007f003f2d3e7d
  0x00007f003f2d3d29: cmp    rdi,QWORD PTR [rax+0x1a0]
  0x00007f003f2d3d30: jne    0x00007f003f2d3d3f
  0x00007f003f2d3d32: add    QWORD PTR [rax+0x1a8],0x1
  0x00007f003f2d3d3a: jmp    0x00007f003f2d3e7d
  0x00007f003f2d3d3f: cmp    rdi,QWORD PTR [rax+0x1b0]
  0x00007f003f2d3d46: jne    0x00007f003f2d3d55
  0x00007f003f2d3d48: add    QWORD PTR [rax+0x1b8],0x1
  0x00007f003f2d3d50: jmp    0x00007f003f2d3e7d
  0x00007f003f2d3d55: cmp    QWORD PTR [rax+0x140],0x0
  0x00007f003f2d3d60: jne    0x00007f003f2d3d79
  0x00007f003f2d3d62: mov    QWORD PTR [rax+0x140],rdi
  0x00007f003f2d3d69: mov    QWORD PTR [rax+0x148],0x1
  0x00007f003f2d3d74: jmp    0x00007f003f2d3e7d
  0x00007f003f2d3d79: cmp    QWORD PTR [rax+0x150],0x0
  0x00007f003f2d3d84: jne    0x00007f003f2d3d9d
  0x00007f003f2d3d86: mov    QWORD PTR [rax+0x150],rdi
  0x00007f003f2d3d8d: mov    QWORD PTR [rax+0x158],0x1
  0x00007f003f2d3d98: jmp    0x00007f003f2d3e7d
  0x00007f003f2d3d9d: cmp    QWORD PTR [rax+0x160],0x0
  0x00007f003f2d3da8: jne    0x00007f003f2d3dc1
  0x00007f003f2d3daa: mov    QWORD PTR [rax+0x160],rdi
  0x00007f003f2d3db1: mov    QWORD PTR [rax+0x168],0x1
  0x00007f003f2d3dbc: jmp    0x00007f003f2d3e7d
  0x00007f003f2d3dc1: cmp    QWORD PTR [rax+0x170],0x0
  0x00007f003f2d3dcc: jne    0x00007f003f2d3de5
  0x00007f003f2d3dce: mov    QWORD PTR [rax+0x170],rdi
  0x00007f003f2d3dd5: mov    QWORD PTR [rax+0x178],0x1
  0x00007f003f2d3de0: jmp    0x00007f003f2d3e7d
  0x00007f003f2d3de5: cmp    QWORD PTR [rax+0x180],0x0
  0x00007f003f2d3df0: jne    0x00007f003f2d3e09
  0x00007f003f2d3df2: mov    QWORD PTR [rax+0x180],rdi
  0x00007f003f2d3df9: mov    QWORD PTR [rax+0x188],0x1
  0x00007f003f2d3e04: jmp    0x00007f003f2d3e7d
  0x00007f003f2d3e09: cmp    QWORD PTR [rax+0x190],0x0
  0x00007f003f2d3e14: jne    0x00007f003f2d3e2d
  0x00007f003f2d3e16: mov    QWORD PTR [rax+0x190],rdi
  0x00007f003f2d3e1d: mov    QWORD PTR [rax+0x198],0x1
  0x00007f003f2d3e28: jmp    0x00007f003f2d3e7d
  0x00007f003f2d3e2d: cmp    QWORD PTR [rax+0x1a0],0x0
  0x00007f003f2d3e38: jne    0x00007f003f2d3e51
  0x00007f003f2d3e3a: mov    QWORD PTR [rax+0x1a0],rdi
  0x00007f003f2d3e41: mov    QWORD PTR [rax+0x1a8],0x1
  0x00007f003f2d3e4c: jmp    0x00007f003f2d3e7d
  0x00007f003f2d3e51: cmp    QWORD PTR [rax+0x1b0],0x0
  0x00007f003f2d3e5c: jne    0x00007f003f2d3e75
  0x00007f003f2d3e5e: mov    QWORD PTR [rax+0x1b0],rdi
  0x00007f003f2d3e65: mov    QWORD PTR [rax+0x1b8],0x1
  0x00007f003f2d3e70: jmp    0x00007f003f2d3e7d
  0x00007f003f2d3e75: add    QWORD PTR [rax+0x130],0x1
  0x00007f003f2d3e7d: movabs rdi,0x7f0038a8f550  ;   {metadata(method data for {method} {0x00007f003877dde8} &apos;getClassLoadingLock&apos; &apos;(Ljava/lang/String;)Ljava/lang/Object;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d3e87: mov    eax,DWORD PTR [rdi+0xfc]
  0x00007f003f2d3e8d: add    eax,0x8
  0x00007f003f2d3e90: mov    DWORD PTR [rdi+0xfc],eax
  0x00007f003f2d3e96: movabs rdi,0x7f003877dde8  ;   {metadata({method} {0x00007f003877dde8} &apos;getClassLoadingLock&apos; &apos;(Ljava/lang/String;)Ljava/lang/Object;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d3ea0: and    eax,0x7ffff8
  0x00007f003f2d3ea6: cmp    eax,0x0
  0x00007f003f2d3ea9: je     0x00007f003f2d63c5
  0x00007f003f2d3eaf: mov    ebx,DWORD PTR [rsi+0x10]
  0x00007f003f2d3eb2: shl    rbx,0x3            ;*getfield parallelLockMap {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::getClassLoadingLock@3 (line 461)
                                                ; - java.lang.ClassLoader::loadClass@2 (line 404)

  0x00007f003f2d3eb6: cmp    rbx,0x0
  0x00007f003f2d3eba: movabs rdi,0x7f0038a8f550  ;   {metadata(method data for {method} {0x00007f003877dde8} &apos;getClassLoadingLock&apos; &apos;(Ljava/lang/String;)Ljava/lang/Object;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d3ec4: movabs rax,0x130
  0x00007f003f2d3ece: je     0x00007f003f2d3ede
  0x00007f003f2d3ed4: movabs rax,0x140
  0x00007f003f2d3ede: mov    r8,QWORD PTR [rdi+rax*1]
  0x00007f003f2d3ee2: lea    r8,[r8+0x1]
  0x00007f003f2d3ee6: mov    QWORD PTR [rdi+rax*1],r8
  0x00007f003f2d3eea: jne    0x00007f003f2d3eff  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::getClassLoadingLock@6 (line 461)
                                                ; - java.lang.ClassLoader::loadClass@2 (line 404)

  0x00007f003f2d3ef0: mov    rdi,rsi
  0x00007f003f2d3ef3: mov    DWORD PTR [rsp+0xb8],ecx
  0x00007f003f2d3efa: jmp    0x00007f003f2d4069  ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::getClassLoadingLock@33 (line 468)
                                                ; - java.lang.ClassLoader::loadClass@2 (line 404)

  0x00007f003f2d3eff: mov    DWORD PTR [rsp+0xb8],ecx
  0x00007f003f2d3f06: mov    r9,rdx
  0x00007f003f2d3f09: movabs rdx,0x7c0000ea8    ;   {metadata(&apos;java/lang/Object&apos;)}
  0x00007f003f2d3f13: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2d3f17: lea    rdi,[rax+0x10]
  0x00007f003f2d3f1b: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2d3f1f: ja     0x00007f003f2d63dc
  0x00007f003f2d3f25: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2d3f29: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2d3f30: mov    QWORD PTR [rax],rcx
  0x00007f003f2d3f33: mov    rcx,rdx
  0x00007f003f2d3f36: shr    rcx,0x3
  0x00007f003f2d3f3a: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2d3f3d: xor    rcx,rcx
  0x00007f003f2d3f40: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2d3f43: xor    rcx,rcx            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::getClassLoadingLock@9 (line 462)
                                                ; - java.lang.ClassLoader::loadClass@2 (line 404)

  0x00007f003f2d3f46: mov    rdx,rax
  0x00007f003f2d3f49: movabs rcx,0x7f0038a8f550  ;   {metadata(method data for {method} {0x00007f003877dde8} &apos;getClassLoadingLock&apos; &apos;(Ljava/lang/String;)Ljava/lang/Object;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d3f53: add    QWORD PTR [rcx+0x150],0x1
  0x00007f003f2d3f5b: movabs rdx,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2d3f65: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2d3f6b: add    ecx,0x8
  0x00007f003f2d3f6e: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2d3f74: movabs rdx,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2d3f7e: and    ecx,0x7ffff8
  0x00007f003f2d3f84: cmp    ecx,0x0
  0x00007f003f2d3f87: je     0x00007f003f2d63e9
  0x00007f003f2d3f8d: cmp    rax,QWORD PTR [rbx]  ;*invokevirtual putIfAbsent {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::getClassLoadingLock@23 (line 463)
                                                ; - java.lang.ClassLoader::loadClass@2 (line 404)
                                                ; implicit exception: dispatches to 0x00007f003f2d6400
  0x00007f003f2d3f90: mov    rdx,rbx
  0x00007f003f2d3f93: movabs rcx,0x7f0038a8f550  ;   {metadata(method data for {method} {0x00007f003877dde8} &apos;getClassLoadingLock&apos; &apos;(Ljava/lang/String;)Ljava/lang/Object;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d3f9d: movabs r10,0x7c0032830    ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2d3fa7: mov    QWORD PTR [rcx+0x170],r10
  0x00007f003f2d3fae: add    QWORD PTR [rcx+0x178],0x1
  0x00007f003f2d3fb6: movabs rdx,0x7f0038a8c9d8  ;   {metadata(method data for {method} {0x00007f003894a2f0} &apos;putIfAbsent&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2d3fc0: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2d3fc6: add    ecx,0x8
  0x00007f003f2d3fc9: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2d3fcf: movabs rdx,0x7f003894a2f0  ;   {metadata({method} {0x00007f003894a2f0} &apos;putIfAbsent&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2d3fd9: and    ecx,0x7ffff8
  0x00007f003f2d3fdf: cmp    ecx,0x0
  0x00007f003f2d3fe2: je     0x00007f003f2d6405
  0x00007f003f2d3fe8: mov    rdx,rbx
  0x00007f003f2d3feb: movabs rcx,0x7f0038a8c9d8  ;   {metadata(method data for {method} {0x00007f003894a2f0} &apos;putIfAbsent&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2d3ff5: add    QWORD PTR [rcx+0x130],0x1
  0x00007f003f2d3ffd: mov    rdx,r9
  0x00007f003f2d4000: mov    rcx,rax
  0x00007f003f2d4003: mov    r8d,0x1
  0x00007f003f2d4009: mov    rsi,rbx            ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@4 (line 1535)
                                                ; - java.lang.ClassLoader::getClassLoadingLock@23 (line 463)
                                                ; - java.lang.ClassLoader::loadClass@2 (line 404)

  0x00007f003f2d400c: mov    QWORD PTR [rsp+0xa0],rax
  0x00007f003f2d4014: nop
  0x00007f003f2d4015: nop
  0x00007f003f2d4016: nop
  0x00007f003f2d4017: call   0x00007f003f1c4d60  ; OopMap{[160]=Oop [168]=Oop [176]=Oop off=1020}
                                                ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@4 (line 1535)
                                                ; - java.lang.ClassLoader::getClassLoadingLock@23 (line 463)
                                                ; - java.lang.ClassLoader::loadClass@2 (line 404)
                                                ;   {optimized virtual_call}
  0x00007f003f2d401c: cmp    rax,0x0
  0x00007f003f2d4020: movabs rdx,0x7f0038a8f550  ;   {metadata(method data for {method} {0x00007f003877dde8} &apos;getClassLoadingLock&apos; &apos;(Ljava/lang/String;)Ljava/lang/Object;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d402a: movabs rsi,0x1f8
  0x00007f003f2d4034: jne    0x00007f003f2d4044
  0x00007f003f2d403a: movabs rsi,0x208
  0x00007f003f2d4044: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2d4048: lea    rdi,[rdi+0x1]
  0x00007f003f2d404c: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2d4050: je     0x00007f003f2d405e  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::getClassLoadingLock@28 (line 464)
                                                ; - java.lang.ClassLoader::loadClass@2 (line 404)

  0x00007f003f2d4056: mov    rdi,rax
  0x00007f003f2d4059: jmp    0x00007f003f2d4069
  0x00007f003f2d405e: mov    rax,QWORD PTR [rsp+0xa0]
  0x00007f003f2d4066: mov    rdi,rax            ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::getClassLoadingLock@33 (line 468)
                                                ; - java.lang.ClassLoader::loadClass@2 (line 404)

  0x00007f003f2d4069: lea    rdx,[rsp+0x118]
  0x00007f003f2d4071: mov    QWORD PTR [rdx+0x8],rdi
  0x00007f003f2d4075: mov    rax,QWORD PTR [rdi]  ; implicit exception: dispatches to 0x00007f003f2d641c
  0x00007f003f2d4078: mov    rsi,rax
  0x00007f003f2d407b: and    rsi,0x7
  0x00007f003f2d407f: cmp    rsi,0x5
  0x00007f003f2d4083: jne    0x00007f003f2d410a
  0x00007f003f2d4089: mov    esi,DWORD PTR [rdi+0x8]
  0x00007f003f2d408c: shl    rsi,0x3
  0x00007f003f2d4090: mov    rsi,QWORD PTR [rsi+0xa8]
  0x00007f003f2d4097: or     rsi,r15
  0x00007f003f2d409a: xor    rsi,rax
  0x00007f003f2d409d: and    rsi,0xffffffffffffff87
  0x00007f003f2d40a1: je     0x00007f003f2d4132
  0x00007f003f2d40a7: test   rsi,0x7
  0x00007f003f2d40ae: jne    0x00007f003f2d40f7
  0x00007f003f2d40b0: test   rsi,0x300
  0x00007f003f2d40b7: jne    0x00007f003f2d40d6
  0x00007f003f2d40b9: and    rax,0x37f
  0x00007f003f2d40c0: mov    rsi,rax
  0x00007f003f2d40c3: or     rsi,r15
  0x00007f003f2d40c6: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2d40cb: jne    0x00007f003f2d6421
  0x00007f003f2d40d1: jmp    0x00007f003f2d4132
  0x00007f003f2d40d6: mov    esi,DWORD PTR [rdi+0x8]
  0x00007f003f2d40d9: shl    rsi,0x3
  0x00007f003f2d40dd: mov    rsi,QWORD PTR [rsi+0xa8]
  0x00007f003f2d40e4: or     rsi,r15
  0x00007f003f2d40e7: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2d40ec: jne    0x00007f003f2d6421
  0x00007f003f2d40f2: jmp    0x00007f003f2d4132
  0x00007f003f2d40f7: mov    esi,DWORD PTR [rdi+0x8]
  0x00007f003f2d40fa: shl    rsi,0x3
  0x00007f003f2d40fe: mov    rsi,QWORD PTR [rsi+0xa8]
  0x00007f003f2d4105: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2d410a: mov    rax,QWORD PTR [rdi]
  0x00007f003f2d410d: or     rax,0x1
  0x00007f003f2d4111: mov    QWORD PTR [rdx],rax
  0x00007f003f2d4114: lock cmpxchg QWORD PTR [rdi],rdx
  0x00007f003f2d4119: je     0x00007f003f2d4132
  0x00007f003f2d411f: sub    rax,rsp
  0x00007f003f2d4122: and    rax,0xfffffffffffff007
  0x00007f003f2d4129: mov    QWORD PTR [rdx],rax
  0x00007f003f2d412c: jne    0x00007f003f2d6421  ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@7 (line 404)

  0x00007f003f2d4132: mov    QWORD PTR [rsp+0xc0],rdi
  0x00007f003f2d413a: mov    rsi,QWORD PTR [rsp+0xa8]
  0x00007f003f2d4142: movabs rdx,0x7f0038a8ee00  ;   {metadata(method data for {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d414c: add    QWORD PTR [rdx+0x1c8],0x1
  0x00007f003f2d4154: movabs rdx,0x7f0038a8f7b0  ;   {metadata(method data for {method} {0x00007f003877f300} &apos;findLoadedClass&apos; &apos;(Ljava/lang/String;)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d415e: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2d4164: add    esi,0x8
  0x00007f003f2d4167: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2d416d: movabs rdx,0x7f003877f300  ;   {metadata({method} {0x00007f003877f300} &apos;findLoadedClass&apos; &apos;(Ljava/lang/String;)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d4177: and    esi,0x7ffff8
  0x00007f003f2d417d: cmp    esi,0x0
  0x00007f003f2d4180: je     0x00007f003f2d6434
  0x00007f003f2d4186: mov    rsi,QWORD PTR [rsp+0xa8]
  0x00007f003f2d418e: movabs rdx,0x7f0038a8f7b0  ;   {metadata(method data for {method} {0x00007f003877f300} &apos;findLoadedClass&apos; &apos;(Ljava/lang/String;)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d4198: add    QWORD PTR [rdx+0x130],0x1
  0x00007f003f2d41a0: mov    rdx,QWORD PTR [rsp+0xb0]
  0x00007f003f2d41a8: mov    rsi,QWORD PTR [rsp+0xa8]  ;*invokespecial checkName {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::findLoadedClass@2 (line 1036)
                                                ; - java.lang.ClassLoader::loadClass@10 (line 406)

  0x00007f003f2d41b0: nop
  0x00007f003f2d41b1: nop
  0x00007f003f2d41b2: nop
  0x00007f003f2d41b3: nop
  0x00007f003f2d41b4: nop
  0x00007f003f2d41b5: nop
  0x00007f003f2d41b6: nop
  0x00007f003f2d41b7: call   0x00007f003f1c4d60  ; OopMap{[168]=Oop [176]=Oop [192]=Oop [288]=Oop off=1436}
                                                ;*invokespecial checkName {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::findLoadedClass@2 (line 1036)
                                                ; - java.lang.ClassLoader::loadClass@10 (line 406)
                                                ;   {optimized virtual_call}
  0x00007f003f2d41bc: cmp    eax,0x0
  0x00007f003f2d41bf: movabs rdx,0x7f0038a8f7b0  ;   {metadata(method data for {method} {0x00007f003877f300} &apos;findLoadedClass&apos; &apos;(Ljava/lang/String;)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d41c9: movabs rsi,0x140
  0x00007f003f2d41d3: jne    0x00007f003f2d41e3
  0x00007f003f2d41d9: movabs rsi,0x150
  0x00007f003f2d41e3: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2d41e7: lea    rdi,[rdi+0x1]
  0x00007f003f2d41eb: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2d41ef: jne    0x00007f003f2d4204  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::findLoadedClass@5 (line 1036)
                                                ; - java.lang.ClassLoader::loadClass@10 (line 406)

  0x00007f003f2d41f5: movabs rsi,0x0            ;   {oop(NULL)}
  0x00007f003f2d41ff: jmp    0x00007f003f2d4237  ;*astore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@13 (line 406)

  0x00007f003f2d4204: mov    rsi,QWORD PTR [rsp+0xa8]
  0x00007f003f2d420c: movabs rdx,0x7f0038a8f7b0  ;   {metadata(method data for {method} {0x00007f003877f300} &apos;findLoadedClass&apos; &apos;(Ljava/lang/String;)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d4216: add    QWORD PTR [rdx+0x160],0x1
  0x00007f003f2d421e: mov    rdx,QWORD PTR [rsp+0xb0]
  0x00007f003f2d4226: mov    rsi,QWORD PTR [rsp+0xa8]  ;*invokespecial findLoadedClass0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::findLoadedClass@12 (line 1038)
                                                ; - java.lang.ClassLoader::loadClass@10 (line 406)

  0x00007f003f2d422e: nop
  0x00007f003f2d422f: call   0x00007f003f1c4d60  ; OopMap{[168]=Oop [176]=Oop [192]=Oop [288]=Oop off=1556}
                                                ;*invokespecial findLoadedClass0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::findLoadedClass@12 (line 1038)
                                                ; - java.lang.ClassLoader::loadClass@10 (line 406)
                                                ;   {optimized virtual_call}
  0x00007f003f2d4234: mov    rsi,rax            ;*astore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@13 (line 406)

  0x00007f003f2d4237: cmp    rsi,0x0
  0x00007f003f2d423b: movabs rdi,0x7f0038a8ee00  ;   {metadata(method data for {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d4245: movabs rbx,0x260
  0x00007f003f2d424f: jne    0x00007f003f2d425f
  0x00007f003f2d4255: movabs rbx,0x270
  0x00007f003f2d425f: mov    rax,QWORD PTR [rdi+rbx*1]
  0x00007f003f2d4263: lea    rax,[rax+0x1]
  0x00007f003f2d4267: mov    QWORD PTR [rdi+rbx*1],rax
  0x00007f003f2d426b: jne    0x00007f003f2d5f80  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@17 (line 407)

  0x00007f003f2d4271: mov    QWORD PTR [rsp+0xc8],rsi
  0x00007f003f2d4279: movabs rdi,0x7f0038a8ee00  ;   {metadata(method data for {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d4283: add    QWORD PTR [rdi+0x280],0x1
  0x00007f003f2d428b: call   0x00007f0058ea04a0  ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@20 (line 408)
                                                ;   {runtime_call}
  0x00007f003f2d4290: mov    QWORD PTR [rsp+0xd0],rax
  0x00007f003f2d4298: mov    rsi,QWORD PTR [rsp+0xa8]
  0x00007f003f2d42a0: mov    edi,DWORD PTR [rsi+0xc]
  0x00007f003f2d42a3: shl    rdi,0x3            ;*getfield parent {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@26 (line 410)

  0x00007f003f2d42a7: cmp    rdi,0x0
  0x00007f003f2d42ab: movabs rdx,0x7f0038a8ee00  ;   {metadata(method data for {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d42b5: movabs rcx,0x290
  0x00007f003f2d42bf: je     0x00007f003f2d42cf
  0x00007f003f2d42c5: movabs rcx,0x2a0
  0x00007f003f2d42cf: mov    rbx,QWORD PTR [rdx+rcx*1]
  0x00007f003f2d42d3: lea    rbx,[rbx+0x1]
  0x00007f003f2d42d7: mov    QWORD PTR [rdx+rcx*1],rbx
  0x00007f003f2d42db: je     0x00007f003f2d4509  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@29 (line 410)

  0x00007f003f2d42e1: cmp    rax,QWORD PTR [rdi]  ; implicit exception: dispatches to 0x00007f003f2d644b
  0x00007f003f2d42e4: mov    rdx,rdi
  0x00007f003f2d42e7: movabs rcx,0x7f0038a8ee00  ;   {metadata(method data for {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d42f1: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2d42f4: shl    rdx,0x3
  0x00007f003f2d42f8: cmp    rdx,QWORD PTR [rcx+0x2c0]
  0x00007f003f2d42ff: jne    0x00007f003f2d430e
  0x00007f003f2d4301: add    QWORD PTR [rcx+0x2c8],0x1
  0x00007f003f2d4309: jmp    0x00007f003f2d44d0
  0x00007f003f2d430e: cmp    rdx,QWORD PTR [rcx+0x2d0]
  0x00007f003f2d4315: jne    0x00007f003f2d4324
  0x00007f003f2d4317: add    QWORD PTR [rcx+0x2d8],0x1
  0x00007f003f2d431f: jmp    0x00007f003f2d44d0
  0x00007f003f2d4324: cmp    rdx,QWORD PTR [rcx+0x2e0]
  0x00007f003f2d432b: jne    0x00007f003f2d433a
  0x00007f003f2d432d: add    QWORD PTR [rcx+0x2e8],0x1
  0x00007f003f2d4335: jmp    0x00007f003f2d44d0
  0x00007f003f2d433a: cmp    rdx,QWORD PTR [rcx+0x2f0]
  0x00007f003f2d4341: jne    0x00007f003f2d4350
  0x00007f003f2d4343: add    QWORD PTR [rcx+0x2f8],0x1
  0x00007f003f2d434b: jmp    0x00007f003f2d44d0
  0x00007f003f2d4350: cmp    rdx,QWORD PTR [rcx+0x300]
  0x00007f003f2d4357: jne    0x00007f003f2d4366
  0x00007f003f2d4359: add    QWORD PTR [rcx+0x308],0x1
  0x00007f003f2d4361: jmp    0x00007f003f2d44d0
  0x00007f003f2d4366: cmp    rdx,QWORD PTR [rcx+0x310]
  0x00007f003f2d436d: jne    0x00007f003f2d437c
  0x00007f003f2d436f: add    QWORD PTR [rcx+0x318],0x1
  0x00007f003f2d4377: jmp    0x00007f003f2d44d0
  0x00007f003f2d437c: cmp    rdx,QWORD PTR [rcx+0x320]
  0x00007f003f2d4383: jne    0x00007f003f2d4392
  0x00007f003f2d4385: add    QWORD PTR [rcx+0x328],0x1
  0x00007f003f2d438d: jmp    0x00007f003f2d44d0
  0x00007f003f2d4392: cmp    rdx,QWORD PTR [rcx+0x330]
  0x00007f003f2d4399: jne    0x00007f003f2d43a8
  0x00007f003f2d439b: add    QWORD PTR [rcx+0x338],0x1
  0x00007f003f2d43a3: jmp    0x00007f003f2d44d0
  0x00007f003f2d43a8: cmp    QWORD PTR [rcx+0x2c0],0x0
  0x00007f003f2d43b3: jne    0x00007f003f2d43cc
  0x00007f003f2d43b5: mov    QWORD PTR [rcx+0x2c0],rdx
  0x00007f003f2d43bc: mov    QWORD PTR [rcx+0x2c8],0x1
  0x00007f003f2d43c7: jmp    0x00007f003f2d44d0
  0x00007f003f2d43cc: cmp    QWORD PTR [rcx+0x2d0],0x0
  0x00007f003f2d43d7: jne    0x00007f003f2d43f0
  0x00007f003f2d43d9: mov    QWORD PTR [rcx+0x2d0],rdx
  0x00007f003f2d43e0: mov    QWORD PTR [rcx+0x2d8],0x1
  0x00007f003f2d43eb: jmp    0x00007f003f2d44d0
  0x00007f003f2d43f0: cmp    QWORD PTR [rcx+0x2e0],0x0
  0x00007f003f2d43fb: jne    0x00007f003f2d4414
  0x00007f003f2d43fd: mov    QWORD PTR [rcx+0x2e0],rdx
  0x00007f003f2d4404: mov    QWORD PTR [rcx+0x2e8],0x1
  0x00007f003f2d440f: jmp    0x00007f003f2d44d0
  0x00007f003f2d4414: cmp    QWORD PTR [rcx+0x2f0],0x0
  0x00007f003f2d441f: jne    0x00007f003f2d4438
  0x00007f003f2d4421: mov    QWORD PTR [rcx+0x2f0],rdx
  0x00007f003f2d4428: mov    QWORD PTR [rcx+0x2f8],0x1
  0x00007f003f2d4433: jmp    0x00007f003f2d44d0
  0x00007f003f2d4438: cmp    QWORD PTR [rcx+0x300],0x0
  0x00007f003f2d4443: jne    0x00007f003f2d445c
  0x00007f003f2d4445: mov    QWORD PTR [rcx+0x300],rdx
  0x00007f003f2d444c: mov    QWORD PTR [rcx+0x308],0x1
  0x00007f003f2d4457: jmp    0x00007f003f2d44d0
  0x00007f003f2d445c: cmp    QWORD PTR [rcx+0x310],0x0
  0x00007f003f2d4467: jne    0x00007f003f2d4480
  0x00007f003f2d4469: mov    QWORD PTR [rcx+0x310],rdx
  0x00007f003f2d4470: mov    QWORD PTR [rcx+0x318],0x1
  0x00007f003f2d447b: jmp    0x00007f003f2d44d0
  0x00007f003f2d4480: cmp    QWORD PTR [rcx+0x320],0x0
  0x00007f003f2d448b: jne    0x00007f003f2d44a4
  0x00007f003f2d448d: mov    QWORD PTR [rcx+0x320],rdx
  0x00007f003f2d4494: mov    QWORD PTR [rcx+0x328],0x1
  0x00007f003f2d449f: jmp    0x00007f003f2d44d0
  0x00007f003f2d44a4: cmp    QWORD PTR [rcx+0x330],0x0
  0x00007f003f2d44af: jne    0x00007f003f2d44c8
  0x00007f003f2d44b1: mov    QWORD PTR [rcx+0x330],rdx
  0x00007f003f2d44b8: mov    QWORD PTR [rcx+0x338],0x1
  0x00007f003f2d44c3: jmp    0x00007f003f2d44d0
  0x00007f003f2d44c8: add    QWORD PTR [rcx+0x2b0],0x1
  0x00007f003f2d44d0: mov    rdx,QWORD PTR [rsp+0xb0]
  0x00007f003f2d44d8: mov    ecx,0x0
  0x00007f003f2d44dd: mov    rsi,rdi            ;*invokevirtual loadClass {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@38 (line 411)

  0x00007f003f2d44e0: nop
  0x00007f003f2d44e1: nop
  0x00007f003f2d44e2: nop
  0x00007f003f2d44e3: nop
  0x00007f003f2d44e4: nop
  0x00007f003f2d44e5: movabs rax,0xffffffffffffffff
  0x00007f003f2d44ef: call   0x00007f003f1c4f60  ; OopMap{[192]=Oop [176]=Oop [200]=Oop [168]=Oop [288]=Oop off=2260}
                                                ;*invokevirtual loadClass {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@38 (line 411)
                                                ;   {virtual_call}
  0x00007f003f2d44f4: movabs rdx,0x7f0038a8ee00  ;   {metadata(method data for {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d44fe: inc    DWORD PTR [rdx+0x348]
  0x00007f003f2d4504: jmp    0x00007f003f2d4602  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@43 (line 411)

  0x00007f003f2d4509: mov    rsi,QWORD PTR [rsp+0xa8]
  0x00007f003f2d4511: movabs rdx,0x7f0038a8ee00  ;   {metadata(method data for {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d451b: add    QWORD PTR [rdx+0x360],0x1
  0x00007f003f2d4523: movabs rdx,0x7f0038a8f958  ;   {metadata(method data for {method} {0x00007f003877f1a0} &apos;findBootstrapClassOrNull&apos; &apos;(Ljava/lang/String;)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d452d: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2d4533: add    esi,0x8
  0x00007f003f2d4536: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2d453c: movabs rdx,0x7f003877f1a0  ;   {metadata({method} {0x00007f003877f1a0} &apos;findBootstrapClassOrNull&apos; &apos;(Ljava/lang/String;)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d4546: and    esi,0x7ffff8
  0x00007f003f2d454c: cmp    esi,0x0
  0x00007f003f2d454f: je     0x00007f003f2d6450
  0x00007f003f2d4555: mov    rsi,QWORD PTR [rsp+0xa8]
  0x00007f003f2d455d: movabs rdx,0x7f0038a8f958  ;   {metadata(method data for {method} {0x00007f003877f1a0} &apos;findBootstrapClassOrNull&apos; &apos;(Ljava/lang/String;)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d4567: add    QWORD PTR [rdx+0x130],0x1
  0x00007f003f2d456f: mov    rdx,QWORD PTR [rsp+0xb0]
  0x00007f003f2d4577: mov    rsi,QWORD PTR [rsp+0xa8]  ;*invokespecial checkName {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::findBootstrapClassOrNull@2 (line 1013)
                                                ; - java.lang.ClassLoader::loadClass@48 (line 413)

  0x00007f003f2d457f: call   0x00007f003f1c4d60  ; OopMap{[192]=Oop [176]=Oop [200]=Oop [168]=Oop [288]=Oop off=2404}
                                                ;*invokespecial checkName {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::findBootstrapClassOrNull@2 (line 1013)
                                                ; - java.lang.ClassLoader::loadClass@48 (line 413)
                                                ;   {optimized virtual_call}
  0x00007f003f2d4584: cmp    eax,0x0
  0x00007f003f2d4587: movabs rdx,0x7f0038a8f958  ;   {metadata(method data for {method} {0x00007f003877f1a0} &apos;findBootstrapClassOrNull&apos; &apos;(Ljava/lang/String;)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d4591: movabs rsi,0x140
  0x00007f003f2d459b: jne    0x00007f003f2d45ab
  0x00007f003f2d45a1: movabs rsi,0x150
  0x00007f003f2d45ab: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2d45af: lea    rdi,[rdi+0x1]
  0x00007f003f2d45b3: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2d45b7: jne    0x00007f003f2d45cc  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::findBootstrapClassOrNull@5 (line 1013)
                                                ; - java.lang.ClassLoader::loadClass@48 (line 413)

  0x00007f003f2d45bd: movabs rsi,0x0            ;   {oop(NULL)}
  0x00007f003f2d45c7: jmp    0x00007f003f2d45ff  ;*astore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@51 (line 413)

  0x00007f003f2d45cc: mov    rsi,QWORD PTR [rsp+0xa8]
  0x00007f003f2d45d4: movabs rdx,0x7f0038a8f958  ;   {metadata(method data for {method} {0x00007f003877f1a0} &apos;findBootstrapClassOrNull&apos; &apos;(Ljava/lang/String;)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d45de: add    QWORD PTR [rdx+0x160],0x1
  0x00007f003f2d45e6: mov    rdx,QWORD PTR [rsp+0xb0]
  0x00007f003f2d45ee: mov    rsi,QWORD PTR [rsp+0xa8]  ;*invokespecial findBootstrapClass {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::findBootstrapClassOrNull@12 (line 1015)
                                                ; - java.lang.ClassLoader::loadClass@48 (line 413)

  0x00007f003f2d45f6: nop
  0x00007f003f2d45f7: call   0x00007f003f1c4d60  ; OopMap{[192]=Oop [176]=Oop [168]=Oop [200]=Oop [288]=Oop off=2524}
                                                ;*invokespecial findBootstrapClass {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::findBootstrapClassOrNull@12 (line 1015)
                                                ; - java.lang.ClassLoader::loadClass@48 (line 413)
                                                ;   {optimized virtual_call}
  0x00007f003f2d45fc: mov    rsi,rax            ;*astore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@51 (line 413)

  0x00007f003f2d45ff: mov    rax,rsi
  0x00007f003f2d4602: movabs rsi,0x7f0038a8ee00  ;   {metadata(method data for {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d460c: inc    DWORD PTR [rsi+0x370]
  0x00007f003f2d4612: jmp    0x00007f003f2d4635  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@53 (line 418)

  0x00007f003f2d4617: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2d461e: xor    r10,r10
  0x00007f003f2d4621: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2d4628: xor    r10,r10
  0x00007f003f2d462b: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2d4632: mov    rax,rsi            ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@58 (line 420)

  0x00007f003f2d4635: cmp    rax,0x0
  0x00007f003f2d4639: movabs rsi,0x7f0038a8ee00  ;   {metadata(method data for {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d4643: movabs rdi,0x388
  0x00007f003f2d464d: jne    0x00007f003f2d465d
  0x00007f003f2d4653: movabs rdi,0x398
  0x00007f003f2d465d: mov    rbx,QWORD PTR [rsi+rdi*1]
  0x00007f003f2d4661: lea    rbx,[rbx+0x1]
  0x00007f003f2d4665: mov    QWORD PTR [rsi+rdi*1],rbx
  0x00007f003f2d4669: je     0x00007f003f2d4677  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@60 (line 420)

  0x00007f003f2d466f: mov    rsi,rax
  0x00007f003f2d4672: jmp    0x00007f003f2d5f80  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@100 (line 432)

  0x00007f003f2d4677: movabs rsi,0x7f0038a8ee00  ;   {metadata(method data for {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d4681: add    QWORD PTR [rsi+0x3a8],0x1
  0x00007f003f2d4689: call   0x00007f0058ea04a0  ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@63 (line 423)
                                                ;   {runtime_call}
  0x00007f003f2d468e: mov    QWORD PTR [rsp+0xd8],rax
  0x00007f003f2d4696: mov    rsi,QWORD PTR [rsp+0xa8]
  0x00007f003f2d469e: movabs rdx,0x7f0038a8ee00  ;   {metadata(method data for {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d46a8: mov    esi,DWORD PTR [rsi+0x8]
  0x00007f003f2d46ab: shl    rsi,0x3
  0x00007f003f2d46af: cmp    rsi,QWORD PTR [rdx+0x3c8]
  0x00007f003f2d46b6: jne    0x00007f003f2d46c5
  0x00007f003f2d46b8: add    QWORD PTR [rdx+0x3d0],0x1
  0x00007f003f2d46c0: jmp    0x00007f003f2d4887
  0x00007f003f2d46c5: cmp    rsi,QWORD PTR [rdx+0x3d8]
  0x00007f003f2d46cc: jne    0x00007f003f2d46db
  0x00007f003f2d46ce: add    QWORD PTR [rdx+0x3e0],0x1
  0x00007f003f2d46d6: jmp    0x00007f003f2d4887
  0x00007f003f2d46db: cmp    rsi,QWORD PTR [rdx+0x3e8]
  0x00007f003f2d46e2: jne    0x00007f003f2d46f1
  0x00007f003f2d46e4: add    QWORD PTR [rdx+0x3f0],0x1
  0x00007f003f2d46ec: jmp    0x00007f003f2d4887
  0x00007f003f2d46f1: cmp    rsi,QWORD PTR [rdx+0x3f8]
  0x00007f003f2d46f8: jne    0x00007f003f2d4707
  0x00007f003f2d46fa: add    QWORD PTR [rdx+0x400],0x1
  0x00007f003f2d4702: jmp    0x00007f003f2d4887
  0x00007f003f2d4707: cmp    rsi,QWORD PTR [rdx+0x408]
  0x00007f003f2d470e: jne    0x00007f003f2d471d
  0x00007f003f2d4710: add    QWORD PTR [rdx+0x410],0x1
  0x00007f003f2d4718: jmp    0x00007f003f2d4887
  0x00007f003f2d471d: cmp    rsi,QWORD PTR [rdx+0x418]
  0x00007f003f2d4724: jne    0x00007f003f2d4733
  0x00007f003f2d4726: add    QWORD PTR [rdx+0x420],0x1
  0x00007f003f2d472e: jmp    0x00007f003f2d4887
  0x00007f003f2d4733: cmp    rsi,QWORD PTR [rdx+0x428]
  0x00007f003f2d473a: jne    0x00007f003f2d4749
  0x00007f003f2d473c: add    QWORD PTR [rdx+0x430],0x1
  0x00007f003f2d4744: jmp    0x00007f003f2d4887
  0x00007f003f2d4749: cmp    rsi,QWORD PTR [rdx+0x438]
  0x00007f003f2d4750: jne    0x00007f003f2d475f
  0x00007f003f2d4752: add    QWORD PTR [rdx+0x440],0x1
  0x00007f003f2d475a: jmp    0x00007f003f2d4887
  0x00007f003f2d475f: cmp    QWORD PTR [rdx+0x3c8],0x0
  0x00007f003f2d476a: jne    0x00007f003f2d4783
  0x00007f003f2d476c: mov    QWORD PTR [rdx+0x3c8],rsi
  0x00007f003f2d4773: mov    QWORD PTR [rdx+0x3d0],0x1
  0x00007f003f2d477e: jmp    0x00007f003f2d4887
  0x00007f003f2d4783: cmp    QWORD PTR [rdx+0x3d8],0x0
  0x00007f003f2d478e: jne    0x00007f003f2d47a7
  0x00007f003f2d4790: mov    QWORD PTR [rdx+0x3d8],rsi
  0x00007f003f2d4797: mov    QWORD PTR [rdx+0x3e0],0x1
  0x00007f003f2d47a2: jmp    0x00007f003f2d4887
  0x00007f003f2d47a7: cmp    QWORD PTR [rdx+0x3e8],0x0
  0x00007f003f2d47b2: jne    0x00007f003f2d47cb
  0x00007f003f2d47b4: mov    QWORD PTR [rdx+0x3e8],rsi
  0x00007f003f2d47bb: mov    QWORD PTR [rdx+0x3f0],0x1
  0x00007f003f2d47c6: jmp    0x00007f003f2d4887
  0x00007f003f2d47cb: cmp    QWORD PTR [rdx+0x3f8],0x0
  0x00007f003f2d47d6: jne    0x00007f003f2d47ef
  0x00007f003f2d47d8: mov    QWORD PTR [rdx+0x3f8],rsi
  0x00007f003f2d47df: mov    QWORD PTR [rdx+0x400],0x1
  0x00007f003f2d47ea: jmp    0x00007f003f2d4887
  0x00007f003f2d47ef: cmp    QWORD PTR [rdx+0x408],0x0
  0x00007f003f2d47fa: jne    0x00007f003f2d4813
  0x00007f003f2d47fc: mov    QWORD PTR [rdx+0x408],rsi
  0x00007f003f2d4803: mov    QWORD PTR [rdx+0x410],0x1
  0x00007f003f2d480e: jmp    0x00007f003f2d4887
  0x00007f003f2d4813: cmp    QWORD PTR [rdx+0x418],0x0
  0x00007f003f2d481e: jne    0x00007f003f2d4837
  0x00007f003f2d4820: mov    QWORD PTR [rdx+0x418],rsi
  0x00007f003f2d4827: mov    QWORD PTR [rdx+0x420],0x1
  0x00007f003f2d4832: jmp    0x00007f003f2d4887
  0x00007f003f2d4837: cmp    QWORD PTR [rdx+0x428],0x0
  0x00007f003f2d4842: jne    0x00007f003f2d485b
  0x00007f003f2d4844: mov    QWORD PTR [rdx+0x428],rsi
  0x00007f003f2d484b: mov    QWORD PTR [rdx+0x430],0x1
  0x00007f003f2d4856: jmp    0x00007f003f2d4887
  0x00007f003f2d485b: cmp    QWORD PTR [rdx+0x438],0x0
  0x00007f003f2d4866: jne    0x00007f003f2d487f
  0x00007f003f2d4868: mov    QWORD PTR [rdx+0x438],rsi
  0x00007f003f2d486f: mov    QWORD PTR [rdx+0x440],0x1
  0x00007f003f2d487a: jmp    0x00007f003f2d4887
  0x00007f003f2d487f: add    QWORD PTR [rdx+0x3b8],0x1
  0x00007f003f2d4887: mov    rdx,QWORD PTR [rsp+0xb0]
  0x00007f003f2d488f: mov    rsi,QWORD PTR [rsp+0xa8]  ;*invokevirtual findClass {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@70 (line 424)

  0x00007f003f2d4897: nop
  0x00007f003f2d4898: nop
  0x00007f003f2d4899: nop
  0x00007f003f2d489a: nop
  0x00007f003f2d489b: nop
  0x00007f003f2d489c: nop
  0x00007f003f2d489d: movabs rax,0xffffffffffffffff
  0x00007f003f2d48a7: call   0x00007f003f1c4f60  ; OopMap{[192]=Oop [168]=Oop [288]=Oop off=3212}
                                                ;*invokevirtual findClass {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@70 (line 424)
                                                ;   {virtual_call}
  0x00007f003f2d48ac: movabs rdx,0x7f0038a8ee00  ;   {metadata(method data for {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d48b6: add    QWORD PTR [rdx+0x450],0x1
  0x00007f003f2d48be: movabs rdx,0x7f0038a8fb00  ;   {metadata(method data for {method} {0x00007f00389a2650} &apos;getParentDelegationTime&apos; &apos;()Lsun/misc/PerfCounter;&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d48c8: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2d48ce: add    esi,0x8
  0x00007f003f2d48d1: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2d48d7: movabs rdx,0x7f00389a2650  ;   {metadata({method} {0x00007f00389a2650} &apos;getParentDelegationTime&apos; &apos;()Lsun/misc/PerfCounter;&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d48e1: and    esi,0x7ffff8
  0x00007f003f2d48e7: cmp    esi,0x0
  0x00007f003f2d48ea: je     0x00007f003f2d6467
  0x00007f003f2d48f0: mov    rdi,QWORD PTR [rsp+0xd8]
  0x00007f003f2d48f8: mov    rdx,QWORD PTR [rsp+0xd0]
  0x00007f003f2d4900: sub    rdi,rdx
  0x00007f003f2d4903: mov    QWORD PTR [rsp+0xe8],rdi
  0x00007f003f2d490b: movabs rbx,0x670bdf240    ;   {oop(a &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d4915: mov    rdx,rbx
  0x00007f003f2d4918: movabs rsi,0x7f0038a8ee00  ;   {metadata(method data for {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d4922: movabs r10,0x7c003c418    ;   {metadata(&apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d492c: mov    QWORD PTR [rsi+0x470],r10
  0x00007f003f2d4933: add    QWORD PTR [rsi+0x478],0x1
  0x00007f003f2d493b: movabs rdx,0x7f0038a8fc48  ;   {metadata(method data for {method} {0x00007f00389a2278} &apos;addTime&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d4945: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2d494b: add    esi,0x8
  0x00007f003f2d494e: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2d4954: movabs rdx,0x7f00389a2278  ;   {metadata({method} {0x00007f00389a2278} &apos;addTime&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d495e: and    esi,0x7ffff8
  0x00007f003f2d4964: cmp    esi,0x0
  0x00007f003f2d4967: je     0x00007f003f2d647e
  0x00007f003f2d496d: mov    rdx,rbx
  0x00007f003f2d4970: movabs rsi,0x7f0038a8fc48  ;   {metadata(method data for {method} {0x00007f00389a2278} &apos;addTime&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d497a: movabs r10,0x7c003c418    ;   {metadata(&apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d4984: mov    QWORD PTR [rsi+0x140],r10
  0x00007f003f2d498b: add    QWORD PTR [rsi+0x148],0x1
  0x00007f003f2d4993: lea    rdx,[rsp+0x128]
  0x00007f003f2d499b: mov    QWORD PTR [rsp+0xf0],rax
  0x00007f003f2d49a3: mov    QWORD PTR [rdx+0x8],rbx
  0x00007f003f2d49a7: mov    rax,QWORD PTR [rbx]  ; implicit exception: dispatches to 0x00007f003f2d6495
  0x00007f003f2d49aa: mov    rsi,rax
  0x00007f003f2d49ad: and    rsi,0x7
  0x00007f003f2d49b1: cmp    rsi,0x5
  0x00007f003f2d49b5: jne    0x00007f003f2d4a3c
  0x00007f003f2d49bb: mov    esi,DWORD PTR [rbx+0x8]
  0x00007f003f2d49be: shl    rsi,0x3
  0x00007f003f2d49c2: mov    rsi,QWORD PTR [rsi+0xa8]
  0x00007f003f2d49c9: or     rsi,r15
  0x00007f003f2d49cc: xor    rsi,rax
  0x00007f003f2d49cf: and    rsi,0xffffffffffffff87
  0x00007f003f2d49d3: je     0x00007f003f2d4a64
  0x00007f003f2d49d9: test   rsi,0x7
  0x00007f003f2d49e0: jne    0x00007f003f2d4a29
  0x00007f003f2d49e2: test   rsi,0x300
  0x00007f003f2d49e9: jne    0x00007f003f2d4a08
  0x00007f003f2d49eb: and    rax,0x37f
  0x00007f003f2d49f2: mov    rsi,rax
  0x00007f003f2d49f5: or     rsi,r15
  0x00007f003f2d49f8: lock cmpxchg QWORD PTR [rbx],rsi
  0x00007f003f2d49fd: jne    0x00007f003f2d649a
  0x00007f003f2d4a03: jmp    0x00007f003f2d4a64
  0x00007f003f2d4a08: mov    esi,DWORD PTR [rbx+0x8]
  0x00007f003f2d4a0b: shl    rsi,0x3
  0x00007f003f2d4a0f: mov    rsi,QWORD PTR [rsi+0xa8]
  0x00007f003f2d4a16: or     rsi,r15
  0x00007f003f2d4a19: lock cmpxchg QWORD PTR [rbx],rsi
  0x00007f003f2d4a1e: jne    0x00007f003f2d649a
  0x00007f003f2d4a24: jmp    0x00007f003f2d4a64
  0x00007f003f2d4a29: mov    esi,DWORD PTR [rbx+0x8]
  0x00007f003f2d4a2c: shl    rsi,0x3
  0x00007f003f2d4a30: mov    rsi,QWORD PTR [rsi+0xa8]
  0x00007f003f2d4a37: lock cmpxchg QWORD PTR [rbx],rsi
  0x00007f003f2d4a3c: mov    rax,QWORD PTR [rbx]
  0x00007f003f2d4a3f: or     rax,0x1
  0x00007f003f2d4a43: mov    QWORD PTR [rdx],rax
  0x00007f003f2d4a46: lock cmpxchg QWORD PTR [rbx],rdx
  0x00007f003f2d4a4b: je     0x00007f003f2d4a64
  0x00007f003f2d4a51: sub    rax,rsp
  0x00007f003f2d4a54: and    rax,0xfffffffffffff007
  0x00007f003f2d4a5b: mov    QWORD PTR [rdx],rax
  0x00007f003f2d4a5e: jne    0x00007f003f2d649a  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)

  0x00007f003f2d4a64: movabs rax,0x7f0038a8b178  ;   {metadata(method data for {method} {0x00007f00389a2120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d4a6e: mov    edx,DWORD PTR [rax+0xfc]
  0x00007f003f2d4a74: add    edx,0x8
  0x00007f003f2d4a77: mov    DWORD PTR [rax+0xfc],edx
  0x00007f003f2d4a7d: movabs rax,0x7f00389a2120  ;   {metadata({method} {0x00007f00389a2120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d4a87: and    edx,0x7ffff8
  0x00007f003f2d4a8d: cmp    edx,0x0
  0x00007f003f2d4a90: je     0x00007f003f2d64ad
  0x00007f003f2d4a96: mov    rax,rbx
  0x00007f003f2d4a99: movabs rdx,0x7f0038a8b178  ;   {metadata(method data for {method} {0x00007f00389a2120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d4aa3: add    QWORD PTR [rdx+0x148],0x1
  0x00007f003f2d4aab: lea    rdx,[rsp+0x138]
  0x00007f003f2d4ab3: mov    QWORD PTR [rdx+0x8],rbx
  0x00007f003f2d4ab7: mov    rax,QWORD PTR [rbx]
  0x00007f003f2d4aba: mov    rsi,rax
  0x00007f003f2d4abd: and    rsi,0x7
  0x00007f003f2d4ac1: cmp    rsi,0x5
  0x00007f003f2d4ac5: jne    0x00007f003f2d4b4c
  0x00007f003f2d4acb: mov    esi,DWORD PTR [rbx+0x8]
  0x00007f003f2d4ace: shl    rsi,0x3
  0x00007f003f2d4ad2: mov    rsi,QWORD PTR [rsi+0xa8]
  0x00007f003f2d4ad9: or     rsi,r15
  0x00007f003f2d4adc: xor    rsi,rax
  0x00007f003f2d4adf: and    rsi,0xffffffffffffff87
  0x00007f003f2d4ae3: je     0x00007f003f2d4b74
  0x00007f003f2d4ae9: test   rsi,0x7
  0x00007f003f2d4af0: jne    0x00007f003f2d4b39
  0x00007f003f2d4af2: test   rsi,0x300
  0x00007f003f2d4af9: jne    0x00007f003f2d4b18
  0x00007f003f2d4afb: and    rax,0x37f
  0x00007f003f2d4b02: mov    rsi,rax
  0x00007f003f2d4b05: or     rsi,r15
  0x00007f003f2d4b08: lock cmpxchg QWORD PTR [rbx],rsi
  0x00007f003f2d4b0d: jne    0x00007f003f2d64c4
  0x00007f003f2d4b13: jmp    0x00007f003f2d4b74
  0x00007f003f2d4b18: mov    esi,DWORD PTR [rbx+0x8]
  0x00007f003f2d4b1b: shl    rsi,0x3
  0x00007f003f2d4b1f: mov    rsi,QWORD PTR [rsi+0xa8]
  0x00007f003f2d4b26: or     rsi,r15
  0x00007f003f2d4b29: lock cmpxchg QWORD PTR [rbx],rsi
  0x00007f003f2d4b2e: jne    0x00007f003f2d64c4
  0x00007f003f2d4b34: jmp    0x00007f003f2d4b74
  0x00007f003f2d4b39: mov    esi,DWORD PTR [rbx+0x8]
  0x00007f003f2d4b3c: shl    rsi,0x3
  0x00007f003f2d4b40: mov    rsi,QWORD PTR [rsi+0xa8]
  0x00007f003f2d4b47: lock cmpxchg QWORD PTR [rbx],rsi
  0x00007f003f2d4b4c: mov    rax,QWORD PTR [rbx]
  0x00007f003f2d4b4f: or     rax,0x1
  0x00007f003f2d4b53: mov    QWORD PTR [rdx],rax
  0x00007f003f2d4b56: lock cmpxchg QWORD PTR [rbx],rdx
  0x00007f003f2d4b5b: je     0x00007f003f2d4b74
  0x00007f003f2d4b61: sub    rax,rsp
  0x00007f003f2d4b64: and    rax,0xfffffffffffff007
  0x00007f003f2d4b6b: mov    QWORD PTR [rdx],rax
  0x00007f003f2d4b6e: jne    0x00007f003f2d64c4  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)

  0x00007f003f2d4b74: movabs rdx,0x7f0038a8b428  ;   {metadata(method data for {method} {0x00007f00389a1fa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d4b7e: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2d4b84: add    esi,0x8
  0x00007f003f2d4b87: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2d4b8d: movabs rdx,0x7f00389a1fa0  ;   {metadata({method} {0x00007f00389a1fa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d4b97: and    esi,0x7ffff8
  0x00007f003f2d4b9d: cmp    esi,0x0
  0x00007f003f2d4ba0: je     0x00007f003f2d64d7
  0x00007f003f2d4ba6: mov    esi,DWORD PTR [rbx+0x10]
  0x00007f003f2d4ba9: shl    rsi,0x3            ;*getfield lb {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)

  0x00007f003f2d4bad: cmp    rax,QWORD PTR [rsi]  ; implicit exception: dispatches to 0x00007f003f2d64ee
  0x00007f003f2d4bb0: mov    rdx,rsi
  0x00007f003f2d4bb3: movabs rax,0x7f0038a8b428  ;   {metadata(method data for {method} {0x00007f00389a1fa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d4bbd: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2d4bc0: shl    rdx,0x3
  0x00007f003f2d4bc4: cmp    rdx,QWORD PTR [rax+0x140]
  0x00007f003f2d4bcb: jne    0x00007f003f2d4bda
  0x00007f003f2d4bcd: add    QWORD PTR [rax+0x148],0x1
  0x00007f003f2d4bd5: jmp    0x00007f003f2d4d9c
  0x00007f003f2d4bda: cmp    rdx,QWORD PTR [rax+0x150]
  0x00007f003f2d4be1: jne    0x00007f003f2d4bf0
  0x00007f003f2d4be3: add    QWORD PTR [rax+0x158],0x1
  0x00007f003f2d4beb: jmp    0x00007f003f2d4d9c
  0x00007f003f2d4bf0: cmp    rdx,QWORD PTR [rax+0x160]
  0x00007f003f2d4bf7: jne    0x00007f003f2d4c06
  0x00007f003f2d4bf9: add    QWORD PTR [rax+0x168],0x1
  0x00007f003f2d4c01: jmp    0x00007f003f2d4d9c
  0x00007f003f2d4c06: cmp    rdx,QWORD PTR [rax+0x170]
  0x00007f003f2d4c0d: jne    0x00007f003f2d4c1c
  0x00007f003f2d4c0f: add    QWORD PTR [rax+0x178],0x1
  0x00007f003f2d4c17: jmp    0x00007f003f2d4d9c
  0x00007f003f2d4c1c: cmp    rdx,QWORD PTR [rax+0x180]
  0x00007f003f2d4c23: jne    0x00007f003f2d4c32
  0x00007f003f2d4c25: add    QWORD PTR [rax+0x188],0x1
  0x00007f003f2d4c2d: jmp    0x00007f003f2d4d9c
  0x00007f003f2d4c32: cmp    rdx,QWORD PTR [rax+0x190]
  0x00007f003f2d4c39: jne    0x00007f003f2d4c48
  0x00007f003f2d4c3b: add    QWORD PTR [rax+0x198],0x1
  0x00007f003f2d4c43: jmp    0x00007f003f2d4d9c
  0x00007f003f2d4c48: cmp    rdx,QWORD PTR [rax+0x1a0]
  0x00007f003f2d4c4f: jne    0x00007f003f2d4c5e
  0x00007f003f2d4c51: add    QWORD PTR [rax+0x1a8],0x1
  0x00007f003f2d4c59: jmp    0x00007f003f2d4d9c
  0x00007f003f2d4c5e: cmp    rdx,QWORD PTR [rax+0x1b0]
  0x00007f003f2d4c65: jne    0x00007f003f2d4c74
  0x00007f003f2d4c67: add    QWORD PTR [rax+0x1b8],0x1
  0x00007f003f2d4c6f: jmp    0x00007f003f2d4d9c
  0x00007f003f2d4c74: cmp    QWORD PTR [rax+0x140],0x0
  0x00007f003f2d4c7f: jne    0x00007f003f2d4c98
  0x00007f003f2d4c81: mov    QWORD PTR [rax+0x140],rdx
  0x00007f003f2d4c88: mov    QWORD PTR [rax+0x148],0x1
  0x00007f003f2d4c93: jmp    0x00007f003f2d4d9c
  0x00007f003f2d4c98: cmp    QWORD PTR [rax+0x150],0x0
  0x00007f003f2d4ca3: jne    0x00007f003f2d4cbc
  0x00007f003f2d4ca5: mov    QWORD PTR [rax+0x150],rdx
  0x00007f003f2d4cac: mov    QWORD PTR [rax+0x158],0x1
  0x00007f003f2d4cb7: jmp    0x00007f003f2d4d9c
  0x00007f003f2d4cbc: cmp    QWORD PTR [rax+0x160],0x0
  0x00007f003f2d4cc7: jne    0x00007f003f2d4ce0
  0x00007f003f2d4cc9: mov    QWORD PTR [rax+0x160],rdx
  0x00007f003f2d4cd0: mov    QWORD PTR [rax+0x168],0x1
  0x00007f003f2d4cdb: jmp    0x00007f003f2d4d9c
  0x00007f003f2d4ce0: cmp    QWORD PTR [rax+0x170],0x0
  0x00007f003f2d4ceb: jne    0x00007f003f2d4d04
  0x00007f003f2d4ced: mov    QWORD PTR [rax+0x170],rdx
  0x00007f003f2d4cf4: mov    QWORD PTR [rax+0x178],0x1
  0x00007f003f2d4cff: jmp    0x00007f003f2d4d9c
  0x00007f003f2d4d04: cmp    QWORD PTR [rax+0x180],0x0
  0x00007f003f2d4d0f: jne    0x00007f003f2d4d28
  0x00007f003f2d4d11: mov    QWORD PTR [rax+0x180],rdx
  0x00007f003f2d4d18: mov    QWORD PTR [rax+0x188],0x1
  0x00007f003f2d4d23: jmp    0x00007f003f2d4d9c
  0x00007f003f2d4d28: cmp    QWORD PTR [rax+0x190],0x0
  0x00007f003f2d4d33: jne    0x00007f003f2d4d4c
  0x00007f003f2d4d35: mov    QWORD PTR [rax+0x190],rdx
  0x00007f003f2d4d3c: mov    QWORD PTR [rax+0x198],0x1
  0x00007f003f2d4d47: jmp    0x00007f003f2d4d9c
  0x00007f003f2d4d4c: cmp    QWORD PTR [rax+0x1a0],0x0
  0x00007f003f2d4d57: jne    0x00007f003f2d4d70
  0x00007f003f2d4d59: mov    QWORD PTR [rax+0x1a0],rdx
  0x00007f003f2d4d60: mov    QWORD PTR [rax+0x1a8],0x1
  0x00007f003f2d4d6b: jmp    0x00007f003f2d4d9c
  0x00007f003f2d4d70: cmp    QWORD PTR [rax+0x1b0],0x0
  0x00007f003f2d4d7b: jne    0x00007f003f2d4d94
  0x00007f003f2d4d7d: mov    QWORD PTR [rax+0x1b0],rdx
  0x00007f003f2d4d84: mov    QWORD PTR [rax+0x1b8],0x1
  0x00007f003f2d4d8f: jmp    0x00007f003f2d4d9c
  0x00007f003f2d4d94: add    QWORD PTR [rax+0x130],0x1
  0x00007f003f2d4d9c: mov    edx,0x0            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)

  0x00007f003f2d4da1: mov    QWORD PTR [rsp+0xe0],rbx
  0x00007f003f2d4da9: nop
  0x00007f003f2d4daa: nop
  0x00007f003f2d4dab: nop
  0x00007f003f2d4dac: nop
  0x00007f003f2d4dad: movabs rax,0xffffffffffffffff
  0x00007f003f2d4db7: call   0x00007f003f1c4f60  ; OopMap{[192]=Oop [168]=Oop [240]=Oop [224]=Oop [288]=Oop [304]=Oop [320]=Oop off=4508}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)
                                                ;   {virtual_call}
  0x00007f003f2d4dbc: mov    rdx,rax            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)

  0x00007f003f2d4dbf: lea    rax,[rsp+0x138]
  0x00007f003f2d4dc7: mov    rsi,QWORD PTR [rax+0x8]
  0x00007f003f2d4dcb: mov    rcx,QWORD PTR [rsi]
  0x00007f003f2d4dce: and    rcx,0x7
  0x00007f003f2d4dd2: cmp    rcx,0x5
  0x00007f003f2d4dd6: je     0x00007f003f2d4df3
  0x00007f003f2d4ddc: mov    rcx,QWORD PTR [rax]
  0x00007f003f2d4ddf: test   rcx,rcx
  0x00007f003f2d4de2: je     0x00007f003f2d4df3
  0x00007f003f2d4de8: lock cmpxchg QWORD PTR [rsi],rcx
  0x00007f003f2d4ded: jne    0x00007f003f2d64f3  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)

  0x00007f003f2d4df3: mov    rbx,QWORD PTR [rsp+0xe0]
  0x00007f003f2d4dfb: mov    esi,DWORD PTR [rbx+0x10]
  0x00007f003f2d4dfe: shl    rsi,0x3            ;*getfield lb {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@8 (line 98)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)

  0x00007f003f2d4e02: cmp    rax,QWORD PTR [rsi]  ; implicit exception: dispatches to 0x00007f003f2d6509
  0x00007f003f2d4e05: mov    rcx,rsi
  0x00007f003f2d4e08: movabs rdi,0x7f0038a8b178  ;   {metadata(method data for {method} {0x00007f00389a2120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d4e12: mov    ecx,DWORD PTR [rcx+0x8]
  0x00007f003f2d4e15: shl    rcx,0x3
  0x00007f003f2d4e19: cmp    rcx,QWORD PTR [rdi+0x1d8]
  0x00007f003f2d4e20: jne    0x00007f003f2d4e2f
  0x00007f003f2d4e22: add    QWORD PTR [rdi+0x1e0],0x1
  0x00007f003f2d4e2a: jmp    0x00007f003f2d4ff1
  0x00007f003f2d4e2f: cmp    rcx,QWORD PTR [rdi+0x1e8]
  0x00007f003f2d4e36: jne    0x00007f003f2d4e45
  0x00007f003f2d4e38: add    QWORD PTR [rdi+0x1f0],0x1
  0x00007f003f2d4e40: jmp    0x00007f003f2d4ff1
  0x00007f003f2d4e45: cmp    rcx,QWORD PTR [rdi+0x1f8]
  0x00007f003f2d4e4c: jne    0x00007f003f2d4e5b
  0x00007f003f2d4e4e: add    QWORD PTR [rdi+0x200],0x1
  0x00007f003f2d4e56: jmp    0x00007f003f2d4ff1
  0x00007f003f2d4e5b: cmp    rcx,QWORD PTR [rdi+0x208]
  0x00007f003f2d4e62: jne    0x00007f003f2d4e71
  0x00007f003f2d4e64: add    QWORD PTR [rdi+0x210],0x1
  0x00007f003f2d4e6c: jmp    0x00007f003f2d4ff1
  0x00007f003f2d4e71: cmp    rcx,QWORD PTR [rdi+0x218]
  0x00007f003f2d4e78: jne    0x00007f003f2d4e87
  0x00007f003f2d4e7a: add    QWORD PTR [rdi+0x220],0x1
  0x00007f003f2d4e82: jmp    0x00007f003f2d4ff1
  0x00007f003f2d4e87: cmp    rcx,QWORD PTR [rdi+0x228]
  0x00007f003f2d4e8e: jne    0x00007f003f2d4e9d
  0x00007f003f2d4e90: add    QWORD PTR [rdi+0x230],0x1
  0x00007f003f2d4e98: jmp    0x00007f003f2d4ff1
  0x00007f003f2d4e9d: cmp    rcx,QWORD PTR [rdi+0x238]
  0x00007f003f2d4ea4: jne    0x00007f003f2d4eb3
  0x00007f003f2d4ea6: add    QWORD PTR [rdi+0x240],0x1
  0x00007f003f2d4eae: jmp    0x00007f003f2d4ff1
  0x00007f003f2d4eb3: cmp    rcx,QWORD PTR [rdi+0x248]
  0x00007f003f2d4eba: jne    0x00007f003f2d4ec9
  0x00007f003f2d4ebc: add    QWORD PTR [rdi+0x250],0x1
  0x00007f003f2d4ec4: jmp    0x00007f003f2d4ff1
  0x00007f003f2d4ec9: cmp    QWORD PTR [rdi+0x1d8],0x0
  0x00007f003f2d4ed4: jne    0x00007f003f2d4eed
  0x00007f003f2d4ed6: mov    QWORD PTR [rdi+0x1d8],rcx
  0x00007f003f2d4edd: mov    QWORD PTR [rdi+0x1e0],0x1
  0x00007f003f2d4ee8: jmp    0x00007f003f2d4ff1
  0x00007f003f2d4eed: cmp    QWORD PTR [rdi+0x1e8],0x0
  0x00007f003f2d4ef8: jne    0x00007f003f2d4f11
  0x00007f003f2d4efa: mov    QWORD PTR [rdi+0x1e8],rcx
  0x00007f003f2d4f01: mov    QWORD PTR [rdi+0x1f0],0x1
  0x00007f003f2d4f0c: jmp    0x00007f003f2d4ff1
  0x00007f003f2d4f11: cmp    QWORD PTR [rdi+0x1f8],0x0
  0x00007f003f2d4f1c: jne    0x00007f003f2d4f35
  0x00007f003f2d4f1e: mov    QWORD PTR [rdi+0x1f8],rcx
  0x00007f003f2d4f25: mov    QWORD PTR [rdi+0x200],0x1
  0x00007f003f2d4f30: jmp    0x00007f003f2d4ff1
  0x00007f003f2d4f35: cmp    QWORD PTR [rdi+0x208],0x0
  0x00007f003f2d4f40: jne    0x00007f003f2d4f59
  0x00007f003f2d4f42: mov    QWORD PTR [rdi+0x208],rcx
  0x00007f003f2d4f49: mov    QWORD PTR [rdi+0x210],0x1
  0x00007f003f2d4f54: jmp    0x00007f003f2d4ff1
  0x00007f003f2d4f59: cmp    QWORD PTR [rdi+0x218],0x0
  0x00007f003f2d4f64: jne    0x00007f003f2d4f7d
  0x00007f003f2d4f66: mov    QWORD PTR [rdi+0x218],rcx
  0x00007f003f2d4f6d: mov    QWORD PTR [rdi+0x220],0x1
  0x00007f003f2d4f78: jmp    0x00007f003f2d4ff1
  0x00007f003f2d4f7d: cmp    QWORD PTR [rdi+0x228],0x0
  0x00007f003f2d4f88: jne    0x00007f003f2d4fa1
  0x00007f003f2d4f8a: mov    QWORD PTR [rdi+0x228],rcx
  0x00007f003f2d4f91: mov    QWORD PTR [rdi+0x230],0x1
  0x00007f003f2d4f9c: jmp    0x00007f003f2d4ff1
  0x00007f003f2d4fa1: cmp    QWORD PTR [rdi+0x238],0x0
  0x00007f003f2d4fac: jne    0x00007f003f2d4fc5
  0x00007f003f2d4fae: mov    QWORD PTR [rdi+0x238],rcx
  0x00007f003f2d4fb5: mov    QWORD PTR [rdi+0x240],0x1
  0x00007f003f2d4fc0: jmp    0x00007f003f2d4ff1
  0x00007f003f2d4fc5: cmp    QWORD PTR [rdi+0x248],0x0
  0x00007f003f2d4fd0: jne    0x00007f003f2d4fe9
  0x00007f003f2d4fd2: mov    QWORD PTR [rdi+0x248],rcx
  0x00007f003f2d4fd9: mov    QWORD PTR [rdi+0x250],0x1
  0x00007f003f2d4fe4: jmp    0x00007f003f2d4ff1
  0x00007f003f2d4fe9: add    QWORD PTR [rdi+0x1c8],0x1
  0x00007f003f2d4ff1: mov    rcx,rdx
  0x00007f003f2d4ff4: mov    rdi,QWORD PTR [rsp+0xe8]
  0x00007f003f2d4ffc: add    rcx,rdi
  0x00007f003f2d4fff: mov    edx,0x0            ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@13 (line 98)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)

  0x00007f003f2d5004: nop
  0x00007f003f2d5005: movabs rax,0xffffffffffffffff
  0x00007f003f2d500f: call   0x00007f003f1c4f60  ; OopMap{[192]=Oop [168]=Oop [240]=Oop [288]=Oop [304]=Oop off=5108}
                                                ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@13 (line 98)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)
                                                ;   {virtual_call}
  0x00007f003f2d5014: lea    rax,[rsp+0x128]
  0x00007f003f2d501c: mov    rdi,QWORD PTR [rax+0x8]
  0x00007f003f2d5020: mov    rsi,QWORD PTR [rdi]
  0x00007f003f2d5023: and    rsi,0x7
  0x00007f003f2d5027: cmp    rsi,0x5
  0x00007f003f2d502b: je     0x00007f003f2d5048
  0x00007f003f2d5031: mov    rsi,QWORD PTR [rax]
  0x00007f003f2d5034: test   rsi,rsi
  0x00007f003f2d5037: je     0x00007f003f2d5048
  0x00007f003f2d503d: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2d5042: jne    0x00007f003f2d650e  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)

  0x00007f003f2d5048: movabs rsi,0x7f0038a8ee00  ;   {metadata(method data for {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d5052: add    QWORD PTR [rsi+0x4f8],0x1
  0x00007f003f2d505a: movabs rsi,0x7f0038a8fe60  ;   {metadata(method data for {method} {0x00007f00389a2520} &apos;getFindClassTime&apos; &apos;()Lsun/misc/PerfCounter;&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d5064: mov    edi,DWORD PTR [rsi+0xfc]
  0x00007f003f2d506a: add    edi,0x8
  0x00007f003f2d506d: mov    DWORD PTR [rsi+0xfc],edi
  0x00007f003f2d5073: movabs rsi,0x7f00389a2520  ;   {metadata({method} {0x00007f00389a2520} &apos;getFindClassTime&apos; &apos;()Lsun/misc/PerfCounter;&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d507d: and    edi,0x7ffff8
  0x00007f003f2d5083: cmp    edi,0x0
  0x00007f003f2d5086: je     0x00007f003f2d6524
  0x00007f003f2d508c: movabs rsi,0x670bdf7c0    ;   {oop(a &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d5096: mov    QWORD PTR [rsp+0xf8],rsi
  0x00007f003f2d509e: mov    rdi,rsi
  0x00007f003f2d50a1: movabs rbx,0x7f0038a8ee00  ;   {metadata(method data for {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d50ab: movabs r10,0x7c003c418    ;   {metadata(&apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d50b5: mov    QWORD PTR [rbx+0x518],r10
  0x00007f003f2d50bc: add    QWORD PTR [rbx+0x520],0x1
  0x00007f003f2d50c4: movabs rdi,0x7f0038a8ffa8  ;   {metadata(method data for {method} {0x00007f00389a2330} &apos;addElapsedTimeFrom&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d50ce: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2d50d4: add    ebx,0x8
  0x00007f003f2d50d7: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2d50dd: movabs rdi,0x7f00389a2330  ;   {metadata({method} {0x00007f00389a2330} &apos;addElapsedTimeFrom&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d50e7: and    ebx,0x7ffff8
  0x00007f003f2d50ed: cmp    ebx,0x0
  0x00007f003f2d50f0: je     0x00007f003f2d653b
  0x00007f003f2d50f6: movabs rdi,0x7f0038a8ffa8  ;   {metadata(method data for {method} {0x00007f00389a2330} &apos;addElapsedTimeFrom&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d5100: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f2d5108: call   0x00007f0058ea04a0  ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@1 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)
                                                ;   {runtime_call}
  0x00007f003f2d510d: mov    rdi,QWORD PTR [rsp+0xd8]
  0x00007f003f2d5115: sub    rax,rdi
  0x00007f003f2d5118: mov    QWORD PTR [rsp+0x100],rax
  0x00007f003f2d5120: mov    rsi,QWORD PTR [rsp+0xf8]
  0x00007f003f2d5128: movabs rdx,0x7f0038a8ffa8  ;   {metadata(method data for {method} {0x00007f00389a2330} &apos;addElapsedTimeFrom&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d5132: movabs r10,0x7c003c418    ;   {metadata(&apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d513c: mov    QWORD PTR [rdx+0x150],r10
  0x00007f003f2d5143: add    QWORD PTR [rdx+0x158],0x1
  0x00007f003f2d514b: lea    rdx,[rsp+0x128]
  0x00007f003f2d5153: mov    rsi,QWORD PTR [rsp+0xf8]
  0x00007f003f2d515b: mov    QWORD PTR [rdx+0x8],rsi
  0x00007f003f2d515f: mov    rax,QWORD PTR [rsi]  ; implicit exception: dispatches to 0x00007f003f2d6552
  0x00007f003f2d5162: mov    rcx,rax
  0x00007f003f2d5165: and    rcx,0x7
  0x00007f003f2d5169: cmp    rcx,0x5
  0x00007f003f2d516d: jne    0x00007f003f2d51f4
  0x00007f003f2d5173: mov    ecx,DWORD PTR [rsi+0x8]
  0x00007f003f2d5176: shl    rcx,0x3
  0x00007f003f2d517a: mov    rcx,QWORD PTR [rcx+0xa8]
  0x00007f003f2d5181: or     rcx,r15
  0x00007f003f2d5184: xor    rcx,rax
  0x00007f003f2d5187: and    rcx,0xffffffffffffff87
  0x00007f003f2d518b: je     0x00007f003f2d521c
  0x00007f003f2d5191: test   rcx,0x7
  0x00007f003f2d5198: jne    0x00007f003f2d51e1
  0x00007f003f2d519a: test   rcx,0x300
  0x00007f003f2d51a1: jne    0x00007f003f2d51c0
  0x00007f003f2d51a3: and    rax,0x37f
  0x00007f003f2d51aa: mov    rcx,rax
  0x00007f003f2d51ad: or     rcx,r15
  0x00007f003f2d51b0: lock cmpxchg QWORD PTR [rsi],rcx
  0x00007f003f2d51b5: jne    0x00007f003f2d6557
  0x00007f003f2d51bb: jmp    0x00007f003f2d521c
  0x00007f003f2d51c0: mov    ecx,DWORD PTR [rsi+0x8]
  0x00007f003f2d51c3: shl    rcx,0x3
  0x00007f003f2d51c7: mov    rcx,QWORD PTR [rcx+0xa8]
  0x00007f003f2d51ce: or     rcx,r15
  0x00007f003f2d51d1: lock cmpxchg QWORD PTR [rsi],rcx
  0x00007f003f2d51d6: jne    0x00007f003f2d6557
  0x00007f003f2d51dc: jmp    0x00007f003f2d521c
  0x00007f003f2d51e1: mov    ecx,DWORD PTR [rsi+0x8]
  0x00007f003f2d51e4: shl    rcx,0x3
  0x00007f003f2d51e8: mov    rcx,QWORD PTR [rcx+0xa8]
  0x00007f003f2d51ef: lock cmpxchg QWORD PTR [rsi],rcx
  0x00007f003f2d51f4: mov    rax,QWORD PTR [rsi]
  0x00007f003f2d51f7: or     rax,0x1
  0x00007f003f2d51fb: mov    QWORD PTR [rdx],rax
  0x00007f003f2d51fe: lock cmpxchg QWORD PTR [rsi],rdx
  0x00007f003f2d5203: je     0x00007f003f2d521c
  0x00007f003f2d5209: sub    rax,rsp
  0x00007f003f2d520c: and    rax,0xfffffffffffff007
  0x00007f003f2d5213: mov    QWORD PTR [rdx],rax
  0x00007f003f2d5216: jne    0x00007f003f2d6557  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)

  0x00007f003f2d521c: movabs rax,0x7f0038a8b178  ;   {metadata(method data for {method} {0x00007f00389a2120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d5226: mov    edx,DWORD PTR [rax+0xfc]
  0x00007f003f2d522c: add    edx,0x8
  0x00007f003f2d522f: mov    DWORD PTR [rax+0xfc],edx
  0x00007f003f2d5235: movabs rax,0x7f00389a2120  ;   {metadata({method} {0x00007f00389a2120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d523f: and    edx,0x7ffff8
  0x00007f003f2d5245: cmp    edx,0x0
  0x00007f003f2d5248: je     0x00007f003f2d656a
  0x00007f003f2d524e: mov    rax,rsi
  0x00007f003f2d5251: movabs rdx,0x7f0038a8b178  ;   {metadata(method data for {method} {0x00007f00389a2120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d525b: add    QWORD PTR [rdx+0x148],0x1
  0x00007f003f2d5263: lea    rdx,[rsp+0x138]
  0x00007f003f2d526b: mov    QWORD PTR [rdx+0x8],rsi
  0x00007f003f2d526f: mov    rax,QWORD PTR [rsi]
  0x00007f003f2d5272: mov    rcx,rax
  0x00007f003f2d5275: and    rcx,0x7
  0x00007f003f2d5279: cmp    rcx,0x5
  0x00007f003f2d527d: jne    0x00007f003f2d5304
  0x00007f003f2d5283: mov    ecx,DWORD PTR [rsi+0x8]
  0x00007f003f2d5286: shl    rcx,0x3
  0x00007f003f2d528a: mov    rcx,QWORD PTR [rcx+0xa8]
  0x00007f003f2d5291: or     rcx,r15
  0x00007f003f2d5294: xor    rcx,rax
  0x00007f003f2d5297: and    rcx,0xffffffffffffff87
  0x00007f003f2d529b: je     0x00007f003f2d532c
  0x00007f003f2d52a1: test   rcx,0x7
  0x00007f003f2d52a8: jne    0x00007f003f2d52f1
  0x00007f003f2d52aa: test   rcx,0x300
  0x00007f003f2d52b1: jne    0x00007f003f2d52d0
  0x00007f003f2d52b3: and    rax,0x37f
  0x00007f003f2d52ba: mov    rcx,rax
  0x00007f003f2d52bd: or     rcx,r15
  0x00007f003f2d52c0: lock cmpxchg QWORD PTR [rsi],rcx
  0x00007f003f2d52c5: jne    0x00007f003f2d6581
  0x00007f003f2d52cb: jmp    0x00007f003f2d532c
  0x00007f003f2d52d0: mov    ecx,DWORD PTR [rsi+0x8]
  0x00007f003f2d52d3: shl    rcx,0x3
  0x00007f003f2d52d7: mov    rcx,QWORD PTR [rcx+0xa8]
  0x00007f003f2d52de: or     rcx,r15
  0x00007f003f2d52e1: lock cmpxchg QWORD PTR [rsi],rcx
  0x00007f003f2d52e6: jne    0x00007f003f2d6581
  0x00007f003f2d52ec: jmp    0x00007f003f2d532c
  0x00007f003f2d52f1: mov    ecx,DWORD PTR [rsi+0x8]
  0x00007f003f2d52f4: shl    rcx,0x3
  0x00007f003f2d52f8: mov    rcx,QWORD PTR [rcx+0xa8]
  0x00007f003f2d52ff: lock cmpxchg QWORD PTR [rsi],rcx
  0x00007f003f2d5304: mov    rax,QWORD PTR [rsi]
  0x00007f003f2d5307: or     rax,0x1
  0x00007f003f2d530b: mov    QWORD PTR [rdx],rax
  0x00007f003f2d530e: lock cmpxchg QWORD PTR [rsi],rdx
  0x00007f003f2d5313: je     0x00007f003f2d532c
  0x00007f003f2d5319: sub    rax,rsp
  0x00007f003f2d531c: and    rax,0xfffffffffffff007
  0x00007f003f2d5323: mov    QWORD PTR [rdx],rax
  0x00007f003f2d5326: jne    0x00007f003f2d6581  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)

  0x00007f003f2d532c: movabs rdx,0x7f0038a8b428  ;   {metadata(method data for {method} {0x00007f00389a1fa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d5336: mov    eax,DWORD PTR [rdx+0xfc]
  0x00007f003f2d533c: add    eax,0x8
  0x00007f003f2d533f: mov    DWORD PTR [rdx+0xfc],eax
  0x00007f003f2d5345: movabs rdx,0x7f00389a1fa0  ;   {metadata({method} {0x00007f00389a1fa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d534f: and    eax,0x7ffff8
  0x00007f003f2d5355: cmp    eax,0x0
  0x00007f003f2d5358: je     0x00007f003f2d6594
  0x00007f003f2d535e: mov    eax,DWORD PTR [rsi+0x10]
  0x00007f003f2d5361: shl    rax,0x3            ;*getfield lb {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)

  0x00007f003f2d5365: cmp    rax,QWORD PTR [rax]  ; implicit exception: dispatches to 0x00007f003f2d65ab
  0x00007f003f2d5368: mov    rdx,rax
  0x00007f003f2d536b: movabs rcx,0x7f0038a8b428  ;   {metadata(method data for {method} {0x00007f00389a1fa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d5375: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2d5378: shl    rdx,0x3
  0x00007f003f2d537c: cmp    rdx,QWORD PTR [rcx+0x140]
  0x00007f003f2d5383: jne    0x00007f003f2d5392
  0x00007f003f2d5385: add    QWORD PTR [rcx+0x148],0x1
  0x00007f003f2d538d: jmp    0x00007f003f2d5554
  0x00007f003f2d5392: cmp    rdx,QWORD PTR [rcx+0x150]
  0x00007f003f2d5399: jne    0x00007f003f2d53a8
  0x00007f003f2d539b: add    QWORD PTR [rcx+0x158],0x1
  0x00007f003f2d53a3: jmp    0x00007f003f2d5554
  0x00007f003f2d53a8: cmp    rdx,QWORD PTR [rcx+0x160]
  0x00007f003f2d53af: jne    0x00007f003f2d53be
  0x00007f003f2d53b1: add    QWORD PTR [rcx+0x168],0x1
  0x00007f003f2d53b9: jmp    0x00007f003f2d5554
  0x00007f003f2d53be: cmp    rdx,QWORD PTR [rcx+0x170]
  0x00007f003f2d53c5: jne    0x00007f003f2d53d4
  0x00007f003f2d53c7: add    QWORD PTR [rcx+0x178],0x1
  0x00007f003f2d53cf: jmp    0x00007f003f2d5554
  0x00007f003f2d53d4: cmp    rdx,QWORD PTR [rcx+0x180]
  0x00007f003f2d53db: jne    0x00007f003f2d53ea
  0x00007f003f2d53dd: add    QWORD PTR [rcx+0x188],0x1
  0x00007f003f2d53e5: jmp    0x00007f003f2d5554
  0x00007f003f2d53ea: cmp    rdx,QWORD PTR [rcx+0x190]
  0x00007f003f2d53f1: jne    0x00007f003f2d5400
  0x00007f003f2d53f3: add    QWORD PTR [rcx+0x198],0x1
  0x00007f003f2d53fb: jmp    0x00007f003f2d5554
  0x00007f003f2d5400: cmp    rdx,QWORD PTR [rcx+0x1a0]
  0x00007f003f2d5407: jne    0x00007f003f2d5416
  0x00007f003f2d5409: add    QWORD PTR [rcx+0x1a8],0x1
  0x00007f003f2d5411: jmp    0x00007f003f2d5554
  0x00007f003f2d5416: cmp    rdx,QWORD PTR [rcx+0x1b0]
  0x00007f003f2d541d: jne    0x00007f003f2d542c
  0x00007f003f2d541f: add    QWORD PTR [rcx+0x1b8],0x1
  0x00007f003f2d5427: jmp    0x00007f003f2d5554
  0x00007f003f2d542c: cmp    QWORD PTR [rcx+0x140],0x0
  0x00007f003f2d5437: jne    0x00007f003f2d5450
  0x00007f003f2d5439: mov    QWORD PTR [rcx+0x140],rdx
  0x00007f003f2d5440: mov    QWORD PTR [rcx+0x148],0x1
  0x00007f003f2d544b: jmp    0x00007f003f2d5554
  0x00007f003f2d5450: cmp    QWORD PTR [rcx+0x150],0x0
  0x00007f003f2d545b: jne    0x00007f003f2d5474
  0x00007f003f2d545d: mov    QWORD PTR [rcx+0x150],rdx
  0x00007f003f2d5464: mov    QWORD PTR [rcx+0x158],0x1
  0x00007f003f2d546f: jmp    0x00007f003f2d5554
  0x00007f003f2d5474: cmp    QWORD PTR [rcx+0x160],0x0
  0x00007f003f2d547f: jne    0x00007f003f2d5498
  0x00007f003f2d5481: mov    QWORD PTR [rcx+0x160],rdx
  0x00007f003f2d5488: mov    QWORD PTR [rcx+0x168],0x1
  0x00007f003f2d5493: jmp    0x00007f003f2d5554
  0x00007f003f2d5498: cmp    QWORD PTR [rcx+0x170],0x0
  0x00007f003f2d54a3: jne    0x00007f003f2d54bc
  0x00007f003f2d54a5: mov    QWORD PTR [rcx+0x170],rdx
  0x00007f003f2d54ac: mov    QWORD PTR [rcx+0x178],0x1
  0x00007f003f2d54b7: jmp    0x00007f003f2d5554
  0x00007f003f2d54bc: cmp    QWORD PTR [rcx+0x180],0x0
  0x00007f003f2d54c7: jne    0x00007f003f2d54e0
  0x00007f003f2d54c9: mov    QWORD PTR [rcx+0x180],rdx
  0x00007f003f2d54d0: mov    QWORD PTR [rcx+0x188],0x1
  0x00007f003f2d54db: jmp    0x00007f003f2d5554
  0x00007f003f2d54e0: cmp    QWORD PTR [rcx+0x190],0x0
  0x00007f003f2d54eb: jne    0x00007f003f2d5504
  0x00007f003f2d54ed: mov    QWORD PTR [rcx+0x190],rdx
  0x00007f003f2d54f4: mov    QWORD PTR [rcx+0x198],0x1
  0x00007f003f2d54ff: jmp    0x00007f003f2d5554
  0x00007f003f2d5504: cmp    QWORD PTR [rcx+0x1a0],0x0
  0x00007f003f2d550f: jne    0x00007f003f2d5528
  0x00007f003f2d5511: mov    QWORD PTR [rcx+0x1a0],rdx
  0x00007f003f2d5518: mov    QWORD PTR [rcx+0x1a8],0x1
  0x00007f003f2d5523: jmp    0x00007f003f2d5554
  0x00007f003f2d5528: cmp    QWORD PTR [rcx+0x1b0],0x0
  0x00007f003f2d5533: jne    0x00007f003f2d554c
  0x00007f003f2d5535: mov    QWORD PTR [rcx+0x1b0],rdx
  0x00007f003f2d553c: mov    QWORD PTR [rcx+0x1b8],0x1
  0x00007f003f2d5547: jmp    0x00007f003f2d5554
  0x00007f003f2d554c: add    QWORD PTR [rcx+0x130],0x1
  0x00007f003f2d5554: mov    edx,0x0
  0x00007f003f2d5559: mov    rsi,rax            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)

  0x00007f003f2d555c: nop
  0x00007f003f2d555d: movabs rax,0xffffffffffffffff
  0x00007f003f2d5567: call   0x00007f003f1c4f60  ; OopMap{[192]=Oop [168]=Oop [240]=Oop [248]=Oop [288]=Oop [304]=Oop [320]=Oop off=6476}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)
                                                ;   {virtual_call}
  0x00007f003f2d556c: mov    rdx,rax            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)

  0x00007f003f2d556f: lea    rax,[rsp+0x138]
  0x00007f003f2d5577: mov    rsi,QWORD PTR [rax+0x8]
  0x00007f003f2d557b: mov    rcx,QWORD PTR [rsi]
  0x00007f003f2d557e: and    rcx,0x7
  0x00007f003f2d5582: cmp    rcx,0x5
  0x00007f003f2d5586: je     0x00007f003f2d55a3
  0x00007f003f2d558c: mov    rcx,QWORD PTR [rax]
  0x00007f003f2d558f: test   rcx,rcx
  0x00007f003f2d5592: je     0x00007f003f2d55a3
  0x00007f003f2d5598: lock cmpxchg QWORD PTR [rsi],rcx
  0x00007f003f2d559d: jne    0x00007f003f2d65b0  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)

  0x00007f003f2d55a3: mov    rsi,QWORD PTR [rsp+0xf8]
  0x00007f003f2d55ab: mov    esi,DWORD PTR [rsi+0x10]
  0x00007f003f2d55ae: shl    rsi,0x3            ;*getfield lb {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@8 (line 98)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)

  0x00007f003f2d55b2: cmp    rax,QWORD PTR [rsi]  ; implicit exception: dispatches to 0x00007f003f2d65c6
  0x00007f003f2d55b5: mov    rcx,rsi
  0x00007f003f2d55b8: movabs rdi,0x7f0038a8b178  ;   {metadata(method data for {method} {0x00007f00389a2120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d55c2: mov    ecx,DWORD PTR [rcx+0x8]
  0x00007f003f2d55c5: shl    rcx,0x3
  0x00007f003f2d55c9: cmp    rcx,QWORD PTR [rdi+0x1d8]
  0x00007f003f2d55d0: jne    0x00007f003f2d55df
  0x00007f003f2d55d2: add    QWORD PTR [rdi+0x1e0],0x1
  0x00007f003f2d55da: jmp    0x00007f003f2d57a1
  0x00007f003f2d55df: cmp    rcx,QWORD PTR [rdi+0x1e8]
  0x00007f003f2d55e6: jne    0x00007f003f2d55f5
  0x00007f003f2d55e8: add    QWORD PTR [rdi+0x1f0],0x1
  0x00007f003f2d55f0: jmp    0x00007f003f2d57a1
  0x00007f003f2d55f5: cmp    rcx,QWORD PTR [rdi+0x1f8]
  0x00007f003f2d55fc: jne    0x00007f003f2d560b
  0x00007f003f2d55fe: add    QWORD PTR [rdi+0x200],0x1
  0x00007f003f2d5606: jmp    0x00007f003f2d57a1
  0x00007f003f2d560b: cmp    rcx,QWORD PTR [rdi+0x208]
  0x00007f003f2d5612: jne    0x00007f003f2d5621
  0x00007f003f2d5614: add    QWORD PTR [rdi+0x210],0x1
  0x00007f003f2d561c: jmp    0x00007f003f2d57a1
  0x00007f003f2d5621: cmp    rcx,QWORD PTR [rdi+0x218]
  0x00007f003f2d5628: jne    0x00007f003f2d5637
  0x00007f003f2d562a: add    QWORD PTR [rdi+0x220],0x1
  0x00007f003f2d5632: jmp    0x00007f003f2d57a1
  0x00007f003f2d5637: cmp    rcx,QWORD PTR [rdi+0x228]
  0x00007f003f2d563e: jne    0x00007f003f2d564d
  0x00007f003f2d5640: add    QWORD PTR [rdi+0x230],0x1
  0x00007f003f2d5648: jmp    0x00007f003f2d57a1
  0x00007f003f2d564d: cmp    rcx,QWORD PTR [rdi+0x238]
  0x00007f003f2d5654: jne    0x00007f003f2d5663
  0x00007f003f2d5656: add    QWORD PTR [rdi+0x240],0x1
  0x00007f003f2d565e: jmp    0x00007f003f2d57a1
  0x00007f003f2d5663: cmp    rcx,QWORD PTR [rdi+0x248]
  0x00007f003f2d566a: jne    0x00007f003f2d5679
  0x00007f003f2d566c: add    QWORD PTR [rdi+0x250],0x1
  0x00007f003f2d5674: jmp    0x00007f003f2d57a1
  0x00007f003f2d5679: cmp    QWORD PTR [rdi+0x1d8],0x0
  0x00007f003f2d5684: jne    0x00007f003f2d569d
  0x00007f003f2d5686: mov    QWORD PTR [rdi+0x1d8],rcx
  0x00007f003f2d568d: mov    QWORD PTR [rdi+0x1e0],0x1
  0x00007f003f2d5698: jmp    0x00007f003f2d57a1
  0x00007f003f2d569d: cmp    QWORD PTR [rdi+0x1e8],0x0
  0x00007f003f2d56a8: jne    0x00007f003f2d56c1
  0x00007f003f2d56aa: mov    QWORD PTR [rdi+0x1e8],rcx
  0x00007f003f2d56b1: mov    QWORD PTR [rdi+0x1f0],0x1
  0x00007f003f2d56bc: jmp    0x00007f003f2d57a1
  0x00007f003f2d56c1: cmp    QWORD PTR [rdi+0x1f8],0x0
  0x00007f003f2d56cc: jne    0x00007f003f2d56e5
  0x00007f003f2d56ce: mov    QWORD PTR [rdi+0x1f8],rcx
  0x00007f003f2d56d5: mov    QWORD PTR [rdi+0x200],0x1
  0x00007f003f2d56e0: jmp    0x00007f003f2d57a1
  0x00007f003f2d56e5: cmp    QWORD PTR [rdi+0x208],0x0
  0x00007f003f2d56f0: jne    0x00007f003f2d5709
  0x00007f003f2d56f2: mov    QWORD PTR [rdi+0x208],rcx
  0x00007f003f2d56f9: mov    QWORD PTR [rdi+0x210],0x1
  0x00007f003f2d5704: jmp    0x00007f003f2d57a1
  0x00007f003f2d5709: cmp    QWORD PTR [rdi+0x218],0x0
  0x00007f003f2d5714: jne    0x00007f003f2d572d
  0x00007f003f2d5716: mov    QWORD PTR [rdi+0x218],rcx
  0x00007f003f2d571d: mov    QWORD PTR [rdi+0x220],0x1
  0x00007f003f2d5728: jmp    0x00007f003f2d57a1
  0x00007f003f2d572d: cmp    QWORD PTR [rdi+0x228],0x0
  0x00007f003f2d5738: jne    0x00007f003f2d5751
  0x00007f003f2d573a: mov    QWORD PTR [rdi+0x228],rcx
  0x00007f003f2d5741: mov    QWORD PTR [rdi+0x230],0x1
  0x00007f003f2d574c: jmp    0x00007f003f2d57a1
  0x00007f003f2d5751: cmp    QWORD PTR [rdi+0x238],0x0
  0x00007f003f2d575c: jne    0x00007f003f2d5775
  0x00007f003f2d575e: mov    QWORD PTR [rdi+0x238],rcx
  0x00007f003f2d5765: mov    QWORD PTR [rdi+0x240],0x1
  0x00007f003f2d5770: jmp    0x00007f003f2d57a1
  0x00007f003f2d5775: cmp    QWORD PTR [rdi+0x248],0x0
  0x00007f003f2d5780: jne    0x00007f003f2d5799
  0x00007f003f2d5782: mov    QWORD PTR [rdi+0x248],rcx
  0x00007f003f2d5789: mov    QWORD PTR [rdi+0x250],0x1
  0x00007f003f2d5794: jmp    0x00007f003f2d57a1
  0x00007f003f2d5799: add    QWORD PTR [rdi+0x1c8],0x1
  0x00007f003f2d57a1: mov    rcx,rdx
  0x00007f003f2d57a4: mov    rax,QWORD PTR [rsp+0x100]
  0x00007f003f2d57ac: add    rcx,rax
  0x00007f003f2d57af: mov    edx,0x0            ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@13 (line 98)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)

  0x00007f003f2d57b4: nop
  0x00007f003f2d57b5: movabs rax,0xffffffffffffffff
  0x00007f003f2d57bf: call   0x00007f003f1c4f60  ; OopMap{[192]=Oop [168]=Oop [240]=Oop [288]=Oop [304]=Oop off=7076}
                                                ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@13 (line 98)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)
                                                ;   {virtual_call}
  0x00007f003f2d57c4: lea    rax,[rsp+0x128]
  0x00007f003f2d57cc: mov    rsi,QWORD PTR [rax+0x8]
  0x00007f003f2d57d0: mov    rdx,QWORD PTR [rsi]
  0x00007f003f2d57d3: and    rdx,0x7
  0x00007f003f2d57d7: cmp    rdx,0x5
  0x00007f003f2d57db: je     0x00007f003f2d57f8
  0x00007f003f2d57e1: mov    rdx,QWORD PTR [rax]
  0x00007f003f2d57e4: test   rdx,rdx
  0x00007f003f2d57e7: je     0x00007f003f2d57f8
  0x00007f003f2d57ed: lock cmpxchg QWORD PTR [rsi],rdx
  0x00007f003f2d57f2: jne    0x00007f003f2d65cb  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)

  0x00007f003f2d57f8: movabs rax,0x7f0038a8ee00  ;   {metadata(method data for {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d5802: add    QWORD PTR [rax+0x5a0],0x1
  0x00007f003f2d580a: movabs rax,0x7f0038a901d0  ;   {metadata(method data for {method} {0x00007f00389a2488} &apos;getFindClasses&apos; &apos;()Lsun/misc/PerfCounter;&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d5814: mov    edx,DWORD PTR [rax+0xfc]
  0x00007f003f2d581a: add    edx,0x8
  0x00007f003f2d581d: mov    DWORD PTR [rax+0xfc],edx
  0x00007f003f2d5823: movabs rax,0x7f00389a2488  ;   {metadata({method} {0x00007f00389a2488} &apos;getFindClasses&apos; &apos;()Lsun/misc/PerfCounter;&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d582d: and    edx,0x7ffff8
  0x00007f003f2d5833: cmp    edx,0x0
  0x00007f003f2d5836: je     0x00007f003f2d65e1
  0x00007f003f2d583c: movabs rdi,0x670bdf6c8    ;   {oop(a &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d5846: mov    rax,rdi
  0x00007f003f2d5849: movabs rdx,0x7f0038a8ee00  ;   {metadata(method data for {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d5853: movabs r10,0x7c003c418    ;   {metadata(&apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d585d: mov    QWORD PTR [rdx+0x5c0],r10
  0x00007f003f2d5864: add    QWORD PTR [rdx+0x5c8],0x1
  0x00007f003f2d586c: movabs rax,0x7f0038a90318  ;   {metadata(method data for {method} {0x00007f00389a21c8} &apos;increment&apos; &apos;()V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d5876: mov    edx,DWORD PTR [rax+0xfc]
  0x00007f003f2d587c: add    edx,0x8
  0x00007f003f2d587f: mov    DWORD PTR [rax+0xfc],edx
  0x00007f003f2d5885: movabs rax,0x7f00389a21c8  ;   {metadata({method} {0x00007f00389a21c8} &apos;increment&apos; &apos;()V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d588f: and    edx,0x7ffff8
  0x00007f003f2d5895: cmp    edx,0x0
  0x00007f003f2d5898: je     0x00007f003f2d65f8
  0x00007f003f2d589e: mov    rax,rdi
  0x00007f003f2d58a1: movabs rdx,0x7f0038a90318  ;   {metadata(method data for {method} {0x00007f00389a21c8} &apos;increment&apos; &apos;()V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d58ab: movabs r10,0x7c003c418    ;   {metadata(&apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d58b5: mov    QWORD PTR [rdx+0x140],r10
  0x00007f003f2d58bc: add    QWORD PTR [rdx+0x148],0x1
  0x00007f003f2d58c4: lea    rdx,[rsp+0x128]
  0x00007f003f2d58cc: mov    QWORD PTR [rdx+0x8],rdi
  0x00007f003f2d58d0: mov    rax,QWORD PTR [rdi]  ; implicit exception: dispatches to 0x00007f003f2d660f
  0x00007f003f2d58d3: mov    rsi,rax
  0x00007f003f2d58d6: and    rsi,0x7
  0x00007f003f2d58da: cmp    rsi,0x5
  0x00007f003f2d58de: jne    0x00007f003f2d5965
  0x00007f003f2d58e4: mov    esi,DWORD PTR [rdi+0x8]
  0x00007f003f2d58e7: shl    rsi,0x3
  0x00007f003f2d58eb: mov    rsi,QWORD PTR [rsi+0xa8]
  0x00007f003f2d58f2: or     rsi,r15
  0x00007f003f2d58f5: xor    rsi,rax
  0x00007f003f2d58f8: and    rsi,0xffffffffffffff87
  0x00007f003f2d58fc: je     0x00007f003f2d598d
  0x00007f003f2d5902: test   rsi,0x7
  0x00007f003f2d5909: jne    0x00007f003f2d5952
  0x00007f003f2d590b: test   rsi,0x300
  0x00007f003f2d5912: jne    0x00007f003f2d5931
  0x00007f003f2d5914: and    rax,0x37f
  0x00007f003f2d591b: mov    rsi,rax
  0x00007f003f2d591e: or     rsi,r15
  0x00007f003f2d5921: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2d5926: jne    0x00007f003f2d6614
  0x00007f003f2d592c: jmp    0x00007f003f2d598d
  0x00007f003f2d5931: mov    esi,DWORD PTR [rdi+0x8]
  0x00007f003f2d5934: shl    rsi,0x3
  0x00007f003f2d5938: mov    rsi,QWORD PTR [rsi+0xa8]
  0x00007f003f2d593f: or     rsi,r15
  0x00007f003f2d5942: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2d5947: jne    0x00007f003f2d6614
  0x00007f003f2d594d: jmp    0x00007f003f2d598d
  0x00007f003f2d5952: mov    esi,DWORD PTR [rdi+0x8]
  0x00007f003f2d5955: shl    rsi,0x3
  0x00007f003f2d5959: mov    rsi,QWORD PTR [rsi+0xa8]
  0x00007f003f2d5960: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2d5965: mov    rax,QWORD PTR [rdi]
  0x00007f003f2d5968: or     rax,0x1
  0x00007f003f2d596c: mov    QWORD PTR [rdx],rax
  0x00007f003f2d596f: lock cmpxchg QWORD PTR [rdi],rdx
  0x00007f003f2d5974: je     0x00007f003f2d598d
  0x00007f003f2d597a: sub    rax,rsp
  0x00007f003f2d597d: and    rax,0xfffffffffffff007
  0x00007f003f2d5984: mov    QWORD PTR [rdx],rax
  0x00007f003f2d5987: jne    0x00007f003f2d6614  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)

  0x00007f003f2d598d: movabs rax,0x7f0038a8b178  ;   {metadata(method data for {method} {0x00007f00389a2120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d5997: mov    edx,DWORD PTR [rax+0xfc]
  0x00007f003f2d599d: add    edx,0x8
  0x00007f003f2d59a0: mov    DWORD PTR [rax+0xfc],edx
  0x00007f003f2d59a6: movabs rax,0x7f00389a2120  ;   {metadata({method} {0x00007f00389a2120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d59b0: and    edx,0x7ffff8
  0x00007f003f2d59b6: cmp    edx,0x0
  0x00007f003f2d59b9: je     0x00007f003f2d6627
  0x00007f003f2d59bf: mov    rax,rdi
  0x00007f003f2d59c2: movabs rdx,0x7f0038a8b178  ;   {metadata(method data for {method} {0x00007f00389a2120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d59cc: add    QWORD PTR [rdx+0x148],0x1
  0x00007f003f2d59d4: lea    rdx,[rsp+0x138]
  0x00007f003f2d59dc: mov    QWORD PTR [rdx+0x8],rdi
  0x00007f003f2d59e0: mov    rax,QWORD PTR [rdi]
  0x00007f003f2d59e3: mov    rsi,rax
  0x00007f003f2d59e6: and    rsi,0x7
  0x00007f003f2d59ea: cmp    rsi,0x5
  0x00007f003f2d59ee: jne    0x00007f003f2d5a75
  0x00007f003f2d59f4: mov    esi,DWORD PTR [rdi+0x8]
  0x00007f003f2d59f7: shl    rsi,0x3
  0x00007f003f2d59fb: mov    rsi,QWORD PTR [rsi+0xa8]
  0x00007f003f2d5a02: or     rsi,r15
  0x00007f003f2d5a05: xor    rsi,rax
  0x00007f003f2d5a08: and    rsi,0xffffffffffffff87
  0x00007f003f2d5a0c: je     0x00007f003f2d5a9d
  0x00007f003f2d5a12: test   rsi,0x7
  0x00007f003f2d5a19: jne    0x00007f003f2d5a62
  0x00007f003f2d5a1b: test   rsi,0x300
  0x00007f003f2d5a22: jne    0x00007f003f2d5a41
  0x00007f003f2d5a24: and    rax,0x37f
  0x00007f003f2d5a2b: mov    rsi,rax
  0x00007f003f2d5a2e: or     rsi,r15
  0x00007f003f2d5a31: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2d5a36: jne    0x00007f003f2d663e
  0x00007f003f2d5a3c: jmp    0x00007f003f2d5a9d
  0x00007f003f2d5a41: mov    esi,DWORD PTR [rdi+0x8]
  0x00007f003f2d5a44: shl    rsi,0x3
  0x00007f003f2d5a48: mov    rsi,QWORD PTR [rsi+0xa8]
  0x00007f003f2d5a4f: or     rsi,r15
  0x00007f003f2d5a52: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2d5a57: jne    0x00007f003f2d663e
  0x00007f003f2d5a5d: jmp    0x00007f003f2d5a9d
  0x00007f003f2d5a62: mov    esi,DWORD PTR [rdi+0x8]
  0x00007f003f2d5a65: shl    rsi,0x3
  0x00007f003f2d5a69: mov    rsi,QWORD PTR [rsi+0xa8]
  0x00007f003f2d5a70: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2d5a75: mov    rax,QWORD PTR [rdi]
  0x00007f003f2d5a78: or     rax,0x1
  0x00007f003f2d5a7c: mov    QWORD PTR [rdx],rax
  0x00007f003f2d5a7f: lock cmpxchg QWORD PTR [rdi],rdx
  0x00007f003f2d5a84: je     0x00007f003f2d5a9d
  0x00007f003f2d5a8a: sub    rax,rsp
  0x00007f003f2d5a8d: and    rax,0xfffffffffffff007
  0x00007f003f2d5a94: mov    QWORD PTR [rdx],rax
  0x00007f003f2d5a97: jne    0x00007f003f2d663e  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)

  0x00007f003f2d5a9d: movabs rdx,0x7f0038a8b428  ;   {metadata(method data for {method} {0x00007f00389a1fa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d5aa7: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2d5aad: add    esi,0x8
  0x00007f003f2d5ab0: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2d5ab6: movabs rdx,0x7f00389a1fa0  ;   {metadata({method} {0x00007f00389a1fa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d5ac0: and    esi,0x7ffff8
  0x00007f003f2d5ac6: cmp    esi,0x0
  0x00007f003f2d5ac9: je     0x00007f003f2d6651
  0x00007f003f2d5acf: mov    esi,DWORD PTR [rdi+0x10]
  0x00007f003f2d5ad2: shl    rsi,0x3            ;*getfield lb {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)

  0x00007f003f2d5ad6: cmp    rax,QWORD PTR [rsi]  ; implicit exception: dispatches to 0x00007f003f2d6668
  0x00007f003f2d5ad9: mov    rdx,rsi
  0x00007f003f2d5adc: movabs rbx,0x7f0038a8b428  ;   {metadata(method data for {method} {0x00007f00389a1fa0} &apos;get&apos; &apos;()J&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d5ae6: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2d5ae9: shl    rdx,0x3
  0x00007f003f2d5aed: cmp    rdx,QWORD PTR [rbx+0x140]
  0x00007f003f2d5af4: jne    0x00007f003f2d5b03
  0x00007f003f2d5af6: add    QWORD PTR [rbx+0x148],0x1
  0x00007f003f2d5afe: jmp    0x00007f003f2d5cc5
  0x00007f003f2d5b03: cmp    rdx,QWORD PTR [rbx+0x150]
  0x00007f003f2d5b0a: jne    0x00007f003f2d5b19
  0x00007f003f2d5b0c: add    QWORD PTR [rbx+0x158],0x1
  0x00007f003f2d5b14: jmp    0x00007f003f2d5cc5
  0x00007f003f2d5b19: cmp    rdx,QWORD PTR [rbx+0x160]
  0x00007f003f2d5b20: jne    0x00007f003f2d5b2f
  0x00007f003f2d5b22: add    QWORD PTR [rbx+0x168],0x1
  0x00007f003f2d5b2a: jmp    0x00007f003f2d5cc5
  0x00007f003f2d5b2f: cmp    rdx,QWORD PTR [rbx+0x170]
  0x00007f003f2d5b36: jne    0x00007f003f2d5b45
  0x00007f003f2d5b38: add    QWORD PTR [rbx+0x178],0x1
  0x00007f003f2d5b40: jmp    0x00007f003f2d5cc5
  0x00007f003f2d5b45: cmp    rdx,QWORD PTR [rbx+0x180]
  0x00007f003f2d5b4c: jne    0x00007f003f2d5b5b
  0x00007f003f2d5b4e: add    QWORD PTR [rbx+0x188],0x1
  0x00007f003f2d5b56: jmp    0x00007f003f2d5cc5
  0x00007f003f2d5b5b: cmp    rdx,QWORD PTR [rbx+0x190]
  0x00007f003f2d5b62: jne    0x00007f003f2d5b71
  0x00007f003f2d5b64: add    QWORD PTR [rbx+0x198],0x1
  0x00007f003f2d5b6c: jmp    0x00007f003f2d5cc5
  0x00007f003f2d5b71: cmp    rdx,QWORD PTR [rbx+0x1a0]
  0x00007f003f2d5b78: jne    0x00007f003f2d5b87
  0x00007f003f2d5b7a: add    QWORD PTR [rbx+0x1a8],0x1
  0x00007f003f2d5b82: jmp    0x00007f003f2d5cc5
  0x00007f003f2d5b87: cmp    rdx,QWORD PTR [rbx+0x1b0]
  0x00007f003f2d5b8e: jne    0x00007f003f2d5b9d
  0x00007f003f2d5b90: add    QWORD PTR [rbx+0x1b8],0x1
  0x00007f003f2d5b98: jmp    0x00007f003f2d5cc5
  0x00007f003f2d5b9d: cmp    QWORD PTR [rbx+0x140],0x0
  0x00007f003f2d5ba8: jne    0x00007f003f2d5bc1
  0x00007f003f2d5baa: mov    QWORD PTR [rbx+0x140],rdx
  0x00007f003f2d5bb1: mov    QWORD PTR [rbx+0x148],0x1
  0x00007f003f2d5bbc: jmp    0x00007f003f2d5cc5
  0x00007f003f2d5bc1: cmp    QWORD PTR [rbx+0x150],0x0
  0x00007f003f2d5bcc: jne    0x00007f003f2d5be5
  0x00007f003f2d5bce: mov    QWORD PTR [rbx+0x150],rdx
  0x00007f003f2d5bd5: mov    QWORD PTR [rbx+0x158],0x1
  0x00007f003f2d5be0: jmp    0x00007f003f2d5cc5
  0x00007f003f2d5be5: cmp    QWORD PTR [rbx+0x160],0x0
  0x00007f003f2d5bf0: jne    0x00007f003f2d5c09
  0x00007f003f2d5bf2: mov    QWORD PTR [rbx+0x160],rdx
  0x00007f003f2d5bf9: mov    QWORD PTR [rbx+0x168],0x1
  0x00007f003f2d5c04: jmp    0x00007f003f2d5cc5
  0x00007f003f2d5c09: cmp    QWORD PTR [rbx+0x170],0x0
  0x00007f003f2d5c14: jne    0x00007f003f2d5c2d
  0x00007f003f2d5c16: mov    QWORD PTR [rbx+0x170],rdx
  0x00007f003f2d5c1d: mov    QWORD PTR [rbx+0x178],0x1
  0x00007f003f2d5c28: jmp    0x00007f003f2d5cc5
  0x00007f003f2d5c2d: cmp    QWORD PTR [rbx+0x180],0x0
  0x00007f003f2d5c38: jne    0x00007f003f2d5c51
  0x00007f003f2d5c3a: mov    QWORD PTR [rbx+0x180],rdx
  0x00007f003f2d5c41: mov    QWORD PTR [rbx+0x188],0x1
  0x00007f003f2d5c4c: jmp    0x00007f003f2d5cc5
  0x00007f003f2d5c51: cmp    QWORD PTR [rbx+0x190],0x0
  0x00007f003f2d5c5c: jne    0x00007f003f2d5c75
  0x00007f003f2d5c5e: mov    QWORD PTR [rbx+0x190],rdx
  0x00007f003f2d5c65: mov    QWORD PTR [rbx+0x198],0x1
  0x00007f003f2d5c70: jmp    0x00007f003f2d5cc5
  0x00007f003f2d5c75: cmp    QWORD PTR [rbx+0x1a0],0x0
  0x00007f003f2d5c80: jne    0x00007f003f2d5c99
  0x00007f003f2d5c82: mov    QWORD PTR [rbx+0x1a0],rdx
  0x00007f003f2d5c89: mov    QWORD PTR [rbx+0x1a8],0x1
  0x00007f003f2d5c94: jmp    0x00007f003f2d5cc5
  0x00007f003f2d5c99: cmp    QWORD PTR [rbx+0x1b0],0x0
  0x00007f003f2d5ca4: jne    0x00007f003f2d5cbd
  0x00007f003f2d5ca6: mov    QWORD PTR [rbx+0x1b0],rdx
  0x00007f003f2d5cad: mov    QWORD PTR [rbx+0x1b8],0x1
  0x00007f003f2d5cb8: jmp    0x00007f003f2d5cc5
  0x00007f003f2d5cbd: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f2d5cc5: mov    edx,0x0            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)

  0x00007f003f2d5cca: mov    QWORD PTR [rsp+0x108],rdi
  0x00007f003f2d5cd2: nop
  0x00007f003f2d5cd3: nop
  0x00007f003f2d5cd4: nop
  0x00007f003f2d5cd5: movabs rax,0xffffffffffffffff
  0x00007f003f2d5cdf: call   0x00007f003f1c4f60  ; OopMap{[192]=Oop [168]=Oop [240]=Oop [264]=Oop [288]=Oop [304]=Oop [320]=Oop off=8388}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)
                                                ;   {virtual_call}
  0x00007f003f2d5ce4: mov    rdx,rax            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)

  0x00007f003f2d5ce7: lea    rax,[rsp+0x138]
  0x00007f003f2d5cef: mov    rsi,QWORD PTR [rax+0x8]
  0x00007f003f2d5cf3: mov    rcx,QWORD PTR [rsi]
  0x00007f003f2d5cf6: and    rcx,0x7
  0x00007f003f2d5cfa: cmp    rcx,0x5
  0x00007f003f2d5cfe: je     0x00007f003f2d5d1b
  0x00007f003f2d5d04: mov    rcx,QWORD PTR [rax]
  0x00007f003f2d5d07: test   rcx,rcx
  0x00007f003f2d5d0a: je     0x00007f003f2d5d1b
  0x00007f003f2d5d10: lock cmpxchg QWORD PTR [rsi],rcx
  0x00007f003f2d5d15: jne    0x00007f003f2d666d  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)

  0x00007f003f2d5d1b: mov    rdi,QWORD PTR [rsp+0x108]
  0x00007f003f2d5d23: mov    esi,DWORD PTR [rdi+0x10]
  0x00007f003f2d5d26: shl    rsi,0x3            ;*getfield lb {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@8 (line 98)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)

  0x00007f003f2d5d2a: cmp    rax,QWORD PTR [rsi]  ; implicit exception: dispatches to 0x00007f003f2d6683
  0x00007f003f2d5d2d: mov    rcx,rsi
  0x00007f003f2d5d30: movabs rdi,0x7f0038a8b178  ;   {metadata(method data for {method} {0x00007f00389a2120} &apos;add&apos; &apos;(J)V&apos; in &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d5d3a: mov    ecx,DWORD PTR [rcx+0x8]
  0x00007f003f2d5d3d: shl    rcx,0x3
  0x00007f003f2d5d41: cmp    rcx,QWORD PTR [rdi+0x1d8]
  0x00007f003f2d5d48: jne    0x00007f003f2d5d57
  0x00007f003f2d5d4a: add    QWORD PTR [rdi+0x1e0],0x1
  0x00007f003f2d5d52: jmp    0x00007f003f2d5f19
  0x00007f003f2d5d57: cmp    rcx,QWORD PTR [rdi+0x1e8]
  0x00007f003f2d5d5e: jne    0x00007f003f2d5d6d
  0x00007f003f2d5d60: add    QWORD PTR [rdi+0x1f0],0x1
  0x00007f003f2d5d68: jmp    0x00007f003f2d5f19
  0x00007f003f2d5d6d: cmp    rcx,QWORD PTR [rdi+0x1f8]
  0x00007f003f2d5d74: jne    0x00007f003f2d5d83
  0x00007f003f2d5d76: add    QWORD PTR [rdi+0x200],0x1
  0x00007f003f2d5d7e: jmp    0x00007f003f2d5f19
  0x00007f003f2d5d83: cmp    rcx,QWORD PTR [rdi+0x208]
  0x00007f003f2d5d8a: jne    0x00007f003f2d5d99
  0x00007f003f2d5d8c: add    QWORD PTR [rdi+0x210],0x1
  0x00007f003f2d5d94: jmp    0x00007f003f2d5f19
  0x00007f003f2d5d99: cmp    rcx,QWORD PTR [rdi+0x218]
  0x00007f003f2d5da0: jne    0x00007f003f2d5daf
  0x00007f003f2d5da2: add    QWORD PTR [rdi+0x220],0x1
  0x00007f003f2d5daa: jmp    0x00007f003f2d5f19
  0x00007f003f2d5daf: cmp    rcx,QWORD PTR [rdi+0x228]
  0x00007f003f2d5db6: jne    0x00007f003f2d5dc5
  0x00007f003f2d5db8: add    QWORD PTR [rdi+0x230],0x1
  0x00007f003f2d5dc0: jmp    0x00007f003f2d5f19
  0x00007f003f2d5dc5: cmp    rcx,QWORD PTR [rdi+0x238]
  0x00007f003f2d5dcc: jne    0x00007f003f2d5ddb
  0x00007f003f2d5dce: add    QWORD PTR [rdi+0x240],0x1
  0x00007f003f2d5dd6: jmp    0x00007f003f2d5f19
  0x00007f003f2d5ddb: cmp    rcx,QWORD PTR [rdi+0x248]
  0x00007f003f2d5de2: jne    0x00007f003f2d5df1
  0x00007f003f2d5de4: add    QWORD PTR [rdi+0x250],0x1
  0x00007f003f2d5dec: jmp    0x00007f003f2d5f19
  0x00007f003f2d5df1: cmp    QWORD PTR [rdi+0x1d8],0x0
  0x00007f003f2d5dfc: jne    0x00007f003f2d5e15
  0x00007f003f2d5dfe: mov    QWORD PTR [rdi+0x1d8],rcx
  0x00007f003f2d5e05: mov    QWORD PTR [rdi+0x1e0],0x1
  0x00007f003f2d5e10: jmp    0x00007f003f2d5f19
  0x00007f003f2d5e15: cmp    QWORD PTR [rdi+0x1e8],0x0
  0x00007f003f2d5e20: jne    0x00007f003f2d5e39
  0x00007f003f2d5e22: mov    QWORD PTR [rdi+0x1e8],rcx
  0x00007f003f2d5e29: mov    QWORD PTR [rdi+0x1f0],0x1
  0x00007f003f2d5e34: jmp    0x00007f003f2d5f19
  0x00007f003f2d5e39: cmp    QWORD PTR [rdi+0x1f8],0x0
  0x00007f003f2d5e44: jne    0x00007f003f2d5e5d
  0x00007f003f2d5e46: mov    QWORD PTR [rdi+0x1f8],rcx
  0x00007f003f2d5e4d: mov    QWORD PTR [rdi+0x200],0x1
  0x00007f003f2d5e58: jmp    0x00007f003f2d5f19
  0x00007f003f2d5e5d: cmp    QWORD PTR [rdi+0x208],0x0
  0x00007f003f2d5e68: jne    0x00007f003f2d5e81
  0x00007f003f2d5e6a: mov    QWORD PTR [rdi+0x208],rcx
  0x00007f003f2d5e71: mov    QWORD PTR [rdi+0x210],0x1
  0x00007f003f2d5e7c: jmp    0x00007f003f2d5f19
  0x00007f003f2d5e81: cmp    QWORD PTR [rdi+0x218],0x0
  0x00007f003f2d5e8c: jne    0x00007f003f2d5ea5
  0x00007f003f2d5e8e: mov    QWORD PTR [rdi+0x218],rcx
  0x00007f003f2d5e95: mov    QWORD PTR [rdi+0x220],0x1
  0x00007f003f2d5ea0: jmp    0x00007f003f2d5f19
  0x00007f003f2d5ea5: cmp    QWORD PTR [rdi+0x228],0x0
  0x00007f003f2d5eb0: jne    0x00007f003f2d5ec9
  0x00007f003f2d5eb2: mov    QWORD PTR [rdi+0x228],rcx
  0x00007f003f2d5eb9: mov    QWORD PTR [rdi+0x230],0x1
  0x00007f003f2d5ec4: jmp    0x00007f003f2d5f19
  0x00007f003f2d5ec9: cmp    QWORD PTR [rdi+0x238],0x0
  0x00007f003f2d5ed4: jne    0x00007f003f2d5eed
  0x00007f003f2d5ed6: mov    QWORD PTR [rdi+0x238],rcx
  0x00007f003f2d5edd: mov    QWORD PTR [rdi+0x240],0x1
  0x00007f003f2d5ee8: jmp    0x00007f003f2d5f19
  0x00007f003f2d5eed: cmp    QWORD PTR [rdi+0x248],0x0
  0x00007f003f2d5ef8: jne    0x00007f003f2d5f11
  0x00007f003f2d5efa: mov    QWORD PTR [rdi+0x248],rcx
  0x00007f003f2d5f01: mov    QWORD PTR [rdi+0x250],0x1
  0x00007f003f2d5f0c: jmp    0x00007f003f2d5f19
  0x00007f003f2d5f11: add    QWORD PTR [rdi+0x1c8],0x1
  0x00007f003f2d5f19: movabs rcx,0x1
  0x00007f003f2d5f23: mov    rdi,rdx
  0x00007f003f2d5f26: add    rdi,rcx
  0x00007f003f2d5f29: mov    edx,0x0
  0x00007f003f2d5f2e: mov    rcx,rdi            ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@13 (line 98)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)

  0x00007f003f2d5f31: nop
  0x00007f003f2d5f32: nop
  0x00007f003f2d5f33: nop
  0x00007f003f2d5f34: nop
  0x00007f003f2d5f35: movabs rax,0xffffffffffffffff
  0x00007f003f2d5f3f: call   0x00007f003f1c4f60  ; OopMap{[192]=Oop [168]=Oop [240]=Oop [288]=Oop [304]=Oop off=8996}
                                                ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@13 (line 98)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)
                                                ;   {virtual_call}
  0x00007f003f2d5f44: lea    rax,[rsp+0x128]
  0x00007f003f2d5f4c: mov    rsi,QWORD PTR [rax+0x8]
  0x00007f003f2d5f50: mov    rdx,QWORD PTR [rsi]
  0x00007f003f2d5f53: and    rdx,0x7
  0x00007f003f2d5f57: cmp    rdx,0x5
  0x00007f003f2d5f5b: je     0x00007f003f2d5f78
  0x00007f003f2d5f61: mov    rdx,QWORD PTR [rax]
  0x00007f003f2d5f64: test   rdx,rdx
  0x00007f003f2d5f67: je     0x00007f003f2d5f78
  0x00007f003f2d5f6d: lock cmpxchg QWORD PTR [rsi],rdx
  0x00007f003f2d5f72: jne    0x00007f003f2d6688  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)

  0x00007f003f2d5f78: mov    rsi,QWORD PTR [rsp+0xf0]  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@100 (line 432)

  0x00007f003f2d5f80: mov    ecx,DWORD PTR [rsp+0xb8]
  0x00007f003f2d5f87: cmp    ecx,0x0
  0x00007f003f2d5f8a: movabs rdx,0x7f0038a8ee00  ;   {metadata(method data for {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d5f94: movabs rdi,0x648
  0x00007f003f2d5f9e: je     0x00007f003f2d5fae
  0x00007f003f2d5fa4: movabs rdi,0x658
  0x00007f003f2d5fae: mov    rbx,QWORD PTR [rdx+rdi*1]
  0x00007f003f2d5fb2: lea    rbx,[rbx+0x1]
  0x00007f003f2d5fb6: mov    QWORD PTR [rdx+rdi*1],rbx
  0x00007f003f2d5fba: jne    0x00007f003f2d5fcd  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@101 (line 432)

  0x00007f003f2d5fc0: mov    QWORD PTR [rsp+0x110],rsi
  0x00007f003f2d5fc8: jmp    0x00007f003f2d604c  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@110 (line 435)

  0x00007f003f2d5fcd: mov    rdx,QWORD PTR [rsp+0xa8]
  0x00007f003f2d5fd5: movabs rdi,0x7f0038a8ee00  ;   {metadata(method data for {method} {0x00007f003877dd00} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d5fdf: add    QWORD PTR [rdi+0x668],0x1
  0x00007f003f2d5fe7: movabs rdx,0x7f0038a90520  ;   {metadata(method data for {method} {0x00007f003877ef38} &apos;resolveClass&apos; &apos;(Ljava/lang/Class;)V&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d5ff1: mov    edi,DWORD PTR [rdx+0xfc]
  0x00007f003f2d5ff7: add    edi,0x8
  0x00007f003f2d5ffa: mov    DWORD PTR [rdx+0xfc],edi
  0x00007f003f2d6000: movabs rdx,0x7f003877ef38  ;   {metadata({method} {0x00007f003877ef38} &apos;resolveClass&apos; &apos;(Ljava/lang/Class;)V&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d600a: and    edi,0x7ffff8
  0x00007f003f2d6010: cmp    edi,0x0
  0x00007f003f2d6013: je     0x00007f003f2d669e
  0x00007f003f2d6019: mov    rdx,QWORD PTR [rsp+0xa8]
  0x00007f003f2d6021: movabs rdi,0x7f0038a90520  ;   {metadata(method data for {method} {0x00007f003877ef38} &apos;resolveClass&apos; &apos;(Ljava/lang/Class;)V&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d602b: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f2d6033: mov    rdx,rsi
  0x00007f003f2d6036: mov    QWORD PTR [rsp+0x110],rsi
  0x00007f003f2d603e: mov    rsi,QWORD PTR [rsp+0xa8]  ;*invokespecial resolveClass0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::resolveClass@2 (line 964)
                                                ; - java.lang.ClassLoader::loadClass@107 (line 433)

  0x00007f003f2d6046: nop
  0x00007f003f2d6047: call   0x00007f003f1c4d60  ; OopMap{[192]=Oop [272]=Oop [288]=Oop off=9260}
                                                ;*invokespecial resolveClass0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::resolveClass@2 (line 964)
                                                ; - java.lang.ClassLoader::loadClass@107 (line 433)
                                                ;   {optimized virtual_call}
  0x00007f003f2d604c: lea    rax,[rsp+0x118]
  0x00007f003f2d6054: mov    rsi,QWORD PTR [rax+0x8]
  0x00007f003f2d6058: mov    rdx,QWORD PTR [rsi]
  0x00007f003f2d605b: and    rdx,0x7
  0x00007f003f2d605f: cmp    rdx,0x5
  0x00007f003f2d6063: je     0x00007f003f2d6080
  0x00007f003f2d6069: mov    rdx,QWORD PTR [rax]
  0x00007f003f2d606c: test   rdx,rdx
  0x00007f003f2d606f: je     0x00007f003f2d6080
  0x00007f003f2d6075: lock cmpxchg QWORD PTR [rsi],rdx
  0x00007f003f2d607a: jne    0x00007f003f2d66b5  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@113 (line 435)

  0x00007f003f2d6080: mov    rsi,QWORD PTR [rsp+0x110]
  0x00007f003f2d6088: mov    rax,rsi
  0x00007f003f2d608b: add    rsp,0x150
  0x00007f003f2d6092: pop    rbp
  0x00007f003f2d6093: test   DWORD PTR [rip+0x1b0ec067],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2d6099: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@114 (line 435)

  0x00007f003f2d609a: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2d60a1: xor    r10,r10
  0x00007f003f2d60a4: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2d60ab: xor    r10,r10
  0x00007f003f2d60ae: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2d60b5: mov    rdx,rax
  0x00007f003f2d60b8: movabs rax,0x670bdf6c8    ;   {oop(a &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d60c2: lea    rax,[rsp+0x138]
  0x00007f003f2d60ca: mov    rdi,QWORD PTR [rax+0x8]
  0x00007f003f2d60ce: mov    rsi,QWORD PTR [rdi]
  0x00007f003f2d60d1: and    rsi,0x7
  0x00007f003f2d60d5: cmp    rsi,0x5
  0x00007f003f2d60d9: je     0x00007f003f2d60f6
  0x00007f003f2d60df: mov    rsi,QWORD PTR [rax]
  0x00007f003f2d60e2: test   rsi,rsi
  0x00007f003f2d60e5: je     0x00007f003f2d60f6
  0x00007f003f2d60eb: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2d60f0: jne    0x00007f003f2d66cb  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)

  0x00007f003f2d60f6: mov    rax,rdx            ; OopMap{[240]=Oop [168]=Oop [192]=Oop [288]=Oop [304]=Oop rax=Oop off=9433}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)

  0x00007f003f2d60f9: movabs rdx,0x7f003f2d60f9  ;   {section_word}
  0x00007f003f2d6103: call   0x00007f003f27ab60  ;   {runtime_call}
  0x00007f003f2d6108: nop                       ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)

  0x00007f003f2d6109: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2d6110: xor    r10,r10
  0x00007f003f2d6113: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2d611a: xor    r10,r10
  0x00007f003f2d611d: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2d6124: mov    rdx,rax
  0x00007f003f2d6127: movabs rax,0x670bdf6c8    ;   {oop(a &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d6131: lea    rax,[rsp+0x128]
  0x00007f003f2d6139: mov    rdi,QWORD PTR [rax+0x8]
  0x00007f003f2d613d: mov    rsi,QWORD PTR [rdi]
  0x00007f003f2d6140: and    rsi,0x7
  0x00007f003f2d6144: cmp    rsi,0x5
  0x00007f003f2d6148: je     0x00007f003f2d6165
  0x00007f003f2d614e: mov    rsi,QWORD PTR [rax]
  0x00007f003f2d6151: test   rsi,rsi
  0x00007f003f2d6154: je     0x00007f003f2d6165
  0x00007f003f2d615a: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2d615f: jne    0x00007f003f2d66e1  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)

  0x00007f003f2d6165: mov    rax,rdx            ; OopMap{[240]=Oop [168]=Oop [192]=Oop [288]=Oop rax=Oop off=9544}
                                                ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)

  0x00007f003f2d6168: movabs rdx,0x7f003f2d6168  ;   {section_word}
  0x00007f003f2d6172: call   0x00007f003f27ab60  ;   {runtime_call}
  0x00007f003f2d6177: nop                       ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)

  0x00007f003f2d6178: mov    rsi,QWORD PTR [rsp+0x100]
  0x00007f003f2d6180: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2d6187: xor    r10,r10
  0x00007f003f2d618a: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2d6191: xor    r10,r10
  0x00007f003f2d6194: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2d619b: mov    rdx,rax
  0x00007f003f2d619e: movabs rax,0x670bdf7c0    ;   {oop(a &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d61a8: lea    rax,[rsp+0x138]
  0x00007f003f2d61b0: mov    rbx,QWORD PTR [rax+0x8]
  0x00007f003f2d61b4: mov    rdi,QWORD PTR [rbx]
  0x00007f003f2d61b7: and    rdi,0x7
  0x00007f003f2d61bb: cmp    rdi,0x5
  0x00007f003f2d61bf: je     0x00007f003f2d61dc
  0x00007f003f2d61c5: mov    rdi,QWORD PTR [rax]
  0x00007f003f2d61c8: test   rdi,rdi
  0x00007f003f2d61cb: je     0x00007f003f2d61dc
  0x00007f003f2d61d1: lock cmpxchg QWORD PTR [rbx],rdi
  0x00007f003f2d61d6: jne    0x00007f003f2d66f7  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)

  0x00007f003f2d61dc: mov    rax,rdx            ; OopMap{[192]=Oop [168]=Oop [240]=Oop [288]=Oop [304]=Oop rax=Oop off=9663}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)

  0x00007f003f2d61df: movabs rdx,0x7f003f2d61df  ;   {section_word}
  0x00007f003f2d61e9: call   0x00007f003f27ab60  ;   {runtime_call}
  0x00007f003f2d61ee: nop                       ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)

  0x00007f003f2d61ef: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2d61f6: xor    r10,r10
  0x00007f003f2d61f9: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2d6200: xor    r10,r10
  0x00007f003f2d6203: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2d620a: mov    rdx,rax
  0x00007f003f2d620d: movabs rax,0x670bdf7c0    ;   {oop(a &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d6217: lea    rax,[rsp+0x128]
  0x00007f003f2d621f: mov    rdi,QWORD PTR [rax+0x8]
  0x00007f003f2d6223: mov    rsi,QWORD PTR [rdi]
  0x00007f003f2d6226: and    rsi,0x7
  0x00007f003f2d622a: cmp    rsi,0x5
  0x00007f003f2d622e: je     0x00007f003f2d624b
  0x00007f003f2d6234: mov    rsi,QWORD PTR [rax]
  0x00007f003f2d6237: test   rsi,rsi
  0x00007f003f2d623a: je     0x00007f003f2d624b
  0x00007f003f2d6240: lock cmpxchg QWORD PTR [rdi],rsi
  0x00007f003f2d6245: jne    0x00007f003f2d670d  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)

  0x00007f003f2d624b: mov    rax,rdx            ; OopMap{[192]=Oop [168]=Oop [240]=Oop [288]=Oop rax=Oop off=9774}
                                                ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)

  0x00007f003f2d624e: movabs rdx,0x7f003f2d624e  ;   {section_word}
  0x00007f003f2d6258: call   0x00007f003f27ab60  ;   {runtime_call}
  0x00007f003f2d625d: nop                       ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)

  0x00007f003f2d625e: mov    rdi,QWORD PTR [rsp+0xe8]
  0x00007f003f2d6266: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2d626d: xor    r10,r10
  0x00007f003f2d6270: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2d6277: xor    r10,r10
  0x00007f003f2d627a: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2d6281: mov    rdx,rax
  0x00007f003f2d6284: movabs rax,0x670bdf240    ;   {oop(a &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d628e: lea    rax,[rsp+0x138]
  0x00007f003f2d6296: mov    rbx,QWORD PTR [rax+0x8]
  0x00007f003f2d629a: mov    rsi,QWORD PTR [rbx]
  0x00007f003f2d629d: and    rsi,0x7
  0x00007f003f2d62a1: cmp    rsi,0x5
  0x00007f003f2d62a5: je     0x00007f003f2d62c2
  0x00007f003f2d62ab: mov    rsi,QWORD PTR [rax]
  0x00007f003f2d62ae: test   rsi,rsi
  0x00007f003f2d62b1: je     0x00007f003f2d62c2
  0x00007f003f2d62b7: lock cmpxchg QWORD PTR [rbx],rsi
  0x00007f003f2d62bc: jne    0x00007f003f2d6723  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)

  0x00007f003f2d62c2: mov    rax,rdx            ; OopMap{[240]=Oop [168]=Oop [192]=Oop [288]=Oop [304]=Oop rax=Oop off=9893}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)

  0x00007f003f2d62c5: movabs rdx,0x7f003f2d62c5  ;   {section_word}
  0x00007f003f2d62cf: call   0x00007f003f27ab60  ;   {runtime_call}
  0x00007f003f2d62d4: nop                       ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)

  0x00007f003f2d62d5: mov    rsi,QWORD PTR [rsp+0xd8]
  0x00007f003f2d62dd: mov    rbx,QWORD PTR [rsp+0xa8]
  0x00007f003f2d62e5: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2d62ec: xor    r10,r10
  0x00007f003f2d62ef: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2d62f6: xor    r10,r10
  0x00007f003f2d62f9: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2d6300: mov    rdx,rax
  0x00007f003f2d6303: movabs rax,0x670bdf240    ;   {oop(a &apos;sun/misc/PerfCounter&apos;)}
  0x00007f003f2d630d: lea    rax,[rsp+0x128]
  0x00007f003f2d6315: mov    r11,QWORD PTR [rax+0x8]
  0x00007f003f2d6319: mov    r9,QWORD PTR [r11]
  0x00007f003f2d631c: and    r9,0x7
  0x00007f003f2d6320: cmp    r9,0x5
  0x00007f003f2d6324: je     0x00007f003f2d6341
  0x00007f003f2d632a: mov    r9,QWORD PTR [rax]
  0x00007f003f2d632d: test   r9,r9
  0x00007f003f2d6330: je     0x00007f003f2d6341
  0x00007f003f2d6336: lock cmpxchg QWORD PTR [r11],r9
  0x00007f003f2d633b: jne    0x00007f003f2d6739  ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)

  0x00007f003f2d6341: mov    rax,rdx            ; OopMap{rdi=Oop r8=Oop rbx=Oop [168]=Oop [288]=Oop rax=Oop off=10020}
                                                ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)

  0x00007f003f2d6344: movabs rdx,0x7f003f2d6344  ;   {section_word}
  0x00007f003f2d634e: call   0x00007f003f27ab60  ;   {runtime_call}
  0x00007f003f2d6353: nop                       ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)

  0x00007f003f2d6354: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2d635b: xor    r10,r10
  0x00007f003f2d635e: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2d6365: xor    r10,r10
  0x00007f003f2d6368: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2d636f: mov    rsi,rax
  0x00007f003f2d6372: lea    rax,[rsp+0x118]
  0x00007f003f2d637a: mov    rbx,QWORD PTR [rax+0x8]
  0x00007f003f2d637e: mov    rdi,QWORD PTR [rbx]
  0x00007f003f2d6381: and    rdi,0x7
  0x00007f003f2d6385: cmp    rdi,0x5
  0x00007f003f2d6389: je     0x00007f003f2d63a6
  0x00007f003f2d638f: mov    rdi,QWORD PTR [rax]
  0x00007f003f2d6392: test   rdi,rdi
  0x00007f003f2d6395: je     0x00007f003f2d63a6
  0x00007f003f2d639b: lock cmpxchg QWORD PTR [rbx],rdi
  0x00007f003f2d63a0: jne    0x00007f003f2d674f  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@118 (line 436)

  0x00007f003f2d63a6: mov    rax,rsi
  0x00007f003f2d63a9: jmp    0x00007f003f2d6889
  0x00007f003f2d63ae: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2d63b3: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d63bb: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [168]=Oop rdx=Oop [176]=Oop off=10144}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::loadClass@-1 (line 404)
                                                ;   {runtime_call}
  0x00007f003f2d63c0: jmp    0x00007f003f2d3c91
  0x00007f003f2d63c5: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2d63ca: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d63d2: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [168]=Oop rdx=Oop [176]=Oop off=10167}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::getClassLoadingLock@-1 (line 460)
                                                ; - java.lang.ClassLoader::loadClass@2 (line 404)
                                                ;   {runtime_call}
  0x00007f003f2d63d7: jmp    0x00007f003f2d3eaf
  0x00007f003f2d63dc: mov    rdx,rdx
  0x00007f003f2d63df: call   0x00007f003f279760  ; OopMap{rbx=Oop r9=Oop [176]=Oop [168]=Oop off=10180}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::getClassLoadingLock@9 (line 462)
                                                ; - java.lang.ClassLoader::loadClass@2 (line 404)
                                                ;   {runtime_call}
  0x00007f003f2d63e4: jmp    0x00007f003f2d3f46
  0x00007f003f2d63e9: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2d63ee: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d63f6: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop r9=Oop [176]=Oop [168]=Oop rax=Oop off=10203}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.ClassLoader::getClassLoadingLock@13 (line 462)
                                                ; - java.lang.ClassLoader::loadClass@2 (line 404)
                                                ;   {runtime_call}
  0x00007f003f2d63fb: jmp    0x00007f003f2d3f8d
  0x00007f003f2d6400: call   0x00007f003f279000  ; OopMap{rbx=Oop r9=Oop [176]=Oop [168]=Oop rax=Oop off=10213}
                                                ;*invokevirtual putIfAbsent {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::getClassLoadingLock@23 (line 463)
                                                ; - java.lang.ClassLoader::loadClass@2 (line 404)
                                                ;   {runtime_call}
  0x00007f003f2d6405: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2d640a: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d6412: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop r9=Oop [176]=Oop [168]=Oop rax=Oop off=10231}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@-1 (line 1535)
                                                ; - java.lang.ClassLoader::getClassLoadingLock@23 (line 463)
                                                ; - java.lang.ClassLoader::loadClass@2 (line 404)
                                                ;   {runtime_call}
  0x00007f003f2d6417: jmp    0x00007f003f2d3fe8
  0x00007f003f2d641c: call   0x00007f003f279000  ; OopMap{[168]=Oop [176]=Oop rdi=Oop off=10241}
                                                ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@7 (line 404)
                                                ;   {runtime_call}
  0x00007f003f2d6421: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2d6426: mov    QWORD PTR [rsp],rdx
  0x00007f003f2d642a: call   0x00007f003f27ba60  ; OopMap{[168]=Oop [176]=Oop rdi=Oop [288]=Oop off=10255}
                                                ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@7 (line 404)
                                                ;   {runtime_call}
  0x00007f003f2d642f: jmp    0x00007f003f2d4132
  0x00007f003f2d6434: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2d6439: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d6441: call   0x00007f003f27d5e0  ; OopMap{[168]=Oop [176]=Oop [192]=Oop [288]=Oop off=10278}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::findLoadedClass@-1 (line 1036)
                                                ; - java.lang.ClassLoader::loadClass@10 (line 406)
                                                ;   {runtime_call}
  0x00007f003f2d6446: jmp    0x00007f003f2d4186
  0x00007f003f2d644b: call   0x00007f003f279000  ; OopMap{[192]=Oop [176]=Oop [200]=Oop rdi=Oop [168]=Oop [288]=Oop off=10288}
                                                ;*invokevirtual loadClass {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::loadClass@38 (line 411)
                                                ;   {runtime_call}
  0x00007f003f2d6450: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2d6455: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d645d: call   0x00007f003f27d5e0  ; OopMap{[192]=Oop [176]=Oop [200]=Oop [168]=Oop [288]=Oop off=10306}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::findBootstrapClassOrNull@-1 (line 1013)
                                                ; - java.lang.ClassLoader::loadClass@48 (line 413)
                                                ;   {runtime_call}
  0x00007f003f2d6462: jmp    0x00007f003f2d4555
  0x00007f003f2d6467: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2d646c: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d6474: call   0x00007f003f27d5e0  ; OopMap{[192]=Oop [168]=Oop rax=Oop [288]=Oop off=10329}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::getParentDelegationTime@-1 (line 167)
                                                ; - java.lang.ClassLoader::loadClass@75 (line 427)
                                                ;   {runtime_call}
  0x00007f003f2d6479: jmp    0x00007f003f2d48f0
  0x00007f003f2d647e: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2d6483: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d648b: call   0x00007f003f27d5e0  ; OopMap{[192]=Oop [168]=Oop rax=Oop rbx=Oop [288]=Oop off=10352}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::addTime@-1 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)
                                                ;   {runtime_call}
  0x00007f003f2d6490: jmp    0x00007f003f2d496d
  0x00007f003f2d6495: call   0x00007f003f279000  ; OopMap{[192]=Oop [168]=Oop rbx=Oop [240]=Oop [288]=Oop off=10362}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)
                                                ;   {runtime_call}
  0x00007f003f2d649a: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2d649f: mov    QWORD PTR [rsp],rdx
  0x00007f003f2d64a3: call   0x00007f003f27ba60  ; OopMap{[192]=Oop [168]=Oop rbx=Oop [240]=Oop [288]=Oop [304]=Oop off=10376}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)
                                                ;   {runtime_call}
  0x00007f003f2d64a8: jmp    0x00007f003f2d4a64
  0x00007f003f2d64ad: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2d64b2: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d64ba: call   0x00007f003f27d5e0  ; OopMap{[192]=Oop [168]=Oop rbx=Oop [240]=Oop [288]=Oop [304]=Oop off=10399}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)
                                                ;   {runtime_call}
  0x00007f003f2d64bf: jmp    0x00007f003f2d4a96
  0x00007f003f2d64c4: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2d64c9: mov    QWORD PTR [rsp],rdx
  0x00007f003f2d64cd: call   0x00007f003f27ba60  ; OopMap{[192]=Oop [168]=Oop rbx=Oop [240]=Oop [288]=Oop [304]=Oop [320]=Oop off=10418}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)
                                                ;   {runtime_call}
  0x00007f003f2d64d2: jmp    0x00007f003f2d4b74
  0x00007f003f2d64d7: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2d64dc: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d64e4: call   0x00007f003f27d5e0  ; OopMap{[192]=Oop [168]=Oop rbx=Oop [240]=Oop [288]=Oop [304]=Oop [320]=Oop off=10441}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)
                                                ;   {runtime_call}
  0x00007f003f2d64e9: jmp    0x00007f003f2d4ba6
  0x00007f003f2d64ee: call   0x00007f003f279000  ; OopMap{[192]=Oop [168]=Oop rbx=Oop [240]=Oop rsi=Oop [288]=Oop [304]=Oop [320]=Oop off=10451}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)
                                                ;   {runtime_call}
  0x00007f003f2d64f3: lea    rax,[rsp+0x138]
  0x00007f003f2d64fb: mov    QWORD PTR [rsp],rax
  0x00007f003f2d64ff: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2d6504: jmp    0x00007f003f2d4df3
  0x00007f003f2d6509: call   0x00007f003f279000  ; OopMap{[192]=Oop [168]=Oop [240]=Oop rsi=Oop [288]=Oop [304]=Oop off=10478}
                                                ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@13 (line 98)
                                                ; - sun.misc.PerfCounter::addTime@2 (line 112)
                                                ; - java.lang.ClassLoader::loadClass@83 (line 427)
                                                ;   {runtime_call}
  0x00007f003f2d650e: lea    rax,[rsp+0x128]
  0x00007f003f2d6516: mov    QWORD PTR [rsp],rax
  0x00007f003f2d651a: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2d651f: jmp    0x00007f003f2d5048
  0x00007f003f2d6524: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2d6529: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d6531: call   0x00007f003f27d5e0  ; OopMap{[192]=Oop [168]=Oop [240]=Oop [288]=Oop off=10518}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::getFindClassTime@-1 (line 152)
                                                ; - java.lang.ClassLoader::loadClass@86 (line 428)
                                                ;   {runtime_call}
  0x00007f003f2d6536: jmp    0x00007f003f2d508c
  0x00007f003f2d653b: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2d6540: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d6548: call   0x00007f003f27d5e0  ; OopMap{[192]=Oop [168]=Oop [240]=Oop rsi=Oop [248]=Oop [288]=Oop off=10541}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@-1 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)
                                                ;   {runtime_call}
  0x00007f003f2d654d: jmp    0x00007f003f2d50f6
  0x00007f003f2d6552: call   0x00007f003f279000  ; OopMap{[192]=Oop [168]=Oop [240]=Oop rsi=Oop [248]=Oop [288]=Oop off=10551}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)
                                                ;   {runtime_call}
  0x00007f003f2d6557: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2d655c: mov    QWORD PTR [rsp],rdx
  0x00007f003f2d6560: call   0x00007f003f27ba60  ; OopMap{[192]=Oop [168]=Oop [240]=Oop rsi=Oop [248]=Oop [288]=Oop [304]=Oop off=10565}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)
                                                ;   {runtime_call}
  0x00007f003f2d6565: jmp    0x00007f003f2d521c
  0x00007f003f2d656a: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2d656f: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d6577: call   0x00007f003f27d5e0  ; OopMap{[192]=Oop [168]=Oop [240]=Oop rsi=Oop [248]=Oop [288]=Oop [304]=Oop off=10588}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)
                                                ;   {runtime_call}
  0x00007f003f2d657c: jmp    0x00007f003f2d524e
  0x00007f003f2d6581: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2d6586: mov    QWORD PTR [rsp],rdx
  0x00007f003f2d658a: call   0x00007f003f27ba60  ; OopMap{[192]=Oop [168]=Oop [240]=Oop rsi=Oop [248]=Oop [288]=Oop [304]=Oop [320]=Oop off=10607}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)
                                                ;   {runtime_call}
  0x00007f003f2d658f: jmp    0x00007f003f2d532c
  0x00007f003f2d6594: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2d6599: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d65a1: call   0x00007f003f27d5e0  ; OopMap{[192]=Oop [168]=Oop [240]=Oop rsi=Oop [248]=Oop [288]=Oop [304]=Oop [320]=Oop off=10630}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)
                                                ;   {runtime_call}
  0x00007f003f2d65a6: jmp    0x00007f003f2d535e
  0x00007f003f2d65ab: call   0x00007f003f279000  ; OopMap{[192]=Oop [168]=Oop [240]=Oop rsi=Oop [248]=Oop rax=Oop [288]=Oop [304]=Oop [320]=Oop off=10640}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)
                                                ;   {runtime_call}
  0x00007f003f2d65b0: lea    rax,[rsp+0x138]
  0x00007f003f2d65b8: mov    QWORD PTR [rsp],rax
  0x00007f003f2d65bc: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2d65c1: jmp    0x00007f003f2d55a3
  0x00007f003f2d65c6: call   0x00007f003f279000  ; OopMap{[192]=Oop [168]=Oop [240]=Oop rsi=Oop [288]=Oop [304]=Oop off=10667}
                                                ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@13 (line 98)
                                                ; - sun.misc.PerfCounter::addElapsedTimeFrom@6 (line 119)
                                                ; - java.lang.ClassLoader::loadClass@91 (line 428)
                                                ;   {runtime_call}
  0x00007f003f2d65cb: lea    rax,[rsp+0x128]
  0x00007f003f2d65d3: mov    QWORD PTR [rsp],rax
  0x00007f003f2d65d7: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2d65dc: jmp    0x00007f003f2d57f8
  0x00007f003f2d65e1: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2d65e6: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d65ee: call   0x00007f003f27d5e0  ; OopMap{[192]=Oop [168]=Oop [240]=Oop [288]=Oop off=10707}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::getFindClasses@-1 (line 144)
                                                ; - java.lang.ClassLoader::loadClass@94 (line 429)
                                                ;   {runtime_call}
  0x00007f003f2d65f3: jmp    0x00007f003f2d583c
  0x00007f003f2d65f8: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2d65fd: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d6605: call   0x00007f003f27d5e0  ; OopMap{[192]=Oop [168]=Oop [240]=Oop rdi=Oop [288]=Oop off=10730}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::increment@-1 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)
                                                ;   {runtime_call}
  0x00007f003f2d660a: jmp    0x00007f003f2d589e
  0x00007f003f2d660f: call   0x00007f003f279000  ; OopMap{[192]=Oop [168]=Oop [240]=Oop rdi=Oop [288]=Oop off=10740}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)
                                                ;   {runtime_call}
  0x00007f003f2d6614: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2d6619: mov    QWORD PTR [rsp],rdx
  0x00007f003f2d661d: call   0x00007f003f27ba60  ; OopMap{[192]=Oop [168]=Oop [240]=Oop rdi=Oop [288]=Oop [304]=Oop off=10754}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)
                                                ;   {runtime_call}
  0x00007f003f2d6622: jmp    0x00007f003f2d598d
  0x00007f003f2d6627: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2d662c: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d6634: call   0x00007f003f27d5e0  ; OopMap{[192]=Oop [168]=Oop [240]=Oop rdi=Oop [288]=Oop [304]=Oop off=10777}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::add@-1 (line 97)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)
                                                ;   {runtime_call}
  0x00007f003f2d6639: jmp    0x00007f003f2d59bf
  0x00007f003f2d663e: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2d6643: mov    QWORD PTR [rsp],rdx
  0x00007f003f2d6647: call   0x00007f003f27ba60  ; OopMap{[192]=Oop [168]=Oop [240]=Oop rdi=Oop [288]=Oop [304]=Oop [320]=Oop off=10796}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)
                                                ;   {runtime_call}
  0x00007f003f2d664c: jmp    0x00007f003f2d5a9d
  0x00007f003f2d6651: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2d6656: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d665e: call   0x00007f003f27d5e0  ; OopMap{[192]=Oop [168]=Oop [240]=Oop rdi=Oop [288]=Oop [304]=Oop [320]=Oop off=10819}
                                                ;*synchronization entry
                                                ; - sun.misc.PerfCounter::get@-1 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)
                                                ;   {runtime_call}
  0x00007f003f2d6663: jmp    0x00007f003f2d5acf
  0x00007f003f2d6668: call   0x00007f003f279000  ; OopMap{[192]=Oop [168]=Oop [240]=Oop rdi=Oop rsi=Oop [288]=Oop [304]=Oop [320]=Oop off=10829}
                                                ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::get@5 (line 83)
                                                ; - sun.misc.PerfCounter::add@1 (line 97)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)
                                                ;   {runtime_call}
  0x00007f003f2d666d: lea    rax,[rsp+0x138]
  0x00007f003f2d6675: mov    QWORD PTR [rsp],rax
  0x00007f003f2d6679: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2d667e: jmp    0x00007f003f2d5d1b
  0x00007f003f2d6683: call   0x00007f003f279000  ; OopMap{[192]=Oop [168]=Oop [240]=Oop rsi=Oop [288]=Oop [304]=Oop off=10856}
                                                ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.misc.PerfCounter::add@13 (line 98)
                                                ; - sun.misc.PerfCounter::increment@2 (line 105)
                                                ; - java.lang.ClassLoader::loadClass@97 (line 429)
                                                ;   {runtime_call}
  0x00007f003f2d6688: lea    rax,[rsp+0x128]
  0x00007f003f2d6690: mov    QWORD PTR [rsp],rax
  0x00007f003f2d6694: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2d6699: jmp    0x00007f003f2d5f78
  0x00007f003f2d669e: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2d66a3: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d66ab: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [168]=Oop [192]=Oop [288]=Oop off=10896}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::resolveClass@-1 (line 964)
                                                ; - java.lang.ClassLoader::loadClass@107 (line 433)
                                                ;   {runtime_call}
  0x00007f003f2d66b0: jmp    0x00007f003f2d6019
  0x00007f003f2d66b5: lea    rax,[rsp+0x118]
  0x00007f003f2d66bd: mov    QWORD PTR [rsp],rax
  0x00007f003f2d66c1: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2d66c6: jmp    0x00007f003f2d6080
  0x00007f003f2d66cb: lea    rax,[rsp+0x138]
  0x00007f003f2d66d3: mov    QWORD PTR [rsp],rax
  0x00007f003f2d66d7: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2d66dc: jmp    0x00007f003f2d60f6
  0x00007f003f2d66e1: lea    rax,[rsp+0x128]
  0x00007f003f2d66e9: mov    QWORD PTR [rsp],rax
  0x00007f003f2d66ed: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2d66f2: jmp    0x00007f003f2d6165
  0x00007f003f2d66f7: lea    rax,[rsp+0x138]
  0x00007f003f2d66ff: mov    QWORD PTR [rsp],rax
  0x00007f003f2d6703: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2d6708: jmp    0x00007f003f2d61dc
  0x00007f003f2d670d: lea    rax,[rsp+0x128]
  0x00007f003f2d6715: mov    QWORD PTR [rsp],rax
  0x00007f003f2d6719: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2d671e: jmp    0x00007f003f2d624b
  0x00007f003f2d6723: lea    rax,[rsp+0x138]
  0x00007f003f2d672b: mov    QWORD PTR [rsp],rax
  0x00007f003f2d672f: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2d6734: jmp    0x00007f003f2d62c2
  0x00007f003f2d6739: lea    rax,[rsp+0x128]
  0x00007f003f2d6741: mov    QWORD PTR [rsp],rax
  0x00007f003f2d6745: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2d674a: jmp    0x00007f003f2d6341
  0x00007f003f2d674f: lea    rax,[rsp+0x118]
  0x00007f003f2d6757: mov    QWORD PTR [rsp],rax
  0x00007f003f2d675b: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2d6760: jmp    0x00007f003f2d63a6
  0x00007f003f2d6765: mov    rsi,QWORD PTR [rsp+0xc8]
  0x00007f003f2d676d: jmp    0x00007f003f2d4617
  0x00007f003f2d6772: mov    rsi,QWORD PTR [rsp+0xc8]
  0x00007f003f2d677a: jmp    0x00007f003f2d4617
  0x00007f003f2d677f: mov    rsi,QWORD PTR [rsp+0xc8]
  0x00007f003f2d6787: jmp    0x00007f003f2d4617
  0x00007f003f2d678c: mov    ecx,DWORD PTR [rsp+0xb8]
  0x00007f003f2d6793: jmp    0x00007f003f2d625e
  0x00007f003f2d6798: mov    rdi,QWORD PTR [rsp+0xf0]
  0x00007f003f2d67a0: mov    r8,QWORD PTR [rsp+0xc0]
  0x00007f003f2d67a8: mov    ecx,DWORD PTR [rsp+0xb8]
  0x00007f003f2d67af: jmp    0x00007f003f2d62d5
  0x00007f003f2d67b4: mov    ecx,DWORD PTR [rsp+0xb8]
  0x00007f003f2d67bb: jmp    0x00007f003f2d6178
  0x00007f003f2d67c0: mov    ecx,DWORD PTR [rsp+0xb8]
  0x00007f003f2d67c7: jmp    0x00007f003f2d61ef
  0x00007f003f2d67cc: mov    ecx,DWORD PTR [rsp+0xb8]
  0x00007f003f2d67d3: jmp    0x00007f003f2d609a
  0x00007f003f2d67d8: mov    ecx,DWORD PTR [rsp+0xb8]
  0x00007f003f2d67df: jmp    0x00007f003f2d6109
  0x00007f003f2d67e4: mov    rdi,QWORD PTR [rsp+0xf0]
  0x00007f003f2d67ec: mov    r8,QWORD PTR [rsp+0xc0]
  0x00007f003f2d67f4: jmp    0x00007f003f2d62d5
  0x00007f003f2d67f9: mov    rsi,QWORD PTR [rsp+0xc8]
  0x00007f003f2d6801: jmp    0x00007f003f2d4617
  0x00007f003f2d6806: mov    ecx,DWORD PTR [rsp+0xb8]
  0x00007f003f2d680d: jmp    0x00007f003f2d625e
  0x00007f003f2d6812: mov    rdi,QWORD PTR [rsp+0xf0]
  0x00007f003f2d681a: mov    r8,QWORD PTR [rsp+0xc0]
  0x00007f003f2d6822: mov    ecx,DWORD PTR [rsp+0xb8]
  0x00007f003f2d6829: jmp    0x00007f003f2d62d5
  0x00007f003f2d682e: mov    ecx,DWORD PTR [rsp+0xb8]
  0x00007f003f2d6835: jmp    0x00007f003f2d6178
  0x00007f003f2d683a: mov    ecx,DWORD PTR [rsp+0xb8]
  0x00007f003f2d6841: jmp    0x00007f003f2d61ef
  0x00007f003f2d6846: mov    ecx,DWORD PTR [rsp+0xb8]
  0x00007f003f2d684d: jmp    0x00007f003f2d609a
  0x00007f003f2d6852: mov    ecx,DWORD PTR [rsp+0xb8]
  0x00007f003f2d6859: jmp    0x00007f003f2d6109
  0x00007f003f2d685e: nop
  0x00007f003f2d685f: nop
  0x00007f003f2d6860: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2d6867: movabs r10,0x0
  0x00007f003f2d6871: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2d6878: movabs r10,0x0
  0x00007f003f2d6882: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2d6889: add    rsp,0x150
  0x00007f003f2d6890: pop    rbp
  0x00007f003f2d6891: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2d6896: hlt    
  0x00007f003f2d6897: hlt    
  0x00007f003f2d6898: hlt    
  0x00007f003f2d6899: hlt    
  0x00007f003f2d689a: hlt    
  0x00007f003f2d689b: hlt    
  0x00007f003f2d689c: hlt    
  0x00007f003f2d689d: hlt    
  0x00007f003f2d689e: hlt    
  0x00007f003f2d689f: hlt    
[Stub Code]
  0x00007f003f2d68a0: nop                       ;   {no_reloc}
  0x00007f003f2d68a1: nop
  0x00007f003f2d68a2: nop
  0x00007f003f2d68a3: nop
  0x00007f003f2d68a4: nop
  0x00007f003f2d68a5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d68af: jmp    0x00007f003f2d68af  ;   {runtime_call}
  0x00007f003f2d68b4: nop
  0x00007f003f2d68b5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d68bf: jmp    0x00007f003f2d68bf  ;   {runtime_call}
  0x00007f003f2d68c4: nop
  0x00007f003f2d68c5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d68cf: jmp    0x00007f003f2d68cf  ;   {runtime_call}
  0x00007f003f2d68d4: nop
  0x00007f003f2d68d5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d68df: jmp    0x00007f003f2d68df  ;   {runtime_call}
  0x00007f003f2d68e4: nop
  0x00007f003f2d68e5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d68ef: jmp    0x00007f003f2d68ef  ;   {runtime_call}
  0x00007f003f2d68f4: nop
  0x00007f003f2d68f5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d68ff: jmp    0x00007f003f2d68ff  ;   {runtime_call}
  0x00007f003f2d6904: nop
  0x00007f003f2d6905: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d690f: jmp    0x00007f003f2d690f  ;   {runtime_call}
  0x00007f003f2d6914: nop
  0x00007f003f2d6915: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d691f: jmp    0x00007f003f2d691f  ;   {runtime_call}
  0x00007f003f2d6924: nop
  0x00007f003f2d6925: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d692f: jmp    0x00007f003f2d692f  ;   {runtime_call}
  0x00007f003f2d6934: nop
  0x00007f003f2d6935: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d693f: jmp    0x00007f003f2d693f  ;   {runtime_call}
  0x00007f003f2d6944: nop
  0x00007f003f2d6945: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d694f: jmp    0x00007f003f2d694f  ;   {runtime_call}
  0x00007f003f2d6954: nop
  0x00007f003f2d6955: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d695f: jmp    0x00007f003f2d695f  ;   {runtime_call}
  0x00007f003f2d6964: nop
  0x00007f003f2d6965: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d696f: jmp    0x00007f003f2d696f  ;   {runtime_call}
  0x00007f003f2d6974: nop
  0x00007f003f2d6975: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d697f: jmp    0x00007f003f2d697f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2d6984: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2d6989: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2d698e: sub    rsp,0x80
  0x00007f003f2d6995: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2d699a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2d699f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2d69a4: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2d69a9: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2d69ae: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2d69b3: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2d69b8: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2d69bd: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2d69c2: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2d69c7: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2d69cc: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2d69d1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2d69d6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2d69db: mov    QWORD PTR [rsp],r15
  0x00007f003f2d69df: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2d69e9: movabs rsi,0x7f003f2d6989  ;   {internal_word}
  0x00007f003f2d69f3: mov    rdx,rsp
  0x00007f003f2d69f6: and    rsp,0xfffffffffffffff0
  0x00007f003f2d69fa: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2d69ff: hlt    
[Deopt Handler Code]
  0x00007f003f2d6a00: movabs r10,0x7f003f2d6a00  ;   {section_word}
  0x00007f003f2d6a0a: push   r10
  0x00007f003f2d6a0c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2d6a11: hlt    
  0x00007f003f2d6a12: hlt    
  0x00007f003f2d6a13: hlt    
  0x00007f003f2d6a14: hlt    
  0x00007f003f2d6a15: hlt    
  0x00007f003f2d6a16: hlt    
  0x00007f003f2d6a17: hlt    
<nmethod compile_id='144' compiler='C1' level='3' entry='0x00007f003f2d3c20' size='17584' address='0x00007f003f2d3890' relocation_offset='312' insts_offset='912' stub_offset='12304' scopes_data_offset='12840' scopes_pcs_offset='14488' dependencies_offset='16728' handler_table_offset='16736' nul_chk_table_offset='17480' oops_offset='12680' metadata_offset='12704' method='java/lang/ClassLoader loadClass (Ljava/lang/String;Z)Ljava/lang/Class;' bytes='122' count='396' iicount='396' throwouts='149' stamp='0.654'/>
<writer thread='139637818533632'/>
[Loaded org.graalvm.util.EconomicSet from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap$Node.&lt;init&gt;  [0x00007f003f2d7ec0, 0x00007f003f2d80d0]  528 bytes
<writer thread='139637818533632'/>
[Loaded org.graalvm.util.impl.EconomicMapImpl from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
<writer thread='139637817480960'/>
[Entry Point]
[Constants]
  # {method} {0x00007f0038953828} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;
  # this:     rsi:rsi   = &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2d7ec0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2d7ec4: shl    r10,0x3
  0x00007f003f2d7ec8: cmp    r10,rax
  0x00007f003f2d7ecb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2d7ed1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2d7edc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2d7ee0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2d7ee7: push   rbp
  0x00007f003f2d7ee8: sub    rsp,0x30
  0x00007f003f2d7eec: movabs rdi,0x7f0038a8ec70  ;   {metadata(method data for {method} {0x00007f0038953828} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007f003f2d7ef6: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2d7efc: add    ebx,0x8
  0x00007f003f2d7eff: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2d7f05: movabs rdi,0x7f0038953828  ;   {metadata({method} {0x00007f0038953828} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007f003f2d7f0f: and    ebx,0x1ff8
  0x00007f003f2d7f15: cmp    ebx,0x0
  0x00007f003f2d7f18: je     0x00007f003f2d7fc7  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@0 (line 625)

  0x00007f003f2d7f1e: mov    rdi,rsi
  0x00007f003f2d7f21: movabs rbx,0x7f0038a8ec70  ;   {metadata(method data for {method} {0x00007f0038953828} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007f003f2d7f2b: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f2d7f33: movabs rdi,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2d7f3d: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2d7f43: add    ebx,0x8
  0x00007f003f2d7f46: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2d7f4c: movabs rdi,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2d7f56: and    ebx,0x7ffff8
  0x00007f003f2d7f5c: cmp    ebx,0x0
  0x00007f003f2d7f5f: je     0x00007f003f2d7fde
  0x00007f003f2d7f65: mov    DWORD PTR [rsi+0xc],edx  ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@6 (line 626)

  0x00007f003f2d7f68: mov    r10,rcx
  0x00007f003f2d7f6b: shr    r10,0x3
  0x00007f003f2d7f6f: mov    DWORD PTR [rsi+0x10],r10d
  0x00007f003f2d7f73: mov    rdi,rsi
  0x00007f003f2d7f76: shr    rdi,0x9
  0x00007f003f2d7f7a: movabs rbx,0x7f003ae7c000
  0x00007f003f2d7f84: mov    BYTE PTR [rdi+rbx*1],0x0
  0x00007f003f2d7f88: mov    r10,r8
  0x00007f003f2d7f8b: shr    r10,0x3
  0x00007f003f2d7f8f: mov    DWORD PTR [rsi+0x14],r10d
  0x00007f003f2d7f93: mov    rdi,rsi
  0x00007f003f2d7f96: shr    rdi,0x9
  0x00007f003f2d7f9a: mov    BYTE PTR [rdi+rbx*1],0x0
  0x00007f003f2d7f9e: lock add DWORD PTR [rsp],0x0
  0x00007f003f2d7fa3: mov    r10,r9
  0x00007f003f2d7fa6: shr    r10,0x3
  0x00007f003f2d7faa: mov    DWORD PTR [rsi+0x18],r10d
  0x00007f003f2d7fae: shr    rsi,0x9
  0x00007f003f2d7fb2: mov    BYTE PTR [rsi+rbx*1],0x0
  0x00007f003f2d7fb6: lock add DWORD PTR [rsp],0x0  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@22 (line 629)

  0x00007f003f2d7fbb: add    rsp,0x30
  0x00007f003f2d7fbf: pop    rbp
  0x00007f003f2d7fc0: test   DWORD PTR [rip+0x1b0ea13a],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2d7fc6: ret    
  0x00007f003f2d7fc7: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2d7fcc: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d7fd4: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop off=281}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@-1 (line 625)
                                                ;   {runtime_call}
  0x00007f003f2d7fd9: jmp    0x00007f003f2d7f1e
  0x00007f003f2d7fde: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2d7fe3: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d7feb: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop off=304}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@1 (line 625)
                                                ;   {runtime_call}
  0x00007f003f2d7ff0: jmp    0x00007f003f2d7f65
  0x00007f003f2d7ff5: nop
  0x00007f003f2d7ff6: nop
  0x00007f003f2d7ff7: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2d7ffe: movabs r10,0x0
  0x00007f003f2d8008: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2d800f: movabs r10,0x0
  0x00007f003f2d8019: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2d8020: add    rsp,0x30
  0x00007f003f2d8024: pop    rbp
  0x00007f003f2d8025: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2d802a: hlt    
  0x00007f003f2d802b: hlt    
  0x00007f003f2d802c: hlt    
  0x00007f003f2d802d: hlt    
  0x00007f003f2d802e: hlt    
  0x00007f003f2d802f: hlt    
  0x00007f003f2d8030: hlt    
  0x00007f003f2d8031: hlt    
  0x00007f003f2d8032: hlt    
  0x00007f003f2d8033: hlt    
  0x00007f003f2d8034: hlt    
  0x00007f003f2d8035: hlt    
  0x00007f003f2d8036: hlt    
  0x00007f003f2d8037: hlt    
  0x00007f003f2d8038: hlt    
  0x00007f003f2d8039: hlt    
  0x00007f003f2d803a: hlt    
  0x00007f003f2d803b: hlt    
  0x00007f003f2d803c: hlt    
  0x00007f003f2d803d: hlt    
  0x00007f003f2d803e: hlt    
  0x00007f003f2d803f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2d8040: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2d8045: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2d804a: sub    rsp,0x80
  0x00007f003f2d8051: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2d8056: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2d805b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2d8060: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2d8065: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2d806a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2d806f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2d8074: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2d8079: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2d807e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2d8083: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2d8088: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2d808d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2d8092: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2d8097: mov    QWORD PTR [rsp],r15
  0x00007f003f2d809b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2d80a5: movabs rsi,0x7f003f2d8045  ;   {internal_word}
  0x00007f003f2d80af: mov    rdx,rsp
  0x00007f003f2d80b2: and    rsp,0xfffffffffffffff0
  0x00007f003f2d80b6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2d80bb: hlt    
[Deopt Handler Code]
  0x00007f003f2d80bc: movabs r10,0x7f003f2d80bc  ;   {section_word}
  0x00007f003f2d80c6: push   r10
  0x00007f003f2d80c8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2d80cd: hlt    
  0x00007f003f2d80ce: hlt    
  0x00007f003f2d80cf: hlt    
<nmethod compile_id='146' compiler='C1' level='3' entry='0x00007f003f2d7ec0' size='1096' address='0x00007f003f2d7d50' relocation_offset='312' insts_offset='368' stub_offset='752' scopes_data_offset='920' scopes_pcs_offset='976' dependencies_offset='1088' metadata_offset='896' method='java/util/concurrent/ConcurrentHashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V' bytes='26' count='525' iicount='525' stamp='0.655'/>
----------------------------------------------------------------------
java/lang/ClassLoader.getClassLoadingLock  [0x00007f003f2d8360, 0x00007f003f2d86a8]  840 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003877dde8} &apos;getClassLoadingLock&apos; &apos;(Ljava/lang/String;)Ljava/lang/Object;&apos; in &apos;java/lang/ClassLoader&apos;
  # this:     rsi:rsi   = &apos;java/lang/ClassLoader&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x70]  (sp of caller)
  0x00007f003f2d8360: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2d8364: shl    r10,0x3
  0x00007f003f2d8368: cmp    r10,rax
  0x00007f003f2d836b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2d8371: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2d837c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2d8380: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2d8387: push   rbp
  0x00007f003f2d8388: sub    rsp,0x60
  0x00007f003f2d838c: mov    r8,rsi
  0x00007f003f2d838f: mov    rbx,rdx
  0x00007f003f2d8392: movabs rdx,0x7f0038a8f550  ;   {metadata(method data for {method} {0x00007f003877dde8} &apos;getClassLoadingLock&apos; &apos;(Ljava/lang/String;)Ljava/lang/Object;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d839c: mov    esi,DWORD PTR [rdx+0xfc]
  0x00007f003f2d83a2: add    esi,0x8
  0x00007f003f2d83a5: mov    DWORD PTR [rdx+0xfc],esi
  0x00007f003f2d83ab: movabs rdx,0x7f003877dde8  ;   {metadata({method} {0x00007f003877dde8} &apos;getClassLoadingLock&apos; &apos;(Ljava/lang/String;)Ljava/lang/Object;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d83b5: and    esi,0x1ff8
  0x00007f003f2d83bb: cmp    esi,0x0
  0x00007f003f2d83be: je     0x00007f003f2d855d
<writer thread='139637818533632'/>
[Loaded org.graalvm.compiler.options.OptionsParser from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
<writer thread='139637817480960'/>
  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}  ; - java.lang.ClassLoader::getClassLoadingLock@0 (line 460)

  0x00007f003f2d83c4: mov    r9d,DWORD PTR [r8+0x10]
  0x00007f003f2d83c8: shl    r9,0x3             ;*getfield parallelLockMap {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::getClassLoadingLock@3 (line 461)

  0x00007f003f2d83cc: cmp    r9,0x0
  0x00007f003f2d83d0: movabs rdx,0x7f0038a8f550  ;   {metadata(method data for {method} {0x00007f003877dde8} &apos;getClassLoadingLock&apos; &apos;(Ljava/lang/String;)Ljava/lang/Object;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d83da: movabs rsi,0x130
  0x00007f003f2d83e4: je     0x00007f003f2d83f4
  0x00007f003f2d83ea: movabs rsi,0x140
  0x00007f003f2d83f4: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2d83f8: lea    rdi,[rdi+0x1]
  0x00007f003f2d83fc: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2d8400: je     0x00007f003f2d854e  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::getClassLoadingLock@6 (line 461)

  0x00007f003f2d8406: movabs rdx,0x7c0000ea8    ;   {metadata(&apos;java/lang/Object&apos;)}
  0x00007f003f2d8410: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2d8414: lea    rdi,[rax+0x10]
  0x00007f003f2d8418: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2d841c: ja     0x00007f003f2d8574
  0x00007f003f2d8422: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2d8426: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2d842d: mov    QWORD PTR [rax],rcx
  0x00007f003f2d8430: mov    rcx,rdx
  0x00007f003f2d8433: shr    rcx,0x3
  0x00007f003f2d8437: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2d843a: xor    rcx,rcx
  0x00007f003f2d843d: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2d8440: xor    rcx,rcx            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::getClassLoadingLock@9 (line 462)

  0x00007f003f2d8443: mov    rdx,rax
  0x00007f003f2d8446: movabs rcx,0x7f0038a8f550  ;   {metadata(method data for {method} {0x00007f003877dde8} &apos;getClassLoadingLock&apos; &apos;(Ljava/lang/String;)Ljava/lang/Object;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d8450: add    QWORD PTR [rcx+0x150],0x1
  0x00007f003f2d8458: movabs rdx,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2d8462: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2d8468: add    ecx,0x8
  0x00007f003f2d846b: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2d8471: movabs rdx,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2d847b: and    ecx,0x7ffff8
  0x00007f003f2d8481: cmp    ecx,0x0
  0x00007f003f2d8484: je     0x00007f003f2d8581
  0x00007f003f2d848a: cmp    rax,QWORD PTR [r9]  ;*invokevirtual putIfAbsent {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::getClassLoadingLock@23 (line 463)
                                                ; implicit exception: dispatches to 0x00007f003f2d8598
  0x00007f003f2d848d: mov    rdx,r9
  0x00007f003f2d8490: movabs rcx,0x7f0038a8f550  ;   {metadata(method data for {method} {0x00007f003877dde8} &apos;getClassLoadingLock&apos; &apos;(Ljava/lang/String;)Ljava/lang/Object;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d849a: add    QWORD PTR [rcx+0x178],0x1
  0x00007f003f2d84a2: movabs rdx,0x7f0038a8c9d8  ;   {metadata(method data for {method} {0x00007f003894a2f0} &apos;putIfAbsent&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2d84ac: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2d84b2: add    ecx,0x8
  0x00007f003f2d84b5: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2d84bb: movabs rdx,0x7f003894a2f0  ;   {metadata({method} {0x00007f003894a2f0} &apos;putIfAbsent&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2d84c5: and    ecx,0x7ffff8
  0x00007f003f2d84cb: cmp    ecx,0x0
  0x00007f003f2d84ce: je     0x00007f003f2d859d
  0x00007f003f2d84d4: mov    rdx,r9
  0x00007f003f2d84d7: movabs rcx,0x7f0038a8c9d8  ;   {metadata(method data for {method} {0x00007f003894a2f0} &apos;putIfAbsent&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2d84e1: add    QWORD PTR [rcx+0x130],0x1
  0x00007f003f2d84e9: mov    rdx,rbx
  0x00007f003f2d84ec: mov    rcx,rax
  0x00007f003f2d84ef: mov    r8d,0x1
  0x00007f003f2d84f5: mov    rsi,r9             ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@4 (line 1535)
                                                ; - java.lang.ClassLoader::getClassLoadingLock@23 (line 463)

  0x00007f003f2d84f8: mov    QWORD PTR [rsp+0x48],rax
  0x00007f003f2d84fd: nop
  0x00007f003f2d84fe: nop
  0x00007f003f2d84ff: call   0x00007f003f1c4d60  ; OopMap{[72]=Oop off=420}
                                                ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@4 (line 1535)
                                                ; - java.lang.ClassLoader::getClassLoadingLock@23 (line 463)
                                                ;   {optimized virtual_call}
  0x00007f003f2d8504: cmp    rax,0x0
  0x00007f003f2d8508: movabs rsi,0x7f0038a8f550  ;   {metadata(method data for {method} {0x00007f003877dde8} &apos;getClassLoadingLock&apos; &apos;(Ljava/lang/String;)Ljava/lang/Object;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d8512: movabs rdi,0x1f8
  0x00007f003f2d851c: jne    0x00007f003f2d852c
  0x00007f003f2d8522: movabs rdi,0x208
  0x00007f003f2d852c: mov    rbx,QWORD PTR [rsi+rdi*1]
  0x00007f003f2d8530: lea    rbx,[rbx+0x1]
  0x00007f003f2d8534: mov    QWORD PTR [rsi+rdi*1],rbx
  0x00007f003f2d8538: je     0x00007f003f2d8546  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::getClassLoadingLock@28 (line 464)

  0x00007f003f2d853e: mov    r8,rax
  0x00007f003f2d8541: jmp    0x00007f003f2d854e
  0x00007f003f2d8546: mov    rax,QWORD PTR [rsp+0x48]
  0x00007f003f2d854b: mov    r8,rax             ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::getClassLoadingLock@33 (line 468)

  0x00007f003f2d854e: mov    rax,r8
  0x00007f003f2d8551: add    rsp,0x60
  0x00007f003f2d8555: pop    rbp
  0x00007f003f2d8556: test   DWORD PTR [rip+0x1b0e9ba4],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2d855c: ret    
  0x00007f003f2d855d: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2d8562: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d856a: call   0x00007f003f27d5e0  ; OopMap{r8=Oop rbx=Oop off=527}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::getClassLoadingLock@-1 (line 460)
                                                ;   {runtime_call}
  0x00007f003f2d856f: jmp    0x00007f003f2d83c4
  0x00007f003f2d8574: mov    rdx,rdx
  0x00007f003f2d8577: call   0x00007f003f279760  ; OopMap{r8=Oop rbx=Oop r9=Oop off=540}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::getClassLoadingLock@9 (line 462)
                                                ;   {runtime_call}
  0x00007f003f2d857c: jmp    0x00007f003f2d8443
  0x00007f003f2d8581: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2d8586: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d858e: call   0x00007f003f27d5e0  ; OopMap{r8=Oop rbx=Oop r9=Oop rax=Oop off=563}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.ClassLoader::getClassLoadingLock@13 (line 462)
                                                ;   {runtime_call}
  0x00007f003f2d8593: jmp    0x00007f003f2d848a
  0x00007f003f2d8598: call   0x00007f003f279000  ; OopMap{rbx=Oop r9=Oop rax=Oop off=573}
                                                ;*invokevirtual putIfAbsent {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::getClassLoadingLock@23 (line 463)
                                                ;   {runtime_call}
  0x00007f003f2d859d: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2d85a2: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d85aa: call   0x00007f003f27d5e0  ; OopMap{rbx=Oop r9=Oop rax=Oop off=591}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@-1 (line 1535)
                                                ; - java.lang.ClassLoader::getClassLoadingLock@23 (line 463)
                                                ;   {runtime_call}
  0x00007f003f2d85af: jmp    0x00007f003f2d84d4
  0x00007f003f2d85b4: nop
  0x00007f003f2d85b5: nop
  0x00007f003f2d85b6: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2d85bd: movabs r10,0x0
  0x00007f003f2d85c7: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2d85ce: movabs r10,0x0
  0x00007f003f2d85d8: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2d85df: add    rsp,0x60
  0x00007f003f2d85e3: pop    rbp
  0x00007f003f2d85e4: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2d85e9: hlt    
  0x00007f003f2d85ea: hlt    
  0x00007f003f2d85eb: hlt    
  0x00007f003f2d85ec: hlt    
  0x00007f003f2d85ed: hlt    
  0x00007f003f2d85ee: hlt    
  0x00007f003f2d85ef: hlt    
  0x00007f003f2d85f0: hlt    
  0x00007f003f2d85f1: hlt    
  0x00007f003f2d85f2: hlt    
  0x00007f003f2d85f3: hlt    
  0x00007f003f2d85f4: hlt    
  0x00007f003f2d85f5: hlt    
  0x00007f003f2d85f6: hlt    
  0x00007f003f2d85f7: hlt    
  0x00007f003f2d85f8: hlt    
  0x00007f003f2d85f9: hlt    
  0x00007f003f2d85fa: hlt    
  0x00007f003f2d85fb: hlt    
  0x00007f003f2d85fc: hlt    
  0x00007f003f2d85fd: hlt    
  0x00007f003f2d85fe: hlt    
  0x00007f003f2d85ff: hlt    
[Stub Code]
  0x00007f003f2d8600: nop                       ;   {no_reloc}
  0x00007f003f2d8601: nop
  0x00007f003f2d8602: nop
  0x00007f003f2d8603: nop
  0x00007f003f2d8604: nop
  0x00007f003f2d8605: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d860f: jmp    0x00007f003f2d860f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2d8614: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2d8619: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2d861e: sub    rsp,0x80
  0x00007f003f2d8625: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2d862a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2d862f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2d8634: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2d8639: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2d863e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2d8643: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2d8648: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2d864d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2d8652: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2d8657: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2d865c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2d8661: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2d8666: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2d866b: mov    QWORD PTR [rsp],r15
  0x00007f003f2d866f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2d8679: movabs rsi,0x7f003f2d8619  ;   {internal_word}
  0x00007f003f2d8683: mov    rdx,rsp
  0x00007f003f2d8686: and    rsp,0xfffffffffffffff0
  0x00007f003f2d868a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2d868f: hlt    
[Deopt Handler Code]
  0x00007f003f2d8690: movabs r10,0x7f003f2d8690  ;   {section_word}
  0x00007f003f2d869a: push   r10
  0x00007f003f2d869c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2d86a1: hlt    
  0x00007f003f2d86a2: hlt    
  0x00007f003f2d86a3: hlt    
  0x00007f003f2d86a4: hlt    
  0x00007f003f2d86a5: hlt    
  0x00007f003f2d86a6: hlt    
  0x00007f003f2d86a7: hlt    
<nmethod compile_id='145' compiler='C1' level='3' entry='0x00007f003f2d8360' size='1720' address='0x00007f003f2d81d0' relocation_offset='312' insts_offset='400' stub_offset='1072' scopes_data_offset='1272' scopes_pcs_offset='1440' dependencies_offset='1696' nul_chk_table_offset='1704' metadata_offset='1240' method='java/lang/ClassLoader getClassLoadingLock (Ljava/lang/String;)Ljava/lang/Object;' bytes='35' count='398' iicount='398' stamp='0.656'/>
<writer thread='139637818533632'/>
<task_queued compile_id='148' method='java/util/jar/JarFile getJarEntry (Ljava/lang/String;)Ljava/util/jar/JarEntry;' bytes='9' count='1024' iicount='1024' level='3' stamp='0.656' comment='tiered' hot_count='1024'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/ClassLoader.findLoadedClass  [0x00007f003f2d8a60, 0x00007f003f2d8c98]  568 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003877f300} &apos;findLoadedClass&apos; &apos;(Ljava/lang/String;)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;
  # this:     rsi:rsi   = &apos;java/lang/ClassLoader&apos;
  # parm0:    rdx
<writer thread='139637818533632'/>
[Loaded org.graalvm.compiler.options.OptionDescriptors from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
<writer thread='139637817480960'/>
:rdx                    = &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2d8a60: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2d8a64: shl    r10,0x3
  0x00007f003f2d8a68: cmp    r10,rax
  0x00007f003f2d8a6b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2d8a71: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2d8a7c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2d8a80: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2d8a87: push   rbp
  0x00007f003f2d8a88: sub    rsp,0x40
  0x00007f003f2d8a8c: movabs rdi,0x7f0038a8f7b0  ;   {metadata(method data for {method} {0x00007f003877f300} &apos;findLoadedClass&apos; &apos;(Ljava/lang/String;)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d8a96: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2d8a9c: add    ebx,0x8
  0x00007f003f2d8a9f: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2d8aa5: movabs rdi,0x7f003877f300  ;   {metadata({method} {0x00007f003877f300} &apos;findLoadedClass&apos; &apos;(Ljava/lang/String;)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d8aaf: and    ebx,0x1ff8
  0x00007f003f2d8ab5: cmp    ebx,0x0
  0x00007f003f2d8ab8: je     0x00007f003f2d8b78  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::findLoadedClass@0 (line 1036)

  0x00007f003f2d8abe: mov    rdi,rsi
  0x00007f003f2d8ac1: movabs rbx,0x7f0038a8f7b0  ;   {metadata(method data for {method} {0x00007f003877f300} &apos;findLoadedClass&apos; &apos;(Ljava/lang/String;)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d8acb: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f2d8ad3: mov    rdi,rdx
  0x00007f003f2d8ad6: mov    rdx,rdi
  0x00007f003f2d8ad9: mov    rbx,rsi
  0x00007f003f2d8adc: mov    rsi,rbx            ;*invokespecial checkName {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::findLoadedClass@2 (line 1036)

  0x00007f003f2d8adf: mov    QWORD PTR [rsp+0x28],rdi
  0x00007f003f2d8ae4: mov    QWORD PTR [rsp+0x20],rbx
  0x00007f003f2d8ae9: nop
  0x00007f003f2d8aea: nop
  0x00007f003f2d8aeb: nop
  0x00007f003f2d8aec: nop
  0x00007f003f2d8aed: nop
  0x00007f003f2d8aee: nop
  0x00007f003f2d8aef: call   0x00007f003f1c4d60  ; OopMap{[32]=Oop [40]=Oop off=148}
                                                ;*invokespecial checkName {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::findLoadedClass@2 (line 1036)
                                                ;   {optimized virtual_call}
  0x00007f003f2d8af4: cmp    eax,0x0
  0x00007f003f2d8af7: movabs rax,0x7f0038a8f7b0  ;   {metadata(method data for {method} {0x00007f003877f300} &apos;findLoadedClass&apos; &apos;(Ljava/lang/String;)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d8b01: movabs rdx,0x140
  0x00007f003f2d8b0b: jne    0x00007f003f2d8b1b
  0x00007f003f2d8b11: movabs rdx,0x150
  0x00007f003f2d8b1b: mov    rsi,QWORD PTR [rax+rdx*1]
  0x00007f003f2d8b1f: lea    rsi,[rsi+0x1]
  0x00007f003f2d8b23: mov    QWORD PTR [rax+rdx*1],rsi
  0x00007f003f2d8b27: jne    0x00007f003f2d8b43  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::findLoadedClass@5 (line 1036)

  0x00007f003f2d8b2d: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f2d8b37: add    rsp,0x40
  0x00007f003f2d8b3b: pop    rbp
  0x00007f003f2d8b3c: test   DWORD PTR [rip+0x1b0e95be],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2d8b42: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::findLoadedClass@9 (line 1037)

  0x00007f003f2d8b43: mov    rdx,QWORD PTR [rsp+0x28]
  0x00007f003f2d8b48: mov    rsi,QWORD PTR [rsp+0x20]
  0x00007f003f2d8b4d: mov    rdi,rsi
  0x00007f003f2d8b50: movabs rbx,0x7f0038a8f7b0  ;   {metadata(method data for {method} {0x00007f003877f300} &apos;findLoadedClass&apos; &apos;(Ljava/lang/String;)Ljava/lang/Class;&apos; in &apos;java/lang/ClassLoader&apos;)}
  0x00007f003f2d8b5a: add    QWORD PTR [rbx+0x160],0x1
  0x00007f003f2d8b62: nop
  0x00007f003f2d8b63: nop
  0x00007f003f2d8b64: nop
  0x00007f003f2d8b65: nop
  0x00007f003f2d8b66: nop
  0x00007f003f2d8b67: call   0x00007f003f1c4d60  ; OopMap{off=268}
                                                ;*invokespecial findLoadedClass0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ClassLoader::findLoadedClass@12 (line 1038)
                                                ;   {optimized virtual_call}
  0x00007f003f2d8b6c: add    rsp,0x40
  0x00007f003f2d8b70: pop    rbp
  0x00007f003f2d8b71: test   DWORD PTR [rip+0x1b0e9589],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2d8b77: ret    
  0x00007f003f2d8b78: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2d8b7d: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d8b85: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop off=298}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::findLoadedClass@-1 (line 1036)
                                                ;   {runtime_call}
  0x00007f003f2d8b8a: jmp    0x00007f003f2d8abe
  0x00007f003f2d8b8f: nop
  0x00007f003f2d8b90: nop
  0x00007f003f2d8b91: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2d8b98: movabs r10,0x0
  0x00007f003f2d8ba2: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2d8ba9: movabs r10,0x0
  0x00007f003f2d8bb3: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2d8bba: add    rsp,0x40
  0x00007f003f2d8bbe: pop    rbp
  0x00007f003f2d8bbf: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2d8bc4: hlt    
  0x00007f003f2d8bc5: hlt    
  0x00007f003f2d8bc6: hlt    
  0x00007f003f2d8bc7: hlt    
  0x00007f003f2d8bc8: hlt    
  0x00007f003f2d8bc9: hlt    
  0x00007f003f2d8bca: hlt    
  0x00007f003f2d8bcb: hlt    
  0x00007f003f2d8bcc: hlt    
  0x00007f003f2d8bcd: hlt    
  0x00007f003f2d8bce: hlt    
  0x00007f003f2d8bcf: hlt    
  0x00007f003f2d8bd0: hlt    
  0x00007f003f2d8bd1: hlt    
  0x00007f003f2d8bd2: hlt    
  0x00007f003f2d8bd3: hlt    
  0x00007f003f2d8bd4: hlt    
  0x00007f003f2d8bd5: hlt    
  0x00007f003f2d8bd6: hlt    
  0x00007f003f2d8bd7: hlt    
  0x00007f003f2d8bd8: hlt    
  0x00007f003f2d8bd9: hlt    
  0x00007f003f2d8bda: hlt    
  0x00007f003f2d8bdb: hlt    
  0x00007f003f2d8bdc: hlt    
  0x00007f003f2d8bdd: hlt    
  0x00007f003f2d8bde: hlt    
  0x00007f003f2d8bdf: hlt    
[Stub Code]
  0x00007f003f2d8be0: nop                       ;   {no_reloc}
  0x00007f003f2d8be1: nop
  0x00007f003f2d8be2: nop
  0x00007f003f2d8be3: nop
  0x00007f003f2d8be4: nop
  0x00007f003f2d8be5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d8bef: jmp    0x00007f003f2d8bef  ;   {runtime_call}
  0x00007f003f2d8bf4: nop
  0x00007f003f2d8bf5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d8bff: jmp    0x00007f003f2d8bff  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2d8c04: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2d8c09: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2d8c0e: sub    rsp,0x80
  0x00007f003f2d8c15: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2d8c1a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2d8c1f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2d8c24: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2d8c29: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2d8c2e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2d8c33: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2d8c38: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2d8c3d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2d8c42: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2d8c47: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2d8c4c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2d8c51: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2d8c56: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2d8c5b: mov    QWORD PTR [rsp],r15
  0x00007f003f2d8c5f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2d8c69: movabs rsi,0x7f003f2d8c09  ;   {internal_word}
  0x00007f003f2d8c73: mov    rdx,rsp
  0x00007f003f2d8c76: and    rsp,0xfffffffffffffff0
  0x00007f003f2d8c7a: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2d8c7f: hlt    
[Deopt Handler Code]
  0x00007f003f2d8c80: movabs r10,0x7f003f2d8c80  ;   {section_word}
  0x00007f003f2d8c8a: push   r10
  0x00007f003f2d8c8c: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2d8c91: hlt    
  0x00007f003f2d8c92: hlt    
  0x00007f003f2d8c93: hlt    
  0x00007f003f2d8c94: hlt    
  0x00007f003f2d8c95: hlt    
  0x00007f003f2d8c96: hlt    
  0x00007f003f2d8c97: hlt    
<nmethod compile_id='147' compiler='C1' level='3' entry='0x00007f003f2d8a60' size='1192' address='0x00007f003f2d88d0' relocation_offset='312' insts_offset='400' stub_offset='784' scopes_data_offset='976' scopes_pcs_offset='1040' dependencies_offset='1184' metadata_offset='968' method='java/lang/ClassLoader findLoadedClass (Ljava/lang/String;)Ljava/lang/Class;' bytes='16' count='400' iicount='400' stamp='0.657'/>
----------------------------------------------------------------------
java/util/jar/JarFile.getJarEntry  [0x00007f003f2d8f20, 0x00007f003f2d94c8]  1448 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/ja
<writer thread='139637818533632'/>
[Loaded sun.reflect.UnsafeFieldAccessorFactory from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
r/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;
  # this:     rsi:rsi   = &apos;java/util/jar/JarFile&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2d8f20: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2d8f24: shl    r10,0x3
  0x00007f003f2d8f28: cmp    r10,rax
  0x00007f003f2d8f2b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2d8f31: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2d8f3c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2d8f40: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2d8f47: push   rbp
  0x00007f003f2d8f48: sub    rsp,0x30
  0x00007f003f2d8f4c: movabs rdi,0x7f0038a5b648  ;   {metadata(method data for {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2d8f56: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2d8f5c: add    ebx,0x8
  0x00007f003f2d8f5f: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2d8f65: movabs rdi,0x7f0038a3bd38  ;   {metadata({method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2d8f6f: and    ebx,0x1ff8
  0x00007f003f2d8f75: cmp    ebx,0x0
  0x00007f003f2d8f78: je     0x00007f003f2d93c4  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@0 (line 223)

  0x00007f003f2d8f7e: mov    rdi,rsi
  0x00007f003f2d8f81: movabs rbx,0x7f0038a5b648  ;   {metadata(method data for {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2d8f8b: mov    edi,DWORD PTR [rdi+0x8]
  0x00007f003f2d8f8e: shl    rdi,0x3
  0x00007f003f2d8f92: cmp    rdi,QWORD PTR [rbx+0x140]
  0x00007f003f2d8f99: jne    0x00007f003f2d8fa8
  0x00007f003f2d8f9b: add    QWORD PTR [rbx+0x148],0x1
  0x00007f003f2d8fa3: jmp    0x00007f003f2d916a
  0x00007f003f2d8fa8: cmp    rdi,QWORD PTR [rbx+0x150]
  0x00007f003f2d8faf: jne    0x00007f003f2d8fbe
  0x00007f003f2d8fb1: add    QWORD PTR [rbx+0x158],0x1
  0x00007f003f2d8fb9: jmp    0x00007f003f2d916a
  0x00007f003f2d8fbe: cmp    rdi,QWORD PTR [rbx+0x160]
  0x00007f003f2d8fc5: jne    0x00007f003f2d8fd4
  0x00007f003f2d8fc7: add    QWORD PTR [rbx+0x168],0x1
  0x00007f003f2d8fcf: jmp    0x00007f003f2d916a
  0x00007f003f2d8fd4: cmp    rdi,QWORD PTR [rbx+0x170]
  0x00007f003f2d8fdb: jne    0x00007f003f2d8fea
  0x00007f003f2d8fdd: add    QWORD PTR [rbx+0x178],0x1
  0x00007f003f2d8fe5: jmp    0x00007f003f2d916a
  0x00007f003f2d8fea: cmp    rdi,QWORD PTR [rbx+0x180]
  0x00007f003f2d8ff1: jne    0x00007f003f2d9000
  0x00007f003f2d8ff3: add    QWORD PTR [rbx+0x188],0x1
  0x00007f003f2d8ffb: jmp    0x00007f003f2d916a
  0x00007f003f2d9000: cmp    rdi,QWORD PTR [rbx+0x190]
  0x00007f003f2d9007: jne    0x00007f003f2d9016
  0x00007f003f2d9009: add    QWORD PTR [rbx+0x198],0x1
  0x00007f003f2d9011: jmp    0x00007f003f2d916a
  0x00007f003f2d9016: cmp    rdi,QWORD PTR [rbx+0x1a0]
  0x00007f003f2d901d: jne    0x00007f003f2d902c
  0x00007f003f2d901f: add    QWORD PTR [rbx+0x1a8],0x1
  0x00007f003f2d9027: jmp    0x00007f003f2d916a
  0x00007f003f2d902c: cmp    rdi,QWORD PTR [rbx+0x1b0]
  0x00007f003f2d9033: jne    0x00007f003f2d9042
  0x00007f003f2d9035: add    QWORD PTR [rbx+0x1b8],0x1
  0x00007f003f2d903d: jmp    0x00007f003f2d916a
  0x00007f003f2d9042: cmp    QWORD PTR [rbx+0x140],0x0
  0x00007f003f2d904d: jne    0x00007f003f2d9066
  0x00007f003f2d904f: mov    QWORD PTR [rbx+0x140],rdi
  0x00007f003f2d9056: mov    QWORD PTR [rbx+0x148],0x1
  0x00007f003f2d9061: jmp    0x00007f003f2d916a
  0x00007f003f2d9066: cmp    QWORD PTR [rbx+0x150],0x0
  0x00007f003f2d9071: jne    0x00007f003f2d908a
  0x00007f003f2d9073: mov    QWORD PTR [rbx+0x150],rdi
  0x00007f003f2d907a: mov    QWORD PTR [rbx+0x158],0x1
  0x00007f003f2d9085: jmp    0x00007f003f2d916a
  0x00007f003f2d908a: cmp    QWORD PTR [rbx+0x160],0x0
  0x00007f003f2d9095: jne    0x00007f003f2d90ae
  0x00007f003f2d9097: mov    QWORD PTR [rbx+0x160],rdi
  0x00007f003f2d909e: mov    QWORD PTR [rbx+0x168],0x1
  0x00007f003f2d90a9: jmp    0x00007f003f2d916a
  0x00007f003f2d90ae: cmp    QWORD PTR [rbx+0x170],0x0
  0x00007f003f2d90b9: jne    0x00007f003f2d90d2
  0x00007f003f2d90bb: mov    QWORD PTR [rbx+0x170],rdi
  0x00007f003f2d90c2: mov    QWORD PTR [rbx+0x178],0x1
  0x00007f003f2d90cd: jmp    0x00007f003f2d916a
  0x00007f003f2d90d2: cmp    QWORD PTR [rbx+0x180],0x0
  0x00007f003f2d90dd: jne    0x00007f003f2d90f6
  0x00007f003f2d90df: mov    QWORD PTR [rbx+0x180],rdi
  0x00007f003f2d90e6: mov    QWORD PTR [rbx+0x188],0x1
  0x00007f003f2d90f1: jmp    0x00007f003f2d916a
  0x00007f003f2d90f6: cmp    QWORD PTR [rbx+0x190],0x0
  0x00007f003f2d9101: jne    0x00007f003f2d911a
  0x00007f003f2d9103: mov    QWORD PTR [rbx+0x190],rdi
  0x00007f003f2d910a: mov    QWORD PTR [rbx+0x198],0x1
  0x00007f003f2d9115: jmp    0x00007f003f2d916a
  0x00007f003f2d911a: cmp    QWORD PTR [rbx+0x1a0],0x0
  0x00007f003f2d9125: jne    0x00007f003f2d913e
  0x00007f003f2d9127: mov    QWORD PTR [rbx+0x1a0],rdi
  0x00007f003f2d912e: mov    QWORD PTR [rbx+0x1a8],0x1
  0x00007f003f2d9139: jmp    0x00007f003f2d916a
  0x00007f003f2d913e: cmp    QWORD PTR [rbx+0x1b0],0x0
  0x00007f003f2d9149: jne    0x00007f003f2d9162
  0x00007f003f2d914b: mov    QWORD PTR [rbx+0x1b0],rdi
  0x00007f003f2d9152: mov    QWORD PTR [rbx+0x1b8],0x1
  0x00007f003f2d915d: jmp    0x00007f003f2d916a
  0x00007f003f2d9162: add    QWORD PTR [rbx+0x130],0x1
  0x00007f003f2d916a: nop
  0x00007f003f2d916b: nop
  0x00007f003f2d916c: nop
  0x00007f003f2d916d: movabs rax,0xffffffffffffffff
  0x00007f003f2d9177: call   0x00007f003f1c4f60  ; OopMap{off=604}
                                                ;*invokevirtual getEntry {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@2 (line 223)
                                                ;   {virtual_call}
  0x00007f003f2d917c: cmp    rax,0x0
  0x00007f003f2d9180: jne    0x00007f003f2d919b
  0x00007f003f2d9182: movabs rdi,0x7f0038a5b648  ;   {metadata(method data for {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2d918c: or     DWORD PTR [rdi+0x1c0],0x100
  0x00007f003f2d9196: jmp    0x00007f003f2d93b8
  0x00007f003f2d919b: movabs rbx,0x7c00508e8    ;   {metadata(&apos;java/util/jar/JarEntry&apos;)}
  0x00007f003f2d91a5: mov    edi,DWORD PTR [rax+0x8]
  0x00007f003f2d91a8: shl    rdi,0x3
  0x00007f003f2d91ac: cmp    rbx,QWORD PTR [rdi+0x38]
  0x00007f003f2d91b0: jne    0x00007f003f2d939c
  0x00007f003f2d91b6: movabs rdi,0x7f0038a5b648  ;   {metadata(method data for {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2d91c0: mov    ebx,DWORD PTR [rax+0x8]
  0x00007f003f2d91c3: shl    rbx,0x3
  0x00007f003f2d91c7: cmp    rbx,QWORD PTR [rdi+0x1d8]
  0x00007f003f2d91ce: jne    0x00007f003f2d91dd
  0x00007f003f2d91d0: add    QWORD PTR [rdi+0x1e0],0x1
  0x00007f003f2d91d8: jmp    0x00007f003f2d93b8
  0x00007f003f2d91dd: cmp    rbx,QWORD PTR [rdi+0x1e8]
  0x00007f003f2d91e4: jne    0x00007f003f2d91f3
  0x00007f003f2d91e6: add    QWORD PTR [rdi+0x1f0],0x1
  0x00007f003f2d91ee: jmp    0x00007f003f2d93b8
  0x00007f003f2d91f3: cmp    rbx,QWORD PTR [rdi+0x1f8]
  0x00007f003f2d91fa: jne    0x00007f003f2d9209
  0x00007f003f2d91fc: add    QWORD PTR [rdi+0x200],0x1
  0x00007f003f2d9204: jmp    0x00007f003f2d93b8
  0x00007f003f2d9209: cmp    rbx,QWORD PTR [rdi+0x208]
  0x00007f003f2d9210: jne    0x00007f003f2d921f
  0x00007f003f2d9212: add    QWORD PTR [rdi+0x210],0x1
  0x00007f003f2d921a: jmp    0x00007f003f2d93b8
  0x00007f003f2d921f: cmp    rbx,QWORD PTR [rdi+0x218]
  0x00007f003f2d9226: jne    0x00007f003f2d9235
  0x00007f003f2d9228: add    QWORD PTR [rdi+0x220],0x1
  0x00007f003f2d9230: jmp    0x00007f003f2d93b8
  0x00007f003f2d9235: cmp    rbx,QWORD PTR [rdi+0x228]
  0x00007f003f2d923c: jne    0x00007f003f2d924b
  0x00007f003f2d923e: add    QWORD PTR [rdi+0x230],0x1
  0x00007f003f2d9246: jmp    0x00007f003f2d93b8
  0x00007f003f2d924b: cmp    rbx,QWORD PTR [rdi+0x238]
  0x00007f003f2d9252: jne    0x00007f003f2d9261
  0x00007f003f2d9254: add    QWORD PTR [rdi+0x240],0x1
  0x00007f003f2d925c: jmp    0x00007f003f2d93b8
  0x00007f003f2d9261: cmp    rbx,QWORD PTR [rdi+0x248]
  0x00007f003f2d9268: jne    0x00007f003f2d9277
  0x00007f003f2d926a: add    QWORD PTR [rdi+0x250],0x1
  0x00007f003f2d9272: jmp    0x00007f003f2d93b8
  0x00007f003f2d9277: cmp    QWORD PTR [rdi+0x1d8],0x0
  0x00007f003f2d9282: jne    0x00007f003f2d929b
  0x00007f003f2d9284: mov    QWORD PTR [rdi+0x1d8],rbx
  0x00007f003f2d928b: mov    QWORD PTR [rdi+0x1e0],0x1
  0x00007f003f2d9296: jmp    0x00007f003f2d93b8
  0x00007f003f2d929b: cmp    QWORD PTR [rdi+0x1e8],0x0
  0x00007f003f2d92a6: jne    0x00007f003f2d92bf
  0x00007f003f2d92a8: mov    QWORD PTR [rdi+0x1e8],rbx
  0x00007f003f2d92af: mov    QWORD PTR [rdi+0x1f0],0x1
  0x00007f003f2d92ba: jmp    0x00007f003f2d93b8
  0x00007f003f2d92bf: cmp    QWORD PTR [rdi+0x1f8],0x0
  0x00007f003f2d92ca: jne    0x00007f003f2d92e3
  0x00007f003f2d92cc: mov    QWORD PTR [rdi+0x1f8],rbx
  0x00007f003f2d92d3: mov    QWORD PTR [rdi+0x200],0x1
  0x00007f003f2d92de: jmp    0x00007f003f2d93b8
  0x00007f003f2d92e3: cmp    QWORD PTR [rdi+0x208],0x0
  0x00007f003f2d92ee: jne    0x00007f003f2d9307
  0x00007f003f2d92f0: mov    QWORD PTR [rdi+0x208],rbx
  0x00007f003f2d92f7: mov    QWORD PTR [rdi+0x210],0x1
  0x00007f003f2d9302: jmp    0x00007f003f2d93b8
  0x00007f003f2d9307: cmp    QWORD PTR [rdi+0x218],0x0
  0x00007f003f2d9312: jne    0x00007f003f2d932b
  0x00007f003f2d9314: mov    QWORD PTR [rdi+0x218],rbx
  0x00007f003f2d931b: mov    QWORD PTR [rdi+0x220],0x1
  0x00007f003f2d9326: jmp    0x00007f003f2d93b8
  0x00007f003f2d932b: cmp    QWORD PTR [rdi+0x228],0x0
  0x00007f003f2d9336: jne    0x00007f003f2d934f
  0x00007f003f2d9338: mov    QWORD PTR [rdi+0x228],rbx
  0x00007f003f2d933f: mov    QWORD PTR [rdi+0x230],0x1
  0x00007f003f2d934a: jmp    0x00007f003f2d93b8
  0x00007f003f2d934f: cmp    QWORD PTR [rdi+0x238],0x0
  0x00007f003f2d935a: jne    0x00007f003f2d9373
  0x00007f003f2d935c: mov    QWORD PTR [rdi+0x238],rbx
  0x00007f003f2d9363: mov    QWORD PTR [rdi+0x240],0x1
  0x00007f003f2d936e: jmp    0x00007f003f2d93b8
  0x00007f003f2d9373: cmp    QWORD PTR [rdi+0x248],0x0
  0x00007f003f2d937e: jne    0x00007f003f2d9397
  0x00007f003f2d9380: mov    QWORD PTR [rdi+0x248],rbx
  0x00007f003f2d9387: mov    QWORD PTR [rdi+0x250],0x1
  0x00007f003f2d9392: jmp    0x00007f003f2d93b8
  0x00007f003f2d9397: jmp    0x00007f003f2d93b8
  0x00007f003f2d939c: movabs rdi,0x7f0038a5b648  ;   {metadata(method data for {method} {0x00007f0038a3bd38} &apos;getJarEntry&apos; &apos;(Ljava/lang/String;)Ljava/util/jar/JarEntry;&apos; in &apos;java/util/jar/JarFile&apos;)}
  0x00007f003f2d93a6: sub    QWORD PTR [rdi+0x1c8],0x1
  0x00007f003f2d93ae: jmp    0x00007f003f2d93db
  0x00007f003f2d93b3: jmp    0x00007f003f2d93b8  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@5 (line 223)

  0x00007f003f2d93b8: add    rsp,0x30
  0x00007f003f2d93bc: pop    rbp
  0x00007f003f2d93bd: test   DWORD PTR [rip+0x1b0e8d3d],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2d93c3: ret    
  0x00007f003f2d93c4: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2d93c9: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2d93d1: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop off=1206}
                                                ;*synchronization entry
                                                ; - java.util.jar.JarFile::getJarEntry@-1 (line 223)
                                                ;   {runtime_call}
  0x00007f003f2d93d6: jmp    0x00007f003f2d8f7e
  0x00007f003f2d93db: mov    QWORD PTR [rsp],rax
  0x00007f003f2d93df: call   0x00007f003f27b2c0  ; OopMap{off=1220}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::getJarEntry@5 (line 223)
                                                ;   {runtime_call}
  0x00007f003f2d93e4: nop
  0x00007f003f2d93e5: nop
  0x00007f003f2d93e6: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2d93ed: movabs r10,0x0
  0x00007f003f2d93f7: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2d93fe: movabs r10,0x0
  0x00007f003f2d9408: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2d940f: add    rsp,0x30
  0x00007f003f2d9413: pop    rbp
  0x00007f003f2d9414: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2d9419: hlt    
  0x00007f003f2d941a: hlt    
  0x00007f003f2d941b: hlt    
  0x00007f003f2d941c: hlt    
  0x00007f003f2d941d: hlt    
  0x00007f003f2d941e: hlt    
  0x00007f003f2d941f: hlt    
[Stub Code]
  0x00007f003f2d9420: nop                       ;   {no_reloc}
  0x00007f003f2d9421: nop
  0x00007f003f2d9422: nop
  0x00007f003f2d9423: nop
  0x00007f003f2d9424: nop
  0x00007f003f2d9425: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2d942f: jmp    0x00007f003f2d942f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2d9434: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2d9439: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2d943e: sub    rsp,0x80
  0x00007f003f2d9445: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2d944a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2d944f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2d9454: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2d9459: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2d945e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2d9463: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2d9468: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2d946d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2d9472: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2d9477: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2d947c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2d9481: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2d9486: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2d948b: mov    QWORD PTR [rsp],r15
  0x00007f003f2d948f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2d9499: movabs rsi,0x7f003f2d9439  ;   {internal_word}
  0x00007f003f2d94a3: mov    rdx,rsp
  0x00007f003f2d94a6: and    rsp,0xfffffffffffffff0
  0x00007f003f2d94aa: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2d94af: hlt    
[Deopt Handler Code]
  0x00007f003f2d94b0: movabs r10,0x7f003f2d94b0  ;   {section_word}
  0x00007f003f2d94ba: push   r10
  0x00007f003f2d94bc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2d94c1: hlt    
  0x00007f003f2d94c2: hlt    
  0x00007f003f2d94c3: hlt    
  0x00007f003f2d94c4: hlt    
  0x00007f003f2d94c5: hlt    
  0x00007f003f2d94c6: hlt    
  0x00007f003f2d94c7: hlt    
<nmethod compile_id='148' compiler='C1' level='3' entry='0x00007f003f2d8f20' size='2024' address='0x00007f003f2d8d90' relocation_offset='312' insts_offset='400' stub_offset='1680' scopes_data_offset='1856' scopes_pcs_offset='1904' dependencies_offset='2016' metadata_offset='1848' method='java/util/jar/JarFile getJarEntry (Ljava/lang/String;)Ljava/util/jar/JarEntry;' bytes='9' count='1024' iicount='1024' stamp='0.659'/>
----------------------------------------------------------------------
java/util/zip/ZipCoder.isUTF8  [0x00007f003f2d9700, 0x00007f003f2d9810]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038a49180} &apos;isUTF8&apos; &apos;()Z&apos; in &apos;java/util/zip/ZipCoder&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2d9700: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2d9704: shl    r10,0x3
  0x00007f003f2d9708: cmp    r10,rax
  0x00007f003f2d970b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2d9711: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2d971c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2d9720: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2d9727: push   rbp
  0x00007f003f2d9728: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::isUTF8@0 (line 124)

  0x00007f003f2d972c: movsx  eax,BYTE PTR [rsi+0xc]  ;*getfield isUTF8 {reexecute=0 rethrow=0 return_oop=0}
<writer thread='139637818533632'/>
[Loaded sun.reflect.UnsafeQualifiedStaticFieldAccessorImpl from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
                                                ; - java.util.zip.ZipCoder::isUTF8@1 (line 124)

  0x00007f003f2d9730: and    eax,0x1
  0x00007f003f2d9733: add    rsp,0x30
  0x00007f003f2d9737: pop    rbp
  0x00007f003f2d9738: test   DWORD PTR [rip+0x1b0e89c2],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2d973e: ret    
  0x00007f003f2d973f: nop
  0x00007f003f2d9740: nop
  0x00007f003f2d9741: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2d9748: movabs r10,0x0
  0x00007f003f2d9752: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2d9759: movabs r10,0x0
  0x00007f003f2d9763: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2d976a: add    rsp,0x30
  0x00007f003f2d976e: pop    rbp
  0x00007f003f2d976f: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2d9774: hlt    
  0x00007f003f2d9775: hlt    
  0x00007f003f2d9776: hlt    
  0x00007f003f2d9777: hlt    
  0x00007f003f2d9778: hlt    
  0x00007f003f2d9779: hlt    
  0x00007f003f2d977a: hlt    
  0x00007f003f2d977b: hlt    
  0x00007f003f2d977c: hlt    
  0x00007f003f2d977d: hlt    
  0x00007f003f2d977e: hlt    
  0x00007f003f2d977f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2d9780: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2d9785: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2d978a: sub    rsp,0x80
  0x00007f003f2d9791: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2d9796: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2d979b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2d97a0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2d97a5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2d97aa: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2d97af: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2d97b4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2d97b9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2d97be: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2d97c3: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2d97c8: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2d97cd: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2d97d2: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2d97d7: mov    QWORD PTR [rsp],r15
  0x00007f003f2d97db: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2d97e5: movabs rsi,0x7f003f2d9785  ;   {internal_word}
  0x00007f003f2d97ef: mov    rdx,rsp
  0x00007f003f2d97f2: and    rsp,0xfffffffffffffff0
  0x00007f003f2d97f6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2d97fb: hlt    
[Deopt Handler Code]
  0x00007f003f2d97fc: movabs r10,0x7f003f2d97fc  ;   {section_word}
  0x00007f003f2d9806: push   r10
  0x00007f003f2d9808: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2d980d: hlt    
  0x00007f003f2d980e: hlt    
  0x00007f003f2d980f: hlt    
<nmethod compile_id='136' compiler='C1' level='1' entry='0x00007f003f2d9700' size='736' address='0x00007f003f2d9590' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/util/zip/ZipCoder isUTF8 ()Z' bytes='5' count='151' iicount='151' stamp='0.659'/>
<writer thread='139637818533632'/>
[Loaded sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/jar/JarFile.access$300  [0x00007f003f2d9a00, 0x00007f003f2d9af0]  240 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f0038a3d5f8} &apos;access$300&apos; &apos;(Ljava/util/jar/JarFile;)Ljava/util/jar/JarVerifier;&apos; in &apos;java/util/jar/JarFile&apos;
  # parm0:    rsi:rsi   = &apos;java/util/jar/JarFile&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2d9a00: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2d9a07: push   rbp
  0x00007f003f2d9a08: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::access$300@0 (line 71)

  0x00007f003f2d9a0c: mov    eax,DWORD PTR [rsi+0x38]  ; implicit exception: dispatches to 0x00007f003f2d9a1f
  0x00007f003f2d9a0f: shl    rax,0x3            ;*getfield jv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::access$300@1 (line 71)

  0x00007f003f2d9a13: add    rsp,0x30
  0x00007f003f2d9a17: pop    rbp
  0x00007f003f2d9a18: test   DWORD PTR [rip+0x1b0e86e2],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2d9a1e: ret    
  0x00007f003f2d9a1f: call   0x00007f003f279000  ; OopMap{off=36}
                                                ;*getfield jv {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.jar.JarFile::access$300@1 (line 71)
                                                ;   {runtime_call}
  0x00007f003f2d9a24: nop
  0x00007f003f2d9a25: nop
  0x00007f003f2d9a26: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2d9a2d: movabs r10,0x0
  0x00007f003f2d9a37: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2d9a3e: movabs r10,0x0
  0x00007f003f2d9a48: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2d9a4f: add    rsp,0x30
  0x00007f003f2d9a53: pop    rbp
  0x00007f003f2d9a54: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2d9a59: hlt    
  0x00007f003f2d9a5a: hlt    
  0x00007f003f2d9a5b: hlt    
  0x00007f003f2d9a5c: hlt    
  0x00007f003f2d9a5d: hlt    
  0x00007f003f2d9a5e: hlt    
  0x00007f003f2d9a5f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2d9a60: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2d9a65: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2d9a6a: sub    rsp,0x80
  0x00007f003f2d9a71: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2d9a76: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2d9a7b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2d9a80: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2d9a85: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2d9a8a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2d9a8f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2d9a94: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2d9a99: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2d9a9e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2d9aa3: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2d9aa8: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2d9aad: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2d9ab2: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2d9ab7: mov    QWORD PTR [rsp],r15
  0x00007f003f2d9abb: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2d9ac5: movabs rsi,0x7f003f2d9a65  ;   {internal_word}
  0x00007f003f2d9acf: mov    rdx,rsp
  0x00007f003f2d9ad2: and    rsp,0xfffffffffffffff0
  0x00007f003f2d9ad6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2d9adb: hlt    
[Deopt Handler Code]
  0x00007f003f2d9adc: movabs r10,0x7f003f2d9adc  ;   {section_word}
  0x00007f003f2d9ae6: push   r10
  0x00007f003f2d9ae8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2d9aed: hlt    
  0x00007f003f2d9aee: hlt    
  0x00007f003f2d9aef: hlt    
<nmethod compile_id='137' compiler='C1' level='1' entry='0x00007f003f2d9a00' size='744' address='0x00007f003f2d9890' relocation_offset='312' insts_offset='368' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='640' dependencies_offset='720' nul_chk_table_offset='728' metadata_offset='608' method='java/util/jar/JarFile access$300 (Ljava/util/jar/JarFile;)Ljava/util/jar/JarVerifier;' bytes='5' count='149' iicount='149' stamp='0.659'/>
<writer thread='139637818533632'/>
<task_queued compile_id='149' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='1536' iicount='1536' level='1' stamp='0.659' comment='tiered' hot_count='1536'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/HashMap.afterNodeInsertion  [0x00007f003f2d9d00, 0x00007f003f2d9e10]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00388701d0} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = boolean
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2d9d00: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2d9d04: shl    r10,0x3
  0x00007f003f2d9d08: cmp    r10,rax
  0x00007f003f2d9d0b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2d9d11: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2d9d1c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2d9d20: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2d9d27: push   rbp
  0x00007f003f2d9d28: sub    rsp,0x30           ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::afterNodeInsertion@0 (line 1775)

  0x00007f003f2d9d2c: add    rsp,0x30
  0x00007f003f2d9d30: pop    rbp
  0x00007f003f2d9d31: test   DWORD PTR [rip+0x1b0e83c9],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2d9d37: ret    
  0x00007f003f2d9d38: nop
  0x00007f003f2d9d39: nop
  0x00007f003f2d9d3a: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2d9d41: movabs r10,0x0
  0x00007f003f2d9d4b: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2d9d52: movabs r10,0x0
  0x00007f003f2d9d5c: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2d9d63: add    rsp,0x30
  0x00007f003f2d9d67: pop    rbp
  0x00007f003f2d9d68: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2d9d6d: hlt    
  0x00007f003f2d9d6e: hlt    
  0x00007f003f2d9d6f: hlt    
  0x00007f003f2d9d70: hlt    
  0x00007f003f2d9d71: hlt    
  0x00007f003f2d9d72: hlt    
  0x00007f003f2d9d73: hlt    
  0x00007f003f2d9d74: hlt    
  0x00007f003f2d9d75: hlt    
  0x00007f003f2d9d76: hlt    
  0x00007f003f2d9d77: hlt    
  0x00007f003f2d9d78: hlt    
  0x00007f003f2d9d79: hlt    
  0x00007f003f2d9d7a: hlt    
  0x00007f003f2d9d7b: hlt    
  0x00007f003f2d9d7c: hlt    
  0x00007f003f2d9d7d: hlt    
  0x00007f003f2d9d7e: hlt    
  0x00007f003f2d9d7f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2d9d80: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2d9d85: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2d9d8a: sub    rsp,0x80
  0x00007f003f2d9d91: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2d9d96: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2d9d9b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2d9da0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2d9da5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2d9daa: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2d9daf: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2d9db4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2d9db9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2d9dbe: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2d9dc3: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2d9dc8: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2d9dcd: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2d9dd2: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2d9dd7: mov    QWORD PTR [rsp],r15
  0x00007f003f2d9ddb: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2d9de5: movabs rsi,0x7f003f2d9d85  ;   {internal_word}
  0x00007f003f2d9def: mov    rdx,rsp
  0x00007f003f2d9df2: and    rsp,0xfffffffffffffff0
  0x00007f003f2d9df6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2d9dfb: hlt    
[Deopt Handler Code]
  0x00007f003f2d9dfc: movabs r10,0x7f003f2d9dfc  ;   {section_word}
  0x00007f003f2d9e06: push   r10
  0x00007f003f2d9e08: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2d9e0d: hlt    
  0x00007f003f2d9e0e: hlt    
  0x00007f003f2d9e0f: hlt    
<nmethod compile_id='149' compiler='C1' level='1' entry='0x00007f003f2d9d00' size='712' address='0x00007f003f2d9b90' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='656' dependencies_offset='704' metadata_offset='640' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='1557' iicount='1557' stamp='0.660'/>
<make_not_entrant thread='139637817480960' compile_id='97' compiler='C1' level='3' stamp='0.660'/>
<writer thread='139637818533632'/>
<task_queued compile_id='150' method='java/util/concurrent/ConcurrentHashMap casTabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' bytes='20' count='512' iicount='512' level='3' stamp='0.660' comment='tiered' hot_count='512'/>
[Loaded org.graalvm.util.UnmodifiableMapCursor from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.casTabAt  [0x00007f003f2da000, 0x00007f003f2da190]  400 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f0038948068} &apos;casTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rsi:rsi   = &apos;[Ljava/util/concurrent/ConcurrentHashMap$Node;&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;
  # parm3:    r8:r8     = &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2da000: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2da007: push   rbp
  0x00007f003f2da008: sub    rsp,0x40
  0x00007f003f2da00c: mov    rax,rcx
  0x00007f003f2da00f: movabs rcx,0x7f0038a93d98  ;   {metadata(method data for {method} {0x00007f0038948068} &apos;casTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2da019: mov    edi,DWORD PTR [rcx+0xfc]
  0x00007f003f2da01f: add    edi,0x8
  0x00007f003f2da022: mov    DWORD PTR [rcx+0xfc],edi
  0x00007f003f2da028: movabs rcx,0x7f0038948068  ;   {metadata({method} {0x00007f0038948068} &apos;casTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2da032: and    edi,0x1ff8
  0x00007f003f2da038: cmp    edi,0x0
  0x00007f003f2da03b: je     0x00007f003f2da09e  ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@0 (line 760)

  0x00007f003f2da041: movsxd rdx,edx
  0x00007f003f2da044: mov    ecx,0x2
  0x00007f003f2da049: shl    rdx,cl
  0x00007f003f2da04c: movabs r10,0x10
  0x00007f003f2da056: add    rdx,r10
  0x00007f003f2da059: lea    rsi,[rsi+rdx*1]
  0x00007f003f2da05d: shr    rax,0x3
  0x00007f003f2da061: mov    r10,r8
  0x00007f003f2da064: shr    r10,0x3
  0x00007f003f2da068: lock cmpxchg DWORD PTR [rsi],r10d
  0x00007f003f2da06d: mov    eax,0x1
  0x00007f003f2da072: je     0x00007f003f2da07d
  0x00007f003f2da078: mov    eax,0x0
  0x00007f003f2da07d: shr    rsi,0x9
  0x00007f003f2da081: movabs rdi,0x7f003ae7c000
  0x00007f003f2da08b: mov    BYTE PTR [rsi+rdi*1],0x0  ;*invokevirtual compareAndSwapObject {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@16 (line 760)

  0x00007f003f2da08f: and    eax,0x1
  0x00007f003f2da092: add    rsp,0x40
  0x00007f003f2da096: pop    rbp
  0x00007f003f2da097: test   DWORD PTR [rip+0x1b0e8063],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2da09d: ret    
  0x00007f003f2da09e: mov    QWORD PTR [rsp+0x8],rcx
  0x00007f003f2da0a3: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2da0ab: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rax=Oop r8=Oop off=176}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@-1 (line 760)
                                                ;   {runtime_call}
  0x00007f003f2da0b0: jmp    0x00007f003f2da041
  0x00007f003f2da0b2: nop
  0x00007f003f2da0b3: nop
  0x00007f003f2da0b4: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2da0bb: movabs r10,0x0
  0x00007f003f2da0c5: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2da0cc: movabs r10,0x0
  0x00007f003f2da0d6: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2da0dd: add    rsp,0x40
  0x00007f003f2da0e1: pop    rbp
  0x00007f003f2da0e2: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2da0e7: hlt    
  0x00007f003f2da0e8: hlt    
  0x00007f003f2da0e9: hlt    
  0x00007f003f2da0ea: hlt    
  0x00007f003f2da0eb: hlt    
  0x00007f003f2da0ec: hlt    
  0x00007f003f2da0ed: hlt    
  0x00007f003f2da0ee: hlt    
  0x00007f003f2da0ef: hlt    
  0x00007f003f2da0f0: hlt    
  0x00007f003f2da0f1: hlt    
  0x00007f003f2da0f2: hlt    
  0x00007f003f2da0f3: hlt    
  0x00007f003f2da0f4: hlt    
  0x00007f003f2da0f5: hlt    
  0x00007f003f2da0f6: hlt    
  0x00007f003f2da0f7: hlt    
  0x00007f003f2da0f8: hlt    
  0x00007f003f2da0f9: hlt    
  0x00007f003f2da0fa: hlt    
  0x00007f003f2da0fb: hlt    
  0x00007f003f2da0fc: hlt    
  0x00007f003f2da0fd: hlt    
  0x00007f003f2da0fe: hlt    
  0x00007f003f2da0ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2da100: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2da105: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2da10a: sub    rsp,0x80
  0x00007f003f2da111: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2da116: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2da11b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2da120: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2da125: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2da12a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2da12f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2da134: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2da139: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2da13e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2da143: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2da148: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2da14d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2da152: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2da157: mov    QWORD PTR [rsp],r15
  0x00007f003f2da15b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2da165: movabs rsi,0x7f003f2da105  ;   {internal_word}
  0x00007f003f2da16f: mov    rdx,rsp
  0x00007f003f2da172: and    rsp,0xfffffffffffffff0
  0x00007f003f2da176: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2da17b: hlt    
[Deopt Handler Code]
  0x00007f003f2da17c: movabs r10,0x7f003f2da17c  ;   {section_word}
  0x00007f003f2da186: push   r10
  0x00007f003f2da188: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2da18d: hlt    
  0x00007f003f2da18e: hlt    
  0x00007f003f2da18f: hlt    
<nmethod compile_id='150' compiler='C1' level='3' entry='0x00007f003f2da000' size='896' address='0x00007f003f2d9e90' relocation_offset='312' insts_offset='368' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='808' dependencies_offset='888' metadata_offset='768' method='java/util/concurrent/ConcurrentHashMap casTabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' bytes='20' count='513' iicount='513' stamp='0.661'/>
<writer thread='139637818533632'/>
[Loaded org.graalvm.util.MapCursor from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
[Loaded org.graalvm.util.impl.EconomicMapImpl$2 from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
<task_queued compile_id='151' method='java/net/FactoryURLClassLoader loadClass (Ljava/lang/String;Z)Ljava/lang/Class;' bytes='40' count='384' iicount='384' throwouts='152' level='3' stamp='0.661' comment='tiered' hot_count='384'/>
<task_queued compile_id='152' method='java/util/concurrent/ConcurrentHashMap setTabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V' bytes='19' count='1450' iicount='1450' level='4' stamp='0.661' comment='tiered' hot_count='1450'/>
[Loaded org.graalvm.compiler.hotspot.HotSpotGraalCompilerFactory$Options from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/net/FactoryURLClassLoader.loadClass  [0x00007f003f2da420, 0x00007f003f2da9d8]  1464 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038a38a70} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/net/FactoryURLClassLoader&apos;
  # this:     rsi:rsi   = &apos;java/net/FactoryURLClassLoader&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  # parm1:    rcx       = boolean
  #           [sp+0x90]  (sp of caller)
  0x00007f003f2da420: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2da424: shl    r10,0x3
  0x00007f003f2da428: cmp    r10,rax
  0x00007f003f2da42b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2da431: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2da43c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2da440: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2da447: push   rbp
  0x00007f003f2da448: sub    rsp,0x80
  0x00007f003f2da44f: movabs rdi,0x7f0038a93fb8  ;   {metadata(method data for {method} {0x00007f0038a38a70} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/net/FactoryURLClassLoader&apos;)}
  0x00007f003f2da459: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2da45f: add    ebx,0x8
  0x00007f003f2da462: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2da468: movabs rdi,0x7f0038a38a70  ;   {metadata({method} {0x00007f0038a38a70} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/net/FactoryURLClassLoader&apos;)}
  0x00007f003f2da472: and    ebx,0x1ff8
  0x00007f003f2da478: cmp    ebx,0x0
  0x00007f003f2da47b: je     0x00007f003f2da863  ;*invokestatic getSecurityManager {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.FactoryURLClassLoader::loadClass@0 (line 807)

  0x00007f003f2da481: movabs rdi,0x7f0038a93fb8  ;   {metadata(method data for {method} {0x00007f0038a38a70} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/net/FactoryURLClassLoader&apos;)}
  0x00007f003f2da48b: add    QWORD PTR [rdi+0x130],0x1
  0x00007f003f2da493: movabs rdi,0x7f0038a22260  ;   {metadata(method data for {method} {0x00007f0038783598} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00007f003f2da49d: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2da4a3: add    ebx,0x8
  0x00007f003f2da4a6: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2da4ac: movabs rdi,0x7f0038783598  ;   {metadata({method} {0x00007f0038783598} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00007f003f2da4b6: and    ebx,0x7ffff8
  0x00007f003f2da4bc: cmp    ebx,0x0
  0x00007f003f2da4bf: je     0x00007f003f2da87a
  0x00007f003f2da4c5: movabs rdi,0x670b80c78    ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007f003f2da4cf: mov    edi,DWORD PTR [rdi+0x74]
  0x00007f003f2da4d2: shl    rdi,0x3
  0x00007f003f2da4d6: mov    QWORD PTR [rsp+0x58],rdi  ;*getstatic security {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.System::getSecurityManager@0 (line 334)
                                                ; - java.net.FactoryURLClassLoader::loadClass@0 (line 807)

  0x00007f003f2da4db: cmp    rdi,0x0
  0x00007f003f2da4df: movabs rbx,0x7f0038a93fb8  ;   {metadata(method data for {method} {0x00007f0038a38a70} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/net/FactoryURLClassLoader&apos;)}
  0x00007f003f2da4e9: movabs rax,0x140
  0x00007f003f2da4f3: je     0x00007f003f2da503
  0x00007f003f2da4f9: movabs rax,0x150
  0x00007f003f2da503: mov    r8,QWORD PTR [rbx+rax*1]
  0x00007f003f2da507: lea    r8,[r8+0x1]
  0x00007f003f2da50b: mov    QWORD PTR [rbx+rax*1],r8
  0x00007f003f2da50f: je     0x00007f003f2da83a  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.FactoryURLClassLoader::loadClass@5 (line 808)

  0x00007f003f2da515: mov    DWORD PTR [rsp+0x68],ecx
  0x00007f003f2da519: mov    QWORD PTR [rsp+0x60],rsi
  0x00007f003f2da51e: cmp    rax,QWORD PTR [rdx]  ;*invokevirtual lastIndexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.FactoryURLClassLoader::loadClass@11 (line 809)
                                                ; implicit exception: dispatches to 0x00007f003f2da891
  0x00007f003f2da521: mov    rbx,rdx
  0x00007f003f2da524: movabs rax,0x7f0038a93fb8  ;   {metadata(method data for {method} {0x00007f0038a38a70} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/net/FactoryURLClassLoader&apos;)}
  0x00007f003f2da52e: add    QWORD PTR [rax+0x160],0x1
  0x00007f003f2da536: movabs rbx,0x7f0038a82d50  ;   {metadata(method data for {method} {0x00007f003876c218} &apos;lastIndexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2da540: mov    eax,DWORD PTR [rbx+0xfc]
  0x00007f003f2da546: add    eax,0x8
  0x00007f003f2da549: mov    DWORD PTR [rbx+0xfc],eax
  0x00007f003f2da54f: movabs rbx,0x7f003876c218  ;   {metadata({method} {0x00007f003876c218} &apos;lastIndexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2da559: and    eax,0x7ffff8
  0x00007f003f2da55f: cmp    eax,0x0
  0x00007f003f2da562: je     0x00007f003f2da896
  0x00007f003f2da568: mov    ebx,DWORD PTR [rdx+0xc]
  0x00007f003f2da56b: shl    rbx,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@3 (line 1611)
                                                ; - java.net.FactoryURLClassLoader::loadClass@11 (line 809)

  0x00007f003f2da56f: mov    ebx,DWORD PTR [rbx+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@6 (line 1611)
                                                ; - java.net.FactoryURLClassLoader::loadClass@11 (line 809)
                                                ; implicit exception: dispatches to 0x00007f003f2da8ad
  0x00007f003f2da572: mov    rax,rdx
  0x00007f003f2da575: movabs r8,0x7f0038a82d50  ;   {metadata(method data for {method} {0x00007f003876c218} &apos;lastIndexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2da57f: add    QWORD PTR [r8+0x130],0x1
  0x00007f003f2da587: dec    ebx
  0x00007f003f2da589: mov    rax,rdx
  0x00007f003f2da58c: mov    edx,0x2e
  0x00007f003f2da591: mov    rcx,rbx
  0x00007f003f2da594: mov    rsi,rax            ;*invokevirtual lastIndexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@9 (line 1611)
                                                ; - java.net.FactoryURLClassLoader::loadClass@11 (line 809)

  0x00007f003f2da597: mov    QWORD PTR [rsp+0x50],rax
  0x00007f003f2da59c: nop
  0x00007f003f2da59d: nop
  0x00007f003f2da59e: nop
  0x00007f003f2da59f: call   0x00007f003f1c4d60  ; OopMap{[96]=Oop [80]=Oop [88]=Oop off=388}
                                                ;*invokevirtual lastIndexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@9 (line 1611)
                                                ; - java.net.FactoryURLClassLoader::loadClass@11 (line 809)
                                                ;   {optimized virtual_call}
  0x00007f003f2da5a4: cmp    eax,0xffffffff
  0x00007f003f2da5a7: movabs rdx,0x7f0038a93fb8  ;   {metadata(method data for {method} {0x00007f0038a38a70} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/net/FactoryURLClassLoader&apos;)}
  0x00007f003f2da5b1: movabs rcx,0x1f8
  0x00007f003f2da5bb: je     0x00007f003f2da5cb
  0x00007f003f2da5c1: movabs rcx,0x208
  0x00007f003f2da5cb: mov    rsi,QWORD PTR [rdx+rcx*1]
  0x00007f003f2da5cf: lea    rsi,[rsi+0x1]
  0x00007f003f2da5d3: mov    QWORD PTR [rdx+rcx*1],rsi
  0x00007f003f2da5d7: jne    0x00007f003f2da5f0  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.FactoryURLClassLoader::loadClass@19 (line 810)

  0x00007f003f2da5dd: mov    ecx,DWORD PTR [rsp+0x68]
  0x00007f003f2da5e1: mov    rdx,QWORD PTR [rsp+0x50]
  0x00007f003f2da5e6: mov    rsi,QWORD PTR [rsp+0x60]
  0x00007f003f2da5eb: jmp    0x00007f003f2da83a  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.FactoryURLClassLoader::loadClass@33 (line 814)

  0x00007f003f2da5f0: mov    rdx,QWORD PTR [rsp+0x50]
  0x00007f003f2da5f5: movabs rcx,0x7f0038a93fb8  ;   {metadata(method data for {method} {0x00007f0038a38a70} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/net/FactoryURLClassLoader&apos;)}
  0x00007f003f2da5ff: add    QWORD PTR [rcx+0x218],0x1
  0x00007f003f2da607: mov    edx,0x0
  0x00007f003f2da60c: mov    rcx,rax
  0x00007f003f2da60f: mov    rsi,QWORD PTR [rsp+0x50]  ;*invokevirtual substring {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.FactoryURLClassLoader::loadClass@27 (line 811)

  0x00007f003f2da614: nop
  0x00007f003f2da615: nop
  0x00007f003f2da616: nop
  0x00007f003f2da617: call   0x00007f003f1c4d60  ; OopMap{[96]=Oop [80]=Oop [88]=Oop off=508}
                                                ;*invokevirtual substring {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.FactoryURLClassLoader::loadClass@27 (line 811)
                                                ;   {optimized virtual_call}
  0x00007f003f2da61c: mov    rdi,QWORD PTR [rsp+0x58]
  0x00007f003f2da621: cmp    rax,QWORD PTR [rdi]  ; implicit exception: dispatches to 0x00007f003f2da8b2
  0x00007f003f2da624: mov    rdx,rdi
  0x00007f003f2da627: movabs rsi,0x7f0038a93fb8  ;   {metadata(method data for {method} {0x00007f0038a38a70} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/net/FactoryURLClassLoader&apos;)}
  0x00007f003f2da631: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2da634: shl    rdx,0x3
  0x00007f003f2da638: cmp    rdx,QWORD PTR [rsi+0x2c0]
  0x00007f003f2da63f: jne    0x00007f003f2da64e
  0x00007f003f2da641: add    QWORD PTR [rsi+0x2c8],0x1
  0x00007f003f2da649: jmp    0x00007f003f2da810
  0x00007f003f2da64e: cmp    rdx,QWORD PTR [rsi+0x2d0]
  0x00007f003f2da655: jne    0x00007f003f2da664
  0x00007f003f2da657: add    QWORD PTR [rsi+0x2d8],0x1
  0x00007f003f2da65f: jmp    0x00007f003f2da810
  0x00007f003f2da664: cmp    rdx,QWORD PTR [rsi+0x2e0]
  0x00007f003f2da66b: jne    0x00007f003f2da67a
  0x00007f003f2da66d: add    QWORD PTR [rsi+0x2e8],0x1
  0x00007f003f2da675: jmp    0x00007f003f2da810
  0x00007f003f2da67a: cmp    rdx,QWORD PTR [rsi+0x2f0]
  0x00007f003f2da681: jne    0x00007f003f2da690
  0x00007f003f2da683: add    QWORD PTR [rsi+0x2f8],0x1
  0x00007f003f2da68b: jmp    0x00007f003f2da810
  0x00007f003f2da690: cmp    rdx,QWORD PTR [rsi+0x300]
  0x00007f003f2da697: jne    0x00007f003f2da6a6
  0x00007f003f2da699: add    QWORD PTR [rsi+0x308],0x1
  0x00007f003f2da6a1: jmp    0x00007f003f2da810
  0x00007f003f2da6a6: cmp    rdx,QWORD PTR [rsi+0x310]
  0x00007f003f2da6ad: jne    0x00007f003f2da6bc
  0x00007f003f2da6af: add    QWORD PTR [rsi+0x318],0x1
  0x00007f003f2da6b7: jmp    0x00007f003f2da810
  0x00007f003f2da6bc: cmp    rdx,QWORD PTR [rsi+0x320]
  0x00007f003f2da6c3: jne    0x00007f003f2da6d2
  0x00007f003f2da6c5: add    QWORD PTR [rsi+0x328],0x1
  0x00007f003f2da6cd: jmp    0x00007f003f2da810
  0x00007f003f2da6d2: cmp    rdx,QWORD PTR [rsi+0x330]
  0x00007f003f2da6d9: jne    0x00007f003f2da6e8
  0x00007f003f2da6db: add    QWORD PTR [rsi+0x338],0x1
  0x00007f003f2da6e3: jmp    0x00007f003f2da810
  0x00007f003f2da6e8: cmp    QWORD PTR [rsi+0x2c0],0x0
  0x00007f003f2da6f3: jne    0x00007f003f2da70c
  0x00007f003f2da6f5: mov    QWORD PTR [rsi+0x2c0],rdx
  0x00007f003f2da6fc: mov    QWORD PTR [rsi+0x2c8],0x1
  0x00007f003f2da707: jmp    0x00007f003f2da810
  0x00007f003f2da70c: cmp    QWORD PTR [rsi+0x2d0],0x0
  0x00007f003f2da717: jne    0x00007f003f2da730
  0x00007f003f2da719: mov    QWORD PTR [rsi+0x2d0],rdx
  0x00007f003f2da720: mov    QWORD PTR [rsi+0x2d8],0x1
  0x00007f003f2da72b: jmp    0x00007f003f2da810
  0x00007f003f2da730: cmp    QWORD PTR [rsi+0x2e0],0x0
  0x00007f003f2da73b: jne    0x00007f003f2da754
  0x00007f003f2da73d: mov    QWORD PTR [rsi+0x2e0],rdx
  0x00007f003f2da744: mov    QWORD PTR [rsi+0x2e8],0x1
  0x00007f003f2da74f: jmp    0x00007f003f2da810
  0x00007f003f2da754: cmp    QWORD PTR [rsi+0x2f0],0x0
  0x00007f003f2da75f: jne    0x00007f003f2da778
  0x00007f003f2da761: mov    QWORD PTR [rsi+0x2f0],rdx
  0x00007f003f2da768: mov    QWORD PTR [rsi+0x2f8],0x1
  0x00007f003f2da773: jmp    0x00007f003f2da810
  0x00007f003f2da778: cmp    QWORD PTR [rsi+0x300],0x0
  0x00007f003f2da783: jne    0x00007f003f2da79c
  0x00007f003f2da785: mov    QWORD PTR [rsi+0x300],rdx
  0x00007f003f2da78c: mov    QWORD PTR [rsi+0x308],0x1
  0x00007f003f2da797: jmp    0x00007f003f2da810
  0x00007f003f2da79c: cmp    QWORD PTR [rsi+0x310],0x0
  0x00007f003f2da7a7: jne    0x00007f003f2da7c0
  0x00007f003f2da7a9: mov    QWORD PTR [rsi+0x310],rdx
  0x00007f003f2da7b0: mov    QWORD PTR [rsi+0x318],0x1
  0x00007f003f2da7bb: jmp    0x00007f003f2da810
  0x00007f003f2da7c0: cmp    QWORD PTR [rsi+0x320],0x0
  0x00007f003f2da7cb: jne    0x00007f003f2da7e4
  0x00007f003f2da7cd: mov    QWORD PTR [rsi+0x320],rdx
  0x00007f003f2da7d4: mov    QWORD PTR [rsi+0x328],0x1
  0x00007f003f2da7df: jmp    0x00007f003f2da810
  0x00007f003f2da7e4: cmp    QWORD PTR [rsi+0x330],0x0
  0x00007f003f2da7ef: jne    0x00007f003f2da808
  0x00007f003f2da7f1: mov    QWORD PTR [rsi+0x330],rdx
  0x00007f003f2da7f8: mov    QWORD PTR [rsi+0x338],0x1
  0x00007f003f2da803: jmp    0x00007f003f2da810
  0x00007f003f2da808: add    QWORD PTR [rsi+0x2b0],0x1
  0x00007f003f2da810: mov    rdx,rax
  0x00007f003f2da813: mov    rsi,rdi            ;*invokevirtual checkPackageAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.FactoryURLClassLoader::loadClass@30 (line 811)

  0x00007f003f2da816: nop
  0x00007f003f2da817: nop
  0x00007f003f2da818: nop
  0x00007f003f2da819: nop
  0x00007f003f2da81a: nop
  0x00007f003f2da81b: nop
  0x00007f003f2da81c: nop
  0x00007f003f2da81d: movabs rax,0xffffffffffffffff
  0x00007f003f2da827: call   0x00007f003f1c4f60  ; OopMap{[96]=Oop [80]=Oop off=1036}
                                                ;*invokevirtual checkPackageAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.FactoryURLClassLoader::loadClass@30 (line 811)
                                                ;   {virtual_call}
  0x00007f003f2da82c: mov    ecx,DWORD PTR [rsp+0x68]
  0x00007f003f2da830: mov    rdx,QWORD PTR [rsp+0x50]
  0x00007f003f2da835: mov    rsi,QWORD PTR [rsp+0x60]
  0x00007f003f2da83a: mov    rdi,rsi
  0x00007f003f2da83d: movabs rbx,0x7f0038a93fb8  ;   {metadata(method data for {method} {0x00007f0038a38a70} &apos;loadClass&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/Class;&apos; in &apos;java/net/FactoryURLClassLoader&apos;)}
  0x00007f003f2da847: add    QWORD PTR [rbx+0x348],0x1
  0x00007f003f2da84f: call   0x00007f003f1c4d60  ; OopMap{off=1076}
                                                ;*invokespecial loadClass {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.FactoryURLClassLoader::loadClass@36 (line 814)
                                                ;   {optimized virtual_call}
  0x00007f003f2da854: add    rsp,0x80
  0x00007f003f2da85b: pop    rbp
  0x00007f003f2da85c: test   DWORD PTR [rip+0x1b0e789e],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2da862: ret    
  0x00007f003f2da863: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2da868: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2da870: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop off=1109}
                                                ;*synchronization entry
                                                ; - java.net.FactoryURLClassLoader::loadClass@-1 (line 807)
                                                ;   {runtime_call}
  0x00007f003f2da875: jmp    0x00007f003f2da481
  0x00007f003f2da87a: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2da87f: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2da887: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop off=1132}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ; - java.net.FactoryURLClassLoader::loadClass@0 (line 807)
                                                ;   {runtime_call}
  0x00007f003f2da88c: jmp    0x00007f003f2da4c5
  0x00007f003f2da891: call   0x00007f003f279000  ; OopMap{rdx=Oop [88]=Oop [96]=Oop off=1142}
                                                ;*invokevirtual lastIndexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.FactoryURLClassLoader::loadClass@11 (line 809)
                                                ;   {runtime_call}
  0x00007f003f2da896: mov    QWORD PTR [rsp+0x8],rbx
  0x00007f003f2da89b: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2da8a3: call   0x00007f003f27d5e0  ; OopMap{rdx=Oop [88]=Oop [96]=Oop off=1160}
                                                ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1611)
                                                ; - java.net.FactoryURLClassLoader::loadClass@11 (line 809)
                                                ;   {runtime_call}
  0x00007f003f2da8a8: jmp    0x00007f003f2da568
  0x00007f003f2da8ad: call   0x00007f003f279000  ; OopMap{rdx=Oop [88]=Oop [96]=Oop off=1170}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::lastIndexOf@6 (line 1611)
                                                ; - java.net.FactoryURLClassLoader::loadClass@11 (line 809)
                                                ;   {runtime_call}
  0x00007f003f2da8b2: call   0x00007f003f279000  ; OopMap{[96]=Oop [80]=Oop rax=Oop rdi=Oop [88]=Oop off=1175}
                                                ;*invokevirtual checkPackageAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.net.FactoryURLClassLoader::loadClass@30 (line 811)
                                                ;   {runtime_call}
  0x00007f003f2da8b7: nop
  0x00007f003f2da8b8: nop
  0x00007f003f2da8b9: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2da8c0: movabs r10,0x0
  0x00007f003f2da8ca: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2da8d1: movabs r10,0x0
  0x00007f003f2da8db: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2da8e2: add    rsp,0x80
  0x00007f003f2da8e9: pop    rbp
  0x00007f003f2da8ea: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2da8ef: hlt    
  0x00007f003f2da8f0: hlt    
  0x00007f003f2da8f1: hlt    
  0x00007f003f2da8f2: hlt    
  0x00007f003f2da8f3: hlt    
  0x00007f003f2da8f4: hlt    
  0x00007f003f2da8f5: hlt    
  0x00007f003f2da8f6: hlt    
  0x00007f003f2da8f7: hlt    
  0x00007f003f2da8f8: hlt    
  0x00007f003f2da8f9: hlt    
  0x00007f003f2da8fa: hlt    
  0x00007f003f2da8fb: hlt    
  0x00007f003f2da8fc: hlt    
  0x00007f003f2da8fd: hlt    
  0x00007f003f2da8fe: hlt    
  0x00007f003f2da8ff: hlt    
[Stub Code]
  0x00007f003f2da900: nop                       ;   {no_reloc}
  0x00007f003f2da901: nop
  0x00007f003f2da902: nop
  0x00007f003f2da903: nop
  0x00007f003f2da904: nop
  0x00007f003f2da905: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2da90f: jmp    0x00007f003f2da90f  ;   {runtime_call}
  0x00007f003f2da914: nop
  0x00007f003f2da915: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2da91f: jmp    0x00007f003f2da91f  ;   {runtime_call}
  0x00007f003f2da924: nop
  0x00007f003f2da925: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2da92f: jmp    0x00007f003f2da92f  ;   {runtime_call}
  0x00007f003f2da934: nop
  0x00007f003f2da935: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2da93f: jmp    0x00007f003f2da93f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2da944: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2da949: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2da94e: sub    rsp,0x80
  0x00007f003f2da955: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2da95a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2da95f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2da964: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2da969: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2da96e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2da973: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2da978: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2da97d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2da982: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2da987: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2da98c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2da991: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2da996: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2da99b: mov    QWORD PTR [rsp],r15
  0x00007f003f2da99f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2da9a9: movabs rsi,0x7f003f2da949  ;   {internal_word}
  0x00007f003f2da9b3: mov    rdx,rsp
  0x00007f003f2da9b6: and    rsp,0xfffffffffffffff0
  0x00007f003f2da9ba: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2da9bf: hlt    
[Deopt Handler Code]
  0x00007f003f2da9c0: movabs r10,0x7f003f2da9c0  ;   {section_word}
  0x00007f003f2da9ca: push   r10
  0x00007f003f2da9cc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2da9d1: hlt    
  0x00007f003f2da9d2: hlt    
  0x00007f003f2da9d3: hlt    
  0x00007f003f2da9d4: hlt    
  0x00007f003f2da9d5: hlt    
  0x00007f003f2da9d6: hlt    
  0x00007f003f2da9d7: hlt    
<nmethod compile_id='151' compiler='C1' level='3' entry='0x00007f003f2da420' size='2592' address='0x00007f003f2da250' relocation_offset='312' insts_offset='464' stub_offset='1712' scopes_data_offset='1952' scopes_pcs_offset='2184' dependencies_offset='2552' nul_chk_table_offset='2560' metadata_offset='1928' method='java/net/FactoryURLClassLoader loadClass (Ljava/lang/String;Z)Ljava/lang/Class;' bytes='40' count='386' iicount='386' throwouts='154' stamp='0.663'/>
<writer thread='139637818533632'/>
<task_queued compile_id='153' method='java/lang/String indexOf (Ljava/lang/String;I)I' bytes='25' count='384' iicount='384' level='3' stamp='0.663' comment='tiered' hot_count='384'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/String.indexOf  [0x00007f003f2dae20, 0x00007f003f2dafe8]  456 bytes
<writer thread='139637818533632'/>
[Loaded org.graalvm.compiler.options.OptionKey from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/graal.jar]
<writer thread='139637817480960'/>
[Entry Point]
[Constants]
  # {method} {0x00007f003876c5e0} &apos;indexOf&apos; &apos;(Ljava/lang/String;I)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  # parm1:    rcx       = int
  #           [sp+0x60]  (sp of caller)
  0x00007f003f2dae20: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2dae24: shl    r10,0x3
  0x00007f003f2dae28: cmp    r10,rax
  0x00007f003f2dae2b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2dae31: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2dae3c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2dae40: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2dae47: push   rbp
  0x00007f003f2dae48: sub    rsp,0x50
  0x00007f003f2dae4c: mov    rbx,rcx
  0x00007f003f2dae4f: movabs rcx,0x7f0038a94360  ;   {metadata(method data for {method} {0x00007f003876c5e0} &apos;indexOf&apos; &apos;(Ljava/lang/String;I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2dae59: mov    r8d,DWORD PTR [rcx+0xfc]
  0x00007f003f2dae60: add    r8d,0x8
  0x00007f003f2dae64: mov    DWORD PTR [rcx+0xfc],r8d
  0x00007f003f2dae6b: movabs rcx,0x7f003876c5e0  ;   {metadata({method} {0x00007f003876c5e0} &apos;indexOf&apos; &apos;(Ljava/lang/String;I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2dae75: and    r8d,0x1ff8
  0x00007f003f2dae7c: cmp    r8d,0x0
  0x00007f003f2dae80: je     0x00007f003f2daed0  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@0 (line 1718)

  0x00007f003f2dae86: mov    esi,DWORD PTR [rsi+0xc]
  0x00007f003f2dae89: shl    rsi,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@1 (line 1718)

  0x00007f003f2dae8d: mov    ecx,DWORD PTR [rsi+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@9 (line 1718)
                                                ; implicit exception: dispatches to 0x00007f003f2daee4
  0x00007f003f2dae90: mov    r8d,DWORD PTR [rdx+0xc]  ; implicit exception: dispatches to 0x00007f003f2daee9
  0x00007f003f2dae94: shl    r8,0x3             ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@11 (line 1718)

  0x00007f003f2dae98: mov    edi,DWORD PTR [r8+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@19 (line 1718)
                                                ; implicit exception: dispatches to 0x00007f003f2daeee
  0x00007f003f2dae9c: movabs rdx,0x7f0038a94360  ;   {metadata(method data for {method} {0x00007f003876c5e0} &apos;indexOf&apos; &apos;(Ljava/lang/String;I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2daea6: add    QWORD PTR [rdx+0x130],0x1
  0x00007f003f2daeae: mov    edx,0x0
  0x00007f003f2daeb3: mov    r9d,0x0
  0x00007f003f2daeb9: mov    DWORD PTR [rsp],ebx  ;*invokestatic indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@21 (line 1718)

  0x00007f003f2daebc: nop
  0x00007f003f2daebd: nop
  0x00007f003f2daebe: nop
  0x00007f003f2daebf: call   0x00007f003f1c5160  ; OopMap{off=164}
                                                ;*invokestatic indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@21 (line 1718)
                                                ;   {static_call}
  0x00007f003f2daec4: add    rsp,0x50
  0x00007f003f2daec8: pop    rbp
  0x00007f003f2daec9: test   DWORD PTR [rip+0x1b0e7231],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2daecf: ret    
  0x00007f003f2daed0: mov    QWORD PTR [rsp+0x8],rcx
  0x00007f003f2daed5: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2daedd: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop rdx=Oop off=194}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1718)
                                                ;   {runtime_call}
  0x00007f003f2daee2: jmp    0x00007f003f2dae86
  0x00007f003f2daee4: call   0x00007f003f279000  ; OopMap{rdx=Oop rsi=Oop off=201}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@9 (line 1718)
                                                ;   {runtime_call}
  0x00007f003f2daee9: call   0x00007f003f279000  ; OopMap{rsi=Oop off=206}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@11 (line 1718)
                                                ;   {runtime_call}
  0x00007f003f2daeee: call   0x00007f003f279000  ; OopMap{rsi=Oop r8=Oop off=211}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@19 (line 1718)
                                                ;   {runtime_call}
  0x00007f003f2daef3: nop
  0x00007f003f2daef4: nop
  0x00007f003f2daef5: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2daefc: movabs r10,0x0
  0x00007f003f2daf06: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2daf0d: movabs r10,0x0
  0x00007f003f2daf17: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2daf1e: add    rsp,0x50
  0x00007f003f2daf22: pop    rbp
  0x00007f003f2daf23: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2daf28: hlt    
  0x00007f003f2daf29: hlt    
  0x00007f003f2daf2a: hlt    
  0x00007f003f2daf2b: hlt    
  0x00007f003f2daf2c: hlt    
  0x00007f003f2daf2d: hlt    
  0x00007f003f2daf2e: hlt    
  0x00007f003f2daf2f: hlt    
  0x00007f003f2daf30: hlt    
  0x00007f003f2daf31: hlt    
  0x00007f003f2daf32: hlt    
  0x00007f003f2daf33: hlt    
  0x00007f003f2daf34: hlt    
  0x00007f003f2daf35: hlt    
  0x00007f003f2daf36: hlt    
  0x00007f003f2daf37: hlt    
  0x00007f003f2daf38: hlt    
  0x00007f003f2daf39: hlt    
  0x00007f003f2daf3a: hlt    
  0x00007f003f2daf3b: hlt    
  0x00007f003f2daf3c: hlt    
  0x00007f003f2daf3d: hlt    
  0x00007f003f2daf3e: hlt    
  0x00007f003f2daf3f: hlt    
[Stub Code]
  0x00007f003f2daf40: nop                       ;   {no_reloc}
  0x00007f003f2daf41: nop
  0x00007f003f2daf42: nop
  0x00007f003f2daf43: nop
  0x00007f003f2daf44: nop
  0x00007f003f2daf45: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2daf4f: jmp    0x00007f003f2daf4f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2daf54: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2daf59: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2daf5e: sub    rsp,0x80
  0x00007f003f2daf65: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2daf6a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2daf6f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2daf74: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2daf79: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2daf7e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2daf83: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2daf88: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2daf8d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2daf92: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2daf97: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2daf9c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2dafa1: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2dafa6: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2dafab: mov    QWORD PTR [rsp],r15
  0x00007f003f2dafaf: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2dafb9: movabs rsi,0x7f003f2daf59  ;   {internal_word}
  0x00007f003f2dafc3: mov    rdx,rsp
  0x00007f003f2dafc6: and    rsp,0xfffffffffffffff0
  0x00007f003f2dafca: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2dafcf: hlt    
[Deopt Handler Code]
  0x00007f003f2dafd0: movabs r10,0x7f003f2dafd0  ;   {section_word}
  0x00007f003f2dafda: push   r10
  0x00007f003f2dafdc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2dafe1: hlt    
  0x00007f003f2dafe2: hlt    
  0x00007f003f2dafe3: hlt    
  0x00007f003f2dafe4: hlt    
  0x00007f003f2dafe5: hlt    
  0x00007f003f2dafe6: hlt    
  0x00007f003f2dafe7: hlt    
<nmethod compile_id='153' compiler='C1' level='3' entry='0x00007f003f2dae20' size='1200' address='0x00007f003f2dac90' relocation_offset='312' insts_offset='400' stub_offset='688' scopes_data_offset='864' scopes_pcs_offset='952' dependencies_offset='1160' nul_chk_table_offset='1168' metadata_offset='856' method='java/lang/String indexOf (Ljava/lang/String;I)I' bytes='25' count='384' iicount='384' stamp='0.664'/>
<writer thread='139637818533632'/>
[Loaded jdk.vm.ci.hotspot.HotSpotJVMCICompilerFactory$CompilationLevel from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotJVMCIRuntime$2 from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotJVMCICompilerFactory$CompilationLevelAdjustment from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl$1 from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded jdk.vm.ci.hotspot.UnsafeAccess from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
[Loaded java.lang.SecurityException from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<task_queued compile_id='154' method='java/util/BitSet wordIndex (I)I' bytes='5' count='384' iicount='384' level='3' stamp='0.665' comment='tiered' hot_count='384'/>
<task_queued compile_id='155' method='java/util/BitSet checkInvariants ()V' bytes='111' count='384' iicount='384' level='3' stamp='0.665' comment='tiered' hot_count='384'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/BitSet.wordIndex  [0x00007f003f2db4c0, 0x00007f003f2db5f0]  304 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f0038933390} &apos;wordIndex&apos; &apos;(I)I&apos; in &apos;java/util/BitSet&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2db4c0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2db4c7: push   rbp
  0x00007f003f2db4c8: sub    rsp,0x30
  0x00007f003f2db4cc: movabs rax,0x7f0038a94a90  ;   {metadata(method data for {method} {0x00007f0038933390} &apos;wordIndex&apos; &apos;(I)I&apos; in &apos;java/util/BitSet&apos;)}
  0x00007f003f2db4d6: mov    edi,DWORD PTR [rax+0xfc]
  0x00007f003f2db4dc: add    edi,0x8
  0x00007f003f2db4df: mov    DWORD PTR [rax+0xfc],edi
  0x00007f003f2db4e5: movabs rax,0x7f0038933390  ;   {metadata({method} {0x00007f0038933390} &apos;wordIndex&apos; &apos;(I)I&apos; in &apos;java/util/BitSet&apos;)}
  0x00007f003f2db4ef: and    edi,0x1ff8
  0x00007f003f2db4f5: cmp    edi,0x0
  0x00007f003f2db4f8: je     0x00007f003f2db510  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.BitSet::wordIndex@0 (line 112)

  0x00007f003f2db4fe: sar    esi,0x6
  0x00007f003f2db501: mov    rax,rsi
  0x00007f003f2db504: add    rsp,0x30
  0x00007f003f2db508: pop    rbp
  0x00007f003f2db509: test   DWORD PTR [rip+0x1b0e6bf1],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2db50f: ret    
  0x00007f003f2db510: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2db515: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2db51d: call   0x00007f003f27d5e0  ; OopMap{off=98}
                                                ;*synchronization entry
                                                ; - java.util.BitSet::wordIndex@-1 (line 112)
                                                ;   {runtime_call}
  0x00007f003f2db522: jmp    0x00007f003f2db4fe
  0x00007f003f2db524: nop
  0x00007f003f2db525: nop
  0x00007f003f2db526: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2db52d: movabs r10,0x0
  0x00007f003f2db537: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2db53e: movabs r10,0x0
  0x00007f003f2db548: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2db54f: add    rsp,0x30
  0x00007f003f2db553: pop    rbp
  0x00007f003f2db554: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2db559: hlt    
  0x00007f003f2db55a: hlt    
  0x00007f003f2db55b: hlt    
  0x00007f003f2db55c: hlt    
  0x00007f003f2db55d: hlt    
  0x00007f003f2db55e: hlt    
  0x00007f003f2db55f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2db560: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2db565: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2db56a: sub    rsp,0x80
  0x00007f003f2db571: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2db576: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2db57b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2db580: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2db585: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2db58a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2db58f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2db594: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2db599: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2db59e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2db5a3: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2db5a8: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2db5ad: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2db5b2: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2db5b7: mov    QWORD PTR [rsp],r15
  0x00007f003f2db5bb: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2db5c5: movabs rsi,0x7f003f2db565  ;   {internal_word}
  0x00007f003f2db5cf: mov    rdx,rsp
  0x00007f003f2db5d2: and    rsp,0xfffffffffffffff0
  0x00007f003f2db5d6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2db5db: hlt    
[Deopt Handler Code]
  0x00007f003f2db5dc: movabs r10,0x7f003f2db5dc  ;   {section_word}
  0x00007f003f2db5e6: push   r10
  0x00007f003f2db5e8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2db5ed: hlt    
  0x00007f003f2db5ee: hlt    
  0x00007f003f2db5ef: hlt    
<nmethod compile_id='154' compiler='C1' level='3' entry='0x00007f003f2db4c0' size='776' address='0x00007f003f2db350' relocation_offset='312' insts_offset='368' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='704' dependencies_offset='768' metadata_offset='672' method='java/util/BitSet wordIndex (I)I' bytes='5' count='385' iicount='385' stamp='0.681'/>
<writer thread='139639490488064'/>
<task_queued compile_id='156' method='java/lang/Enum ordinal ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.681' comment='tiered' hot_count='128'/>
<writer thread='139637818533632'/>
<task_queued compile_id='157' method='java/lang/String equalsIgnoreCase (Ljava/lang/String;)Z' bytes='48' count='640' iicount='640' level='3' stamp='0.681' comment='tiered' hot_count='640'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/BitSet.checkInvariants  [0x00007f003f2db800, 0x00007f003f2db990]  400 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f00389334a8} &apos;checkInvariants&apos; &apos;()V&apos; in &apos;java/util/BitSet&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2db800: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2db804: shl    r10,0x3
  0x00007f003f2db808: cmp    r10,rax
  0x00007f003f2db80b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2db811: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2db81c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2db820: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2db827: push   rbp
  0x00007f003f2db828: sub    rsp,0x30
  0x00007f003f2db82c: movabs rdi,0x7f0038a94bd8  ;   {metadata(method data for {method} {0x00007f00389334a8} &apos;checkInvariants&apos; &apos;()V&apos; in &apos;java/util/BitSet&apos;)}
  0x00007f003f2db836: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2db83c: add    ebx,0x8
  0x00007f003f2db83f: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2db845: movabs rdi,0x7f00389334a8  ;   {metadata({method} {0x00007f00389334a8} &apos;checkInvariants&apos; &apos;()V&apos; in &apos;java/util/BitSet&apos;)}
  0x00007f003f2db84f: and    ebx,0x1ff8
  0x00007f003f2db855: cmp    ebx,0x0
  0x00007f003f2db858: je     0x00007f003f2db89a  ;*getstatic $assertionsDisabled {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.BitSet::checkInvariants@0 (line 119)

  0x00007f003f2db85e: movabs rsi,0x7f0038a94bd8  ;   {metadata(method data for {method} {0x00007f00389334a8} &apos;checkInvariants&apos; &apos;()V&apos; in &apos;java/util/BitSet&apos;)}
  0x00007f003f2db868: inc    DWORD PTR [rsi+0x130]  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.BitSet::checkInvariants@3 (line 119)

  0x00007f003f2db86e: movabs rsi,0x7f0038a94bd8  ;   {metadata(method data for {method} {0x00007f00389334a8} &apos;checkInvariants&apos; &apos;()V&apos; in &apos;java/util/BitSet&apos;)}
  0x00007f003f2db878: inc    DWORD PTR [rsi+0x1a0]  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.BitSet::checkInvariants@40 (line 120)

  0x00007f003f2db87e: movabs rsi,0x7f0038a94bd8  ;   {metadata(method data for {method} {0x00007f00389334a8} &apos;checkInvariants&apos; &apos;()V&apos; in &apos;java/util/BitSet&apos;)}
  0x00007f003f2db888: inc    DWORD PTR [rsi+0x210]  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.BitSet::checkInvariants@73 (line 121)

  0x00007f003f2db88e: add    rsp,0x30
  0x00007f003f2db892: pop    rbp
  0x00007f003f2db893: test   DWORD PTR [rip+0x1b0e6867],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2db899: ret    
  0x00007f003f2db89a: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2db89f: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2db8a7: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop off=172}
                                                ;*synchronization entry
                                                ; - java.util.BitSet::checkInvariants@-1 (line 119)
                                                ;   {runtime_call}
  0x00007f003f2db8ac: jmp    0x00007f003f2db85e
  0x00007f003f2db8ae: nop
  0x00007f003f2db8af: nop
  0x00007f003f2db8b0: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2db8b7: movabs r10,0x0
  0x00007f003f2db8c1: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2db8c8: movabs r10,0x0
  0x00007f003f2db8d2: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2db8d9: add    rsp,0x30
  0x00007f003f2db8dd: pop    rbp
  0x00007f003f2db8de: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2db8e3: hlt    
  0x00007f003f2db8e4: hlt    
  0x00007f003f2db8e5: hlt    
  0x00007f003f2db8e6: hlt    
  0x00007f003f2db8e7: hlt    
  0x00007f003f2db8e8: hlt    
  0x00007f003f2db8e9: hlt    
  0x00007f003f2db8ea: hlt    
  0x00007f003f2db8eb: hlt    
  0x00007f003f2db8ec: hlt    
  0x00007f003f2db8ed: hlt    
  0x00007f003f2db8ee: hlt    
  0x00007f003f2db8ef: hlt    
  0x00007f003f2db8f0: hlt    
  0x00007f003f2db8f1: hlt    
  0x00007f003f2db8f2: hlt    
  0x00007f003f2db8f3: hlt    
  0x00007f003f2db8f4: hlt    
  0x00007f003f2db8f5: hlt    
  0x00007f003f2db8f6: hlt    
  0x00007f003f2db8f7: hlt    
  0x00007f003f2db8f8: hlt    
  0x00007f003f2db8f9: hlt    
  0x00007f003f2db8fa: hlt    
  0x00007f003f2db8fb: hlt    
  0x00007f003f2db8fc: hlt    
  0x00007f003f2db8fd: hlt    
  0x00007f003f2db8fe: hlt    
  0x00007f003f2db8ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2db900: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2db905: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2db90a: sub    rsp,0x80
  0x00007f003f2db911: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2db916: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2db91b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2db920: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2db925: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2db92a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2db92f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2db934: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2db939: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2db93e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2db943: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2db948: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2db94d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2db952: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2db957: mov    QWORD PTR [rsp],r15
  0x00007f003f2db95b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2db965: movabs rsi,0x7f003f2db905  ;   {internal_word}
  0x00007f003f2db96f: mov    rdx,rsp
  0x00007f003f2db972: and    rsp,0xfffffffffffffff0
  0x00007f003f2db976: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2db97b: hlt    
[Deopt Handler Code]
  0x00007f003f2db97c: movabs r10,0x7f003f2db97c  ;   {section_word}
  0x00007f003f2db986: push   r10
  0x00007f003f2db988: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2db98d: hlt    
  0x00007f003f2db98e: hlt    
  0x00007f003f2db98f: hlt    
<nmethod compile_id='155' compiler='C1' level='3' entry='0x00007f003f2db800' size='936' address='0x00007f003f2db690' relocation_offset='312' insts_offset='368' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='816' dependencies_offset='928' metadata_offset='768' method='java/util/BitSet checkInvariants ()V' bytes='111' count='384' iicount='384' stamp='0.682'/>
<writer thread='139637818533632'/>
<task_queued compile_id='158' method='java/util/concurrent/ConcurrentHashMap putVal (Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' bytes='362' count='640' backedge_count='60' iicount='640' level='3' stamp='0.682' comment='tiered' hot_count='640'/>
----------------------------------------------------------------------
java/lang/Thread.currentThread  [0x00007f003f2dbbe0, 0x00007f003f2dbdc8]  488 bytes
[Entry Point]
  # {method} {0x00007f00387990b8} &apos;currentThread&apos; &apos;()Ljava/lang/Thread;&apos; in &apos;java/lang/Thread&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2dbbe0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2dbbe4: shl    r10,0x3
  0x00007f003f2dbbe8: cmp    rax,r10
  0x00007f003f2dbbeb: je     0x00007f003f2dbbf8
  0x00007f003f2dbbf1: jmp    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2dbbf6: xchg   ax,ax
[Verified Entry Point]
  0x00007f003f2dbbf8: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2dbbff: push   rbp
  0x00007f003f2dbc00: mov    rbp,rsp
  0x00007f003f2dbc03: sub    rsp,0x40
  0x00007f003f2dbc07: movabs r14,0x670b81c08    ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/Thread&apos;)}
  0x00007f003f2dbc11: mov    QWORD PTR [rsp+0x30],r14
  0x00007f003f2dbc16: lea    r14,[rsp+0x30]
  0x00007f003f2dbc1b: mov    rsi,r14            ; OopMap{[48]=Oop off=62}
  0x00007f003f2dbc1e: movabs r10,0x7f003f2dbc1e  ;   {section_word}
  0x00007f003f2dbc28: mov    QWORD PTR [r15+0x1c8],r10
  0x00007f003f2dbc2f: mov    QWORD PTR [r15+0x1c0],rsp
  0x00007f003f2dbc36: cmp    BYTE PTR [rip+0x1a278d97],0x0        # 0x00007f00595549d4
                                                ;   {external_word}
  0x00007f003f2dbc3d: je     0x00007f003f2dbc75
  0x00007f003f2dbc43: push   rsi
  0x00007f003f2dbc44: movabs rsi,0x7f00387990b8  ;   {metadata({method} {0x00007f00387990b8} &apos;currentThread&apos; &apos;()Ljava/lang/Thread;&apos; in &apos;java/lang/Thread&apos;)}
  0x00007f003f2dbc4e: mov    rdi,r15
  0x00007f003f2dbc51: test   esp,0xf
  0x00007f003f2dbc57: je     0x00007f003f2dbc6f
  0x00007f003f2dbc5d: sub    rsp,0x8
  0x00007f003f2dbc61: call   0x00007f0058f49f20  ;   {runtime_call}
  0x00007f003f2dbc66: add    rsp,0x8
  0x00007f003f2dbc6a: jmp    0x00007f003f2dbc74
  0x00007f003f2dbc6f: call   0x00007f0058f49f20  ;   {runtime_call}
  0x00007f003f2dbc74: pop    rsi
  0x00007f003f2dbc75: lea    rdi,[r15+0x1e0]
  0x00007f003f2dbc7c: mov    DWORD PTR [r15+0x258],0x4
  0x00007f003f2dbc87: call   0x00007f0058c5e6f0  ;   {runtime_call}
  0x00007f003f2dbc8c: vzeroupper 
  0x00007f003f2dbc8f: mov    DWORD PTR [r15+0x258],0x5
  0x00007f003f2dbc9a: mov    ecx,r15d
  0x00007f003f2dbc9d: shr    ecx,0x4
  0x00007f003f2dbca0: and    ecx,0xffc
  0x00007f003f2dbca6: movabs r10,0x7f005a3c1000  ;   {external_word}
  0x00007f003f2dbcb0: mov    DWORD PTR [r10+rcx*1],ecx
  0x00007f003f2dbcb4: cmp    DWORD PTR [rip+0x1a283cfe],0x0        # 0x00007f005955f9bc
                                                ;   {external_word}
  0x00007f003f2dbcbe: jne    0x00007f003f2dbcd2
  0x00007f003f2dbcc4: cmp    DWORD PTR [r15+0x30],0x0
  0x00007f003f2dbccc: je     0x00007f003f2dbcf3
  0x00007f003f2dbcd2: mov    QWORD PTR [rbp-0x8],rax
  0x00007f003f2dbcd6: mov    rdi,r15
  0x00007f003f2dbcd9: mov    r12,rsp
  0x00007f003f2dbcdc: sub    rsp,0x0
  0x00007f003f2dbce0: and    rsp,0xfffffffffffffff0
  0x00007f003f2dbce4: call   0x00007f0058fefce0  ;   {runtime_call}
  0x00007f003f2dbce9: mov    rsp,r12
  0x00007f003f2dbcec: xor    r12,r12
  0x00007f003f2dbcef: mov    rax,QWORD PTR [rbp-0x8]
  0x00007f003f2dbcf3: mov    DWORD PTR [r15+0x258],0x8
  0x00007f003f2dbcfe: cmp    DWORD PTR [r15+0x2b0],0x1
  0x00007f003f2dbd09: je     0x00007f003f2dbda5
  0x00007f003f2dbd0f: cmp    BYTE PTR [rip+0x1a278cbe],0x0        # 0x00007f00595549d4
                                                ;   {external_word}
  0x00007f003f2dbd16: je     0x00007f003f2dbd54
  0x00007f003f2dbd1c: mov    QWORD PTR [rbp-0x8],rax
  0x00007f003f2dbd20: movabs rsi,0x7f00387990b8  ;   {metadata({method} {0x00007f00387990b8} &apos;currentThread&apos; &apos;()Ljava/lang/Thread;&apos; in &apos;java/lang/Thread&apos;)}
  0x00007f003f2dbd2a: mov    rdi,r15
  0x00007f003f2dbd2d: test   esp,0xf
  0x00007f003f2dbd33: je     0x00007f003f2dbd4b
  0x00007f003f2dbd39: sub    rsp,0x8
  0x00007f003f2dbd3d: call   0x00007f0058f49f30  ;   {runtime_call}
  0x00007f003f2dbd42: add    rsp,0x8
  0x00007f003f2dbd46: jmp    0x00007f003f2dbd50
  0x00007f003f2dbd4b: call   0x00007f0058f49f30  ;   {runtime_call}
  0x00007f003f2dbd50: mov    rax,QWORD PTR [rbp-0x8]
  0x00007f003f2dbd54: movabs r10,0x0
  0x00007f003f2dbd5e: mov    QWORD PTR [r15+0x1c0],r10
  0x00007f003f2dbd65: movabs r10,0x0
  0x00007f003f2dbd6f: mov    QWORD PTR [r15+0x1c8],r10
  0x00007f003f2dbd76: test   rax,rax
  0x00007f003f2dbd79: je     0x00007f003f2dbd82
  0x00007f003f2dbd7f: mov    rax,QWORD PTR [rax]
  0x00007f003f2dbd82: mov    rcx,QWORD PTR [r15+0x38]
  0x00007f003f2dbd86: mov    DWORD PTR [rcx+0x100],0x0
  0x00007f003f2dbd90: leave  
  0x00007f003f2dbd91: cmp    QWORD PTR [r15+0x8],0x0
  0x00007f003f2dbd99: jne    0x00007f003f2dbda0
  0x00007f003f2dbd9f: ret    
  0x00007f003f2dbda0: jmp    Stub::forward exception  ;   {runtime_call}
  0x00007f003f2dbda5: mov    QWORD PTR [rbp-0x8],rax
  0x00007f003f2dbda9: mov    r12,rsp
  0x00007f003f2dbdac: sub    rsp,0x0
  0x00007f003f2dbdb0: and    rsp,0xfffffffffffffff0
  0x00007f003f2dbdb4: call   0x00007f0058f521e0  ;   {runtime_call}
  0x00007f003f2dbdb9: mov    rsp,r12
  0x00007f003f2dbdbc: xor    r12,r12
  0x00007f003f2dbdbf: mov    rax,QWORD PTR [rbp-0x8]
  0x00007f003f2dbdc3: jmp    0x00007f003f2dbd0f
<nmethod compile_id='159' compile_kind='c2n' level='0' entry='0x00007f003f2dbbe0' size='888' address='0x00007f003f2dba50' relocation_offset='312' consts_offset='888' insts_offset='400' method='java/lang/Thread currentThread ()Ljava/lang/Thread;' bytes='0' count='512' iicount='512' stamp='0.683'/>
[Loaded jdk.vm.ci.meta.JavaField from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.meta.ResolvedJavaField from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
[Loaded jdk.vm.ci.hotspot.HotSpotResolvedJavaField from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<task_queued compile_id='160' method='java/lang/Class getClassLoader0 ()Ljava/lang/ClassLoader;' bytes='5' count='128' iicount='128' level='1' stamp='0.683' comment='tiered' hot_count='128'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.putVal  [0x00007f003f2dc2e0, 0x00007f003f2de5d8]  8952 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8        = boolean
  #           [sp+0x110]  (sp of caller)
  0x00007f003f2dc2e0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2dc2e4: shl    r10,0x3
  0x00007f003f2dc2e8: cmp    r10,rax
  0x00007f003f2dc2eb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2dc2f1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2dc2fc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2dc300: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2dc307: push   rbp
  0x00007f003f2dc308: sub    rsp,0x100
  0x00007f003f2dc30f: mov    QWORD PTR [rsp+0x88],rsi
<writer thread='139637819586304'/>
[Loaded jdk.vm.ci.meta.Signature from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-api.jar]
<writer thread='139637817480960'/>
  0x00007f003f2dc317: mov    QWORD PTR [rsp+0x90],rdx
  0x00007f003f2dc31f: mov    QWORD PTR [rsp+0x98],rcx
  0x00007f003f2dc327: mov    DWORD PTR [rsp+0xa0],r8d
  0x00007f003f2dc32f: movabs rdi,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dc339: mov    ebx,DWORD PTR [rdi+0xfc]
  0x00007f003f2dc33f: add    ebx,0x8
  0x00007f003f2dc342: mov    DWORD PTR [rdi+0xfc],ebx
  0x00007f003f2dc348: movabs rdi,0x7f0038948e58  ;   {metadata({method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dc352: and    ebx,0x1ff8
  0x00007f003f2dc358: cmp    ebx,0x0
  0x00007f003f2dc35b: je     0x00007f003f2de28b  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@0 (line 1011)

  0x00007f003f2dc361: cmp    rdx,0x0
  0x00007f003f2dc365: movabs rdi,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dc36f: movabs rbx,0x130
  0x00007f003f2dc379: je     0x00007f003f2dc389
  0x00007f003f2dc37f: movabs rbx,0x140
  0x00007f003f2dc389: mov    rax,QWORD PTR [rdi+rbx*1]
  0x00007f003f2dc38d: lea    rax,[rax+0x1]
  0x00007f003f2dc391: mov    QWORD PTR [rdi+rbx*1],rax
  0x00007f003f2dc395: je     0x00007f003f2de1b5  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@1 (line 1011)

  0x00007f003f2dc39b: cmp    rcx,0x0
  0x00007f003f2dc39f: movabs rdi,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dc3a9: movabs rbx,0x150
  0x00007f003f2dc3b3: jne    0x00007f003f2dc3c3
  0x00007f003f2dc3b9: movabs rbx,0x160
  0x00007f003f2dc3c3: mov    rax,QWORD PTR [rdi+rbx*1]
  0x00007f003f2dc3c7: lea    rax,[rax+0x1]
  0x00007f003f2dc3cb: mov    QWORD PTR [rdi+rbx*1],rax
  0x00007f003f2dc3cf: je     0x00007f003f2de1b5  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@5 (line 1011)

  0x00007f003f2dc3d5: cmp    rax,QWORD PTR [rdx]  ; implicit exception: dispatches to 0x00007f003f2de2a2
  0x00007f003f2dc3d8: mov    rdi,rdx
  0x00007f003f2dc3db: movabs rbx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dc3e5: mov    edi,DWORD PTR [rdi+0x8]
  0x00007f003f2dc3e8: shl    rdi,0x3
  0x00007f003f2dc3ec: cmp    rdi,QWORD PTR [rbx+0x190]
  0x00007f003f2dc3f3: jne    0x00007f003f2dc402
  0x00007f003f2dc3f5: add    QWORD PTR [rbx+0x198],0x1
  0x00007f003f2dc3fd: jmp    0x00007f003f2dc5c4
  0x00007f003f2dc402: cmp    rdi,QWORD PTR [rbx+0x1a0]
  0x00007f003f2dc409: jne    0x00007f003f2dc418
  0x00007f003f2dc40b: add    QWORD PTR [rbx+0x1a8],0x1
  0x00007f003f2dc413: jmp    0x00007f003f2dc5c4
  0x00007f003f2dc418: cmp    rdi,QWORD PTR [rbx+0x1b0]
  0x00007f003f2dc41f: jne    0x00007f003f2dc42e
  0x00007f003f2dc421: add    QWORD PTR [rbx+0x1b8],0x1
  0x00007f003f2dc429: jmp    0x00007f003f2dc5c4
  0x00007f003f2dc42e: cmp    rdi,QWORD PTR [rbx+0x1c0]
  0x00007f003f2dc435: jne    0x00007f003f2dc444
  0x00007f003f2dc437: add    QWORD PTR [rbx+0x1c8],0x1
  0x00007f003f2dc43f: jmp    0x00007f003f2dc5c4
  0x00007f003f2dc444: cmp    rdi,QWORD PTR [rbx+0x1d0]
  0x00007f003f2dc44b: jne    0x00007f003f2dc45a
  0x00007f003f2dc44d: add    QWORD PTR [rbx+0x1d8],0x1
  0x00007f003f2dc455: jmp    0x00007f003f2dc5c4
  0x00007f003f2dc45a: cmp    rdi,QWORD PTR [rbx+0x1e0]
  0x00007f003f2dc461: jne    0x00007f003f2dc470
  0x00007f003f2dc463: add    QWORD PTR [rbx+0x1e8],0x1
  0x00007f003f2dc46b: jmp    0x00007f003f2dc5c4
  0x00007f003f2dc470: cmp    rdi,QWORD PTR [rbx+0x1f0]
  0x00007f003f2dc477: jne    0x00007f003f2dc486
  0x00007f003f2dc479: add    QWORD PTR [rbx+0x1f8],0x1
  0x00007f003f2dc481: jmp    0x00007f003f2dc5c4
  0x00007f003f2dc486: cmp    rdi,QWORD PTR [rbx+0x200]
  0x00007f003f2dc48d: jne    0x00007f003f2dc49c
  0x00007f003f2dc48f: add    QWORD PTR [rbx+0x208],0x1
  0x00007f003f2dc497: jmp    0x00007f003f2dc5c4
  0x00007f003f2dc49c: cmp    QWORD PTR [rbx+0x190],0x0
  0x00007f003f2dc4a7: jne    0x00007f003f2dc4c0
  0x00007f003f2dc4a9: mov    QWORD PTR [rbx+0x190],rdi
  0x00007f003f2dc4b0: mov    QWORD PTR [rbx+0x198],0x1
  0x00007f003f2dc4bb: jmp    0x00007f003f2dc5c4
  0x00007f003f2dc4c0: cmp    QWORD PTR [rbx+0x1a0],0x0
  0x00007f003f2dc4cb: jne    0x00007f003f2dc4e4
  0x00007f003f2dc4cd: mov    QWORD PTR [rbx+0x1a0],rdi
  0x00007f003f2dc4d4: mov    QWORD PTR [rbx+0x1a8],0x1
  0x00007f003f2dc4df: jmp    0x00007f003f2dc5c4
  0x00007f003f2dc4e4: cmp    QWORD PTR [rbx+0x1b0],0x0
  0x00007f003f2dc4ef: jne    0x00007f003f2dc508
  0x00007f003f2dc4f1: mov    QWORD PTR [rbx+0x1b0],rdi
  0x00007f003f2dc4f8: mov    QWORD PTR [rbx+0x1b8],0x1
  0x00007f003f2dc503: jmp    0x00007f003f2dc5c4
  0x00007f003f2dc508: cmp    QWORD PTR [rbx+0x1c0],0x0
  0x00007f003f2dc513: jne    0x00007f003f2dc52c
  0x00007f003f2dc515: mov    QWORD PTR [rbx+0x1c0],rdi
  0x00007f003f2dc51c: mov    QWORD PTR [rbx+0x1c8],0x1
  0x00007f003f2dc527: jmp    0x00007f003f2dc5c4
  0x00007f003f2dc52c: cmp    QWORD PTR [rbx+0x1d0],0x0
  0x00007f003f2dc537: jne    0x00007f003f2dc550
  0x00007f003f2dc539: mov    QWORD PTR [rbx+0x1d0],rdi
  0x00007f003f2dc540: mov    QWORD PTR [rbx+0x1d8],0x1
  0x00007f003f2dc54b: jmp    0x00007f003f2dc5c4
  0x00007f003f2dc550: cmp    QWORD PTR [rbx+0x1e0],0x0
  0x00007f003f2dc55b: jne    0x00007f003f2dc574
  0x00007f003f2dc55d: mov    QWORD PTR [rbx+0x1e0],rdi
  0x00007f003f2dc564: mov    QWORD PTR [rbx+0x1e8],0x1
  0x00007f003f2dc56f: jmp    0x00007f003f2dc5c4
  0x00007f003f2dc574: cmp    QWORD PTR [rbx+0x1f0],0x0
  0x00007f003f2dc57f: jne    0x00007f003f2dc598
  0x00007f003f2dc581: mov    QWORD PTR [rbx+0x1f0],rdi
  0x00007f003f2dc588: mov    QWORD PTR [rbx+0x1f8],0x1
  0x00007f003f2dc593: jmp    0x00007f003f2dc5c4
  0x00007f003f2dc598: cmp    QWORD PTR [rbx+0x200],0x0
  0x00007f003f2dc5a3: jne    0x00007f003f2dc5bc
  0x00007f003f2dc5a5: mov    QWORD PTR [rbx+0x200],rdi
  0x00007f003f2dc5ac: mov    QWORD PTR [rbx+0x208],0x1
  0x00007f003f2dc5b7: jmp    0x00007f003f2dc5c4
  0x00007f003f2dc5bc: add    QWORD PTR [rbx+0x180],0x1
  0x00007f003f2dc5c4: mov    rsi,rdx            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)

  0x00007f003f2dc5c7: nop
  0x00007f003f2dc5c8: nop
  0x00007f003f2dc5c9: nop
  0x00007f003f2dc5ca: nop
  0x00007f003f2dc5cb: nop
  0x00007f003f2dc5cc: nop
  0x00007f003f2dc5cd: movabs rax,0xffffffffffffffff
  0x00007f003f2dc5d7: call   0x00007f003f1c4f60  ; OopMap{[136]=Oop [152]=Oop [144]=Oop off=764}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)
                                                ;   {virtual_call}
  0x00007f003f2dc5dc: movabs rsi,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dc5e6: add    QWORD PTR [rsi+0x218],0x1
  0x00007f003f2dc5ee: movabs rsi,0x7f0038a58d50  ;   {metadata(method data for {method} {0x00007f0038947bb0} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dc5f8: mov    edi,DWORD PTR [rsi+0xfc]
  0x00007f003f2dc5fe: add    edi,0x8
  0x00007f003f2dc601: mov    DWORD PTR [rsi+0xfc],edi
  0x00007f003f2dc607: movabs rsi,0x7f0038947bb0  ;   {metadata({method} {0x00007f0038947bb0} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dc611: and    edi,0x7ffff8
  0x00007f003f2dc617: cmp    edi,0x0
  0x00007f003f2dc61a: je     0x00007f003f2de2a7
  0x00007f003f2dc620: mov    rsi,rax
  0x00007f003f2dc623: shr    esi,0x10
  0x00007f003f2dc626: xor    rsi,rax
  0x00007f003f2dc629: and    esi,0x7fffffff
  0x00007f003f2dc62f: mov    DWORD PTR [rsp+0xa8],esi
  0x00007f003f2dc636: mov    rdi,QWORD PTR [rsp+0x88]
  0x00007f003f2dc63e: mov    ebx,DWORD PTR [rdi+0x28]
  0x00007f003f2dc641: shl    rbx,0x3            ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@29 (line 1014)

  0x00007f003f2dc645: mov    eax,0x0            ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@34 (line 1016)

  0x00007f003f2dc64a: mov    DWORD PTR [rsp+0xa4],eax
  0x00007f003f2dc651: nop    DWORD PTR [rax+0x0]
  0x00007f003f2dc658: cmp    rbx,0x0
  0x00007f003f2dc65c: movabs r9,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dc666: movabs r11,0x228
  0x00007f003f2dc670: je     0x00007f003f2dc680
  0x00007f003f2dc676: movabs r11,0x238
  0x00007f003f2dc680: mov    r13,QWORD PTR [r9+r11*1]
  0x00007f003f2dc684: lea    r13,[r13+0x1]
  0x00007f003f2dc688: mov    QWORD PTR [r9+r11*1],r13
  0x00007f003f2dc68c: je     0x00007f003f2dc6d0  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@36 (line 1016)

  0x00007f003f2dc692: mov    r9d,DWORD PTR [rbx+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@41 (line 1016)
                                                ; implicit exception: dispatches to 0x00007f003f2de2be
  0x00007f003f2dc696: cmp    r9d,0x0
  0x00007f003f2dc69a: movabs r11,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dc6a4: movabs r13,0x248
  0x00007f003f2dc6ae: jne    0x00007f003f2dc6be
  0x00007f003f2dc6b4: movabs r13,0x258
  0x00007f003f2dc6be: mov    r14,QWORD PTR [r11+r13*1]
  0x00007f003f2dc6c2: lea    r14,[r14+0x1]
  0x00007f003f2dc6c6: mov    QWORD PTR [r11+r13*1],r14
  0x00007f003f2dc6ca: jne    0x00007f003f2dc720  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@45 (line 1016)

  0x00007f003f2dc6d0: mov    rbx,rdi
  0x00007f003f2dc6d3: movabs r9,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dc6dd: add    QWORD PTR [r9+0x268],0x1
  0x00007f003f2dc6e5: mov    rsi,rdi            ;*invokespecial initTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@49 (line 1017)

  0x00007f003f2dc6e8: nop
  0x00007f003f2dc6e9: nop
  0x00007f003f2dc6ea: nop
  0x00007f003f2dc6eb: nop
  0x00007f003f2dc6ec: nop
  0x00007f003f2dc6ed: nop
  0x00007f003f2dc6ee: nop
  0x00007f003f2dc6ef: call   0x00007f003f1c4d60  ; OopMap{[152]=Oop [144]=Oop [136]=Oop off=1044}
                                                ;*invokespecial initTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@49 (line 1017)
                                                ;   {optimized virtual_call}
  0x00007f003f2dc6f4: movabs rcx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dc6fe: inc    DWORD PTR [rcx+0x278]
  0x00007f003f2dc704: mov    esi,DWORD PTR [rsp+0xa4]
  0x00007f003f2dc70b: mov    r8d,DWORD PTR [rsp+0xa0]
  0x00007f003f2dc713: mov    rcx,QWORD PTR [rsp+0x98]
  0x00007f003f2dc71b: jmp    0x00007f003f2ddffd  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@54 (line 1017)

  0x00007f003f2dc720: dec    r9d
  0x00007f003f2dc723: and    r9d,DWORD PTR [rsp+0xa8]
  0x00007f003f2dc72b: mov    DWORD PTR [rsp+0xc8],r9d
  0x00007f003f2dc733: movabs rcx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dc73d: add    QWORD PTR [rcx+0x290],0x1
  0x00007f003f2dc745: movabs rcx,0x7f0038a56a90  ;   {metadata(method data for {method} {0x00007f0038947f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dc74f: mov    edx,DWORD PTR [rcx+0xfc]
  0x00007f003f2dc755: add    edx,0x8
  0x00007f003f2dc758: mov    DWORD PTR [rcx+0xfc],edx
  0x00007f003f2dc75e: movabs rcx,0x7f0038947f90  ;   {metadata({method} {0x00007f0038947f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dc768: and    edx,0x7ffff8
  0x00007f003f2dc76e: cmp    edx,0x0
  0x00007f003f2dc771: je     0x00007f003f2de2c3
  0x00007f003f2dc777: movsxd rdx,r9d
  0x00007f003f2dc77a: mov    ecx,0x2
  0x00007f003f2dc77f: shl    rdx,cl
  0x00007f003f2dc782: mov    r8,rdx
  0x00007f003f2dc785: movabs r10,0x10
  0x00007f003f2dc78f: add    r8,r10
  0x00007f003f2dc792: mov    edx,DWORD PTR [rbx+r8*1]
  0x00007f003f2dc796: shl    rdx,0x3
  0x00007f003f2dc79a: cmp    rdx,0x0
  0x00007f003f2dc79e: jne    0x00007f003f2dc7b9
  0x00007f003f2dc7a0: movabs rsi,0x7f0038a56a90  ;   {metadata(method data for {method} {0x00007f0038947f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dc7aa: or     DWORD PTR [rsi+0x1c0],0x100
  0x00007f003f2dc7b4: jmp    0x00007f003f2dc9d6
  0x00007f003f2dc7b9: movabs rax,0x7c0033a30    ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007f003f2dc7c3: mov    esi,DWORD PTR [rdx+0x8]
  0x00007f003f2dc7c6: shl    rsi,0x3
  0x00007f003f2dc7ca: cmp    rax,QWORD PTR [rsi+0x30]
  0x00007f003f2dc7ce: jne    0x00007f003f2dc9ba
  0x00007f003f2dc7d4: movabs rsi,0x7f0038a56a90  ;   {metadata(method data for {method} {0x00007f0038947f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dc7de: mov    eax,DWORD PTR [rdx+0x8]
  0x00007f003f2dc7e1: shl    rax,0x3
  0x00007f003f2dc7e5: cmp    rax,QWORD PTR [rsi+0x1d8]
  0x00007f003f2dc7ec: jne    0x00007f003f2dc7fb
  0x00007f003f2dc7ee: add    QWORD PTR [rsi+0x1e0],0x1
  0x00007f003f2dc7f6: jmp    0x00007f003f2dc9d6
  0x00007f003f2dc7fb: cmp    rax,QWORD PTR [rsi+0x1e8]
  0x00007f003f2dc802: jne    0x00007f003f2dc811
  0x00007f003f2dc804: add    QWORD PTR [rsi+0x1f0],0x1
  0x00007f003f2dc80c: jmp    0x00007f003f2dc9d6
  0x00007f003f2dc811: cmp    rax,QWORD PTR [rsi+0x1f8]
  0x00007f003f2dc818: jne    0x00007f003f2dc827
  0x00007f003f2dc81a: add    QWORD PTR [rsi+0x200],0x1
  0x00007f003f2dc822: jmp    0x00007f003f2dc9d6
  0x00007f003f2dc827: cmp    rax,QWORD PTR [rsi+0x208]
  0x00007f003f2dc82e: jne    0x00007f003f2dc83d
  0x00007f003f2dc830: add    QWORD PTR [rsi+0x210],0x1
  0x00007f003f2dc838: jmp    0x00007f003f2dc9d6
  0x00007f003f2dc83d: cmp    rax,QWORD PTR [rsi+0x218]
  0x00007f003f2dc844: jne    0x00007f003f2dc853
  0x00007f003f2dc846: add    QWORD PTR [rsi+0x220],0x1
  0x00007f003f2dc84e: jmp    0x00007f003f2dc9d6
  0x00007f003f2dc853: cmp    rax,QWORD PTR [rsi+0x228]
  0x00007f003f2dc85a: jne    0x00007f003f2dc869
  0x00007f003f2dc85c: add    QWORD PTR [rsi+0x230],0x1
  0x00007f003f2dc864: jmp    0x00007f003f2dc9d6
  0x00007f003f2dc869: cmp    rax,QWORD PTR [rsi+0x238]
  0x00007f003f2dc870: jne    0x00007f003f2dc87f
  0x00007f003f2dc872: add    QWORD PTR [rsi+0x240],0x1
  0x00007f003f2dc87a: jmp    0x00007f003f2dc9d6
  0x00007f003f2dc87f: cmp    rax,QWORD PTR [rsi+0x248]
  0x00007f003f2dc886: jne    0x00007f003f2dc895
  0x00007f003f2dc888: add    QWORD PTR [rsi+0x250],0x1
  0x00007f003f2dc890: jmp    0x00007f003f2dc9d6
  0x00007f003f2dc895: cmp    QWORD PTR [rsi+0x1d8],0x0
  0x00007f003f2dc8a0: jne    0x00007f003f2dc8b9
  0x00007f003f2dc8a2: mov    QWORD PTR [rsi+0x1d8],rax
  0x00007f003f2dc8a9: mov    QWORD PTR [rsi+0x1e0],0x1
  0x00007f003f2dc8b4: jmp    0x00007f003f2dc9d6
  0x00007f003f2dc8b9: cmp    QWORD PTR [rsi+0x1e8],0x0
  0x00007f003f2dc8c4: jne    0x00007f003f2dc8dd
  0x00007f003f2dc8c6: mov    QWORD PTR [rsi+0x1e8],rax
  0x00007f003f2dc8cd: mov    QWORD PTR [rsi+0x1f0],0x1
  0x00007f003f2dc8d8: jmp    0x00007f003f2dc9d6
  0x00007f003f2dc8dd: cmp    QWORD PTR [rsi+0x1f8],0x0
  0x00007f003f2dc8e8: jne    0x00007f003f2dc901
  0x00007f003f2dc8ea: mov    QWORD PTR [rsi+0x1f8],rax
  0x00007f003f2dc8f1: mov    QWORD PTR [rsi+0x200],0x1
  0x00007f003f2dc8fc: jmp    0x00007f003f2dc9d6
  0x00007f003f2dc901: cmp    QWORD PTR [rsi+0x208],0x0
  0x00007f003f2dc90c: jne    0x00007f003f2dc925
  0x00007f003f2dc90e: mov    QWORD PTR [rsi+0x208],rax
  0x00007f003f2dc915: mov    QWORD PTR [rsi+0x210],0x1
  0x00007f003f2dc920: jmp    0x00007f003f2dc9d6
  0x00007f003f2dc925: cmp    QWORD PTR [rsi+0x218],0x0
  0x00007f003f2dc930: jne    0x00007f003f2dc949
  0x00007f003f2dc932: mov    QWORD PTR [rsi+0x218],rax
  0x00007f003f2dc939: mov    QWORD PTR [rsi+0x220],0x1
  0x00007f003f2dc944: jmp    0x00007f003f2dc9d6
  0x00007f003f2dc949: cmp    QWORD PTR [rsi+0x228],0x0
  0x00007f003f2dc954: jne    0x00007f003f2dc96d
  0x00007f003f2dc956: mov    QWORD PTR [rsi+0x228],rax
  0x00007f003f2dc95d: mov    QWORD PTR [rsi+0x230],0x1
  0x00007f003f2dc968: jmp    0x00007f003f2dc9d6
  0x00007f003f2dc96d: cmp    QWORD PTR [rsi+0x238],0x0
  0x00007f003f2dc978: jne    0x00007f003f2dc991
  0x00007f003f2dc97a: mov    QWORD PTR [rsi+0x238],rax
  0x00007f003f2dc981: mov    QWORD PTR [rsi+0x240],0x1
  0x00007f003f2dc98c: jmp    0x00007f003f2dc9d6
  0x00007f003f2dc991: cmp    QWORD PTR [rsi+0x248],0x0
  0x00007f003f2dc99c: jne    0x00007f003f2dc9b5
  0x00007f003f2dc99e: mov    QWORD PTR [rsi+0x248],rax
  0x00007f003f2dc9a5: mov    QWORD PTR [rsi+0x250],0x1
  0x00007f003f2dc9b0: jmp    0x00007f003f2dc9d6
  0x00007f003f2dc9b5: jmp    0x00007f003f2dc9d6
  0x00007f003f2dc9ba: movabs rsi,0x7f0038a56a90  ;   {metadata(method data for {method} {0x00007f0038947f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dc9c4: sub    QWORD PTR [rsi+0x1c8],0x1
  0x00007f003f2dc9cc: jmp    0x00007f003f2de2da
  0x00007f003f2dc9d1: jmp    0x00007f003f2dc9d6
  0x00007f003f2dc9d6: mov    rdi,rdx            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)

  0x00007f003f2dc9d9: mov    QWORD PTR [rsp+0xb8],rdi
  0x00007f003f2dc9e1: cmp    rdi,0x0
  0x00007f003f2dc9e5: movabs rdx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dc9ef: movabs rsi,0x2a0
  0x00007f003f2dc9f9: jne    0x00007f003f2dca09
  0x00007f003f2dc9ff: movabs rsi,0x2b0
  0x00007f003f2dca09: mov    rax,QWORD PTR [rdx+rsi*1]
  0x00007f003f2dca0d: lea    rax,[rax+0x1]
  0x00007f003f2dca11: mov    QWORD PTR [rdx+rsi*1],rax
  0x00007f003f2dca15: jne    0x00007f003f2dcc20  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@75 (line 1018)

  0x00007f003f2dca1b: mov    esi,DWORD PTR [rsp+0xa8]
  0x00007f003f2dca22: mov    rcx,QWORD PTR [rsp+0x98]
  0x00007f003f2dca2a: mov    rdx,QWORD PTR [rsp+0x90]
  0x00007f003f2dca32: mov    r11,rdx
  0x00007f003f2dca35: movabs rdx,0x7c0033a30    ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007f003f2dca3f: mov    r14,rcx
  0x00007f003f2dca42: mov    r13,rsi
  0x00007f003f2dca45: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2dca49: lea    rdi,[rax+0x20]
  0x00007f003f2dca4d: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2dca51: ja     0x00007f003f2de2e3
  0x00007f003f2dca57: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2dca5b: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2dca62: mov    QWORD PTR [rax],rcx
  0x00007f003f2dca65: mov    rcx,rdx
  0x00007f003f2dca68: shr    rcx,0x3
  0x00007f003f2dca6c: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2dca6f: xor    rcx,rcx
  0x00007f003f2dca72: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2dca75: xor    rcx,rcx
  0x00007f003f2dca78: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f2dca7c: mov    QWORD PTR [rax+0x18],rcx
  0x00007f003f2dca80: mov    rdx,rax            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@83 (line 1019)

  0x00007f003f2dca83: mov    rax,rdx
  0x00007f003f2dca86: movabs rcx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dca90: add    QWORD PTR [rcx+0x2c0],0x1
  0x00007f003f2dca98: movabs rax,0x7f0038a8ec70  ;   {metadata(method data for {method} {0x00007f0038953828} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007f003f2dcaa2: mov    ecx,DWORD PTR [rax+0xfc]
  0x00007f003f2dcaa8: add    ecx,0x8
  0x00007f003f2dcaab: mov    DWORD PTR [rax+0xfc],ecx
  0x00007f003f2dcab1: movabs rax,0x7f0038953828  ;   {metadata({method} {0x00007f0038953828} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007f003f2dcabb: and    ecx,0x7ffff8
  0x00007f003f2dcac1: cmp    ecx,0x0
  0x00007f003f2dcac4: je     0x00007f003f2de2f0
  0x00007f003f2dcaca: mov    rax,rdx
  0x00007f003f2dcacd: movabs rcx,0x7f0038a8ec70  ;   {metadata(method data for {method} {0x00007f0038953828} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007f003f2dcad7: add    QWORD PTR [rcx+0x130],0x1
  0x00007f003f2dcadf: movabs rax,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2dcae9: mov    ecx,DWORD PTR [rax+0xfc]
  0x00007f003f2dcaef: add    ecx,0x8
  0x00007f003f2dcaf2: mov    DWORD PTR [rax+0xfc],ecx
  0x00007f003f2dcaf8: movabs rax,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2dcb02: and    ecx,0x7ffff8
  0x00007f003f2dcb08: cmp    ecx,0x0
  0x00007f003f2dcb0b: je     0x00007f003f2de307
  0x00007f003f2dcb11: mov    DWORD PTR [rdx+0xc],r13d  ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@6 (line 626)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@92 (line 1019)

  0x00007f003f2dcb15: mov    r10,r11
  0x00007f003f2dcb18: shr    r10,0x3
  0x00007f003f2dcb1c: mov    DWORD PTR [rdx+0x10],r10d
  0x00007f003f2dcb20: mov    rax,rdx
  0x00007f003f2dcb23: shr    rax,0x9
  0x00007f003f2dcb27: movabs rcx,0x7f003ae7c000
  0x00007f003f2dcb31: mov    BYTE PTR [rax+rcx*1],0x0
  0x00007f003f2dcb35: mov    r10,r14
  0x00007f003f2dcb38: shr    r10,0x3
  0x00007f003f2dcb3c: mov    DWORD PTR [rdx+0x14],r10d
  0x00007f003f2dcb40: mov    rax,rdx
  0x00007f003f2dcb43: shr    rax,0x9
  0x00007f003f2dcb47: mov    BYTE PTR [rax+rcx*1],0x0
  0x00007f003f2dcb4b: lock add DWORD PTR [rsp],0x0  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@16 (line 628)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@92 (line 1019)

  0x00007f003f2dcb50: movabs rax,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dcb5a: add    QWORD PTR [rax+0x2d0],0x1
  0x00007f003f2dcb62: movabs rax,0x7f0038a93d98  ;   {metadata(method data for {method} {0x00007f0038948068} &apos;casTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dcb6c: mov    esi,DWORD PTR [rax+0xfc]
  0x00007f003f2dcb72: add    esi,0x8
  0x00007f003f2dcb75: mov    DWORD PTR [rax+0xfc],esi
  0x00007f003f2dcb7b: movabs rax,0x7f0038948068  ;   {metadata({method} {0x00007f0038948068} &apos;casTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dcb85: and    esi,0x7ffff8
  0x00007f003f2dcb8b: cmp    esi,0x0
  0x00007f003f2dcb8e: je     0x00007f003f2de31e
  0x00007f003f2dcb94: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f2dcb9e: lea    rsi,[rbx+r8*1]
  0x00007f003f2dcba2: shr    rax,0x3
  0x00007f003f2dcba6: mov    r10,rdx
  0x00007f003f2dcba9: shr    r10,0x3
  0x00007f003f2dcbad: lock cmpxchg DWORD PTR [rsi],r10d
  0x00007f003f2dcbb2: mov    edx,0x1
  0x00007f003f2dcbb7: je     0x00007f003f2dcbc2
  0x00007f003f2dcbbd: mov    edx,0x0
  0x00007f003f2dcbc2: shr    rsi,0x9
  0x00007f003f2dcbc6: mov    BYTE PTR [rsi+rcx*1],0x0  ;*invokevirtual compareAndSwapObject {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@16 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@95 (line 1019)

  0x00007f003f2dcbca: and    edx,0x1
  0x00007f003f2dcbcd: cmp    edx,0x0
  0x00007f003f2dcbd0: movabs rdx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dcbda: movabs rcx,0x2e0
  0x00007f003f2dcbe4: je     0x00007f003f2dcbf4
  0x00007f003f2dcbea: movabs rcx,0x2f0
  0x00007f003f2dcbf4: mov    rsi,QWORD PTR [rdx+rcx*1]
  0x00007f003f2dcbf8: lea    rsi,[rsi+0x1]
  0x00007f003f2dcbfc: mov    QWORD PTR [rdx+rcx*1],rsi
  0x00007f003f2dcc00: jne    0x00007f003f2de154  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@98 (line 1019)

  0x00007f003f2dcc06: mov    rax,rbx
  0x00007f003f2dcc09: mov    esi,DWORD PTR [rsp+0xa4]
  0x00007f003f2dcc10: mov    r8d,DWORD PTR [rsp+0xa0]
  0x00007f003f2dcc18: mov    rcx,r14
  0x00007f003f2dcc1b: jmp    0x00007f003f2ddffd  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@350 (line 1069)

  0x00007f003f2dcc20: mov    r13d,DWORD PTR [rsp+0xa8]
  0x00007f003f2dcc28: mov    r14,QWORD PTR [rsp+0x98]
  0x00007f003f2dcc30: mov    r11,QWORD PTR [rsp+0x90]
  0x00007f003f2dcc38: mov    esi,DWORD PTR [rdi+0xc]  ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@106 (line 1023)
                                                ; implicit exception: dispatches to 0x00007f003f2de335
  0x00007f003f2dcc3b: cmp    esi,0xffffffff
  0x00007f003f2dcc3e: movabs rdx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dcc48: movabs rcx,0x318
  0x00007f003f2dcc52: jne    0x00007f003f2dcc62
  0x00007f003f2dcc58: movabs rcx,0x328
  0x00007f003f2dcc62: mov    rax,QWORD PTR [rdx+rcx*1]
  0x00007f003f2dcc66: lea    rax,[rax+0x1]
  0x00007f003f2dcc6a: mov    QWORD PTR [rdx+rcx*1],rax
  0x00007f003f2dcc6e: jne    0x00007f003f2dccd0  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@113 (line 1023)

  0x00007f003f2dcc74: mov    rax,QWORD PTR [rsp+0x88]
  0x00007f003f2dcc7c: movabs r8,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dcc86: add    QWORD PTR [r8+0x338],0x1
  0x00007f003f2dcc8e: mov    rdx,rbx
  0x00007f003f2dcc91: mov    rcx,rdi
  0x00007f003f2dcc94: mov    rsi,QWORD PTR [rsp+0x88]  ;*invokevirtual helpTransfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@121 (line 1024)

  0x00007f003f2dcc9c: nop
  0x00007f003f2dcc9d: nop
  0x00007f003f2dcc9e: nop
  0x00007f003f2dcc9f: call   0x00007f003f1c4d60  ; OopMap{[136]=Oop [152]=Oop [144]=Oop off=2500}
                                                ;*invokevirtual helpTransfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@121 (line 1024)
                                                ;   {optimized virtual_call}
  0x00007f003f2dcca4: movabs rdx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dccae: inc    DWORD PTR [rdx+0x3d0]
  0x00007f003f2dccb4: mov    esi,DWORD PTR [rsp+0xa4]
  0x00007f003f2dccbb: mov    r8d,DWORD PTR [rsp+0xa0]
  0x00007f003f2dccc3: mov    rcx,QWORD PTR [rsp+0x98]
  0x00007f003f2dcccb: jmp    0x00007f003f2ddffd  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@126 (line 1024)

  0x00007f003f2dccd0: lea    rdx,[rsp+0xe0]
  0x00007f003f2dccd8: mov    QWORD PTR [rdx+0x8],rdi
  0x00007f003f2dccdc: mov    rax,QWORD PTR [rdi]
  0x00007f003f2dccdf: mov    rcx,rax
  0x00007f003f2dcce2: and    rcx,0x7
  0x00007f003f2dcce6: cmp    rcx,0x5
  0x00007f003f2dccea: jne    0x00007f003f2dcd71
  0x00007f003f2dccf0: mov    ecx,DWORD PTR [rdi+0x8]
  0x00007f003f2dccf3: shl    rcx,0x3
  0x00007f003f2dccf7: mov    rcx,QWORD PTR [rcx+0xa8]
  0x00007f003f2dccfe: or     rcx,r15
  0x00007f003f2dcd01: xor    rcx,rax
  0x00007f003f2dcd04: and    rcx,0xffffffffffffff87
  0x00007f003f2dcd08: je     0x00007f003f2dcd99
  0x00007f003f2dcd0e: test   rcx,0x7
  0x00007f003f2dcd15: jne    0x00007f003f2dcd5e
  0x00007f003f2dcd17: test   rcx,0x300
  0x00007f003f2dcd1e: jne    0x00007f003f2dcd3d
  0x00007f003f2dcd20: and    rax,0x37f
  0x00007f003f2dcd27: mov    rcx,rax
  0x00007f003f2dcd2a: or     rcx,r15
  0x00007f003f2dcd2d: lock cmpxchg QWORD PTR [rdi],rcx
  0x00007f003f2dcd32: jne    0x00007f003f2de33a
  0x00007f003f2dcd38: jmp    0x00007f003f2dcd99
  0x00007f003f2dcd3d: mov    ecx,DWORD PTR [rdi+0x8]
  0x00007f003f2dcd40: shl    rcx,0x3
  0x00007f003f2dcd44: mov    rcx,QWORD PTR [rcx+0xa8]
  0x00007f003f2dcd4b: or     rcx,r15
  0x00007f003f2dcd4e: lock cmpxchg QWORD PTR [rdi],rcx
  0x00007f003f2dcd53: jne    0x00007f003f2de33a
  0x00007f003f2dcd59: jmp    0x00007f003f2dcd99
  0x00007f003f2dcd5e: mov    ecx,DWORD PTR [rdi+0x8]
  0x00007f003f2dcd61: shl    rcx,0x3
  0x00007f003f2dcd65: mov    rcx,QWORD PTR [rcx+0xa8]
  0x00007f003f2dcd6c: lock cmpxchg QWORD PTR [rdi],rcx
  0x00007f003f2dcd71: mov    rax,QWORD PTR [rdi]
  0x00007f003f2dcd74: or     rax,0x1
  0x00007f003f2dcd78: mov    QWORD PTR [rdx],rax
  0x00007f003f2dcd7b: lock cmpxchg QWORD PTR [rdi],rdx
  0x00007f003f2dcd80: je     0x00007f003f2dcd99
  0x00007f003f2dcd86: sub    rax,rsp
  0x00007f003f2dcd89: and    rax,0xfffffffffffff007
  0x00007f003f2dcd90: mov    QWORD PTR [rdx],rax
  0x00007f003f2dcd93: jne    0x00007f003f2de33a  ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@137 (line 1027)

  0x00007f003f2dcd99: movabs rdx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dcda3: add    QWORD PTR [rdx+0x3e8],0x1
  0x00007f003f2dcdab: movabs rdx,0x7f0038a56a90  ;   {metadata(method data for {method} {0x00007f0038947f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dcdb5: mov    eax,DWORD PTR [rdx+0xfc]
  0x00007f003f2dcdbb: add    eax,0x8
  0x00007f003f2dcdbe: mov    DWORD PTR [rdx+0xfc],eax
  0x00007f003f2dcdc4: movabs rdx,0x7f0038947f90  ;   {metadata({method} {0x00007f0038947f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dcdce: and    eax,0x7ffff8
  0x00007f003f2dcdd4: cmp    eax,0x0
  0x00007f003f2dcdd7: je     0x00007f003f2de34d
  0x00007f003f2dcddd: mov    edx,DWORD PTR [rbx+r8*1]
  0x00007f003f2dcde1: shl    rdx,0x3
  0x00007f003f2dcde5: cmp    rdx,0x0
  0x00007f003f2dcde9: jne    0x00007f003f2dce04
  0x00007f003f2dcdeb: movabs rcx,0x7f0038a56a90  ;   {metadata(method data for {method} {0x00007f0038947f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dcdf5: or     DWORD PTR [rcx+0x1c0],0x100
  0x00007f003f2dcdff: jmp    0x00007f003f2dd022
  0x00007f003f2dce04: movabs r8,0x7c0033a30     ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007f003f2dce0e: mov    ecx,DWORD PTR [rdx+0x8]
  0x00007f003f2dce11: shl    rcx,0x3
  0x00007f003f2dce15: cmp    r8,QWORD PTR [rcx+0x30]
  0x00007f003f2dce19: jne    0x00007f003f2dd006
  0x00007f003f2dce1f: movabs rcx,0x7f0038a56a90  ;   {metadata(method data for {method} {0x00007f0038947f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dce29: mov    r8d,DWORD PTR [rdx+0x8]
  0x00007f003f2dce2d: shl    r8,0x3
  0x00007f003f2dce31: cmp    r8,QWORD PTR [rcx+0x1d8]
  0x00007f003f2dce38: jne    0x00007f003f2dce47
  0x00007f003f2dce3a: add    QWORD PTR [rcx+0x1e0],0x1
  0x00007f003f2dce42: jmp    0x00007f003f2dd022
  0x00007f003f2dce47: cmp    r8,QWORD PTR [rcx+0x1e8]
  0x00007f003f2dce4e: jne    0x00007f003f2dce5d
  0x00007f003f2dce50: add    QWORD PTR [rcx+0x1f0],0x1
  0x00007f003f2dce58: jmp    0x00007f003f2dd022
  0x00007f003f2dce5d: cmp    r8,QWORD PTR [rcx+0x1f8]
  0x00007f003f2dce64: jne    0x00007f003f2dce73
  0x00007f003f2dce66: add    QWORD PTR [rcx+0x200],0x1
  0x00007f003f2dce6e: jmp    0x00007f003f2dd022
  0x00007f003f2dce73: cmp    r8,QWORD PTR [rcx+0x208]
  0x00007f003f2dce7a: jne    0x00007f003f2dce89
  0x00007f003f2dce7c: add    QWORD PTR [rcx+0x210],0x1
  0x00007f003f2dce84: jmp    0x00007f003f2dd022
  0x00007f003f2dce89: cmp    r8,QWORD PTR [rcx+0x218]
  0x00007f003f2dce90: jne    0x00007f003f2dce9f
  0x00007f003f2dce92: add    QWORD PTR [rcx+0x220],0x1
  0x00007f003f2dce9a: jmp    0x00007f003f2dd022
  0x00007f003f2dce9f: cmp    r8,QWORD PTR [rcx+0x228]
  0x00007f003f2dcea6: jne    0x00007f003f2dceb5
  0x00007f003f2dcea8: add    QWORD PTR [rcx+0x230],0x1
  0x00007f003f2dceb0: jmp    0x00007f003f2dd022
  0x00007f003f2dceb5: cmp    r8,QWORD PTR [rcx+0x238]
  0x00007f003f2dcebc: jne    0x00007f003f2dcecb
  0x00007f003f2dcebe: add    QWORD PTR [rcx+0x240],0x1
  0x00007f003f2dcec6: jmp    0x00007f003f2dd022
  0x00007f003f2dcecb: cmp    r8,QWORD PTR [rcx+0x248]
  0x00007f003f2dced2: jne    0x00007f003f2dcee1
  0x00007f003f2dced4: add    QWORD PTR [rcx+0x250],0x1
  0x00007f003f2dcedc: jmp    0x00007f003f2dd022
  0x00007f003f2dcee1: cmp    QWORD PTR [rcx+0x1d8],0x0
  0x00007f003f2dceec: jne    0x00007f003f2dcf05
  0x00007f003f2dceee: mov    QWORD PTR [rcx+0x1d8],r8
  0x00007f003f2dcef5: mov    QWORD PTR [rcx+0x1e0],0x1
  0x00007f003f2dcf00: jmp    0x00007f003f2dd022
  0x00007f003f2dcf05: cmp    QWORD PTR [rcx+0x1e8],0x0
  0x00007f003f2dcf10: jne    0x00007f003f2dcf29
  0x00007f003f2dcf12: mov    QWORD PTR [rcx+0x1e8],r8
  0x00007f003f2dcf19: mov    QWORD PTR [rcx+0x1f0],0x1
  0x00007f003f2dcf24: jmp    0x00007f003f2dd022
  0x00007f003f2dcf29: cmp    QWORD PTR [rcx+0x1f8],0x0
  0x00007f003f2dcf34: jne    0x00007f003f2dcf4d
  0x00007f003f2dcf36: mov    QWORD PTR [rcx+0x1f8],r8
  0x00007f003f2dcf3d: mov    QWORD PTR [rcx+0x200],0x1
  0x00007f003f2dcf48: jmp    0x00007f003f2dd022
  0x00007f003f2dcf4d: cmp    QWORD PTR [rcx+0x208],0x0
  0x00007f003f2dcf58: jne    0x00007f003f2dcf71
  0x00007f003f2dcf5a: mov    QWORD PTR [rcx+0x208],r8
  0x00007f003f2dcf61: mov    QWORD PTR [rcx+0x210],0x1
  0x00007f003f2dcf6c: jmp    0x00007f003f2dd022
  0x00007f003f2dcf71: cmp    QWORD PTR [rcx+0x218],0x0
  0x00007f003f2dcf7c: jne    0x00007f003f2dcf95
  0x00007f003f2dcf7e: mov    QWORD PTR [rcx+0x218],r8
  0x00007f003f2dcf85: mov    QWORD PTR [rcx+0x220],0x1
  0x00007f003f2dcf90: jmp    0x00007f003f2dd022
  0x00007f003f2dcf95: cmp    QWORD PTR [rcx+0x228],0x0
  0x00007f003f2dcfa0: jne    0x00007f003f2dcfb9
  0x00007f003f2dcfa2: mov    QWORD PTR [rcx+0x228],r8
  0x00007f003f2dcfa9: mov    QWORD PTR [rcx+0x230],0x1
  0x00007f003f2dcfb4: jmp    0x00007f003f2dd022
  0x00007f003f2dcfb9: cmp    QWORD PTR [rcx+0x238],0x0
  0x00007f003f2dcfc4: jne    0x00007f003f2dcfdd
  0x00007f003f2dcfc6: mov    QWORD PTR [rcx+0x238],r8
  0x00007f003f2dcfcd: mov    QWORD PTR [rcx+0x240],0x1
  0x00007f003f2dcfd8: jmp    0x00007f003f2dd022
  0x00007f003f2dcfdd: cmp    QWORD PTR [rcx+0x248],0x0
  0x00007f003f2dcfe8: jne    0x00007f003f2dd001
  0x00007f003f2dcfea: mov    QWORD PTR [rcx+0x248],r8
  0x00007f003f2dcff1: mov    QWORD PTR [rcx+0x250],0x1
  0x00007f003f2dcffc: jmp    0x00007f003f2dd022
  0x00007f003f2dd001: jmp    0x00007f003f2dd022
  0x00007f003f2dd006: movabs rcx,0x7f0038a56a90  ;   {metadata(method data for {method} {0x00007f0038947f90} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dd010: sub    QWORD PTR [rcx+0x1c8],0x1
  0x00007f003f2dd018: jmp    0x00007f003f2de364
  0x00007f003f2dd01d: jmp    0x00007f003f2dd022  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@142 (line 1028)

  0x00007f003f2dd022: cmp    rdx,rdi
  0x00007f003f2dd025: movabs rdx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dd02f: movabs rax,0x3f8
  0x00007f003f2dd039: jne    0x00007f003f2dd049
  0x00007f003f2dd03f: movabs rax,0x408
  0x00007f003f2dd049: mov    rcx,QWORD PTR [rdx+rax*1]
  0x00007f003f2dd04d: lea    rcx,[rcx+0x1]
  0x00007f003f2dd051: mov    QWORD PTR [rdx+rax*1],rcx
  0x00007f003f2dd055: je     0x00007f003f2dd089  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@147 (line 1028)

  0x00007f003f2dd05b: mov    eax,DWORD PTR [rsp+0xa4]
  0x00007f003f2dd062: movabs rdi,0x0            ;   {oop(NULL)}
  0x00007f003f2dd06c: mov    QWORD PTR [rsp+0xc0],rbx
  0x00007f003f2dd074: mov    r8d,DWORD PTR [rsp+0xa0]
  0x00007f003f2dd07c: mov    rcx,QWORD PTR [rsp+0x98]
  0x00007f003f2dd084: jmp    0x00007f003f2ddf72  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1060)

  0x00007f003f2dd089: cmp    esi,0x0
  0x00007f003f2dd08c: movabs rdx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dd096: movabs rsi,0x418
  0x00007f003f2dd0a0: jl     0x00007f003f2dd0b0
  0x00007f003f2dd0a6: movabs rsi,0x428
  0x00007f003f2dd0b0: mov    rax,QWORD PTR [rdx+rsi*1]
  0x00007f003f2dd0b4: lea    rax,[rax+0x1]
  0x00007f003f2dd0b8: mov    QWORD PTR [rdx+rsi*1],rax
  0x00007f003f2dd0bc: jl     0x00007f003f2dd70a  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@152 (line 1029)

  0x00007f003f2dd0c2: mov    rax,rdi
  0x00007f003f2dd0c5: mov    ecx,0x1            ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@162 (line 1033)

  0x00007f003f2dd0ca: mov    DWORD PTR [rsp+0xac],ecx
  0x00007f003f2dd0d1: mov    QWORD PTR [rsp+0xc0],rbx
  0x00007f003f2dd0d9: nop    DWORD PTR [rax+0x0]
  0x00007f003f2dd0e0: mov    esi,DWORD PTR [rsp+0xa8]
  0x00007f003f2dd0e7: mov    rdx,QWORD PTR [rsp+0x90]
  0x00007f003f2dd0ef: mov    r8d,DWORD PTR [rax+0xc]  ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@164 (line 1033)
                                                ; implicit exception: dispatches to 0x00007f003f2de36d
  0x00007f003f2dd0f3: cmp    r8d,esi
  0x00007f003f2dd0f6: movabs r8,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dd100: movabs r11,0x438
  0x00007f003f2dd10a: jne    0x00007f003f2dd11a
  0x00007f003f2dd110: movabs r11,0x448
  0x00007f003f2dd11a: mov    r13,QWORD PTR [r8+r11*1]
  0x00007f003f2dd11e: lea    r13,[r13+0x1]
  0x00007f003f2dd122: mov    QWORD PTR [r8+r11*1],r13
  0x00007f003f2dd126: je     0x00007f003f2dd134  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@169 (line 1033)

  0x00007f003f2dd12c: mov    r8,rax
  0x00007f003f2dd12f: jmp    0x00007f003f2dd405  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@218 (line 1041)

  0x00007f003f2dd134: mov    r8d,DWORD PTR [rax+0x10]
  0x00007f003f2dd138: shl    r8,0x3             ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@174 (line 1033)

  0x00007f003f2dd13c: cmp    r8,rdx
  0x00007f003f2dd13f: movabs r11,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dd149: movabs r13,0x458
  0x00007f003f2dd153: je     0x00007f003f2dd163
  0x00007f003f2dd159: movabs r13,0x468
  0x00007f003f2dd163: mov    r14,QWORD PTR [r11+r13*1]
  0x00007f003f2dd167: lea    r14,[r14+0x1]
  0x00007f003f2dd16b: mov    QWORD PTR [r11+r13*1],r14
  0x00007f003f2dd16f: je     0x00007f003f2dd4ad  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@181 (line 1033)

  0x00007f003f2dd175: cmp    r8,0x0
  0x00007f003f2dd179: movabs r11,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dd183: movabs r13,0x478
  0x00007f003f2dd18d: je     0x00007f003f2dd19d
  0x00007f003f2dd193: movabs r13,0x488
  0x00007f003f2dd19d: mov    r14,QWORD PTR [r11+r13*1]
  0x00007f003f2dd1a1: lea    r14,[r14+0x1]
  0x00007f003f2dd1a5: mov    QWORD PTR [r11+r13*1],r14
  0x00007f003f2dd1a9: jne    0x00007f003f2dd1b7  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@186 (line 1033)

  0x00007f003f2dd1af: mov    r8,rax
  0x00007f003f2dd1b2: jmp    0x00007f003f2dd405  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@218 (line 1041)

  0x00007f003f2dd1b7: mov    QWORD PTR [rsp+0xb0],rax
  0x00007f003f2dd1bf: mov    r11,rdx
  0x00007f003f2dd1c2: movabs r13,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dd1cc: mov    r11d,DWORD PTR [r11+0x8]
  0x00007f003f2dd1d0: shl    r11,0x3
  0x00007f003f2dd1d4: cmp    r11,QWORD PTR [r13+0x4a8]
  0x00007f003f2dd1db: jne    0x00007f003f2dd1ea
  0x00007f003f2dd1dd: add    QWORD PTR [r13+0x4b0],0x1
  0x00007f003f2dd1e5: jmp    0x00007f003f2dd3ac
  0x00007f003f2dd1ea: cmp    r11,QWORD PTR [r13+0x4b8]
  0x00007f003f2dd1f1: jne    0x00007f003f2dd200
  0x00007f003f2dd1f3: add    QWORD PTR [r13+0x4c0],0x1
  0x00007f003f2dd1fb: jmp    0x00007f003f2dd3ac
  0x00007f003f2dd200: cmp    r11,QWORD PTR [r13+0x4c8]
  0x00007f003f2dd207: jne    0x00007f003f2dd216
  0x00007f003f2dd209: add    QWORD PTR [r13+0x4d0],0x1
  0x00007f003f2dd211: jmp    0x00007f003f2dd3ac
  0x00007f003f2dd216: cmp    r11,QWORD PTR [r13+0x4d8]
  0x00007f003f2dd21d: jne    0x00007f003f2dd22c
  0x00007f003f2dd21f: add    QWORD PTR [r13+0x4e0],0x1
  0x00007f003f2dd227: jmp    0x00007f003f2dd3ac
  0x00007f003f2dd22c: cmp    r11,QWORD PTR [r13+0x4e8]
  0x00007f003f2dd233: jne    0x00007f003f2dd242
  0x00007f003f2dd235: add    QWORD PTR [r13+0x4f0],0x1
  0x00007f003f2dd23d: jmp    0x00007f003f2dd3ac
  0x00007f003f2dd242: cmp    r11,QWORD PTR [r13+0x4f8]
  0x00007f003f2dd249: jne    0x00007f003f2dd258
  0x00007f003f2dd24b: add    QWORD PTR [r13+0x500],0x1
  0x00007f003f2dd253: jmp    0x00007f003f2dd3ac
  0x00007f003f2dd258: cmp    r11,QWORD PTR [r13+0x508]
  0x00007f003f2dd25f: jne    0x00007f003f2dd26e
  0x00007f003f2dd261: add    QWORD PTR [r13+0x510],0x1
  0x00007f003f2dd269: jmp    0x00007f003f2dd3ac
  0x00007f003f2dd26e: cmp    r11,QWORD PTR [r13+0x518]
  0x00007f003f2dd275: jne    0x00007f003f2dd284
  0x00007f003f2dd277: add    QWORD PTR [r13+0x520],0x1
  0x00007f003f2dd27f: jmp    0x00007f003f2dd3ac
  0x00007f003f2dd284: cmp    QWORD PTR [r13+0x4a8],0x0
  0x00007f003f2dd28f: jne    0x00007f003f2dd2a8
  0x00007f003f2dd291: mov    QWORD PTR [r13+0x4a8],r11
  0x00007f003f2dd298: mov    QWORD PTR [r13+0x4b0],0x1
  0x00007f003f2dd2a3: jmp    0x00007f003f2dd3ac
  0x00007f003f2dd2a8: cmp    QWORD PTR [r13+0x4b8],0x0
  0x00007f003f2dd2b3: jne    0x00007f003f2dd2cc
  0x00007f003f2dd2b5: mov    QWORD PTR [r13+0x4b8],r11
  0x00007f003f2dd2bc: mov    QWORD PTR [r13+0x4c0],0x1
  0x00007f003f2dd2c7: jmp    0x00007f003f2dd3ac
  0x00007f003f2dd2cc: cmp    QWORD PTR [r13+0x4c8],0x0
  0x00007f003f2dd2d7: jne    0x00007f003f2dd2f0
  0x00007f003f2dd2d9: mov    QWORD PTR [r13+0x4c8],r11
  0x00007f003f2dd2e0: mov    QWORD PTR [r13+0x4d0],0x1
  0x00007f003f2dd2eb: jmp    0x00007f003f2dd3ac
  0x00007f003f2dd2f0: cmp    QWORD PTR [r13+0x4d8],0x0
  0x00007f003f2dd2fb: jne    0x00007f003f2dd314
  0x00007f003f2dd2fd: mov    QWORD PTR [r13+0x4d8],r11
  0x00007f003f2dd304: mov    QWORD PTR [r13+0x4e0],0x1
  0x00007f003f2dd30f: jmp    0x00007f003f2dd3ac
  0x00007f003f2dd314: cmp    QWORD PTR [r13+0x4e8],0x0
  0x00007f003f2dd31f: jne    0x00007f003f2dd338
  0x00007f003f2dd321: mov    QWORD PTR [r13+0x4e8],r11
  0x00007f003f2dd328: mov    QWORD PTR [r13+0x4f0],0x1
  0x00007f003f2dd333: jmp    0x00007f003f2dd3ac
  0x00007f003f2dd338: cmp    QWORD PTR [r13+0x4f8],0x0
  0x00007f003f2dd343: jne    0x00007f003f2dd35c
  0x00007f003f2dd345: mov    QWORD PTR [r13+0x4f8],r11
  0x00007f003f2dd34c: mov    QWORD PTR [r13+0x500],0x1
  0x00007f003f2dd357: jmp    0x00007f003f2dd3ac
  0x00007f003f2dd35c: cmp    QWORD PTR [r13+0x508],0x0
  0x00007f003f2dd367: jne    0x00007f003f2dd380
  0x00007f003f2dd369: mov    QWORD PTR [r13+0x508],r11
  0x00007f003f2dd370: mov    QWORD PTR [r13+0x510],0x1
  0x00007f003f2dd37b: jmp    0x00007f003f2dd3ac
  0x00007f003f2dd380: cmp    QWORD PTR [r13+0x518],0x0
  0x00007f003f2dd38b: jne    0x00007f003f2dd3a4
  0x00007f003f2dd38d: mov    QWORD PTR [r13+0x518],r11
  0x00007f003f2dd394: mov    QWORD PTR [r13+0x520],0x1
  0x00007f003f2dd39f: jmp    0x00007f003f2dd3ac
  0x00007f003f2dd3a4: add    QWORD PTR [r13+0x498],0x1
  0x00007f003f2dd3ac: mov    r11,rdx
  0x00007f003f2dd3af: mov    rdx,r8
  0x00007f003f2dd3b2: mov    rsi,r11            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1035)

  0x00007f003f2dd3b5: movabs rax,0xffffffffffffffff
  0x00007f003f2dd3bf: call   0x00007f003f1c4f60  ; OopMap{[136]=Oop [152]=Oop [144]=Oop [192]=Oop [184]=Oop [176]=Oop [232]=Oop off=4324}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1035)
                                                ;   {virtual_call}
  0x00007f003f2dd3c4: cmp    eax,0x0
  0x00007f003f2dd3c7: movabs rdx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dd3d1: movabs rsi,0x530
  0x00007f003f2dd3db: je     0x00007f003f2dd3eb
  0x00007f003f2dd3e1: movabs rsi,0x540
  0x00007f003f2dd3eb: mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00007f003f2dd3ef: lea    rdi,[rdi+0x1]
  0x00007f003f2dd3f3: mov    QWORD PTR [rdx+rsi*1],rdi
  0x00007f003f2dd3f7: mov    r8,QWORD PTR [rsp+0xb0]
  0x00007f003f2dd3ff: jne    0x00007f003f2dd4b0  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@195 (line 1035)

  0x00007f003f2dd405: mov    edx,DWORD PTR [r8+0x18]
  0x00007f003f2dd409: shl    rdx,0x3            ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@224 (line 1042)

  0x00007f003f2dd40d: cmp    rdx,0x0
  0x00007f003f2dd411: movabs rsi,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dd41b: movabs rdi,0x588
  0x00007f003f2dd425: jne    0x00007f003f2dd435
  0x00007f003f2dd42b: movabs rdi,0x598
  0x00007f003f2dd435: mov    rax,QWORD PTR [rsi+rdi*1]
  0x00007f003f2dd439: lea    rax,[rax+0x1]
  0x00007f003f2dd43d: mov    QWORD PTR [rsi+rdi*1],rax
  0x00007f003f2dd441: je     0x00007f003f2dd573  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@230 (line 1042)

  0x00007f003f2dd447: mov    ecx,DWORD PTR [rsp+0xac]
  0x00007f003f2dd44e: inc    ecx
  0x00007f003f2dd450: movabs rsi,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dd45a: mov    edi,DWORD PTR [rsi+0x100]
  0x00007f003f2dd460: add    edi,0x8
  0x00007f003f2dd463: mov    DWORD PTR [rsi+0x100],edi
  0x00007f003f2dd469: movabs rsi,0x7f0038948e58  ;   {metadata({method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dd473: and    edi,0xfff8
  0x00007f003f2dd479: cmp    edi,0x0
  0x00007f003f2dd47c: je     0x00007f003f2de372  ; OopMap{[136]=Oop [152]=Oop [144]=Oop [192]=Oop [184]=Oop rdx=Oop [232]=Oop off=4514}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@256 (line 1031)

  0x00007f003f2dd482: test   DWORD PTR [rip+0x1b0e4c78],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2dd488: movabs rsi,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dd492: inc    DWORD PTR [rsi+0x5d0]
  0x00007f003f2dd498: mov    r8,rdx
  0x00007f003f2dd49b: mov    rbx,rcx
  0x00007f003f2dd49e: mov    rax,r8
  0x00007f003f2dd4a1: mov    DWORD PTR [rsp+0xac],ebx
  0x00007f003f2dd4a8: jmp    0x00007f003f2dd0e0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@256 (line 1031)

  0x00007f003f2dd4ad: mov    r8,rax
  0x00007f003f2dd4b0: mov    ebx,DWORD PTR [rsp+0xac]
  0x00007f003f2dd4b7: mov    r9d,DWORD PTR [rsp+0xa0]
  0x00007f003f2dd4bf: mov    edx,DWORD PTR [r8+0x14]
  0x00007f003f2dd4c3: shl    rdx,0x3            ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@200 (line 1036)

  0x00007f003f2dd4c7: cmp    r9d,0x0
  0x00007f003f2dd4cb: movabs rsi,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dd4d5: movabs rdi,0x550
  0x00007f003f2dd4df: jne    0x00007f003f2dd4ef
  0x00007f003f2dd4e5: movabs rdi,0x560
  0x00007f003f2dd4ef: mov    rax,QWORD PTR [rsi+rdi*1]
  0x00007f003f2dd4f3: lea    rax,[rax+0x1]
  0x00007f003f2dd4f7: mov    QWORD PTR [rsi+rdi*1],rax
  0x00007f003f2dd4fb: je     0x00007f003f2dd51e  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@206 (line 1037)

  0x00007f003f2dd501: mov    r13d,DWORD PTR [rsp+0xa8]
  0x00007f003f2dd509: mov    r14,QWORD PTR [rsp+0x98]
  0x00007f003f2dd511: mov    r11,QWORD PTR [rsp+0x90]
  0x00007f003f2dd519: jmp    0x00007f003f2dd6e9  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@259 (line 1031)

  0x00007f003f2dd51e: mov    rcx,QWORD PTR [rsp+0x98]
  0x00007f003f2dd526: mov    r10,rcx
  0x00007f003f2dd529: shr    r10,0x3
  0x00007f003f2dd52d: mov    DWORD PTR [r8+0x14],r10d
  0x00007f003f2dd531: mov    rax,r8
  0x00007f003f2dd534: shr    rax,0x9
  0x00007f003f2dd538: movabs rsi,0x7f003ae7c000
  0x00007f003f2dd542: mov    BYTE PTR [rax+rsi*1],0x0
  0x00007f003f2dd546: lock add DWORD PTR [rsp],0x0  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@212 (line 1038)

  0x00007f003f2dd54b: movabs rsi,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dd555: inc    DWORD PTR [rsi+0x570]
  0x00007f003f2dd55b: mov    r13d,DWORD PTR [rsp+0xa8]
  0x00007f003f2dd563: mov    r14,rcx
  0x00007f003f2dd566: mov    r11,QWORD PTR [rsp+0x90]
  0x00007f003f2dd56e: jmp    0x00007f003f2dd6e9  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@215 (line 1038)

  0x00007f003f2dd573: mov    ebx,DWORD PTR [rsp+0xac]
  0x00007f003f2dd57a: mov    esi,DWORD PTR [rsp+0xa8]
  0x00007f003f2dd581: mov    r9d,DWORD PTR [rsp+0xa0]
  0x00007f003f2dd589: mov    rcx,QWORD PTR [rsp+0x98]
  0x00007f003f2dd591: mov    rdx,QWORD PTR [rsp+0x90]
  0x00007f003f2dd599: mov    r11,rdx
  0x00007f003f2dd59c: movabs rdx,0x7c0033a30    ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007f003f2dd5a6: mov    r14,rcx
  0x00007f003f2dd5a9: mov    r13,rsi
  0x00007f003f2dd5ac: mov    rax,QWORD PTR [r15+0x60]
  0x00007f003f2dd5b0: lea    rdi,[rax+0x20]
  0x00007f003f2dd5b4: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2dd5b8: ja     0x00007f003f2de389
  0x00007f003f2dd5be: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2dd5c2: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2dd5c9: mov    QWORD PTR [rax],rcx
  0x00007f003f2dd5cc: mov    rcx,rdx
  0x00007f003f2dd5cf: shr    rcx,0x3
  0x00007f003f2dd5d3: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2dd5d6: xor    rcx,rcx
  0x00007f003f2dd5d9: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2dd5dc: xor    rcx,rcx
  0x00007f003f2dd5df: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f2dd5e3: mov    QWORD PTR [rax+0x18],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@235 (line 1043)

  0x00007f003f2dd5e7: mov    rdx,rax
  0x00007f003f2dd5ea: movabs rcx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dd5f4: add    QWORD PTR [rcx+0x5a8],0x1
  0x00007f003f2dd5fc: movabs rdx,0x7f0038a8ec70  ;   {metadata(method data for {method} {0x00007f0038953828} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007f003f2dd606: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2dd60c: add    ecx,0x8
  0x00007f003f2dd60f: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2dd615: movabs rdx,0x7f0038953828  ;   {metadata({method} {0x00007f0038953828} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007f003f2dd61f: and    ecx,0x7ffff8
  0x00007f003f2dd625: cmp    ecx,0x0
  0x00007f003f2dd628: je     0x00007f003f2de396
  0x00007f003f2dd62e: mov    rdx,rax
  0x00007f003f2dd631: movabs rcx,0x7f0038a8ec70  ;   {metadata(method data for {method} {0x00007f0038953828} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007f003f2dd63b: add    QWORD PTR [rcx+0x130],0x1
  0x00007f003f2dd643: movabs rdx,0x7f00389092a0  ;   {metadata(method data for {method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2dd64d: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2dd653: add    ecx,0x8
  0x00007f003f2dd656: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2dd65c: movabs rdx,0x7f00387664d8  ;   {metadata({method} {0x00007f00387664d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f003f2dd666: and    ecx,0x7ffff8
  0x00007f003f2dd66c: cmp    ecx,0x0
  0x00007f003f2dd66f: je     0x00007f003f2de3ad
<writer thread='139639490488064'/>
[Loaded java.lang.Shutdown from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637817480960'/>
  0x00007f003f2dd675: mov    DWORD PTR [rax+0xc],r13d  ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@6 (line 626)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@244 (line 1043)

  0x00007f003f2dd679: mov    r10,r11
  0x00007f003f2dd67c: shr    r10,0x3
  0x00007f003f2dd680: mov    DWORD PTR [rax+0x10],r10d
  0x00007f003f2dd684: mov    rdx,rax
  0x00007f003f2dd687: shr    rdx,0x9
  0x00007f003f2dd68b: movabs rcx,0x7f003ae7c000
  0x00007f003f2dd695: mov    BYTE PTR [rdx+rcx*1],0x0
  0x00007f003f2dd699: mov    r10,r14
  0x00007f003f2dd69c: shr    r10,0x3
  0x00007f003f2dd6a0: mov    DWORD PTR [rax+0x14],r10d
  0x00007f003f2dd6a4: mov    rdx,rax
  0x00007f003f2dd6a7: shr    rdx,0x9
  0x00007f003f2dd6ab: mov    BYTE PTR [rdx+rcx*1],0x0
  0x00007f003f2dd6af: lock add DWORD PTR [rsp],0x0
  0x00007f003f2dd6b4: mov    r10,rax
  0x00007f003f2dd6b7: shr    r10,0x3
  0x00007f003f2dd6bb: mov    DWORD PTR [r8+0x18],r10d
  0x00007f003f2dd6bf: mov    rax,r8
  0x00007f003f2dd6c2: shr    rax,0x9
  0x00007f003f2dd6c6: mov    BYTE PTR [rax+rcx*1],0x0
  0x00007f003f2dd6ca: lock add DWORD PTR [rsp],0x0  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@247 (line 1043)

  0x00007f003f2dd6cf: movabs rdx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dd6d9: inc    DWORD PTR [rdx+0x5b8]
  0x00007f003f2dd6df: movabs rdx,0x0            ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@250 (line 1045)
                                                ;   {oop(NULL)}
  0x00007f003f2dd6e9: movabs rcx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dd6f3: inc    DWORD PTR [rcx+0x5e8]
  0x00007f003f2dd6f9: mov    rdi,rdx
  0x00007f003f2dd6fc: mov    rax,rbx
  0x00007f003f2dd6ff: mov    r8,r9
  0x00007f003f2dd702: mov    rcx,r14
  0x00007f003f2dd705: jmp    0x00007f003f2ddf72  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@259 (line 1031)

  0x00007f003f2dd70a: mov    QWORD PTR [rsp+0xc0],rbx
  0x00007f003f2dd712: mov    r13d,DWORD PTR [rsp+0xa8]
  0x00007f003f2dd71a: mov    r9d,DWORD PTR [rsp+0xa0]
  0x00007f003f2dd722: mov    r14,QWORD PTR [rsp+0x98]
  0x00007f003f2dd72a: mov    r11,QWORD PTR [rsp+0x90]
  0x00007f003f2dd732: cmp    rdi,0x0
  0x00007f003f2dd736: jne    0x00007f003f2dd752
  0x00007f003f2dd738: movabs r8,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dd742: or     DWORD PTR [r8+0x5f8],0x100
  0x00007f003f2dd74d: jmp    0x00007f003f2dd99f
  0x00007f003f2dd752: nop    WORD PTR [rax+rax*1+0x0]
  0x00007f003f2dd758: jmp    0x00007f003f2de3d3  ;   {no_reloc}
  0x00007f003f2dd75d: add    BYTE PTR [rax],al
  0x00007f003f2dd75f: add    BYTE PTR [rax],al
  0x00007f003f2dd761: add    BYTE PTR [rbx+rcx*4+0x47],al
  0x00007f003f2dd765: or     BYTE PTR [rcx-0x3f],cl
  0x00007f003f2dd768: loopne 0x00007f003f2dd76d
  0x00007f003f2dd76a: cmp    r8,rsi
  0x00007f003f2dd76d: je     0x00007f003f2dd79d
  0x00007f003f2dd773: mov    ecx,DWORD PTR [rsi+0xc]
  0x00007f003f2dd776: cmp    rsi,QWORD PTR [r8+rcx*1]
  0x00007f003f2dd77a: je     0x00007f003f2dd79d
  0x00007f003f2dd780: cmp    ecx,0x18
  0x00007f003f2dd783: jne    0x00007f003f2dd983
  0x00007f003f2dd789: push   r8
  0x00007f003f2dd78b: push   rsi
  0x00007f003f2dd78c: call   0x00007f003f27b720  ;   {runtime_call}
  0x00007f003f2dd791: pop    r8
  0x00007f003f2dd793: pop    rsi
  0x00007f003f2dd794: cmp    esi,0x0
  0x00007f003f2dd797: je     0x00007f003f2dd983
  0x00007f003f2dd79d: movabs r8,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dd7a7: mov    esi,DWORD PTR [rdi+0x8]
  0x00007f003f2dd7aa: shl    rsi,0x3
  0x00007f003f2dd7ae: cmp    rsi,QWORD PTR [r8+0x610]
  0x00007f003f2dd7b5: jne    0x00007f003f2dd7c4
  0x00007f003f2dd7b7: add    QWORD PTR [r8+0x618],0x1
  0x00007f003f2dd7bf: jmp    0x00007f003f2dd9a4
  0x00007f003f2dd7c4: cmp    rsi,QWORD PTR [r8+0x620]
  0x00007f003f2dd7cb: jne    0x00007f003f2dd7da
  0x00007f003f2dd7cd: add    QWORD PTR [r8+0x628],0x1
  0x00007f003f2dd7d5: jmp    0x00007f003f2dd9a4
  0x00007f003f2dd7da: cmp    rsi,QWORD PTR [r8+0x630]
  0x00007f003f2dd7e1: jne    0x00007f003f2dd7f0
  0x00007f003f2dd7e3: add    QWORD PTR [r8+0x638],0x1
  0x00007f003f2dd7eb: jmp    0x00007f003f2dd9a4
  0x00007f003f2dd7f0: cmp    rsi,QWORD PTR [r8+0x640]
  0x00007f003f2dd7f7: jne    0x00007f003f2dd806
  0x00007f003f2dd7f9: add    QWORD PTR [r8+0x648],0x1
  0x00007f003f2dd801: jmp    0x00007f003f2dd9a4
  0x00007f003f2dd806: cmp    rsi,QWORD PTR [r8+0x650]
  0x00007f003f2dd80d: jne    0x00007f003f2dd81c
  0x00007f003f2dd80f: add    QWORD PTR [r8+0x658],0x1
  0x00007f003f2dd817: jmp    0x00007f003f2dd9a4
  0x00007f003f2dd81c: cmp    rsi,QWORD PTR [r8+0x660]
  0x00007f003f2dd823: jne    0x00007f003f2dd832
  0x00007f003f2dd825: add    QWORD PTR [r8+0x668],0x1
  0x00007f003f2dd82d: jmp    0x00007f003f2dd9a4
  0x00007f003f2dd832: cmp    rsi,QWORD PTR [r8+0x670]
  0x00007f003f2dd839: jne    0x00007f003f2dd848
  0x00007f003f2dd83b: add    QWORD PTR [r8+0x678],0x1
  0x00007f003f2dd843: jmp    0x00007f003f2dd9a4
  0x00007f003f2dd848: cmp    rsi,QWORD PTR [r8+0x680]
  0x00007f003f2dd84f: jne    0x00007f003f2dd85e
  0x00007f003f2dd851: add    QWORD PTR [r8+0x688],0x1
  0x00007f003f2dd859: jmp    0x00007f003f2dd9a4
  0x00007f003f2dd85e: cmp    QWORD PTR [r8+0x610],0x0
  0x00007f003f2dd869: jne    0x00007f003f2dd882
  0x00007f003f2dd86b: mov    QWORD PTR [r8+0x610],rsi
  0x00007f003f2dd872: mov    QWORD PTR [r8+0x618],0x1
  0x00007f003f2dd87d: jmp    0x00007f003f2dd9a4
  0x00007f003f2dd882: cmp    QWORD PTR [r8+0x620],0x0
  0x00007f003f2dd88d: jne    0x00007f003f2dd8a6
  0x00007f003f2dd88f: mov    QWORD PTR [r8+0x620],rsi
  0x00007f003f2dd896: mov    QWORD PTR [r8+0x628],0x1
  0x00007f003f2dd8a1: jmp    0x00007f003f2dd9a4
  0x00007f003f2dd8a6: cmp    QWORD PTR [r8+0x630],0x0
  0x00007f003f2dd8b1: jne    0x00007f003f2dd8ca
  0x00007f003f2dd8b3: mov    QWORD PTR [r8+0x630],rsi
  0x00007f003f2dd8ba: mov    QWORD PTR [r8+0x638],0x1
  0x00007f003f2dd8c5: jmp    0x00007f003f2dd9a4
  0x00007f003f2dd8ca: cmp    QWORD PTR [r8+0x640],0x0
  0x00007f003f2dd8d5: jne    0x00007f003f2dd8ee
  0x00007f003f2dd8d7: mov    QWORD PTR [r8+0x640],rsi
  0x00007f003f2dd8de: mov    QWORD PTR [r8+0x648],0x1
  0x00007f003f2dd8e9: jmp    0x00007f003f2dd9a4
  0x00007f003f2dd8ee: cmp    QWORD PTR [r8+0x650],0x0
  0x00007f003f2dd8f9: jne    0x00007f003f2dd912
  0x00007f003f2dd8fb: mov    QWORD PTR [r8+0x650],rsi
  0x00007f003f2dd902: mov    QWORD PTR [r8+0x658],0x1
  0x00007f003f2dd90d: jmp    0x00007f003f2dd9a4
  0x00007f003f2dd912: cmp    QWORD PTR [r8+0x660],0x0
  0x00007f003f2dd91d: jne    0x00007f003f2dd936
  0x00007f003f2dd91f: mov    QWORD PTR [r8+0x660],rsi
  0x00007f003f2dd926: mov    QWORD PTR [r8+0x668],0x1
  0x00007f003f2dd931: jmp    0x00007f003f2dd9a4
  0x00007f003f2dd936: cmp    QWORD PTR [r8+0x670],0x0
  0x00007f003f2dd941: jne    0x00007f003f2dd95a
  0x00007f003f2dd943: mov    QWORD PTR [r8+0x670],rsi
  0x00007f003f2dd94a: mov    QWORD PTR [r8+0x678],0x1
  0x00007f003f2dd955: jmp    0x00007f003f2dd9a4
  0x00007f003f2dd95a: cmp    QWORD PTR [r8+0x680],0x0
  0x00007f003f2dd965: jne    0x00007f003f2dd97e
  0x00007f003f2dd967: mov    QWORD PTR [r8+0x680],rsi
  0x00007f003f2dd96e: mov    QWORD PTR [r8+0x688],0x1
  0x00007f003f2dd979: jmp    0x00007f003f2dd9a4
  0x00007f003f2dd97e: jmp    0x00007f003f2dd9a4
  0x00007f003f2dd983: movabs r8,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dd98d: sub    QWORD PTR [r8+0x600],0x1
  0x00007f003f2dd995: jmp    0x00007f003f2dd99f
  0x00007f003f2dd99a: jmp    0x00007f003f2dd9a4
  0x00007f003f2dd99f: xor    rdx,rdx
  0x00007f003f2dd9a2: jmp    0x00007f003f2dd9ae
  0x00007f003f2dd9a4: movabs rdx,0x1            ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@264 (line 1049)

  0x00007f003f2dd9ae: cmp    edx,0x0
  0x00007f003f2dd9b1: movabs rdx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dd9bb: movabs rcx,0x698
  0x00007f003f2dd9c5: je     0x00007f003f2dd9d5
  0x00007f003f2dd9cb: movabs rcx,0x6a8
  0x00007f003f2dd9d5: mov    r8,QWORD PTR [rdx+rcx*1]
  0x00007f003f2dd9d9: lea    r8,[r8+0x1]
  0x00007f003f2dd9dd: mov    QWORD PTR [rdx+rcx*1],r8
  0x00007f003f2dd9e1: jne    0x00007f003f2dda03  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@267 (line 1049)

  0x00007f003f2dd9e7: mov    eax,DWORD PTR [rsp+0xa4]
  0x00007f003f2dd9ee: movabs rdi,0x0            ;   {oop(NULL)}
  0x00007f003f2dd9f8: mov    r8,r9
  0x00007f003f2dd9fb: mov    rcx,r14
  0x00007f003f2dd9fe: jmp    0x00007f003f2ddf72  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1060)

  0x00007f003f2dda03: cmp    rdi,0x0
  0x00007f003f2dda07: jne    0x00007f003f2dda22
  0x00007f003f2dda09: movabs rcx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dda13: or     DWORD PTR [rcx+0x6b0],0x100
  0x00007f003f2dda1d: jmp    0x00007f003f2ddc6c
  0x00007f003f2dda22: nop    WORD PTR [rax+rax*1+0x0]
  0x00007f003f2dda28: jmp    0x00007f003f2de3ec  ;   {no_reloc}
  0x00007f003f2dda2d: add    BYTE PTR [rax],al
  0x00007f003f2dda2f: add    BYTE PTR [rax],al
  0x00007f003f2dda31: add    BYTE PTR [rbx-0x3eb7f7b1],cl
  0x00007f003f2dda37: loope  0x00007f003f2dda3c
  0x00007f003f2dda39: cmp    rcx,rbx
  0x00007f003f2dda3c: je     0x00007f003f2dda6a
  0x00007f003f2dda42: mov    edx,DWORD PTR [rbx+0xc]
  0x00007f003f2dda45: cmp    rbx,QWORD PTR [rcx+rdx*1]
  0x00007f003f2dda49: je     0x00007f003f2dda6a
  0x00007f003f2dda4f: cmp    edx,0x18
  0x00007f003f2dda52: jne    0x00007f003f2ddc50
  0x00007f003f2dda58: push   rcx
  0x00007f003f2dda59: push   rbx
  0x00007f003f2dda5a: call   0x00007f003f27b720  ;   {runtime_call}
  0x00007f003f2dda5f: pop    rcx
  0x00007f003f2dda60: pop    rbx
  0x00007f003f2dda61: cmp    ebx,0x0
  0x00007f003f2dda64: je     0x00007f003f2ddc50
  0x00007f003f2dda6a: movabs rcx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dda74: mov    ebx,DWORD PTR [rdi+0x8]
  0x00007f003f2dda77: shl    rbx,0x3
  0x00007f003f2dda7b: cmp    rbx,QWORD PTR [rcx+0x6c8]
  0x00007f003f2dda82: jne    0x00007f003f2dda91
  0x00007f003f2dda84: add    QWORD PTR [rcx+0x6d0],0x1
  0x00007f003f2dda8c: jmp    0x00007f003f2ddc6c
  0x00007f003f2dda91: cmp    rbx,QWORD PTR [rcx+0x6d8]
  0x00007f003f2dda98: jne    0x00007f003f2ddaa7
  0x00007f003f2dda9a: add    QWORD PTR [rcx+0x6e0],0x1
  0x00007f003f2ddaa2: jmp    0x00007f003f2ddc6c
  0x00007f003f2ddaa7: cmp    rbx,QWORD PTR [rcx+0x6e8]
  0x00007f003f2ddaae: jne    0x00007f003f2ddabd
  0x00007f003f2ddab0: add    QWORD PTR [rcx+0x6f0],0x1
  0x00007f003f2ddab8: jmp    0x00007f003f2ddc6c
  0x00007f003f2ddabd: cmp    rbx,QWORD PTR [rcx+0x6f8]
  0x00007f003f2ddac4: jne    0x00007f003f2ddad3
  0x00007f003f2ddac6: add    QWORD PTR [rcx+0x700],0x1
  0x00007f003f2ddace: jmp    0x00007f003f2ddc6c
  0x00007f003f2ddad3: cmp    rbx,QWORD PTR [rcx+0x708]
  0x00007f003f2ddada: jne    0x00007f003f2ddae9
  0x00007f003f2ddadc: add    QWORD PTR [rcx+0x710],0x1
  0x00007f003f2ddae4: jmp    0x00007f003f2ddc6c
  0x00007f003f2ddae9: cmp    rbx,QWORD PTR [rcx+0x718]
  0x00007f003f2ddaf0: jne    0x00007f003f2ddaff
  0x00007f003f2ddaf2: add    QWORD PTR [rcx+0x720],0x1
  0x00007f003f2ddafa: jmp    0x00007f003f2ddc6c
  0x00007f003f2ddaff: cmp    rbx,QWORD PTR [rcx+0x728]
  0x00007f003f2ddb06: jne    0x00007f003f2ddb15
  0x00007f003f2ddb08: add    QWORD PTR [rcx+0x730],0x1
  0x00007f003f2ddb10: jmp    0x00007f003f2ddc6c
  0x00007f003f2ddb15: cmp    rbx,QWORD PTR [rcx+0x738]
  0x00007f003f2ddb1c: jne    0x00007f003f2ddb2b
  0x00007f003f2ddb1e: add    QWORD PTR [rcx+0x740],0x1
  0x00007f003f2ddb26: jmp    0x00007f003f2ddc6c
  0x00007f003f2ddb2b: cmp    QWORD PTR [rcx+0x6c8],0x0
  0x00007f003f2ddb36: jne    0x00007f003f2ddb4f
  0x00007f003f2ddb38: mov    QWORD PTR [rcx+0x6c8],rbx
  0x00007f003f2ddb3f: mov    QWORD PTR [rcx+0x6d0],0x1
  0x00007f003f2ddb4a: jmp    0x00007f003f2ddc6c
  0x00007f003f2ddb4f: cmp    QWORD PTR [rcx+0x6d8],0x0
  0x00007f003f2ddb5a: jne    0x00007f003f2ddb73
  0x00007f003f2ddb5c: mov    QWORD PTR [rcx+0x6d8],rbx
  0x00007f003f2ddb63: mov    QWORD PTR [rcx+0x6e0],0x1
  0x00007f003f2ddb6e: jmp    0x00007f003f2ddc6c
  0x00007f003f2ddb73: cmp    QWORD PTR [rcx+0x6e8],0x0
  0x00007f003f2ddb7e: jne    0x00007f003f2ddb97
  0x00007f003f2ddb80: mov    QWORD PTR [rcx+0x6e8],rbx
  0x00007f003f2ddb87: mov    QWORD PTR [rcx+0x6f0],0x1
  0x00007f003f2ddb92: jmp    0x00007f003f2ddc6c
  0x00007f003f2ddb97: cmp    QWORD PTR [rcx+0x6f8],0x0
  0x00007f003f2ddba2: jne    0x00007f003f2ddbbb
  0x00007f003f2ddba4: mov    QWORD PTR [rcx+0x6f8],rbx
  0x00007f003f2ddbab: mov    QWORD PTR [rcx+0x700],0x1
  0x00007f003f2ddbb6: jmp    0x00007f003f2ddc6c
  0x00007f003f2ddbbb: cmp    QWORD PTR [rcx+0x708],0x0
  0x00007f003f2ddbc6: jne    0x00007f003f2ddbdf
  0x00007f003f2ddbc8: mov    QWORD PTR [rcx+0x708],rbx
  0x00007f003f2ddbcf: mov    QWORD PTR [rcx+0x710],0x1
  0x00007f003f2ddbda: jmp    0x00007f003f2ddc6c
  0x00007f003f2ddbdf: cmp    QWORD PTR [rcx+0x718],0x0
  0x00007f003f2ddbea: jne    0x00007f003f2ddc03
  0x00007f003f2ddbec: mov    QWORD PTR [rcx+0x718],rbx
  0x00007f003f2ddbf3: mov    QWORD PTR [rcx+0x720],0x1
  0x00007f003f2ddbfe: jmp    0x00007f003f2ddc6c
  0x00007f003f2ddc03: cmp    QWORD PTR [rcx+0x728],0x0
  0x00007f003f2ddc0e: jne    0x00007f003f2ddc27
  0x00007f003f2ddc10: mov    QWORD PTR [rcx+0x728],rbx
  0x00007f003f2ddc17: mov    QWORD PTR [rcx+0x730],0x1
  0x00007f003f2ddc22: jmp    0x00007f003f2ddc6c
  0x00007f003f2ddc27: cmp    QWORD PTR [rcx+0x738],0x0
  0x00007f003f2ddc32: jne    0x00007f003f2ddc4b
  0x00007f003f2ddc34: mov    QWORD PTR [rcx+0x738],rbx
  0x00007f003f2ddc3b: mov    QWORD PTR [rcx+0x740],0x1
  0x00007f003f2ddc46: jmp    0x00007f003f2ddc6c
  0x00007f003f2ddc4b: jmp    0x00007f003f2ddc6c
  0x00007f003f2ddc50: movabs rcx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2ddc5a: sub    QWORD PTR [rcx+0x6b8],0x1
  0x00007f003f2ddc62: jmp    0x00007f003f2de3f6
  0x00007f003f2ddc67: jmp    0x00007f003f2ddc6c
  0x00007f003f2ddc6c: mov    rsi,rdi            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@275 (line 1052)

  0x00007f003f2ddc6f: cmp    rax,QWORD PTR [rsi]  ; implicit exception: dispatches to 0x00007f003f2de3ff
  0x00007f003f2ddc72: mov    rdx,rsi
  0x00007f003f2ddc75: movabs rcx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2ddc7f: mov    edx,DWORD PTR [rdx+0x8]
  0x00007f003f2ddc82: shl    rdx,0x3
  0x00007f003f2ddc86: cmp    rdx,QWORD PTR [rcx+0x760]
  0x00007f003f2ddc8d: jne    0x00007f003f2ddc9c
  0x00007f003f2ddc8f: add    QWORD PTR [rcx+0x768],0x1
  0x00007f003f2ddc97: jmp    0x00007f003f2dde5e
  0x00007f003f2ddc9c: cmp    rdx,QWORD PTR [rcx+0x770]
  0x00007f003f2ddca3: jne    0x00007f003f2ddcb2
  0x00007f003f2ddca5: add    QWORD PTR [rcx+0x778],0x1
  0x00007f003f2ddcad: jmp    0x00007f003f2dde5e
  0x00007f003f2ddcb2: cmp    rdx,QWORD PTR [rcx+0x780]
  0x00007f003f2ddcb9: jne    0x00007f003f2ddcc8
  0x00007f003f2ddcbb: add    QWORD PTR [rcx+0x788],0x1
  0x00007f003f2ddcc3: jmp    0x00007f003f2dde5e
  0x00007f003f2ddcc8: cmp    rdx,QWORD PTR [rcx+0x790]
  0x00007f003f2ddccf: jne    0x00007f003f2ddcde
  0x00007f003f2ddcd1: add    QWORD PTR [rcx+0x798],0x1
  0x00007f003f2ddcd9: jmp    0x00007f003f2dde5e
  0x00007f003f2ddcde: cmp    rdx,QWORD PTR [rcx+0x7a0]
  0x00007f003f2ddce5: jne    0x00007f003f2ddcf4
  0x00007f003f2ddce7: add    QWORD PTR [rcx+0x7a8],0x1
  0x00007f003f2ddcef: jmp    0x00007f003f2dde5e
  0x00007f003f2ddcf4: cmp    rdx,QWORD PTR [rcx+0x7b0]
  0x00007f003f2ddcfb: jne    0x00007f003f2ddd0a
  0x00007f003f2ddcfd: add    QWORD PTR [rcx+0x7b8],0x1
  0x00007f003f2ddd05: jmp    0x00007f003f2dde5e
  0x00007f003f2ddd0a: cmp    rdx,QWORD PTR [rcx+0x7c0]
  0x00007f003f2ddd11: jne    0x00007f003f2ddd20
  0x00007f003f2ddd13: add    QWORD PTR [rcx+0x7c8],0x1
  0x00007f003f2ddd1b: jmp    0x00007f003f2dde5e
  0x00007f003f2ddd20: cmp    rdx,QWORD PTR [rcx+0x7d0]
  0x00007f003f2ddd27: jne    0x00007f003f2ddd36
  0x00007f003f2ddd29: add    QWORD PTR [rcx+0x7d8],0x1
  0x00007f003f2ddd31: jmp    0x00007f003f2dde5e
  0x00007f003f2ddd36: cmp    QWORD PTR [rcx+0x760],0x0
  0x00007f003f2ddd41: jne    0x00007f003f2ddd5a
  0x00007f003f2ddd43: mov    QWORD PTR [rcx+0x760],rdx
  0x00007f003f2ddd4a: mov    QWORD PTR [rcx+0x768],0x1
  0x00007f003f2ddd55: jmp    0x00007f003f2dde5e
  0x00007f003f2ddd5a: cmp    QWORD PTR [rcx+0x770],0x0
  0x00007f003f2ddd65: jne    0x00007f003f2ddd7e
  0x00007f003f2ddd67: mov    QWORD PTR [rcx+0x770],rdx
  0x00007f003f2ddd6e: mov    QWORD PTR [rcx+0x778],0x1
  0x00007f003f2ddd79: jmp    0x00007f003f2dde5e
  0x00007f003f2ddd7e: cmp    QWORD PTR [rcx+0x780],0x0
  0x00007f003f2ddd89: jne    0x00007f003f2ddda2
  0x00007f003f2ddd8b: mov    QWORD PTR [rcx+0x780],rdx
  0x00007f003f2ddd92: mov    QWORD PTR [rcx+0x788],0x1
  0x00007f003f2ddd9d: jmp    0x00007f003f2dde5e
  0x00007f003f2ddda2: cmp    QWORD PTR [rcx+0x790],0x0
  0x00007f003f2dddad: jne    0x00007f003f2dddc6
  0x00007f003f2dddaf: mov    QWORD PTR [rcx+0x790],rdx
  0x00007f003f2dddb6: mov    QWORD PTR [rcx+0x798],0x1
  0x00007f003f2dddc1: jmp    0x00007f003f2dde5e
  0x00007f003f2dddc6: cmp    QWORD PTR [rcx+0x7a0],0x0
  0x00007f003f2dddd1: jne    0x00007f003f2dddea
  0x00007f003f2dddd3: mov    QWORD PTR [rcx+0x7a0],rdx
  0x00007f003f2dddda: mov    QWORD PTR [rcx+0x7a8],0x1
  0x00007f003f2ddde5: jmp    0x00007f003f2dde5e
  0x00007f003f2dddea: cmp    QWORD PTR [rcx+0x7b0],0x0
  0x00007f003f2dddf5: jne    0x00007f003f2dde0e
  0x00007f003f2dddf7: mov    QWORD PTR [rcx+0x7b0],rdx
  0x00007f003f2dddfe: mov    QWORD PTR [rcx+0x7b8],0x1
  0x00007f003f2dde09: jmp    0x00007f003f2dde5e
  0x00007f003f2dde0e: cmp    QWORD PTR [rcx+0x7c0],0x0
  0x00007f003f2dde19: jne    0x00007f003f2dde32
  0x00007f003f2dde1b: mov    QWORD PTR [rcx+0x7c0],rdx
  0x00007f003f2dde22: mov    QWORD PTR [rcx+0x7c8],0x1
  0x00007f003f2dde2d: jmp    0x00007f003f2dde5e
  0x00007f003f2dde32: cmp    QWORD PTR [rcx+0x7d0],0x0
  0x00007f003f2dde3d: jne    0x00007f003f2dde56
  0x00007f003f2dde3f: mov    QWORD PTR [rcx+0x7d0],rdx
  0x00007f003f2dde46: mov    QWORD PTR [rcx+0x7d8],0x1
  0x00007f003f2dde51: jmp    0x00007f003f2dde5e
  0x00007f003f2dde56: add    QWORD PTR [rcx+0x750],0x1
  0x00007f003f2dde5e: mov    rdx,r13
  0x00007f003f2dde61: mov    rcx,r11
  0x00007f003f2dde64: mov    r8,r14             ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@282 (line 1052)

  0x00007f003f2dde67: nop
  0x00007f003f2dde68: nop
  0x00007f003f2dde69: nop
  0x00007f003f2dde6a: nop
  0x00007f003f2dde6b: nop
  0x00007f003f2dde6c: nop
  0x00007f003f2dde6d: movabs rax,0xffffffffffffffff
  0x00007f003f2dde77: call   0x00007f003f1c4f60  ; OopMap{[136]=Oop [192]=Oop [184]=Oop [152]=Oop [144]=Oop [232]=Oop off=7068}
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@282 (line 1052)
                                                ;   {virtual_call}
  0x00007f003f2dde7c: cmp    rax,0x0
  0x00007f003f2dde80: movabs rdx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2dde8a: movabs rcx,0x7e8
  0x00007f003f2dde94: je     0x00007f003f2ddea4
  0x00007f003f2dde9a: movabs rcx,0x7f8
  0x00007f003f2ddea4: mov    rsi,QWORD PTR [rdx+rcx*1]
  0x00007f003f2ddea8: lea    rsi,[rsi+0x1]
  0x00007f003f2ddeac: mov    QWORD PTR [rdx+rcx*1],rsi
  0x00007f003f2ddeb0: jne    0x00007f003f2ddeda  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@288 (line 1052)

  0x00007f003f2ddeb6: movabs rdi,0x0            ;   {oop(NULL)}
  0x00007f003f2ddec0: mov    eax,0x2
  0x00007f003f2ddec5: mov    r8d,DWORD PTR [rsp+0xa0]
  0x00007f003f2ddecd: mov    rcx,QWORD PTR [rsp+0x98]
  0x00007f003f2dded5: jmp    0x00007f003f2ddf72  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1060)

  0x00007f003f2ddeda: mov    rdi,QWORD PTR [rsp+0xb8]
  0x00007f003f2ddee2: mov    r8d,DWORD PTR [rsp+0xa0]
  0x00007f003f2ddeea: mov    edx,DWORD PTR [rax+0x14]  ; implicit exception: dispatches to 0x00007f003f2de404
  0x00007f003f2ddeed: shl    rdx,0x3            ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1054)

  0x00007f003f2ddef1: cmp    r8d,0x0
  0x00007f003f2ddef5: movabs rcx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2ddeff: movabs rsi,0x808
  0x00007f003f2ddf09: jne    0x00007f003f2ddf19
  0x00007f003f2ddf0f: movabs rsi,0x818
  0x00007f003f2ddf19: mov    rdi,QWORD PTR [rcx+rsi*1]
  0x00007f003f2ddf1d: lea    rdi,[rdi+0x1]
  0x00007f003f2ddf21: mov    QWORD PTR [rcx+rsi*1],rdi
  0x00007f003f2ddf25: je     0x00007f003f2ddf40  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@299 (line 1055)

  0x00007f003f2ddf2b: mov    rdi,rdx
  0x00007f003f2ddf2e: mov    eax,0x2
  0x00007f003f2ddf33: mov    rcx,QWORD PTR [rsp+0x98]
  0x00007f003f2ddf3b: jmp    0x00007f003f2ddf72  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1060)

  0x00007f003f2ddf40: mov    rcx,QWORD PTR [rsp+0x98]
  0x00007f003f2ddf48: mov    r10,rcx
  0x00007f003f2ddf4b: shr    r10,0x3
  0x00007f003f2ddf4f: mov    DWORD PTR [rax+0x14],r10d
  0x00007f003f2ddf53: shr    rax,0x9
  0x00007f003f2ddf57: movabs rsi,0x7f003ae7c000
  0x00007f003f2ddf61: mov    BYTE PTR [rax+rsi*1],0x0
  0x00007f003f2ddf65: lock add DWORD PTR [rsp],0x0  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1056)

  0x00007f003f2ddf6a: mov    rdi,rdx
  0x00007f003f2ddf6d: mov    eax,0x2            ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1060)

  0x00007f003f2ddf72: mov    rbx,rax
  0x00007f003f2ddf75: lea    rax,[rsp+0xe0]
  0x00007f003f2ddf7d: mov    rsi,QWORD PTR [rax+0x8]
  0x00007f003f2ddf81: mov    rdx,QWORD PTR [rsi]
  0x00007f003f2ddf84: and    rdx,0x7
  0x00007f003f2ddf88: cmp    rdx,0x5
  0x00007f003f2ddf8c: je     0x00007f003f2ddfa9
  0x00007f003f2ddf92: mov    rdx,QWORD PTR [rax]
  0x00007f003f2ddf95: test   rdx,rdx
  0x00007f003f2ddf98: je     0x00007f003f2ddfa9
  0x00007f003f2ddf9e: lock cmpxchg QWORD PTR [rsi],rdx
  0x00007f003f2ddfa3: jne    0x00007f003f2de409  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@310 (line 1060)

  0x00007f003f2ddfa9: movabs rdx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2ddfb3: inc    DWORD PTR [rdx+0x828]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@311 (line 1060)

  0x00007f003f2ddfb9: cmp    ebx,0x0
  0x00007f003f2ddfbc: movabs rdx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2ddfc6: movabs rsi,0x840
  0x00007f003f2ddfd0: je     0x00007f003f2ddfe0
  0x00007f003f2ddfd6: movabs rsi,0x850
  0x00007f003f2ddfe0: mov    rax,QWORD PTR [rdx+rsi*1]
  0x00007f003f2ddfe4: lea    rax,[rax+0x1]
  0x00007f003f2ddfe8: mov    QWORD PTR [rdx+rsi*1],rax
  0x00007f003f2ddfec: jne    0x00007f003f2de062  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324 (line 1061)

  0x00007f003f2ddff2: mov    rax,QWORD PTR [rsp+0xc0]
  0x00007f003f2ddffa: mov    rsi,rbx            ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@350 (line 1069)

  0x00007f003f2ddffd: movabs rdx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2de007: mov    edi,DWORD PTR [rdx+0x100]
  0x00007f003f2de00d: add    edi,0x8
  0x00007f003f2de010: mov    DWORD PTR [rdx+0x100],edi
  0x00007f003f2de016: movabs rdx,0x7f0038948e58  ;   {metadata({method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2de020: and    edi,0xfff8
  0x00007f003f2de026: cmp    edi,0x0
  0x00007f003f2de029: je     0x00007f003f2de41f  ; OopMap{[136]=Oop [144]=Oop rcx=Oop [152]=Oop rax=Oop off=7503}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@350 (line 1069)

  0x00007f003f2de02f: test   DWORD PTR [rip+0x1b0e40cb],eax        # 0x00007f005a3c2100
                                                ;   {poll}
  0x00007f003f2de035: movabs rdx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2de03f: inc    DWORD PTR [rdx+0x8b0]
  0x00007f003f2de045: mov    rdx,rax
  0x00007f003f2de048: mov    rax,rsi
  0x00007f003f2de04b: mov    rbx,rdx
  0x00007f003f2de04e: mov    DWORD PTR [rsp+0xa4],eax
  0x00007f003f2de055: mov    rdi,QWORD PTR [rsp+0x88]
  0x00007f003f2de05d: jmp    0x00007f003f2dc658  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@350 (line 1069)

  0x00007f003f2de062: mov    rdx,QWORD PTR [rsp+0xc0]
  0x00007f003f2de06a: cmp    ebx,0x8
  0x00007f003f2de06d: movabs rcx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2de077: movabs rsi,0x860
  0x00007f003f2de081: jl     0x00007f003f2de091
  0x00007f003f2de087: movabs rsi,0x870
  0x00007f003f2de091: mov    rax,QWORD PTR [rcx+rsi*1]
  0x00007f003f2de095: lea    rax,[rax+0x1]
  0x00007f003f2de099: mov    QWORD PTR [rcx+rsi*1],rax
  0x00007f003f2de09d: jge    0x00007f003f2de0af  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@331 (line 1062)

  0x00007f003f2de0a3: mov    DWORD PTR [rsp+0xcc],ebx
  0x00007f003f2de0aa: jmp    0x00007f003f2de0fc  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@342 (line 1064)

  0x00007f003f2de0af: mov    QWORD PTR [rsp+0xd0],rdi
  0x00007f003f2de0b7: mov    DWORD PTR [rsp+0xcc],ebx
  0x00007f003f2de0be: mov    r9d,DWORD PTR [rsp+0xc8]
  0x00007f003f2de0c6: mov    rsi,QWORD PTR [rsp+0x88]
  0x00007f003f2de0ce: movabs rcx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2de0d8: add    QWORD PTR [rcx+0x880],0x1
  0x00007f003f2de0e0: mov    rcx,r9
  0x00007f003f2de0e3: mov    rsi,QWORD PTR [rsp+0x88]  ;*invokespecial treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@339 (line 1063)

  0x00007f003f2de0eb: nop
  0x00007f003f2de0ec: nop
  0x00007f003f2de0ed: nop
  0x00007f003f2de0ee: nop
  0x00007f003f2de0ef: call   0x00007f003f1c4d60  ; OopMap{[136]=Oop [208]=Oop off=7700}
                                                ;*invokespecial treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@339 (line 1063)
                                                ;   {optimized virtual_call}
  0x00007f003f2de0f4: mov    rdi,QWORD PTR [rsp+0xd0]
  0x00007f003f2de0fc: cmp    rdi,0x0
  0x00007f003f2de100: movabs rax,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2de10a: movabs rdx,0x890
  0x00007f003f2de114: je     0x00007f003f2de124
  0x00007f003f2de11a: movabs rdx,0x8a0
  0x00007f003f2de124: mov    rcx,QWORD PTR [rax+rdx*1]
  0x00007f003f2de128: lea    rcx,[rcx+0x1]
  0x00007f003f2de12c: mov    QWORD PTR [rax+rdx*1],rcx
  0x00007f003f2de130: jne    0x00007f003f2de142  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@344 (line 1064)

  0x00007f003f2de136: mov    eax,DWORD PTR [rsp+0xcc]
  0x00007f003f2de13d: jmp    0x00007f003f2de16b  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@353 (line 1070)

  0x00007f003f2de142: mov    rax,rdi
  0x00007f003f2de145: add    rsp,0x100
  0x00007f003f2de14c: pop    rbp
  0x00007f003f2de14d: test   DWORD PTR [rip+0x1b0e3fad],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2de153: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@349 (line 1065)

  0x00007f003f2de154: mov    eax,DWORD PTR [rsp+0xa4]
  0x00007f003f2de15b: movabs rdx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2de165: inc    DWORD PTR [rdx+0x300]  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@101 (line 1021)

  0x00007f003f2de16b: mov    rsi,QWORD PTR [rsp+0x88]
  0x00007f003f2de173: mov    rdx,rsi
  0x00007f003f2de176: movabs rcx,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2de180: add    QWORD PTR [rcx+0x8c8],0x1
  0x00007f003f2de188: movabs rdx,0x1
  0x00007f003f2de192: mov    rcx,rax            ;*invokespecial addCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357 (line 1070)

  0x00007f003f2de195: nop
  0x00007f003f2de196: nop
  0x00007f003f2de197: call   0x00007f003f1c4d60  ; OopMap{off=7868}
                                                ;*invokespecial addCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357 (line 1070)
                                                ;   {optimized virtual_call}
  0x00007f003f2de19c: movabs rax,0x0            ;   {oop(NULL)}
  0x00007f003f2de1a6: add    rsp,0x100
  0x00007f003f2de1ad: pop    rbp
  0x00007f003f2de1ae: test   DWORD PTR [rip+0x1b0e3f4c],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2de1b4: ret                       ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@361 (line 1071)

  0x00007f003f2de1b5: data16 xchg ax,ax
  0x00007f003f2de1b8: jmp    0x00007f003f2de445  ;   {no_reloc}
  0x00007f003f2de1bd: add    BYTE PTR [rax],al
  0x00007f003f2de1bf: add    BYTE PTR [rax],al
  0x00007f003f2de1c1: add    BYTE PTR [rcx-0x75],cl
  0x00007f003f2de1c4: rex.RXB (bad) 
  0x00007f003f2de1c6: lea    rdi,[rax+0x20]
  0x00007f003f2de1ca: cmp    rdi,QWORD PTR [r15+0x70]
  0x00007f003f2de1ce: ja     0x00007f003f2de44f
  0x00007f003f2de1d4: mov    QWORD PTR [r15+0x60],rdi
  0x00007f003f2de1d8: mov    rcx,QWORD PTR [rdx+0xa8]
  0x00007f003f2de1df: mov    QWORD PTR [rax],rcx
  0x00007f003f2de1e2: mov    rcx,rdx
  0x00007f003f2de1e5: shr    rcx,0x3
  0x00007f003f2de1e9: mov    DWORD PTR [rax+0x8],ecx
  0x00007f003f2de1ec: xor    rcx,rcx
  0x00007f003f2de1ef: mov    DWORD PTR [rax+0xc],ecx
  0x00007f003f2de1f2: xor    rcx,rcx
  0x00007f003f2de1f5: mov    QWORD PTR [rax+0x10],rcx
  0x00007f003f2de1f9: mov    QWORD PTR [rax+0x18],rcx  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)

  0x00007f003f2de1fd: mov    rsi,rax
  0x00007f003f2de200: movabs rdi,0x7f0038a8bdc0  ;   {metadata(method data for {method} {0x00007f0038948e58} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007f003f2de20a: add    QWORD PTR [rdi+0x170],0x1
  0x00007f003f2de212: mov    rsi,rax            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@12 (line 1011)

  0x00007f003f2de215: mov    QWORD PTR [rsp+0xd8],rax
  0x00007f003f2de21d: nop
  0x00007f003f2de21e: nop
  0x00007f003f2de21f: call   0x00007f003f1c4d60  ; OopMap{[216]=Oop off=8004}
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@12 (line 1011)
                                                ;   {optimized virtual_call}
  0x00007f003f2de224: mov    rax,QWORD PTR [rsp+0xd8]
  0x00007f003f2de22c: jmp    0x00007f003f2de49d  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@15 (line 1011)

  0x00007f003f2de231: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2de238: xor    r10,r10
  0x00007f003f2de23b: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2de242: xor    r10,r10
  0x00007f003f2de245: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2de24c: mov    rsi,rax
  0x00007f003f2de24f: lea    rax,[rsp+0xe0]
  0x00007f003f2de257: mov    rbx,QWORD PTR [rax+0x8]
  0x00007f003f2de25b: mov    rdi,QWORD PTR [rbx]
  0x00007f003f2de25e: and    rdi,0x7
  0x00007f003f2de262: cmp    rdi,0x5
  0x00007f003f2de266: je     0x00007f003f2de283
  0x00007f003f2de26c: mov    rdi,QWORD PTR [rax]
  0x00007f003f2de26f: test   rdi,rdi
  0x00007f003f2de272: je     0x00007f003f2de283
  0x00007f003f2de278: lock cmpxchg QWORD PTR [rbx],rdi
  0x00007f003f2de27d: jne    0x00007f003f2de45c  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@318 (line 1060)

  0x00007f003f2de283: mov    rax,rsi
  0x00007f003f2de286: jmp    0x00007f003f2de49d
  0x00007f003f2de28b: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2de290: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2de298: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop [136]=Oop rdx=Oop [144]=Oop rcx=Oop [152]=Oop off=8125}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@-1 (line 1011)
                                                ;   {runtime_call}
  0x00007f003f2de29d: jmp    0x00007f003f2dc361
  0x00007f003f2de2a2: call   0x00007f003f279000  ; OopMap{[152]=Oop [136]=Oop rdx=Oop [144]=Oop off=8135}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)
                                                ;   {runtime_call}
  0x00007f003f2de2a7: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2de2ac: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2de2b4: call   0x00007f003f27d5e0  ; OopMap{[136]=Oop [152]=Oop [144]=Oop off=8153}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 685)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@20 (line 1012)
                                                ;   {runtime_call}
  0x00007f003f2de2b9: jmp    0x00007f003f2dc620
  0x00007f003f2de2be: call   0x00007f003f279000  ; OopMap{rdi=Oop [136]=Oop [152]=Oop [144]=Oop rbx=Oop off=8163}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@41 (line 1016)
                                                ;   {runtime_call}
  0x00007f003f2de2c3: mov    QWORD PTR [rsp+0x8],rcx
  0x00007f003f2de2c8: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2de2d0: call   0x00007f003f27d5e0  ; OopMap{[152]=Oop [144]=Oop [136]=Oop rbx=Oop off=8181}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 755)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)
                                                ;   {runtime_call}
  0x00007f003f2de2d5: jmp    0x00007f003f2dc777
  0x00007f003f2de2da: mov    QWORD PTR [rsp],rdx
  0x00007f003f2de2de: call   0x00007f003f27b2c0  ; OopMap{[152]=Oop [144]=Oop [136]=Oop rbx=Oop off=8195}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)
                                                ;   {runtime_call}
  0x00007f003f2de2e3: mov    rdx,rdx
  0x00007f003f2de2e6: call   0x00007f003f279760  ; OopMap{[136]=Oop rbx=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop off=8203}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@83 (line 1019)
                                                ;   {runtime_call}
  0x00007f003f2de2eb: jmp    0x00007f003f2dca80
  0x00007f003f2de2f0: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2de2f5: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2de2fd: call   0x00007f003f27d5e0  ; OopMap{[136]=Oop rbx=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdx=Oop off=8226}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@-1 (line 625)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@92 (line 1019)
                                                ;   {runtime_call}
  0x00007f003f2de302: jmp    0x00007f003f2dcaca
  0x00007f003f2de307: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2de30c: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2de314: call   0x00007f003f27d5e0  ; OopMap{[136]=Oop rbx=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdx=Oop off=8249}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@1 (line 625)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@92 (line 1019)
                                                ;   {runtime_call}
  0x00007f003f2de319: jmp    0x00007f003f2dcb11
  0x00007f003f2de31e: mov    QWORD PTR [rsp+0x8],rax
  0x00007f003f2de323: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2de32b: call   0x00007f003f27d5e0  ; OopMap{[136]=Oop rbx=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdx=Oop off=8272}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@-1 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@95 (line 1019)
                                                ;   {runtime_call}
  0x00007f003f2de330: jmp    0x00007f003f2dcb94
  0x00007f003f2de335: call   0x00007f003f279000  ; OopMap{[136]=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdi=Oop [184]=Oop rbx=Oop off=8282}
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@106 (line 1023)
                                                ;   {runtime_call}
  0x00007f003f2de33a: mov    QWORD PTR [rsp+0x8],rdi
  0x00007f003f2de33f: mov    QWORD PTR [rsp],rdx
  0x00007f003f2de343: call   0x00007f003f27ba60  ; OopMap{[136]=Oop [152]=Oop [144]=Oop rbx=Oop rdi=Oop [184]=Oop [232]=Oop off=8296}
                                                ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@137 (line 1027)
                                                ;   {runtime_call}
  0x00007f003f2de348: jmp    0x00007f003f2dcd99
  0x00007f003f2de34d: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2de352: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2de35a: call   0x00007f003f27d5e0  ; OopMap{[136]=Oop [152]=Oop [144]=Oop rbx=Oop rdi=Oop [184]=Oop [232]=Oop off=8319}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 755)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@142 (line 1028)
                                                ;   {runtime_call}
  0x00007f003f2de35f: jmp    0x00007f003f2dcddd
  0x00007f003f2de364: mov    QWORD PTR [rsp],rdx
  0x00007f003f2de368: call   0x00007f003f27b2c0  ; OopMap{[136]=Oop [152]=Oop [144]=Oop rbx=Oop rdi=Oop [184]=Oop [232]=Oop off=8333}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@142 (line 1028)
                                                ;   {runtime_call}
  0x00007f003f2de36d: call   0x00007f003f279000  ; OopMap{[136]=Oop [152]=Oop rax=Oop rdx=Oop [144]=Oop [184]=Oop [192]=Oop [232]=Oop off=8338}
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@164 (line 1033)
                                                ;   {runtime_call}
  0x00007f003f2de372: mov    QWORD PTR [rsp+0x8],rsi
  0x00007f003f2de377: mov    QWORD PTR [rsp],0x100
  0x00007f003f2de37f: call   0x00007f003f27d5e0  ; OopMap{[136]=Oop [152]=Oop [144]=Oop [192]=Oop [184]=Oop rdx=Oop [232]=Oop off=8356}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@256 (line 1031)
                                                ;   {runtime_call}
  0x00007f003f2de384: jmp    0x00007f003f2dd482
  0x00007f003f2de389: mov    rdx,rdx
  0x00007f003f2de38c: call   0x00007f003f279760  ; OopMap{[136]=Oop [192]=Oop [184]=Oop r8=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop [232]=Oop off=8369}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@235 (line 1043)
                                                ;   {runtime_call}
  0x00007f003f2de391: jmp    0x00007f003f2dd5e7
  0x00007f003f2de396: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2de39b: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2de3a3: call   0x00007f003f27d5e0  ; OopMap{[136]=Oop [192]=Oop [184]=Oop r8=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rax=Oop [232]=Oop off=8392}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@-1 (line 625)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@244 (line 1043)
                                                ;   {runtime_call}
  0x00007f003f2de3a8: jmp    0x00007f003f2dd62e
  0x00007f003f2de3ad: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2de3b2: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2de3ba: call   0x00007f003f27d5e0  ; OopMap{[136]=Oop [192]=Oop [184]=Oop r8=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rax=Oop [232]=Oop off=8415}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@1 (line 625)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@244 (line 1043)
                                                ;   {runtime_call}
  0x00007f003f2de3bf: jmp    0x00007f003f2dd675
  0x00007f003f2de3c4: movabs rsi,0x0            ;   {metadata(NULL)}
  0x00007f003f2de3ce: mov    eax,0xa050f00
  0x00007f003f2de3d3: call   0x00007f003f27c5e0  ; OopMap{[136]=Oop [192]=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdi=Oop [184]=Oop [232]=Oop off=8440}
                                                ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@264 (line 1049)
                                                ;   {runtime_call}
  0x00007f003f2de3d8: jmp    0x00007f003f2dd758
  0x00007f003f2de3dd: movabs rbx,0x0            ;   {metadata(NULL)}
  0x00007f003f2de3e7: mov    eax,0xa050f00
  0x00007f003f2de3ec: call   0x00007f003f27c5e0  ; OopMap{[136]=Oop [192]=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdi=Oop [184]=Oop [232]=Oop off=8465}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@275 (line 1052)
                                                ;   {runtime_call}
  0x00007f003f2de3f1: jmp    0x00007f003f2dda28
  0x00007f003f2de3f6: mov    QWORD PTR [rsp],rdi
  0x00007f003f2de3fa: call   0x00007f003f27b2c0  ; OopMap{[136]=Oop [192]=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdi=Oop [184]=Oop [232]=Oop off=8479}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@275 (line 1052)
                                                ;   {runtime_call}
  0x00007f003f2de3ff: call   0x00007f003f279000  ; OopMap{[136]=Oop [192]=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdi=Oop [184]=Oop rsi=Oop [232]=Oop off=8484}
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@282 (line 1052)
                                                ;   {runtime_call}
  0x00007f003f2de404: call   0x00007f003f279000  ; OopMap{[136]=Oop [192]=Oop [152]=Oop [144]=Oop rdi=Oop [184]=Oop rax=Oop [232]=Oop off=8489}
                                                ;*getfield val {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1054)
                                                ;   {runtime_call}
  0x00007f003f2de409: lea    rax,[rsp+0xe0]
  0x00007f003f2de411: mov    QWORD PTR [rsp],rax
  0x00007f003f2de415: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2de41a: jmp    0x00007f003f2ddfa9
  0x00007f003f2de41f: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2de424: mov    QWORD PTR [rsp],0x15e
  0x00007f003f2de42c: call   0x00007f003f27d5e0  ; OopMap{[136]=Oop [144]=Oop rcx=Oop [152]=Oop rax=Oop off=8529}
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@350 (line 1069)
                                                ;   {runtime_call}
  0x00007f003f2de431: jmp    0x00007f003f2de02f
  0x00007f003f2de436: movabs rdx,0x0            ;   {metadata(NULL)}
  0x00007f003f2de440: mov    eax,0xa050f00
  0x00007f003f2de445: call   0x00007f003f27c5e0  ; OopMap{off=8554}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)
                                                ;   {runtime_call}
  0x00007f003f2de44a: jmp    0x00007f003f2de1b8
  0x00007f003f2de44f: mov    rdx,rdx
  0x00007f003f2de452: call   0x00007f003f279760  ; OopMap{off=8567}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)
                                                ;   {runtime_call}
  0x00007f003f2de457: jmp    0x00007f003f2de1fd
  0x00007f003f2de45c: lea    rax,[rsp+0xe0]
  0x00007f003f2de464: mov    QWORD PTR [rsp],rax
  0x00007f003f2de468: call   0x00007f003f27be20  ;   {runtime_call}
  0x00007f003f2de46d: jmp    0x00007f003f2de283
  0x00007f003f2de472: nop
  0x00007f003f2de473: nop
  0x00007f003f2de474: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2de47b: movabs r10,0x0
  0x00007f003f2de485: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2de48c: movabs r10,0x0
  0x00007f003f2de496: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2de49d: add    rsp,0x100
  0x00007f003f2de4a4: pop    rbp
  0x00007f003f2de4a5: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2de4aa: hlt    
  0x00007f003f2de4ab: hlt    
  0x00007f003f2de4ac: hlt    
  0x00007f003f2de4ad: hlt    
  0x00007f003f2de4ae: hlt    
  0x00007f003f2de4af: hlt    
  0x00007f003f2de4b0: hlt    
  0x00007f003f2de4b1: hlt    
  0x00007f003f2de4b2: hlt    
  0x00007f003f2de4b3: hlt    
  0x00007f003f2de4b4: hlt    
  0x00007f003f2de4b5: hlt    
  0x00007f003f2de4b6: hlt    
  0x00007f003f2de4b7: hlt    
  0x00007f003f2de4b8: hlt    
  0x00007f003f2de4b9: hlt    
  0x00007f003f2de4ba: hlt    
  0x00007f003f2de4bb: hlt    
  0x00007f003f2de4bc: hlt    
  0x00007f003f2de4bd: hlt    
  0x00007f003f2de4be: hlt    
  0x00007f003f2de4bf: hlt    
[Stub Code]
  0x00007f003f2de4c0: nop                       ;   {no_reloc}
  0x00007f003f2de4c1: nop
  0x00007f003f2de4c2: nop
  0x00007f003f2de4c3: nop
  0x00007f003f2de4c4: nop
  0x00007f003f2de4c5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2de4cf: jmp    0x00007f003f2de4cf  ;   {runtime_call}
  0x00007f003f2de4d4: nop
  0x00007f003f2de4d5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2de4df: jmp    0x00007f003f2de4df  ;   {runtime_call}
  0x00007f003f2de4e4: nop
  0x00007f003f2de4e5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2de4ef: jmp    0x00007f003f2de4ef  ;   {runtime_call}
  0x00007f003f2de4f4: nop
  0x00007f003f2de4f5: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2de4ff: jmp    0x00007f003f2de4ff  ;   {runtime_call}
  0x00007f003f2de504: nop
  0x00007f003f2de505: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2de50f: jmp    0x00007f003f2de50f  ;   {runtime_call}
  0x00007f003f2de514: nop
  0x00007f003f2de515: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2de51f: jmp    0x00007f003f2de51f  ;   {runtime_call}
  0x00007f003f2de524: nop
  0x00007f003f2de525: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2de52f: jmp    0x00007f003f2de52f  ;   {runtime_call}
  0x00007f003f2de534: nop
  0x00007f003f2de535: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2de53f: jmp    0x00007f003f2de53f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2de544: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2de549: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2de54e: sub    rsp,0x80
  0x00007f003f2de555: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2de55a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2de55f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2de564: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2de569: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2de56e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2de573: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2de578: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2de57d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2de582: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2de587: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2de58c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2de591: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2de596: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2de59b: mov    QWORD PTR [rsp],r15
  0x00007f003f2de59f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2de5a9: movabs rsi,0x7f003f2de549  ;   {internal_word}
  0x00007f003f2de5b3: mov    rdx,rsp
  0x00007f003f2de5b6: and    rsp,0xfffffffffffffff0
  0x00007f003f2de5ba: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2de5bf: hlt    
[Deopt Handler Code]
  0x00007f003f2de5c0: movabs r10,0x7f003f2de5c0  ;   {section_word}
  0x00007f003f2de5ca: push   r10
  0x00007f003f2de5cc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2de5d1: hlt    
  0x00007f003f2de5d2: hlt    
  0x00007f003f2de5d3: hlt    
  0x00007f003f2de5d4: hlt    
  0x00007f003f2de5d5: hlt    
  0x00007f003f2de5d6: hlt    
  0x00007f003f2de5d7: hlt    
<nmethod compile_id='158' compiler='C1' level='3' entry='0x00007f003f2dc2e0' size='13608' address='0x00007f003f2dc010' relocation_offset='312' insts_offset='720' stub_offset='9392' scopes_data_offset='9728' scopes_pcs_offset='11384' dependencies_offset='13304' handler_table_offset='13312' nul_chk_table_offset='13552' metadata_offset='9672' method='java/util/concurrent/ConcurrentHashMap putVal (Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' bytes='362' count='649' backedge_count='60' iicount='649' stamp='0.693'/>
<writer thread='139639490488064'/>
[Loaded java.lang.Shutdown$Lock from /home/marschall/bin/java/graalvm-0.26/jre/lib/rt.jar]
<writer thread='139637819586304'/>
[Loaded jdk.vm.ci.hotspot.HotSpotSignature from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/Enum.ordinal  [0x00007f003f2df6c0, 0x00007f003f2df7d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038900298} &apos;ordinal&apos; &apos;()I&apos; in &apos;java/lang/Enum&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2df6c0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2df6c4: shl    r10,0x3
  0x00007f003f2df6c8: cmp    r10,rax
  0x00007f003f2df6cb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2df6d1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2df6dc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2df6e0: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2df6e7: push   rbp
  0x00007f003f2df6e8: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Enum::ordinal@0 (line 103)

  0x00007f003f2df6ec: mov    eax,DWORD PTR [rsi+0xc]  ;*getfield ordinal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Enum::ordinal@1 (line 103)

  0x00007f003f2df6ef: add    rsp,0x30
  0x00007f003f2df6f3: pop    rbp
  0x00007f003f2df6f4: test   DWORD PTR [rip+0x1b0e2a06],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2df6fa: ret    
  0x00007f003f2df6fb: nop
  0x00007f003f2df6fc: nop
  0x00007f003f2df6fd: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2df704: movabs r10,0x0
  0x00007f003f2df70e: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2df715: movabs r10,0x0
  0x00007f003f2df71f: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2df726: add    rsp,0x30
  0x00007f003f2df72a: pop    rbp
  0x00007f003f2df72b: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2df730: hlt    
  0x00007f003f2df731: hlt    
  0x00007f003f2df732: hlt    
  0x00007f003f2df733: hlt    
  0x00007f003f2df734: hlt    
  0x00007f003f2df735: hlt    
  0x00007f003f2df736: hlt    
  0x00007f003f2df737: hlt    
  0x00007f003f2df738: hlt    
  0x00007f003f2df739: hlt    
<writer thread='139639490488064'/>
[Loaded jdk.vm.ci.hotspot.HotSpotVMEventListener from file:/home/marschall/bin/java/graalvm-0.26/jre/lib/jvmci/jvmci-hotspot.jar]
<writer thread='139637817480960'/>
  0x00007f003f2df73a: hlt    
  0x00007f003f2df73b: hlt    
  0x00007f003f2df73c: hlt    
  0x00007f003f2df73d: hlt    
  0x00007f003f2df73e: hlt    
  0x00007f003f2df73f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2df740: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2df745: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2df74a: sub    rsp,0x80
  0x00007f003f2df751: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2df756: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2df75b: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2df760: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2df765: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2df76a: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2df76f: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2df774: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2df779: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2df77e: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2df783: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2df788: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2df78d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2df792: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2df797: mov    QWORD PTR [rsp],r15
  0x00007f003f2df79b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2df7a5: movabs rsi,0x7f003f2df745  ;   {internal_word}
  0x00007f003f2df7af: mov    rdx,rsp
  0x00007f003f2df7b2: and    rsp,0xfffffffffffffff0
  0x00007f003f2df7b6: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2df7bb: hlt    
[Deopt Handler Code]
  0x00007f003f2df7bc: movabs r10,0x7f003f2df7bc  ;   {section_word}
  0x00007f003f2df7c6: push   r10
  0x00007f003f2df7c8: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2df7cd: hlt    
  0x00007f003f2df7ce: hlt    
  0x00007f003f2df7cf: hlt    
<nmethod compile_id='156' compiler='C1' level='1' entry='0x00007f003f2df6c0' size='736' address='0x00007f003f2df550' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/lang/Enum ordinal ()I' bytes='5' count='402' iicount='402' stamp='0.693'/>
----------------------------------------------------------------------
java/lang/String.equalsIgnoreCase  [0x00007f003f2df9e0, 0x00007f003f2dfcc8]  744 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f003876b518} &apos;equalsIgnoreCase&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f003f2df9e0: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2df9e4: shl    r10,0x3
  0x00007f003f2df9e8: cmp    r10,rax
  0x00007f003f2df9eb: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2df9f1: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2df9fc: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2dfa00: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2dfa07: push   rbp
  0x00007f003f2dfa08: sub    rsp,0x40
  0x00007f003f2dfa0c: mov    r8,rdx
  0x00007f003f2dfa0f: movabs rdx,0x7f0038a8c6f8  ;   {metadata(method data for {method} {0x00007f003876b518} &apos;equalsIgnoreCase&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2dfa19: mov    ecx,DWORD PTR [rdx+0xfc]
  0x00007f003f2dfa1f: add    ecx,0x8
  0x00007f003f2dfa22: mov    DWORD PTR [rdx+0xfc],ecx
  0x00007f003f2dfa28: movabs rdx,0x7f003876b518  ;   {metadata({method} {0x00007f003876b518} &apos;equalsIgnoreCase&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2dfa32: and    ecx,0x1ff8
  0x00007f003f2dfa38: cmp    ecx,0x0
  0x00007f003f2dfa3b: je     0x00007f003f2dfbad  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@0 (line 1106)

  0x00007f003f2dfa41: cmp    rsi,r8
  0x00007f003f2dfa44: movabs rdx,0x7f0038a8c6f8  ;   {metadata(method data for {method} {0x00007f003876b518} &apos;equalsIgnoreCase&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2dfa4e: movabs rcx,0x130
  0x00007f003f2dfa58: jne    0x00007f003f2dfa68
  0x00007f003f2dfa5e: movabs rcx,0x140
  0x00007f003f2dfa68: mov    r9,QWORD PTR [rdx+rcx*1]
  0x00007f003f2dfa6c: lea    r9,[r9+0x1]
  0x00007f003f2dfa70: mov    QWORD PTR [rdx+rcx*1],r9
  0x00007f003f2dfa74: je     0x00007f003f2dfb89  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@2 (line 1106)

  0x00007f003f2dfa7a: cmp    r8,0x0
  0x00007f003f2dfa7e: movabs rdx,0x7f0038a8c6f8  ;   {metadata(method data for {method} {0x00007f003876b518} &apos;equalsIgnoreCase&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2dfa88: movabs rcx,0x168
  0x00007f003f2dfa92: je     0x00007f003f2dfaa2
  0x00007f003f2dfa98: movabs rcx,0x178
  0x00007f003f2dfaa2: mov    r9,QWORD PTR [rdx+rcx*1]
  0x00007f003f2dfaa6: lea    r9,[r9+0x1]
  0x00007f003f2dfaaa: mov    QWORD PTR [rdx+rcx*1],r9
  0x00007f003f2dfaae: je     0x00007f003f2dfb65  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@10 (line 1106)

  0x00007f003f2dfab4: mov    edx,DWORD PTR [r8+0xc]  ; implicit exception: dispatches to 0x00007f003f2dfbc4
  0x00007f003f2dfab8: shl    rdx,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@14 (line 1106)

  0x00007f003f2dfabc: mov    edx,DWORD PTR [rdx+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@17 (line 1106)
                                                ; implicit exception: dispatches to 0x00007f003f2dfbc9
  0x00007f003f2dfabf: mov    ecx,DWORD PTR [rsi+0xc]
  0x00007f003f2dfac2: shl    rcx,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@19 (line 1106)

  0x00007f003f2dfac6: mov    edi,DWORD PTR [rcx+0xc]  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@22 (line 1106)
                                                ; implicit exception: dispatches to 0x00007f003f2dfbce
  0x00007f003f2dfac9: cmp    edx,edi
  0x00007f003f2dfacb: movabs rdx,0x7f0038a8c6f8  ;   {metadata(method data for {method} {0x00007f003876b518} &apos;equalsIgnoreCase&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2dfad5: movabs rcx,0x188
  0x00007f003f2dfadf: jne    0x00007f003f2dfaef
  0x00007f003f2dfae5: movabs rcx,0x198
  0x00007f003f2dfaef: mov    r9,QWORD PTR [rdx+rcx*1]
  0x00007f003f2dfaf3: lea    r9,[r9+0x1]
  0x00007f003f2dfaf7: mov    QWORD PTR [rdx+rcx*1],r9
  0x00007f003f2dfafb: jne    0x00007f003f2dfb65  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@23 (line 1106)

  0x00007f003f2dfb01: mov    rdx,rsi
  0x00007f003f2dfb04: movabs rcx,0x7f0038a8c6f8  ;   {metadata(method data for {method} {0x00007f003876b518} &apos;equalsIgnoreCase&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2dfb0e: add    QWORD PTR [rcx+0x1a8],0x1
  0x00007f003f2dfb16: mov    edx,0x1
  0x00007f003f2dfb1b: mov    ecx,0x0
  0x00007f003f2dfb20: mov    r9d,0x0            ;*invokevirtual regionMatches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@36 (line 1109)

  0x00007f003f2dfb26: nop
  0x00007f003f2dfb27: call   0x00007f003f1c4d60  ; OopMap{off=332}
                                                ;*invokevirtual regionMatches {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@36 (line 1109)
                                                ;   {optimized virtual_call}
  0x00007f003f2dfb2c: cmp    eax,0x0
  0x00007f003f2dfb2f: movabs rax,0x7f0038a8c6f8  ;   {metadata(method data for {method} {0x00007f003876b518} &apos;equalsIgnoreCase&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2dfb39: movabs rsi,0x240
  0x00007f003f2dfb43: je     0x00007f003f2dfb53
  0x00007f003f2dfb49: movabs rsi,0x250
  0x00007f003f2dfb53: mov    rdi,QWORD PTR [rax+rsi*1]
  0x00007f003f2dfb57: lea    rdi,[rdi+0x1]
  0x00007f003f2dfb5b: mov    QWORD PTR [rax+rsi*1],rdi
  0x00007f003f2dfb5f: jne    0x00007f003f2dfb6f  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@39 (line 1109)

  0x00007f003f2dfb65: mov    eax,0x0
  0x00007f003f2dfb6a: jmp    0x00007f003f2dfb9e  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@47 (line 1106)

  0x00007f003f2dfb6f: movabs rax,0x7f0038a8c6f8  ;   {metadata(method data for {method} {0x00007f003876b518} &apos;equalsIgnoreCase&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2dfb79: inc    DWORD PTR [rax+0x260]
  0x00007f003f2dfb7f: mov    eax,0x1
  0x00007f003f2dfb84: jmp    0x00007f003f2dfb9e  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@43 (line 1109)

  0x00007f003f2dfb89: movabs rax,0x7f0038a8c6f8  ;   {metadata(method data for {method} {0x00007f003876b518} &apos;equalsIgnoreCase&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f003f2dfb93: inc    DWORD PTR [rax+0x150]
  0x00007f003f2dfb99: mov    eax,0x1            ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@6 (line 1106)

  0x00007f003f2dfb9e: and    eax,0x1
  0x00007f003f2dfba1: add    rsp,0x40
  0x00007f003f2dfba5: pop    rbp
  0x00007f003f2dfba6: test   DWORD PTR [rip+0x1b0e2554],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2dfbac: ret    
  0x00007f003f2dfbad: mov    QWORD PTR [rsp+0x8],rdx
  0x00007f003f2dfbb2: mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f003f2dfbba: call   0x00007f003f27d5e0  ; OopMap{rsi=Oop r8=Oop off=479}
                                                ;*synchronization entry
                                                ; - java.lang.String::equalsIgnoreCase@-1 (line 1106)
                                                ;   {runtime_call}
  0x00007f003f2dfbbf: jmp    0x00007f003f2dfa41
  0x00007f003f2dfbc4: call   0x00007f003f279000  ; OopMap{r8=Oop rsi=Oop off=489}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@14 (line 1106)
                                                ;   {runtime_call}
  0x00007f003f2dfbc9: call   0x00007f003f279000  ; OopMap{r8=Oop rsi=Oop off=494}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@17 (line 1106)
                                                ;   {runtime_call}
  0x00007f003f2dfbce: call   0x00007f003f279000  ; OopMap{r8=Oop rsi=Oop off=499}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equalsIgnoreCase@22 (line 1106)
                                                ;   {runtime_call}
  0x00007f003f2dfbd3: nop
  0x00007f003f2dfbd4: nop
  0x00007f003f2dfbd5: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2dfbdc: movabs r10,0x0
  0x00007f003f2dfbe6: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2dfbed: movabs r10,0x0
  0x00007f003f2dfbf7: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2dfbfe: add    rsp,0x40
  0x00007f003f2dfc02: pop    rbp
  0x00007f003f2dfc03: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2dfc08: hlt    
  0x00007f003f2dfc09: hlt    
  0x00007f003f2dfc0a: hlt    
  0x00007f003f2dfc0b: hlt    
  0x00007f003f2dfc0c: hlt    
  0x00007f003f2dfc0d: hlt    
  0x00007f003f2dfc0e: hlt    
  0x00007f003f2dfc0f: hlt    
  0x00007f003f2dfc10: hlt    
  0x00007f003f2dfc11: hlt    
  0x00007f003f2dfc12: hlt    
  0x00007f003f2dfc13: hlt    
  0x00007f003f2dfc14: hlt    
  0x00007f003f2dfc15: hlt    
  0x00007f003f2dfc16: hlt    
  0x00007f003f2dfc17: hlt    
  0x00007f003f2dfc18: hlt    
  0x00007f003f2dfc19: hlt    
  0x00007f003f2dfc1a: hlt    
  0x00007f003f2dfc1b: hlt    
  0x00007f003f2dfc1c: hlt    
  0x00007f003f2dfc1d: hlt    
  0x00007f003f2dfc1e: hlt    
  0x00007f003f2dfc1f: hlt    
[Stub Code]
  0x00007f003f2dfc20: nop                       ;   {no_reloc}
  0x00007f003f2dfc21: nop
  0x00007f003f2dfc22: nop
  0x00007f003f2dfc23: nop
  0x00007f003f2dfc24: nop
  0x00007f003f2dfc25: movabs rbx,0x0            ;   {static_stub}
  0x00007f003f2dfc2f: jmp    0x00007f003f2dfc2f  ;   {runtime_call}
[Exception Handler]
  0x00007f003f2dfc34: call   0x00007f003f27af60  ;   {runtime_call}
  0x00007f003f2dfc39: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2dfc3e: sub    rsp,0x80
  0x00007f003f2dfc45: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2dfc4a: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2dfc4f: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2dfc54: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2dfc59: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2dfc5e: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2dfc63: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2dfc68: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2dfc6d: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2dfc72: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2dfc77: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2dfc7c: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2dfc81: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2dfc86: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2dfc8b: mov    QWORD PTR [rsp],r15
  0x00007f003f2dfc8f: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2dfc99: movabs rsi,0x7f003f2dfc39  ;   {internal_word}
  0x00007f003f2dfca3: mov    rdx,rsp
  0x00007f003f2dfca6: and    rsp,0xfffffffffffffff0
  0x00007f003f2dfcaa: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2dfcaf: hlt    
[Deopt Handler Code]
  0x00007f003f2dfcb0: movabs r10,0x7f003f2dfcb0  ;   {section_word}
  0x00007f003f2dfcba: push   r10
  0x00007f003f2dfcbc: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2dfcc1: hlt    
  0x00007f003f2dfcc2: hlt    
  0x00007f003f2dfcc3: hlt    
  0x00007f003f2dfcc4: hlt    
  0x00007f003f2dfcc5: hlt    
  0x00007f003f2dfcc6: hlt    
  0x00007f003f2dfcc7: hlt    
<nmethod compile_id='157' compiler='C1' level='3' entry='0x00007f003f2df9e0' size='1640' address='0x00007f003f2df850' relocation_offset='312' insts_offset='400' stub_offset='976' scopes_data_offset='1152' scopes_pcs_offset='1280' dependencies_offset='1600' nul_chk_table_offset='1608' metadata_offset='1144' method='java/lang/String equalsIgnoreCase (Ljava/lang/String;)Z' bytes='48' count='660' iicount='660' stamp='0.694'/>
<writer thread='139639490488064'/>
<task_queued compile_id='161' method='java/nio/Buffer position ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.694' comment='tiered' hot_count='128'/>
<task_queued compile_id='162' method='java/lang/Character codePointAtImpl ([CII)I' bytes='41' count='256' iicount='256' level='3' stamp='0.694' comment='tiered' hot_count='256'/>
<writer thread='139637817480960'/>
----------------------------------------------------------------------
java/lang/Class.getClassLoader0  [0x00007f003f2e0040, 0x00007f003f2e0150]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f0038774a50} &apos;getClassLoader0&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/Class&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f003f2e0040: mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f003f2e0044: shl    r10,0x3
  0x00007f003f2e0048: cmp    r10,rax
  0x00007f003f2e004b: jne    0x00007f003f1c4b60  ;   {runtime_call}
  0x00007f003f2e0051: data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f003f2e005c: data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f003f2e0060: mov    DWORD PTR [rsp-0x14000],eax
  0x00007f003f2e0067: push   rbp
  0x00007f003f2e0068: sub    rsp,0x30           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::getClassLoader0@0 (line 689)

  0x00007f003f2e006c: 
<writer thread='139637828175616'/>
<destroy_vm stamp='0.694'/>
<writer thread='139637817480960'/>
mov    eax,DWORD PTR [rsi+0x18]
  0x00007f003f2e006f: shl    rax,0x3            ;*getfield classLoader {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::getClassLoader0@1 (line 689)

  0x00007f003f2e0073: add    rsp,0x30
  0x00007f003f2e0077: pop    rbp
  0x00007f003f2e0078: test   DWORD PTR [rip+0x1b0e2082],eax        # 0x00007f005a3c2100
                                                ;   {poll_return}
  0x00007f003f2e007e: ret    
  0x00007f003f2e007f: nop
  0x00007f003f2e0080: nop
  0x00007f003f2e0081: mov    rax,QWORD PTR [r15+0x2c0]
  0x00007f003f2e0088: movabs r10,0x0
  0x00007f003f2e0092: mov    QWORD PTR [r15+0x2c0],r10
  0x00007f003f2e0099: movabs r10,0x0
  0x00007f003f2e00a3: mov    QWORD PTR [r15+0x2c8],r10
  0x00007f003f2e00aa: add    rsp,0x30
  0x00007f003f2e00ae: pop    rbp
  0x00007f003f2e00af: jmp    0x00007f003f2785a0  ;   {runtime_call}
  0x00007f003f2e00b4: hlt    
  0x00007f003f2e00b5: hlt    
  0x00007f003f2e00b6: hlt    
  0x00007f003f2e00b7: hlt    
  0x00007f003f2e00b8: hlt    
  0x00007f003f2e00b9: hlt    
  0x00007f003f2e00ba: hlt    
  0x00007f003f2e00bb: hlt    
  0x00007f003f2e00bc: hlt    
  0x00007f003f2e00bd: hlt    
  0x00007f003f2e00be: hlt    
  0x00007f003f2e00bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007f003f2e00c0: call   0x00007f003f27af60  ;   {no_reloc}
  0x00007f003f2e00c5: mov    QWORD PTR [rsp-0x28],rsp
  0x00007f003f2e00ca: sub    rsp,0x80
  0x00007f003f2e00d1: mov    QWORD PTR [rsp+0x78],rax
  0x00007f003f2e00d6: mov    QWORD PTR [rsp+0x70],rcx
  0x00007f003f2e00db: mov    QWORD PTR [rsp+0x68],rdx
  0x00007f003f2e00e0: mov    QWORD PTR [rsp+0x60],rbx
  0x00007f003f2e00e5: mov    QWORD PTR [rsp+0x50],rbp
  0x00007f003f2e00ea: mov    QWORD PTR [rsp+0x48],rsi
  0x00007f003f2e00ef: mov    QWORD PTR [rsp+0x40],rdi
  0x00007f003f2e00f4: mov    QWORD PTR [rsp+0x38],r8
  0x00007f003f2e00f9: mov    QWORD PTR [rsp+0x30],r9
  0x00007f003f2e00fe: mov    QWORD PTR [rsp+0x28],r10
  0x00007f003f2e0103: mov    QWORD PTR [rsp+0x20],r11
  0x00007f003f2e0108: mov    QWORD PTR [rsp+0x18],r12
  0x00007f003f2e010d: mov    QWORD PTR [rsp+0x10],r13
  0x00007f003f2e0112: mov    QWORD PTR [rsp+0x8],r14
  0x00007f003f2e0117: mov    QWORD PTR [rsp],r15
  0x00007f003f2e011b: movabs rdi,0x7f0059094326  ;   {external_word}
  0x00007f003f2e0125: movabs rsi,0x7f003f2e00c5  ;   {internal_word}
  0x00007f003f2e012f: mov    rdx,rsp
  0x00007f003f2e0132: and    rsp,0xfffffffffffffff0
  0x00007f003f2e0136: call   0x00007f0058dc0030  ;   {runtime_call}
  0x00007f003f2e013b: hlt    
[Deopt Handler Code]
  0x00007f003f2e013c: movabs r10,0x7f003f2e013c  ;   {section_word}
  0x00007f003f2e0146: push   r10
  0x00007f003f2e0148: jmp    0x00007f003f1c6100  ;   {runtime_call}
  0x00007f003f2e014d: hlt    
  0x00007f003f2e014e: hlt    
  0x00007f003f2e014f: hlt    
<nmethod compile_id='160' compiler='C1' level='1' entry='0x00007f003f2e0040' size='736' address='0x00007f003f2dfed0' relocation_offset='312' insts_offset='368' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' metadata_offset='640' method='java/lang/Class getClassLoader0 ()Ljava/lang/ClassLoader;' bytes='5' count='130' iicount='130' stamp='0.695'/>
<tty_done stamp='0.695'/>
</tty>
<compilation_log thread='139637817480960'>
<start_compile_thread name='C1 CompilerThread3' thread='139637817480960' process='10274' stamp='0.044'/>
<task compile_id='1' method='java/lang/String hashCode ()I' bytes='55' count='420' backedge_count='6307' iicount='420' level='3' stamp='0.045'>
<phase name='buildIR' stamp='0.045'>
<type id='789' name='int'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='hashCode' return='789' flags='1' bytes='55' iicount='420'/>
<parse method='899'  stamp='0.045'>
<parse_done stamp='0.045'/>
</parse>
<phase name='optimize_blocks' stamp='0.045'>
<phase_done name='optimize_blocks' stamp='0.045'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.045'>
<phase_done name='rangeCheckElimination' stamp='0.045'/>
</phase>
<phase name='optimize_null_checks' stamp='0.045'>
<phase_done name='optimize_null_checks' stamp='0.045'/>
</phase>
<phase_done name='buildIR' stamp='0.045'/>
</phase>
<phase name='emit_lir' stamp='0.045'>
<phase name='lirGeneration' stamp='0.045'>
<phase_done name='lirGeneration' stamp='0.045'/>
</phase>
<phase name='linearScan' stamp='0.045'>
<phase_done name='linearScan' stamp='0.045'/>
</phase>
<phase_done name='emit_lir' stamp='0.045'/>
</phase>
<phase name='codeemit' stamp='0.045'>
<phase_done name='codeemit' stamp='0.045'/>
</phase>
<phase name='codeinstall' stamp='0.045'>
<phase_done name='codeinstall' stamp='0.054'/>
</phase>
<code_cache total_blobs='205' nmethods='1' adapters='135' free_code_cache='334454144'/>
<task_done success='1' nmsize='656' count='435' backedge_count='6567' stamp='0.054'/>
</task>
<task compile_id='2' method='java/lang/String length ()I' bytes='6' count='386' iicount='386' level='3' stamp='0.054'>
<phase name='buildIR' stamp='0.054'>
<type id='789' name='int'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='length' return='789' flags='1' bytes='6' iicount='386'/>
<parse method='899'  stamp='0.054'>
<parse_done stamp='0.054'/>
</parse>
<phase name='optimize_blocks' stamp='0.054'>
<phase_done name='optimize_blocks' stamp='0.054'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.054'>
<phase_done name='rangeCheckElimination' stamp='0.054'/>
</phase>
<phase name='optimize_null_checks' stamp='0.054'>
<phase_done name='optimize_null_checks' stamp='0.054'/>
</phase>
<phase_done name='buildIR' stamp='0.054'/>
</phase>
<phase name='emit_lir' stamp='0.054'>
<phase name='lirGeneration' stamp='0.054'>
<phase_done name='lirGeneration' stamp='0.054'/>
</phase>
<phase name='linearScan' stamp='0.054'>
<phase_done name='linearScan' stamp='0.054'/>
</phase>
<phase_done name='emit_lir' stamp='0.054'/>
</phase>
<phase name='codeemit' stamp='0.054'>
<phase_done name='codeemit' stamp='0.054'/>
</phase>
<phase name='codeinstall' stamp='0.054'>
<phase_done name='codeinstall' stamp='0.055'/>
</phase>
<code_cache total_blobs='208' nmethods='2' adapters='137' free_code_cache='334452096'/>
<task_done success='1' nmsize='368' count='386' stamp='0.055'/>
</task>
<task compile_id='3' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='384' backedge_count='1323' iicount='384' level='3' stamp='0.056'>
<phase name='buildIR' stamp='0.056'>
<type id='783' name='boolean'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='equals' return='783' arguments='796' flags='1' bytes='81' iicount='384'/>
<parse method='899'  stamp='0.056'>
<parse_done stamp='0.056'/>
</parse>
<phase name='optimize_blocks' stamp='0.056'>
<phase_done name='optimize_blocks' stamp='0.056'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.056'>
<phase_done name='rangeCheckElimination' stamp='0.056'/>
</phase>
<phase name='optimize_null_checks' stamp='0.056'>
<phase_done name='optimize_null_checks' stamp='0.056'/>
</phase>
<phase_done name='buildIR' stamp='0.056'/>
</phase>
<phase name='emit_lir' stamp='0.056'>
<phase name='lirGeneration' stamp='0.056'>
<phase_done name='lirGeneration' stamp='0.056'/>
</phase>
<phase name='linearScan' stamp='0.056'>
<phase_done name='linearScan' stamp='0.056'/>
</phase>
<phase_done name='emit_lir' stamp='0.056'/>
</phase>
<phase name='codeemit' stamp='0.056'>
<phase_done name='codeemit' stamp='0.056'/>
</phase>
<phase name='codeinstall' stamp='0.056'>
<phase_done name='codeinstall' stamp='0.058'/>
</phase>
<code_cache total_blobs='211' nmethods='3' adapters='139' free_code_cache='334447744'/>
<task_done success='1' nmsize='2064' count='394' backedge_count='1323' stamp='0.058'/>
</task>
<task compile_id='6' method='java/lang/String indexOf (II)I' bytes='70' count='177' backedge_count='5830' iicount='177' level='3' stamp='0.058'>
<phase name='buildIR' stamp='0.058'>
<type id='789' name='int'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='indexOf' return='789' arguments='789 789' flags='1' bytes='70' iicount='177'/>
<parse method='899'  stamp='0.058'>
<bc code='183' bci='66'/>
<method id='901' holder='797' name='indexOfSupplementary' return='789' arguments='789 789' flags='2' bytes='71' iicount='1'/>
<call method='901' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.058'/>
</parse>
<phase name='optimize_blocks' stamp='0.058'>
<phase_done name='optimize_blocks' stamp='0.058'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.058'>
<phase_done name='rangeCheckElimination' stamp='0.058'/>
</phase>
<phase name='optimize_null_checks' stamp='0.058'>
<phase_done name='optimize_null_checks' stamp='0.058'/>
</phase>
<phase_done name='buildIR' stamp='0.058'/>
</phase>
<phase name='emit_lir' stamp='0.058'>
<phase name='lirGeneration' stamp='0.058'>
<phase_done name='lirGeneration' stamp='0.058'/>
</phase>
<phase name='linearScan' stamp='0.058'>
<phase_done name='linearScan' stamp='0.058'/>
</phase>
<phase_done name='emit_lir' stamp='0.058'/>
</phase>
<phase name='codeemit' stamp='0.058'>
<phase_done name='codeemit' stamp='0.058'/>
</phase>
<phase name='codeinstall' stamp='0.058'>
<phase_done name='codeinstall' stamp='0.060'/>
</phase>
<code_cache total_blobs='213' nmethods='5' adapters='139' free_code_cache='334444864'/>
<task_done success='1' nmsize='904' count='189' backedge_count='6397' stamp='0.060'/>
</task>
<task compile_id='5' method='java/lang/String charAt (I)C' bytes='29' count='2799' iicount='2799' level='3' stamp='0.060'>
<phase name='buildIR' stamp='0.060'>
<type id='784' name='char'/>
<type id='789' name='int'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='charAt' return='784' arguments='789' flags='1' bytes='29' iicount='2799'/>
<parse method='899'  stamp='0.060'>
<bc code='183' bci='18'/>
<type id='791' name='void'/>
<klass id='901' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='902' holder='901' name='&lt;init&gt;' return='791' arguments='789' unloaded='1'/>
<call method='902' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.060'/>
</parse>
<phase name='optimize_blocks' stamp='0.060'>
<phase_done name='optimize_blocks' stamp='0.060'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.060'>
<phase_done name='rangeCheckElimination' stamp='0.060'/>
</phase>
<phase name='optimize_null_checks' stamp='0.060'>
<phase_done name='optimize_null_checks' stamp='0.060'/>
</phase>
<phase_done name='buildIR' stamp='0.060'/>
</phase>
<phase name='emit_lir' stamp='0.060'>
<phase name='lirGeneration' stamp='0.060'>
<phase_done name='lirGeneration' stamp='0.060'/>
</phase>
<phase name='linearScan' stamp='0.060'>
<phase_done name='linearScan' stamp='0.060'/>
</phase>
<phase_done name='emit_lir' stamp='0.060'/>
</phase>
<phase name='codeemit' stamp='0.060'>
<phase_done name='codeemit' stamp='0.060'/>
</phase>
<phase name='codeinstall' stamp='0.060'>
<phase_done name='codeinstall' stamp='0.061'/>
</phase>
<code_cache total_blobs='214' nmethods='6' adapters='139' free_code_cache='334443392'/>
<task_done success='1' nmsize='616' count='2936' stamp='0.061'/>
</task>
<task compile_id='4' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1667' iicount='1667' level='3' stamp='0.061'>
<phase name='buildIR' stamp='0.061'>
<type id='791' name='void'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='899' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' iicount='1667'/>
<parse method='899'  stamp='0.061'>
<parse_done stamp='0.061'/>
</parse>
<phase name='optimize_blocks' stamp='0.061'>
<phase_done name='optimize_blocks' stamp='0.061'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.061'>
<phase_done name='rangeCheckElimination' stamp='0.061'/>
</phase>
<phase name='optimize_null_checks' stamp='0.061'>
<phase_done name='optimize_null_checks' stamp='0.061'/>
</phase>
<phase_done name='buildIR' stamp='0.061'/>
</phase>
<phase name='emit_lir' stamp='0.061'>
<phase name='lirGeneration' stamp='0.061'>
<phase_done name='lirGeneration' stamp='0.061'/>
</phase>
<phase name='linearScan' stamp='0.061'>
<phase_done name='linearScan' stamp='0.061'/>
</phase>
<phase_done name='emit_lir' stamp='0.061'/>
</phase>
<phase name='codeemit' stamp='0.061'>
<phase_done name='codeemit' stamp='0.061'/>
</phase>
<phase name='codeinstall' stamp='0.061'>
<phase_done name='codeinstall' stamp='0.061'/>
</phase>
<code_cache total_blobs='215' nmethods='7' adapters='139' free_code_cache='334442496'/>
<task_done success='1' nmsize='336' count='1669' stamp='0.061'/>
</task>
<task compile_id='7' method='java/lang/Math min (II)I' bytes='11' count='722' iicount='722' level='3' stamp='0.061'>
<phase name='buildIR' stamp='0.061'>
<type id='789' name='int'/>
<klass id='899' name='java/lang/Math' flags='17'/>
<method id='900' holder='899' name='min' return='789' arguments='789 789' flags='9' bytes='11' iicount='722'/>
<parse method='900'  stamp='0.061'>
<parse_done stamp='0.061'/>
</parse>
<phase name='optimize_blocks' stamp='0.061'>
<phase_done name='optimize_blocks' stamp='0.061'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.061'>
<phase_done name='rangeCheckElimination' stamp='0.061'/>
</phase>
<phase name='optimize_null_checks' stamp='0.061'>
<phase_done name='optimize_null_checks' stamp='0.062'/>
</phase>
<phase_done name='buildIR' stamp='0.062'/>
</phase>
<phase name='emit_lir' stamp='0.062'>
<phase name='lirGeneration' stamp='0.062'>
<phase_done name='lirGeneration' stamp='0.062'/>
</phase>
<phase name='linearScan' stamp='0.062'>
<phase_done name='linearScan' stamp='0.062'/>
</phase>
<phase_done name='emit_lir' stamp='0.062'/>
</phase>
<phase name='codeemit' stamp='0.062'>
<phase_done name='codeemit' stamp='0.062'/>
</phase>
<phase name='codeinstall' stamp='0.062'>
<phase_done name='codeinstall' stamp='0.062'/>
</phase>
<code_cache total_blobs='216' nmethods='8' adapters='139' free_code_cache='334441536'/>
<task_done success='1' nmsize='400' count='726' stamp='0.062'/>
</task>
<task compile_id='9' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='256' iicount='256' level='3' stamp='0.063'>
<phase name='buildIR' stamp='0.063'>
<type id='791' name='void'/>
<klass id='888' name='[C' flags='1041'/>
<type id='789' name='int'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='&lt;init&gt;' return='791' arguments='888 789 789' flags='1' bytes='82' iicount='256'/>
<parse method='899'  stamp='0.063'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='901' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='4' compiler='C1' level='3' iicount='1723'/>
<call method='901' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<parse_done stamp='0.063'/>
</parse>
<bc code='183' bci='13'/>
<klass id='903' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='904' holder='903' name='&lt;init&gt;' return='791' arguments='789' unloaded='1'/>
<call method='904' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='30'/>
<call method='904' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='65'/>
<call method='904' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='75'/>
<klass id='906' name='java/util/Arrays' flags='1'/>
<method id='907' holder='906' name='copyOfRange' return='888' arguments='888 789 789' flags='9' bytes='63' iicount='267'/>
<call method='907' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.063'/>
</parse>
<phase name='optimize_blocks' stamp='0.063'>
<phase_done name='optimize_blocks' stamp='0.063'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.063'>
<phase_done name='rangeCheckElimination' stamp='0.063'/>
</phase>
<phase name='optimize_null_checks' stamp='0.063'>
<phase_done name='optimize_null_checks' stamp='0.063'/>
</phase>
<phase_done name='buildIR' stamp='0.064'/>
</phase>
<phase name='emit_lir' stamp='0.064'>
<phase name='lirGeneration' stamp='0.064'>
<phase_done name='lirGeneration' stamp='0.064'/>
</phase>
<phase name='linearScan' stamp='0.064'>
<phase_done name='linearScan' stamp='0.064'/>
</phase>
<phase_done name='emit_lir' stamp='0.064'/>
</phase>
<phase name='codeemit' stamp='0.064'>
<phase_done name='codeemit' stamp='0.064'/>
</phase>
<phase name='codeinstall' stamp='0.064'>
<phase_done name='codeinstall' stamp='0.065'/>
</phase>
<code_cache total_blobs='221' nmethods='9' adapters='143' free_code_cache='334436608'/>
<task_done success='1' nmsize='1272' count='256' inlined_bytes='1' stamp='0.065'/>
</task>
<task compile_id='10' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='259' iicount='259' level='3' stamp='0.067'>
<phase name='buildIR' stamp='0.067'>
<klass id='860' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='860' name='append' return='860' arguments='797' flags='1' bytes='50' iicount='259'/>
<parse method='899'  stamp='0.067'>
<bc code='183' bci='5'/>
<method id='901' holder='860' name='appendNull' return='860' flags='2' bytes='56' iicount='1'/>
<call method='901' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<type id='789' name='int'/>
<method id='903' holder='797' name='length' return='789' flags='1' bytes='6' compile_id='2' compiler='C1' level='3' iicount='694'/>
<call method='903' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<parse_done stamp='0.067'/>
</parse>
<bc code='183' bci='21'/>
<type id='791' name='void'/>
<method id='905' holder='860' name='ensureCapacityInternal' return='791' arguments='789' flags='2' bytes='27' iicount='349'/>
<call method='905' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='905'>
<bc code='183' bci='17'/>
<method id='907' holder='860' name='newCapacity' return='789' arguments='789' flags='2' bytes='39' iicount='172'/>
<call method='907' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='888' name='[C' flags='1041'/>
<klass id='909' name='java/util/Arrays' flags='1'/>
<method id='910' holder='909' name='copyOf' return='888' arguments='888 789' flags='9' bytes='19' iicount='179'/>
<call method='910' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='910'>
<bc code='184' bci='11'/>
<klass id='912' name='java/lang/Math' flags='17'/>
<method id='913' holder='912' name='min' return='789' arguments='789 789' flags='9' bytes='11' compile_id='7' compiler='C1' level='3' iicount='841'/>
<call method='913' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='913'>
<parse_done stamp='0.067'/>
</parse>
<bc code='184' bci='14'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='915' holder='802' name='arraycopy' return='791' arguments='796 789 796 789 789' flags='265' bytes='0' compile_id='8' compile_kind='c2n' level='0' iicount='640'/>
<call method='915' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.067'/>
</parse>
<parse_done stamp='0.067'/>
</parse>
<bc code='182' bci='35'/>
<method id='917' holder='797' name='getChars' return='791' arguments='789 789 888 789' flags='1' bytes='62' iicount='262'/>
<call method='917' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.067'/>
</parse>
<phase name='optimize_blocks' stamp='0.067'>
<phase_done name='optimize_blocks' stamp='0.067'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.067'>
<phase_done name='rangeCheckElimination' stamp='0.067'/>
</phase>
<phase name='optimize_null_checks' stamp='0.067'>
<phase_done name='optimize_null_checks' stamp='0.067'/>
</phase>
<phase_done name='buildIR' stamp='0.067'/>
</phase>
<phase name='emit_lir' stamp='0.067'>
<phase name='lirGeneration' stamp='0.067'>
<phase_done name='lirGeneration' stamp='0.067'/>
</phase>
<phase name='linearScan' stamp='0.067'>
<phase_done name='linearScan' stamp='0.067'/>
</phase>
<phase_done name='emit_lir' stamp='0.067'/>
</phase>
<phase name='codeemit' stamp='0.067'>
<phase_done name='codeemit' stamp='0.067'/>
</phase>
<phase name='codeinstall' stamp='0.067'>
<phase_done name='codeinstall' stamp='0.070'/>
</phase>
<code_cache total_blobs='222' nmethods='10' adapters='143' free_code_cache='334433344'/>
<task_done success='1' nmsize='1624' count='262' inlined_bytes='63' stamp='0.070'/>
</task>
<task compile_id='11' method='java/lang/String getChars (II[CI)V' bytes='62' count='262' iicount='262' level='3' stamp='0.070'>
<phase name='buildIR' stamp='0.070'>
<type id='791' name='void'/>
<type id='789' name='int'/>
<klass id='888' name='[C' flags='1041'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='getChars' return='791' arguments='789 789 888 789' flags='1' bytes='62' iicount='262'/>
<parse method='899'  stamp='0.070'>
<bc code='183' bci='9'/>
<klass id='901' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='902' holder='901' name='&lt;init&gt;' return='791' arguments='789' unloaded='1'/>
<call method='902' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='902' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='43'/>
<call method='902' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='58'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='903' holder='802' name='arraycopy' return='791' arguments='796 789 796 789 789' flags='265' bytes='0' compile_id='8' compile_kind='c2n' level='0' iicount='640'/>
<call method='903' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.070'/>
</parse>
<phase name='optimize_blocks' stamp='0.070'>
<phase_done name='optimize_blocks' stamp='0.070'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.070'>
<phase_done name='rangeCheckElimination' stamp='0.070'/>
</phase>
<phase name='optimize_null_checks' stamp='0.070'>
<phase_done name='optimize_null_checks' stamp='0.070'/>
</phase>
<phase_done name='buildIR' stamp='0.070'/>
</phase>
<phase name='emit_lir' stamp='0.070'>
<phase name='lirGeneration' stamp='0.070'>
<phase_done name='lirGeneration' stamp='0.070'/>
</phase>
<phase name='linearScan' stamp='0.070'>
<phase_done name='linearScan' stamp='0.070'/>
</phase>
<phase_done name='emit_lir' stamp='0.070'/>
</phase>
<phase name='codeemit' stamp='0.070'>
<phase_done name='codeemit' stamp='0.070'/>
</phase>
<phase name='codeinstall' stamp='0.070'>
<phase_done name='codeinstall' stamp='0.071'/>
</phase>
<code_cache total_blobs='223' nmethods='11' adapters='143' free_code_cache='334431040'/>
<task_done success='1' nmsize='1080' count='262' stamp='0.071'/>
</task>
<task compile_id='12' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='65' count='512' iicount='514' level='3' stamp='0.072'>
<phase name='buildIR' stamp='0.072'>
<type id='789' name='int'/>
<type id='784' name='char'/>
<klass id='899' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='900' holder='899' name='hexDigit' return='789' arguments='784' flags='8' bytes='65' iicount='693'/>
<parse method='900'  stamp='0.072'>
<bc code='183' bci='61'/>
<type id='791' name='void'/>
<klass id='902' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='903' holder='902' name='&lt;init&gt;' return='791' flags='1' bytes='5' iicount='1'/>
<call method='903' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.072'/>
</parse>
<phase name='optimize_blocks' stamp='0.072'>
<phase_done name='optimize_blocks' stamp='0.072'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.072'>
<phase_done name='rangeCheckElimination' stamp='0.072'/>
</phase>
<phase name='optimize_null_checks' stamp='0.072'>
<phase_done name='optimize_null_checks' stamp='0.072'/>
</phase>
<phase_done name='buildIR' stamp='0.072'/>
</phase>
<phase name='emit_lir' stamp='0.072'>
<phase name='lirGeneration' stamp='0.072'>
<phase_done name='lirGeneration' stamp='0.072'/>
</phase>
<phase name='linearScan' stamp='0.072'>
<phase_done name='linearScan' stamp='0.072'/>
</phase>
<phase_done name='emit_lir' stamp='0.072'/>
</phase>
<phase name='codeemit' stamp='0.072'>
<phase_done name='codeemit' stamp='0.072'/>
</phase>
<phase name='codeinstall' stamp='0.072'>
<phase_done name='codeinstall' stamp='0.073'/>
</phase>
<code_cache total_blobs='224' nmethods='12' adapters='143' free_code_cache='334429312'/>
<task_done success='1' nmsize='872' count='3744' stamp='0.073'/>
</task>
<task compile_id='14' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='227' count='124' backedge_count='4327' iicount='124' level='3' stamp='0.073'>
<phase name='buildIR' stamp='0.073'>
<klass id='901' name='java/util/UUID' flags='17'/>
<klass id='900' name='java/lang/CharSequence' flags='1537'/>
<klass id='899' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='902' holder='899' name='uuidFromCharSequence' return='901' arguments='900' flags='9' bytes='227' iicount='129'/>
<parse method='902'  stamp='0.073'>
<bc code='185' bci='1'/>
<type id='789' name='int'/>
<method id='904' holder='900' name='length' return='789' flags='1025' bytes='0' iicount='1'/>
<call method='904' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='21'/>
<type id='791' name='void'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='906' name='java/lang/StringBuilder' unloaded='1'/>
<method id='908' holder='906' name='&lt;init&gt;' return='791' arguments='797' unloaded='1'/>
<call method='908' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='25'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='909' holder='906' name='append' return='906' arguments='796' unloaded='1'/>
<call method='909' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='28'/>
<method id='910' holder='906' name='toString' return='797' unloaded='1'/>
<call method='910' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='31'/>
<klass id='905' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='911' holder='905' name='&lt;init&gt;' return='791' arguments='797' flags='1' bytes='6' iicount='1'/>
<call method='911' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='185' bci='38'/>
<type id='784' name='char'/>
<method id='913' holder='900' name='charAt' return='784' arguments='789' flags='1025' bytes='0' iicount='1'/>
<call method='913' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='185' bci='51'/>
<call method='913' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='185' bci='64'/>
<call method='913' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='185' bci='77'/>
<call method='913' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='223'/>
<type id='790' name='long'/>
<method id='914' holder='901' name='&lt;init&gt;' return='791' arguments='790 790' flags='1' bytes='15' iicount='255'/>
<call method='914' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='914'>
<bc code='183' bci='1'/>
<method id='916' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='4' compiler='C1' level='3' iicount='2191'/>
<call method='916' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='916'>
<parse_done stamp='0.073'/>
</parse>
<parse_done stamp='0.073'/>
</parse>
<bc code='185' bci='189'/>
<call method='913' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='194'/>
<method id='918' holder='899' name='hexDigit' return='789' arguments='784' flags='8' bytes='65' compile_id='12' compiler='C1' level='3' iicount='8851'/>
<call method='918' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='185' bci='141'/>
<call method='913' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='146'/>
<call method='918' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='97'/>
<call method='908' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='101'/>
<call method='909' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='104'/>
<call method='910' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='107'/>
<call method='911' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.073'/>
</parse>
<phase name='optimize_blocks' stamp='0.073'>
<phase_done name='optimize_blocks' stamp='0.073'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.073'>
<phase_done name='rangeCheckElimination' stamp='0.073'/>
</phase>
<phase name='optimize_null_checks' stamp='0.073'>
<phase_done name='optimize_null_checks' stamp='0.073'/>
</phase>
<phase_done name='buildIR' stamp='0.073'/>
</phase>
<phase name='emit_lir' stamp='0.073'>
<phase name='lirGeneration' stamp='0.073'>
<phase_done name='lirGeneration' stamp='0.073'/>
</phase>
<phase name='linearScan' stamp='0.073'>
<phase_done name='linearScan' stamp='0.073'/>
</phase>
<phase_done name='emit_lir' stamp='0.073'/>
</phase>
<phase name='codeemit' stamp='0.073'>
<phase_done name='codeemit' stamp='0.074'/>
</phase>
<phase name='codeinstall' stamp='0.074'>
<phase_done name='codeinstall' stamp='0.113'/>
</phase>
<code_cache total_blobs='226' nmethods='14' adapters='143' free_code_cache='334417152'/>
<task_done success='1' nmsize='8232' count='627' backedge_count='21945' inlined_bytes='16' stamp='0.113'/>
</task>
<task compile_id='19' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='2560' iicount='2560' level='1' stamp='0.113'>
<phase name='buildIR' stamp='0.113'>
<type id='791' name='void'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='899' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='4' compiler='C1' level='3' iicount='2560'/>
<parse method='899'  stamp='0.113'>
<parse_done stamp='0.113'/>
</parse>
<phase name='optimize_blocks' stamp='0.113'>
<phase_done name='optimize_blocks' stamp='0.113'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.113'>
<phase_done name='rangeCheckElimination' stamp='0.113'/>
</phase>
<phase name='optimize_null_checks' stamp='0.113'>
<phase_done name='optimize_null_checks' stamp='0.113'/>
</phase>
<phase_done name='buildIR' stamp='0.113'/>
</phase>
<phase name='emit_lir' stamp='0.113'>
<phase name='lirGeneration' stamp='0.113'>
<phase_done name='lirGeneration' stamp='0.113'/>
</phase>
<phase name='linearScan' stamp='0.114'>
<phase_done name='linearScan' stamp='0.114'/>
</phase>
<phase_done name='emit_lir' stamp='0.114'/>
</phase>
<phase name='codeemit' stamp='0.114'>
<phase_done name='codeemit' stamp='0.114'/>
</phase>
<phase name='codeinstall' stamp='0.114'>
<phase_done name='codeinstall' stamp='0.114'/>
</phase>
<code_cache total_blobs='227' nmethods='15' adapters='143' free_code_cache='334416384'/>
<task_done success='1' nmsize='272' count='2773' stamp='0.114'/>
</task>
<task compile_id='20' method='java/lang/String length ()I' bytes='6' count='1554' iicount='1554' level='1' stamp='0.114'>
<phase name='buildIR' stamp='0.114'>
<type id='789' name='int'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='length' return='789' flags='1' bytes='6' compile_id='2' compiler='C1' level='3' iicount='1554'/>
<parse method='899'  stamp='0.114'>
<parse_done stamp='0.114'/>
</parse>
<phase name='optimize_blocks' stamp='0.114'>
<phase_done name='optimize_blocks' stamp='0.114'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.114'>
<phase_done name='rangeCheckElimination' stamp='0.114'/>
</phase>
<phase name='optimize_null_checks' stamp='0.114'>
<phase_done name='optimize_null_checks' stamp='0.114'/>
</phase>
<phase_done name='buildIR' stamp='0.114'/>
</phase>
<phase name='emit_lir' stamp='0.114'>
<phase name='lirGeneration' stamp='0.114'>
<phase_done name='lirGeneration' stamp='0.114'/>
</phase>
<phase name='linearScan' stamp='0.114'>
<phase_done name='linearScan' stamp='0.114'/>
</phase>
<phase_done name='emit_lir' stamp='0.114'/>
</phase>
<phase name='codeemit' stamp='0.114'>
<phase_done name='codeemit' stamp='0.114'/>
</phase>
<phase name='codeinstall' stamp='0.114'>
<phase_done name='codeinstall' stamp='0.115'/>
</phase>
<code_cache total_blobs='228' nmethods='16' adapters='143' free_code_cache='334415552'/>
<task_done success='1' nmsize='272' count='2302' stamp='0.115'/>
</task>
<task compile_id='16' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='1583' iicount='1583' level='3' stamp='0.115'>
<phase name='buildIR' stamp='0.115'>
<klass id='900' name='java/util/UUID' flags='17'/>
<klass id='899' name='com/github/marschall/charsequences/ParseUuidCompilation' flags='1'/>
<method id='901' holder='899' name='parse' return='900' flags='0' bytes='6' iicount='1589'/>
<parse method='901'  stamp='0.115'>
<bc code='184' bci='2'/>
<klass id='905' name='java/lang/CharSequence' flags='1537'/>
<klass id='904' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='906' holder='904' name='uuidFromCharSequence' return='900' arguments='905' flags='9' bytes='227' compile_id='14' compiler='C1' level='3' iicount='1613'/>
<call method='906' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.115'/>
</parse>
<phase name='optimize_blocks' stamp='0.115'>
<phase_done name='optimize_blocks' stamp='0.115'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.115'>
<phase_done name='rangeCheckElimination' stamp='0.115'/>
</phase>
<phase name='optimize_null_checks' stamp='0.115'>
<phase_done name='optimize_null_checks' stamp='0.115'/>
</phase>
<phase_done name='buildIR' stamp='0.115'/>
</phase>
<phase name='emit_lir' stamp='0.115'>
<phase name='lirGeneration' stamp='0.115'>
<phase_done name='lirGeneration' stamp='0.115'/>
</phase>
<phase name='linearScan' stamp='0.115'>
<phase_done name='linearScan' stamp='0.115'/>
</phase>
<phase_done name='emit_lir' stamp='0.115'/>
</phase>
<phase name='codeemit' stamp='0.115'>
<phase_done name='codeemit' stamp='0.115'/>
</phase>
<phase name='codeinstall' stamp='0.115'>
<phase_done name='codeinstall' stamp='0.115'/>
</phase>
<code_cache total_blobs='229' nmethods='17' adapters='143' free_code_cache='334414592'/>
<task_done success='1' nmsize='392' count='2463' stamp='0.115'/>
</task>
<task compile_id='17' method='java/util/UUID &lt;init&gt; (JJ)V' bytes='15' count='2467' iicount='2467' level='3' stamp='0.115'>
<phase name='buildIR' stamp='0.115'>
<type id='791' name='void'/>
<type id='790' name='long'/>
<klass id='899' name='java/util/UUID' flags='17'/>
<method id='900' holder='899' name='&lt;init&gt;' return='791' arguments='790 790' flags='1' bytes='15' iicount='2474'/>
<parse method='900'  stamp='0.115'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='902' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='4436'/>
<call method='902' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<parse_done stamp='0.115'/>
</parse>
<parse_done stamp='0.115'/>
</parse>
<phase name='optimize_blocks' stamp='0.115'>
<phase_done name='optimize_blocks' stamp='0.115'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.115'>
<phase_done name='rangeCheckElimination' stamp='0.115'/>
</phase>
<phase name='optimize_null_checks' stamp='0.115'>
<phase_done name='optimize_null_checks' stamp='0.115'/>
</phase>
<phase_done name='buildIR' stamp='0.115'/>
</phase>
<phase name='emit_lir' stamp='0.115'>
<phase name='lirGeneration' stamp='0.115'>
<phase_done name='lirGeneration' stamp='0.115'/>
</phase>
<phase name='linearScan' stamp='0.115'>
<phase_done name='linearScan' stamp='0.115'/>
</phase>
<phase_done name='emit_lir' stamp='0.115'/>
</phase>
<phase name='codeemit' stamp='0.115'>
<phase_done name='codeemit' stamp='0.115'/>
</phase>
<phase name='codeinstall' stamp='0.115'>
<phase_done name='codeinstall' stamp='0.116'/>
</phase>
<code_cache total_blobs='230' nmethods='18' adapters='143' free_code_cache='334413568'/>
<task_done success='1' nmsize='432' count='3227' inlined_bytes='1' stamp='0.116'/>
</task>
<task compile_id='22' method='java/lang/String indexOf (I)I' bytes='7' count='263' iicount='263' level='3' stamp='0.118'>
<phase name='buildIR' stamp='0.118'>
<type id='789' name='int'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='indexOf' return='789' arguments='789' flags='1' bytes='7' iicount='263'/>
<parse method='899'  stamp='0.118'>
<bc code='182' bci='3'/>
<method id='901' holder='797' name='indexOf' return='789' arguments='789 789' flags='1' bytes='70' compile_id='6' compiler='C1' level='3' iicount='273'/>
<call method='901' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.118'/>
</parse>
<phase name='optimize_blocks' stamp='0.118'>
<phase_done name='optimize_blocks' stamp='0.118'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.118'>
<phase_done name='rangeCheckElimination' stamp='0.118'/>
</phase>
<phase name='optimize_null_checks' stamp='0.118'>
<phase_done name='optimize_null_checks' stamp='0.118'/>
</phase>
<phase_done name='buildIR' stamp='0.118'/>
</phase>
<phase name='emit_lir' stamp='0.118'>
<phase name='lirGeneration' stamp='0.118'>
<phase_done name='lirGeneration' stamp='0.118'/>
</phase>
<phase name='linearScan' stamp='0.118'>
<phase_done name='linearScan' stamp='0.118'/>
</phase>
<phase_done name='emit_lir' stamp='0.118'/>
</phase>
<phase name='codeemit' stamp='0.118'>
<phase_done name='codeemit' stamp='0.118'/>
</phase>
<phase name='codeinstall' stamp='0.118'>
<phase_done name='codeinstall' stamp='0.118'/>
</phase>
<code_cache total_blobs='246' nmethods='19' adapters='158' free_code_cache='334404544'/>
<task_done success='1' nmsize='392' count='268' stamp='0.118'/>
</task>
<task compile_id='24' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='497' iicount='497' level='3' stamp='0.120'>
<phase name='buildIR' stamp='0.120'>
<type id='791' name='void'/>
<type id='789' name='int'/>
<klass id='860' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='899' holder='860' name='ensureCapacityInternal' return='791' arguments='789' flags='2' bytes='27' iicount='497'/>
<parse method='899'  stamp='0.120'>
<bc code='183' bci='17'/>
<method id='901' holder='860' name='newCapacity' return='789' arguments='789' flags='2' bytes='39' iicount='184'/>
<call method='901' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='888' name='[C' flags='1041'/>
<klass id='903' name='java/util/Arrays' flags='1'/>
<method id='904' holder='903' name='copyOf' return='888' arguments='888 789' flags='9' bytes='19' iicount='191'/>
<call method='904' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='904'>
<bc code='184' bci='11'/>
<klass id='906' name='java/lang/Math' flags='17'/>
<method id='907' holder='906' name='min' return='789' arguments='789 789' flags='9' bytes='11' compile_id='7' compiler='C1' level='3' iicount='934'/>
<call method='907' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='907'>
<parse_done stamp='0.120'/>
</parse>
<bc code='184' bci='14'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='909' holder='802' name='arraycopy' return='791' arguments='796 789 796 789 789' flags='265' bytes='0' compile_id='8' compile_kind='c2n' level='0' iicount='640'/>
<call method='909' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.120'/>
</parse>
<parse_done stamp='0.120'/>
</parse>
<phase name='optimize_blocks' stamp='0.120'>
<phase_done name='optimize_blocks' stamp='0.120'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.120'>
<phase_done name='rangeCheckElimination' stamp='0.120'/>
</phase>
<phase name='optimize_null_checks' stamp='0.120'>
<phase_done name='optimize_null_checks' stamp='0.120'/>
</phase>
<phase_done name='buildIR' stamp='0.120'/>
</phase>
<phase name='emit_lir' stamp='0.120'>
<phase name='lirGeneration' stamp='0.120'>
<phase_done name='lirGeneration' stamp='0.120'/>
</phase>
<phase name='linearScan' stamp='0.120'>
<phase_done name='linearScan' stamp='0.121'/>
</phase>
<phase_done name='emit_lir' stamp='0.121'/>
</phase>
<phase name='codeemit' stamp='0.121'>
<phase_done name='codeemit' stamp='0.121'/>
</phase>
<phase name='codeinstall' stamp='0.121'>
<phase_done name='codeinstall' stamp='0.122'/>
</phase>
<code_cache total_blobs='247' nmethods='20' adapters='158' free_code_cache='334402368'/>
<task_done success='1' nmsize='1144' count='630' inlined_bytes='30' stamp='0.122'/>
</task>
<task compile_id='25' method='java/net/URI$Parser charAt (I)C' bytes='9' count='606' iicount='606' level='3' stamp='0.122'>
<phase name='buildIR' stamp='0.122'>
<type id='784' name='char'/>
<type id='789' name='int'/>
<klass id='899' name='java/net/URI$Parser' flags='2'/>
<method id='900' holder='899' name='charAt' return='784' arguments='789' flags='2' bytes='9' iicount='606'/>
<parse method='900'  stamp='0.122'>
<bc code='182' bci='5'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='902' holder='797' name='charAt' return='784' arguments='789' flags='1' bytes='29' compile_id='5' compiler='C1' level='3' iicount='384768'/>
<call method='902' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<bc code='183' bci='18'/>
<type id='791' name='void'/>
<klass id='904' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='905' holder='904' name='&lt;init&gt;' return='791' arguments='789' unloaded='1'/>
<call method='905' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.122'/>
</parse>
<parse_done stamp='0.122'/>
</parse>
<phase name='optimize_blocks' stamp='0.122'>
<phase_done name='optimize_blocks' stamp='0.122'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.122'>
<phase_done name='rangeCheckElimination' stamp='0.122'/>
</phase>
<phase name='optimize_null_checks' stamp='0.122'>
<phase_done name='optimize_null_checks' stamp='0.122'/>
</phase>
<phase_done name='buildIR' stamp='0.122'/>
</phase>
<phase name='emit_lir' stamp='0.122'>
<phase name='lirGeneration' stamp='0.122'>
<phase_done name='lirGeneration' stamp='0.122'/>
</phase>
<phase name='linearScan' stamp='0.122'>
<phase_done name='linearScan' stamp='0.122'/>
</phase>
<phase_done name='emit_lir' stamp='0.122'/>
</phase>
<phase name='codeemit' stamp='0.122'>
<phase_done name='codeemit' stamp='0.122'/>
</phase>
<phase name='codeinstall' stamp='0.122'>
<phase_done name='codeinstall' stamp='0.123'/>
</phase>
<code_cache total_blobs='249' nmethods='21' adapters='159' free_code_cache='334400192'/>
<task_done success='1' nmsize='744' count='606' inlined_bytes='29' stamp='0.123'/>
</task>
<task compile_id='26' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='355' iicount='355' level='3' stamp='0.123'>
<phase name='buildIR' stamp='0.123'>
<klass id='862' name='java/lang/StringBuilder' flags='17'/>
<type id='784' name='char'/>
<method id='899' holder='862' name='append' return='862' arguments='784' flags='1' bytes='8' iicount='355'/>
<parse method='899'  stamp='0.123'>
<bc code='183' bci='2'/>
<klass id='860' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='901' holder='860' name='append' return='860' arguments='784' flags='1' bytes='29' iicount='355'/>
<call method='901' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<bc code='183' bci='7'/>
<type id='791' name='void'/>
<type id='789' name='int'/>
<method id='903' holder='860' name='ensureCapacityInternal' return='791' arguments='789' flags='2' bytes='27' compile_id='24' compiler='C1' level='3' iicount='630'/>
<call method='903' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<bc code='183' bci='17'/>
<method id='905' holder='860' name='newCapacity' return='789' arguments='789' flags='2' bytes='39' iicount='188'/>
<call method='905' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='888' name='[C' flags='1041'/>
<klass id='907' name='java/util/Arrays' flags='1'/>
<method id='908' holder='907' name='copyOf' return='888' arguments='888 789' flags='9' bytes='19' iicount='195'/>
<call method='908' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='908'>
<bc code='184' bci='11'/>
<klass id='910' name='java/lang/Math' flags='17'/>
<method id='911' holder='910' name='min' return='789' arguments='789 789' flags='9' bytes='11' compile_id='7' compiler='C1' level='3' iicount='956'/>
<call method='911' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='911'>
<parse_done stamp='0.123'/>
</parse>
<bc code='184' bci='14'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='913' holder='802' name='arraycopy' return='791' arguments='796 789 796 789 789' flags='265' bytes='0' compile_id='8' compile_kind='c2n' level='0' iicount='640'/>
<call method='913' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.124'/>
</parse>
<parse_done stamp='0.124'/>
</parse>
<parse_done stamp='0.124'/>
</parse>
<parse_done stamp='0.124'/>
</parse>
<phase name='optimize_blocks' stamp='0.124'>
<phase_done name='optimize_blocks' stamp='0.124'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.124'>
<phase_done name='rangeCheckElimination' stamp='0.124'/>
</phase>
<phase name='optimize_null_checks' stamp='0.124'>
<phase_done name='optimize_null_checks' stamp='0.124'/>
</phase>
<phase_done name='buildIR' stamp='0.124'/>
</phase>
<phase name='emit_lir' stamp='0.124'>
<phase name='lirGeneration' stamp='0.124'>
<phase_done name='lirGeneration' stamp='0.124'/>
</phase>
<phase name='linearScan' stamp='0.124'>
<phase_done name='linearScan' stamp='0.124'/>
</phase>
<phase_done name='emit_lir' stamp='0.124'/>
</phase>
<phase name='codeemit' stamp='0.124'>
<phase_done name='codeemit' stamp='0.124'/>
</phase>
<phase name='codeinstall' stamp='0.124'>
<phase_done name='codeinstall' stamp='0.144'/>
</phase>
<code_cache total_blobs='250' nmethods='22' adapters='159' free_code_cache='334397312'/>
<task_done success='1' nmsize='1432' count='355' inlined_bytes='86' stamp='0.144'/>
</task>
<task compile_id='28' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='384' iicount='384' level='1' stamp='0.144'>
<phase name='buildIR' stamp='0.144'>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='822' name='java/lang/ref/Reference' flags='1025'/>
<method id='899' holder='822' name='get' return='796' flags='1' bytes='5' iicount='384'/>
<parse method='899'  stamp='0.144'>
<parse_done stamp='0.144'/>
</parse>
<phase name='optimize_blocks' stamp='0.144'>
<phase_done name='optimize_blocks' stamp='0.144'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.144'>
<phase_done name='rangeCheckElimination' stamp='0.144'/>
</phase>
<phase name='optimize_null_checks' stamp='0.144'>
<phase_done name='optimize_null_checks' stamp='0.144'/>
</phase>
<phase_done name='buildIR' stamp='0.144'/>
</phase>
<phase name='emit_lir' stamp='0.144'>
<phase name='lirGeneration' stamp='0.144'>
<phase_done name='lirGeneration' stamp='0.144'/>
</phase>
<phase name='linearScan' stamp='0.144'>
<phase_done name='linearScan' stamp='0.144'/>
</phase>
<phase_done name='emit_lir' stamp='0.144'/>
</phase>
<phase name='codeemit' stamp='0.144'>
<phase_done name='codeemit' stamp='0.144'/>
</phase>
<phase name='codeinstall' stamp='0.144'>
<phase_done name='codeinstall' stamp='0.145'/>
</phase>
<code_cache total_blobs='251' nmethods='23' adapters='159' free_code_cache='334396544'/>
<task_done success='1' nmsize='272' count='384' stamp='0.145'/>
</task>
<task compile_id='27' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='258' iicount='258' level='3' stamp='0.145'>
<phase name='buildIR' stamp='0.145'>
<klass id='808' name='java/lang/SecurityManager' flags='1'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='899' holder='802' name='getSecurityManager' return='808' flags='9' bytes='4' iicount='258'/>
<parse method='899'  stamp='0.145'>
<parse_done stamp='0.145'/>
</parse>
<phase name='optimize_blocks' stamp='0.145'>
<phase_done name='optimize_blocks' stamp='0.145'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.145'>
<phase_done name='rangeCheckElimination' stamp='0.145'/>
</phase>
<phase name='optimize_null_checks' stamp='0.145'>
<phase_done name='optimize_null_checks' stamp='0.145'/>
</phase>
<phase_done name='buildIR' stamp='0.145'/>
</phase>
<phase name='emit_lir' stamp='0.145'>
<phase name='lirGeneration' stamp='0.145'>
<phase_done name='lirGeneration' stamp='0.145'/>
</phase>
<phase name='linearScan' stamp='0.145'>
<phase_done name='linearScan' stamp='0.145'/>
</phase>
<phase_done name='emit_lir' stamp='0.145'/>
</phase>
<phase name='codeemit' stamp='0.145'>
<phase_done name='codeemit' stamp='0.145'/>
</phase>
<phase name='codeinstall' stamp='0.145'>
<phase_done name='codeinstall' stamp='0.146'/>
</phase>
<code_cache total_blobs='252' nmethods='24' adapters='159' free_code_cache='334395712'/>
<task_done success='1' nmsize='336' count='258' stamp='0.146'/>
</task>
<task compile_id='30' method='java/net/URI access$300 (CJJ)Z' bytes='7' count='611' iicount='611' level='3' stamp='0.149'>
<phase name='buildIR' stamp='0.149'>
<type id='783' name='boolean'/>
<type id='784' name='char'/>
<type id='790' name='long'/>
<klass id='899' name='java/net/URI' flags='17'/>
<method id='900' holder='899' name='access$300' return='783' arguments='784 790 790' flags='4104' bytes='7' iicount='611'/>
<parse method='900'  stamp='0.149'>
<bc code='184' bci='3'/>
<method id='902' holder='899' name='match' return='783' arguments='784 790 790' flags='10' bytes='56' iicount='611'/>
<call method='902' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.149'/>
</parse>
<phase name='optimize_blocks' stamp='0.149'>
<phase_done name='optimize_blocks' stamp='0.149'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.149'>
<phase_done name='rangeCheckElimination' stamp='0.149'/>
</phase>
<phase name='optimize_null_checks' stamp='0.149'>
<phase_done name='optimize_null_checks' stamp='0.149'/>
</phase>
<phase_done name='buildIR' stamp='0.149'/>
</phase>
<phase name='emit_lir' stamp='0.149'>
<phase name='lirGeneration' stamp='0.149'>
<phase_done name='lirGeneration' stamp='0.149'/>
</phase>
<phase name='linearScan' stamp='0.149'>
<phase_done name='linearScan' stamp='0.149'/>
</phase>
<phase_done name='emit_lir' stamp='0.149'/>
</phase>
<phase name='codeemit' stamp='0.149'>
<phase_done name='codeemit' stamp='0.149'/>
</phase>
<phase name='codeinstall' stamp='0.149'>
<phase_done name='codeinstall' stamp='0.150'/>
</phase>
<code_cache total_blobs='265' nmethods='25' adapters='171' free_code_cache='334388480'/>
<task_done success='1' nmsize='360' count='611' stamp='0.150'/>
</task>
<task compile_id='31' method='java/net/URI match (CJJ)Z' bytes='56' count='611' iicount='611' level='3' stamp='0.150'>
<phase name='buildIR' stamp='0.150'>
<type id='783' name='boolean'/>
<type id='784' name='char'/>
<type id='790' name='long'/>
<klass id='899' name='java/net/URI' flags='17'/>
<method id='900' holder='899' name='match' return='783' arguments='784 790 790' flags='10' bytes='56' iicount='611'/>
<parse method='900'  stamp='0.150'>
<parse_done stamp='0.150'/>
</parse>
<phase name='optimize_blocks' stamp='0.150'>
<phase_done name='optimize_blocks' stamp='0.150'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.150'>
<phase_done name='rangeCheckElimination' stamp='0.150'/>
</phase>
<phase name='optimize_null_checks' stamp='0.150'>
<phase_done name='optimize_null_checks' stamp='0.150'/>
</phase>
<phase_done name='buildIR' stamp='0.150'/>
</phase>
<phase name='emit_lir' stamp='0.150'>
<phase name='lirGeneration' stamp='0.150'>
<phase_done name='lirGeneration' stamp='0.150'/>
</phase>
<phase name='linearScan' stamp='0.150'>
<phase_done name='linearScan' stamp='0.150'/>
</phase>
<phase_done name='emit_lir' stamp='0.150'/>
</phase>
<phase name='codeemit' stamp='0.150'>
<phase_done name='codeemit' stamp='0.150'/>
</phase>
<phase name='codeinstall' stamp='0.150'>
<phase_done name='codeinstall' stamp='0.152'/>
</phase>
<code_cache total_blobs='266' nmethods='26' adapters='171' free_code_cache='334386880'/>
<task_done success='1' nmsize='784' count='611' stamp='0.152'/>
</task>
<task compile_id='29' method='sun/nio/fs/UnixUriUtils match (CJJ)Z' bytes='50' count='566' iicount='566' level='3' stamp='0.152'>
<phase name='buildIR' stamp='0.152'>
<type id='783' name='boolean'/>
<type id='784' name='char'/>
<type id='790' name='long'/>
<klass id='899' name='sun/nio/fs/UnixUriUtils' flags='0'/>
<method id='900' holder='899' name='match' return='783' arguments='784 790 790' flags='10' bytes='50' iicount='566'/>
<parse method='900'  stamp='0.152'>
<parse_done stamp='0.152'/>
</parse>
<phase name='optimize_blocks' stamp='0.152'>
<phase_done name='optimize_blocks' stamp='0.152'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.152'>
<phase_done name='rangeCheckElimination' stamp='0.152'/>
</phase>
<phase name='optimize_null_checks' stamp='0.152'>
<phase_done name='optimize_null_checks' stamp='0.152'/>
</phase>
<phase_done name='buildIR' stamp='0.152'/>
</phase>
<phase name='emit_lir' stamp='0.152'>
<phase name='lirGeneration' stamp='0.152'>
<phase_done name='lirGeneration' stamp='0.152'/>
</phase>
<phase name='linearScan' stamp='0.152'>
<phase_done name='linearScan' stamp='0.152'/>
</phase>
<phase_done name='emit_lir' stamp='0.152'/>
</phase>
<phase name='codeemit' stamp='0.152'>
<phase_done name='codeemit' stamp='0.152'/>
</phase>
<phase name='codeinstall' stamp='0.152'>
<phase_done name='codeinstall' stamp='0.153'/>
</phase>
<code_cache total_blobs='267' nmethods='27' adapters='171' free_code_cache='334385408'/>
<task_done success='1' nmsize='720' count='566' stamp='0.153'/>
</task>
<task compile_id='32' compile_kind='osr' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='62464' iicount='1' osr_bci='9' level='3' stamp='0.153'>
<phase name='buildIR' stamp='0.153'>
<type id='791' name='void'/>
<klass id='899' name='com/github/marschall/charsequences/ParseUuidCompilation' flags='1'/>
<method id='900' holder='899' name='&lt;init&gt;' return='791' flags='1' bytes='40' iicount='1'/>
<parse method='900'  stamp='0.153'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='902' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='64555'/>
<call method='902' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<bc code='177' bci='0'/>
<dependency type='leaf_type' ctxk='899'/>
<parse_done stamp='0.153'/>
</parse>
<bc code='182' bci='10'/>
<klass id='904' name='java/util/UUID' flags='17'/>
<method id='905' holder='899' name='parse' return='904' flags='0' bytes='6' compile_id='16' compiler='C1' level='3' iicount='62607'/>
<call method='905' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='899' x='905'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='899'/>
<parse method='905'>
<bc code='184' bci='2'/>
<klass id='909' name='java/lang/CharSequence' flags='1537'/>
<klass id='908' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='910' holder='908' name='uuidFromCharSequence' return='904' arguments='909' flags='9' bytes='227' compile_id='14' compiler='C1' level='3' iicount='62634'/>
<call method='910' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.153'/>
</parse>
<bc code='184' bci='15'/>
<type id='789' name='int'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='912' holder='802' name='identityHashCode' return='789' arguments='796' flags='265' bytes='0' compile_id='18' compile_kind='c2n' level='0' iicount='384'/>
<call method='912' instr='invokestatic'/>
<inline_fail reason='native method'/>
<bc code='182' bci='27'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='913' name='java/io/PrintStream' unloaded='1'/>
<method id='916' holder='913' name='println' return='791' arguments='797' unloaded='1'/>
<call method='916' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.153'/>
</parse>
<phase name='optimize_blocks' stamp='0.153'>
<phase_done name='optimize_blocks' stamp='0.153'/>
</phase>
<phase name='optimize_null_checks' stamp='0.153'>
<phase_done name='optimize_null_checks' stamp='0.153'/>
</phase>
<phase_done name='buildIR' stamp='0.153'/>
</phase>
<phase name='emit_lir' stamp='0.153'>
<phase name='lirGeneration' stamp='0.153'>
<phase_done name='lirGeneration' stamp='0.154'/>
</phase>
<phase name='linearScan' stamp='0.154'>
<phase_done name='linearScan' stamp='0.154'/>
</phase>
<phase_done name='emit_lir' stamp='0.154'/>
</phase>
<phase name='codeemit' stamp='0.154'>
<phase_done name='codeemit' stamp='0.154'/>
</phase>
<phase name='codeinstall' stamp='0.154'>
<dependency type='leaf_type' ctxk='899'/>
<dependency type='unique_concrete_method' ctxk='899' x='905'/>
<phase_done name='codeinstall' stamp='0.156'/>
</phase>
<code_cache total_blobs='268' nmethods='28' adapters='171' free_code_cache='334382720'/>
<task_done success='1' nmsize='1544' count='1' backedge_count='65705' inlined_bytes='7' stamp='0.156'/>
</task>
<task compile_id='33' method='java/lang/String lastIndexOf (II)I' bytes='52' count='111' backedge_count='3072' iicount='111' level='3' stamp='0.156'>
<phase name='buildIR' stamp='0.156'>
<type id='789' name='int'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='lastIndexOf' return='789' arguments='789 789' flags='1' bytes='52' iicount='111'/>
<parse method='899'  stamp='0.156'>
<bc code='184' bci='16'/>
<klass id='901' name='java/lang/Math' flags='17'/>
<method id='902' holder='901' name='min' return='789' arguments='789 789' flags='9' bytes='11' compile_id='7' compiler='C1' level='3' iicount='1077'/>
<call method='902' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<parse_done stamp='0.156'/>
</parse>
<bc code='183' bci='48'/>
<method id='904' holder='797' name='lastIndexOfSupplementary' return='789' arguments='789 789' flags='2' bytes='70' iicount='1'/>
<call method='904' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.157'/>
</parse>
<phase name='optimize_blocks' stamp='0.157'>
<phase_done name='optimize_blocks' stamp='0.157'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.157'>
<phase_done name='rangeCheckElimination' stamp='0.157'/>
</phase>
<phase name='optimize_null_checks' stamp='0.157'>
<phase_done name='optimize_null_checks' stamp='0.157'/>
</phase>
<phase_done name='buildIR' stamp='0.157'/>
</phase>
<phase name='emit_lir' stamp='0.157'>
<phase name='lirGeneration' stamp='0.157'>
<phase_done name='lirGeneration' stamp='0.157'/>
</phase>
<phase name='linearScan' stamp='0.157'>
<phase_done name='linearScan' stamp='0.157'/>
</phase>
<phase_done name='emit_lir' stamp='0.157'/>
</phase>
<phase name='codeemit' stamp='0.157'>
<phase_done name='codeemit' stamp='0.157'/>
</phase>
<phase name='codeinstall' stamp='0.157'>
<phase_done name='codeinstall' stamp='0.158'/>
</phase>
<code_cache total_blobs='269' nmethods='29' adapters='171' free_code_cache='334380736'/>
<task_done success='1' nmsize='904' count='113' backedge_count='3097' inlined_bytes='11' stamp='0.158'/>
</task>
<task compile_id='34' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='67548' iicount='1' level='3' stamp='0.160'>
<phase name='buildIR' stamp='0.160'>
<type id='791' name='void'/>
<klass id='899' name='com/github/marschall/charsequences/ParseUuidCompilation' flags='1'/>
<method id='900' holder='899' name='&lt;init&gt;' return='791' flags='1' bytes='40' iicount='1'/>
<parse method='900'  stamp='0.160'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='902' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='69670'/>
<call method='902' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<bc code='177' bci='0'/>
<dependency type='leaf_type' ctxk='899'/>
<parse_done stamp='0.160'/>
</parse>
<bc code='182' bci='10'/>
<klass id='904' name='java/util/UUID' flags='17'/>
<method id='905' holder='899' name='parse' return='904' flags='0' bytes='6' compile_id='16' compiler='C1' level='3' iicount='67671'/>
<call method='905' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='899'/>
<parse method='905'>
<bc code='184' bci='2'/>
<klass id='909' name='java/lang/CharSequence' flags='1537'/>
<klass id='908' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='910' holder='908' name='uuidFromCharSequence' return='904' arguments='909' flags='9' bytes='227' compile_id='14' compiler='C1' level='3' iicount='67698'/>
<call method='910' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.160'/>
</parse>
<bc code='184' bci='15'/>
<type id='789' name='int'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='912' holder='802' name='identityHashCode' return='789' arguments='796' flags='265' bytes='0' compile_id='18' compile_kind='c2n' level='0' iicount='384'/>
<call method='912' instr='invokestatic'/>
<inline_fail reason='native method'/>
<bc code='182' bci='27'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='913' name='java/io/PrintStream' flags='1'/>
<method id='916' holder='913' name='println' return='791' arguments='797' unloaded='1'/>
<call method='916' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.160'/>
</parse>
<phase name='optimize_blocks' stamp='0.160'>
<phase_done name='optimize_blocks' stamp='0.160'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.160'>
<phase_done name='rangeCheckElimination' stamp='0.160'/>
</phase>
<phase name='optimize_null_checks' stamp='0.160'>
<phase_done name='optimize_null_checks' stamp='0.160'/>
</phase>
<phase_done name='buildIR' stamp='0.160'/>
</phase>
<phase name='emit_lir' stamp='0.160'>
<phase name='lirGeneration' stamp='0.160'>
<phase_done name='lirGeneration' stamp='0.160'/>
</phase>
<phase name='linearScan' stamp='0.160'>
<phase_done name='linearScan' stamp='0.160'/>
</phase>
<phase_done name='emit_lir' stamp='0.160'/>
</phase>
<phase name='codeemit' stamp='0.160'>
<phase_done name='codeemit' stamp='0.160'/>
</phase>
<phase name='codeinstall' stamp='0.160'>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.162'/>
</phase>
<code_cache total_blobs='270' nmethods='30' adapters='171' free_code_cache='334378240'/>
<task_done success='1' nmsize='1448' count='1' backedge_count='72519' inlined_bytes='7' stamp='0.162'/>
</task>
<task compile_id='36' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='1051' iicount='1051' level='3' stamp='0.162'>
<phase name='buildIR' stamp='0.162'>
<klass id='899' name='java/lang/CharacterData' flags='1024'/>
<type id='789' name='int'/>
<method id='900' holder='899' name='of' return='899' arguments='789' flags='24' bytes='120' iicount='1051'/>
<parse method='900'  stamp='0.162'>
<parse_done stamp='0.162'/>
</parse>
<phase name='optimize_blocks' stamp='0.162'>
<phase_done name='optimize_blocks' stamp='0.162'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.162'>
<phase_done name='rangeCheckElimination' stamp='0.162'/>
</phase>
<phase name='optimize_null_checks' stamp='0.162'>
<phase_done name='optimize_null_checks' stamp='0.162'/>
</phase>
<phase_done name='buildIR' stamp='0.162'/>
</phase>
<phase name='emit_lir' stamp='0.162'>
<phase name='lirGeneration' stamp='0.162'>
<phase_done name='lirGeneration' stamp='0.162'/>
</phase>
<phase name='linearScan' stamp='0.162'>
<phase_done name='linearScan' stamp='0.162'/>
</phase>
<phase_done name='emit_lir' stamp='0.162'/>
</phase>
<phase name='codeemit' stamp='0.162'>
<phase_done name='codeemit' stamp='0.162'/>
</phase>
<phase name='codeinstall' stamp='0.162'>
<phase_done name='codeinstall' stamp='0.166'/>
</phase>
<code_cache total_blobs='271' nmethods='31' adapters='171' free_code_cache='334375552'/>
<task_done success='1' nmsize='1392' count='1059' stamp='0.166'/>
</task>
<task compile_id='38' method='java/lang/Character toUpperCaseEx (I)I' bytes='30' count='761' iicount='761' level='3' stamp='0.166'>
<phase name='buildIR' stamp='0.166'>
<type id='789' name='int'/>
<klass id='877' name='java/lang/Character' flags='17'/>
<method id='899' holder='877' name='toUpperCaseEx' return='789' arguments='789' flags='8' bytes='30' iicount='761'/>
<parse method='899'  stamp='0.166'>
<bc code='184' bci='22'/>
<klass id='903' name='java/lang/CharacterData' flags='1024'/>
<method id='904' holder='903' name='of' return='903' arguments='789' flags='24' bytes='120' compile_id='36' compiler='C1' level='3' iicount='1059'/>
<call method='904' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='26'/>
<method id='906' holder='903' name='toUpperCaseEx' return='789' arguments='789' flags='0' bytes='6' iicount='1'/>
<call method='906' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.166'/>
</parse>
<phase name='optimize_blocks' stamp='0.166'>
<phase_done name='optimize_blocks' stamp='0.166'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.166'>
<phase_done name='rangeCheckElimination' stamp='0.166'/>
</phase>
<phase name='optimize_null_checks' stamp='0.166'>
<phase_done name='optimize_null_checks' stamp='0.166'/>
</phase>
<phase_done name='buildIR' stamp='0.166'/>
</phase>
<phase name='emit_lir' stamp='0.166'>
<phase name='lirGeneration' stamp='0.166'>
<phase_done name='lirGeneration' stamp='0.166'/>
</phase>
<phase name='linearScan' stamp='0.166'>
<phase_done name='linearScan' stamp='0.166'/>
</phase>
<phase_done name='emit_lir' stamp='0.166'/>
</phase>
<phase name='codeemit' stamp='0.166'>
<phase_done name='codeemit' stamp='0.166'/>
</phase>
<phase name='codeinstall' stamp='0.166'>
<phase_done name='codeinstall' stamp='0.167'/>
</phase>
<code_cache total_blobs='272' nmethods='32' adapters='171' free_code_cache='334373952'/>
<task_done success='1' nmsize='920' count='761' stamp='0.167'/>
</task>
<task compile_id='39' method='java/lang/CharacterDataLatin1 toUpperCaseEx (I)I' bytes='71' count='761' iicount='761' level='3' stamp='0.167'>
<phase name='buildIR' stamp='0.167'>
<type id='789' name='int'/>
<klass id='899' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='900' holder='899' name='toUpperCaseEx' return='789' arguments='789' flags='0' bytes='71' iicount='761'/>
<parse method='900'  stamp='0.167'>
<bc code='182' bci='4'/>
<method id='902' holder='899' name='getProperties' return='789' arguments='789' flags='0' bytes='11' iicount='1059'/>
<call method='902' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='899'/>
<parse method='902'>
<parse_done stamp='0.167'/>
</parse>
<parse_done stamp='0.167'/>
</parse>
<phase name='optimize_blocks' stamp='0.167'>
<phase_done name='optimize_blocks' stamp='0.167'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.167'>
<phase_done name='rangeCheckElimination' stamp='0.167'/>
</phase>
<phase name='optimize_null_checks' stamp='0.167'>
<phase_done name='optimize_null_checks' stamp='0.167'/>
</phase>
<phase_done name='buildIR' stamp='0.167'/>
</phase>
<phase name='emit_lir' stamp='0.167'>
<phase name='lirGeneration' stamp='0.167'>
<phase_done name='lirGeneration' stamp='0.167'/>
</phase>
<phase name='linearScan' stamp='0.167'>
<phase_done name='linearScan' stamp='0.167'/>
</phase>
<phase_done name='emit_lir' stamp='0.167'/>
</phase>
<phase name='codeemit' stamp='0.167'>
<phase_done name='codeemit' stamp='0.167'/>
</phase>
<phase name='codeinstall' stamp='0.167'>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.197'/>
</phase>
<code_cache total_blobs='273' nmethods='33' adapters='171' free_code_cache='334372416'/>
<task_done success='1' nmsize='688' count='950' inlined_bytes='11' stamp='0.197'/>
</task>
<task compile_id='37' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='1271' iicount='1271' level='3' stamp='0.197'>
<phase name='buildIR' stamp='0.197'>
<type id='789' name='int'/>
<klass id='899' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='900' holder='899' name='getProperties' return='789' arguments='789' flags='0' bytes='11' iicount='1271'/>
<parse method='900'  stamp='0.197'>
<parse_done stamp='0.197'/>
</parse>
<phase name='optimize_blocks' stamp='0.197'>
<phase_done name='optimize_blocks' stamp='0.197'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.197'>
<phase_done name='rangeCheckElimination' stamp='0.197'/>
</phase>
<phase name='optimize_null_checks' stamp='0.197'>
<phase_done name='optimize_null_checks' stamp='0.197'/>
</phase>
<phase_done name='buildIR' stamp='0.197'/>
</phase>
<phase name='emit_lir' stamp='0.197'>
<phase name='lirGeneration' stamp='0.197'>
<phase_done name='lirGeneration' stamp='0.197'/>
</phase>
<phase name='linearScan' stamp='0.197'>
<phase_done name='linearScan' stamp='0.197'/>
</phase>
<phase_done name='emit_lir' stamp='0.197'/>
</phase>
<phase name='codeemit' stamp='0.197'>
<phase_done name='codeemit' stamp='0.197'/>
</phase>
<phase name='codeinstall' stamp='0.197'>
<phase_done name='codeinstall' stamp='0.198'/>
</phase>
<code_cache total_blobs='274' nmethods='34' adapters='171' free_code_cache='334371392'/>
<task_done success='1' nmsize='400' count='1342' stamp='0.198'/>
</task>
<task compile_id='35' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='482' iicount='482' level='3' stamp='0.198'>
<phase name='buildIR' stamp='0.198'>
<klass id='888' name='[C' flags='1041'/>
<type id='789' name='int'/>
<klass id='899' name='java/util/Arrays' flags='1'/>
<method id='900' holder='899' name='copyOfRange' return='888' arguments='888 789 789' flags='9' bytes='63' iicount='482'/>
<parse method='900'  stamp='0.198'>
<bc code='183' bci='16'/>
<type id='791' name='void'/>
<klass id='862' name='java/lang/StringBuilder' flags='17'/>
<method id='903' holder='862' name='&lt;init&gt;' return='791' flags='1' bytes='7' iicount='168'/>
<call method='903' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<bc code='183' bci='3'/>
<klass id='860' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='905' holder='860' name='&lt;init&gt;' return='791' arguments='789' flags='0' bytes='12' iicount='203'/>
<call method='905' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='905'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='907' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='117093'/>
<call method='907' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='907'>
<parse_done stamp='0.198'/>
</parse>
<parse_done stamp='0.198'/>
</parse>
<parse_done stamp='0.198'/>
</parse>
<bc code='182' bci='20'/>
<method id='909' holder='862' name='append' return='862' arguments='789' flags='1' bytes='8' iicount='1'/>
<call method='909' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='909'>
<bc code='183' bci='2'/>
<method id='911' holder='860' name='append' return='860' arguments='789' flags='1' bytes='62' iicount='1'/>
<call method='911' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.198'/>
</parse>
<bc code='182' bci='25'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='914' holder='862' name='append' return='862' arguments='797' flags='1' bytes='8' iicount='346'/>
<call method='914' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='914'>
<bc code='183' bci='2'/>
<method id='916' holder='860' name='append' return='860' arguments='797' flags='1' bytes='50' compile_id='10' compiler='C1' level='3' iicount='418'/>
<call method='916' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.199'/>
</parse>
<bc code='182' bci='29'/>
<call method='909' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='909'>
<bc code='183' bci='2'/>
<call method='911' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.199'/>
</parse>
<bc code='182' bci='32'/>
<method id='918' holder='862' name='toString' return='797' flags='1' bytes='17' iicount='177'/>
<call method='918' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='918'>
<bc code='183' bci='13'/>
<method id='920' holder='797' name='&lt;init&gt;' return='791' arguments='888 789 789' flags='1' bytes='82' compile_id='9' compiler='C1' level='3' iicount='472'/>
<call method='920' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.199'/>
</parse>
<bc code='183' bci='35'/>
<klass id='902' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='922' holder='902' name='&lt;init&gt;' return='791' arguments='797' flags='1' bytes='6' iicount='1'/>
<call method='922' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='924' name='java/lang/Math' flags='17'/>
<method id='925' holder='924' name='min' return='789' arguments='789 789' flags='9' bytes='11' compile_id='7' compiler='C1' level='3' iicount='1441'/>
<call method='925' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='925'>
<parse_done stamp='0.199'/>
</parse>
<bc code='184' bci='57'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='927' holder='802' name='arraycopy' return='791' arguments='796 789 796 789 789' flags='265' bytes='0' compile_id='8' compile_kind='c2n' level='0' iicount='640'/>
<call method='927' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.199'/>
</parse>
<phase name='optimize_blocks' stamp='0.199'>
<phase_done name='optimize_blocks' stamp='0.199'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.199'>
<phase_done name='rangeCheckElimination' stamp='0.199'/>
</phase>
<phase name='optimize_null_checks' stamp='0.199'>
<phase_done name='optimize_null_checks' stamp='0.199'/>
</phase>
<phase_done name='buildIR' stamp='0.199'/>
</phase>
<phase name='emit_lir' stamp='0.199'>
<phase name='lirGeneration' stamp='0.199'>
<phase_done name='lirGeneration' stamp='0.199'/>
</phase>
<phase name='linearScan' stamp='0.199'>
<phase_done name='linearScan' stamp='0.199'/>
</phase>
<phase_done name='emit_lir' stamp='0.199'/>
</phase>
<phase name='codeemit' stamp='0.199'>
<phase_done name='codeemit' stamp='0.199'/>
</phase>
<phase name='codeinstall' stamp='0.199'>
<phase_done name='codeinstall' stamp='0.203'/>
</phase>
<code_cache total_blobs='275' nmethods='35' adapters='171' free_code_cache='334366976'/>
<task_done success='1' nmsize='2360' count='511' inlined_bytes='72' stamp='0.203'/>
</task>
<task compile_id='43' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='160' backedge_count='8627' iicount='160' level='3' stamp='0.203'>
<phase name='buildIR' stamp='0.203'>
<type id='789' name='int'/>
<klass id='888' name='[C' flags='1041'/>
<klass id='891' name='[B' flags='1041'/>
<klass id='899' name='sun/nio/cs/UTF_8$Encoder' flags='26'/>
<method id='900' holder='899' name='encode' return='789' arguments='888 789 789 891' flags='1' bytes='359' iicount='160'/>
<parse method='900'  stamp='0.203'>
<bc code='184' bci='14'/>
<klass id='902' name='java/lang/Math' flags='17'/>
<method id='903' holder='902' name='min' return='789' arguments='789 789' flags='9' bytes='11' compile_id='7' compiler='C1' level='3' iicount='1524'/>
<call method='903' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<parse_done stamp='0.203'/>
</parse>
<bc code='184' bci='139'/>
<type id='783' name='boolean'/>
<type id='784' name='char'/>
<klass id='877' name='java/lang/Character' flags='17'/>
<method id='905' holder='877' name='isSurrogate' return='783' arguments='784' flags='9' bytes='18' iicount='1'/>
<call method='905' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='905'>
<parse_done stamp='0.203'/>
</parse>
<bc code='183' bci='157'/>
<type id='791' name='void'/>
<klass id='907' name='sun/nio/cs/Surrogate$Parser' unloaded='1'/>
<method id='908' holder='907' name='&lt;init&gt;' return='791' unloaded='1'/>
<call method='908' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='175'/>
<method id='909' holder='907' name='parse' return='789' arguments='784 888 789 789' unloaded='1'/>
<call method='909' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='186'/>
<klass id='911' name='java/nio/charset/CodingErrorAction' flags='1'/>
<klass id='910' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<method id='912' holder='910' name='malformedInputAction' return='911' flags='1' bytes='5' iicount='1'/>
<call method='912' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='912'>
<parse_done stamp='0.204'/>
</parse>
<parse_done stamp='0.204'/>
</parse>
<phase name='optimize_blocks' stamp='0.204'>
<phase_done name='optimize_blocks' stamp='0.204'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.204'>
<phase_done name='rangeCheckElimination' stamp='0.204'/>
</phase>
<phase name='optimize_null_checks' stamp='0.204'>
<phase_done name='optimize_null_checks' stamp='0.204'/>
</phase>
<phase_done name='buildIR' stamp='0.204'/>
</phase>
<phase name='emit_lir' stamp='0.204'>
<phase name='lirGeneration' stamp='0.204'>
<phase_done name='lirGeneration' stamp='0.204'/>
</phase>
<phase name='linearScan' stamp='0.204'>
<phase_done name='linearScan' stamp='0.204'/>
</phase>
<phase_done name='emit_lir' stamp='0.204'/>
</phase>
<phase name='codeemit' stamp='0.204'>
<phase_done name='codeemit' stamp='0.204'/>
</phase>
<phase name='codeinstall' stamp='0.204'>
<phase_done name='codeinstall' stamp='0.215'/>
</phase>
<code_cache total_blobs='276' nmethods='36' adapters='171' free_code_cache='334360704'/>
<task_done success='1' nmsize='3576' count='274' backedge_count='13083' inlined_bytes='34' stamp='0.215'/>
</task>
<task compile_id='46' method='java/net/URL getHost ()Ljava/lang/String;' bytes='5' count='209' iicount='209' level='1' stamp='0.215'>
<phase name='buildIR' stamp='0.215'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='868' name='java/net/URL' flags='17'/>
<method id='899' holder='868' name='getHost' return='797' flags='1' bytes='5' iicount='209'/>
<parse method='899'  stamp='0.215'>
<parse_done stamp='0.215'/>
</parse>
<phase name='optimize_blocks' stamp='0.215'>
<phase_done name='optimize_blocks' stamp='0.215'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.215'>
<phase_done name='rangeCheckElimination' stamp='0.215'/>
</phase>
<phase name='optimize_null_checks' stamp='0.215'>
<phase_done name='optimize_null_checks' stamp='0.215'/>
</phase>
<phase_done name='buildIR' stamp='0.215'/>
</phase>
<phase name='emit_lir' stamp='0.215'>
<phase name='lirGeneration' stamp='0.215'>
<phase_done name='lirGeneration' stamp='0.215'/>
</phase>
<phase name='linearScan' stamp='0.215'>
<phase_done name='linearScan' stamp='0.215'/>
</phase>
<phase_done name='emit_lir' stamp='0.215'/>
</phase>
<phase name='codeemit' stamp='0.215'>
<phase_done name='codeemit' stamp='0.215'/>
</phase>
<phase name='codeinstall' stamp='0.215'>
<phase_done name='codeinstall' stamp='0.215'/>
</phase>
<code_cache total_blobs='277' nmethods='37' adapters='171' free_code_cache='334359936'/>
<task_done success='1' nmsize='272' count='217' stamp='0.215'/>
</task>
<task compile_id='49' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='545' iicount='545' level='3' stamp='0.215'>
<phase name='buildIR' stamp='0.215'>
<klass id='900' name='java/util/concurrent/ConcurrentHashMap$Node' flags='8'/>
<klass id='901' name='[Ljava/util/concurrent/ConcurrentHashMap$Node;' flags='1040'/>
<type id='789' name='int'/>
<klass id='899' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='902' holder='899' name='tabAt' return='900' arguments='901 789' flags='24' bytes='21' iicount='545'/>
<parse method='902'  stamp='0.215'>
<bc code='182' bci='14'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<type id='790' name='long'/>
<klass id='863' name='sun/misc/Unsafe' flags='17'/>
<method id='907' holder='863' name='getObjectVolatile' return='796' arguments='796 790' flags='257' bytes='0' iicount='545'/>
<call method='907' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.215'/>
</parse>
<phase name='optimize_blocks' stamp='0.215'>
<phase_done name='optimize_blocks' stamp='0.215'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.215'>
<phase_done name='rangeCheckElimination' stamp='0.215'/>
</phase>
<phase name='optimize_null_checks' stamp='0.215'>
<phase_done name='optimize_null_checks' stamp='0.215'/>
</phase>
<phase_done name='buildIR' stamp='0.215'/>
</phase>
<phase name='emit_lir' stamp='0.215'>
<phase name='lirGeneration' stamp='0.215'>
<phase_done name='lirGeneration' stamp='0.215'/>
</phase>
<phase name='linearScan' stamp='0.215'>
<phase_done name='linearScan' stamp='0.215'/>
</phase>
<phase_done name='emit_lir' stamp='0.215'/>
</phase>
<phase name='codeemit' stamp='0.215'>
<phase_done name='codeemit' stamp='0.215'/>
</phase>
<phase name='codeinstall' stamp='0.215'>
<phase_done name='codeinstall' stamp='0.217'/>
</phase>
<code_cache total_blobs='278' nmethods='38' adapters='171' free_code_cache='334358464'/>
<task_done success='1' nmsize='912' count='545' stamp='0.217'/>
</task>
<task compile_id='42' method='java/net/URL getProtocol ()Ljava/lang/String;' bytes='5' count='219' iicount='219' level='1' stamp='0.217'>
<phase name='buildIR' stamp='0.217'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='868' name='java/net/URL' flags='17'/>
<method id='899' holder='868' name='getProtocol' return='797' flags='1' bytes='5' iicount='219'/>
<parse method='899'  stamp='0.217'>
<parse_done stamp='0.217'/>
</parse>
<phase name='optimize_blocks' stamp='0.217'>
<phase_done name='optimize_blocks' stamp='0.217'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.217'>
<phase_done name='rangeCheckElimination' stamp='0.217'/>
</phase>
<phase name='optimize_null_checks' stamp='0.217'>
<phase_done name='optimize_null_checks' stamp='0.217'/>
</phase>
<phase_done name='buildIR' stamp='0.217'/>
</phase>
<phase name='emit_lir' stamp='0.217'>
<phase name='lirGeneration' stamp='0.217'>
<phase_done name='lirGeneration' stamp='0.217'/>
</phase>
<phase name='linearScan' stamp='0.217'>
<phase_done name='linearScan' stamp='0.217'/>
</phase>
<phase_done name='emit_lir' stamp='0.217'/>
</phase>
<phase name='codeemit' stamp='0.217'>
<phase_done name='codeemit' stamp='0.217'/>
</phase>
<phase name='codeinstall' stamp='0.217'>
<phase_done name='codeinstall' stamp='0.217'/>
</phase>
<code_cache total_blobs='279' nmethods='39' adapters='171' free_code_cache='334357696'/>
<task_done success='1' nmsize='272' count='219' stamp='0.217'/>
</task>
<task compile_id='45' method='java/net/URL getPath ()Ljava/lang/String;' bytes='5' count='182' iicount='182' level='1' stamp='0.217'>
<phase name='buildIR' stamp='0.217'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='868' name='java/net/URL' flags='17'/>
<method id='899' holder='868' name='getPath' return='797' flags='1' bytes='5' iicount='182'/>
<parse method='899'  stamp='0.217'>
<parse_done stamp='0.217'/>
</parse>
<phase name='optimize_blocks' stamp='0.217'>
<phase_done name='optimize_blocks' stamp='0.217'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.217'>
<phase_done name='rangeCheckElimination' stamp='0.217'/>
</phase>
<phase name='optimize_null_checks' stamp='0.217'>
<phase_done name='optimize_null_checks' stamp='0.217'/>
</phase>
<phase_done name='buildIR' stamp='0.217'/>
</phase>
<phase name='emit_lir' stamp='0.217'>
<phase name='lirGeneration' stamp='0.217'>
<phase_done name='lirGeneration' stamp='0.217'/>
</phase>
<phase name='linearScan' stamp='0.217'>
<phase_done name='linearScan' stamp='0.217'/>
</phase>
<phase_done name='emit_lir' stamp='0.217'/>
</phase>
<phase name='codeemit' stamp='0.217'>
<phase_done name='codeemit' stamp='0.217'/>
</phase>
<phase name='codeinstall' stamp='0.217'>
<phase_done name='codeinstall' stamp='0.218'/>
</phase>
<code_cache total_blobs='280' nmethods='40' adapters='171' free_code_cache='334356928'/>
<task_done success='1' nmsize='272' count='182' stamp='0.218'/>
</task>
<task compile_id='47' method='java/net/URL getAuthority ()Ljava/lang/String;' bytes='5' count='174' iicount='174' level='1' stamp='0.218'>
<phase name='buildIR' stamp='0.218'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='868' name='java/net/URL' flags='17'/>
<method id='899' holder='868' name='getAuthority' return='797' flags='1' bytes='5' iicount='174'/>
<parse method='899'  stamp='0.218'>
<parse_done stamp='0.218'/>
</parse>
<phase name='optimize_blocks' stamp='0.218'>
<phase_done name='optimize_blocks' stamp='0.218'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.218'>
<phase_done name='rangeCheckElimination' stamp='0.218'/>
</phase>
<phase name='optimize_null_checks' stamp='0.218'>
<phase_done name='optimize_null_checks' stamp='0.218'/>
</phase>
<phase_done name='buildIR' stamp='0.218'/>
</phase>
<phase name='emit_lir' stamp='0.218'>
<phase name='lirGeneration' stamp='0.218'>
<phase_done name='lirGeneration' stamp='0.218'/>
</phase>
<phase name='linearScan' stamp='0.218'>
<phase_done name='linearScan' stamp='0.218'/>
</phase>
<phase_done name='emit_lir' stamp='0.218'/>
</phase>
<phase name='codeemit' stamp='0.218'>
<phase_done name='codeemit' stamp='0.218'/>
</phase>
<phase name='codeinstall' stamp='0.218'>
<phase_done name='codeinstall' stamp='0.218'/>
</phase>
<code_cache total_blobs='281' nmethods='41' adapters='171' free_code_cache='334356160'/>
<task_done success='1' nmsize='272' count='174' stamp='0.218'/>
</task>
<task compile_id='48' method='java/net/URL getRef ()Ljava/lang/String;' bytes='5' count='140' iicount='140' level='1' stamp='0.218'>
<phase name='buildIR' stamp='0.218'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='868' name='java/net/URL' flags='17'/>
<method id='899' holder='868' name='getRef' return='797' flags='1' bytes='5' iicount='140'/>
<parse method='899'  stamp='0.218'>
<parse_done stamp='0.218'/>
</parse>
<phase name='optimize_blocks' stamp='0.218'>
<phase_done name='optimize_blocks' stamp='0.218'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.218'>
<phase_done name='rangeCheckElimination' stamp='0.218'/>
</phase>
<phase name='optimize_null_checks' stamp='0.218'>
<phase_done name='optimize_null_checks' stamp='0.218'/>
</phase>
<phase_done name='buildIR' stamp='0.218'/>
</phase>
<phase name='emit_lir' stamp='0.218'>
<phase name='lirGeneration' stamp='0.218'>
<phase_done name='lirGeneration' stamp='0.218'/>
</phase>
<phase name='linearScan' stamp='0.218'>
<phase_done name='linearScan' stamp='0.219'/>
</phase>
<phase_done name='emit_lir' stamp='0.219'/>
</phase>
<phase name='codeemit' stamp='0.219'>
<phase_done name='codeemit' stamp='0.219'/>
</phase>
<phase name='codeinstall' stamp='0.219'>
<phase_done name='codeinstall' stamp='0.219'/>
</phase>
<code_cache total_blobs='282' nmethods='42' adapters='171' free_code_cache='334355392'/>
<task_done success='1' nmsize='272' count='140' stamp='0.219'/>
</task>
<task compile_id='50' method='java/net/URL getFile ()Ljava/lang/String;' bytes='5' count='132' iicount='132' level='1' stamp='0.219'>
<phase name='buildIR' stamp='0.219'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='868' name='java/net/URL' flags='17'/>
<method id='899' holder='868' name='getFile' return='797' flags='1' bytes='5' iicount='132'/>
<parse method='899'  stamp='0.219'>
<parse_done stamp='0.219'/>
</parse>
<phase name='optimize_blocks' stamp='0.219'>
<phase_done name='optimize_blocks' stamp='0.219'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.219'>
<phase_done name='rangeCheckElimination' stamp='0.219'/>
</phase>
<phase name='optimize_null_checks' stamp='0.219'>
<phase_done name='optimize_null_checks' stamp='0.219'/>
</phase>
<phase_done name='buildIR' stamp='0.219'/>
</phase>
<phase name='emit_lir' stamp='0.219'>
<phase name='lirGeneration' stamp='0.219'>
<phase_done name='lirGeneration' stamp='0.219'/>
</phase>
<phase name='linearScan' stamp='0.219'>
<phase_done name='linearScan' stamp='0.219'/>
</phase>
<phase_done name='emit_lir' stamp='0.219'/>
</phase>
<phase name='codeemit' stamp='0.219'>
<phase_done name='codeemit' stamp='0.219'/>
</phase>
<phase name='codeinstall' stamp='0.219'>
<phase_done name='codeinstall' stamp='0.220'/>
</phase>
<code_cache total_blobs='283' nmethods='43' adapters='171' free_code_cache='334354624'/>
<task_done success='1' nmsize='272' count='138' stamp='0.220'/>
</task>
<task compile_id='44' method='java/util/ArrayList size ()I' bytes='5' count='233' iicount='233' level='1' stamp='0.220'>
<phase name='buildIR' stamp='0.220'>
<type id='789' name='int'/>
<klass id='899' name='java/util/ArrayList' flags='1'/>
<method id='900' holder='899' name='size' return='789' flags='1' bytes='5' iicount='233'/>
<parse method='900'  stamp='0.220'>
<parse_done stamp='0.220'/>
</parse>
<phase name='optimize_blocks' stamp='0.220'>
<phase_done name='optimize_blocks' stamp='0.220'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.220'>
<phase_done name='rangeCheckElimination' stamp='0.220'/>
</phase>
<phase name='optimize_null_checks' stamp='0.220'>
<phase_done name='optimize_null_checks' stamp='0.220'/>
</phase>
<phase_done name='buildIR' stamp='0.220'/>
</phase>
<phase name='emit_lir' stamp='0.220'>
<phase name='lirGeneration' stamp='0.220'>
<phase_done name='lirGeneration' stamp='0.220'/>
</phase>
<phase name='linearScan' stamp='0.220'>
<phase_done name='linearScan' stamp='0.220'/>
</phase>
<phase_done name='emit_lir' stamp='0.220'/>
</phase>
<phase name='codeemit' stamp='0.220'>
<phase_done name='codeemit' stamp='0.220'/>
</phase>
<phase name='codeinstall' stamp='0.220'>
<phase_done name='codeinstall' stamp='0.220'/>
</phase>
<code_cache total_blobs='284' nmethods='44' adapters='171' free_code_cache='334353856'/>
<task_done success='1' nmsize='272' count='233' stamp='0.220'/>
</task>
<task compile_id='40' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='256' iicount='256' level='1' stamp='0.220'>
<phase name='buildIR' stamp='0.220'>
<type id='789' name='int'/>
<klass id='899' name='java/lang/ThreadLocal' flags='1'/>
<method id='900' holder='899' name='access$400' return='789' arguments='899' flags='4104' bytes='5' iicount='256'/>
<parse method='900'  stamp='0.220'>
<parse_done stamp='0.220'/>
</parse>
<phase name='optimize_blocks' stamp='0.220'>
<phase_done name='optimize_blocks' stamp='0.220'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.220'>
<phase_done name='rangeCheckElimination' stamp='0.220'/>
</phase>
<phase name='optimize_null_checks' stamp='0.220'>
<phase_done name='optimize_null_checks' stamp='0.220'/>
</phase>
<phase_done name='buildIR' stamp='0.220'/>
</phase>
<phase name='emit_lir' stamp='0.220'>
<phase name='lirGeneration' stamp='0.220'>
<phase_done name='lirGeneration' stamp='0.220'/>
</phase>
<phase name='linearScan' stamp='0.220'>
<phase_done name='linearScan' stamp='0.220'/>
</phase>
<phase_done name='emit_lir' stamp='0.220'/>
</phase>
<phase name='codeemit' stamp='0.220'>
<phase_done name='codeemit' stamp='0.220'/>
</phase>
<phase name='codeinstall' stamp='0.220'>
<phase_done name='codeinstall' stamp='0.221'/>
</phase>
<code_cache total_blobs='285' nmethods='45' adapters='171' free_code_cache='334353088'/>
<task_done success='1' nmsize='240' count='256' stamp='0.221'/>
</task>
<task compile_id='51' method='java/util/Vector size ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.221'>
<phase name='buildIR' stamp='0.221'>
<type id='789' name='int'/>
<klass id='899' name='java/util/Vector' flags='1'/>
<method id='900' holder='899' name='size' return='789' flags='33' bytes='5' iicount='128'/>
<parse method='900'  stamp='0.221'>
<parse_done stamp='0.221'/>
</parse>
<phase name='optimize_blocks' stamp='0.221'>
<phase_done name='optimize_blocks' stamp='0.221'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.221'>
<phase_done name='rangeCheckElimination' stamp='0.221'/>
</phase>
<phase name='optimize_null_checks' stamp='0.221'>
<phase_done name='optimize_null_checks' stamp='0.221'/>
</phase>
<phase_done name='buildIR' stamp='0.221'/>
</phase>
<phase name='emit_lir' stamp='0.221'>
<phase name='lirGeneration' stamp='0.221'>
<phase_done name='lirGeneration' stamp='0.221'/>
</phase>
<phase name='linearScan' stamp='0.221'>
<phase_done name='linearScan' stamp='0.221'/>
</phase>
<phase_done name='emit_lir' stamp='0.221'/>
</phase>
<phase name='codeemit' stamp='0.221'>
<phase_done name='codeemit' stamp='0.221'/>
</phase>
<phase name='codeinstall' stamp='0.221'>
<phase_done name='codeinstall' stamp='0.237'/>
</phase>
<code_cache total_blobs='286' nmethods='46' adapters='171' free_code_cache='334351872'/>
<task_done success='1' nmsize='624' count='130' stamp='0.237'/>
</task>
<task compile_id='53' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='401' backedge_count='891' iicount='401' level='3' stamp='0.237'>
<phase name='buildIR' stamp='0.237'>
<type id='783' name='boolean'/>
<klass id='797' name='java/lang/String' flags='17'/>
<type id='789' name='int'/>
<method id='899' holder='797' name='startsWith' return='783' arguments='797 789' flags='1' bytes='72' iicount='401'/>
<parse method='899'  stamp='0.237'>
<parse_done stamp='0.237'/>
</parse>
<phase name='optimize_blocks' stamp='0.237'>
<phase_done name='optimize_blocks' stamp='0.237'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.237'>
<phase_done name='rangeCheckElimination' stamp='0.237'/>
</phase>
<phase name='optimize_null_checks' stamp='0.237'>
<phase_done name='optimize_null_checks' stamp='0.237'/>
</phase>
<phase_done name='buildIR' stamp='0.237'/>
</phase>
<phase name='emit_lir' stamp='0.237'>
<phase name='lirGeneration' stamp='0.237'>
<phase_done name='lirGeneration' stamp='0.237'/>
</phase>
<phase name='linearScan' stamp='0.237'>
<phase_done name='linearScan' stamp='0.237'/>
</phase>
<phase_done name='emit_lir' stamp='0.237'/>
</phase>
<phase name='codeemit' stamp='0.237'>
<phase_done name='codeemit' stamp='0.237'/>
</phase>
<phase name='codeinstall' stamp='0.237'>
<phase_done name='codeinstall' stamp='0.239'/>
</phase>
<code_cache total_blobs='287' nmethods='47' adapters='171' free_code_cache='334349952'/>
<task_done success='1' nmsize='816' count='406' backedge_count='892' stamp='0.239'/>
</task>
<task compile_id='52' method='java/util/Arrays copyOf ([BI)[B' bytes='19' count='414' iicount='414' level='3' stamp='0.239'>
<phase name='buildIR' stamp='0.239'>
<klass id='891' name='[B' flags='1041'/>
<type id='789' name='int'/>
<klass id='899' name='java/util/Arrays' flags='1'/>
<method id='900' holder='899' name='copyOf' return='891' arguments='891 789' flags='9' bytes='19' iicount='414'/>
<parse method='900'  stamp='0.239'>
<bc code='184' bci='11'/>
<klass id='902' name='java/lang/Math' flags='17'/>
<method id='903' holder='902' name='min' return='789' arguments='789 789' flags='9' bytes='11' compile_id='7' compiler='C1' level='3' iicount='2374'/>
<call method='903' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<parse_done stamp='0.239'/>
</parse>
<bc code='184' bci='14'/>
<type id='791' name='void'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='905' holder='802' name='arraycopy' return='791' arguments='796 789 796 789 789' flags='265' bytes='0' compile_id='8' compile_kind='c2n' level='0' iicount='640'/>
<call method='905' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.239'/>
</parse>
<phase name='optimize_blocks' stamp='0.239'>
<phase_done name='optimize_blocks' stamp='0.239'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.239'>
<phase_done name='rangeCheckElimination' stamp='0.239'/>
</phase>
<phase name='optimize_null_checks' stamp='0.239'>
<phase_done name='optimize_null_checks' stamp='0.239'/>
</phase>
<phase_done name='buildIR' stamp='0.239'/>
</phase>
<phase name='emit_lir' stamp='0.239'>
<phase name='lirGeneration' stamp='0.239'>
<phase_done name='lirGeneration' stamp='0.239'/>
</phase>
<phase name='linearScan' stamp='0.239'>
<phase_done name='linearScan' stamp='0.239'/>
</phase>
<phase_done name='emit_lir' stamp='0.239'/>
</phase>
<phase name='codeemit' stamp='0.239'>
<phase_done name='codeemit' stamp='0.239'/>
</phase>
<phase name='codeinstall' stamp='0.239'>
<phase_done name='codeinstall' stamp='0.241'/>
</phase>
<code_cache total_blobs='288' nmethods='48' adapters='171' free_code_cache='334348352'/>
<task_done success='1' nmsize='808' count='414' inlined_bytes='11' stamp='0.241'/>
</task>
<task compile_id='55' method='java/nio/Buffer checkIndex (I)I' bytes='22' count='260' iicount='260' level='3' stamp='0.244'>
<phase name='buildIR' stamp='0.244'>
<type id='789' name='int'/>
<klass id='875' name='java/nio/Buffer' flags='1025'/>
<method id='899' holder='875' name='checkIndex' return='789' arguments='789' flags='16' bytes='22' iicount='260'/>
<parse method='899'  stamp='0.244'>
<bc code='183' bci='16'/>
<type id='791' name='void'/>
<klass id='901' name='java/lang/IndexOutOfBoundsException' flags='1'/>
<method id='902' holder='901' name='&lt;init&gt;' return='791' flags='1' bytes='5' iicount='1'/>
<call method='902' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.245'/>
</parse>
<phase name='optimize_blocks' stamp='0.245'>
<phase_done name='optimize_blocks' stamp='0.245'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.245'>
<phase_done name='rangeCheckElimination' stamp='0.245'/>
</phase>
<phase name='optimize_null_checks' stamp='0.245'>
<phase_done name='optimize_null_checks' stamp='0.245'/>
</phase>
<phase_done name='buildIR' stamp='0.245'/>
</phase>
<phase name='emit_lir' stamp='0.245'>
<phase name='lirGeneration' stamp='0.245'>
<phase_done name='lirGeneration' stamp='0.245'/>
</phase>
<phase name='linearScan' stamp='0.245'>
<phase_done name='linearScan' stamp='0.245'/>
</phase>
<phase_done name='emit_lir' stamp='0.245'/>
</phase>
<phase name='codeemit' stamp='0.245'>
<phase_done name='codeemit' stamp='0.245'/>
</phase>
<phase name='codeinstall' stamp='0.245'>
<phase_done name='codeinstall' stamp='0.246'/>
</phase>
<code_cache total_blobs='290' nmethods='50' adapters='171' free_code_cache='334346048'/>
<task_done success='1' nmsize='648' count='286' stamp='0.246'/>
</task>
<task compile_id='56' method='java/nio/DirectLongBufferU ix (I)J' bytes='10' count='292' iicount='292' level='3' stamp='0.246'>
<phase name='buildIR' stamp='0.246'>
<type id='790' name='long'/>
<type id='789' name='int'/>
<klass id='899' name='java/nio/DirectLongBufferU' flags='0'/>
<method id='900' holder='899' name='ix' return='790' arguments='789' flags='2' bytes='10' iicount='292'/>
<parse method='900'  stamp='0.246'>
<parse_done stamp='0.246'/>
</parse>
<phase name='optimize_blocks' stamp='0.246'>
<phase_done name='optimize_blocks' stamp='0.246'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.246'>
<phase_done name='rangeCheckElimination' stamp='0.246'/>
</phase>
<phase name='optimize_null_checks' stamp='0.246'>
<phase_done name='optimize_null_checks' stamp='0.246'/>
</phase>
<phase_done name='buildIR' stamp='0.246'/>
</phase>
<phase name='emit_lir' stamp='0.246'>
<phase name='lirGeneration' stamp='0.246'>
<phase_done name='lirGeneration' stamp='0.246'/>
</phase>
<phase name='linearScan' stamp='0.246'>
<phase_done name='linearScan' stamp='0.246'/>
</phase>
<phase_done name='emit_lir' stamp='0.246'/>
</phase>
<phase name='codeemit' stamp='0.246'>
<phase_done name='codeemit' stamp='0.246'/>
</phase>
<phase name='codeinstall' stamp='0.246'>
<phase_done name='codeinstall' stamp='0.247'/>
</phase>
<code_cache total_blobs='291' nmethods='51' adapters='171' free_code_cache='334345152'/>
<task_done success='1' nmsize='368' count='298' stamp='0.247'/>
</task>
<task compile_id='57' method='java/security/ProtectionDomain getCodeSource ()Ljava/security/CodeSource;' bytes='5' count='140' iicount='140' level='1' stamp='0.247'>
<phase name='buildIR' stamp='0.247'>
<klass id='873' name='java/security/CodeSource' flags='1'/>
<klass id='809' name='java/security/ProtectionDomain' flags='1'/>
<method id='899' holder='809' name='getCodeSource' return='873' flags='17' bytes='5' iicount='140'/>
<parse method='899'  stamp='0.247'>
<parse_done stamp='0.247'/>
</parse>
<phase name='optimize_blocks' stamp='0.247'>
<phase_done name='optimize_blocks' stamp='0.247'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.247'>
<phase_done name='rangeCheckElimination' stamp='0.247'/>
</phase>
<phase name='optimize_null_checks' stamp='0.247'>
<phase_done name='optimize_null_checks' stamp='0.247'/>
</phase>
<phase_done name='buildIR' stamp='0.247'/>
</phase>
<phase name='emit_lir' stamp='0.247'>
<phase name='lirGeneration' stamp='0.247'>
<phase_done name='lirGeneration' stamp='0.247'/>
</phase>
<phase name='linearScan' stamp='0.247'>
<phase_done name='linearScan' stamp='0.247'/>
</phase>
<phase_done name='emit_lir' stamp='0.247'/>
</phase>
<phase name='codeemit' stamp='0.247'>
<phase_done name='codeemit' stamp='0.247'/>
</phase>
<phase name='codeinstall' stamp='0.247'>
<phase_done name='codeinstall' stamp='0.248'/>
</phase>
<code_cache total_blobs='292' nmethods='52' adapters='171' free_code_cache='334344384'/>
<task_done success='1' nmsize='272' count='140' stamp='0.248'/>
</task>
<task compile_id='58' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='119' backedge_count='5339' iicount='119' level='3' stamp='0.248'>
<phase name='buildIR' stamp='0.248'>
<type id='789' name='int'/>
<klass id='888' name='[C' flags='1041'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='indexOf' return='789' arguments='888 789 789 888 789 789 789' flags='8' bytes='166' iicount='119'/>
<parse method='899'  stamp='0.248'>
<parse_done stamp='0.249'/>
</parse>
<phase name='optimize_blocks' stamp='0.249'>
<phase_done name='optimize_blocks' stamp='0.249'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.249'>
<phase_done name='rangeCheckElimination' stamp='0.249'/>
</phase>
<phase name='optimize_null_checks' stamp='0.249'>
<phase_done name='optimize_null_checks' stamp='0.249'/>
</phase>
<phase_done name='buildIR' stamp='0.249'/>
</phase>
<phase name='emit_lir' stamp='0.249'>
<phase name='lirGeneration' stamp='0.249'>
<phase_done name='lirGeneration' stamp='0.249'/>
</phase>
<phase name='linearScan' stamp='0.249'>
<phase_done name='linearScan' stamp='0.249'/>
</phase>
<phase_done name='emit_lir' stamp='0.249'/>
</phase>
<phase name='codeemit' stamp='0.249'>
<phase_done name='codeemit' stamp='0.249'/>
</phase>
<phase name='codeinstall' stamp='0.249'>
<phase_done name='codeinstall' stamp='0.251'/>
</phase>
<code_cache total_blobs='293' nmethods='53' adapters='171' free_code_cache='334341120'/>
<task_done success='1' nmsize='1616' count='125' backedge_count='5538' stamp='0.251'/>
</task>
<task compile_id='59' method='java/nio/charset/CharsetEncoder maxBytesPerChar ()F' bytes='5' count='414' iicount='414' level='3' stamp='0.251'>
<phase name='buildIR' stamp='0.251'>
<type id='785' name='float'/>
<klass id='899' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<method id='900' holder='899' name='maxBytesPerChar' return='785' flags='17' bytes='5' iicount='414'/>
<parse method='900'  stamp='0.251'>
<parse_done stamp='0.251'/>
</parse>
<phase name='optimize_blocks' stamp='0.251'>
<phase_done name='optimize_blocks' stamp='0.251'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.251'>
<phase_done name='rangeCheckElimination' stamp='0.251'/>
</phase>
<phase name='optimize_null_checks' stamp='0.251'>
<phase_done name='optimize_null_checks' stamp='0.251'/>
</phase>
<phase_done name='buildIR' stamp='0.251'/>
</phase>
<phase name='emit_lir' stamp='0.251'>
<phase name='lirGeneration' stamp='0.251'>
<phase_done name='lirGeneration' stamp='0.251'/>
</phase>
<phase name='linearScan' stamp='0.251'>
<phase_done name='linearScan' stamp='0.251'/>
</phase>
<phase_done name='emit_lir' stamp='0.251'/>
</phase>
<phase name='codeemit' stamp='0.251'>
<phase_done name='codeemit' stamp='0.251'/>
</phase>
<phase name='codeinstall' stamp='0.251'>
<phase_done name='codeinstall' stamp='0.252'/>
</phase>
<code_cache total_blobs='294' nmethods='54' adapters='171' free_code_cache='334340224'/>
<task_done success='1' nmsize='336' count='414' stamp='0.252'/>
</task>
<task compile_id='60' method='java/lang/Character toLowerCase (C)C' bytes='6' count='399' iicount='399' level='3' stamp='0.252'>
<phase name='buildIR' stamp='0.252'>
<type id='784' name='char'/>
<klass id='877' name='java/lang/Character' flags='17'/>
<method id='899' holder='877' name='toLowerCase' return='784' arguments='784' flags='9' bytes='6' iicount='399'/>
<parse method='899'  stamp='0.252'>
<bc code='184' bci='1'/>
<type id='789' name='int'/>
<method id='901' holder='877' name='toLowerCase' return='789' arguments='789' flags='9' bytes='9' iicount='399'/>
<call method='901' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<bc code='184' bci='1'/>
<klass id='903' name='java/lang/CharacterData' flags='1024'/>
<method id='904' holder='903' name='of' return='903' arguments='789' flags='24' bytes='120' compile_id='36' compiler='C1' level='3' iicount='2949'/>
<call method='904' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='906' holder='903' name='toLowerCase' return='789' arguments='789' flags='1024' bytes='0' iicount='1'/>
<call method='906' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.252'/>
</parse>
<parse_done stamp='0.252'/>
</parse>
<phase name='optimize_blocks' stamp='0.252'>
<phase_done name='optimize_blocks' stamp='0.252'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.252'>
<phase_done name='rangeCheckElimination' stamp='0.252'/>
</phase>
<phase name='optimize_null_checks' stamp='0.252'>
<phase_done name='optimize_null_checks' stamp='0.252'/>
</phase>
<phase_done name='buildIR' stamp='0.252'/>
</phase>
<phase name='emit_lir' stamp='0.252'>
<phase name='lirGeneration' stamp='0.252'>
<phase_done name='lirGeneration' stamp='0.252'/>
</phase>
<phase name='linearScan' stamp='0.252'>
<phase_done name='linearScan' stamp='0.252'/>
</phase>
<phase_done name='emit_lir' stamp='0.252'/>
</phase>
<phase name='codeemit' stamp='0.252'>
<phase_done name='codeemit' stamp='0.252'/>
</phase>
<phase name='codeinstall' stamp='0.252'>
<phase_done name='codeinstall' stamp='0.254'/>
</phase>
<code_cache total_blobs='295' nmethods='55' adapters='171' free_code_cache='334338496'/>
<task_done success='1' nmsize='1016' count='403' inlined_bytes='9' stamp='0.254'/>
</task>
<task compile_id='64' method='java/lang/String toCharArray ()[C' bytes='25' count='392' iicount='392' level='3' stamp='0.254'>
<phase name='buildIR' stamp='0.254'>
<klass id='888' name='[C' flags='1041'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='toCharArray' return='888' flags='1' bytes='25' iicount='392'/>
<parse method='899'  stamp='0.254'>
<bc code='184' bci='20'/>
<type id='791' name='void'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<type id='789' name='int'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='901' holder='802' name='arraycopy' return='791' arguments='796 789 796 789 789' flags='265' bytes='0' compile_id='8' compile_kind='c2n' level='0' iicount='640'/>
<call method='901' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.254'/>
</parse>
<phase name='optimize_blocks' stamp='0.254'>
<phase_done name='optimize_blocks' stamp='0.254'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.254'>
<phase_done name='rangeCheckElimination' stamp='0.254'/>
</phase>
<phase name='optimize_null_checks' stamp='0.254'>
<phase_done name='optimize_null_checks' stamp='0.254'/>
</phase>
<phase_done name='buildIR' stamp='0.254'/>
</phase>
<phase name='emit_lir' stamp='0.254'>
<phase name='lirGeneration' stamp='0.254'>
<phase_done name='lirGeneration' stamp='0.254'/>
</phase>
<phase name='linearScan' stamp='0.254'>
<phase_done name='linearScan' stamp='0.254'/>
</phase>
<phase_done name='emit_lir' stamp='0.254'/>
</phase>
<phase name='codeemit' stamp='0.254'>
<phase_done name='codeemit' stamp='0.254'/>
</phase>
<phase name='codeinstall' stamp='0.254'>
<phase_done name='codeinstall' stamp='0.255'/>
</phase>
<code_cache total_blobs='296' nmethods='56' adapters='171' free_code_cache='334337152'/>
<task_done success='1' nmsize='648' count='418' stamp='0.255'/>
</task>
<task compile_id='63' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='498' iicount='498' level='3' stamp='0.255'>
<phase name='buildIR' stamp='0.255'>
<klass id='862' name='java/lang/StringBuilder' flags='17'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='862' name='append' return='862' arguments='797' flags='1' bytes='8' iicount='498'/>
<parse method='899'  stamp='0.255'>
<bc code='183' bci='2'/>
<klass id='860' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='901' holder='860' name='append' return='860' arguments='797' flags='1' bytes='50' compile_id='10' compiler='C1' level='3' iicount='684'/>
<call method='901' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.255'/>
</parse>
<phase name='optimize_blocks' stamp='0.255'>
<phase_done name='optimize_blocks' stamp='0.255'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.255'>
<phase_done name='rangeCheckElimination' stamp='0.255'/>
</phase>
<phase name='optimize_null_checks' stamp='0.255'>
<phase_done name='optimize_null_checks' stamp='0.255'/>
</phase>
<phase_done name='buildIR' stamp='0.255'/>
</phase>
<phase name='emit_lir' stamp='0.255'>
<phase name='lirGeneration' stamp='0.255'>
<phase_done name='lirGeneration' stamp='0.255'/>
</phase>
<phase name='linearScan' stamp='0.255'>
<phase_done name='linearScan' stamp='0.255'/>
</phase>
<phase_done name='emit_lir' stamp='0.255'/>
</phase>
<phase name='codeemit' stamp='0.255'>
<phase_done name='codeemit' stamp='0.255'/>
</phase>
<phase name='codeinstall' stamp='0.255'>
<phase_done name='codeinstall' stamp='0.255'/>
</phase>
<code_cache total_blobs='297' nmethods='57' adapters='171' free_code_cache='334336192'/>
<task_done success='1' nmsize='392' count='502' stamp='0.255'/>
</task>
<task compile_id='61' method='java/lang/Character toLowerCase (I)I' bytes='9' count='419' iicount='419' level='3' stamp='0.255'>
<phase name='buildIR' stamp='0.255'>
<type id='789' name='int'/>
<klass id='877' name='java/lang/Character' flags='17'/>
<method id='899' holder='877' name='toLowerCase' return='789' arguments='789' flags='9' bytes='9' iicount='419'/>
<parse method='899'  stamp='0.256'>
<bc code='184' bci='1'/>
<klass id='902' name='java/lang/CharacterData' flags='1024'/>
<method id='903' holder='902' name='of' return='902' arguments='789' flags='24' bytes='120' compile_id='36' compiler='C1' level='3' iicount='3237'/>
<call method='903' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='905' holder='902' name='toLowerCase' return='789' arguments='789' flags='1024' bytes='0' iicount='1'/>
<call method='905' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.256'/>
</parse>
<phase name='optimize_blocks' stamp='0.256'>
<phase_done name='optimize_blocks' stamp='0.256'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.256'>
<phase_done name='rangeCheckElimination' stamp='0.256'/>
</phase>
<phase name='optimize_null_checks' stamp='0.256'>
<phase_done name='optimize_null_checks' stamp='0.256'/>
</phase>
<phase_done name='buildIR' stamp='0.256'/>
</phase>
<phase name='emit_lir' stamp='0.256'>
<phase name='lirGeneration' stamp='0.256'>
<phase_done name='lirGeneration' stamp='0.256'/>
</phase>
<phase name='linearScan' stamp='0.256'>
<phase_done name='linearScan' stamp='0.256'/>
</phase>
<phase_done name='emit_lir' stamp='0.256'/>
</phase>
<phase name='codeemit' stamp='0.256'>
<phase_done name='codeemit' stamp='0.256'/>
</phase>
<phase name='codeinstall' stamp='0.256'>
<phase_done name='codeinstall' stamp='0.256'/>
</phase>
<code_cache total_blobs='298' nmethods='58' adapters='171' free_code_cache='334334592'/>
<task_done success='1' nmsize='920' count='423' stamp='0.256'/>
</task>
<task compile_id='67' method='java/util/concurrent/ConcurrentHashMap setTabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V' bytes='19' count='426' iicount='426' level='3' stamp='0.256'>
<phase name='buildIR' stamp='0.257'>
<type id='791' name='void'/>
<klass id='901' name='[Ljava/util/concurrent/ConcurrentHashMap$Node;' flags='1040'/>
<type id='789' name='int'/>
<klass id='900' name='java/util/concurrent/ConcurrentHashMap$Node' flags='8'/>
<klass id='899' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='902' holder='899' name='setTabAt' return='791' arguments='901 789 900' flags='24' bytes='19' iicount='426'/>
<parse method='902'  stamp='0.257'>
<bc code='182' bci='15'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<type id='790' name='long'/>
<klass id='863' name='sun/misc/Unsafe' flags='17'/>
<method id='906' holder='863' name='putObjectVolatile' return='791' arguments='796 790 796' flags='257' bytes='0' iicount='426'/>
<call method='906' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.257'/>
</parse>
<phase name='optimize_blocks' stamp='0.257'>
<phase_done name='optimize_blocks' stamp='0.257'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.257'>
<phase_done name='rangeCheckElimination' stamp='0.257'/>
</phase>
<phase name='optimize_null_checks' stamp='0.257'>
<phase_done name='optimize_null_checks' stamp='0.257'/>
</phase>
<phase_done name='buildIR' stamp='0.257'/>
</phase>
<phase name='emit_lir' stamp='0.257'>
<phase name='lirGeneration' stamp='0.257'>
<phase_done name='lirGeneration' stamp='0.257'/>
</phase>
<phase name='linearScan' stamp='0.257'>
<phase_done name='linearScan' stamp='0.257'/>
</phase>
<phase_done name='emit_lir' stamp='0.257'/>
</phase>
<phase name='codeemit' stamp='0.257'>
<phase_done name='codeemit' stamp='0.257'/>
</phase>
<phase name='codeinstall' stamp='0.257'>
<phase_done name='codeinstall' stamp='0.257'/>
</phase>
<code_cache total_blobs='299' nmethods='59' adapters='171' free_code_cache='334333696'/>
<task_done success='1' nmsize='368' count='426' stamp='0.257'/>
</task>
<task compile_id='62' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='431' iicount='431' level='3' stamp='0.257'>
<phase name='buildIR' stamp='0.257'>
<type id='789' name='int'/>
<klass id='899' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='900' holder='899' name='toLowerCase' return='789' arguments='789' flags='0' bytes='39' iicount='431'/>
<parse method='900'  stamp='0.257'>
<bc code='182' bci='4'/>
<method id='902' holder='899' name='getProperties' return='789' arguments='789' flags='0' bytes='11' compile_id='37' compiler='C1' level='3' iicount='3324'/>
<call method='902' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='899'/>
<parse method='902'>
<parse_done stamp='0.257'/>
</parse>
<parse_done stamp='0.257'/>
</parse>
<phase name='optimize_blocks' stamp='0.257'>
<phase_done name='optimize_blocks' stamp='0.257'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.257'>
<phase_done name='rangeCheckElimination' stamp='0.257'/>
</phase>
<phase name='optimize_null_checks' stamp='0.257'>
<phase_done name='optimize_null_checks' stamp='0.257'/>
</phase>
<phase_done name='buildIR' stamp='0.257'/>
</phase>
<phase name='emit_lir' stamp='0.257'>
<phase name='lirGeneration' stamp='0.257'>
<phase_done name='lirGeneration' stamp='0.257'/>
</phase>
<phase name='linearScan' stamp='0.257'>
<phase_done name='linearScan' stamp='0.257'/>
</phase>
<phase_done name='emit_lir' stamp='0.257'/>
</phase>
<phase name='codeemit' stamp='0.257'>
<phase_done name='codeemit' stamp='0.257'/>
</phase>
<phase name='codeinstall' stamp='0.257'>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.258'/>
</phase>
<code_cache total_blobs='300' nmethods='60' adapters='171' free_code_cache='334332224'/>
<task_done success='1' nmsize='656' count='435' inlined_bytes='11' stamp='0.258'/>
</task>
<task compile_id='69' method='java/nio/charset/CharsetEncoder reset ()Ljava/nio/charset/CharsetEncoder;' bytes='11' count='389' iicount='389' level='3' stamp='0.258'>
<phase name='buildIR' stamp='0.258'>
<klass id='899' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<method id='900' holder='899' name='reset' return='899' flags='17' bytes='11' iicount='389'/>
<parse method='900'  stamp='0.258'>
<bc code='182' bci='1'/>
<type id='791' name='void'/>
<method id='902' holder='899' name='implReset' return='791' flags='4' bytes='1' iicount='390'/>
<call method='902' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='899' x='902'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<parse_done stamp='0.258'/>
</parse>
<parse_done stamp='0.258'/>
</parse>
<phase name='optimize_blocks' stamp='0.258'>
<phase_done name='optimize_blocks' stamp='0.258'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.258'>
<phase_done name='rangeCheckElimination' stamp='0.258'/>
</phase>
<phase name='optimize_null_checks' stamp='0.258'>
<phase_done name='optimize_null_checks' stamp='0.258'/>
</phase>
<phase_done name='buildIR' stamp='0.258'/>
</phase>
<phase name='emit_lir' stamp='0.258'>
<phase name='lirGeneration' stamp='0.258'>
<phase_done name='lirGeneration' stamp='0.258'/>
</phase>
<phase name='linearScan' stamp='0.258'>
<phase_done name='linearScan' stamp='0.258'/>
</phase>
<phase_done name='emit_lir' stamp='0.258'/>
</phase>
<phase name='codeemit' stamp='0.258'>
<phase_done name='codeemit' stamp='0.258'/>
</phase>
<phase name='codeinstall' stamp='0.258'>
<dependency type='unique_concrete_method' ctxk='899' x='902'/>
<phase_done name='codeinstall' stamp='0.259'/>
</phase>
<code_cache total_blobs='301' nmethods='61' adapters='171' free_code_cache='334330752'/>
<task_done success='1' nmsize='912' count='397' inlined_bytes='1' stamp='0.259'/>
</task>
<task compile_id='70' method='java/nio/charset/CharsetEncoder implReset ()V' bytes='1' count='397' iicount='397' level='3' stamp='0.259'>
<phase name='buildIR' stamp='0.259'>
<type id='791' name='void'/>
<klass id='899' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<method id='900' holder='899' name='implReset' return='791' flags='4' bytes='1' iicount='397'/>
<parse method='900'  stamp='0.259'>
<parse_done stamp='0.259'/>
</parse>
<phase name='optimize_blocks' stamp='0.259'>
<phase_done name='optimize_blocks' stamp='0.259'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.259'>
<phase_done name='rangeCheckElimination' stamp='0.259'/>
</phase>
<phase name='optimize_null_checks' stamp='0.259'>
<phase_done name='optimize_null_checks' stamp='0.259'/>
</phase>
<phase_done name='buildIR' stamp='0.259'/>
</phase>
<phase name='emit_lir' stamp='0.259'>
<phase name='lirGeneration' stamp='0.259'>
<phase_done name='lirGeneration' stamp='0.259'/>
</phase>
<phase name='linearScan' stamp='0.259'>
<phase_done name='linearScan' stamp='0.259'/>
</phase>
<phase_done name='emit_lir' stamp='0.259'/>
</phase>
<phase name='codeemit' stamp='0.259'>
<phase_done name='codeemit' stamp='0.259'/>
</phase>
<phase name='codeinstall' stamp='0.259'>
<phase_done name='codeinstall' stamp='0.260'/>
</phase>
<code_cache total_blobs='302' nmethods='62' adapters='171' free_code_cache='334329920'/>
<task_done success='1' nmsize='336' count='405' stamp='0.260'/>
</task>
<task compile_id='71' method='java/lang/AbstractStringBuilder newCapacity (I)I' bytes='39' count='435' iicount='435' level='3' stamp='0.260'>
<phase name='buildIR' stamp='0.260'>
<type id='789' name='int'/>
<klass id='860' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='899' holder='860' name='newCapacity' return='789' arguments='789' flags='2' bytes='39' iicount='435'/>
<parse method='899'  stamp='0.260'>
<bc code='183' bci='31'/>
<method id='901' holder='860' name='hugeCapacity' return='789' arguments='789' flags='2' bytes='28' iicount='1'/>
<call method='901' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<bc code='183' bci='11'/>
<type id='791' name='void'/>
<klass id='819' name='java/lang/OutOfMemoryError' flags='1'/>
<method id='903' holder='819' name='&lt;init&gt;' return='791' flags='1' bytes='5' iicount='1'/>
<call method='903' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.260'/>
</parse>
<parse_done stamp='0.260'/>
</parse>
<phase name='optimize_blocks' stamp='0.260'>
<phase_done name='optimize_blocks' stamp='0.260'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.260'>
<phase_done name='rangeCheckElimination' stamp='0.260'/>
</phase>
<phase name='optimize_null_checks' stamp='0.260'>
<phase_done name='optimize_null_checks' stamp='0.260'/>
</phase>
<phase_done name='buildIR' stamp='0.260'/>
</phase>
<phase name='emit_lir' stamp='0.260'>
<phase name='lirGeneration' stamp='0.260'>
<phase_done name='lirGeneration' stamp='0.260'/>
</phase>
<phase name='linearScan' stamp='0.260'>
<phase_done name='linearScan' stamp='0.260'/>
</phase>
<phase_done name='emit_lir' stamp='0.260'/>
</phase>
<phase name='codeemit' stamp='0.260'>
<phase_done name='codeemit' stamp='0.260'/>
</phase>
<phase name='codeinstall' stamp='0.260'>
<phase_done name='codeinstall' stamp='0.287'/>
</phase>
<code_cache total_blobs='303' nmethods='63' adapters='171' free_code_cache='334327872'/>
<task_done success='1' nmsize='1000' count='435' inlined_bytes='28' stamp='0.287'/>
</task>
<task compile_id='65' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='408' iicount='408' level='3' stamp='0.287'>
<phase name='buildIR' stamp='0.287'>
<type id='789' name='int'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='899' name='java/util/HashMap' flags='1'/>
<method id='900' holder='899' name='hash' return='789' arguments='796' flags='24' bytes='20' iicount='408'/>
<parse method='900'  stamp='0.287'>
<bc code='182' bci='9'/>
<method id='902' holder='796' name='hashCode' return='789' flags='257' bytes='0' iicount='193'/>
<call method='902' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.287'/>
</parse>
<phase name='optimize_blocks' stamp='0.287'>
<phase_done name='optimize_blocks' stamp='0.287'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.287'>
<phase_done name='rangeCheckElimination' stamp='0.287'/>
</phase>
<phase name='optimize_null_checks' stamp='0.287'>
<phase_done name='optimize_null_checks' stamp='0.287'/>
</phase>
<phase_done name='buildIR' stamp='0.287'/>
</phase>
<phase name='emit_lir' stamp='0.287'>
<phase name='lirGeneration' stamp='0.287'>
<phase_done name='lirGeneration' stamp='0.287'/>
</phase>
<phase name='linearScan' stamp='0.287'>
<phase_done name='linearScan' stamp='0.287'/>
</phase>
<phase_done name='emit_lir' stamp='0.287'/>
</phase>
<phase name='codeemit' stamp='0.287'>
<phase_done name='codeemit' stamp='0.287'/>
</phase>
<phase name='codeinstall' stamp='0.287'>
<phase_done name='codeinstall' stamp='0.288'/>
</phase>
<code_cache total_blobs='304' nmethods='64' adapters='171' free_code_cache='334326272'/>
<task_done success='1' nmsize='936' count='412' stamp='0.288'/>
</task>
<task compile_id='68' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='347' iicount='347' level='3' stamp='0.288'>
<phase name='buildIR' stamp='0.288'>
<type id='791' name='void'/>
<type id='789' name='int'/>
<klass id='860' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='899' holder='860' name='&lt;init&gt;' return='791' arguments='789' flags='0' bytes='12' iicount='347'/>
<parse method='899'  stamp='0.288'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='901' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='238699'/>
<call method='901' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='860'/>
<parse_done stamp='0.288'/>
</parse>
<parse_done stamp='0.288'/>
</parse>
<phase name='optimize_blocks' stamp='0.288'>
<phase_done name='optimize_blocks' stamp='0.288'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.288'>
<phase_done name='rangeCheckElimination' stamp='0.288'/>
</phase>
<phase name='optimize_null_checks' stamp='0.288'>
<phase_done name='optimize_null_checks' stamp='0.288'/>
</phase>
<phase_done name='buildIR' stamp='0.288'/>
</phase>
<phase name='emit_lir' stamp='0.288'>
<phase name='lirGeneration' stamp='0.288'>
<phase_done name='lirGeneration' stamp='0.288'/>
</phase>
<phase name='linearScan' stamp='0.288'>
<phase_done name='linearScan' stamp='0.288'/>
</phase>
<phase_done name='emit_lir' stamp='0.288'/>
</phase>
<phase name='codeemit' stamp='0.288'>
<phase_done name='codeemit' stamp='0.288'/>
</phase>
<phase name='codeinstall' stamp='0.288'>
<dependency type='no_finalizable_subclasses' ctxk='860'/>
<phase_done name='codeinstall' stamp='0.289'/>
</phase>
<code_cache total_blobs='305' nmethods='65' adapters='171' free_code_cache='334325056'/>
<task_done success='1' nmsize='592' count='349' inlined_bytes='1' stamp='0.289'/>
</task>
<task compile_id='73' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='396' iicount='396' level='3' stamp='0.289'>
<phase name='buildIR' stamp='0.289'>
<klass id='797' name='java/lang/String' flags='17'/>
<type id='789' name='int'/>
<method id='899' holder='797' name='substring' return='797' arguments='789 789' flags='1' bytes='79' iicount='396'/>
<parse method='899'  stamp='0.289'>
<bc code='183' bci='9'/>
<type id='791' name='void'/>
<klass id='901' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='902' holder='901' name='&lt;init&gt;' return='791' arguments='789' unloaded='1'/>
<call method='902' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='902' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='44'/>
<call method='902' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='75'/>
<klass id='888' name='[C' flags='1041'/>
<method id='903' holder='797' name='&lt;init&gt;' return='791' arguments='888 789 789' flags='1' bytes='82' compile_id='9' compiler='C1' level='3' iicount='883'/>
<call method='903' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.289'/>
</parse>
<phase name='optimize_blocks' stamp='0.289'>
<phase_done name='optimize_blocks' stamp='0.289'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.289'>
<phase_done name='rangeCheckElimination' stamp='0.289'/>
</phase>
<phase name='optimize_null_checks' stamp='0.289'>
<phase_done name='optimize_null_checks' stamp='0.289'/>
</phase>
<phase_done name='buildIR' stamp='0.289'/>
</phase>
<phase name='emit_lir' stamp='0.289'>
<phase name='lirGeneration' stamp='0.289'>
<phase_done name='lirGeneration' stamp='0.289'/>
</phase>
<phase name='linearScan' stamp='0.289'>
<phase_done name='linearScan' stamp='0.289'/>
</phase>
<phase_done name='emit_lir' stamp='0.289'/>
</phase>
<phase name='codeemit' stamp='0.289'>
<phase_done name='codeemit' stamp='0.289'/>
</phase>
<phase name='codeinstall' stamp='0.289'>
<phase_done name='codeinstall' stamp='0.291'/>
</phase>
<code_cache total_blobs='307' nmethods='66' adapters='171' free_code_cache='334320576'/>
<task_done success='1' nmsize='1208' count='396' stamp='0.291'/>
</task>
<task compile_id='72' method='java/net/URL getPort ()I' bytes='5' count='135' iicount='135' level='1' stamp='0.291'>
<phase name='buildIR' stamp='0.291'>
<type id='789' name='int'/>
<klass id='868' name='java/net/URL' flags='17'/>
<method id='899' holder='868' name='getPort' return='789' flags='1' bytes='5' iicount='135'/>
<parse method='899'  stamp='0.291'>
<parse_done stamp='0.291'/>
</parse>
<phase name='optimize_blocks' stamp='0.291'>
<phase_done name='optimize_blocks' stamp='0.291'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.291'>
<phase_done name='rangeCheckElimination' stamp='0.291'/>
</phase>
<phase name='optimize_null_checks' stamp='0.291'>
<phase_done name='optimize_null_checks' stamp='0.291'/>
</phase>
<phase_done name='buildIR' stamp='0.291'/>
</phase>
<phase name='emit_lir' stamp='0.291'>
<phase name='lirGeneration' stamp='0.291'>
<phase_done name='lirGeneration' stamp='0.291'/>
</phase>
<phase name='linearScan' stamp='0.291'>
<phase_done name='linearScan' stamp='0.291'/>
</phase>
<phase_done name='emit_lir' stamp='0.291'/>
</phase>
<phase name='codeemit' stamp='0.291'>
<phase_done name='codeemit' stamp='0.291'/>
</phase>
<phase name='codeinstall' stamp='0.291'>
<phase_done name='codeinstall' stamp='0.292'/>
</phase>
<code_cache total_blobs='308' nmethods='67' adapters='171' free_code_cache='334319808'/>
<task_done success='1' nmsize='272' count='137' stamp='0.292'/>
</task>
<task compile_id='66' method='java/net/URL getQuery ()Ljava/lang/String;' bytes='5' count='154' iicount='154' level='1' stamp='0.292'>
<phase name='buildIR' stamp='0.292'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='868' name='java/net/URL' flags='17'/>
<method id='899' holder='868' name='getQuery' return='797' flags='1' bytes='5' iicount='154'/>
<parse method='899'  stamp='0.292'>
<parse_done stamp='0.292'/>
</parse>
<phase name='optimize_blocks' stamp='0.292'>
<phase_done name='optimize_blocks' stamp='0.292'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.292'>
<phase_done name='rangeCheckElimination' stamp='0.292'/>
</phase>
<phase name='optimize_null_checks' stamp='0.292'>
<phase_done name='optimize_null_checks' stamp='0.292'/>
</phase>
<phase_done name='buildIR' stamp='0.292'/>
</phase>
<phase name='emit_lir' stamp='0.292'>
<phase name='lirGeneration' stamp='0.292'>
<phase_done name='lirGeneration' stamp='0.292'/>
</phase>
<phase name='linearScan' stamp='0.292'>
<phase_done name='linearScan' stamp='0.292'/>
</phase>
<phase_done name='emit_lir' stamp='0.292'/>
</phase>
<phase name='codeemit' stamp='0.292'>
<phase_done name='codeemit' stamp='0.292'/>
</phase>
<phase name='codeinstall' stamp='0.292'>
<phase_done name='codeinstall' stamp='0.292'/>
</phase>
<code_cache total_blobs='310' nmethods='68' adapters='171' free_code_cache='334318016'/>
<task_done success='1' nmsize='272' count='154' stamp='0.292'/>
</task>
<task compile_id='74' method='java/util/concurrent/ConcurrentHashMap spread (I)I' bytes='10' count='256' iicount='256' level='3' stamp='0.292'>
<phase name='buildIR' stamp='0.292'>
<type id='789' name='int'/>
<klass id='899' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='900' holder='899' name='spread' return='789' arguments='789' flags='24' bytes='10' iicount='256'/>
<parse method='900'  stamp='0.292'>
<parse_done stamp='0.292'/>
</parse>
<phase name='optimize_blocks' stamp='0.292'>
<phase_done name='optimize_blocks' stamp='0.292'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.292'>
<phase_done name='rangeCheckElimination' stamp='0.292'/>
</phase>
<phase name='optimize_null_checks' stamp='0.292'>
<phase_done name='optimize_null_checks' stamp='0.292'/>
</phase>
<phase_done name='buildIR' stamp='0.292'/>
</phase>
<phase name='emit_lir' stamp='0.292'>
<phase name='lirGeneration' stamp='0.292'>
<phase_done name='lirGeneration' stamp='0.292'/>
</phase>
<phase name='linearScan' stamp='0.292'>
<phase_done name='linearScan' stamp='0.292'/>
</phase>
<phase_done name='emit_lir' stamp='0.292'/>
</phase>
<phase name='codeemit' stamp='0.292'>
<phase_done name='codeemit' stamp='0.292'/>
</phase>
<phase name='codeinstall' stamp='0.292'>
<phase_done name='codeinstall' stamp='0.294'/>
</phase>
<code_cache total_blobs='311' nmethods='70' adapters='171' free_code_cache='334317184'/>
<task_done success='1' nmsize='336' count='257' stamp='0.294'/>
</task>
<task compile_id='76' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='212' backedge_count='6762' iicount='212' level='3' stamp='0.299'>
<phase name='buildIR' stamp='0.299'>
<klass id='797' name='java/lang/String' flags='17'/>
<type id='784' name='char'/>
<method id='899' holder='797' name='replace' return='797' arguments='784 784' flags='1' bytes='127' iicount='212'/>
<parse method='899'  stamp='0.299'>
<bc code='183' bci='121'/>
<type id='791' name='void'/>
<klass id='888' name='[C' flags='1041'/>
<type id='783' name='boolean'/>
<method id='901' holder='797' name='&lt;init&gt;' return='791' arguments='888 783' flags='0' bytes='10' iicount='475'/>
<call method='901' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='903' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='260734'/>
<call method='903' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<parse_done stamp='0.299'/>
</parse>
<parse_done stamp='0.299'/>
</parse>
<parse_done stamp='0.299'/>
</parse>
<phase name='optimize_blocks' stamp='0.299'>
<phase_done name='optimize_blocks' stamp='0.299'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.299'>
<phase_done name='rangeCheckElimination' stamp='0.299'/>
</phase>
<phase name='optimize_null_checks' stamp='0.299'>
<phase_done name='optimize_null_checks' stamp='0.299'/>
</phase>
<phase_done name='buildIR' stamp='0.299'/>
</phase>
<phase name='emit_lir' stamp='0.299'>
<phase name='lirGeneration' stamp='0.299'>
<phase_done name='lirGeneration' stamp='0.299'/>
</phase>
<phase name='linearScan' stamp='0.299'>
<phase_done name='linearScan' stamp='0.299'/>
</phase>
<phase_done name='emit_lir' stamp='0.299'/>
</phase>
<phase name='codeemit' stamp='0.299'>
<phase_done name='codeemit' stamp='0.299'/>
</phase>
<phase name='codeinstall' stamp='0.299'>
<phase_done name='codeinstall' stamp='0.302'/>
</phase>
<code_cache total_blobs='312' nmethods='71' adapters='171' free_code_cache='334313728'/>
<task_done success='1' nmsize='1712' count='218' backedge_count='6984' inlined_bytes='11' stamp='0.302'/>
</task>
<task compile_id='78' method='sun/misc/URLClassPath getLoader (I)Lsun/misc/URLClassPath$Loader;' bytes='243' count='546' backedge_count='17' iicount='546' level='3' stamp='0.302'>
<phase name='buildIR' stamp='0.302'>
<klass id='900' name='sun/misc/URLClassPath$Loader' flags='10'/>
<type id='789' name='int'/>
<klass id='899' name='sun/misc/URLClassPath' flags='1'/>
<method id='901' holder='899' name='getLoader' return='900' arguments='789' flags='34' bytes='243' iicount='546'/>
<parse method='901'  stamp='0.302'>
<bc code='182' bci='13'/>
<klass id='903' name='java/util/ArrayList' flags='1'/>
<method id='906' holder='903' name='size' return='789' flags='1' bytes='5' compile_id='44' compiler='C1' level='1' iicount='233'/>
<call method='906' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='903'/>
<parse method='906'>
<parse_done stamp='0.303'/>
</parse>
<bc code='182' bci='33'/>
<type id='783' name='boolean'/>
<klass id='904' name='java/util/Stack' flags='1'/>
<method id='908' holder='904' name='empty' return='783' flags='1' bytes='13' iicount='102'/>
<call method='908' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='904'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='904'/>
<parse method='908'>
<bc code='182' bci='1'/>
<klass id='910' name='java/util/Vector' flags='1'/>
<method id='911' holder='910' name='size' return='789' flags='33' bytes='5' compile_id='51' compiler='C1' level='1' iicount='130'/>
<call method='911' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='904'/>
<inline_success reason='receiver is statically known'/>
<parse method='911'>
<parse_done stamp='0.303'/>
</parse>
<parse_done stamp='0.303'/>
</parse>
<bc code='182' bci='47'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='913' holder='904' name='pop' return='796' flags='33' bytes='19' iicount='20'/>
<call method='913' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='904'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='904'/>
<parse method='913'>
<bc code='182' bci='1'/>
<call method='911' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='904'/>
<inline_success reason='receiver is statically known'/>
<parse method='911'>
<parse_done stamp='0.303'/>
</parse>
<bc code='182' bci='6'/>
<method id='915' holder='904' name='peek' return='796' flags='33' bytes='25' iicount='22'/>
<call method='915' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='904'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='904'/>
<parse method='915'>
<bc code='182' bci='1'/>
<call method='911' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='904'/>
<inline_success reason='receiver is statically known'/>
<parse method='911'>
<parse_done stamp='0.303'/>
</parse>
<bc code='183' bci='13'/>
<type id='791' name='void'/>
<klass id='917' name='java/util/EmptyStackException' unloaded='1'/>
<method id='918' holder='917' name='&lt;init&gt;' return='791' unloaded='1'/>
<call method='918' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='21'/>
<method id='919' holder='910' name='elementAt' return='796' arguments='789' flags='33' bytes='48' iicount='71'/>
<call method='919' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='904'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.303'/>
</parse>
<bc code='182' bci='14'/>
<method id='921' holder='910' name='removeElementAt' return='791' arguments='789' flags='33' bytes='115' iicount='20'/>
<call method='921' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='904'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.303'/>
</parse>
<bc code='184' bci='67'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='868' name='java/net/URL' flags='17'/>
<klass id='923' name='sun/net/util/URLUtil' flags='1'/>
<method id='924' holder='923' name='urlNoFragString' return='797' arguments='868' flags='9' bytes='114' iicount='17'/>
<call method='924' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='76'/>
<klass id='926' name='java/util/HashMap' flags='1'/>
<method id='927' holder='926' name='containsKey' return='783' arguments='796' flags='1' bytes='18' iicount='17'/>
<call method='927' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='926' x='927'/>
<inline_success reason='receiver is statically known'/>
<parse method='927'>
<bc code='184' bci='2'/>
<method id='929' holder='926' name='hash' return='789' arguments='796' flags='24' bytes='20' compile_id='65' compiler='C1' level='3' iicount='494'/>
<call method='929' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='929'>
<bc code='182' bci='9'/>
<method id='931' holder='796' name='hashCode' return='789' flags='257' bytes='0' iicount='273'/>
<call method='931' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.303'/>
</parse>
<bc code='182' bci='6'/>
<klass id='934' name='java/util/HashMap$Node' flags='8'/>
<method id='935' holder='926' name='getNode' return='934' arguments='789 796' flags='16' bytes='148' iicount='343'/>
<call method='935' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.303'/>
</parse>
<bc code='183' bci='87'/>
<method id='937' holder='899' name='getLoader' return='900' arguments='868' flags='2' bytes='29' iicount='17'/>
<call method='937' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<parse method='937'>
<bc code='183' bci='6'/>
<klass id='939' name='sun/misc/URLClassPath$3' flags='0'/>
<method id='940' holder='939' name='&lt;init&gt;' return='791' arguments='899 868' flags='0' bytes='15' iicount='17'/>
<call method='940' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='940'>
<bc code='183' bci='11'/>
<method id='942' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='265154'/>
<call method='942' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='942'>
<parse_done stamp='0.303'/>
</parse>
<parse_done stamp='0.303'/>
</parse>
<bc code='184' bci='13'/>
<klass id='945' name='java/security/PrivilegedExceptionAction' flags='1537'/>
<klass id='810' name='java/security/AccessControlContext' flags='17'/>
<klass id='944' name='java/security/AccessController' flags='17'/>
<method id='946' holder='944' name='doPrivileged' return='796' arguments='945 810' flags='265' bytes='0' iicount='198'/>
<call method='946' instr='invokestatic'/>
<inline_fail reason='native method'/>
<bc code='182' bci='22'/>
<klass id='806' name='java/lang/Exception' flags='1'/>
<klass id='947' name='java/security/PrivilegedActionException' unloaded='1'/>
<method id='948' holder='947' name='getException' return='806' unloaded='1'/>
<call method='948' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.303'/>
</parse>
<bc code='182' bci='94'/>
<klass id='950' name='[Ljava/net/URL;' flags='1041'/>
<method id='951' holder='900' name='getClassPath' return='950' flags='0' bytes='2' iicount='2'/>
<call method='951' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='107'/>
<method id='952' holder='899' name='push' return='791' arguments='950' flags='2' bytes='46' iicount='4'/>
<call method='952' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='169'/>
<call method='906' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='903'/>
<parse method='906'>
<parse_done stamp='0.303'/>
</parse>
<bc code='183' bci='173'/>
<method id='955' holder='899' name='validateLookupCache' return='791' arguments='789 797' flags='34' bytes='80' iicount='17'/>
<call method='955' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='182'/>
<method id='957' holder='903' name='add' return='783' arguments='796' flags='1' bytes='29' iicount='71'/>
<call method='957' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='903'/>
<parse method='957'>
<bc code='183' bci='7'/>
<method id='959' holder='903' name='ensureCapacityInternal' return='791' arguments='789' flags='2' bytes='23' iicount='71'/>
<call method='959' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<parse method='959'>
<bc code='184' bci='13'/>
<klass id='964' name='java/lang/Math' flags='17'/>
<method id='965' holder='964' name='max' return='789' arguments='789 789' flags='9' bytes='11' iicount='40'/>
<call method='965' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='965'>
<parse_done stamp='0.303'/>
</parse>
<bc code='183' bci='19'/>
<method id='967' holder='903' name='ensureExplicitCapacity' return='791' arguments='789' flags='2' bytes='26' iicount='71'/>
<call method='967' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<parse method='967'>
<bc code='183' bci='22'/>
<method id='970' holder='903' name='grow' return='791' arguments='789' flags='2' bytes='45' iicount='14'/>
<call method='970' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.303'/>
</parse>
<parse_done stamp='0.303'/>
</parse>
<parse_done stamp='0.303'/>
</parse>
<bc code='182' bci='193'/>
<method id='972' holder='926' name='put' return='796' arguments='796 796' flags='1' bytes='13' iicount='153'/>
<call method='972' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='926' x='972'/>
<inline_success reason='receiver is statically known'/>
<parse method='972'>
<bc code='184' bci='2'/>
<call method='929' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='929'>
<bc code='182' bci='9'/>
<call method='931' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.303'/>
</parse>
<bc code='182' bci='9'/>
<method id='974' holder='926' name='putVal' return='796' arguments='789 796 796 783 783' flags='16' bytes='300' iicount='153'/>
<call method='974' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.303'/>
</parse>
<bc code='182' bci='236'/>
<method id='976' holder='903' name='get' return='796' arguments='789' flags='1' bytes='11' iicount='480'/>
<call method='976' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='903'/>
<parse method='976'>
<bc code='183' bci='2'/>
<method id='978' holder='903' name='rangeCheck' return='791' arguments='789' flags='2' bytes='22' iicount='480'/>
<call method='978' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<parse method='978'>
<bc code='183' bci='14'/>
<method id='981' holder='903' name='outOfBoundsMsg' return='797' arguments='789' flags='2' bytes='32' iicount='1'/>
<call method='981' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='17'/>
<klass id='980' name='java/lang/IndexOutOfBoundsException' flags='1'/>
<method id='983' holder='980' name='&lt;init&gt;' return='791' arguments='797' flags='1' bytes='6' iicount='1'/>
<call method='983' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.304'/>
</parse>
<bc code='182' bci='7'/>
<method id='984' holder='903' name='elementData' return='796' arguments='789' flags='0' bytes='7' iicount='480'/>
<call method='984' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='903'/>
<parse method='984'>
<parse_done stamp='0.304'/>
</parse>
<parse_done stamp='0.304'/>
</parse>
<parse_done stamp='0.304'/>
</parse>
<phase name='optimize_blocks' stamp='0.304'>
<phase_done name='optimize_blocks' stamp='0.304'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.304'>
<phase_done name='rangeCheckElimination' stamp='0.304'/>
</phase>
<phase name='optimize_null_checks' stamp='0.304'>
<phase_done name='optimize_null_checks' stamp='0.304'/>
</phase>
<phase_done name='buildIR' stamp='0.304'/>
</phase>
<phase name='emit_lir' stamp='0.304'>
<phase name='lirGeneration' stamp='0.304'>
<phase_done name='lirGeneration' stamp='0.304'/>
</phase>
<phase name='linearScan' stamp='0.304'>
<phase_done name='linearScan' stamp='0.305'/>
</phase>
<phase_done name='emit_lir' stamp='0.305'/>
</phase>
<phase name='codeemit' stamp='0.305'>
<phase_done name='codeemit' stamp='0.305'/>
</phase>
<phase name='codeinstall' stamp='0.305'>
<dependency type='leaf_type' ctxk='903'/>
<dependency type='leaf_type' ctxk='904'/>
<dependency type='leaf_type' ctxk='899'/>
<dependency type='unique_concrete_method' ctxk='926' x='927'/>
<dependency type='unique_concrete_method' ctxk='926' x='972'/>
<phase_done name='codeinstall' stamp='0.363'/>
</phase>
<code_cache total_blobs='314' nmethods='73' adapters='171' free_code_cache='334288832'/>
<task_done success='1' nmsize='16120' count='576' backedge_count='17' inlined_bytes='327' stamp='0.363'/>
</task>
<task compile_id='77' method='sun/misc/URLClassPath getNextLoader ([II)Lsun/misc/URLClassPath$Loader;' bytes='88' count='576' iicount='576' level='3' stamp='0.363'>
<phase name='buildIR' stamp='0.363'>
<klass id='900' name='sun/misc/URLClassPath$Loader' flags='10'/>
<klass id='893' name='[I' flags='1041'/>
<type id='789' name='int'/>
<klass id='899' name='sun/misc/URLClassPath' flags='1'/>
<method id='901' holder='899' name='getNextLoader' return='900' arguments='893 789' flags='34' bytes='88' iicount='576'/>
<parse method='901'  stamp='0.363'>
<bc code='182' bci='26'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='903' name='java/util/ArrayList' flags='1'/>
<method id='904' holder='903' name='get' return='796' arguments='789' flags='1' bytes='11' iicount='488'/>
<call method='904' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='903'/>
<parse method='904'>
<bc code='183' bci='2'/>
<type id='791' name='void'/>
<method id='906' holder='903' name='rangeCheck' return='791' arguments='789' flags='2' bytes='22' iicount='488'/>
<call method='906' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<parse method='906'>
<bc code='183' bci='14'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='909' holder='903' name='outOfBoundsMsg' return='797' arguments='789' flags='2' bytes='32' iicount='1'/>
<call method='909' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='17'/>
<klass id='908' name='java/lang/IndexOutOfBoundsException' flags='1'/>
<method id='911' holder='908' name='&lt;init&gt;' return='791' arguments='797' flags='1' bytes='6' iicount='1'/>
<call method='911' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.363'/>
</parse>
<bc code='182' bci='7'/>
<method id='912' holder='903' name='elementData' return='796' arguments='789' flags='0' bytes='7' iicount='488'/>
<call method='912' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='903'/>
<parse method='912'>
<parse_done stamp='0.363'/>
</parse>
<parse_done stamp='0.363'/>
</parse>
<bc code='183' bci='84'/>
<method id='916' holder='899' name='getLoader' return='900' arguments='789' flags='34' bytes='243' compile_id='78' compiler='C1' level='3' iicount='576'/>
<call method='916' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.363'/>
</parse>
<phase name='optimize_blocks' stamp='0.363'>
<phase_done name='optimize_blocks' stamp='0.363'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.363'>
<phase_done name='rangeCheckElimination' stamp='0.363'/>
</phase>
<phase name='optimize_null_checks' stamp='0.363'>
<phase_done name='optimize_null_checks' stamp='0.363'/>
</phase>
<phase_done name='buildIR' stamp='0.363'/>
</phase>
<phase name='emit_lir' stamp='0.363'>
<phase name='lirGeneration' stamp='0.363'>
<phase_done name='lirGeneration' stamp='0.363'/>
</phase>
<phase name='linearScan' stamp='0.363'>
<phase_done name='linearScan' stamp='0.363'/>
</phase>
<phase_done name='emit_lir' stamp='0.363'/>
</phase>
<phase name='codeemit' stamp='0.363'>
<phase_done name='codeemit' stamp='0.363'/>
</phase>
<phase name='codeinstall' stamp='0.363'>
<dependency type='leaf_type' ctxk='903'/>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.368'/>
</phase>
<code_cache total_blobs='317' nmethods='74' adapters='173' free_code_cache='334283328'/>
<task_done success='1' nmsize='2568' count='582' inlined_bytes='40' stamp='0.368'/>
</task>
<task compile_id='85' method='java/util/zip/ZipFile ensureOpen ()V' bytes='37' count='659' iicount='659' level='3' stamp='0.368'>
<phase name='buildIR' stamp='0.368'>
<type id='791' name='void'/>
<klass id='899' name='java/util/zip/ZipFile' flags='1'/>
<method id='900' holder='899' name='ensureOpen' return='791' flags='2' bytes='37' iicount='659'/>
<parse method='900'  stamp='0.368'>
<bc code='183' bci='13'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='902' name='java/lang/IllegalStateException' unloaded='1'/>
<method id='904' holder='902' name='&lt;init&gt;' return='791' arguments='797' unloaded='1'/>
<call method='904' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='32'/>
<call method='904' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.368'/>
</parse>
<phase name='optimize_blocks' stamp='0.368'>
<phase_done name='optimize_blocks' stamp='0.368'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.368'>
<phase_done name='rangeCheckElimination' stamp='0.368'/>
</phase>
<phase name='optimize_null_checks' stamp='0.368'>
<phase_done name='optimize_null_checks' stamp='0.368'/>
</phase>
<phase_done name='buildIR' stamp='0.368'/>
</phase>
<phase name='emit_lir' stamp='0.368'>
<phase name='lirGeneration' stamp='0.368'>
<phase_done name='lirGeneration' stamp='0.368'/>
</phase>
<phase name='linearScan' stamp='0.368'>
<phase_done name='linearScan' stamp='0.368'/>
</phase>
<phase_done name='emit_lir' stamp='0.368'/>
</phase>
<phase name='codeemit' stamp='0.368'>
<phase_done name='codeemit' stamp='0.368'/>
</phase>
<phase name='codeinstall' stamp='0.368'>
<phase_done name='codeinstall' stamp='0.369'/>
</phase>
<code_cache total_blobs='318' nmethods='75' adapters='173' free_code_cache='334281664'/>
<task_done success='1' nmsize='728' count='666' stamp='0.369'/>
</task>
<task compile_id='86' method='java/util/zip/ZipCoder getBytes (Ljava/lang/String;)[B' bytes='192' count='666' iicount='666' level='3' stamp='0.369'>
<phase name='buildIR' stamp='0.369'>
<klass id='891' name='[B' flags='1041'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='899' name='java/util/zip/ZipCoder' flags='16'/>
<method id='900' holder='899' name='getBytes' return='891' arguments='797' flags='0' bytes='192' iicount='666'/>
<parse method='900'  stamp='0.369'>
<bc code='183' bci='1'/>
<klass id='903' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<method id='904' holder='899' name='encoder' return='903' flags='2' bytes='35' iicount='670'/>
<call method='904' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='904'>
<bc code='182' bci='12'/>
<klass id='906' name='java/nio/charset/Charset' flags='1025'/>
<method id='907' holder='906' name='newEncoder' return='903' flags='1025' bytes='0' iicount='1'/>
<call method='907' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='18'/>
<klass id='908' name='java/nio/charset/CodingErrorAction' flags='1'/>
<method id='911' holder='903' name='onMalformedInput' return='903' arguments='908' flags='17' bytes='26' iicount='12'/>
<call method='911' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='911'>
<bc code='182' bci='21'/>
<type id='791' name='void'/>
<method id='913' holder='903' name='implOnMalformedInput' return='791' arguments='908' flags='4' bytes='1' iicount='12'/>
<call method='913' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='903' x='913'/>
<inline_success reason='receiver is statically known'/>
<parse method='913'>
<parse_done stamp='0.369'/>
</parse>
<parse_done stamp='0.369'/>
</parse>
<bc code='182' bci='24'/>
<method id='915' holder='903' name='onUnmappableCharacter' return='903' arguments='908' flags='17' bytes='26' iicount='12'/>
<call method='915' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='915'>
<bc code='182' bci='21'/>
<method id='917' holder='903' name='implOnUnmappableCharacter' return='791' arguments='908' flags='4' bytes='1' iicount='12'/>
<call method='917' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='903' x='917'/>
<inline_success reason='receiver is statically known'/>
<parse method='917'>
<parse_done stamp='0.369'/>
</parse>
<parse_done stamp='0.369'/>
</parse>
<parse_done stamp='0.369'/>
</parse>
<bc code='182' bci='4'/>
<method id='919' holder='903' name='reset' return='903' flags='17' bytes='11' compile_id='69' compiler='C1' level='3' iicount='690'/>
<call method='919' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='919'>
<bc code='182' bci='1'/>
<method id='921' holder='903' name='implReset' return='791' flags='4' bytes='1' compile_id='70' compiler='C1' level='3' iicount='690'/>
<call method='921' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='903' x='921'/>
<inline_success reason='receiver is statically known'/>
<parse method='921'>
<parse_done stamp='0.369'/>
</parse>
<parse_done stamp='0.369'/>
</parse>
<bc code='182' bci='9'/>
<klass id='888' name='[C' flags='1041'/>
<method id='923' holder='797' name='toCharArray' return='888' flags='1' bytes='25' compile_id='64' compiler='C1' level='3' iicount='807'/>
<call method='923' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='923'>
<bc code='184' bci='20'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<type id='789' name='int'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='925' holder='802' name='arraycopy' return='791' arguments='796 789 796 789 789' flags='265' bytes='0' compile_id='8' compile_kind='c2n' level='0' iicount='640'/>
<call method='925' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.369'/>
</parse>
<bc code='182' bci='17'/>
<type id='785' name='float'/>
<method id='927' holder='903' name='maxBytesPerChar' return='785' flags='17' bytes='5' compile_id='59' compiler='C1' level='3' iicount='786'/>
<call method='927' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='927'>
<parse_done stamp='0.369'/>
</parse>
<bc code='185' bci='62'/>
<klass id='929' name='sun/nio/cs/ArrayEncoder' flags='1537'/>
<method id='930' holder='929' name='encode' return='789' arguments='888 789 789 891' flags='1025' bytes='0' iicount='1'/>
<call method='930' instr='invokeinterface'/>
<klass id='902' name='sun/nio/cs/UTF_8$Encoder' flags='26'/>
<method id='931' holder='902' name='encode' return='789' arguments='888 789 789 891' flags='1' bytes='359' compile_id='43' compiler='C1' level='3' iicount='775'/>
<dependency type='unique_concrete_method' ctxk='929' x='931'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='81'/>
<klass id='933' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='935' holder='933' name='&lt;init&gt;' return='791' arguments='797' flags='1' bytes='6' iicount='1'/>
<call method='935' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='89'/>
<klass id='937' name='java/util/Arrays' flags='1'/>
<method id='938' holder='937' name='copyOf' return='891' arguments='891 789' flags='9' bytes='19' compile_id='52' compiler='C1' level='3' iicount='989'/>
<call method='938' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='938'>
<bc code='184' bci='11'/>
<klass id='940' name='java/lang/Math' flags='17'/>
<method id='941' holder='940' name='min' return='789' arguments='789 789' flags='9' bytes='11' compile_id='7' compiler='C1' level='3' iicount='4726'/>
<call method='941' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='941'>
<parse_done stamp='0.370'/>
</parse>
<bc code='184' bci='14'/>
<call method='925' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.370'/>
</parse>
<bc code='184' bci='95'/>
<klass id='943' name='java/nio/ByteBuffer' flags='1025'/>
<method id='944' holder='943' name='wrap' return='943' arguments='891' flags='9' bytes='8' iicount='13'/>
<call method='944' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='944'>
<bc code='184' bci='4'/>
<method id='946' holder='943' name='wrap' return='943' arguments='891 789 789' flags='9' bytes='20' iicount='13'/>
<call method='946' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='946'>
<bc code='183' bci='7'/>
<klass id='948' name='java/nio/HeapByteBuffer' flags='0'/>
<method id='949' holder='948' name='&lt;init&gt;' return='791' arguments='891 789 789' flags='0' bytes='14' iicount='13'/>
<call method='949' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='949'>
<bc code='183' bci='10'/>
<method id='951' holder='943' name='&lt;init&gt;' return='791' arguments='789 789 789 789 891 789' flags='0' bytes='45' iicount='23'/>
<call method='951' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.370'/>
</parse>
<bc code='183' bci='16'/>
<klass id='953' name='java/lang/IndexOutOfBoundsException' flags='1'/>
<method id='954' holder='953' name='&lt;init&gt;' return='791' flags='1' bytes='5' iicount='1'/>
<call method='954' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.370'/>
</parse>
<parse_done stamp='0.370'/>
</parse>
<bc code='184' bci='101'/>
<klass id='955' name='java/nio/CharBuffer' flags='1025'/>
<method id='956' holder='955' name='wrap' return='955' arguments='888' flags='9' bytes='8' iicount='11'/>
<call method='956' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='956'>
<bc code='184' bci='4'/>
<method id='958' holder='955' name='wrap' return='955' arguments='888 789 789' flags='9' bytes='20' iicount='13'/>
<call method='958' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='958'>
<bc code='183' bci='7'/>
<klass id='960' name='java/nio/HeapCharBuffer' flags='0'/>
<method id='961' holder='960' name='&lt;init&gt;' return='791' arguments='888 789 789' flags='0' bytes='14' iicount='13'/>
<call method='961' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='961'>
<bc code='183' bci='10'/>
<method id='963' holder='955' name='&lt;init&gt;' return='791' arguments='789 789 789 789 888 789' flags='0' bytes='22' iicount='13'/>
<call method='963' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='963'>
<bc code='183' bci='6'/>
<klass id='875' name='java/nio/Buffer' flags='1025'/>
<method id='965' holder='875' name='&lt;init&gt;' return='791' arguments='789 789 789 789' flags='0' bytes='121' iicount='42'/>
<call method='965' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.370'/>
</parse>
<parse_done stamp='0.370'/>
</parse>
<bc code='183' bci='16'/>
<call method='954' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.370'/>
</parse>
<parse_done stamp='0.370'/>
</parse>
<bc code='182' bci='112'/>
<klass id='967' name='java/nio/charset/CoderResult' flags='1'/>
<type id='783' name='boolean'/>
<method id='968' holder='903' name='encode' return='967' arguments='955 943 783' flags='17' bytes='285' iicount='11'/>
<call method='968' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='119'/>
<method id='970' holder='967' name='isUnderflow' return='783' flags='1' bytes='13' iicount='50'/>
<call method='970' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='967'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='967'/>
<parse method='970'>
<parse_done stamp='0.370'/>
</parse>
<bc code='182' bci='131'/>
<method id='972' holder='967' name='toString' return='797' flags='1' bytes='52' iicount='1'/>
<call method='972' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='967'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='967'/>
<bc code='183' bci='134'/>
<call method='935' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='182' bci='141'/>
<method id='974' holder='903' name='flush' return='967' arguments='943' flags='17' bytes='49' iicount='11'/>
<call method='974' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='148'/>
<call method='970' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='967'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='967'/>
<parse method='970'>
<parse_done stamp='0.370'/>
</parse>
<bc code='182' bci='160'/>
<call method='972' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='967'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='967'/>
<bc code='183' bci='163'/>
<call method='935' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='182' bci='169'/>
<method id='976' holder='875' name='position' return='789' flags='17' bytes='5' iicount='63'/>
<call method='976' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='976'>
<parse_done stamp='0.370'/>
</parse>
<bc code='182' bci='185'/>
<call method='976' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='976'>
<parse_done stamp='0.370'/>
</parse>
<bc code='184' bci='188'/>
<call method='938' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='938'>
<bc code='184' bci='11'/>
<call method='941' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='941'>
<parse_done stamp='0.370'/>
</parse>
<bc code='184' bci='14'/>
<call method='925' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.370'/>
</parse>
<parse_done stamp='0.370'/>
</parse>
<phase name='optimize_blocks' stamp='0.370'>
<phase_done name='optimize_blocks' stamp='0.370'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.370'>
<phase_done name='rangeCheckElimination' stamp='0.370'/>
</phase>
<phase name='optimize_null_checks' stamp='0.370'>
<phase_done name='optimize_null_checks' stamp='0.370'/>
</phase>
<phase_done name='buildIR' stamp='0.370'/>
</phase>
<phase name='emit_lir' stamp='0.370'>
<phase name='lirGeneration' stamp='0.370'>
<phase_done name='lirGeneration' stamp='0.370'/>
</phase>
<phase name='linearScan' stamp='0.370'>
<phase_done name='linearScan' stamp='0.370'/>
</phase>
<phase_done name='emit_lir' stamp='0.370'/>
</phase>
<phase name='codeemit' stamp='0.370'>
<phase_done name='codeemit' stamp='0.371'/>
</phase>
<phase name='codeinstall' stamp='0.371'>
<dependency type='leaf_type' ctxk='967'/>
<dependency type='unique_concrete_method' ctxk='903' x='913'/>
<dependency type='unique_concrete_method' ctxk='903' x='917'/>
<dependency type='unique_concrete_method' ctxk='903' x='921'/>
<dependency type='unique_concrete_method' ctxk='929' x='931'/>
<phase_done name='codeinstall' stamp='0.399'/>
</phase>
<code_cache total_blobs='321' nmethods='76' adapters='175' free_code_cache='334264768'/>
<task_done success='1' nmsize='9880' count='725' inlined_bytes='333' stamp='0.399'/>
</task>
<task compile_id='87' method='java/util/zip/ZipCoder encoder ()Ljava/nio/charset/CharsetEncoder;' bytes='35' count='725' iicount='725' level='3' stamp='0.399'>
<phase name='buildIR' stamp='0.399'>
<klass id='900' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<klass id='899' name='java/util/zip/ZipCoder' flags='16'/>
<method id='901' holder='899' name='encoder' return='900' flags='2' bytes='35' iicount='725'/>
<parse method='901'  stamp='0.399'>
<bc code='182' bci='12'/>
<klass id='903' name='java/nio/charset/Charset' flags='1025'/>
<method id='904' holder='903' name='newEncoder' return='900' flags='1025' bytes='0' iicount='1'/>
<call method='904' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='18'/>
<klass id='905' name='java/nio/charset/CodingErrorAction' flags='1'/>
<method id='908' holder='900' name='onMalformedInput' return='900' arguments='905' flags='17' bytes='26' iicount='12'/>
<call method='908' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='908'>
<bc code='182' bci='21'/>
<type id='791' name='void'/>
<method id='910' holder='900' name='implOnMalformedInput' return='791' arguments='905' flags='4' bytes='1' iicount='12'/>
<call method='910' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='900' x='910'/>
<inline_success reason='receiver is statically known'/>
<parse method='910'>
<parse_done stamp='0.400'/>
</parse>
<parse_done stamp='0.400'/>
</parse>
<bc code='182' bci='24'/>
<method id='912' holder='900' name='onUnmappableCharacter' return='900' arguments='905' flags='17' bytes='26' iicount='12'/>
<call method='912' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='912'>
<bc code='182' bci='21'/>
<method id='914' holder='900' name='implOnUnmappableCharacter' return='791' arguments='905' flags='4' bytes='1' iicount='12'/>
<call method='914' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='900' x='914'/>
<inline_success reason='receiver is statically known'/>
<parse method='914'>
<parse_done stamp='0.400'/>
</parse>
<parse_done stamp='0.400'/>
</parse>
<parse_done stamp='0.400'/>
</parse>
<phase name='optimize_blocks' stamp='0.400'>
<phase_done name='optimize_blocks' stamp='0.400'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.400'>
<phase_done name='rangeCheckElimination' stamp='0.400'/>
</phase>
<phase name='optimize_null_checks' stamp='0.400'>
<phase_done name='optimize_null_checks' stamp='0.400'/>
</phase>
<phase_done name='buildIR' stamp='0.400'/>
</phase>
<phase name='emit_lir' stamp='0.400'>
<phase name='lirGeneration' stamp='0.400'>
<phase_done name='lirGeneration' stamp='0.400'/>
</phase>
<phase name='linearScan' stamp='0.400'>
<phase_done name='linearScan' stamp='0.400'/>
</phase>
<phase_done name='emit_lir' stamp='0.400'/>
</phase>
<phase name='codeemit' stamp='0.400'>
<phase_done name='codeemit' stamp='0.400'/>
</phase>
<phase name='codeinstall' stamp='0.400'>
<dependency type='unique_concrete_method' ctxk='900' x='910'/>
<dependency type='unique_concrete_method' ctxk='900' x='914'/>
<phase_done name='codeinstall' stamp='0.403'/>
</phase>
<code_cache total_blobs='324' nmethods='77' adapters='177' free_code_cache='334260160'/>
<task_done success='1' nmsize='2472' count='725' inlined_bytes='54' stamp='0.403'/>
</task>
<task compile_id='80' method='java/util/jar/JarFile getJarEntry (Ljava/lang/String;)Ljava/util/jar/JarEntry;' bytes='9' count='628' iicount='628' level='3' stamp='0.403'>
<phase name='buildIR' stamp='0.403'>
<klass id='900' name='java/util/jar/JarEntry' flags='1'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='899' name='java/util/jar/JarFile' flags='1'/>
<method id='901' holder='899' name='getJarEntry' return='900' arguments='797' flags='1' bytes='9' iicount='628'/>
<parse method='901'  stamp='0.403'>
<bc code='182' bci='2'/>
<klass id='904' name='java/util/zip/ZipEntry' flags='1'/>
<method id='905' holder='899' name='getEntry' return='904' arguments='797' flags='1' bytes='22' iicount='628'/>
<call method='905' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='899'/>
<parse method='905'>
<bc code='183' bci='2'/>
<klass id='907' name='java/util/zip/ZipFile' flags='1'/>
<method id='908' holder='907' name='getEntry' return='904' arguments='797' flags='1' bytes='86' iicount='628'/>
<call method='908' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='16'/>
<type id='791' name='void'/>
<klass id='903' name='java/util/jar/JarFile$JarFileEntry' flags='2'/>
<method id='910' holder='903' name='&lt;init&gt;' return='791' arguments='899 904' flags='0' bytes='11' iicount='97'/>
<call method='910' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='910'>
<bc code='183' bci='7'/>
<method id='912' holder='900' name='&lt;init&gt;' return='791' arguments='904' flags='1' bytes='6' iicount='97'/>
<call method='912' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='912'>
<bc code='183' bci='2'/>
<method id='914' holder='904' name='&lt;init&gt;' return='791' arguments='904' flags='1' bytes='146' iicount='97'/>
<call method='914' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.403'/>
</parse>
<parse_done stamp='0.403'/>
</parse>
<parse_done stamp='0.403'/>
</parse>
<parse_done stamp='0.403'/>
</parse>
<phase name='optimize_blocks' stamp='0.403'>
<phase_done name='optimize_blocks' stamp='0.403'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.403'>
<phase_done name='rangeCheckElimination' stamp='0.403'/>
</phase>
<phase name='optimize_null_checks' stamp='0.403'>
<phase_done name='optimize_null_checks' stamp='0.403'/>
</phase>
<phase_done name='buildIR' stamp='0.403'/>
</phase>
<phase name='emit_lir' stamp='0.403'>
<phase name='lirGeneration' stamp='0.403'>
<phase_done name='lirGeneration' stamp='0.403'/>
</phase>
<phase name='linearScan' stamp='0.403'>
<phase_done name='linearScan' stamp='0.403'/>
</phase>
<phase_done name='emit_lir' stamp='0.403'/>
</phase>
<phase name='codeemit' stamp='0.403'>
<phase_done name='codeemit' stamp='0.403'/>
</phase>
<phase name='codeinstall' stamp='0.403'>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.405'/>
</phase>
<code_cache total_blobs='325' nmethods='78' adapters='177' free_code_cache='334257600'/>
<task_done success='1' nmsize='1560' count='628' inlined_bytes='39' stamp='0.405'/>
</task>
<task compile_id='91' method='java/util/Arrays copyOf ([CI)[C' bytes='19' count='844' iicount='844' level='3' stamp='0.405'>
<phase name='buildIR' stamp='0.405'>
<klass id='888' name='[C' flags='1041'/>
<type id='789' name='int'/>
<klass id='899' name='java/util/Arrays' flags='1'/>
<method id='900' holder='899' name='copyOf' return='888' arguments='888 789' flags='9' bytes='19' iicount='844'/>
<parse method='900'  stamp='0.405'>
<bc code='184' bci='11'/>
<klass id='902' name='java/lang/Math' flags='17'/>
<method id='903' holder='902' name='min' return='789' arguments='789 789' flags='9' bytes='11' compile_id='7' compiler='C1' level='3' iicount='4963'/>
<call method='903' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<parse_done stamp='0.405'/>
</parse>
<bc code='184' bci='14'/>
<type id='791' name='void'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='905' holder='802' name='arraycopy' return='791' arguments='796 789 796 789 789' flags='265' bytes='0' compile_id='8' compile_kind='c2n' level='0' iicount='640'/>
<call method='905' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.405'/>
</parse>
<phase name='optimize_blocks' stamp='0.405'>
<phase_done name='optimize_blocks' stamp='0.405'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.405'>
<phase_done name='rangeCheckElimination' stamp='0.405'/>
</phase>
<phase name='optimize_null_checks' stamp='0.405'>
<phase_done name='optimize_null_checks' stamp='0.405'/>
</phase>
<phase_done name='buildIR' stamp='0.405'/>
</phase>
<phase name='emit_lir' stamp='0.405'>
<phase name='lirGeneration' stamp='0.405'>
<phase_done name='lirGeneration' stamp='0.405'/>
</phase>
<phase name='linearScan' stamp='0.405'>
<phase_done name='linearScan' stamp='0.405'/>
</phase>
<phase_done name='emit_lir' stamp='0.405'/>
</phase>
<phase name='codeemit' stamp='0.405'>
<phase_done name='codeemit' stamp='0.405'/>
</phase>
<phase name='codeinstall' stamp='0.405'>
<phase_done name='codeinstall' stamp='0.406'/>
</phase>
<code_cache total_blobs='326' nmethods='79' adapters='177' free_code_cache='334256000'/>
<task_done success='1' nmsize='808' count='844' inlined_bytes='11' stamp='0.406'/>
</task>
<task compile_id='90' method='sun/misc/URLClassPath$JarLoader getResource (Ljava/lang/String;Z)Lsun/misc/Resource;' bytes='85' count='537' iicount='537' level='3' stamp='0.406'>
<phase name='buildIR' stamp='0.406'>
<klass id='900' name='sun/misc/Resource' flags='1025'/>
<klass id='797' name='java/lang/String' flags='17'/>
<type id='783' name='boolean'/>
<klass id='899' name='sun/misc/URLClassPath$JarLoader' flags='8'/>
<method id='901' holder='899' name='getResource' return='900' arguments='797 783' flags='0' bytes='85' iicount='537'/>
<parse method='901'  stamp='0.406'>
<bc code='182' bci='12'/>
<klass id='904' name='sun/misc/MetaIndex' flags='1'/>
<method id='905' holder='904' name='mayContain' return='783' arguments='797' flags='1' bytes='51' iicount='18'/>
<call method='905' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='904'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='904'/>
<bc code='183' bci='21'/>
<type id='791' name='void'/>
<method id='907' holder='899' name='ensureOpen' return='791' flags='2' bytes='36' iicount='531'/>
<call method='907' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='33'/>
<klass id='803' name='java/lang/Throwable' flags='1'/>
<klass id='909' name='java/lang/InternalError' unloaded='1'/>
<method id='910' holder='909' name='&lt;init&gt;' return='791' arguments='803' unloaded='1'/>
<call method='910' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='42'/>
<klass id='911' name='java/util/jar/JarEntry' flags='1'/>
<klass id='903' name='java/util/jar/JarFile' flags='1'/>
<method id='912' holder='903' name='getJarEntry' return='911' arguments='797' flags='1' bytes='9' compile_id='80' compiler='C1' level='3' iicount='628'/>
<call method='912' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='903'/>
<parse method='912'>
<bc code='182' bci='2'/>
<klass id='915' name='java/util/zip/ZipEntry' flags='1'/>
<method id='916' holder='903' name='getEntry' return='915' arguments='797' flags='1' bytes='22' iicount='628'/>
<call method='916' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='903'/>
<parse method='916'>
<bc code='183' bci='2'/>
<klass id='918' name='java/util/zip/ZipFile' flags='1'/>
<method id='919' holder='918' name='getEntry' return='915' arguments='797' flags='1' bytes='86' iicount='628'/>
<call method='919' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='16'/>
<klass id='914' name='java/util/jar/JarFile$JarFileEntry' flags='2'/>
<method id='921' holder='914' name='&lt;init&gt;' return='791' arguments='903 915' flags='0' bytes='11' iicount='97'/>
<call method='921' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='921'>
<bc code='183' bci='7'/>
<method id='923' holder='911' name='&lt;init&gt;' return='791' arguments='915' flags='1' bytes='6' iicount='97'/>
<call method='923' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='923'>
<bc code='183' bci='2'/>
<method id='925' holder='915' name='&lt;init&gt;' return='791' arguments='915' flags='1' bytes='146' iicount='97'/>
<call method='925' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.406'/>
</parse>
<parse_done stamp='0.406'/>
</parse>
<parse_done stamp='0.406'/>
</parse>
<parse_done stamp='0.406'/>
</parse>
<bc code='182' bci='54'/>
<method id='927' holder='899' name='checkResource' return='900' arguments='797 783 911' flags='0' bytes='55' iicount='97'/>
<call method='927' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='899'/>
<bc code='183' bci='71'/>
<klass id='930' name='java/util/HashSet' flags='1'/>
<method id='931' holder='930' name='&lt;init&gt;' return='791' flags='1' bytes='16' iicount='5'/>
<call method='931' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='931'>
<bc code='183' bci='1'/>
<klass id='933' name='java/util/AbstractSet' flags='1025'/>
<method id='934' holder='933' name='&lt;init&gt;' return='791' flags='4' bytes='5' iicount='11'/>
<call method='934' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='934'>
<bc code='183' bci='1'/>
<klass id='936' name='java/util/AbstractCollection' flags='1025'/>
<method id='937' holder='936' name='&lt;init&gt;' return='791' flags='4' bytes='5' iicount='52'/>
<call method='937' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='937'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='939' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='446905'/>
<call method='939' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='939'>
<parse_done stamp='0.406'/>
</parse>
<parse_done stamp='0.406'/>
</parse>
<parse_done stamp='0.406'/>
</parse>
<bc code='183' bci='9'/>
<klass id='941' name='java/util/HashMap' flags='1'/>
<method id='942' holder='941' name='&lt;init&gt;' return='791' flags='1' bytes='11' iicount='20'/>
<call method='942' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='942'>
<bc code='183' bci='1'/>
<klass id='944' name='java/util/AbstractMap' flags='1025'/>
<method id='945' holder='944' name='&lt;init&gt;' return='791' flags='4' bytes='5' iicount='64'/>
<call method='945' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='945'>
<bc code='183' bci='1'/>
<call method='939' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='939'>
<parse_done stamp='0.406'/>
</parse>
<parse_done stamp='0.406'/>
</parse>
<parse_done stamp='0.406'/>
</parse>
<parse_done stamp='0.406'/>
</parse>
<bc code='182' bci='81'/>
<klass id='947' name='java/util/Set' flags='1537'/>
<method id='948' holder='899' name='getResource' return='900' arguments='797 783 947' flags='0' bytes='353' iicount='1'/>
<call method='948' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='899'/>
<parse_done stamp='0.406'/>
</parse>
<phase name='optimize_blocks' stamp='0.406'>
<phase_done name='optimize_blocks' stamp='0.406'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.406'>
<phase_done name='rangeCheckElimination' stamp='0.406'/>
</phase>
<phase name='optimize_null_checks' stamp='0.406'>
<phase_done name='optimize_null_checks' stamp='0.406'/>
</phase>
<phase_done name='buildIR' stamp='0.406'/>
</phase>
<phase name='emit_lir' stamp='0.406'>
<phase name='lirGeneration' stamp='0.406'>
<phase_done name='lirGeneration' stamp='0.406'/>
</phase>
<phase name='linearScan' stamp='0.406'>
<phase_done name='linearScan' stamp='0.407'/>
</phase>
<phase_done name='emit_lir' stamp='0.407'/>
</phase>
<phase name='codeemit' stamp='0.407'>
<phase_done name='codeemit' stamp='0.407'/>
</phase>
<phase name='codeinstall' stamp='0.407'>
<dependency type='leaf_type' ctxk='904'/>
<dependency type='leaf_type' ctxk='899'/>
<dependency type='leaf_type' ctxk='903'/>
<phase_done name='codeinstall' stamp='0.434'/>
</phase>
<code_cache total_blobs='327' nmethods='80' adapters='177' free_code_cache='334250112'/>
<task_done success='1' nmsize='3400' count='548' inlined_bytes='92' stamp='0.434'/>
</task>
<task compile_id='94' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='1532' backedge_count='74' iicount='1532' level='3' stamp='0.434'>
<phase name='buildIR' stamp='0.434'>
<klass id='796' name='java/lang/Object' flags='1'/>
<type id='789' name='int'/>
<type id='783' name='boolean'/>
<klass id='899' name='java/util/HashMap' flags='1'/>
<method id='900' holder='899' name='putVal' return='796' arguments='789 796 796 783 783' flags='16' bytes='300' iicount='1532'/>
<parse method='900'  stamp='0.434'>
<bc code='182' bci='20'/>
<klass id='903' name='[Ljava/util/HashMap$Node;' flags='1040'/>
<method id='904' holder='899' name='resize' return='903' flags='16' bytes='359' iicount='30'/>
<call method='904' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='56'/>
<klass id='902' name='java/util/HashMap$Node' flags='8'/>
<method id='906' holder='899' name='newNode' return='902' arguments='789 796 796 902' flags='0' bytes='13' iicount='1437'/>
<call method='906' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='91'/>
<method id='907' holder='796' name='equals' return='783' arguments='796' flags='1' bytes='11' iicount='1'/>
<call method='907' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='123'/>
<klass id='908' name='java/util/HashMap$TreeNode' flags='24'/>
<method id='909' holder='908' name='putTreeVal' return='908' arguments='899 903 789 796 796' flags='16' bytes='314' iicount='1'/>
<call method='909' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='152'/>
<call method='906' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='169'/>
<type id='791' name='void'/>
<method id='910' holder='899' name='treeifyBin' return='791' arguments='903 789' flags='16' bytes='110' iicount='1'/>
<call method='910' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='203'/>
<call method='907' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='253'/>
<method id='912' holder='899' name='afterNodeAccess' return='791' arguments='902' flags='0' bytes='1' iicount='65'/>
<call method='912' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='288'/>
<call method='904' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='295'/>
<method id='913' holder='899' name='afterNodeInsertion' return='791' arguments='783' flags='0' bytes='1' iicount='1437'/>
<call method='913' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.434'/>
</parse>
<phase name='optimize_blocks' stamp='0.434'>
<phase_done name='optimize_blocks' stamp='0.434'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.434'>
<phase_done name='rangeCheckElimination' stamp='0.434'/>
</phase>
<phase name='optimize_null_checks' stamp='0.434'>
<phase_done name='optimize_null_checks' stamp='0.434'/>
</phase>
<phase_done name='buildIR' stamp='0.434'/>
</phase>
<phase name='emit_lir' stamp='0.434'>
<phase name='lirGeneration' stamp='0.434'>
<phase_done name='lirGeneration' stamp='0.434'/>
</phase>
<phase name='linearScan' stamp='0.434'>
<phase_done name='linearScan' stamp='0.434'/>
</phase>
<phase_done name='emit_lir' stamp='0.434'/>
</phase>
<phase name='codeemit' stamp='0.434'>
<phase_done name='codeemit' stamp='0.435'/>
</phase>
<phase name='codeinstall' stamp='0.435'>
<phase_done name='codeinstall' stamp='0.443'/>
</phase>
<code_cache total_blobs='328' nmethods='81' adapters='177' free_code_cache='334238976'/>
<task_done success='1' nmsize='7896' count='1533' backedge_count='74' stamp='0.443'/>
</task>
<task compile_id='95' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='1467' iicount='1467' level='3' stamp='0.443'>
<phase name='buildIR' stamp='0.443'>
<type id='791' name='void'/>
<type id='789' name='int'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='899' name='java/util/HashMap$Node' flags='8'/>
<method id='900' holder='899' name='&lt;init&gt;' return='791' arguments='789 796 796 899' flags='0' bytes='26' iicount='1467'/>
<parse method='900'  stamp='0.443'>
<bc code='183' bci='1'/>
<method id='902' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='524465'/>
<call method='902' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='899'/>
<parse_done stamp='0.443'/>
</parse>
<parse_done stamp='0.443'/>
</parse>
<phase name='optimize_blocks' stamp='0.443'>
<phase_done name='optimize_blocks' stamp='0.443'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.443'>
<phase_done name='rangeCheckElimination' stamp='0.443'/>
</phase>
<phase name='optimize_null_checks' stamp='0.443'>
<phase_done name='optimize_null_checks' stamp='0.443'/>
</phase>
<phase_done name='buildIR' stamp='0.443'/>
</phase>
<phase name='emit_lir' stamp='0.443'>
<phase name='lirGeneration' stamp='0.443'>
<phase_done name='lirGeneration' stamp='0.443'/>
</phase>
<phase name='linearScan' stamp='0.443'>
<phase_done name='linearScan' stamp='0.443'/>
</phase>
<phase_done name='emit_lir' stamp='0.443'/>
</phase>
<phase name='codeemit' stamp='0.443'>
<phase_done name='codeemit' stamp='0.443'/>
</phase>
<phase name='codeinstall' stamp='0.443'>
<dependency type='no_finalizable_subclasses' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.444'/>
</phase>
<code_cache total_blobs='329' nmethods='82' adapters='177' free_code_cache='334237824'/>
<task_done success='1' nmsize='496' count='1467' inlined_bytes='1' stamp='0.444'/>
</task>
<task compile_id='96' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='1437' iicount='1437' level='3' stamp='0.444'>
<phase name='buildIR' stamp='0.444'>
<klass id='900' name='java/util/HashMap$Node' flags='8'/>
<type id='789' name='int'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='899' name='java/util/HashMap' flags='1'/>
<method id='901' holder='899' name='newNode' return='900' arguments='789 796 796 900' flags='0' bytes='13' iicount='1437'/>
<parse method='901'  stamp='0.444'>
<bc code='183' bci='9'/>
<type id='791' name='void'/>
<method id='903' holder='900' name='&lt;init&gt;' return='791' arguments='789 796 796 900' flags='0' bytes='26' compile_id='95' compiler='C1' level='3' iicount='1467'/>
<call method='903' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<bc code='183' bci='1'/>
<method id='905' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='526168'/>
<call method='905' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='905'>
<parse_done stamp='0.444'/>
</parse>
<parse_done stamp='0.444'/>
</parse>
<parse_done stamp='0.444'/>
</parse>
<phase name='optimize_blocks' stamp='0.444'>
<phase_done name='optimize_blocks' stamp='0.444'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.444'>
<phase_done name='rangeCheckElimination' stamp='0.444'/>
</phase>
<phase name='optimize_null_checks' stamp='0.444'>
<phase_done name='optimize_null_checks' stamp='0.444'/>
</phase>
<phase_done name='buildIR' stamp='0.444'/>
</phase>
<phase name='emit_lir' stamp='0.444'>
<phase name='lirGeneration' stamp='0.444'>
<phase_done name='lirGeneration' stamp='0.444'/>
</phase>
<phase name='linearScan' stamp='0.444'>
<phase_done name='linearScan' stamp='0.444'/>
</phase>
<phase_done name='emit_lir' stamp='0.444'/>
</phase>
<phase name='codeemit' stamp='0.444'>
<phase_done name='codeemit' stamp='0.444'/>
</phase>
<phase name='codeinstall' stamp='0.444'>
<phase_done name='codeinstall' stamp='0.445'/>
</phase>
<code_cache total_blobs='330' nmethods='83' adapters='177' free_code_cache='334236352'/>
<task_done success='1' nmsize='688' count='1437' inlined_bytes='27' stamp='0.445'/>
</task>
<task compile_id='97' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='1437' iicount='1437' level='3' stamp='0.445'>
<phase name='buildIR' stamp='0.445'>
<type id='791' name='void'/>
<type id='783' name='boolean'/>
<klass id='899' name='java/util/HashMap' flags='1'/>
<method id='900' holder='899' name='afterNodeInsertion' return='791' arguments='783' flags='0' bytes='1' iicount='1437'/>
<parse method='900'  stamp='0.445'>
<parse_done stamp='0.445'/>
</parse>
<phase name='optimize_blocks' stamp='0.445'>
<phase_done name='optimize_blocks' stamp='0.445'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.445'>
<phase_done name='rangeCheckElimination' stamp='0.445'/>
</phase>
<phase name='optimize_null_checks' stamp='0.445'>
<phase_done name='optimize_null_checks' stamp='0.445'/>
</phase>
<phase_done name='buildIR' stamp='0.445'/>
</phase>
<phase name='emit_lir' stamp='0.445'>
<phase name='lirGeneration' stamp='0.445'>
<phase_done name='lirGeneration' stamp='0.445'/>
</phase>
<phase name='linearScan' stamp='0.445'>
<phase_done name='linearScan' stamp='0.445'/>
</phase>
<phase_done name='emit_lir' stamp='0.445'/>
</phase>
<phase name='codeemit' stamp='0.445'>
<phase_done name='codeemit' stamp='0.445'/>
</phase>
<phase name='codeinstall' stamp='0.445'>
<phase_done name='codeinstall' stamp='0.445'/>
</phase>
<code_cache total_blobs='331' nmethods='84' adapters='177' free_code_cache='334235520'/>
<task_done success='1' nmsize='336' count='1437' stamp='0.445'/>
</task>
<task compile_id='98' method='java/util/zip/ZipFile getEntry (Ljava/lang/String;)Ljava/util/zip/ZipEntry;' bytes='86' count='649' iicount='649' level='3' stamp='0.445'>
<phase name='buildIR' stamp='0.445'>
<klass id='900' name='java/util/zip/ZipEntry' flags='1'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='899' name='java/util/zip/ZipFile' flags='1'/>
<method id='901' holder='899' name='getEntry' return='900' arguments='797' flags='1' bytes='86' iicount='649'/>
<parse method='901'  stamp='0.445'>
<bc code='183' bci='10'/>
<type id='791' name='void'/>
<klass id='895' name='java/lang/NullPointerException' flags='1'/>
<method id='904' holder='895' name='&lt;init&gt;' return='791' arguments='797' flags='1' bytes='6' iicount='1'/>
<call method='904' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='183' bci='22'/>
<method id='906' holder='899' name='ensureOpen' return='791' flags='2' bytes='37' compile_id='85' compiler='C1' level='3' iicount='749'/>
<call method='906' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='34'/>
<klass id='891' name='[B' flags='1041'/>
<klass id='908' name='java/util/zip/ZipCoder' flags='16'/>
<method id='909' holder='908' name='getBytes' return='891' arguments='797' flags='0' bytes='192' compile_id='86' compiler='C1' level='3' iicount='749'/>
<call method='909' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='38'/>
<type id='790' name='long'/>
<type id='783' name='boolean'/>
<method id='912' holder='899' name='getEntry' return='790' arguments='790 891 783' flags='266' bytes='0' compile_id='88' compile_kind='c2n' level='0' iicount='640'/>
<call method='912' instr='invokestatic'/>
<inline_fail reason='native method'/>
<bc code='183' bci='51'/>
<method id='913' holder='899' name='getZipEntry' return='900' arguments='797 790' flags='2' bytes='236' iicount='100'/>
<call method='913' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='61'/>
<method id='915' holder='899' name='freeEntry' return='791' arguments='790 790' flags='266' bytes='0' iicount='200'/>
<call method='915' instr='invokestatic'/>
<inline_fail reason='native method'/>
<parse_done stamp='0.446'/>
</parse>
<phase name='optimize_blocks' stamp='0.446'>
<phase_done name='optimize_blocks' stamp='0.446'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.446'>
<phase_done name='rangeCheckElimination' stamp='0.446'/>
</phase>
<phase name='optimize_null_checks' stamp='0.446'>
<phase_done name='optimize_null_checks' stamp='0.446'/>
</phase>
<phase_done name='buildIR' stamp='0.446'/>
</phase>
<phase name='emit_lir' stamp='0.446'>
<phase name='lirGeneration' stamp='0.446'>
<phase_done name='lirGeneration' stamp='0.446'/>
</phase>
<phase name='linearScan' stamp='0.446'>
<phase_done name='linearScan' stamp='0.446'/>
</phase>
<phase_done name='emit_lir' stamp='0.446'/>
</phase>
<phase name='codeemit' stamp='0.446'>
<phase_done name='codeemit' stamp='0.446'/>
</phase>
<phase name='codeinstall' stamp='0.446'>
<phase_done name='codeinstall' stamp='0.461'/>
</phase>
<code_cache total_blobs='332' nmethods='85' adapters='177' free_code_cache='334232448'/>
<task_done success='1' nmsize='1496' count='649' stamp='0.461'/>
</task>
<task compile_id='99' method='java/lang/Integer intValue ()I' bytes='5' count='206' iicount='206' level='1' stamp='0.461'>
<phase name='buildIR' stamp='0.461'>
<type id='789' name='int'/>
<klass id='883' name='java/lang/Integer' flags='17'/>
<method id='899' holder='883' name='intValue' return='789' flags='1' bytes='5' iicount='206'/>
<parse method='899'  stamp='0.461'>
<parse_done stamp='0.461'/>
</parse>
<phase name='optimize_blocks' stamp='0.461'>
<phase_done name='optimize_blocks' stamp='0.461'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.461'>
<phase_done name='rangeCheckElimination' stamp='0.461'/>
</phase>
<phase name='optimize_null_checks' stamp='0.461'>
<phase_done name='optimize_null_checks' stamp='0.461'/>
</phase>
<phase_done name='buildIR' stamp='0.461'/>
</phase>
<phase name='emit_lir' stamp='0.461'>
<phase name='lirGeneration' stamp='0.461'>
<phase_done name='lirGeneration' stamp='0.461'/>
</phase>
<phase name='linearScan' stamp='0.461'>
<phase_done name='linearScan' stamp='0.461'/>
</phase>
<phase_done name='emit_lir' stamp='0.461'/>
</phase>
<phase name='codeemit' stamp='0.461'>
<phase_done name='codeemit' stamp='0.461'/>
</phase>
<phase name='codeinstall' stamp='0.461'>
<phase_done name='codeinstall' stamp='0.462'/>
</phase>
<code_cache total_blobs='333' nmethods='86' adapters='177' free_code_cache='334231680'/>
<task_done success='1' nmsize='272' count='206' stamp='0.462'/>
</task>
<task compile_id='93' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='1534' iicount='1534' level='3' stamp='0.462'>
<phase name='buildIR' stamp='0.462'>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='899' name='java/util/HashMap' flags='1'/>
<method id='900' holder='899' name='put' return='796' arguments='796 796' flags='1' bytes='13' iicount='1534'/>
<parse method='900'  stamp='0.462'>
<bc code='184' bci='2'/>
<type id='789' name='int'/>
<method id='902' holder='899' name='hash' return='789' arguments='796' flags='24' bytes='20' compile_id='65' compiler='C1' level='3' iicount='2119'/>
<call method='902' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<bc code='182' bci='9'/>
<method id='904' holder='796' name='hashCode' return='789' flags='257' bytes='0' iicount='313'/>
<call method='904' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.462'/>
</parse>
<bc code='182' bci='9'/>
<type id='783' name='boolean'/>
<method id='905' holder='899' name='putVal' return='796' arguments='789 796 796 783 783' flags='16' bytes='300' compile_id='94' compiler='C1' level='3' iicount='1535'/>
<call method='905' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.462'/>
</parse>
<phase name='optimize_blocks' stamp='0.462'>
<phase_done name='optimize_blocks' stamp='0.462'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.462'>
<phase_done name='rangeCheckElimination' stamp='0.462'/>
</phase>
<phase name='optimize_null_checks' stamp='0.462'>
<phase_done name='optimize_null_checks' stamp='0.462'/>
</phase>
<phase_done name='buildIR' stamp='0.462'/>
</phase>
<phase name='emit_lir' stamp='0.462'>
<phase name='lirGeneration' stamp='0.462'>
<phase_done name='lirGeneration' stamp='0.462'/>
</phase>
<phase name='linearScan' stamp='0.462'>
<phase_done name='linearScan' stamp='0.462'/>
</phase>
<phase_done name='emit_lir' stamp='0.462'/>
</phase>
<phase name='codeemit' stamp='0.462'>
<phase_done name='codeemit' stamp='0.462'/>
</phase>
<phase name='codeinstall' stamp='0.462'>
<phase_done name='codeinstall' stamp='0.464'/>
</phase>
<code_cache total_blobs='334' nmethods='87' adapters='177' free_code_cache='334229632'/>
<task_done success='1' nmsize='1176' count='1534' inlined_bytes='20' stamp='0.464'/>
</task>
<task compile_id='100' method='java/lang/ClassLoader checkName (Ljava/lang/String;)Z' bytes='43' count='516' iicount='516' level='3' stamp='0.464'>
<phase name='buildIR' stamp='0.464'>
<type id='783' name='boolean'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='800' name='java/lang/ClassLoader' flags='1025'/>
<method id='899' holder='800' name='checkName' return='783' arguments='797' flags='2' bytes='43' iicount='516'/>
<parse method='899'  stamp='0.464'>
<bc code='182' bci='5'/>
<type id='789' name='int'/>
<method id='901' holder='797' name='length' return='789' flags='1' bytes='6' compile_id='20' compiler='C1' level='1' iicount='3125'/>
<call method='901' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<parse_done stamp='0.464'/>
</parse>
<bc code='182' bci='16'/>
<method id='903' holder='797' name='indexOf' return='789' arguments='789' flags='1' bytes='7' compile_id='22' compiler='C1' level='3' iicount='2078'/>
<call method='903' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<bc code='182' bci='3'/>
<method id='905' holder='797' name='indexOf' return='789' arguments='789 789' flags='1' bytes='70' compile_id='6' compiler='C1' level='3' iicount='2304'/>
<call method='905' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.464'/>
</parse>
<bc code='184' bci='23'/>
<klass id='907' name='sun/misc/VM' flags='1'/>
<method id='908' holder='907' name='allowArraySyntax' return='783' flags='9' bytes='4' iicount='516'/>
<call method='908' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='908'>
<parse_done stamp='0.464'/>
</parse>
<bc code='182' bci='31'/>
<type id='784' name='char'/>
<method id='911' holder='797' name='charAt' return='784' arguments='789' flags='1' bytes='29' compile_id='5' compiler='C1' level='3' iicount='20368756'/>
<call method='911' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='911'>
<bc code='183' bci='18'/>
<type id='791' name='void'/>
<klass id='913' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='914' holder='913' name='&lt;init&gt;' return='791' arguments='789' unloaded='1'/>
<call method='914' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.464'/>
</parse>
<parse_done stamp='0.464'/>
</parse>
<phase name='optimize_blocks' stamp='0.464'>
<phase_done name='optimize_blocks' stamp='0.464'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.464'>
<phase_done name='rangeCheckElimination' stamp='0.464'/>
</phase>
<phase name='optimize_null_checks' stamp='0.464'>
<phase_done name='optimize_null_checks' stamp='0.464'/>
</phase>
<phase_done name='buildIR' stamp='0.464'/>
</phase>
<phase name='emit_lir' stamp='0.464'>
<phase name='lirGeneration' stamp='0.464'>
<phase_done name='lirGeneration' stamp='0.464'/>
</phase>
<phase name='linearScan' stamp='0.464'>
<phase_done name='linearScan' stamp='0.465'/>
</phase>
<phase_done name='emit_lir' stamp='0.465'/>
</phase>
<phase name='codeemit' stamp='0.465'>
<phase_done name='codeemit' stamp='0.465'/>
</phase>
<phase name='codeinstall' stamp='0.465'>
<phase_done name='codeinstall' stamp='0.468'/>
</phase>
<code_cache total_blobs='335' nmethods='88' adapters='177' free_code_cache='334226752'/>
<task_done success='1' nmsize='1400' count='516' inlined_bytes='46' stamp='0.468'/>
</task>
<task compile_id='101' method='sun/misc/VM allowArraySyntax ()Z' bytes='4' count='516' iicount='516' level='3' stamp='0.468'>
<phase name='buildIR' stamp='0.468'>
<type id='783' name='boolean'/>
<klass id='899' name='sun/misc/VM' flags='1'/>
<method id='900' holder='899' name='allowArraySyntax' return='783' flags='9' bytes='4' iicount='516'/>
<parse method='900'  stamp='0.468'>
<parse_done stamp='0.468'/>
</parse>
<phase name='optimize_blocks' stamp='0.468'>
<phase_done name='optimize_blocks' stamp='0.468'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.468'>
<phase_done name='rangeCheckElimination' stamp='0.468'/>
</phase>
<phase name='optimize_null_checks' stamp='0.468'>
<phase_done name='optimize_null_checks' stamp='0.468'/>
</phase>
<phase_done name='buildIR' stamp='0.468'/>
</phase>
<phase name='emit_lir' stamp='0.468'>
<phase name='lirGeneration' stamp='0.468'>
<phase_done name='lirGeneration' stamp='0.468'/>
</phase>
<phase name='linearScan' stamp='0.468'>
<phase_done name='linearScan' stamp='0.468'/>
</phase>
<phase_done name='emit_lir' stamp='0.468'/>
</phase>
<phase name='codeemit' stamp='0.468'>
<phase_done name='codeemit' stamp='0.468'/>
</phase>
<phase name='codeinstall' stamp='0.468'>
<phase_done name='codeinstall' stamp='0.469'/>
</phase>
<code_cache total_blobs='336' nmethods='89' adapters='177' free_code_cache='334225920'/>
<task_done success='1' nmsize='336' count='516' stamp='0.469'/>
</task>
<task compile_id='79' method='java/net/URLStreamHandler getDefaultPort ()I' bytes='2' count='217' iicount='217' level='1' stamp='0.469'>
<phase name='buildIR' stamp='0.469'>
<type id='789' name='int'/>
<klass id='899' name='java/net/URLStreamHandler' flags='1025'/>
<method id='900' holder='899' name='getDefaultPort' return='789' flags='4' bytes='2' iicount='217'/>
<parse method='900'  stamp='0.469'>
<parse_done stamp='0.469'/>
</parse>
<phase name='optimize_blocks' stamp='0.469'>
<phase_done name='optimize_blocks' stamp='0.469'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.469'>
<phase_done name='rangeCheckElimination' stamp='0.469'/>
</phase>
<phase name='optimize_null_checks' stamp='0.469'>
<phase_done name='optimize_null_checks' stamp='0.469'/>
</phase>
<phase_done name='buildIR' stamp='0.469'/>
</phase>
<phase name='emit_lir' stamp='0.469'>
<phase name='lirGeneration' stamp='0.469'>
<phase_done name='lirGeneration' stamp='0.469'/>
</phase>
<phase name='linearScan' stamp='0.469'>
<phase_done name='linearScan' stamp='0.469'/>
</phase>
<phase_done name='emit_lir' stamp='0.469'/>
</phase>
<phase name='codeemit' stamp='0.469'>
<phase_done name='codeemit' stamp='0.469'/>
</phase>
<phase name='codeinstall' stamp='0.469'>
<phase_done name='codeinstall' stamp='0.470'/>
</phase>
<code_cache total_blobs='337' nmethods='90' adapters='177' free_code_cache='334225152'/>
<task_done success='1' nmsize='272' count='217' stamp='0.470'/>
</task>
<task compile_id='103' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='599' backedge_count='5' iicount='599' level='3' stamp='0.470'>
<phase name='buildIR' stamp='0.470'>
<klass id='900' name='java/util/HashMap$Node' flags='8'/>
<type id='789' name='int'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='899' name='java/util/HashMap' flags='1'/>
<method id='901' holder='899' name='getNode' return='900' arguments='789 796' flags='16' bytes='148' iicount='600'/>
<parse method='901'  stamp='0.470'>
<bc code='182' bci='59'/>
<type id='783' name='boolean'/>
<method id='905' holder='796' name='equals' return='783' arguments='796' flags='1' bytes='11' iicount='1'/>
<call method='905' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='94'/>
<klass id='906' name='java/util/HashMap$TreeNode' flags='24'/>
<method id='907' holder='906' name='getTreeNode' return='906' arguments='789 796' flags='16' bytes='22' iicount='1'/>
<call method='907' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='126'/>
<call method='905' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.470'/>
</parse>
<phase name='optimize_blocks' stamp='0.470'>
<phase_done name='optimize_blocks' stamp='0.470'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.470'>
<phase_done name='rangeCheckElimination' stamp='0.470'/>
</phase>
<phase name='optimize_null_checks' stamp='0.470'>
<phase_done name='optimize_null_checks' stamp='0.470'/>
</phase>
<phase_done name='buildIR' stamp='0.470'/>
</phase>
<phase name='emit_lir' stamp='0.470'>
<phase name='lirGeneration' stamp='0.470'>
<phase_done name='lirGeneration' stamp='0.470'/>
</phase>
<phase name='linearScan' stamp='0.470'>
<phase_done name='linearScan' stamp='0.470'/>
</phase>
<phase_done name='emit_lir' stamp='0.470'/>
</phase>
<phase name='codeemit' stamp='0.470'>
<phase_done name='codeemit' stamp='0.470'/>
</phase>
<phase name='codeinstall' stamp='0.470'>
<phase_done name='codeinstall' stamp='0.476'/>
</phase>
<code_cache total_blobs='338' nmethods='91' adapters='177' free_code_cache='334219200'/>
<task_done success='1' nmsize='4200' count='622' backedge_count='5' stamp='0.476'/>
</task>
<task compile_id='102' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='158' iicount='158' level='1' stamp='0.476'>
<phase name='buildIR' stamp='0.476'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='866' name='java/io/File' flags='1'/>
<method id='899' holder='866' name='getPath' return='797' flags='1' bytes='5' iicount='158'/>
<parse method='899'  stamp='0.476'>
<parse_done stamp='0.476'/>
</parse>
<phase name='optimize_blocks' stamp='0.476'>
<phase_done name='optimize_blocks' stamp='0.476'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.476'>
<phase_done name='rangeCheckElimination' stamp='0.476'/>
</phase>
<phase name='optimize_null_checks' stamp='0.476'>
<phase_done name='optimize_null_checks' stamp='0.476'/>
</phase>
<phase_done name='buildIR' stamp='0.476'/>
</phase>
<phase name='emit_lir' stamp='0.476'>
<phase name='lirGeneration' stamp='0.476'>
<phase_done name='lirGeneration' stamp='0.476'/>
</phase>
<phase name='linearScan' stamp='0.476'>
<phase_done name='linearScan' stamp='0.476'/>
</phase>
<phase_done name='emit_lir' stamp='0.476'/>
</phase>
<phase name='codeemit' stamp='0.476'>
<phase_done name='codeemit' stamp='0.476'/>
</phase>
<phase name='codeinstall' stamp='0.476'>
<phase_done name='codeinstall' stamp='0.477'/>
</phase>
<code_cache total_blobs='339' nmethods='92' adapters='177' free_code_cache='334218432'/>
<task_done success='1' nmsize='272' count='158' stamp='0.477'/>
</task>
<task compile_id='81' method='java/security/CodeSource getLocation ()Ljava/net/URL;' bytes='5' count='208' iicount='208' level='1' stamp='0.477'>
<phase name='buildIR' stamp='0.477'>
<klass id='868' name='java/net/URL' flags='17'/>
<klass id='873' name='java/security/CodeSource' flags='1'/>
<method id='899' holder='873' name='getLocation' return='868' flags='17' bytes='5' iicount='208'/>
<parse method='899'  stamp='0.477'>
<parse_done stamp='0.477'/>
</parse>
<phase name='optimize_blocks' stamp='0.477'>
<phase_done name='optimize_blocks' stamp='0.477'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.477'>
<phase_done name='rangeCheckElimination' stamp='0.477'/>
</phase>
<phase name='optimize_null_checks' stamp='0.477'>
<phase_done name='optimize_null_checks' stamp='0.477'/>
</phase>
<phase_done name='buildIR' stamp='0.477'/>
</phase>
<phase name='emit_lir' stamp='0.477'>
<phase name='lirGeneration' stamp='0.477'>
<phase_done name='lirGeneration' stamp='0.477'/>
</phase>
<phase name='linearScan' stamp='0.477'>
<phase_done name='linearScan' stamp='0.477'/>
</phase>
<phase_done name='emit_lir' stamp='0.477'/>
</phase>
<phase name='codeemit' stamp='0.477'>
<phase_done name='codeemit' stamp='0.477'/>
</phase>
<phase name='codeinstall' stamp='0.477'>
<phase_done name='codeinstall' stamp='0.477'/>
</phase>
<code_cache total_blobs='340' nmethods='93' adapters='177' free_code_cache='334217664'/>
<task_done success='1' nmsize='272' count='208' stamp='0.477'/>
</task>
<task compile_id='104' method='java/lang/StringCoding$StringEncoder requestedCharsetName ()Ljava/lang/String;' bytes='5' count='132' iicount='132' level='1' stamp='0.477'>
<phase name='buildIR' stamp='0.477'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='899' name='java/lang/StringCoding$StringEncoder' flags='10'/>
<method id='900' holder='899' name='requestedCharsetName' return='797' flags='16' bytes='5' iicount='132'/>
<parse method='900'  stamp='0.477'>
<parse_done stamp='0.477'/>
</parse>
<phase name='optimize_blocks' stamp='0.477'>
<phase_done name='optimize_blocks' stamp='0.477'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.477'>
<phase_done name='rangeCheckElimination' stamp='0.477'/>
</phase>
<phase name='optimize_null_checks' stamp='0.477'>
<phase_done name='optimize_null_checks' stamp='0.477'/>
</phase>
<phase_done name='buildIR' stamp='0.477'/>
</phase>
<phase name='emit_lir' stamp='0.477'>
<phase name='lirGeneration' stamp='0.477'>
<phase_done name='lirGeneration' stamp='0.477'/>
</phase>
<phase name='linearScan' stamp='0.477'>
<phase_done name='linearScan' stamp='0.477'/>
</phase>
<phase_done name='emit_lir' stamp='0.477'/>
</phase>
<phase name='codeemit' stamp='0.477'>
<phase_done name='codeemit' stamp='0.477'/>
</phase>
<phase name='codeinstall' stamp='0.477'>
<phase_done name='codeinstall' stamp='0.478'/>
</phase>
<code_cache total_blobs='341' nmethods='94' adapters='177' free_code_cache='334216896'/>
<task_done success='1' nmsize='272' count='132' stamp='0.478'/>
</task>
<task compile_id='82' method='java/net/URLClassLoader access$000 (Ljava/net/URLClassLoader;)Lsun/misc/URLClassPath;' bytes='5' count='206' iicount='206' level='1' stamp='0.478'>
<phase name='buildIR' stamp='0.478'>
<klass id='899' name='sun/misc/URLClassPath' flags='1'/>
<klass id='867' name='java/net/URLClassLoader' flags='1'/>
<method id='900' holder='867' name='access$000' return='899' arguments='867' flags='4104' bytes='5' iicount='206'/>
<parse method='900'  stamp='0.478'>
<parse_done stamp='0.478'/>
</parse>
<phase name='optimize_blocks' stamp='0.478'>
<phase_done name='optimize_blocks' stamp='0.478'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.478'>
<phase_done name='rangeCheckElimination' stamp='0.478'/>
</phase>
<phase name='optimize_null_checks' stamp='0.478'>
<phase_done name='optimize_null_checks' stamp='0.478'/>
</phase>
<phase_done name='buildIR' stamp='0.478'/>
</phase>
<phase name='emit_lir' stamp='0.478'>
<phase name='lirGeneration' stamp='0.478'>
<phase_done name='lirGeneration' stamp='0.478'/>
</phase>
<phase name='linearScan' stamp='0.478'>
<phase_done name='linearScan' stamp='0.478'/>
</phase>
<phase_done name='emit_lir' stamp='0.478'/>
</phase>
<phase name='codeemit' stamp='0.478'>
<phase_done name='codeemit' stamp='0.478'/>
</phase>
<phase name='codeinstall' stamp='0.478'>
<phase_done name='codeinstall' stamp='0.478'/>
</phase>
<code_cache total_blobs='342' nmethods='95' adapters='177' free_code_cache='334216128'/>
<task_done success='1' nmsize='240' count='206' stamp='0.478'/>
</task>
<task compile_id='83' method='sun/misc/URLClassPath$JarLoader access$700 (Lsun/misc/URLClassPath$JarLoader;)Ljava/util/jar/JarFile;' bytes='5' count='207' iicount='207' level='1' stamp='0.478'>
<phase name='buildIR' stamp='0.478'>
<klass id='900' name='java/util/jar/JarFile' flags='1'/>
<klass id='899' name='sun/misc/URLClassPath$JarLoader' flags='8'/>
<method id='901' holder='899' name='access$700' return='900' arguments='899' flags='4104' bytes='5' iicount='207'/>
<parse method='901'  stamp='0.478'>
<parse_done stamp='0.478'/>
</parse>
<phase name='optimize_blocks' stamp='0.478'>
<phase_done name='optimize_blocks' stamp='0.478'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.478'>
<phase_done name='rangeCheckElimination' stamp='0.478'/>
</phase>
<phase name='optimize_null_checks' stamp='0.478'>
<phase_done name='optimize_null_checks' stamp='0.478'/>
</phase>
<phase_done name='buildIR' stamp='0.478'/>
</phase>
<phase name='emit_lir' stamp='0.478'>
<phase name='lirGeneration' stamp='0.478'>
<phase_done name='lirGeneration' stamp='0.478'/>
</phase>
<phase name='linearScan' stamp='0.478'>
<phase_done name='linearScan' stamp='0.478'/>
</phase>
<phase_done name='emit_lir' stamp='0.478'/>
</phase>
<phase name='codeemit' stamp='0.478'>
<phase_done name='codeemit' stamp='0.478'/>
</phase>
<phase name='codeinstall' stamp='0.478'>
<phase_done name='codeinstall' stamp='0.479'/>
</phase>
<code_cache total_blobs='343' nmethods='96' adapters='177' free_code_cache='334215360'/>
<task_done success='1' nmsize='240' count='209' stamp='0.479'/>
</task>
<task compile_id='105' method='java/lang/StringBuffer append (Ljava/lang/String;)Ljava/lang/StringBuffer;' bytes='13' count='390' iicount='390' level='3' stamp='0.479'>
<phase name='buildIR' stamp='0.479'>
<klass id='861' name='java/lang/StringBuffer' flags='17'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='861' name='append' return='861' arguments='797' flags='33' bytes='13' iicount='390'/>
<parse method='899'  stamp='0.479'>
<bc code='183' bci='7'/>
<klass id='860' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='901' holder='860' name='append' return='860' arguments='797' flags='1' bytes='50' compile_id='10' compiler='C1' level='3' iicount='1236'/>
<call method='901' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.479'/>
</parse>
<phase name='optimize_blocks' stamp='0.479'>
<phase_done name='optimize_blocks' stamp='0.479'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.479'>
<phase_done name='rangeCheckElimination' stamp='0.479'/>
</phase>
<phase name='optimize_null_checks' stamp='0.479'>
<phase_done name='optimize_null_checks' stamp='0.479'/>
</phase>
<phase_done name='buildIR' stamp='0.479'/>
</phase>
<phase name='emit_lir' stamp='0.479'>
<phase name='lirGeneration' stamp='0.479'>
<phase_done name='lirGeneration' stamp='0.479'/>
</phase>
<phase name='linearScan' stamp='0.479'>
<phase_done name='linearScan' stamp='0.479'/>
</phase>
<phase_done name='emit_lir' stamp='0.479'/>
</phase>
<phase name='codeemit' stamp='0.479'>
<phase_done name='codeemit' stamp='0.479'/>
</phase>
<phase name='codeinstall' stamp='0.479'>
<phase_done name='codeinstall' stamp='0.480'/>
</phase>
<code_cache total_blobs='344' nmethods='97' adapters='177' free_code_cache='334213888'/>
<task_done success='1' nmsize='808' count='390' stamp='0.480'/>
</task>
<task compile_id='106' method='sun/net/www/ParseUtil encodePath (Ljava/lang/String;Z)Ljava/lang/String;' bytes='336' count='134' backedge_count='6167' iicount='134' level='3' stamp='0.480'>
<phase name='buildIR' stamp='0.481'>
<klass id='797' name='java/lang/String' flags='17'/>
<type id='783' name='boolean'/>
<klass id='899' name='sun/net/www/ParseUtil' flags='1'/>
<method id='900' holder='899' name='encodePath' return='797' arguments='797 783' flags='9' bytes='336' iicount='134'/>
<parse method='900'  stamp='0.481'>
<bc code='182' bci='1'/>
<type id='789' name='int'/>
<method id='902' holder='797' name='length' return='789' flags='1' bytes='6' compile_id='20' compiler='C1' level='1' iicount='3280'/>
<call method='902' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<parse_done stamp='0.481'/>
</parse>
<bc code='182' bci='15'/>
<klass id='888' name='[C' flags='1041'/>
<method id='904' holder='797' name='toCharArray' return='888' flags='1' bytes='25' compile_id='64' compiler='C1' level='3' iicount='912'/>
<call method='904' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='904'>
<bc code='184' bci='20'/>
<type id='791' name='void'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='906' holder='802' name='arraycopy' return='791' arguments='796 789 796 789 789' flags='265' bytes='0' compile_id='8' compile_kind='c2n' level='0' iicount='640'/>
<call method='906' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.481'/>
</parse>
<bc code='182' bci='21'/>
<call method='902' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<parse_done stamp='0.481'/>
</parse>
<bc code='182' bci='142'/>
<klass id='909' name='java/util/BitSet' flags='1'/>
<method id='911' holder='909' name='get' return='783' arguments='789' flags='1' bytes='69' iicount='251'/>
<call method='911' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='909'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='909'/>
<bc code='184' bci='152'/>
<type id='784' name='char'/>
<method id='913' holder='899' name='escape' return='789' arguments='888 784 789' flags='10' bytes='42' iicount='1'/>
<call method='913' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='193'/>
<call method='913' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='212'/>
<call method='913' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='230'/>
<call method='913' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='252'/>
<call method='913' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='270'/>
<call method='913' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='313'/>
<call method='906' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<bc code='183' bci='332'/>
<method id='915' holder='797' name='&lt;init&gt;' return='791' arguments='888 789 789' flags='1' bytes='82' compile_id='9' compiler='C1' level='3' iicount='1516'/>
<call method='915' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.481'/>
</parse>
<phase name='optimize_blocks' stamp='0.481'>
<phase_done name='optimize_blocks' stamp='0.481'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.481'>
<phase_done name='rangeCheckElimination' stamp='0.481'/>
</phase>
<phase name='optimize_null_checks' stamp='0.481'>
<phase_done name='optimize_null_checks' stamp='0.481'/>
</phase>
<phase_done name='buildIR' stamp='0.481'/>
</phase>
<phase name='emit_lir' stamp='0.481'>
<phase name='lirGeneration' stamp='0.481'>
<phase_done name='lirGeneration' stamp='0.481'/>
</phase>
<phase name='linearScan' stamp='0.481'>
<phase_done name='linearScan' stamp='0.481'/>
</phase>
<phase_done name='emit_lir' stamp='0.481'/>
</phase>
<phase name='codeemit' stamp='0.481'>
<phase_done name='codeemit' stamp='0.482'/>
</phase>
<phase name='codeinstall' stamp='0.482'>
<dependency type='leaf_type' ctxk='909'/>
<phase_done name='codeinstall' stamp='0.506'/>
</phase>
<code_cache total_blobs='345' nmethods='98' adapters='177' free_code_cache='334206912'/>
<task_done success='1' nmsize='3736' count='135' backedge_count='6228' inlined_bytes='37' stamp='0.506'/>
</task>
<task compile_id='109' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='4771' iicount='4771' level='1' stamp='0.506'>
<phase name='buildIR' stamp='0.506'>
<type id='789' name='int'/>
<klass id='899' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='900' holder='899' name='getProperties' return='789' arguments='789' flags='0' bytes='11' compile_id='37' compiler='C1' level='3' iicount='4771'/>
<parse method='900'  stamp='0.506'>
<parse_done stamp='0.506'/>
</parse>
<phase name='optimize_blocks' stamp='0.506'>
<phase_done name='optimize_blocks' stamp='0.506'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.506'>
<phase_done name='rangeCheckElimination' stamp='0.506'/>
</phase>
<phase name='optimize_null_checks' stamp='0.506'>
<phase_done name='optimize_null_checks' stamp='0.506'/>
</phase>
<phase_done name='buildIR' stamp='0.506'/>
</phase>
<phase name='emit_lir' stamp='0.506'>
<phase name='lirGeneration' stamp='0.506'>
<phase_done name='lirGeneration' stamp='0.506'/>
</phase>
<phase name='linearScan' stamp='0.506'>
<phase_done name='linearScan' stamp='0.506'/>
</phase>
<phase_done name='emit_lir' stamp='0.506'/>
</phase>
<phase name='codeemit' stamp='0.506'>
<phase_done name='codeemit' stamp='0.506'/>
</phase>
<phase name='codeinstall' stamp='0.506'>
<phase_done name='codeinstall' stamp='0.507'/>
</phase>
<code_cache total_blobs='346' nmethods='99' adapters='177' free_code_cache='334206016'/>
<task_done success='1' nmsize='304' count='4777' stamp='0.507'/>
</task>
<task compile_id='108' method='java/lang/String endsWith (Ljava/lang/String;)Z' bytes='17' count='515' iicount='515' level='3' stamp='0.507'>
<phase name='buildIR' stamp='0.507'>
<type id='783' name='boolean'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='endsWith' return='783' arguments='797' flags='1' bytes='17' iicount='515'/>
<parse method='899'  stamp='0.507'>
<bc code='182' bci='13'/>
<type id='789' name='int'/>
<method id='901' holder='797' name='startsWith' return='783' arguments='797 789' flags='1' bytes='72' compile_id='53' compiler='C1' level='3' iicount='959'/>
<call method='901' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.507'/>
</parse>
<phase name='optimize_blocks' stamp='0.507'>
<phase_done name='optimize_blocks' stamp='0.507'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.507'>
<phase_done name='rangeCheckElimination' stamp='0.507'/>
</phase>
<phase name='optimize_null_checks' stamp='0.507'>
<phase_done name='optimize_null_checks' stamp='0.507'/>
</phase>
<phase_done name='buildIR' stamp='0.507'/>
</phase>
<phase name='emit_lir' stamp='0.507'>
<phase name='lirGeneration' stamp='0.507'>
<phase_done name='lirGeneration' stamp='0.507'/>
</phase>
<phase name='linearScan' stamp='0.507'>
<phase_done name='linearScan' stamp='0.507'/>
</phase>
<phase_done name='emit_lir' stamp='0.507'/>
</phase>
<phase name='codeemit' stamp='0.507'>
<phase_done name='codeemit' stamp='0.507'/>
</phase>
<phase name='codeinstall' stamp='0.507'>
<phase_done name='codeinstall' stamp='0.508'/>
</phase>
<code_cache total_blobs='347' nmethods='100' adapters='177' free_code_cache='334204864'/>
<task_done success='1' nmsize='424' count='518' stamp='0.508'/>
</task>
<task compile_id='110' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='604' iicount='604' level='3' stamp='0.508'>
<phase name='buildIR' stamp='0.508'>
<type id='791' name='void'/>
<klass id='888' name='[C' flags='1041'/>
<type id='783' name='boolean'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='&lt;init&gt;' return='791' arguments='888 783' flags='0' bytes='10' iicount='604'/>
<parse method='899'  stamp='0.508'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='901' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='660250'/>
<call method='901' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<parse_done stamp='0.508'/>
</parse>
<parse_done stamp='0.508'/>
</parse>
<phase name='optimize_blocks' stamp='0.508'>
<phase_done name='optimize_blocks' stamp='0.508'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.508'>
<phase_done name='rangeCheckElimination' stamp='0.508'/>
</phase>
<phase name='optimize_null_checks' stamp='0.508'>
<phase_done name='optimize_null_checks' stamp='0.508'/>
</phase>
<phase_done name='buildIR' stamp='0.508'/>
</phase>
<phase name='emit_lir' stamp='0.508'>
<phase name='lirGeneration' stamp='0.508'>
<phase_done name='lirGeneration' stamp='0.508'/>
</phase>
<phase name='linearScan' stamp='0.508'>
<phase_done name='linearScan' stamp='0.508'/>
</phase>
<phase_done name='emit_lir' stamp='0.508'/>
</phase>
<phase name='codeemit' stamp='0.508'>
<phase_done name='codeemit' stamp='0.508'/>
</phase>
<phase name='codeinstall' stamp='0.508'>
<phase_done name='codeinstall' stamp='0.509'/>
</phase>
<code_cache total_blobs='348' nmethods='101' adapters='177' free_code_cache='334203840'/>
<task_done success='1' nmsize='464' count='604' inlined_bytes='1' stamp='0.509'/>
</task>
<task compile_id='84' method='java/util/zip/ZipFile access$000 (Ljava/util/zip/ZipFile;)Ljava/util/Map;' bytes='5' count='206' iicount='206' level='1' stamp='0.509'>
<phase name='buildIR' stamp='0.509'>
<klass id='900' name='java/util/Map' flags='1537'/>
<klass id='899' name='java/util/zip/ZipFile' flags='1'/>
<method id='901' holder='899' name='access$000' return='900' arguments='899' flags='4104' bytes='5' iicount='206'/>
<parse method='901'  stamp='0.509'>
<parse_done stamp='0.509'/>
</parse>
<phase name='optimize_blocks' stamp='0.509'>
<phase_done name='optimize_blocks' stamp='0.509'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.509'>
<phase_done name='rangeCheckElimination' stamp='0.509'/>
</phase>
<phase name='optimize_null_checks' stamp='0.509'>
<phase_done name='optimize_null_checks' stamp='0.509'/>
</phase>
<phase_done name='buildIR' stamp='0.509'/>
</phase>
<phase name='emit_lir' stamp='0.509'>
<phase name='lirGeneration' stamp='0.509'>
<phase_done name='lirGeneration' stamp='0.509'/>
</phase>
<phase name='linearScan' stamp='0.509'>
<phase_done name='linearScan' stamp='0.509'/>
</phase>
<phase_done name='emit_lir' stamp='0.509'/>
</phase>
<phase name='codeemit' stamp='0.509'>
<phase_done name='codeemit' stamp='0.509'/>
</phase>
<phase name='codeinstall' stamp='0.509'>
<phase_done name='codeinstall' stamp='0.509'/>
</phase>
<code_cache total_blobs='349' nmethods='102' adapters='177' free_code_cache='334203072'/>
<task_done success='1' nmsize='240' count='206' stamp='0.509'/>
</task>
<task compile_id='111' method='java/util/HashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='23' count='541' iicount='541' level='3' stamp='0.509'>
<phase name='buildIR' stamp='0.509'>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='899' name='java/util/HashMap' flags='1'/>
<method id='900' holder='899' name='get' return='796' arguments='796' flags='1' bytes='23' iicount='541'/>
<parse method='900'  stamp='0.509'>
<bc code='184' bci='2'/>
<type id='789' name='int'/>
<method id='902' holder='899' name='hash' return='789' arguments='796' flags='24' bytes='20' compile_id='65' compiler='C1' level='3' iicount='2276'/>
<call method='902' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<bc code='182' bci='9'/>
<method id='905' holder='796' name='hashCode' return='789' flags='257' bytes='0' iicount='324'/>
<call method='905' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.509'/>
</parse>
<bc code='182' bci='6'/>
<klass id='906' name='java/util/HashMap$Node' flags='8'/>
<method id='907' holder='899' name='getNode' return='906' arguments='789 796' flags='16' bytes='148' compile_id='103' compiler='C1' level='3' iicount='698'/>
<call method='907' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.509'/>
</parse>
<phase name='optimize_blocks' stamp='0.509'>
<phase_done name='optimize_blocks' stamp='0.509'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.509'>
<phase_done name='rangeCheckElimination' stamp='0.509'/>
</phase>
<phase name='optimize_null_checks' stamp='0.509'>
<phase_done name='optimize_null_checks' stamp='0.509'/>
</phase>
<phase_done name='buildIR' stamp='0.509'/>
</phase>
<phase name='emit_lir' stamp='0.509'>
<phase name='lirGeneration' stamp='0.509'>
<phase_done name='lirGeneration' stamp='0.509'/>
</phase>
<phase name='linearScan' stamp='0.509'>
<phase_done name='linearScan' stamp='0.510'/>
</phase>
<phase_done name='emit_lir' stamp='0.510'/>
</phase>
<phase name='codeemit' stamp='0.510'>
<phase_done name='codeemit' stamp='0.510'/>
</phase>
<phase name='codeinstall' stamp='0.510'>
<phase_done name='codeinstall' stamp='0.512'/>
</phase>
<code_cache total_blobs='351' nmethods='103' adapters='178' free_code_cache='334200192'/>
<task_done success='1' nmsize='1272' count='542' inlined_bytes='20' stamp='0.512'/>
</task>
<task compile_id='113' method='java/lang/String lastIndexOf (I)I' bytes='13' count='513' iicount='513' level='3' stamp='0.512'>
<phase name='buildIR' stamp='0.512'>
<type id='789' name='int'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='lastIndexOf' return='789' arguments='789' flags='1' bytes='13' iicount='513'/>
<parse method='899'  stamp='0.512'>
<bc code='182' bci='9'/>
<method id='901' holder='797' name='lastIndexOf' return='789' arguments='789 789' flags='1' bytes='52' compile_id='33' compiler='C1' level='3' iicount='618'/>
<call method='901' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.512'/>
</parse>
<phase name='optimize_blocks' stamp='0.512'>
<phase_done name='optimize_blocks' stamp='0.512'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.512'>
<phase_done name='rangeCheckElimination' stamp='0.512'/>
</phase>
<phase name='optimize_null_checks' stamp='0.512'>
<phase_done name='optimize_null_checks' stamp='0.512'/>
</phase>
<phase_done name='buildIR' stamp='0.512'/>
</phase>
<phase name='emit_lir' stamp='0.512'>
<phase name='lirGeneration' stamp='0.512'>
<phase_done name='lirGeneration' stamp='0.512'/>
</phase>
<phase name='linearScan' stamp='0.512'>
<phase_done name='linearScan' stamp='0.512'/>
</phase>
<phase_done name='emit_lir' stamp='0.512'/>
</phase>
<phase name='codeemit' stamp='0.512'>
<phase_done name='codeemit' stamp='0.512'/>
</phase>
<phase name='codeinstall' stamp='0.512'>
<phase_done name='codeinstall' stamp='0.512'/>
</phase>
<code_cache total_blobs='352' nmethods='104' adapters='178' free_code_cache='334199168'/>
<task_done success='1' nmsize='392' count='514' stamp='0.512'/>
</task>
<task compile_id='112' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='387' iicount='387' level='3' stamp='0.513'>
<phase name='buildIR' stamp='0.513'>
<type id='791' name='void'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='899' name='java/lang/ref/ReferenceQueue' flags='1'/>
<klass id='822' name='java/lang/ref/Reference' flags='1025'/>
<method id='900' holder='822' name='&lt;init&gt;' return='791' arguments='796 899' flags='0' bytes='25' iicount='387'/>
<parse method='900'  stamp='0.513'>
<bc code='183' bci='1'/>
<method id='902' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='670185'/>
<call method='902' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='822'/>
<parse_done stamp='0.513'/>
</parse>
<parse_done stamp='0.513'/>
</parse>
<phase name='optimize_blocks' stamp='0.513'>
<phase_done name='optimize_blocks' stamp='0.513'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.513'>
<phase_done name='rangeCheckElimination' stamp='0.513'/>
</phase>
<phase name='optimize_null_checks' stamp='0.513'>
<phase_done name='optimize_null_checks' stamp='0.513'/>
</phase>
<phase_done name='buildIR' stamp='0.513'/>
</phase>
<phase name='emit_lir' stamp='0.513'>
<phase name='lirGeneration' stamp='0.513'>
<phase_done name='lirGeneration' stamp='0.513'/>
</phase>
<phase name='linearScan' stamp='0.513'>
<phase_done name='linearScan' stamp='0.513'/>
</phase>
<phase_done name='emit_lir' stamp='0.513'/>
</phase>
<phase name='codeemit' stamp='0.513'>
<phase_done name='codeemit' stamp='0.513'/>
</phase>
<phase name='codeinstall' stamp='0.513'>
<dependency type='no_finalizable_subclasses' ctxk='822'/>
<phase_done name='codeinstall' stamp='0.513'/>
</phase>
<code_cache total_blobs='353' nmethods='105' adapters='178' free_code_cache='334197888'/>
<task_done success='1' nmsize='592' count='389' inlined_bytes='1' stamp='0.513'/>
</task>
<task compile_id='107' method='java/lang/StringCoding deref (Ljava/lang/ThreadLocal;)Ljava/lang/Object;' bytes='19' count='256' iicount='256' level='3' stamp='0.513'>
<phase name='buildIR' stamp='0.513'>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='900' name='java/lang/ThreadLocal' flags='1'/>
<klass id='899' name='java/lang/StringCoding' flags='0'/>
<method id='901' holder='899' name='deref' return='796' arguments='900' flags='10' bytes='19' iicount='256'/>
<parse method='901'  stamp='0.513'>
<bc code='182' bci='1'/>
<method id='903' holder='900' name='get' return='796' flags='1' bytes='38' iicount='305'/>
<call method='903' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='900' x='903'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='15'/>
<klass id='823' name='java/lang/ref/SoftReference' flags='1'/>
<method id='905' holder='823' name='get' return='796' flags='1' bytes='29' iicount='276'/>
<call method='905' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='823' x='905'/>
<inline_success reason='receiver is statically known'/>
<parse method='905'>
<bc code='183' bci='1'/>
<klass id='822' name='java/lang/ref/Reference' flags='1025'/>
<method id='907' holder='822' name='get' return='796' flags='1' bytes='5' compile_id='28' compiler='C1' level='1' iicount='384'/>
<call method='907' instr='invokespecial'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.513'/>
</parse>
<parse_done stamp='0.513'/>
</parse>
<phase name='optimize_blocks' stamp='0.513'>
<phase_done name='optimize_blocks' stamp='0.513'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.513'>
<phase_done name='rangeCheckElimination' stamp='0.513'/>
</phase>
<phase name='optimize_null_checks' stamp='0.513'>
<phase_done name='optimize_null_checks' stamp='0.513'/>
</phase>
<phase_done name='buildIR' stamp='0.513'/>
</phase>
<phase name='emit_lir' stamp='0.513'>
<phase name='lirGeneration' stamp='0.513'>
<phase_done name='lirGeneration' stamp='0.513'/>
</phase>
<phase name='linearScan' stamp='0.513'>
<phase_done name='linearScan' stamp='0.514'/>
</phase>
<phase_done name='emit_lir' stamp='0.514'/>
</phase>
<phase name='codeemit' stamp='0.514'>
<phase_done name='codeemit' stamp='0.514'/>
</phase>
<phase name='codeinstall' stamp='0.514'>
<dependency type='unique_concrete_method' ctxk='900' x='903'/>
<dependency type='unique_concrete_method' ctxk='823' x='905'/>
<phase_done name='codeinstall' stamp='0.515'/>
</phase>
<code_cache total_blobs='354' nmethods='106' adapters='178' free_code_cache='334194688'/>
<task_done success='1' nmsize='2248' count='256' inlined_bytes='29' stamp='0.515'/>
</task>
<task compile_id='115' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='425' iicount='425' level='3' stamp='0.516'>
<phase name='buildIR' stamp='0.516'>
<type id='791' name='void'/>
<klass id='862' name='java/lang/StringBuilder' flags='17'/>
<method id='899' holder='862' name='&lt;init&gt;' return='791' flags='1' bytes='7' iicount='425'/>
<parse method='899'  stamp='0.516'>
<bc code='183' bci='3'/>
<type id='789' name='int'/>
<klass id='860' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='901' holder='860' name='&lt;init&gt;' return='791' arguments='789' flags='0' bytes='12' compile_id='68' compiler='C1' level='3' iicount='572'/>
<call method='901' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='903' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='677459'/>
<call method='903' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<parse_done stamp='0.516'/>
</parse>
<parse_done stamp='0.516'/>
</parse>
<parse_done stamp='0.516'/>
</parse>
<phase name='optimize_blocks' stamp='0.516'>
<phase_done name='optimize_blocks' stamp='0.516'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.516'>
<phase_done name='rangeCheckElimination' stamp='0.516'/>
</phase>
<phase name='optimize_null_checks' stamp='0.516'>
<phase_done name='optimize_null_checks' stamp='0.516'/>
</phase>
<phase_done name='buildIR' stamp='0.516'/>
</phase>
<phase name='emit_lir' stamp='0.516'>
<phase name='lirGeneration' stamp='0.516'>
<phase_done name='lirGeneration' stamp='0.516'/>
</phase>
<phase name='linearScan' stamp='0.516'>
<phase_done name='linearScan' stamp='0.516'/>
</phase>
<phase_done name='emit_lir' stamp='0.516'/>
</phase>
<phase name='codeemit' stamp='0.516'>
<phase_done name='codeemit' stamp='0.516'/>
</phase>
<phase name='codeinstall' stamp='0.516'>
<phase_done name='codeinstall' stamp='0.517'/>
</phase>
<code_cache total_blobs='356' nmethods='108' adapters='178' free_code_cache='334192320'/>
<task_done success='1' nmsize='688' count='425' inlined_bytes='13' stamp='0.517'/>
</task>
<task compile_id='116' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='434' iicount='434' level='3' stamp='0.517'>
<phase name='buildIR' stamp='0.517'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='862' name='java/lang/StringBuilder' flags='17'/>
<method id='899' holder='862' name='toString' return='797' flags='1' bytes='17' iicount='434'/>
<parse method='899'  stamp='0.517'>
<bc code='183' bci='13'/>
<type id='791' name='void'/>
<klass id='888' name='[C' flags='1041'/>
<type id='789' name='int'/>
<method id='901' holder='797' name='&lt;init&gt;' return='791' arguments='888 789 789' flags='1' bytes='82' compile_id='9' compiler='C1' level='3' iicount='1580'/>
<call method='901' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.517'/>
</parse>
<phase name='optimize_blocks' stamp='0.517'>
<phase_done name='optimize_blocks' stamp='0.517'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.517'>
<phase_done name='rangeCheckElimination' stamp='0.517'/>
</phase>
<phase name='optimize_null_checks' stamp='0.517'>
<phase_done name='optimize_null_checks' stamp='0.517'/>
</phase>
<phase_done name='buildIR' stamp='0.517'/>
</phase>
<phase name='emit_lir' stamp='0.517'>
<phase name='lirGeneration' stamp='0.517'>
<phase_done name='lirGeneration' stamp='0.517'/>
</phase>
<phase name='linearScan' stamp='0.517'>
<phase_done name='linearScan' stamp='0.517'/>
</phase>
<phase_done name='emit_lir' stamp='0.517'/>
</phase>
<phase name='codeemit' stamp='0.517'>
<phase_done name='codeemit' stamp='0.517'/>
</phase>
<phase name='codeinstall' stamp='0.517'>
<phase_done name='codeinstall' stamp='0.518'/>
</phase>
<code_cache total_blobs='357' nmethods='109' adapters='178' free_code_cache='334191168'/>
<task_done success='1' nmsize='520' count='436' stamp='0.518'/>
</task>
<task compile_id='117' method='java/lang/ref/ReferenceQueue poll ()Ljava/lang/ref/Reference;' bytes='28' count='256' iicount='256' level='3' stamp='0.518'>
<phase name='buildIR' stamp='0.519'>
<klass id='822' name='java/lang/ref/Reference' flags='1025'/>
<klass id='899' name='java/lang/ref/ReferenceQueue' flags='1'/>
<method id='900' holder='899' name='poll' return='822' flags='1' bytes='28' iicount='256'/>
<parse method='900'  stamp='0.519'>
<bc code='183' bci='17'/>
<method id='903' holder='899' name='reallyPoll' return='822' flags='2' bytes='66' iicount='1'/>
<call method='903' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.519'/>
</parse>
<phase name='optimize_blocks' stamp='0.519'>
<phase_done name='optimize_blocks' stamp='0.519'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.519'>
<phase_done name='rangeCheckElimination' stamp='0.519'/>
</phase>
<phase name='optimize_null_checks' stamp='0.519'>
<phase_done name='optimize_null_checks' stamp='0.519'/>
</phase>
<phase_done name='buildIR' stamp='0.519'/>
</phase>
<phase name='emit_lir' stamp='0.519'>
<phase name='lirGeneration' stamp='0.519'>
<phase_done name='lirGeneration' stamp='0.519'/>
</phase>
<phase name='linearScan' stamp='0.519'>
<phase_done name='linearScan' stamp='0.519'/>
</phase>
<phase_done name='emit_lir' stamp='0.519'/>
</phase>
<phase name='codeemit' stamp='0.519'>
<phase_done name='codeemit' stamp='0.519'/>
</phase>
<phase name='codeinstall' stamp='0.519'>
<phase_done name='codeinstall' stamp='0.537'/>
</phase>
<code_cache total_blobs='359' nmethods='110' adapters='179' free_code_cache='334188800'/>
<task_done success='1' nmsize='904' count='258' stamp='0.537'/>
</task>
<task compile_id='118' method='jdk/vm/ci/code/Register equals (Ljava/lang/Object;)Z' bytes='108' count='512' iicount='512' level='3' stamp='0.538'>
<phase name='buildIR' stamp='0.538'>
<type id='783' name='boolean'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='899' name='jdk/vm/ci/code/Register' flags='17'/>
<method id='900' holder='899' name='equals' return='783' arguments='796' flags='1' bytes='108' iicount='601'/>
<parse method='900'  stamp='0.538'>
<parse_done stamp='0.539'/>
</parse>
<phase name='optimize_blocks' stamp='0.539'>
<phase_done name='optimize_blocks' stamp='0.539'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.539'>
<phase_done name='rangeCheckElimination' stamp='0.539'/>
</phase>
<phase name='optimize_null_checks' stamp='0.539'>
<phase_done name='optimize_null_checks' stamp='0.539'/>
</phase>
<phase_done name='buildIR' stamp='0.539'/>
</phase>
<phase name='emit_lir' stamp='0.539'>
<phase name='lirGeneration' stamp='0.539'>
<phase_done name='lirGeneration' stamp='0.539'/>
</phase>
<phase name='linearScan' stamp='0.539'>
<phase_done name='linearScan' stamp='0.539'/>
</phase>
<phase_done name='emit_lir' stamp='0.539'/>
</phase>
<phase name='codeemit' stamp='0.539'>
<phase_done name='codeemit' stamp='0.539'/>
</phase>
<phase name='codeinstall' stamp='0.539'>
<phase_done name='codeinstall' stamp='0.541'/>
</phase>
<code_cache total_blobs='361' nmethods='111' adapters='180' free_code_cache='334185664'/>
<task_done success='1' nmsize='1712' count='2587' stamp='0.541'/>
</task>
<task compile_id='120' method='sun/misc/URLClassPath$JarLoader getResource (Ljava/lang/String;Z)Lsun/misc/Resource;' bytes='85' count='640' iicount='640' level='3' stamp='0.541'>
<phase name='buildIR' stamp='0.541'>
<klass id='900' name='sun/misc/Resource' flags='1025'/>
<klass id='797' name='java/lang/String' flags='17'/>
<type id='783' name='boolean'/>
<klass id='899' name='sun/misc/URLClassPath$JarLoader' flags='8'/>
<method id='901' holder='899' name='getResource' return='900' arguments='797 783' flags='0' bytes='85' iicount='642'/>
<parse method='901'  stamp='0.541'>
<bc code='182' bci='12'/>
<klass id='903' name='sun/misc/MetaIndex' flags='1'/>
<method id='905' holder='903' name='mayContain' return='783' arguments='797' flags='1' bytes='51' iicount='23'/>
<call method='905' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='903'/>
<bc code='183' bci='21'/>
<type id='791' name='void'/>
<method id='907' holder='899' name='ensureOpen' return='791' flags='2' bytes='36' iicount='642'/>
<call method='907' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='33'/>
<klass id='803' name='java/lang/Throwable' flags='1'/>
<klass id='911' name='java/lang/InternalError' unloaded='1'/>
<method id='912' holder='911' name='&lt;init&gt;' return='791' arguments='803' unloaded='1'/>
<call method='912' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='42'/>
<klass id='913' name='java/util/jar/JarEntry' flags='1'/>
<klass id='904' name='java/util/jar/JarFile' flags='1'/>
<method id='914' holder='904' name='getJarEntry' return='913' arguments='797' flags='1' bytes='9' iicount='753'/>
<call method='914' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='904' x='914'/>
<inline_success reason='receiver is statically known'/>
<parse method='914'>
<bc code='182' bci='2'/>
<klass id='917' name='java/util/zip/ZipEntry' flags='1'/>
<method id='918' holder='904' name='getEntry' return='917' arguments='797' flags='1' bytes='22' iicount='754'/>
<call method='918' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.541'/>
</parse>
<bc code='182' bci='54'/>
<method id='919' holder='899' name='checkResource' return='900' arguments='797 783 913' flags='0' bytes='55' iicount='115'/>
<call method='919' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='899'/>
<bc code='183' bci='71'/>
<klass id='922' name='java/util/HashSet' flags='1'/>
<method id='923' holder='922' name='&lt;init&gt;' return='791' flags='1' bytes='16' iicount='7'/>
<call method='923' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='923'>
<bc code='183' bci='1'/>
<klass id='925' name='java/util/AbstractSet' flags='1025'/>
<method id='926' holder='925' name='&lt;init&gt;' return='791' flags='4' bytes='5' iicount='18'/>
<call method='926' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='926'>
<bc code='183' bci='1'/>
<klass id='928' name='java/util/AbstractCollection' flags='1025'/>
<method id='929' holder='928' name='&lt;init&gt;' return='791' flags='4' bytes='5' iicount='77'/>
<call method='929' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='929'>
<bc code='183' bci='1'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='931' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='730871'/>
<call method='931' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='931'>
<parse_done stamp='0.541'/>
</parse>
<parse_done stamp='0.541'/>
</parse>
<parse_done stamp='0.541'/>
</parse>
<bc code='183' bci='9'/>
<klass id='933' name='java/util/HashMap' flags='1'/>
<method id='934' holder='933' name='&lt;init&gt;' return='791' flags='1' bytes='11' iicount='26'/>
<call method='934' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='934'>
<bc code='183' bci='1'/>
<klass id='936' name='java/util/AbstractMap' flags='1025'/>
<method id='937' holder='936' name='&lt;init&gt;' return='791' flags='4' bytes='5' iicount='75'/>
<call method='937' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='937'>
<bc code='183' bci='1'/>
<call method='931' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='931'>
<parse_done stamp='0.541'/>
</parse>
<parse_done stamp='0.541'/>
</parse>
<parse_done stamp='0.541'/>
</parse>
<parse_done stamp='0.541'/>
</parse>
<bc code='182' bci='81'/>
<klass id='939' name='java/util/Set' flags='1537'/>
<method id='940' holder='899' name='getResource' return='900' arguments='797 783 939' flags='0' bytes='353' iicount='1'/>
<call method='940' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='899'/>
<parse_done stamp='0.541'/>
</parse>
<phase name='optimize_blocks' stamp='0.541'>
<phase_done name='optimize_blocks' stamp='0.541'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.541'>
<phase_done name='rangeCheckElimination' stamp='0.541'/>
</phase>
<phase name='optimize_null_checks' stamp='0.541'>
<phase_done name='optimize_null_checks' stamp='0.541'/>
</phase>
<phase_done name='buildIR' stamp='0.541'/>
</phase>
<phase name='emit_lir' stamp='0.541'>
<phase name='lirGeneration' stamp='0.541'>
<phase_done name='lirGeneration' stamp='0.541'/>
</phase>
<phase name='linearScan' stamp='0.541'>
<phase_done name='linearScan' stamp='0.541'/>
</phase>
<phase_done name='emit_lir' stamp='0.541'/>
</phase>
<phase name='codeemit' stamp='0.541'>
<phase_done name='codeemit' stamp='0.542'/>
</phase>
<phase name='codeinstall' stamp='0.542'>
<dependency type='leaf_type' ctxk='903'/>
<dependency type='leaf_type' ctxk='899'/>
<dependency type='unique_concrete_method' ctxk='904' x='914'/>
<phase_done name='codeinstall' stamp='0.547'/>
</phase>
<code_cache total_blobs='362' nmethods='112' adapters='180' free_code_cache='334179840'/>
<task_done success='1' nmsize='3768' count='656' inlined_bytes='53' stamp='0.547'/>
</task>
<task compile_id='119' method='java/util/Arrays$ArrayList indexOf (Ljava/lang/Object;)I' bytes='62' count='146' backedge_count='2497' iicount='146' level='3' stamp='0.547'>
<phase name='buildIR' stamp='0.547'>
<type id='789' name='int'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='899' name='java/util/Arrays$ArrayList' flags='10'/>
<method id='900' holder='899' name='indexOf' return='789' arguments='796' flags='1' bytes='62' iicount='146'/>
<parse method='900'  stamp='0.547'>
<bc code='182' bci='46'/>
<type id='783' name='boolean'/>
<method id='903' holder='796' name='equals' return='783' arguments='796' flags='1' bytes='11' iicount='1'/>
<call method='903' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.548'/>
</parse>
<phase name='optimize_blocks' stamp='0.548'>
<phase_done name='optimize_blocks' stamp='0.548'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.548'>
<phase_done name='rangeCheckElimination' stamp='0.548'/>
</phase>
<phase name='optimize_null_checks' stamp='0.548'>
<phase_done name='optimize_null_checks' stamp='0.548'/>
</phase>
<phase_done name='buildIR' stamp='0.548'/>
</phase>
<phase name='emit_lir' stamp='0.548'>
<phase name='lirGeneration' stamp='0.548'>
<phase_done name='lirGeneration' stamp='0.548'/>
</phase>
<phase name='linearScan' stamp='0.548'>
<phase_done name='linearScan' stamp='0.548'/>
</phase>
<phase_done name='emit_lir' stamp='0.548'/>
</phase>
<phase name='codeemit' stamp='0.548'>
<phase_done name='codeemit' stamp='0.548'/>
</phase>
<phase name='codeinstall' stamp='0.548'>
<phase_done name='codeinstall' stamp='0.550'/>
</phase>
<code_cache total_blobs='363' nmethods='113' adapters='180' free_code_cache='334177088'/>
<task_done success='1' nmsize='1544' count='146' backedge_count='2497' stamp='0.550'/>
</task>
<task compile_id='121' method='sun/misc/URLClassPath$JarLoader ensureOpen ()V' bytes='36' count='669' iicount='669' throwouts='3' level='3' stamp='0.550'>
<phase name='buildIR' stamp='0.550'>
<type id='791' name='void'/>
<klass id='899' name='sun/misc/URLClassPath$JarLoader' flags='8'/>
<method id='900' holder='899' name='ensureOpen' return='791' flags='2' bytes='36' iicount='669'/>
<parse method='900'  stamp='0.550'>
<bc code='183' bci='12'/>
<klass id='905' name='sun/misc/URLClassPath$JarLoader$1' flags='0'/>
<method id='906' holder='905' name='&lt;init&gt;' return='791' arguments='899' flags='0' bytes='10' iicount='12'/>
<call method='906' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='906'>
<bc code='183' bci='6'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='908' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='749262'/>
<call method='908' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='908'>
<parse_done stamp='0.550'/>
</parse>
<parse_done stamp='0.550'/>
</parse>
<bc code='184' bci='19'/>
<klass id='911' name='java/security/PrivilegedExceptionAction' flags='1537'/>
<klass id='810' name='java/security/AccessControlContext' flags='17'/>
<klass id='910' name='java/security/AccessController' flags='17'/>
<method id='912' holder='910' name='doPrivileged' return='796' arguments='911 810' flags='265' bytes='0' compile_id='114' compile_kind='c2n' level='0' iicount='256'/>
<call method='912' instr='invokestatic'/>
<inline_fail reason='native method'/>
<bc code='182' bci='28'/>
<klass id='806' name='java/lang/Exception' flags='1'/>
<klass id='902' name='java/security/PrivilegedActionException' flags='1'/>
<method id='913' holder='902' name='getException' return='806' flags='1' bytes='5' iicount='6'/>
<call method='913' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='902' x='913'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='902'/>
<parse method='913'>
<parse_done stamp='0.550'/>
</parse>
<parse_done stamp='0.550'/>
</parse>
<phase name='optimize_blocks' stamp='0.550'>
<phase_done name='optimize_blocks' stamp='0.550'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.550'>
<phase_done name='rangeCheckElimination' stamp='0.550'/>
</phase>
<phase name='optimize_null_checks' stamp='0.550'>
<phase_done name='optimize_null_checks' stamp='0.550'/>
</phase>
<phase_done name='buildIR' stamp='0.550'/>
</phase>
<phase name='emit_lir' stamp='0.550'>
<phase name='lirGeneration' stamp='0.550'>
<phase_done name='lirGeneration' stamp='0.550'/>
</phase>
<phase name='linearScan' stamp='0.550'>
<phase_done name='linearScan' stamp='0.550'/>
</phase>
<phase_done name='emit_lir' stamp='0.550'/>
</phase>
<phase name='codeemit' stamp='0.550'>
<phase_done name='codeemit' stamp='0.550'/>
</phase>
<phase name='codeinstall' stamp='0.550'>
<dependency type='leaf_type' ctxk='902'/>
<dependency type='unique_concrete_method' ctxk='902' x='913'/>
<phase_done name='codeinstall' stamp='0.551'/>
</phase>
<code_cache total_blobs='364' nmethods='114' adapters='180' free_code_cache='334174592'/>
<task_done success='1' nmsize='1416' count='675' inlined_bytes='16' stamp='0.551'/>
</task>
<task compile_id='123' method='java/util/jar/JarFile getEntry (Ljava/lang/String;)Ljava/util/zip/ZipEntry;' bytes='22' count='792' iicount='792' level='3' stamp='0.551'>
<phase name='buildIR' stamp='0.551'>
<klass id='900' name='java/util/zip/ZipEntry' flags='1'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='899' name='java/util/jar/JarFile' flags='1'/>
<method id='901' holder='899' name='getEntry' return='900' arguments='797' flags='1' bytes='22' iicount='792'/>
<parse method='901'  stamp='0.551'>
<bc code='183' bci='2'/>
<klass id='903' name='java/util/zip/ZipFile' flags='1'/>
<method id='904' holder='903' name='getEntry' return='900' arguments='797' flags='1' bytes='86' compile_id='98' compiler='C1' level='3' iicount='793'/>
<call method='904' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='16'/>
<type id='791' name='void'/>
<klass id='906' name='java/util/jar/JarFile$JarFileEntry' flags='2'/>
<method id='907' holder='906' name='&lt;init&gt;' return='791' arguments='899 900' flags='0' bytes='11' iicount='122'/>
<call method='907' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='907'>
<bc code='183' bci='7'/>
<klass id='909' name='java/util/jar/JarEntry' flags='1'/>
<method id='910' holder='909' name='&lt;init&gt;' return='791' arguments='900' flags='1' bytes='6' iicount='123'/>
<call method='910' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='910'>
<bc code='183' bci='2'/>
<method id='912' holder='900' name='&lt;init&gt;' return='791' arguments='900' flags='1' bytes='146' iicount='123'/>
<call method='912' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.551'/>
</parse>
<parse_done stamp='0.551'/>
</parse>
<parse_done stamp='0.551'/>
</parse>
<phase name='optimize_blocks' stamp='0.551'>
<phase_done name='optimize_blocks' stamp='0.551'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.551'>
<phase_done name='rangeCheckElimination' stamp='0.551'/>
</phase>
<phase name='optimize_null_checks' stamp='0.551'>
<phase_done name='optimize_null_checks' stamp='0.551'/>
</phase>
<phase_done name='buildIR' stamp='0.551'/>
</phase>
<phase name='emit_lir' stamp='0.551'>
<phase name='lirGeneration' stamp='0.551'>
<phase_done name='lirGeneration' stamp='0.551'/>
</phase>
<phase name='linearScan' stamp='0.551'>
<phase_done name='linearScan' stamp='0.551'/>
</phase>
<phase_done name='emit_lir' stamp='0.551'/>
</phase>
<phase name='codeemit' stamp='0.551'>
<phase_done name='codeemit' stamp='0.551'/>
</phase>
<phase name='codeinstall' stamp='0.551'>
<phase_done name='codeinstall' stamp='0.553'/>
</phase>
<code_cache total_blobs='365' nmethods='115' adapters='180' free_code_cache='334172800'/>
<task_done success='1' nmsize='856' count='806' inlined_bytes='17' stamp='0.553'/>
</task>
<task compile_id='127' method='java/lang/CharacterDataLatin1 toUpperCase (I)I' bytes='53' count='522' iicount='522' level='3' stamp='0.553'>
<phase name='buildIR' stamp='0.553'>
<type id='789' name='int'/>
<klass id='899' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='900' holder='899' name='toUpperCase' return='789' arguments='789' flags='0' bytes='53' iicount='522'/>
<parse method='900'  stamp='0.553'>
<bc code='182' bci='4'/>
<method id='902' holder='899' name='getProperties' return='789' arguments='789' flags='0' bytes='11' compile_id='109' compiler='C1' level='1' iicount='5365'/>
<call method='902' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='899'/>
<parse method='902'>
<parse_done stamp='0.553'/>
</parse>
<parse_done stamp='0.553'/>
</parse>
<phase name='optimize_blocks' stamp='0.553'>
<phase_done name='optimize_blocks' stamp='0.553'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.553'>
<phase_done name='rangeCheckElimination' stamp='0.553'/>
</phase>
<phase name='optimize_null_checks' stamp='0.553'>
<phase_done name='optimize_null_checks' stamp='0.553'/>
</phase>
<phase_done name='buildIR' stamp='0.553'/>
</phase>
<phase name='emit_lir' stamp='0.553'>
<phase name='lirGeneration' stamp='0.553'>
<phase_done name='lirGeneration' stamp='0.553'/>
</phase>
<phase name='linearScan' stamp='0.553'>
<phase_done name='linearScan' stamp='0.553'/>
</phase>
<phase_done name='emit_lir' stamp='0.553'/>
</phase>
<phase name='codeemit' stamp='0.553'>
<phase_done name='codeemit' stamp='0.553'/>
</phase>
<phase name='codeinstall' stamp='0.553'>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.554'/>
</phase>
<code_cache total_blobs='367' nmethods='117' adapters='180' free_code_cache='334170368'/>
<task_done success='1' nmsize='720' count='522' inlined_bytes='11' stamp='0.554'/>
</task>
<task compile_id='128' method='java/util/zip/ZipFile access$400 (Ljava/util/zip/ZipFile;)J' bytes='5' count='518' iicount='518' level='3' stamp='0.554'>
<phase name='buildIR' stamp='0.554'>
<type id='790' name='long'/>
<klass id='899' name='java/util/zip/ZipFile' flags='1'/>
<method id='900' holder='899' name='access$400' return='790' arguments='899' flags='4104' bytes='5' iicount='518'/>
<parse method='900'  stamp='0.554'>
<parse_done stamp='0.554'/>
</parse>
<phase name='optimize_blocks' stamp='0.554'>
<phase_done name='optimize_blocks' stamp='0.554'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.554'>
<phase_done name='rangeCheckElimination' stamp='0.554'/>
</phase>
<phase name='optimize_null_checks' stamp='0.554'>
<phase_done name='optimize_null_checks' stamp='0.554'/>
</phase>
<phase_done name='buildIR' stamp='0.554'/>
</phase>
<phase name='emit_lir' stamp='0.554'>
<phase name='lirGeneration' stamp='0.554'>
<phase_done name='lirGeneration' stamp='0.554'/>
</phase>
<phase name='linearScan' stamp='0.554'>
<phase_done name='linearScan' stamp='0.554'/>
</phase>
<phase_done name='emit_lir' stamp='0.554'/>
</phase>
<phase name='codeemit' stamp='0.554'>
<phase_done name='codeemit' stamp='0.554'/>
</phase>
<phase name='codeinstall' stamp='0.554'>
<phase_done name='codeinstall' stamp='0.571'/>
</phase>
<code_cache total_blobs='369' nmethods='119' adapters='180' free_code_cache='334168576'/>
<task_done success='1' nmsize='304' count='518' stamp='0.571'/>
</task>
<task compile_id='125' method='java/lang/Character toUpperCase (C)C' bytes='6' count='522' iicount='522' level='3' stamp='0.571'>
<phase name='buildIR' stamp='0.571'>
<type id='784' name='char'/>
<klass id='877' name='java/lang/Character' flags='17'/>
<method id='899' holder='877' name='toUpperCase' return='784' arguments='784' flags='9' bytes='6' iicount='522'/>
<parse method='899'  stamp='0.571'>
<bc code='184' bci='1'/>
<type id='789' name='int'/>
<method id='901' holder='877' name='toUpperCase' return='789' arguments='789' flags='9' bytes='9' iicount='522'/>
<call method='901' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<bc code='184' bci='1'/>
<klass id='904' name='java/lang/CharacterData' flags='1024'/>
<method id='905' holder='904' name='of' return='904' arguments='789' flags='24' bytes='120' compile_id='36' compiler='C1' level='3' iicount='5449'/>
<call method='905' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='907' holder='904' name='toUpperCase' return='789' arguments='789' flags='1024' bytes='0' iicount='1'/>
<call method='907' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.571'/>
</parse>
<parse_done stamp='0.571'/>
</parse>
<phase name='optimize_blocks' stamp='0.571'>
<phase_done name='optimize_blocks' stamp='0.571'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.571'>
<phase_done name='rangeCheckElimination' stamp='0.571'/>
</phase>
<phase name='optimize_null_checks' stamp='0.571'>
<phase_done name='optimize_null_checks' stamp='0.571'/>
</phase>
<phase_done name='buildIR' stamp='0.571'/>
</phase>
<phase name='emit_lir' stamp='0.571'>
<phase name='lirGeneration' stamp='0.571'>
<phase_done name='lirGeneration' stamp='0.571'/>
</phase>
<phase name='linearScan' stamp='0.571'>
<phase_done name='linearScan' stamp='0.571'/>
</phase>
<phase_done name='emit_lir' stamp='0.571'/>
</phase>
<phase name='codeemit' stamp='0.571'>
<phase_done name='codeemit' stamp='0.571'/>
</phase>
<phase name='codeinstall' stamp='0.571'>
<phase_done name='codeinstall' stamp='0.575'/>
</phase>
<code_cache total_blobs='372' nmethods='120' adapters='182' free_code_cache='334165824'/>
<task_done success='1' nmsize='1016' count='554' inlined_bytes='9' stamp='0.575'/>
</task>
<task compile_id='134' method='java/nio/DirectLongBufferU put (IJ)Ljava/nio/LongBuffer;' bytes='18' count='545' iicount='545' level='3' stamp='0.575'>
<phase name='buildIR' stamp='0.575'>
<klass id='900' name='java/nio/LongBuffer' flags='1025'/>
<type id='789' name='int'/>
<type id='790' name='long'/>
<klass id='899' name='java/nio/DirectLongBufferU' flags='0'/>
<method id='901' holder='899' name='put' return='900' arguments='789 790' flags='1' bytes='18' iicount='545'/>
<parse method='901'  stamp='0.575'>
<bc code='182' bci='6'/>
<klass id='875' name='java/nio/Buffer' flags='1025'/>
<method id='905' holder='875' name='checkIndex' return='789' arguments='789' flags='16' bytes='22' compile_id='55' compiler='C1' level='3' iicount='1096'/>
<call method='905' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='intrinsic'/>
<bc code='183' bci='9'/>
<method id='907' holder='899' name='ix' return='790' arguments='789' flags='2' bytes='10' compile_id='56' compiler='C1' level='3' iicount='1096'/>
<call method='907' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<parse method='907'>
<parse_done stamp='0.575'/>
</parse>
<bc code='182' bci='13'/>
<type id='791' name='void'/>
<klass id='863' name='sun/misc/Unsafe' flags='17'/>
<method id='909' holder='863' name='putLong' return='791' arguments='790 790' flags='257' bytes='0' compile_id='129' compile_kind='c2n' level='0' iicount='512'/>
<call method='909' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.575'/>
</parse>
<phase name='optimize_blocks' stamp='0.575'>
<phase_done name='optimize_blocks' stamp='0.575'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.575'>
<phase_done name='rangeCheckElimination' stamp='0.575'/>
</phase>
<phase name='optimize_null_checks' stamp='0.575'>
<phase_done name='optimize_null_checks' stamp='0.575'/>
</phase>
<phase_done name='buildIR' stamp='0.575'/>
</phase>
<phase name='emit_lir' stamp='0.575'>
<phase name='lirGeneration' stamp='0.575'>
<phase_done name='lirGeneration' stamp='0.575'/>
</phase>
<phase name='linearScan' stamp='0.575'>
<phase_done name='linearScan' stamp='0.575'/>
</phase>
<phase_done name='emit_lir' stamp='0.575'/>
</phase>
<phase name='codeemit' stamp='0.575'>
<phase_done name='codeemit' stamp='0.575'/>
</phase>
<phase name='codeinstall' stamp='0.575'>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.576'/>
</phase>
<code_cache total_blobs='373' nmethods='121' adapters='182' free_code_cache='334164608'/>
<task_done success='1' nmsize='496' count='552' inlined_bytes='10' stamp='0.576'/>
</task>
<task compile_id='135' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='572' iicount='572' level='3' stamp='0.576'>
<phase name='buildIR' stamp='0.576'>
<type id='783' name='boolean'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='startsWith' return='783' arguments='797' flags='1' bytes='7' iicount='572'/>
<parse method='899'  stamp='0.576'>
<bc code='182' bci='3'/>
<type id='789' name='int'/>
<method id='901' holder='797' name='startsWith' return='783' arguments='797 789' flags='1' bytes='72' compile_id='53' compiler='C1' level='3' iicount='1255'/>
<call method='901' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.576'/>
</parse>
<phase name='optimize_blocks' stamp='0.576'>
<phase_done name='optimize_blocks' stamp='0.576'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.576'>
<phase_done name='rangeCheckElimination' stamp='0.576'/>
</phase>
<phase name='optimize_null_checks' stamp='0.576'>
<phase_done name='optimize_null_checks' stamp='0.576'/>
</phase>
<phase_done name='buildIR' stamp='0.576'/>
</phase>
<phase name='emit_lir' stamp='0.576'>
<phase name='lirGeneration' stamp='0.576'>
<phase_done name='lirGeneration' stamp='0.576'/>
</phase>
<phase name='linearScan' stamp='0.576'>
<phase_done name='linearScan' stamp='0.576'/>
</phase>
<phase_done name='emit_lir' stamp='0.576'/>
</phase>
<phase name='codeemit' stamp='0.576'>
<phase_done name='codeemit' stamp='0.576'/>
</phase>
<phase name='codeinstall' stamp='0.576'>
<phase_done name='codeinstall' stamp='0.577'/>
</phase>
<code_cache total_blobs='374' nmethods='122' adapters='182' free_code_cache='334163648'/>
<task_done success='1' nmsize='392' count='572' stamp='0.577'/>
</task>
<task compile_id='126' method='java/lang/Character toUpperCase (I)I' bytes='9' count='564' iicount='564' level='3' stamp='0.577'>
<phase name='buildIR' stamp='0.577'>
<type id='789' name='int'/>
<klass id='877' name='java/lang/Character' flags='17'/>
<method id='899' holder='877' name='toUpperCase' return='789' arguments='789' flags='9' bytes='9' iicount='564'/>
<parse method='899'  stamp='0.577'>
<bc code='184' bci='1'/>
<klass id='902' name='java/lang/CharacterData' flags='1024'/>
<method id='903' holder='902' name='of' return='902' arguments='789' flags='24' bytes='120' compile_id='36' compiler='C1' level='3' iicount='10163'/>
<call method='903' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='905' holder='902' name='toUpperCase' return='789' arguments='789' flags='1024' bytes='0' iicount='1'/>
<call method='905' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.577'/>
</parse>
<phase name='optimize_blocks' stamp='0.577'>
<phase_done name='optimize_blocks' stamp='0.577'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.577'>
<phase_done name='rangeCheckElimination' stamp='0.577'/>
</phase>
<phase name='optimize_null_checks' stamp='0.577'>
<phase_done name='optimize_null_checks' stamp='0.577'/>
</phase>
<phase_done name='buildIR' stamp='0.577'/>
</phase>
<phase name='emit_lir' stamp='0.577'>
<phase name='lirGeneration' stamp='0.577'>
<phase_done name='lirGeneration' stamp='0.577'/>
</phase>
<phase name='linearScan' stamp='0.577'>
<phase_done name='linearScan' stamp='0.577'/>
</phase>
<phase_done name='emit_lir' stamp='0.577'/>
</phase>
<phase name='codeemit' stamp='0.577'>
<phase_done name='codeemit' stamp='0.577'/>
</phase>
<phase name='codeinstall' stamp='0.577'>
<phase_done name='codeinstall' stamp='0.579'/>
</phase>
<code_cache total_blobs='375' nmethods='123' adapters='182' free_code_cache='334162048'/>
<task_done success='1' nmsize='920' count='564' stamp='0.579'/>
</task>
<task compile_id='130' method='sun/misc/PerfCounter add (J)V' bytes='18' count='556' iicount='556' level='3' stamp='0.579'>
<phase name='buildIR' stamp='0.579'>
<type id='791' name='void'/>
<type id='790' name='long'/>
<klass id='899' name='sun/misc/PerfCounter' flags='1'/>
<method id='900' holder='899' name='add' return='791' arguments='790' flags='33' bytes='18' iicount='556'/>
<parse method='900'  stamp='0.579'>
<bc code='182' bci='1'/>
<method id='903' holder='899' name='get' return='790' flags='33' bytes='9' iicount='556'/>
<call method='903' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='899'/>
<parse method='903'>
<bc code='182' bci='5'/>
<type id='789' name='int'/>
<klass id='905' name='java/nio/LongBuffer' flags='1025'/>
<method id='906' holder='905' name='get' return='790' arguments='789' flags='1025' bytes='0' iicount='1'/>
<call method='906' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.579'/>
</parse>
<bc code='182' bci='13'/>
<method id='907' holder='905' name='put' return='905' arguments='789 790' flags='1025' bytes='0' iicount='1'/>
<call method='907' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.579'/>
</parse>
<phase name='optimize_blocks' stamp='0.579'>
<phase_done name='optimize_blocks' stamp='0.579'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.579'>
<phase_done name='rangeCheckElimination' stamp='0.579'/>
</phase>
<phase name='optimize_null_checks' stamp='0.579'>
<phase_done name='optimize_null_checks' stamp='0.579'/>
</phase>
<phase_done name='buildIR' stamp='0.579'/>
</phase>
<phase name='emit_lir' stamp='0.579'>
<phase name='lirGeneration' stamp='0.579'>
<phase_done name='lirGeneration' stamp='0.579'/>
</phase>
<phase name='linearScan' stamp='0.579'>
<phase_done name='linearScan' stamp='0.579'/>
</phase>
<phase_done name='emit_lir' stamp='0.579'/>
</phase>
<phase name='codeemit' stamp='0.579'>
<phase_done name='codeemit' stamp='0.579'/>
</phase>
<phase name='codeinstall' stamp='0.579'>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.583'/>
</phase>
<code_cache total_blobs='376' nmethods='124' adapters='182' free_code_cache='334158656'/>
<task_done success='1' nmsize='2328' count='557' inlined_bytes='9' stamp='0.583'/>
</task>
<task compile_id='131' method='sun/misc/PerfCounter get ()J' bytes='9' count='558' iicount='558' level='3' stamp='0.583'>
<phase name='buildIR' stamp='0.583'>
<type id='790' name='long'/>
<klass id='899' name='sun/misc/PerfCounter' flags='1'/>
<method id='900' holder='899' name='get' return='790' flags='33' bytes='9' iicount='558'/>
<parse method='900'  stamp='0.583'>
<bc code='182' bci='5'/>
<type id='789' name='int'/>
<klass id='903' name='java/nio/LongBuffer' flags='1025'/>
<method id='904' holder='903' name='get' return='790' arguments='789' flags='1025' bytes='0' iicount='1'/>
<call method='904' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.583'/>
</parse>
<phase name='optimize_blocks' stamp='0.583'>
<phase_done name='optimize_blocks' stamp='0.583'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.583'>
<phase_done name='rangeCheckElimination' stamp='0.583'/>
</phase>
<phase name='optimize_null_checks' stamp='0.583'>
<phase_done name='optimize_null_checks' stamp='0.583'/>
</phase>
<phase_done name='buildIR' stamp='0.583'/>
</phase>
<phase name='emit_lir' stamp='0.583'>
<phase name='lirGeneration' stamp='0.583'>
<phase_done name='lirGeneration' stamp='0.583'/>
</phase>
<phase name='linearScan' stamp='0.583'>
<phase_done name='linearScan' stamp='0.583'/>
</phase>
<phase_done name='emit_lir' stamp='0.583'/>
</phase>
<phase name='codeemit' stamp='0.583'>
<phase_done name='codeemit' stamp='0.583'/>
</phase>
<phase name='codeinstall' stamp='0.583'>
<phase_done name='codeinstall' stamp='0.585'/>
</phase>
<code_cache total_blobs='377' nmethods='125' adapters='182' free_code_cache='334156672'/>
<task_done success='1' nmsize='1256' count='560' stamp='0.585'/>
</task>
<task compile_id='132' method='java/nio/DirectLongBufferU get (I)J' bytes='16' count='560' iicount='560' level='3' stamp='0.585'>
<phase name='buildIR' stamp='0.585'>
<type id='790' name='long'/>
<type id='789' name='int'/>
<klass id='899' name='java/nio/DirectLongBufferU' flags='0'/>
<method id='900' holder='899' name='get' return='790' arguments='789' flags='1' bytes='16' iicount='560'/>
<parse method='900'  stamp='0.585'>
<bc code='182' bci='6'/>
<klass id='875' name='java/nio/Buffer' flags='1025'/>
<method id='904' holder='875' name='checkIndex' return='789' arguments='789' flags='16' bytes='22' compile_id='55' compiler='C1' level='3' iicount='1112'/>
<call method='904' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='intrinsic'/>
<bc code='183' bci='9'/>
<method id='906' holder='899' name='ix' return='790' arguments='789' flags='2' bytes='10' compile_id='56' compiler='C1' level='3' iicount='1120'/>
<call method='906' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_success reason='receiver is statically known'/>
<parse method='906'>
<parse_done stamp='0.585'/>
</parse>
<bc code='182' bci='12'/>
<klass id='863' name='sun/misc/Unsafe' flags='17'/>
<method id='908' holder='863' name='getLong' return='790' arguments='790' flags='257' bytes='0' compile_id='133' compile_kind='c2n' level='0' iicount='512'/>
<call method='908' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.585'/>
</parse>
<phase name='optimize_blocks' stamp='0.585'>
<phase_done name='optimize_blocks' stamp='0.585'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.585'>
<phase_done name='rangeCheckElimination' stamp='0.585'/>
</phase>
<phase name='optimize_null_checks' stamp='0.585'>
<phase_done name='optimize_null_checks' stamp='0.585'/>
</phase>
<phase_done name='buildIR' stamp='0.585'/>
</phase>
<phase name='emit_lir' stamp='0.585'>
<phase name='lirGeneration' stamp='0.585'>
<phase_done name='lirGeneration' stamp='0.585'/>
</phase>
<phase name='linearScan' stamp='0.585'>
<phase_done name='linearScan' stamp='0.585'/>
</phase>
<phase_done name='emit_lir' stamp='0.585'/>
</phase>
<phase name='codeemit' stamp='0.585'>
<phase_done name='codeemit' stamp='0.585'/>
</phase>
<phase name='codeinstall' stamp='0.585'>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.586'/>
</phase>
<code_cache total_blobs='378' nmethods='126' adapters='182' free_code_cache='334155456'/>
<task_done success='1' nmsize='496' count='562' inlined_bytes='10' stamp='0.586'/>
</task>
<task compile_id='139' method='sun/util/locale/BaseLocale getLanguage ()Ljava/lang/String;' bytes='5' count='162' iicount='162' level='1' stamp='0.586'>
<phase name='buildIR' stamp='0.586'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='899' name='sun/util/locale/BaseLocale' flags='17'/>
<method id='900' holder='899' name='getLanguage' return='797' flags='1' bytes='5' iicount='162'/>
<parse method='900'  stamp='0.586'>
<parse_done stamp='0.586'/>
</parse>
<phase name='optimize_blocks' stamp='0.586'>
<phase_done name='optimize_blocks' stamp='0.586'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.586'>
<phase_done name='rangeCheckElimination' stamp='0.586'/>
</phase>
<phase name='optimize_null_checks' stamp='0.586'>
<phase_done name='optimize_null_checks' stamp='0.586'/>
</phase>
<phase_done name='buildIR' stamp='0.586'/>
</phase>
<phase name='emit_lir' stamp='0.586'>
<phase name='lirGeneration' stamp='0.586'>
<phase_done name='lirGeneration' stamp='0.586'/>
</phase>
<phase name='linearScan' stamp='0.586'>
<phase_done name='linearScan' stamp='0.586'/>
</phase>
<phase_done name='emit_lir' stamp='0.586'/>
</phase>
<phase name='codeemit' stamp='0.586'>
<phase_done name='codeemit' stamp='0.586'/>
</phase>
<phase name='codeinstall' stamp='0.586'>
<phase_done name='codeinstall' stamp='0.587'/>
</phase>
<code_cache total_blobs='379' nmethods='127' adapters='182' free_code_cache='334154688'/>
<task_done success='1' nmsize='272' count='178' stamp='0.587'/>
</task>
<task compile_id='122' method='sun/misc/URLClassPath$JarLoader access$600 (Lsun/misc/URLClassPath$JarLoader;)Ljava/net/URL;' bytes='5' count='149' iicount='149' level='1' stamp='0.587'>
<phase name='buildIR' stamp='0.587'>
<klass id='868' name='java/net/URL' flags='17'/>
<klass id='899' name='sun/misc/URLClassPath$JarLoader' flags='8'/>
<method id='900' holder='899' name='access$600' return='868' arguments='899' flags='4104' bytes='5' iicount='149'/>
<parse method='900'  stamp='0.587'>
<parse_done stamp='0.587'/>
</parse>
<phase name='optimize_blocks' stamp='0.587'>
<phase_done name='optimize_blocks' stamp='0.587'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.587'>
<phase_done name='rangeCheckElimination' stamp='0.587'/>
</phase>
<phase name='optimize_null_checks' stamp='0.587'>
<phase_done name='optimize_null_checks' stamp='0.587'/>
</phase>
<phase_done name='buildIR' stamp='0.587'/>
</phase>
<phase name='emit_lir' stamp='0.587'>
<phase name='lirGeneration' stamp='0.587'>
<phase_done name='lirGeneration' stamp='0.587'/>
</phase>
<phase name='linearScan' stamp='0.587'>
<phase_done name='linearScan' stamp='0.587'/>
</phase>
<phase_done name='emit_lir' stamp='0.587'/>
</phase>
<phase name='codeemit' stamp='0.587'>
<phase_done name='codeemit' stamp='0.587'/>
</phase>
<phase name='codeinstall' stamp='0.587'>
<phase_done name='codeinstall' stamp='0.587'/>
</phase>
<code_cache total_blobs='380' nmethods='128' adapters='182' free_code_cache='334153920'/>
<task_done success='1' nmsize='240' count='149' stamp='0.587'/>
</task>
<task compile_id='124' method='sun/misc/URLClassPath$Loader getBaseURL ()Ljava/net/URL;' bytes='5' count='145' iicount='145' level='1' stamp='0.587'>
<phase name='buildIR' stamp='0.587'>
<klass id='868' name='java/net/URL' flags='17'/>
<klass id='899' name='sun/misc/URLClassPath$Loader' flags='10'/>
<method id='900' holder='899' name='getBaseURL' return='868' flags='0' bytes='5' iicount='145'/>
<parse method='900'  stamp='0.587'>
<parse_done stamp='0.587'/>
</parse>
<phase name='optimize_blocks' stamp='0.587'>
<phase_done name='optimize_blocks' stamp='0.587'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.587'>
<phase_done name='rangeCheckElimination' stamp='0.587'/>
</phase>
<phase name='optimize_null_checks' stamp='0.587'>
<phase_done name='optimize_null_checks' stamp='0.587'/>
</phase>
<phase_done name='buildIR' stamp='0.587'/>
</phase>
<phase name='emit_lir' stamp='0.587'>
<phase name='lirGeneration' stamp='0.587'>
<phase_done name='lirGeneration' stamp='0.587'/>
</phase>
<phase name='linearScan' stamp='0.587'>
<phase_done name='linearScan' stamp='0.587'/>
</phase>
<phase_done name='emit_lir' stamp='0.587'/>
</phase>
<phase name='codeemit' stamp='0.587'>
<phase_done name='codeemit' stamp='0.587'/>
</phase>
<phase name='codeinstall' stamp='0.587'>
<phase_done name='codeinstall' stamp='0.588'/>
</phase>
<code_cache total_blobs='381' nmethods='129' adapters='182' free_code_cache='334153152'/>
<task_done success='1' nmsize='272' count='146' stamp='0.588'/>
</task>
<task compile_id='143' method='java/lang/String toUpperCase (Ljava/util/Locale;)Ljava/lang/String;' bytes='439' count='190' backedge_count='12324' iicount='190' level='3' stamp='0.588'>
<phase name='buildIR' stamp='0.588'>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='899' name='java/util/Locale' flags='17'/>
<method id='900' holder='797' name='toUpperCase' return='797' arguments='899' flags='1' bytes='439' iicount='191'/>
<parse method='900'  stamp='0.588'>
<bc code='183' bci='8'/>
<type id='791' name='void'/>
<klass id='895' name='java/lang/NullPointerException' flags='1'/>
<method id='902' holder='895' name='&lt;init&gt;' return='791' flags='1' bytes='5' iicount='1'/>
<call method='902' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='182' bci='49'/>
<type id='789' name='int'/>
<method id='904' holder='797' name='codePointAt' return='789' arguments='789' flags='1' bytes='36' iicount='229'/>
<call method='904' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='56'/>
<klass id='877' name='java/lang/Character' flags='17'/>
<method id='906' holder='877' name='charCount' return='789' arguments='789' flags='9' bytes='12' iicount='232'/>
<call method='906' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='906'>
<parse_done stamp='0.588'/>
</parse>
<bc code='184' bci='69'/>
<method id='908' holder='877' name='toUpperCaseEx' return='789' arguments='789' flags='8' bytes='30' compile_id='38' compiler='C1' level='3' iicount='13199'/>
<call method='908' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='908'>
<bc code='184' bci='22'/>
<klass id='912' name='java/lang/CharacterData' flags='1024'/>
<method id='913' holder='912' name='of' return='912' arguments='789' flags='24' bytes='120' compile_id='36' compiler='C1' level='3' iicount='15023'/>
<call method='913' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='26'/>
<method id='915' holder='912' name='toUpperCaseEx' return='789' arguments='789' flags='0' bytes='6' iicount='1'/>
<call method='915' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.588'/>
</parse>
<bc code='184' bci='117'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='916' holder='802' name='arraycopy' return='791' arguments='796 789 796 789 789' flags='265' bytes='0' compile_id='8' compile_kind='c2n' level='0' iicount='640'/>
<call method='916' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='121'/>
<method id='918' holder='899' name='getLanguage' return='797' flags='1' bytes='8' iicount='202'/>
<call method='918' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='918'>
<bc code='182' bci='4'/>
<klass id='920' name='sun/util/locale/BaseLocale' flags='17'/>
<method id='921' holder='920' name='getLanguage' return='797' flags='1' bytes='5' compile_id='139' compiler='C1' level='1' iicount='178'/>
<call method='921' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='921'>
<parse_done stamp='0.588'/>
</parse>
<parse_done stamp='0.588'/>
</parse>
<bc code='182' bci='191'/>
<call method='904' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='198'/>
<call method='906' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='906'>
<parse_done stamp='0.588'/>
</parse>
<bc code='184' bci='218'/>
<klass id='926' name='java/lang/ConditionalSpecialCasing' unloaded='1'/>
<method id='927' holder='926' name='toUpperCaseEx' return='789' arguments='797 789 899' unloaded='1'/>
<call method='927' instr='invokestatic'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='228'/>
<call method='908' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='908'>
<bc code='184' bci='22'/>
<call method='913' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='26'/>
<call method='915' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.588'/>
</parse>
<bc code='184' bci='261'/>
<klass id='888' name='[C' flags='1041'/>
<method id='928' holder='926' name='toUpperCaseCharArray' return='888' arguments='797 789 899' unloaded='1'/>
<call method='928' instr='invokestatic'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='271'/>
<method id='929' holder='877' name='toUpperCaseCharArray' return='888' arguments='789' flags='8' bytes='30' iicount='1'/>
<call method='929' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='929'>
<bc code='184' bci='22'/>
<call method='913' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='26'/>
<method id='931' holder='912' name='toUpperCaseCharArray' return='888' arguments='789' flags='0' bytes='2' iicount='1'/>
<call method='931' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.588'/>
</parse>
<bc code='184' bci='296'/>
<method id='932' holder='877' name='toChars' return='789' arguments='789 888 789' flags='9' bytes='37' iicount='1'/>
<call method='932' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='310'/>
<method id='934' holder='877' name='toChars' return='888' arguments='789' flags='9' bytes='43' iicount='1'/>
<call method='934' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='351'/>
<call method='916' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<bc code='183' bci='435'/>
<method id='936' holder='797' name='&lt;init&gt;' return='791' arguments='888 789 789' flags='1' bytes='82' compile_id='9' compiler='C1' level='3' iicount='2008'/>
<call method='936' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.588'/>
</parse>
<phase name='optimize_blocks' stamp='0.588'>
<phase_done name='optimize_blocks' stamp='0.588'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.588'>
<phase_done name='rangeCheckElimination' stamp='0.588'/>
</phase>
<phase name='optimize_null_checks' stamp='0.588'>
<phase_done name='optimize_null_checks' stamp='0.588'/>
</phase>
<phase_done name='buildIR' stamp='0.589'/>
</phase>
<phase name='emit_lir' stamp='0.589'>
<phase name='lirGeneration' stamp='0.589'>
<phase_done name='lirGeneration' stamp='0.589'/>
</phase>
<phase name='linearScan' stamp='0.589'>
<phase_done name='linearScan' stamp='0.589'/>
</phase>
<phase_done name='emit_lir' stamp='0.589'/>
</phase>
<phase name='codeemit' stamp='0.589'>
<phase_done name='codeemit' stamp='0.589'/>
</phase>
<phase name='codeinstall' stamp='0.589'>
<phase_done name='codeinstall' stamp='0.619'/>
</phase>
<code_cache total_blobs='382' nmethods='130' adapters='182' free_code_cache='334141312'/>
<task_done success='1' nmsize='6712' count='259' backedge_count='17168' inlined_bytes='127' stamp='0.619'/>
</task>
<task compile_id='144' method='java/lang/ClassLoader loadClass (Ljava/lang/String;Z)Ljava/lang/Class;' bytes='122' count='384' iicount='384' throwouts='142' level='3' stamp='0.619'>
<phase name='buildIR' stamp='0.619'>
<klass id='798' name='java/lang/Class' flags='17'/>
<klass id='797' name='java/lang/String' flags='17'/>
<type id='783' name='boolean'/>
<klass id='800' name='java/lang/ClassLoader' flags='1025'/>
<method id='899' holder='800' name='loadClass' return='798' arguments='797 783' flags='4' bytes='122' iicount='384'/>
<parse method='899'  stamp='0.619'>
<bc code='182' bci='2'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<method id='901' holder='800' name='getClassLoadingLock' return='796' arguments='797' flags='4' bytes='35' iicount='384'/>
<call method='901' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='800' x='901'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<bc code='183' bci='13'/>
<type id='791' name='void'/>
<method id='904' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='897521'/>
<call method='904' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='904'>
<parse_done stamp='0.619'/>
</parse>
<bc code='182' bci='23'/>
<klass id='903' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='906' holder='903' name='putIfAbsent' return='796' arguments='796 796' flags='1' bytes='8' iicount='545'/>
<call method='906' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='903'/>
<parse method='906'>
<bc code='182' bci='4'/>
<method id='908' holder='903' name='putVal' return='796' arguments='796 796 783' flags='16' bytes='362' iicount='564'/>
<call method='908' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='903'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.619'/>
</parse>
<parse_done stamp='0.619'/>
</parse>
<bc code='182' bci='10'/>
<method id='910' holder='800' name='findLoadedClass' return='798' arguments='797' flags='20' bytes='16' iicount='384'/>
<call method='910' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='910'>
<bc code='183' bci='2'/>
<method id='912' holder='800' name='checkName' return='783' arguments='797' flags='2' bytes='43' compile_id='100' compiler='C1' level='3' iicount='719'/>
<call method='912' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='12'/>
<method id='914' holder='800' name='findLoadedClass0' return='798' arguments='797' flags='274' bytes='0' iicount='384'/>
<call method='914' instr='invokespecial'/>
<inline_fail reason='native method'/>
<parse_done stamp='0.619'/>
</parse>
<bc code='184' bci='20'/>
<type id='790' name='long'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='915' holder='802' name='nanoTime' return='790' flags='265' bytes='0' compile_id='54' compile_kind='c2n' level='0' iicount='256'/>
<call method='915' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='38'/>
<call method='899' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='48'/>
<method id='917' holder='800' name='findBootstrapClassOrNull' return='798' arguments='797' flags='2' bytes='16' iicount='192'/>
<call method='917' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='917'>
<bc code='183' bci='2'/>
<call method='912' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='12'/>
<method id='919' holder='800' name='findBootstrapClass' return='798' arguments='797' flags='258' bytes='0' iicount='193'/>
<call method='919' instr='invokespecial'/>
<inline_fail reason='native method'/>
<parse_done stamp='0.620'/>
</parse>
<bc code='184' bci='63'/>
<call method='915' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='70'/>
<method id='920' holder='800' name='findClass' return='798' arguments='797' flags='4' bytes='9' iicount='1'/>
<call method='920' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='75'/>
<klass id='921' name='sun/misc/PerfCounter' flags='1'/>
<method id='922' holder='921' name='getParentDelegationTime' return='921' flags='9' bytes='4' iicount='143'/>
<call method='922' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='922'>
<parse_done stamp='0.620'/>
</parse>
<bc code='182' bci='83'/>
<method id='927' holder='921' name='addTime' return='791' arguments='790' flags='1' bytes='6' iicount='143'/>
<call method='927' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='921'/>
<parse method='927'>
<bc code='182' bci='2'/>
<method id='929' holder='921' name='add' return='791' arguments='790' flags='33' bytes='18' compile_id='130' compiler='C1' level='3' iicount='598'/>
<call method='929' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='921'/>
<parse method='929'>
<bc code='182' bci='1'/>
<method id='932' holder='921' name='get' return='790' flags='33' bytes='9' compile_id='131' compiler='C1' level='3' iicount='598'/>
<call method='932' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='921'/>
<parse method='932'>
<bc code='182' bci='5'/>
<type id='789' name='int'/>
<klass id='934' name='java/nio/LongBuffer' flags='1025'/>
<method id='935' holder='934' name='get' return='790' arguments='789' flags='1025' bytes='0' iicount='1'/>
<call method='935' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.620'/>
</parse>
<bc code='182' bci='13'/>
<method id='936' holder='934' name='put' return='934' arguments='789 790' flags='1025' bytes='0' iicount='1'/>
<call method='936' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.620'/>
</parse>
<parse_done stamp='0.620'/>
</parse>
<bc code='184' bci='86'/>
<method id='937' holder='921' name='getFindClassTime' return='921' flags='9' bytes='4' iicount='143'/>
<call method='937' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='937'>
<parse_done stamp='0.620'/>
</parse>
<bc code='182' bci='91'/>
<method id='940' holder='921' name='addElapsedTimeFrom' return='791' arguments='790' flags='1' bytes='10' iicount='301'/>
<call method='940' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='921'/>
<parse method='940'>
<bc code='184' bci='1'/>
<call method='915' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='6'/>
<call method='929' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='921'/>
<parse method='929'>
<bc code='182' bci='1'/>
<call method='932' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='921'/>
<parse method='932'>
<bc code='182' bci='5'/>
<call method='935' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.620'/>
</parse>
<bc code='182' bci='13'/>
<call method='936' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.620'/>
</parse>
<parse_done stamp='0.620'/>
</parse>
<bc code='184' bci='94'/>
<method id='942' holder='921' name='getFindClasses' return='921' flags='9' bytes='4' iicount='144'/>
<call method='942' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='942'>
<parse_done stamp='0.620'/>
</parse>
<bc code='182' bci='97'/>
<method id='945' holder='921' name='increment' return='791' flags='1' bytes='6' iicount='157'/>
<call method='945' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='921'/>
<parse method='945'>
<bc code='182' bci='2'/>
<call method='929' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='921'/>
<parse method='929'>
<bc code='182' bci='1'/>
<call method='932' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='921'/>
<parse method='932'>
<bc code='182' bci='5'/>
<call method='935' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.620'/>
</parse>
<bc code='182' bci='13'/>
<call method='936' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.620'/>
</parse>
<parse_done stamp='0.620'/>
</parse>
<bc code='182' bci='107'/>
<method id='947' holder='800' name='resolveClass' return='791' arguments='798' flags='20' bytes='6' iicount='1'/>
<call method='947' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='947'>
<bc code='183' bci='2'/>
<method id='949' holder='800' name='resolveClass0' return='791' arguments='798' flags='258' bytes='0' iicount='1'/>
<call method='949' instr='invokespecial'/>
<inline_fail reason='native method'/>
<parse_done stamp='0.620'/>
</parse>
<parse_done stamp='0.620'/>
</parse>
<phase name='optimize_blocks' stamp='0.620'>
<phase_done name='optimize_blocks' stamp='0.620'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.620'>
<phase_done name='rangeCheckElimination' stamp='0.620'/>
</phase>
<phase name='optimize_null_checks' stamp='0.620'>
<phase_done name='optimize_null_checks' stamp='0.620'/>
</phase>
<phase_done name='buildIR' stamp='0.620'/>
</phase>
<phase name='emit_lir' stamp='0.620'>
<phase name='lirGeneration' stamp='0.620'>
<phase_done name='lirGeneration' stamp='0.620'/>
</phase>
<phase name='linearScan' stamp='0.620'>
<phase_done name='linearScan' stamp='0.620'/>
</phase>
<phase_done name='emit_lir' stamp='0.620'/>
</phase>
<phase name='codeemit' stamp='0.620'>
<phase_done name='codeemit' stamp='0.620'/>
</phase>
<phase name='codeinstall' stamp='0.620'>
<dependency type='leaf_type' ctxk='903'/>
<dependency type='leaf_type' ctxk='921'/>
<dependency type='unique_concrete_method' ctxk='800' x='901'/>
<phase_done name='codeinstall' stamp='0.654'/>
</phase>
<code_cache total_blobs='383' nmethods='131' adapters='182' free_code_cache='334123712'/>
<task_done success='1' nmsize='11768' count='396' inlined_bytes='197' stamp='0.654'/>
</task>
<task compile_id='146' method='java/util/concurrent/ConcurrentHashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V' bytes='26' count='525' iicount='525' level='3' stamp='0.654'>
<phase name='buildIR' stamp='0.654'>
<type id='791' name='void'/>
<type id='789' name='int'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='899' name='java/util/concurrent/ConcurrentHashMap$Node' flags='8'/>
<method id='900' holder='899' name='&lt;init&gt;' return='791' arguments='789 796 796 899' flags='0' bytes='26' iicount='525'/>
<parse method='900'  stamp='0.654'>
<bc code='183' bci='1'/>
<method id='902' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='970992'/>
<call method='902' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='899'/>
<parse_done stamp='0.654'/>
</parse>
<parse_done stamp='0.654'/>
</parse>
<phase name='optimize_blocks' stamp='0.654'>
<phase_done name='optimize_blocks' stamp='0.654'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.654'>
<phase_done name='rangeCheckElimination' stamp='0.654'/>
</phase>
<phase name='optimize_null_checks' stamp='0.654'>
<phase_done name='optimize_null_checks' stamp='0.654'/>
</phase>
<phase_done name='buildIR' stamp='0.654'/>
</phase>
<phase name='emit_lir' stamp='0.654'>
<phase name='lirGeneration' stamp='0.654'>
<phase_done name='lirGeneration' stamp='0.654'/>
</phase>
<phase name='linearScan' stamp='0.654'>
<phase_done name='linearScan' stamp='0.654'/>
</phase>
<phase_done name='emit_lir' stamp='0.654'/>
</phase>
<phase name='codeemit' stamp='0.654'>
<phase_done name='codeemit' stamp='0.654'/>
</phase>
<phase name='codeinstall' stamp='0.654'>
<dependency type='no_finalizable_subclasses' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.655'/>
</phase>
<code_cache total_blobs='384' nmethods='132' adapters='182' free_code_cache='334122560'/>
<task_done success='1' nmsize='528' count='525' inlined_bytes='1' stamp='0.655'/>
</task>
<task compile_id='145' method='java/lang/ClassLoader getClassLoadingLock (Ljava/lang/String;)Ljava/lang/Object;' bytes='35' count='396' iicount='396' level='3' stamp='0.655'>
<phase name='buildIR' stamp='0.655'>
<klass id='796' name='java/lang/Object' flags='1'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='800' name='java/lang/ClassLoader' flags='1025'/>
<method id='899' holder='800' name='getClassLoadingLock' return='796' arguments='797' flags='4' bytes='35' iicount='396'/>
<parse method='899'  stamp='0.655'>
<bc code='183' bci='13'/>
<type id='791' name='void'/>
<method id='902' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='973118'/>
<call method='902' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<parse_done stamp='0.655'/>
</parse>
<bc code='182' bci='23'/>
<klass id='901' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='904' holder='901' name='putIfAbsent' return='796' arguments='796 796' flags='1' bytes='8' iicount='564'/>
<call method='904' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='901'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='901'/>
<parse method='904'>
<bc code='182' bci='4'/>
<type id='783' name='boolean'/>
<method id='906' holder='901' name='putVal' return='796' arguments='796 796 783' flags='16' bytes='362' iicount='583'/>
<call method='906' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='901'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.655'/>
</parse>
<parse_done stamp='0.655'/>
</parse>
<phase name='optimize_blocks' stamp='0.655'>
<phase_done name='optimize_blocks' stamp='0.655'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.655'>
<phase_done name='rangeCheckElimination' stamp='0.655'/>
</phase>
<phase name='optimize_null_checks' stamp='0.655'>
<phase_done name='optimize_null_checks' stamp='0.655'/>
</phase>
<phase_done name='buildIR' stamp='0.655'/>
</phase>
<phase name='emit_lir' stamp='0.655'>
<phase name='lirGeneration' stamp='0.655'>
<phase_done name='lirGeneration' stamp='0.655'/>
</phase>
<phase name='linearScan' stamp='0.655'>
<phase_done name='linearScan' stamp='0.655'/>
</phase>
<phase_done name='emit_lir' stamp='0.655'/>
</phase>
<phase name='codeemit' stamp='0.655'>
<phase_done name='codeemit' stamp='0.655'/>
</phase>
<phase name='codeinstall' stamp='0.655'>
<dependency type='leaf_type' ctxk='901'/>
<phase_done name='codeinstall' stamp='0.656'/>
</phase>
<code_cache total_blobs='385' nmethods='133' adapters='182' free_code_cache='334120768'/>
<task_done success='1' nmsize='840' count='398' inlined_bytes='9' stamp='0.656'/>
</task>
<task compile_id='147' method='java/lang/ClassLoader findLoadedClass (Ljava/lang/String;)Ljava/lang/Class;' bytes='16' count='398' iicount='398' level='3' stamp='0.656'>
<phase name='buildIR' stamp='0.656'>
<klass id='798' name='java/lang/Class' flags='17'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='800' name='java/lang/ClassLoader' flags='1025'/>
<method id='899' holder='800' name='findLoadedClass' return='798' arguments='797' flags='20' bytes='16' iicount='398'/>
<parse method='899'  stamp='0.656'>
<bc code='183' bci='2'/>
<type id='783' name='boolean'/>
<method id='901' holder='800' name='checkName' return='783' arguments='797' flags='2' bytes='43' compile_id='100' compiler='C1' level='3' iicount='747'/>
<call method='901' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='12'/>
<method id='903' holder='800' name='findLoadedClass0' return='798' arguments='797' flags='274' bytes='0' iicount='398'/>
<call method='903' instr='invokespecial'/>
<inline_fail reason='native method'/>
<parse_done stamp='0.656'/>
</parse>
<phase name='optimize_blocks' stamp='0.656'>
<phase_done name='optimize_blocks' stamp='0.656'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.656'>
<phase_done name='rangeCheckElimination' stamp='0.656'/>
</phase>
<phase name='optimize_null_checks' stamp='0.656'>
<phase_done name='optimize_null_checks' stamp='0.656'/>
</phase>
<phase_done name='buildIR' stamp='0.656'/>
</phase>
<phase name='emit_lir' stamp='0.656'>
<phase name='lirGeneration' stamp='0.656'>
<phase_done name='lirGeneration' stamp='0.656'/>
</phase>
<phase name='linearScan' stamp='0.656'>
<phase_done name='linearScan' stamp='0.656'/>
</phase>
<phase_done name='emit_lir' stamp='0.656'/>
</phase>
<phase name='codeemit' stamp='0.656'>
<phase_done name='codeemit' stamp='0.656'/>
</phase>
<phase name='codeinstall' stamp='0.656'>
<phase_done name='codeinstall' stamp='0.657'/>
</phase>
<code_cache total_blobs='386' nmethods='134' adapters='182' free_code_cache='334119552'/>
<task_done success='1' nmsize='568' count='400' stamp='0.657'/>
</task>
<task compile_id='148' method='java/util/jar/JarFile getJarEntry (Ljava/lang/String;)Ljava/util/jar/JarEntry;' bytes='9' count='1024' iicount='1024' level='3' stamp='0.657'>
<phase name='buildIR' stamp='0.657'>
<klass id='900' name='java/util/jar/JarEntry' flags='1'/>
<klass id='797' name='java/lang/String' flags='17'/>
<klass id='899' name='java/util/jar/JarFile' flags='1'/>
<method id='901' holder='899' name='getJarEntry' return='900' arguments='797' flags='1' bytes='9' iicount='1024'/>
<parse method='901'  stamp='0.657'>
<bc code='182' bci='2'/>
<klass id='904' name='java/util/zip/ZipEntry' flags='1'/>
<method id='905' holder='899' name='getEntry' return='904' arguments='797' flags='1' bytes='22' compile_id='123' compiler='C1' level='3' iicount='1026'/>
<call method='905' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.657'/>
</parse>
<phase name='optimize_blocks' stamp='0.657'>
<phase_done name='optimize_blocks' stamp='0.657'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.657'>
<phase_done name='rangeCheckElimination' stamp='0.657'/>
</phase>
<phase name='optimize_null_checks' stamp='0.657'>
<phase_done name='optimize_null_checks' stamp='0.657'/>
</phase>
<phase_done name='buildIR' stamp='0.657'/>
</phase>
<phase name='emit_lir' stamp='0.657'>
<phase name='lirGeneration' stamp='0.657'>
<phase_done name='lirGeneration' stamp='0.657'/>
</phase>
<phase name='linearScan' stamp='0.657'>
<phase_done name='linearScan' stamp='0.657'/>
</phase>
<phase_done name='emit_lir' stamp='0.657'/>
</phase>
<phase name='codeemit' stamp='0.657'>
<phase_done name='codeemit' stamp='0.657'/>
</phase>
<phase name='codeinstall' stamp='0.657'>
<phase_done name='codeinstall' stamp='0.659'/>
</phase>
<code_cache total_blobs='387' nmethods='135' adapters='182' free_code_cache='334117504'/>
<task_done success='1' nmsize='1448' count='1024' stamp='0.659'/>
</task>
<task compile_id='136' method='java/util/zip/ZipCoder isUTF8 ()Z' bytes='5' count='151' iicount='151' level='1' stamp='0.659'>
<phase name='buildIR' stamp='0.659'>
<type id='783' name='boolean'/>
<klass id='899' name='java/util/zip/ZipCoder' flags='16'/>
<method id='900' holder='899' name='isUTF8' return='783' flags='0' bytes='5' iicount='151'/>
<parse method='900'  stamp='0.659'>
<parse_done stamp='0.659'/>
</parse>
<phase name='optimize_blocks' stamp='0.659'>
<phase_done name='optimize_blocks' stamp='0.659'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.659'>
<phase_done name='rangeCheckElimination' stamp='0.659'/>
</phase>
<phase name='optimize_null_checks' stamp='0.659'>
<phase_done name='optimize_null_checks' stamp='0.659'/>
</phase>
<phase_done name='buildIR' stamp='0.659'/>
</phase>
<phase name='emit_lir' stamp='0.659'>
<phase name='lirGeneration' stamp='0.659'>
<phase_done name='lirGeneration' stamp='0.659'/>
</phase>
<phase name='linearScan' stamp='0.659'>
<phase_done name='linearScan' stamp='0.659'/>
</phase>
<phase_done name='emit_lir' stamp='0.659'/>
</phase>
<phase name='codeemit' stamp='0.659'>
<phase_done name='codeemit' stamp='0.659'/>
</phase>
<phase name='codeinstall' stamp='0.659'>
<phase_done name='codeinstall' stamp='0.659'/>
</phase>
<code_cache total_blobs='388' nmethods='136' adapters='182' free_code_cache='334116736'/>
<task_done success='1' nmsize='272' count='151' stamp='0.659'/>
</task>
<task compile_id='137' method='java/util/jar/JarFile access$300 (Ljava/util/jar/JarFile;)Ljava/util/jar/JarVerifier;' bytes='5' count='149' iicount='149' level='1' stamp='0.659'>
<phase name='buildIR' stamp='0.659'>
<klass id='900' name='java/util/jar/JarVerifier' unloaded='1'/>
<klass id='899' name='java/util/jar/JarFile' flags='1'/>
<method id='901' holder='899' name='access$300' return='900' arguments='899' flags='4104' bytes='5' iicount='149'/>
<parse method='901'  stamp='0.659'>
<parse_done stamp='0.659'/>
</parse>
<phase name='optimize_blocks' stamp='0.659'>
<phase_done name='optimize_blocks' stamp='0.659'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.659'>
<phase_done name='rangeCheckElimination' stamp='0.659'/>
</phase>
<phase name='optimize_null_checks' stamp='0.659'>
<phase_done name='optimize_null_checks' stamp='0.659'/>
</phase>
<phase_done name='buildIR' stamp='0.659'/>
</phase>
<phase name='emit_lir' stamp='0.659'>
<phase name='lirGeneration' stamp='0.659'>
<phase_done name='lirGeneration' stamp='0.659'/>
</phase>
<phase name='linearScan' stamp='0.659'>
<phase_done name='linearScan' stamp='0.659'/>
</phase>
<phase_done name='emit_lir' stamp='0.659'/>
</phase>
<phase name='codeemit' stamp='0.659'>
<phase_done name='codeemit' stamp='0.659'/>
</phase>
<phase name='codeinstall' stamp='0.659'>
<phase_done name='codeinstall' stamp='0.659'/>
</phase>
<code_cache total_blobs='389' nmethods='137' adapters='182' free_code_cache='334115968'/>
<task_done success='1' nmsize='240' count='149' stamp='0.659'/>
</task>
<task compile_id='149' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='1537' iicount='1537' level='1' stamp='0.659'>
<phase name='buildIR' stamp='0.659'>
<type id='791' name='void'/>
<type id='783' name='boolean'/>
<klass id='899' name='java/util/HashMap' flags='1'/>
<method id='900' holder='899' name='afterNodeInsertion' return='791' arguments='783' flags='0' bytes='1' compile_id='97' compiler='C1' level='3' iicount='1549'/>
<parse method='900'  stamp='0.659'>
<parse_done stamp='0.659'/>
</parse>
<phase name='optimize_blocks' stamp='0.659'>
<phase_done name='optimize_blocks' stamp='0.659'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.659'>
<phase_done name='rangeCheckElimination' stamp='0.659'/>
</phase>
<phase name='optimize_null_checks' stamp='0.659'>
<phase_done name='optimize_null_checks' stamp='0.659'/>
</phase>
<phase_done name='buildIR' stamp='0.659'/>
</phase>
<phase name='emit_lir' stamp='0.659'>
<phase name='lirGeneration' stamp='0.659'>
<phase_done name='lirGeneration' stamp='0.659'/>
</phase>
<phase name='linearScan' stamp='0.659'>
<phase_done name='linearScan' stamp='0.659'/>
</phase>
<phase_done name='emit_lir' stamp='0.659'/>
</phase>
<phase name='codeemit' stamp='0.659'>
<phase_done name='codeemit' stamp='0.659'/>
</phase>
<phase name='codeinstall' stamp='0.659'>
<phase_done name='codeinstall' stamp='0.660'/>
</phase>
<code_cache total_blobs='390' nmethods='138' adapters='182' free_code_cache='334115200'/>
<task_done success='1' nmsize='272' count='1557' stamp='0.660'/>
</task>
<task compile_id='150' method='java/util/concurrent/ConcurrentHashMap casTabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' bytes='20' count='513' iicount='513' level='3' stamp='0.660'>
<phase name='buildIR' stamp='0.660'>
<type id='783' name='boolean'/>
<klass id='901' name='[Ljava/util/concurrent/ConcurrentHashMap$Node;' flags='1040'/>
<type id='789' name='int'/>
<klass id='900' name='java/util/concurrent/ConcurrentHashMap$Node' flags='8'/>
<klass id='899' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='902' holder='899' name='casTabAt' return='783' arguments='901 789 900 900' flags='24' bytes='20' iicount='513'/>
<parse method='902'  stamp='0.660'>
<bc code='182' bci='16'/>
<klass id='796' name='java/lang/Object' flags='1'/>
<type id='790' name='long'/>
<klass id='863' name='sun/misc/Unsafe' flags='17'/>
<method id='906' holder='863' name='compareAndSwapObject' return='783' arguments='796 790 796 796' flags='273' bytes='0' compile_id='75' compile_kind='c2n' level='0' iicount='256'/>
<call method='906' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.660'/>
</parse>
<phase name='optimize_blocks' stamp='0.660'>
<phase_done name='optimize_blocks' stamp='0.660'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.660'>
<phase_done name='rangeCheckElimination' stamp='0.660'/>
</phase>
<phase name='optimize_null_checks' stamp='0.660'>
<phase_done name='optimize_null_checks' stamp='0.660'/>
</phase>
<phase_done name='buildIR' stamp='0.660'/>
</phase>
<phase name='emit_lir' stamp='0.660'>
<phase name='lirGeneration' stamp='0.660'>
<phase_done name='lirGeneration' stamp='0.660'/>
</phase>
<phase name='linearScan' stamp='0.660'>
<phase_done name='linearScan' stamp='0.660'/>
</phase>
<phase_done name='emit_lir' stamp='0.660'/>
</phase>
<phase name='codeemit' stamp='0.660'>
<phase_done name='codeemit' stamp='0.660'/>
</phase>
<phase name='codeinstall' stamp='0.660'>
<phase_done name='codeinstall' stamp='0.661'/>
</phase>
<code_cache total_blobs='391' nmethods='139' adapters='182' free_code_cache='334114240'/>
<task_done success='1' nmsize='400' count='513' stamp='0.661'/>
</task>
<task compile_id='151' method='java/net/FactoryURLClassLoader loadClass (Ljava/lang/String;Z)Ljava/lang/Class;' bytes='40' count='384' iicount='384' throwouts='152' level='3' stamp='0.661'>
<phase name='buildIR' stamp='0.661'>
<klass id='798' name='java/lang/Class' flags='17'/>
<klass id='797' name='java/lang/String' flags='17'/>
<type id='783' name='boolean'/>
<klass id='899' name='java/net/FactoryURLClassLoader' flags='16'/>
<method id='900' holder='899' name='loadClass' return='798' arguments='797 783' flags='17' bytes='40' iicount='384'/>
<parse method='900'  stamp='0.661'>
<bc code='184' bci='0'/>
<klass id='808' name='java/lang/SecurityManager' flags='1'/>
<klass id='802' name='java/lang/System' flags='17'/>
<method id='902' holder='802' name='getSecurityManager' return='808' flags='9' bytes='4' compile_id='27' compiler='C1' level='3' iicount='918'/>
<call method='902' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='902'>
<parse_done stamp='0.661'/>
</parse>
<bc code='182' bci='11'/>
<type id='789' name='int'/>
<method id='905' holder='797' name='lastIndexOf' return='789' arguments='789' flags='1' bytes='13' compile_id='113' compiler='C1' level='3' iicount='663'/>
<call method='905' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='905'>
<bc code='182' bci='9'/>
<method id='907' holder='797' name='lastIndexOf' return='789' arguments='789 789' flags='1' bytes='52' compile_id='33' compiler='C1' level='3' iicount='817'/>
<call method='907' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.661'/>
</parse>
<bc code='182' bci='27'/>
<method id='909' holder='797' name='substring' return='797' arguments='789 789' flags='1' bytes='79' compile_id='73' compiler='C1' level='3' iicount='946'/>
<call method='909' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='30'/>
<type id='791' name='void'/>
<method id='911' holder='808' name='checkPackageAccess' return='791' arguments='797' flags='1' bytes='156' iicount='1'/>
<call method='911' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='36'/>
<klass id='800' name='java/lang/ClassLoader' flags='1025'/>
<method id='912' holder='800' name='loadClass' return='798' arguments='797 783' flags='4' bytes='122' compile_id='144' compiler='C1' level='3' iicount='412'/>
<call method='912' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.661'/>
</parse>
<phase name='optimize_blocks' stamp='0.661'>
<phase_done name='optimize_blocks' stamp='0.661'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.661'>
<phase_done name='rangeCheckElimination' stamp='0.661'/>
</phase>
<phase name='optimize_null_checks' stamp='0.661'>
<phase_done name='optimize_null_checks' stamp='0.661'/>
</phase>
<phase_done name='buildIR' stamp='0.661'/>
</phase>
<phase name='emit_lir' stamp='0.661'>
<phase name='lirGeneration' stamp='0.661'>
<phase_done name='lirGeneration' stamp='0.661'/>
</phase>
<phase name='linearScan' stamp='0.661'>
<phase_done name='linearScan' stamp='0.661'/>
</phase>
<phase_done name='emit_lir' stamp='0.661'/>
</phase>
<phase name='codeemit' stamp='0.661'>
<phase_done name='codeemit' stamp='0.661'/>
</phase>
<phase name='codeinstall' stamp='0.661'>
<phase_done name='codeinstall' stamp='0.663'/>
</phase>
<code_cache total_blobs='392' nmethods='140' adapters='182' free_code_cache='334111616'/>
<task_done success='1' nmsize='1464' count='386' inlined_bytes='17' stamp='0.663'/>
</task>
<task compile_id='153' method='java/lang/String indexOf (Ljava/lang/String;I)I' bytes='25' count='384' iicount='384' level='3' stamp='0.663'>
<phase name='buildIR' stamp='0.663'>
<type id='789' name='int'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='indexOf' return='789' arguments='797 789' flags='1' bytes='25' iicount='384'/>
<parse method='899'  stamp='0.663'>
<bc code='184' bci='21'/>
<klass id='888' name='[C' flags='1041'/>
<method id='901' holder='797' name='indexOf' return='789' arguments='888 789 789 888 789 789 789' flags='8' bytes='166' compile_id='58' compiler='C1' level='3' iicount='384'/>
<call method='901' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.663'/>
</parse>
<phase name='optimize_blocks' stamp='0.663'>
<phase_done name='optimize_blocks' stamp='0.663'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.663'>
<phase_done name='rangeCheckElimination' stamp='0.663'/>
</phase>
<phase name='optimize_null_checks' stamp='0.663'>
<phase_done name='optimize_null_checks' stamp='0.663'/>
</phase>
<phase_done name='buildIR' stamp='0.663'/>
</phase>
<phase name='emit_lir' stamp='0.663'>
<phase name='lirGeneration' stamp='0.663'>
<phase_done name='lirGeneration' stamp='0.663'/>
</phase>
<phase name='linearScan' stamp='0.663'>
<phase_done name='linearScan' stamp='0.663'/>
</phase>
<phase_done name='emit_lir' stamp='0.663'/>
</phase>
<phase name='codeemit' stamp='0.663'>
<phase_done name='codeemit' stamp='0.663'/>
</phase>
<phase name='codeinstall' stamp='0.663'>
<phase_done name='codeinstall' stamp='0.664'/>
</phase>
<code_cache total_blobs='393' nmethods='141' adapters='182' free_code_cache='334110400'/>
<task_done success='1' nmsize='456' count='384' stamp='0.664'/>
</task>
<task compile_id='154' method='java/util/BitSet wordIndex (I)I' bytes='5' count='384' iicount='384' level='3' stamp='0.665'>
<phase name='buildIR' stamp='0.665'>
<type id='789' name='int'/>
<klass id='899' name='java/util/BitSet' flags='1'/>
<method id='900' holder='899' name='wordIndex' return='789' arguments='789' flags='10' bytes='5' iicount='384'/>
<parse method='900'  stamp='0.665'>
<parse_done stamp='0.665'/>
</parse>
<phase name='optimize_blocks' stamp='0.665'>
<phase_done name='optimize_blocks' stamp='0.665'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.665'>
<phase_done name='rangeCheckElimination' stamp='0.665'/>
</phase>
<phase name='optimize_null_checks' stamp='0.665'>
<phase_done name='optimize_null_checks' stamp='0.665'/>
</phase>
<phase_done name='buildIR' stamp='0.665'/>
</phase>
<phase name='emit_lir' stamp='0.665'>
<phase name='lirGeneration' stamp='0.665'>
<phase_done name='lirGeneration' stamp='0.665'/>
</phase>
<phase name='linearScan' stamp='0.665'>
<phase_done name='linearScan' stamp='0.665'/>
</phase>
<phase_done name='emit_lir' stamp='0.665'/>
</phase>
<phase name='codeemit' stamp='0.665'>
<phase_done name='codeemit' stamp='0.665'/>
</phase>
<phase name='codeinstall' stamp='0.665'>
<phase_done name='codeinstall' stamp='0.681'/>
</phase>
<code_cache total_blobs='395' nmethods='142' adapters='183' free_code_cache='334109056'/>
<task_done success='1' nmsize='304' count='385' stamp='0.681'/>
</task>
<task compile_id='155' method='java/util/BitSet checkInvariants ()V' bytes='111' count='384' iicount='384' level='3' stamp='0.681'>
<phase name='buildIR' stamp='0.681'>
<type id='791' name='void'/>
<klass id='899' name='java/util/BitSet' flags='1'/>
<method id='900' holder='899' name='checkInvariants' return='791' flags='2' bytes='111' iicount='384'/>
<parse method='900'  stamp='0.681'>
<parse_done stamp='0.681'/>
</parse>
<phase name='optimize_blocks' stamp='0.681'>
<phase_done name='optimize_blocks' stamp='0.681'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.681'>
<phase_done name='rangeCheckElimination' stamp='0.681'/>
</phase>
<phase name='optimize_null_checks' stamp='0.681'>
<phase_done name='optimize_null_checks' stamp='0.681'/>
</phase>
<phase_done name='buildIR' stamp='0.681'/>
</phase>
<phase name='emit_lir' stamp='0.681'>
<phase name='lirGeneration' stamp='0.681'>
<phase_done name='lirGeneration' stamp='0.681'/>
</phase>
<phase name='linearScan' stamp='0.681'>
<phase_done name='linearScan' stamp='0.681'/>
</phase>
<phase_done name='emit_lir' stamp='0.681'/>
</phase>
<phase name='codeemit' stamp='0.681'>
<phase_done name='codeemit' stamp='0.681'/>
</phase>
<phase name='codeinstall' stamp='0.681'>
<phase_done name='codeinstall' stamp='0.682'/>
</phase>
<code_cache total_blobs='396' nmethods='143' adapters='183' free_code_cache='334108096'/>
<task_done success='1' nmsize='400' count='384' stamp='0.682'/>
</task>
<task compile_id='158' method='java/util/concurrent/ConcurrentHashMap putVal (Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' bytes='362' count='640' backedge_count='60' iicount='640' level='3' stamp='0.682'>
<phase name='buildIR' stamp='0.682'>
<klass id='796' name='java/lang/Object' flags='1'/>
<type id='783' name='boolean'/>
<klass id='899' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='900' holder='899' name='putVal' return='796' arguments='796 796 783' flags='16' bytes='362' iicount='641'/>
<parse method='900'  stamp='0.682'>
<bc code='182' bci='17'/>
<type id='789' name='int'/>
<method id='902' holder='796' name='hashCode' return='789' flags='257' bytes='0' iicount='482'/>
<call method='902' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='20'/>
<method id='903' holder='899' name='spread' return='789' arguments='789' flags='24' bytes='10' compile_id='74' compiler='C1' level='3' iicount='662'/>
<call method='903' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='903'>
<parse_done stamp='0.682'/>
</parse>
<bc code='184' bci='69'/>
<klass id='905' name='java/util/concurrent/ConcurrentHashMap$Node' flags='8'/>
<klass id='906' name='[Ljava/util/concurrent/ConcurrentHashMap$Node;' flags='1040'/>
<method id='907' holder='899' name='tabAt' return='905' arguments='906 789' flags='24' bytes='21' compile_id='49' compiler='C1' level='3' iicount='3645'/>
<call method='907' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='907'>
<bc code='182' bci='14'/>
<type id='790' name='long'/>
<klass id='863' name='sun/misc/Unsafe' flags='17'/>
<method id='912' holder='863' name='getObjectVolatile' return='796' arguments='796 790' flags='257' bytes='0' iicount='547'/>
<call method='912' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.682'/>
</parse>
<bc code='183' bci='92'/>
<type id='791' name='void'/>
<method id='913' holder='905' name='&lt;init&gt;' return='791' arguments='789 796 796 905' flags='0' bytes='26' compile_id='146' compiler='C1' level='3' iicount='627'/>
<call method='913' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='913'>
<bc code='183' bci='1'/>
<method id='915' holder='796' name='&lt;init&gt;' return='791' flags='1' bytes='1' compile_id='19' compiler='C1' level='1' iicount='996850'/>
<call method='915' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='915'>
<parse_done stamp='0.682'/>
</parse>
<parse_done stamp='0.682'/>
</parse>
<bc code='184' bci='95'/>
<method id='917' holder='899' name='casTabAt' return='783' arguments='906 789 905 905' flags='24' bytes='20' compile_id='150' compiler='C1' level='3' iicount='777'/>
<call method='917' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='917'>
<bc code='182' bci='16'/>
<method id='919' holder='863' name='compareAndSwapObject' return='783' arguments='796 790 796 796' flags='273' bytes='0' compile_id='75' compile_kind='c2n' level='0' iicount='256'/>
<call method='919' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.682'/>
</parse>
<bc code='182' bci='121'/>
<method id='920' holder='899' name='helpTransfer' return='906' arguments='906 905' flags='16' bytes='132' iicount='1'/>
<call method='920' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='142'/>
<call method='907' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='907'>
<bc code='182' bci='14'/>
<call method='912' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.682'/>
</parse>
<bc code='182' bci='192'/>
<method id='922' holder='796' name='equals' return='783' arguments='796' flags='1' bytes='11' iicount='1'/>
<call method='922' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='244'/>
<call method='913' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='913'>
<bc code='183' bci='1'/>
<call method='915' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='915'>
<parse_done stamp='0.682'/>
</parse>
<parse_done stamp='0.682'/>
</parse>
<bc code='182' bci='282'/>
<klass id='924' name='java/util/concurrent/ConcurrentHashMap$TreeNode' unloaded='1'/>
<klass id='923' name='java/util/concurrent/ConcurrentHashMap$TreeBin' unloaded='1'/>
<method id='925' holder='923' name='putTreeVal' return='924' arguments='789 796 796' unloaded='1'/>
<call method='925' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='339'/>
<method id='926' holder='899' name='treeifyBin' return='791' arguments='906 789' flags='18' bytes='164' iicount='1'/>
<call method='926' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='357'/>
<method id='928' holder='899' name='addCount' return='791' arguments='790 789' flags='18' bytes='292' iicount='490'/>
<call method='928' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='49'/>
<method id='930' holder='899' name='initTable' return='906' flags='18' bytes='115' iicount='8'/>
<call method='930' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='899'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='12'/>
<klass id='895' name='java/lang/NullPointerException' flags='1'/>
<method id='932' holder='895' name='&lt;init&gt;' return='791' flags='1' bytes='5' iicount='1'/>
<call method='932' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.683'/>
</parse>
<phase name='optimize_blocks' stamp='0.683'>
<phase_done name='optimize_blocks' stamp='0.683'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.683'>
<phase_done name='rangeCheckElimination' stamp='0.683'/>
</phase>
<phase name='optimize_null_checks' stamp='0.683'>
<phase_done name='optimize_null_checks' stamp='0.683'/>
</phase>
<phase_done name='buildIR' stamp='0.683'/>
</phase>
<phase name='emit_lir' stamp='0.683'>
<phase name='lirGeneration' stamp='0.683'>
<phase_done name='lirGeneration' stamp='0.683'/>
</phase>
<phase name='linearScan' stamp='0.683'>
<phase_done name='linearScan' stamp='0.683'/>
</phase>
<phase_done name='emit_lir' stamp='0.683'/>
</phase>
<phase name='codeemit' stamp='0.683'>
<phase_done name='codeemit' stamp='0.683'/>
</phase>
<phase name='codeinstall' stamp='0.683'>
<dependency type='leaf_type' ctxk='899'/>
<phase_done name='codeinstall' stamp='0.693'/>
</phase>
<code_cache total_blobs='399' nmethods='145' adapters='184' free_code_cache='334092992'/>
<task_done success='1' nmsize='8952' count='649' backedge_count='60' inlined_bytes='126' stamp='0.693'/>
</task>
<task compile_id='156' method='java/lang/Enum ordinal ()I' bytes='5' count='402' iicount='402' level='1' stamp='0.693'>
<phase name='buildIR' stamp='0.693'>
<type id='789' name='int'/>
<klass id='899' name='java/lang/Enum' flags='1025'/>
<method id='900' holder='899' name='ordinal' return='789' flags='17' bytes='5' iicount='402'/>
<parse method='900'  stamp='0.693'>
<parse_done stamp='0.693'/>
</parse>
<phase name='optimize_blocks' stamp='0.693'>
<phase_done name='optimize_blocks' stamp='0.693'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.693'>
<phase_done name='rangeCheckElimination' stamp='0.693'/>
</phase>
<phase name='optimize_null_checks' stamp='0.693'>
<phase_done name='optimize_null_checks' stamp='0.693'/>
</phase>
<phase_done name='buildIR' stamp='0.693'/>
</phase>
<phase name='emit_lir' stamp='0.693'>
<phase name='lirGeneration' stamp='0.693'>
<phase_done name='lirGeneration' stamp='0.693'/>
</phase>
<phase name='linearScan' stamp='0.693'>
<phase_done name='linearScan' stamp='0.693'/>
</phase>
<phase_done name='emit_lir' stamp='0.693'/>
</phase>
<phase name='codeemit' stamp='0.693'>
<phase_done name='codeemit' stamp='0.693'/>
</phase>
<phase name='codeinstall' stamp='0.693'>
<phase_done name='codeinstall' stamp='0.693'/>
</phase>
<code_cache total_blobs='400' nmethods='146' adapters='184' free_code_cache='334092224'/>
<task_done success='1' nmsize='272' count='402' stamp='0.693'/>
</task>
<task compile_id='157' method='java/lang/String equalsIgnoreCase (Ljava/lang/String;)Z' bytes='48' count='659' iicount='659' level='3' stamp='0.693'>
<phase name='buildIR' stamp='0.693'>
<type id='783' name='boolean'/>
<klass id='797' name='java/lang/String' flags='17'/>
<method id='899' holder='797' name='equalsIgnoreCase' return='783' arguments='797' flags='1' bytes='48' iicount='659'/>
<parse method='899'  stamp='0.693'>
<bc code='182' bci='36'/>
<type id='789' name='int'/>
<method id='901' holder='797' name='regionMatches' return='783' arguments='783 789 797 789 789' flags='1' bytes='149' iicount='359'/>
<call method='901' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.693'/>
</parse>
<phase name='optimize_blocks' stamp='0.693'>
<phase_done name='optimize_blocks' stamp='0.693'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.693'>
<phase_done name='rangeCheckElimination' stamp='0.693'/>
</phase>
<phase name='optimize_null_checks' stamp='0.693'>
<phase_done name='optimize_null_checks' stamp='0.693'/>
</phase>
<phase_done name='buildIR' stamp='0.693'/>
</phase>
<phase name='emit_lir' stamp='0.693'>
<phase name='lirGeneration' stamp='0.693'>
<phase_done name='lirGeneration' stamp='0.693'/>
</phase>
<phase name='linearScan' stamp='0.693'>
<phase_done name='linearScan' stamp='0.693'/>
</phase>
<phase_done name='emit_lir' stamp='0.693'/>
</phase>
<phase name='codeemit' stamp='0.693'>
<phase_done name='codeemit' stamp='0.693'/>
</phase>
<phase name='codeinstall' stamp='0.693'>
<phase_done name='codeinstall' stamp='0.694'/>
</phase>
<code_cache total_blobs='401' nmethods='147' adapters='184' free_code_cache='334090560'/>
<task_done success='1' nmsize='744' count='660' stamp='0.694'/>
</task>
<fragment>
<![CDATA[
<task compile_id='160' method='java/lang/Class getClassLoader0 ()Ljava/lang/ClassLoader;' bytes='5' count='130' iicount='130' level='1' stamp='0.694'>
<phase name='buildIR' stamp='0.694'>
<klass id='800' name='java/lang/ClassLoader' flags='1025'/>
<klass id='798' name='java/lang/Class' flags='17'/>
<method id='899' holder='798' name='getClassLoader0' return='800' flags='0' bytes='5' iicount='130'/>
<parse method='899'  stamp='0.694'>
<parse_done stamp='0.694'/>
</parse>
<phase name='optimize_blocks' stamp='0.694'>
<phase_done name='optimize_blocks' stamp='0.694'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.694'>
<phase_done name='rangeCheckElimination' stamp='0.694'/>
</phase>
<phase name='optimize_null_checks' stamp='0.694'>
<phase_done name='optimize_null_checks' stamp='0.694'/>
</phase>
<phase_done name='buildIR' stamp='0.694'/>
</phase>
<phase name='emit_lir' stamp='0.694'>
<phase name='lirGeneration' stamp='0.694'>
<phase_done name='lirGeneration' stamp='0.694'/>
</phase>
<phase name='linearScan' stamp='0.694'>
<phase_done name='linearScan' stamp='0.694'/>
</phase>
<phase_done name='emit_lir' stamp='0.694'/>
</phase>
<phase name='codeemit' stamp='0.694'>
<phase_done name='codeemit' stamp='0.694'/>
</phase>
<phase name='codeinstall' stamp='0.694'>
]]>
</fragment>
</compilation_log>
<compilation_log thread='139637818533632'>
<fragment>
<![CDATA[
<start_compile_thread name='JVMCI CompilerThread2' thread='139637818533632' process='10274' stamp='0.044'/>
<task compile_id='13' method='java/lang/String charAt (I)C' bytes='29' count='5779' iicount='5785' level='4' stamp='0.072'>
]]>
</fragment>
</compilation_log>
<compilation_log thread='139637819586304'>
<fragment>
<![CDATA[
<start_compile_thread name='JVMCI CompilerThread1' thread='139637819586304' process='10274' stamp='0.044'/>
<task compile_id='21' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='227' count='833' backedge_count='29566' iicount='833' level='4' stamp='0.114'>
]]>
</fragment>
</compilation_log>
<compilation_log thread='139637820638976'>
<fragment>
<![CDATA[
<start_compile_thread name='JVMCI CompilerThread0' thread='139637820638976' process='10274' stamp='0.044'/>
<task compile_id='15' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='65' count='5824' iicount='5827' level='4' stamp='0.073'>
]]>
</fragment>
</compilation_log>
<hotspot_log_done stamp='0.695'/>
</hotspot_log>
