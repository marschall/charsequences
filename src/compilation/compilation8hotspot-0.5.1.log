<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='4299' time_ms='1503490459597'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.144-b01
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.144-b01) for linux-amd64 JRE (1.8.0_144-b01), built on Jul 21 2017 21:57:33 by &quot;java_re&quot; with gcc 4.3.0 20080428 (Red Hat 4.3.0-8)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -XX:+LogCompilation -XX:+PrintAssembly -XX:LogFile=compilation8hotspot.log -Dfile.encoding=utf-8 
</args>
<command>
com.github.marschall.charsequences.ParseUuidCompilation
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.144-b01
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=/home/marschall/bin/java/jdk1.8.0_144/jre/lib/ext:/usr/java/packages/lib/ext
java.endorsed.dirs=/home/marschall/bin/java/jdk1.8.0_144/jre/lib/endorsed
sun.boot.library.path=/home/marschall/bin/java/jdk1.8.0_144/jre/lib/amd64
java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
java.home=/home/marschall/bin/java/jdk1.8.0_144/jre
java.class.path=/home/marschall/git/charsequences/target/test-classes:/home/marschall/git/charsequences/target/classes:/home/marschall/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/marschall/.m2/repository/org/hamcrest/hamcrest-junit/2.0.0.0/hamcrest-junit-2.0.0.0.jar:/home/marschall/.m2/repository/org/hamcrest/java-hamcrest/2.0.0.0/java-hamcrest-2.0.0.0.jar:/home/marschall/.m2/repository/org/openjdk/jmh/jmh-core/1.19/jmh-core-1.19.jar:/home/marschall/.m2/repository/net/sf/jopt-simple/jopt-simple/4.6/jopt-simple-4.6.jar:/home/marschall/.m2/repository/org/apache/commons/commons-math3/3.2/commons-math3-3.2.jar:/home/marschall/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.19/jmh-generator-annprocess-1.19.jar:/home/marschall/.m2/repository/org/openjdk/jol/jol-core/0.8/jol-core-0.8.jar
sun.boot.class.path=/home/marschall/bin/java/jdk1.8.0_144/jre/lib/resources.jar:/home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar:/home/marschall/bin/java/jdk1.8.0_144/jre/lib/sunrsasign.jar:/home/marschall/bin/java/jdk1.8.0_144/jre/lib/jsse.jar:/home/marschall/bin/java/jdk1.8.0_144/jre/lib/jce.jar:/home/marschall/bin/java/jdk1.8.0_144/jre/lib/charsets.jar:/home/marschall/bin/java/jdk1.8.0_144/jre/lib/jfr.jar:/home/marschall/bin/java/jdk1.8.0_144/jre/classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=utf-8
sun.java.command=com.github.marschall.charsequences.ParseUuidCompilation
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='139746009892608'/>
[Opened /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Object from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.Serializable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Comparable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.CharSequence from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.String from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.AnnotatedElement from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.GenericDeclaration from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Type from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Class from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Cloneable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.System from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Throwable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Error from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ThreadDeath from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Exception from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.RuntimeException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.SecurityManager from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.AccessControlContext from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.SecureClassLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ReflectiveOperationException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassNotFoundException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.LinkageError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.NoClassDefFoundError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassCastException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ArrayStoreException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.VirtualMachineError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.OutOfMemoryError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.StackOverflowError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.IllegalMonitorStateException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.SoftReference from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.WeakReference from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.FinalReference from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.PhantomReference from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Cleaner from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Runnable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Thread from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Thread$UncaughtExceptionHandler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ThreadGroup from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Map from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Dictionary from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Hashtable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Properties from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.AccessibleObject from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Member from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Field from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Parameter from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Executable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Method from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Constructor from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.MagicAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessor from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessor from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingClassLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.ConstantPool from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessor from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeFieldAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeStaticFieldAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.annotation.Annotation from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.CallerSensitive from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandle from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.DirectMethodHandle from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MemberName from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleNatives from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodType from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.BootstrapMethodError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.CallSite from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.ConstantCallSite from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MutableCallSite from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.VolatileCallSite from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Appendable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.AbstractStringBuilder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.StringBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.StringBuilder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Unsafe from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.AutoCloseable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.Closeable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.InputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.ByteArrayInputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.File from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.net.URL from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.jar.Manifest from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Launcher from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.CodeSource from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.StackTraceElement from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.Buffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Boolean from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Character from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Number from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Float from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Double from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Byte from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Short from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Integer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Long from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.NullPointerException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ArithmeticException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamField from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Comparator from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.String$CaseInsensitiveComparator from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.Guard from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.Permission from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.BasicPermission from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.RuntimePermission from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.AccessController from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectPermission from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.PrivilegedAction from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$GetReflectionFactoryAction from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.cert.Certificate from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Iterable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.List from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.RandomAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.AbstractCollection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.AbstractList from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Vector from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Stack from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$Lock from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$ReferenceHandler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.InterruptedException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.ArrayList from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Set from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.AbstractSet from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptySet from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyList from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.AbstractMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableCollection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableList from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableRandomAccessList from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Null from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Lock from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaLangRefAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.SharedSecrets from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.IncompatibleClassChangeError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.NoSuchMethodError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.Reflection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.HashMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Map$Entry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.HashMap$Node from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.VM from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Entry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Math from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer$FinalizerThread from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.Charset from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.spi.CharsetProvider from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.FastCharsetProvider from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.util.PreHashedMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Aliases from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Classes from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Cache from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicInteger from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Class$3 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Class$ReflectionData from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Class$Atomic from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.AbstractRepository from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.GenericDeclRepository from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.ClassRepository from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Class$AnnotationData from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.annotation.AnnotationType from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$ClassValueMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Modifier from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.LangReflectAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Arrays from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.HistoricallyNamedCharset from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.Unicode from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Class$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.NativeConstructorAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingConstructorAccessorImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.StringCoding from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap$Entry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringDecoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayDecoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetDecoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Decoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.CodingErrorAction from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Hashtable$EntrySet from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedCollection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedSet from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Objects from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Enumeration from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Iterator from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Enumerator from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Runtime from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Version from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FileInputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaIOFileDescriptorAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.Flushable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.OutputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FileOutputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FilterInputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.BufferedInputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.PrivilegedExceptionAction from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.reflect.misc.ReflectUtil from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FilterOutputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.PrintStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.BufferedOutputStream from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.Writer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.OutputStreamWriter from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamEncoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.security.action.GetPropertyAction from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayEncoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetEncoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Encoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.ByteBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.HeapByteBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.Bits from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.ByteOrder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicLong from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaNioAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.Bits$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.BufferedWriter from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.DefaultFileSystem from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FileSystem from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.UnixFileSystem from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Enum from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.File$PathStatus from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.file.Watchable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.file.Path from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringEncoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$3 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$Entry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$Entry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$NativeLibrary from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Terminator from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.SignalHandler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Terminator$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Signal from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.NativeSignalHandler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Integer$IntegerCache from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.OSEnvironment from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaLangAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.System$2 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.IllegalArgumentException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Compiler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Compiler$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandlerFactory from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$Factory from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.security.util.Debug from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$ParallelLoaders from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$Entry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Collections$SetFromMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$KeySet from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaNetAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader$7 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.StringTokenizer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.MetaIndex from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Readable from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.Reader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.BufferedReader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.InputStreamReader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FileReader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamDecoder from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.CharBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.HeapCharBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$Cache from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$2 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.reflect.Array from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.HashMap$TreeNode from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FileInputStream$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.net.www.ParseUtil from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.BitSet from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Locale from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Locale$Cache from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.Lock from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.ReentrantLock from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Segment from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Node from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CounterCell from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CollectionView from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$KeySetView from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ValuesView from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$EntrySetView from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Cache from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Key from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache$CacheEntry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.Locale$LocaleKey from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleUtils from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.CharacterData from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.CharacterDataLatin1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.net.Parts from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.Handler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$JavaSecurityAccessImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityProtectionDomainAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$2 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$Key from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.Principal from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.HashSet from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.jar.Handler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.SystemClassLoaderAction from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='139745424463616'/>
<thread_logfile thread='139745424463616' filename='/tmp/hs_c139745424463616_pid4299.log'/>
<writer thread='139745423410944'/>
<thread_logfile thread='139745423410944' filename='/tmp/hs_c139745423410944_pid4299.log'/>
<writer thread='139745422358272'/>
<thread_logfile thread='139745422358272' filename='/tmp/hs_c139745422358272_pid4299.log'/>
<writer thread='139745421305600'/>
<thread_logfile thread='139745421305600' filename='/tmp/hs_c139745421305600_pid4299.log'/>
<writer thread='139746009892608'/>
[Loaded java.lang.invoke.MethodHandleImpl from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<task_queued compile_id='1' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='256' iicount='256' level='3' stamp='0.064' comment='tiered' hot_count='256'/>
<task_queued compile_id='2' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='256' iicount='256' level='3' stamp='0.064' comment='tiered' hot_count='256'/>
<task_queued compile_id='3' method='java/lang/Math min (II)I' bytes='11' count='640' iicount='640' level='3' stamp='0.064' comment='tiered' hot_count='640'/>
[Loaded java.util.function.Function from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$2 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$3 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassValue from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$4 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Entry from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Identity from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='139745421305600'/>
Loaded disassembler from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/amd64/server/hsdis-amd64.so
Decoding compiled method 0x00007f19110ffc50:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f190cc4e7a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f19110ffdc0: mov    %eax,-0x14000(%rsp)
  0x00007f19110ffdc7: push   %rbp
  0x00007f19110ffdc8: sub    $0x30,%rsp
  0x00007f19110ffdcc: movabs $0x7f190cd21ce8,%rax  ;   {metadata(method data for {method} {0x00007f190cc4e7a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f19110ffdd6: mov    0xdc(%rax),%edi
  0x00007f19110ffddc: add    $0x8,%edi
  0x00007f19110ffddf: mov    %edi,0xdc(%rax)
  0x00007f19110ffde5: movabs $0x7f190cc4e7a8,%rax  ;   {metadata({method} {0x00007f190cc4e7a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f19110ffdef: and    $0x1ff8,%edi
  0x00007f19110ffdf5: cmp    $0x0,%edi
  0x00007f19110ffdf8: je     0x00007f19110ffe5d  ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x00007f19110ffdfe: cmp    %edx,%esi
  0x00007f19110ffe00: movabs $0x7f190cd21ce8,%rax  ;   {metadata(method data for {method} {0x00007f190cc4e7a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f19110ffe0a: movabs $0x108,%rdi
  0x00007f19110ffe14: jg     0x00007f19110ffe24
  0x00007f19110ffe1a: movabs $0x118,%rdi
  0x00007f19110ffe24: mov    (%rax,%rdi,1),%rbx
  0x00007f19110ffe28: lea    0x1(%rbx),%rbx
  0x00007f19110ffe2c: mov    %rbx,(%rax,%rdi,1)
  0x00007f19110ffe30: jg     0x00007f19110ffe4b  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x00007f19110ffe36: movabs $0x7f190cd21ce8,%rax  ;   {metadata(method data for {method} {0x00007f190cc4e7a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f19110ffe40: incl   0x128(%rax)
  0x00007f19110ffe46: jmpq   0x00007f19110ffe4e  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x00007f19110ffe4b: mov    %rdx,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x00007f19110ffe4e: mov    %rsi,%rax
  0x00007f19110ffe51: add    $0x30,%rsp
  0x00007f19110ffe55: pop    %rbp
  0x00007f19110ffe56: test   %eax,0x163942a4(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f19110ffe5c: retq   
  0x00007f19110ffe5d: mov    %rax,0x8(%rsp)
  0x00007f19110ffe62: movq   $0xffffffffffffffff,(%rsp)
  0x00007f19110ffe6a: callq  0x00007f19110feaa0  ; OopMap{off=175}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x00007f19110ffe6f: jmp    0x00007f19110ffdfe
  0x00007f19110ffe71: nop
  0x00007f19110ffe72: nop
  0x00007f19110ffe73: mov    0x2a8(%r15),%rax
  0x00007f19110ffe7a: movabs $0x0,%r10
  0x00007f19110ffe84: mov    %r10,0x2a8(%r15)
  0x00007f19110ffe8b: movabs $0x0,%r10
  0x00007f19110ffe95: mov    %r10,0x2b0(%r15)
  0x00007f19110ffe9c: add    $0x30,%rsp
  0x00007f19110ffea0: pop    %rbp
  0x00007f19110ffea1: jmpq   0x00007f191106f220  ;   {runtime_call}
  0x00007f19110ffea6: hlt    
  0x00007f19110ffea7: hlt    
  0x00007f19110ffea8: hlt    
  0x00007f19110ffea9: hlt    
  0x00007f19110ffeaa: hlt    
  0x00007f19110ffeab: hlt    
  0x00007f19110ffeac: hlt    
  0x00007f19110ffead: hlt    
  0x00007f19110ffeae: hlt    
  0x00007f19110ffeaf: hlt    
  0x00007f19110ffeb0: hlt    
  0x00007f19110ffeb1: hlt    
  0x00007f19110ffeb2: hlt    
  0x00007f19110ffeb3: hlt    
  0x00007f19110ffeb4: hlt    
  0x00007f19110ffeb5: hlt    
  0x00007f19110ffeb6: hlt    
  0x00007f19110ffeb7: hlt    
  0x00007f19110ffeb8: hlt    
  0x00007f19110ffeb9: hlt    
  0x00007f19110ffeba: hlt    
  0x00007f19110ffebb: hlt    
  0x00007f19110ffebc: hlt    
  0x00007f19110ffebd: hlt    
  0x00007f19110ffebe: hlt    
  0x00007f19110ffebf: hlt    
[Exception Handler]
[Stub Code]
  0x00007f19110ffec0: callq  0x00007f191106c860  ;   {no_reloc}
  0x00007f19110ffec5: mov    %rsp,-0x28(%rsp)
  0x00007f19110ffeca: sub    $0x80,%rsp
  0x00007f19110ffed1: mov    %rax,0x78(%rsp)
  0x00007f19110ffed6: mov    %rcx,0x70(%rsp)
  0x00007f19110ffedb: mov    %rdx,0x68(%rsp)
  0x00007f19110ffee0: mov    %rbx,0x60(%rsp)
  0x00007f19110ffee5: mov    %rbp,0x50(%rsp)
  0x00007f19110ffeea: mov    %rsi,0x48(%rsp)
  0x00007f19110ffeef: mov    %rdi,0x40(%rsp)
  0x00007f19110ffef4: mov    %r8,0x38(%rsp)
  0x00007f19110ffef9: mov    %r9,0x30(%rsp)
  0x00007f19110ffefe: mov    %r10,0x28(%rsp)
  0x00007f19110fff03: mov    %r11,0x20(%rsp)
  0x00007f19110fff08: mov    %r12,0x18(%rsp)
  0x00007f19110fff0d: mov    %r13,0x10(%rsp)
  0x00007f19110fff12: mov    %r14,0x8(%rsp)
  0x00007f19110fff17: mov    %r15,(%rsp)
  0x00007f19110fff1b: movabs $0x7f192638cf36,%rdi  ;   {external_word}
  0x00007f19110fff25: movabs $0x7f19110ffec5,%rsi  ;   {internal_word}
  0x00007f19110fff2f: mov    %rsp,%rdx
  0x00007f19110fff32: and    $0xfffffffffffffff0,%rsp
  0x00007f19110fff36: callq  0x00007f19260b8990  ;   {runtime_call}
  0x00007f19110fff3b: hlt    
[Deopt Handler Code]
  0x00007f19110fff3c: movabs $0x7f19110fff3c,%r10  ;   {section_word}
  0x00007f19110fff46: push   %r10
  0x00007f19110fff48: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f19110fff4d: hlt    
  0x00007f19110fff4e: hlt    
  0x00007f19110fff4f: hlt    
<nmethod compile_id='3' compiler='C1' level='3' entry='0x00007f19110ffdc0' size='936' address='0x00007f19110ffc50' relocation_offset='296' insts_offset='368' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='816' dependencies_offset='928' method='java/lang/Math min (II)I' bytes='11' count='640' iicount='640' stamp='0.071'/>
<writer thread='139746009892608'/>
[Loaded java.lang.ClassValue$Version from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MemberName$Factory from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='139745421305600'/>
Decoding compiled method 0x00007f1911100210:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007f190cb5c1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x00007f19111003e0: mov    0x8(%rsi),%r10d
  0x00007f19111003e4: shl    $0x3,%r10
  0x00007f19111003e8: cmp    %rax,%r10
  0x00007f19111003eb: jne    0x00007f1911045e20  ;   {runtime_call}
  0x00007f19111003f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f19111003fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f1911100400: mov    %eax,-0x14000(%rsp)
  0x00007f1911100407: push   %rbp
  0x00007f1911100408: sub    $0x60,%rsp
  0x00007f191110040c: movabs $0x7f190cd39e40,%rdi  ;   {metadata(method data for {method} {0x00007f190cb5c1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f1911100416: mov    0xdc(%rdi),%ebx
  0x00007f191110041c: add    $0x8,%ebx
  0x00007f191110041f: mov    %ebx,0xdc(%rdi)
  0x00007f1911100425: movabs $0x7f190cb5c1a0,%rdi  ;   {metadata({method} {0x00007f190cb5c1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110042f: and    $0x1ff8,%ebx
  0x00007f1911100435: cmp    $0x0,%ebx
  0x00007f1911100438: je     0x00007f1911100706  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x00007f191110043e: mov    %rsi,%rdi
  0x00007f1911100441: movabs $0x7f190cd39e40,%rbx  ;   {metadata(method data for {method} {0x00007f190cb5c1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110044b: addq   $0x1,0x108(%rbx)
  0x00007f1911100453: movabs $0x7f190cccf108,%rdi  ;   {metadata(method data for {method} {0x00007f190cb59480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f191110045d: mov    0xdc(%rdi),%ebx
  0x00007f1911100463: add    $0x8,%ebx
  0x00007f1911100466: mov    %ebx,0xdc(%rdi)
  0x00007f191110046c: movabs $0x7f190cb59480,%rdi  ;   {metadata({method} {0x00007f190cb59480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f1911100476: and    $0x7ffff8,%ebx
  0x00007f191110047c: cmp    $0x0,%ebx
  0x00007f191110047f: je     0x00007f191110071d
  0x00007f1911100485: cmp    $0x0,%ecx
  0x00007f1911100488: movabs $0x7f190cd39e40,%rdi  ;   {metadata(method data for {method} {0x00007f190cb5c1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f1911100492: movabs $0x118,%rbx
  0x00007f191110049c: jge    0x00007f19111004ac
  0x00007f19111004a2: movabs $0x128,%rbx
  0x00007f19111004ac: mov    (%rdi,%rbx,1),%rax
  0x00007f19111004b0: lea    0x1(%rax),%rax
  0x00007f19111004b4: mov    %rax,(%rdi,%rbx,1)
  0x00007f19111004b8: jl     0x00007f19111006c6  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x00007f19111004be: cmp    $0x0,%r8d
  0x00007f19111004c2: movabs $0x7f190cd39e40,%rdi  ;   {metadata(method data for {method} {0x00007f190cb5c1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f19111004cc: movabs $0x148,%rbx
  0x00007f19111004d6: jg     0x00007f19111004e6
  0x00007f19111004dc: movabs $0x158,%rbx
  0x00007f19111004e6: mov    (%rdi,%rbx,1),%rax
  0x00007f19111004ea: lea    0x1(%rax),%rax
  0x00007f19111004ee: mov    %rax,(%rdi,%rbx,1)
  0x00007f19111004f2: jg     0x00007f191110056d  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x00007f19111004f8: cmp    $0x0,%r8d
  0x00007f19111004fc: movabs $0x7f190cd39e40,%rdi  ;   {metadata(method data for {method} {0x00007f190cb5c1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f1911100506: movabs $0x168,%rbx
  0x00007f1911100510: jge    0x00007f1911100520
  0x00007f1911100516: movabs $0x178,%rbx
  0x00007f1911100520: mov    (%rdi,%rbx,1),%rax
  0x00007f1911100524: lea    0x1(%rax),%rax
  0x00007f1911100528: mov    %rax,(%rdi,%rbx,1)
  0x00007f191110052c: jl     0x00007f1911100686  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x00007f1911100532: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x00007f1911100734
  0x00007f1911100535: cmp    %edi,%ecx
  0x00007f1911100537: movabs $0x7f190cd39e40,%rdi  ;   {metadata(method data for {method} {0x00007f190cb5c1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f1911100541: movabs $0x198,%rbx
  0x00007f191110054b: jg     0x00007f191110055b
  0x00007f1911100551: movabs $0x1a8,%rbx
  0x00007f191110055b: mov    (%rdi,%rbx,1),%rax
  0x00007f191110055f: lea    0x1(%rax),%rax
  0x00007f1911100563: mov    %rax,(%rdi,%rbx,1)
  0x00007f1911100567: jle    0x00007f1911100602  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x00007f191110056d: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x00007f1911100739
  0x00007f1911100570: sub    %r8d,%edi
  0x00007f1911100573: cmp    %edi,%ecx
  0x00007f1911100575: movabs $0x7f190cd39e40,%rdi  ;   {metadata(method data for {method} {0x00007f190cb5c1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110057f: movabs $0x1b8,%rbx
  0x00007f1911100589: jle    0x00007f1911100599
  0x00007f191110058f: movabs $0x1c8,%rbx
  0x00007f1911100599: mov    (%rdi,%rbx,1),%rax
  0x00007f191110059d: lea    0x1(%rax),%rax
  0x00007f19111005a1: mov    %rax,(%rdi,%rbx,1)
  0x00007f19111005a5: jg     0x00007f191110063c  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x00007f19111005ab: mov    %rsi,0x38(%rsp)
  0x00007f19111005b0: movabs $0x7f190cd39e40,%rdi  ;   {metadata(method data for {method} {0x00007f190cb5c1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f19111005ba: addq   $0x1,0x1e8(%rdi)
  0x00007f19111005c2: add    %ecx,%r8d
  0x00007f19111005c5: mov    %rdx,%rsi
  0x00007f19111005c8: mov    %rcx,%rdx
  0x00007f19111005cb: mov    %r8,%rcx           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x00007f19111005ce: nop
  0x00007f19111005cf: callq  0x00007f1911046420  ; OopMap{[56]=Oop off=500}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x00007f19111005d4: mov    0x38(%rsp),%rsi
  0x00007f19111005d9: mov    %rax,%r10
  0x00007f19111005dc: shr    $0x3,%r10
  0x00007f19111005e0: mov    %r10d,0xc(%rsi)
  0x00007f19111005e4: shr    $0x9,%rsi
  0x00007f19111005e8: movabs $0x7f190d1ff000,%rdx
  0x00007f19111005f2: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x00007f19111005f6: add    $0x60,%rsp
  0x00007f19111005fa: pop    %rbp
  0x00007f19111005fb: test   %eax,0x16393aff(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f1911100601: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x00007f1911100602: movabs $0x670b8a5e8,%rdx  ;   {oop(&quot;&quot;)}
  0x00007f191110060c: mov    0xc(%rdx),%edx     ; implicit exception: dispatches to 0x00007f191110073e
  0x00007f191110060f: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)

  0x00007f1911100613: mov    %rdx,%r10
  0x00007f1911100616: shr    $0x3,%r10
  0x00007f191110061a: mov    %r10d,0xc(%rsi)
  0x00007f191110061e: shr    $0x9,%rsi
  0x00007f1911100622: movabs $0x7f190d1ff000,%rdx
  0x00007f191110062c: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x00007f1911100630: add    $0x60,%rsp
  0x00007f1911100634: pop    %rbp
  0x00007f1911100635: test   %eax,0x16393ac5(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191110063b: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x00007f191110063c: nopl   0x0(%rax)
  0x00007f1911100640: jmpq   0x00007f1911100752  ;   {no_reloc}
  0x00007f1911100645: add    %al,(%rax)
  0x00007f1911100647: add    %al,(%rax)
  0x00007f1911100649: add    %ch,%cl
  0x00007f191110064b: or     $0x48000001,%eax   ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x00007f1911100650: mov    %eax,%edx
  0x00007f1911100652: movabs $0x7f190cd39e40,%rsi  ;   {metadata(method data for {method} {0x00007f190cb5c1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110065c: addq   $0x1,0x1d8(%rsi)
  0x00007f1911100664: add    %ecx,%r8d
  0x00007f1911100667: mov    %r8,%rdx
  0x00007f191110066a: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x00007f191110066d: mov    %rax,0x40(%rsp)
  0x00007f1911100672: nop
  0x00007f1911100673: nop
  0x00007f1911100674: nop
  0x00007f1911100675: nop
  0x00007f1911100676: nop
  0x00007f1911100677: callq  0x00007f1911046020  ; OopMap{[64]=Oop off=668}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x00007f191110067c: mov    0x40(%rsp),%rax
  0x00007f1911100681: jmpq   0x00007f19111007e0  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x00007f1911100686: xchg   %ax,%ax
  0x00007f1911100688: jmpq   0x00007f1911100778  ;   {no_reloc}
  0x00007f191110068d: add    %al,(%rax)
  0x00007f191110068f: add    %al,(%rax)
  0x00007f1911100691: add    %ch,%cl
  0x00007f1911100693: jmp    0x00007f1911100695
  0x00007f1911100695: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x00007f1911100697: mov    %rax,%rdx
  0x00007f191110069a: movabs $0x7f190cd39e40,%rsi  ;   {metadata(method data for {method} {0x00007f190cb5c1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f19111006a4: addq   $0x1,0x188(%rsi)
  0x00007f19111006ac: mov    %r8,%rdx
  0x00007f19111006af: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x00007f19111006b2: mov    %rax,0x48(%rsp)
  0x00007f19111006b7: callq  0x00007f1911046020  ; OopMap{[72]=Oop off=732}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x00007f19111006bc: mov    0x48(%rsp),%rax
  0x00007f19111006c1: jmpq   0x00007f19111007e0  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x00007f19111006c6: xchg   %ax,%ax
  0x00007f19111006c8: jmpq   0x00007f191110079e  ;   {no_reloc}
  0x00007f19111006cd: add    %al,(%rax)
  0x00007f19111006cf: add    %al,(%rax)
  0x00007f19111006d1: add    %ch,%cl
  0x00007f19111006d3: roll   (%rax)
  0x00007f19111006d5: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x00007f19111006d7: mov    %rax,%rdx
  0x00007f19111006da: movabs $0x7f190cd39e40,%rsi  ;   {metadata(method data for {method} {0x00007f190cb5c1a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f19111006e4: addq   $0x1,0x138(%rsi)
  0x00007f19111006ec: mov    %rcx,%rdx
  0x00007f19111006ef: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x00007f19111006f2: mov    %rax,0x50(%rsp)
  0x00007f19111006f7: callq  0x00007f1911046020  ; OopMap{[80]=Oop off=796}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x00007f19111006fc: mov    0x50(%rsp),%rax
  0x00007f1911100701: jmpq   0x00007f19111007e0
  0x00007f1911100706: mov    %rdi,0x8(%rsp)
  0x00007f191110070b: movq   $0xffffffffffffffff,(%rsp)
  0x00007f1911100713: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop rdx=Oop off=824}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x00007f1911100718: jmpq   0x00007f191110043e
  0x00007f191110071d: mov    %rdi,0x8(%rsp)
  0x00007f1911100722: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191110072a: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop rdx=Oop off=847}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x00007f191110072f: jmpq   0x00007f1911100485
  0x00007f1911100734: callq  0x00007f191106e6c0  ; OopMap{rsi=Oop rdx=Oop off=857}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x00007f1911100739: callq  0x00007f191106e6c0  ; OopMap{rsi=Oop rdx=Oop off=862}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x00007f191110073e: callq  0x00007f191106e6c0  ; OopMap{rsi=Oop off=867}
                                                ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x00007f1911100743: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007f191110074d: mov    $0xa050f00,%eax
  0x00007f1911100752: callq  0x00007f19110fdaa0  ; OopMap{off=887}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x00007f1911100757: jmpq   0x00007f1911100640
  0x00007f191110075c: mov    %rdx,%rdx
  0x00007f191110075f: callq  0x00007f191106e1a0  ; OopMap{off=900}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x00007f1911100764: jmpq   0x00007f191110064f
  0x00007f1911100769: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007f1911100773: mov    $0xa050f00,%eax
  0x00007f1911100778: callq  0x00007f19110fdaa0  ; OopMap{off=925}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x00007f191110077d: jmpq   0x00007f1911100688
  0x00007f1911100782: mov    %rdx,%rdx
  0x00007f1911100785: callq  0x00007f191106e1a0  ; OopMap{off=938}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x00007f191110078a: jmpq   0x00007f1911100697
  0x00007f191110078f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007f1911100799: mov    $0xa050f00,%eax
  0x00007f191110079e: callq  0x00007f19110fdaa0  ; OopMap{off=963}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x00007f19111007a3: jmpq   0x00007f19111006c8
  0x00007f19111007a8: mov    %rdx,%rdx
  0x00007f19111007ab: callq  0x00007f191106e1a0  ; OopMap{off=976}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x00007f19111007b0: jmpq   0x00007f19111006d7
  0x00007f19111007b5: nop
  0x00007f19111007b6: nop
  0x00007f19111007b7: mov    0x2a8(%r15),%rax
  0x00007f19111007be: movabs $0x0,%r10
  0x00007f19111007c8: mov    %r10,0x2a8(%r15)
  0x00007f19111007cf: movabs $0x0,%r10
  0x00007f19111007d9: mov    %r10,0x2b0(%r15)
  0x00007f19111007e0: add    $0x60,%rsp
  0x00007f19111007e4: pop    %rbp
  0x00007f19111007e5: jmpq   0x00007f191106f220  ;   {runtime_call}
  0x00007f19111007ea: hlt    
  0x00007f19111007eb: hlt    
  0x00007f19111007ec: hlt    
  0x00007f19111007ed: hlt    
  0x00007f19111007ee: hlt    
  0x00007f19111007ef: hlt    
  0x00007f19111007f0: hlt    
  0x00007f19111007f1: hlt    
  0x00007f19111007f2: hlt    
  0x00007f19111007f3: hlt    
  0x00007f19111007f4: hlt    
  0x00007f19111007f5: hlt    
  0x00007f19111007f6: hlt    
  0x00007f19111007f7: hlt    
  0x00007f19111007f8: hlt    
  0x00007f19111007f9: hlt    
  0x00007f19111007fa: hlt    
  0x00007f19111007fb: hlt    
  0x00007f19111007fc: hlt    
  0x00007f19111007fd: hlt    
  0x00007f19111007fe: hlt    
  0x00007f19111007ff: hlt    
[Stub Code]
  0x00007f1911100800: nop                       ;   {no_reloc}
  0x00007f1911100801: nop
  0x00007f1911100802: nop
  0x00007f1911100803: nop
  0x00007f1911100804: nop
  0x00007f1911100805: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191110080f: jmpq   0x00007f191110080f  ;   {runtime_call}
  0x00007f1911100814: nop
  0x00007f1911100815: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191110081f: jmpq   0x00007f191110081f  ;   {runtime_call}
  0x00007f1911100824: nop
  0x00007f1911100825: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191110082f: jmpq   0x00007f191110082f  ;   {runtime_call}
  0x00007f1911100834: nop
  0x00007f1911100835: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191110083f: jmpq   0x00007f191110083f  ;   {runtime_call}
[Exception Handler]
  0x00007f1911100844: callq  0x00007f191106c860  ;   {runtime_call}
  0x00007f1911100849: mov    %rsp,-0x28(%rsp)
  0x00007f191110084e: sub    $0x80,%rsp
  0x00007f1911100855: mov    %rax,0x78(%rsp)
  0x00007f191110085a: mov    %rcx,0x70(%rsp)
  0x00007f191110085f: mov    %rdx,0x68(%rsp)
  0x00007f1911100864: mov    %rbx,0x60(%rsp)
  0x00007f1911100869: mov    %rbp,0x50(%rsp)
  0x00007f191110086e: mov    %rsi,0x48(%rsp)
  0x00007f1911100873: mov    %rdi,0x40(%rsp)
  0x00007f1911100878: mov    %r8,0x38(%rsp)
  0x00007f191110087d: mov    %r9,0x30(%rsp)
  0x00007f1911100882: mov    %r10,0x28(%rsp)
  0x00007f1911100887: mov    %r11,0x20(%rsp)
  0x00007f191110088c: mov    %r12,0x18(%rsp)
  0x00007f1911100891: mov    %r13,0x10(%rsp)
  0x00007f1911100896: mov    %r14,0x8(%rsp)
  0x00007f191110089b: mov    %r15,(%rsp)
  0x00007f191110089f: movabs $0x7f192638cf36,%rdi  ;   {external_word}
  0x00007f19111008a9: movabs $0x7f1911100849,%rsi  ;   {internal_word}
  0x00007f19111008b3: mov    %rsp,%rdx
  0x00007f19111008b6: and    $0xfffffffffffffff0,%rsp
  0x00007f19111008ba: callq  0x00007f19260b8990  ;   {runtime_call}
  0x00007f19111008bf: hlt    
[Deopt Handler Code]
  0x00007f19111008c0: movabs $0x7f19111008c0,%r10  ;   {section_word}
  0x00007f19111008ca: push   %r10
  0x00007f19111008cc: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f19111008d1: hlt    
  0x00007f19111008d2: hlt    
  0x00007f19111008d3: hlt    
  0x00007f19111008d4: hlt    
  0x00007f19111008d5: hlt    
  0x00007f19111008d6: hlt    
  0x00007f19111008d7: hlt    
<nmethod compile_id='1' compiler='C1' level='3' entry='0x00007f19111003e0' size='2704' address='0x00007f1911100210' relocation_offset='296' insts_offset='464' stub_offset='1520' scopes_data_offset='1752' scopes_pcs_offset='2040' dependencies_offset='2664' nul_chk_table_offset='2672' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='256' iicount='256' stamp='0.074'/>
<writer thread='139746009892608'/>
[Loaded java.lang.invoke.MethodHandleStatics$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<task_queued compile_id='4' method='java/lang/String hashCode ()I' bytes='55' count='416' backedge_count='6144' iicount='416' level='3' stamp='0.074' comment='tiered' hot_count='416'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
<writer thread='139745421305600'/>
Decoding compiled method 0x00007f1911108e50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f190cc736b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0xb0]  (sp of caller)
  0x00007f1911109060: mov    %eax,-0x14000(%rsp)
  0x00007f1911109067: push   %rbp
  0x00007f1911109068: sub    $0xa0,%rsp
  0x00007f191110906f: mov    %rsi,%r8
  0x00007f1911109072: mov    %rdx,%r9
  0x00007f1911109075: movabs $0x7f190cd3b130,%rbx  ;   {metadata(method data for {method} {0x00007f190cc736b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f191110907f: mov    0xdc(%rbx),%edx
  0x00007f1911109085: add    $0x8,%edx
  0x00007f1911109088: mov    %edx,0xdc(%rbx)
  0x00007f191110908e: movabs $0x7f190cc736b8,%rbx  ;   {metadata({method} {0x00007f190cc736b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f1911109098: and    $0x1ff8,%edx
  0x00007f191110909e: cmp    $0x0,%edx
  0x00007f19111090a1: je     0x00007f1911109901  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x00007f19111090a7: mov    %rcx,%r11
  0x00007f19111090aa: sub    %r9d,%r11d
  0x00007f19111090ad: cmp    $0x0,%r11d
  0x00007f19111090b1: movabs $0x7f190cd3b130,%rbx  ;   {metadata(method data for {method} {0x00007f190cc736b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f19111090bb: movabs $0x108,%rdx
  0x00007f19111090c5: jge    0x00007f19111090d5
  0x00007f19111090cb: movabs $0x118,%rdx
  0x00007f19111090d5: mov    (%rbx,%rdx,1),%rsi
  0x00007f19111090d9: lea    0x1(%rsi),%rsi
  0x00007f19111090dd: mov    %rsi,(%rbx,%rdx,1)
  0x00007f19111090e1: jl     0x00007f19111092a4  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x00007f19111090e7: mov    %r11,%rbx
  0x00007f19111090ea: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00007f19111090f4: movslq %ebx,%rbx
  0x00007f19111090f7: mov    %rbx,%rdi
  0x00007f19111090fa: cmp    $0xffffff,%rbx
  0x00007f1911109101: ja     0x00007f1911109918
  0x00007f1911109107: movabs $0x17,%rsi
  0x00007f1911109111: lea    (%rsi,%rbx,2),%rsi
  0x00007f1911109115: and    $0xfffffffffffffff8,%rsi
  0x00007f1911109119: mov    0x60(%r15),%rax
  0x00007f191110911d: lea    (%rax,%rsi,1),%rsi
  0x00007f1911109121: cmp    0x70(%r15),%rsi
  0x00007f1911109125: ja     0x00007f1911109918
  0x00007f191110912b: mov    %rsi,0x60(%r15)
  0x00007f191110912f: sub    %rax,%rsi
  0x00007f1911109132: movq   $0x1,(%rax)
  0x00007f1911109139: mov    %rdx,%rcx
  0x00007f191110913c: shr    $0x3,%rcx
  0x00007f1911109140: mov    %ecx,0x8(%rax)
  0x00007f1911109143: mov    %ebx,0xc(%rax)
  0x00007f1911109146: sub    $0x10,%rsi
  0x00007f191110914a: je     0x00007f1911109161
  0x00007f1911109150: xor    %rbx,%rbx
  0x00007f1911109153: shr    $0x3,%rsi
  0x00007f1911109157: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007f191110915c: dec    %rsi
  0x00007f191110915f: jne    0x00007f1911109157  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x00007f1911109161: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x00007f1911109922
  0x00007f1911109165: sub    %r9d,%esi
  0x00007f1911109168: movabs $0x7f190cd3b130,%rdx  ;   {metadata(method data for {method} {0x00007f190cc736b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f1911109172: addq   $0x1,0x208(%rdx)
  0x00007f191110917a: movabs $0x7f190cd21ce8,%rdx  ;   {metadata(method data for {method} {0x00007f190cc4e7a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f1911109184: mov    0xdc(%rdx),%ecx
  0x00007f191110918a: add    $0x8,%ecx
  0x00007f191110918d: mov    %ecx,0xdc(%rdx)
  0x00007f1911109193: movabs $0x7f190cc4e7a8,%rdx  ;   {metadata({method} {0x00007f190cc4e7a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f191110919d: and    $0x7ffff8,%ecx
  0x00007f19111091a3: cmp    $0x0,%ecx
  0x00007f19111091a6: je     0x00007f1911109927
  0x00007f19111091ac: cmp    %r11d,%esi
  0x00007f19111091af: movabs $0x7f190cd21ce8,%rdx  ;   {metadata(method data for {method} {0x00007f190cc4e7a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f19111091b9: movabs $0x108,%rcx
  0x00007f19111091c3: jg     0x00007f19111091d3
  0x00007f19111091c9: movabs $0x118,%rcx
  0x00007f19111091d3: mov    (%rdx,%rcx,1),%rdi
  0x00007f19111091d7: lea    0x1(%rdi),%rdi
  0x00007f19111091db: mov    %rdi,(%rdx,%rcx,1)
  0x00007f19111091df: jg     0x00007f19111091fd  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00007f19111091e5: movabs $0x7f190cd21ce8,%rdx  ;   {metadata(method data for {method} {0x00007f190cc4e7a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f19111091ef: incl   0x128(%rdx)
  0x00007f19111091f5: mov    %rsi,%rdi
  0x00007f19111091f8: jmpq   0x00007f1911109200  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00007f19111091fd: mov    %r11,%rdi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00007f1911109200: movabs $0x7f190cd3b130,%rsi  ;   {metadata(method data for {method} {0x00007f190cc736b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f191110920a: addq   $0x1,0x218(%rsi)
  0x00007f1911109212: mov    %r8,%rsi
  0x00007f1911109215: mov    %r9,%rdx
  0x00007f1911109218: mov    %rax,%rcx
  0x00007f191110921b: mov    $0x0,%r8d
  0x00007f1911109221: mov    %rdi,%r9
  0x00007f1911109224: mov    %rax,0x70(%rsp)
  0x00007f1911109229: test   %edx,%edx
  0x00007f191110922b: jl     0x00007f191110993e
  0x00007f1911109231: lea    (%rdx,%r9,1),%rdi
  0x00007f1911109235: cmp    0xc(%rsi),%edi
  0x00007f1911109238: ja     0x00007f191110993e
  0x00007f191110923e: lea    (%r8,%r9,1),%rdi
  0x00007f1911109242: cmp    0xc(%rcx),%edi
  0x00007f1911109245: ja     0x00007f191110993e
  0x00007f191110924b: test   %r9d,%r9d
  0x00007f191110924e: jl     0x00007f191110993e
  0x00007f1911109254: je     0x00007f1911109290
  0x00007f191110925a: movslq %edx,%rdx
  0x00007f191110925d: movslq %r8d,%r8
  0x00007f1911109260: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007f1911109265: lea    0x10(%rcx,%r8,2),%rsi
  0x00007f191110926a: mov    %r9,%rdx
  0x00007f191110926d: test   $0xf,%esp
  0x00007f1911109273: je     0x00007f191110928b
  0x00007f1911109279: sub    $0x8,%rsp
  0x00007f191110927d: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007f1911109282: add    $0x8,%rsp
  0x00007f1911109286: jmpq   0x00007f1911109290
  0x00007f191110928b: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x00007f1911109290: mov    0x70(%rsp),%rax
  0x00007f1911109295: add    $0xa0,%rsp
  0x00007f191110929c: pop    %rbp
  0x00007f191110929d: test   %eax,0x1638ae5d(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f19111092a3: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x00007f19111092a4: mov    %ecx,0x80(%rsp)
  0x00007f19111092ab: nopl   0x0(%rax,%rax,1)
  0x00007f19111092b0: jmpq   0x00007f1911109958  ;   {no_reloc}
  0x00007f19111092b5: add    %al,(%rax)
  0x00007f19111092b7: add    %al,(%rax)
  0x00007f19111092b9: add    %cl,-0x75(%rcx)
  0x00007f19111092bc: rex.RXB (bad) 
  0x00007f19111092be: lea    0x20(%rax),%rdi
  0x00007f19111092c2: cmp    0x70(%r15),%rdi
  0x00007f19111092c6: ja     0x00007f1911109962
  0x00007f19111092cc: mov    %rdi,0x60(%r15)
  0x00007f19111092d0: mov    0xa8(%rdx),%rcx
  0x00007f19111092d7: mov    %rcx,(%rax)
  0x00007f19111092da: mov    %rdx,%rcx
  0x00007f19111092dd: shr    $0x3,%rcx
  0x00007f19111092e1: mov    %ecx,0x8(%rax)
  0x00007f19111092e4: xor    %rcx,%rcx
  0x00007f19111092e7: mov    %ecx,0xc(%rax)
  0x00007f19111092ea: xor    %rcx,%rcx
  0x00007f19111092ed: mov    %rcx,0x10(%rax)
  0x00007f19111092f1: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x00007f19111092f5: data16 xchg %ax,%ax
  0x00007f19111092f8: jmpq   0x00007f191110997e  ;   {no_reloc}
  0x00007f19111092fd: add    %al,(%rax)
  0x00007f19111092ff: add    %al,(%rax)
  0x00007f1911109301: add    %cl,-0x77(%rax)
  0x00007f1911109304: test   %ah,(%rax,%rcx,4)
  0x00007f1911109307: add    %al,(%rax)
  0x00007f1911109309: add    %cl,-0x75(%rcx)
  0x00007f191110930c: rex.RXB (bad) 
  0x00007f191110930e: lea    0x18(%rax),%rdi
  0x00007f1911109312: cmp    0x70(%r15),%rdi
  0x00007f1911109316: ja     0x00007f1911109988
  0x00007f191110931c: mov    %rdi,0x60(%r15)
  0x00007f1911109320: mov    0xa8(%rdx),%rcx
  0x00007f1911109327: mov    %rcx,(%rax)
  0x00007f191110932a: mov    %rdx,%rcx
  0x00007f191110932d: shr    $0x3,%rcx
  0x00007f1911109331: mov    %ecx,0x8(%rax)
  0x00007f1911109334: xor    %rcx,%rcx
  0x00007f1911109337: mov    %ecx,0xc(%rax)
  0x00007f191110933a: xor    %rcx,%rcx
  0x00007f191110933d: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x00007f1911109341: mov    %rax,%rbx
  0x00007f1911109344: movabs $0x7f190cd3b130,%rdx  ;   {metadata(method data for {method} {0x00007f190cc736b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f191110934e: addq   $0x1,0x128(%rdx)
  0x00007f1911109356: movabs $0x7f190cd3e4e0,%rbx  ;   {metadata(method data for {method} {0x00007f190cbd10f0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f1911109360: mov    0xdc(%rbx),%edx
  0x00007f1911109366: add    $0x8,%edx
  0x00007f1911109369: mov    %edx,0xdc(%rbx)
  0x00007f191110936f: movabs $0x7f190cbd10f0,%rbx  ;   {metadata({method} {0x00007f190cbd10f0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f1911109379: and    $0x7ffff8,%edx
  0x00007f191110937f: cmp    $0x0,%edx
  0x00007f1911109382: je     0x00007f1911109995
  0x00007f1911109388: mov    %rax,%rbx
  0x00007f191110938b: movabs $0x7f190cd3e4e0,%rdx  ;   {metadata(method data for {method} {0x00007f190cbd10f0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f1911109395: addq   $0x1,0x108(%rdx)
  0x00007f191110939d: movabs $0x7f190cd3e740,%rbx  ;   {metadata(method data for {method} {0x00007f190cbcd420} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f19111093a7: mov    0xdc(%rbx),%edx
  0x00007f19111093ad: add    $0x8,%edx
  0x00007f19111093b0: mov    %edx,0xdc(%rbx)
  0x00007f19111093b6: movabs $0x7f190cbcd420,%rbx  ;   {metadata({method} {0x00007f190cbcd420} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f19111093c0: and    $0x7ffff8,%edx
  0x00007f19111093c6: cmp    $0x0,%edx
  0x00007f19111093c9: je     0x00007f19111099ac
  0x00007f19111093cf: mov    %rax,%rbx
  0x00007f19111093d2: movabs $0x7f190cd3e740,%rdx  ;   {metadata(method data for {method} {0x00007f190cbcd420} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f19111093dc: addq   $0x1,0x108(%rdx)
  0x00007f19111093e4: movabs $0x7f190cccf108,%rbx  ;   {metadata(method data for {method} {0x00007f190cb59480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f19111093ee: mov    0xdc(%rbx),%edx
  0x00007f19111093f4: add    $0x8,%edx
  0x00007f19111093f7: mov    %edx,0xdc(%rbx)
  0x00007f19111093fd: movabs $0x7f190cb59480,%rbx  ;   {metadata({method} {0x00007f190cb59480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f1911109407: and    $0x7ffff8,%edx
  0x00007f191110940d: cmp    $0x0,%edx
  0x00007f1911109410: je     0x00007f19111099c3
  0x00007f1911109416: mov    $0x10,%ebx
  0x00007f191110941b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00007f1911109425: mov    %rax,%r13
  0x00007f1911109428: movslq %ebx,%rbx
  0x00007f191110942b: mov    %rbx,%rdi
  0x00007f191110942e: cmp    $0xffffff,%rbx
  0x00007f1911109435: ja     0x00007f19111099da
  0x00007f191110943b: movabs $0x17,%rsi
  0x00007f1911109445: lea    (%rsi,%rbx,2),%rsi
  0x00007f1911109449: and    $0xfffffffffffffff8,%rsi
  0x00007f191110944d: mov    0x60(%r15),%rax
  0x00007f1911109451: lea    (%rax,%rsi,1),%rsi
  0x00007f1911109455: cmp    0x70(%r15),%rsi
  0x00007f1911109459: ja     0x00007f19111099da
  0x00007f191110945f: mov    %rsi,0x60(%r15)
  0x00007f1911109463: sub    %rax,%rsi
  0x00007f1911109466: movq   $0x1,(%rax)
  0x00007f191110946d: mov    %rdx,%rcx
  0x00007f1911109470: shr    $0x3,%rcx
  0x00007f1911109474: mov    %ecx,0x8(%rax)
  0x00007f1911109477: mov    %ebx,0xc(%rax)
  0x00007f191110947a: sub    $0x10,%rsi
  0x00007f191110947e: je     0x00007f1911109495
  0x00007f1911109484: xor    %rbx,%rbx
  0x00007f1911109487: shr    $0x3,%rsi
  0x00007f191110948b: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007f1911109490: dec    %rsi
  0x00007f1911109493: jne    0x00007f191110948b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x00007f1911109495: mov    %rax,%r10
  0x00007f1911109498: shr    $0x3,%r10
  0x00007f191110949c: mov    %r10d,0x10(%r13)
  0x00007f19111094a0: mov    %r13,%rax
  0x00007f19111094a3: shr    $0x9,%rax
  0x00007f19111094a7: movabs $0x7f190d1ff000,%rdx
  0x00007f19111094b1: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x00007f19111094b5: mov    %r13,%rax
  0x00007f19111094b8: movabs $0x7f190cd3b130,%rdx  ;   {metadata(method data for {method} {0x00007f190cc736b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f19111094c2: mov    0x8(%rax),%eax
  0x00007f19111094c5: shl    $0x3,%rax
  0x00007f19111094c9: cmp    0x140(%rdx),%rax
  0x00007f19111094d0: jne    0x00007f19111094df
  0x00007f19111094d2: addq   $0x1,0x148(%rdx)
  0x00007f19111094da: jmpq   0x00007f1911109545
  0x00007f19111094df: cmp    0x150(%rdx),%rax
  0x00007f19111094e6: jne    0x00007f19111094f5
  0x00007f19111094e8: addq   $0x1,0x158(%rdx)
  0x00007f19111094f0: jmpq   0x00007f1911109545
  0x00007f19111094f5: cmpq   $0x0,0x140(%rdx)
  0x00007f1911109500: jne    0x00007f1911109519
  0x00007f1911109502: mov    %rax,0x140(%rdx)
  0x00007f1911109509: movq   $0x1,0x148(%rdx)
  0x00007f1911109514: jmpq   0x00007f1911109545
  0x00007f1911109519: cmpq   $0x0,0x150(%rdx)
  0x00007f1911109524: jne    0x00007f191110953d
  0x00007f1911109526: mov    %rax,0x150(%rdx)
  0x00007f191110952d: movq   $0x1,0x158(%rdx)
  0x00007f1911109538: jmpq   0x00007f1911109545
  0x00007f191110953d: addq   $0x1,0x138(%rdx)
  0x00007f1911109545: movabs $0x7f190cd3e8f8,%rdx  ;   {metadata(method data for {method} {0x00007f190cbd18c8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f191110954f: mov    0xdc(%rdx),%esi
  0x00007f1911109555: add    $0x8,%esi
  0x00007f1911109558: mov    %esi,0xdc(%rdx)
  0x00007f191110955e: movabs $0x7f190cbd18c8,%rdx  ;   {metadata({method} {0x00007f190cbd18c8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f1911109568: and    $0x7ffff8,%esi
  0x00007f191110956e: cmp    $0x0,%esi
  0x00007f1911109571: je     0x00007f19111099e4
  0x00007f1911109577: mov    %r13,%rax
  0x00007f191110957a: movabs $0x7f190cd3e8f8,%rdx  ;   {metadata(method data for {method} {0x00007f190cbd18c8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f1911109584: addq   $0x1,0x108(%rdx)
  0x00007f191110958c: mov    %r9,%rdx
  0x00007f191110958f: mov    %r13,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x00007f1911109592: mov    %r13,0x78(%rsp)
  0x00007f1911109597: callq  0x00007f1911046020  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007f191110959c: mov    0x78(%rsp),%rax
  0x00007f19111095a1: movabs $0x7f190cd3b130,%rdx  ;   {metadata(method data for {method} {0x00007f190cc736b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f19111095ab: mov    0x8(%rax),%eax
  0x00007f19111095ae: shl    $0x3,%rax
  0x00007f19111095b2: cmp    0x170(%rdx),%rax
  0x00007f19111095b9: jne    0x00007f19111095c8
  0x00007f19111095bb: addq   $0x1,0x178(%rdx)
  0x00007f19111095c3: jmpq   0x00007f191110962e
  0x00007f19111095c8: cmp    0x180(%rdx),%rax
  0x00007f19111095cf: jne    0x00007f19111095de
  0x00007f19111095d1: addq   $0x1,0x188(%rdx)
  0x00007f19111095d9: jmpq   0x00007f191110962e
  0x00007f19111095de: cmpq   $0x0,0x170(%rdx)
  0x00007f19111095e9: jne    0x00007f1911109602
  0x00007f19111095eb: mov    %rax,0x170(%rdx)
  0x00007f19111095f2: movq   $0x1,0x178(%rdx)
  0x00007f19111095fd: jmpq   0x00007f191110962e
  0x00007f1911109602: cmpq   $0x0,0x180(%rdx)
  0x00007f191110960d: jne    0x00007f1911109626
  0x00007f191110960f: mov    %rax,0x180(%rdx)
  0x00007f1911109616: movq   $0x1,0x188(%rdx)
  0x00007f1911109621: jmpq   0x00007f191110962e
  0x00007f1911109626: addq   $0x1,0x168(%rdx)
  0x00007f191110962e: movabs $0x7f190cd3ecc8,%rdx  ;   {metadata(method data for {method} {0x00007f190cbd1408} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f1911109638: mov    0xdc(%rdx),%esi
  0x00007f191110963e: add    $0x8,%esi
  0x00007f1911109641: mov    %esi,0xdc(%rdx)
  0x00007f1911109647: movabs $0x7f190cbd1408,%rdx  ;   {metadata({method} {0x00007f190cbd1408} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f1911109651: and    $0x7ffff8,%esi
  0x00007f1911109657: cmp    $0x0,%esi
  0x00007f191110965a: je     0x00007f19111099fb
  0x00007f1911109660: mov    0x78(%rsp),%rax
  0x00007f1911109665: movabs $0x7f190cd3ecc8,%rdx  ;   {metadata(method data for {method} {0x00007f190cbd1408} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f191110966f: addq   $0x1,0x108(%rdx)
  0x00007f1911109677: movabs $0x67108a3e0,%rdx  ;   {oop(&quot; &gt; &quot;)}
  0x00007f1911109681: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x00007f1911109686: nop
  0x00007f1911109687: callq  0x00007f1911046020  ; OopMap{[120]=Oop [136]=Oop off=1580}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007f191110968c: mov    0x78(%rsp),%rax
  0x00007f1911109691: movabs $0x7f190cd3b130,%rdx  ;   {metadata(method data for {method} {0x00007f190cc736b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f191110969b: mov    0x8(%rax),%eax
  0x00007f191110969e: shl    $0x3,%rax
  0x00007f19111096a2: cmp    0x1a0(%rdx),%rax
  0x00007f19111096a9: jne    0x00007f19111096b8
  0x00007f19111096ab: addq   $0x1,0x1a8(%rdx)
  0x00007f19111096b3: jmpq   0x00007f191110971e
  0x00007f19111096b8: cmp    0x1b0(%rdx),%rax
  0x00007f19111096bf: jne    0x00007f19111096ce
  0x00007f19111096c1: addq   $0x1,0x1b8(%rdx)
  0x00007f19111096c9: jmpq   0x00007f191110971e
  0x00007f19111096ce: cmpq   $0x0,0x1a0(%rdx)
  0x00007f19111096d9: jne    0x00007f19111096f2
  0x00007f19111096db: mov    %rax,0x1a0(%rdx)
  0x00007f19111096e2: movq   $0x1,0x1a8(%rdx)
  0x00007f19111096ed: jmpq   0x00007f191110971e
  0x00007f19111096f2: cmpq   $0x0,0x1b0(%rdx)
  0x00007f19111096fd: jne    0x00007f1911109716
  0x00007f19111096ff: mov    %rax,0x1b0(%rdx)
  0x00007f1911109706: movq   $0x1,0x1b8(%rdx)
  0x00007f1911109711: jmpq   0x00007f191110971e
  0x00007f1911109716: addq   $0x1,0x198(%rdx)
  0x00007f191110971e: movabs $0x7f190cd3e8f8,%rdx  ;   {metadata(method data for {method} {0x00007f190cbd18c8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f1911109728: mov    0xdc(%rdx),%esi
  0x00007f191110972e: add    $0x8,%esi
  0x00007f1911109731: mov    %esi,0xdc(%rdx)
  0x00007f1911109737: movabs $0x7f190cbd18c8,%rdx  ;   {metadata({method} {0x00007f190cbd18c8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f1911109741: and    $0x7ffff8,%esi
  0x00007f1911109747: cmp    $0x0,%esi
  0x00007f191110974a: je     0x00007f1911109a12
  0x00007f1911109750: mov    0x78(%rsp),%rax
  0x00007f1911109755: movabs $0x7f190cd3e8f8,%rdx  ;   {metadata(method data for {method} {0x00007f190cbd18c8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f191110975f: addq   $0x1,0x108(%rdx)
  0x00007f1911109767: mov    0x80(%rsp),%edx
  0x00007f191110976e: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x00007f1911109773: nop
  0x00007f1911109774: nop
  0x00007f1911109775: nop
  0x00007f1911109776: nop
  0x00007f1911109777: callq  0x00007f1911046020  ; OopMap{[120]=Oop [136]=Oop off=1820}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007f191110977c: mov    0x78(%rsp),%rax
  0x00007f1911109781: movabs $0x7f190cd3b130,%rdx  ;   {metadata(method data for {method} {0x00007f190cc736b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f191110978b: mov    0x8(%rax),%eax
  0x00007f191110978e: shl    $0x3,%rax
  0x00007f1911109792: cmp    0x1d0(%rdx),%rax
  0x00007f1911109799: jne    0x00007f19111097a8
  0x00007f191110979b: addq   $0x1,0x1d8(%rdx)
  0x00007f19111097a3: jmpq   0x00007f191110980e
  0x00007f19111097a8: cmp    0x1e0(%rdx),%rax
  0x00007f19111097af: jne    0x00007f19111097be
  0x00007f19111097b1: addq   $0x1,0x1e8(%rdx)
  0x00007f19111097b9: jmpq   0x00007f191110980e
  0x00007f19111097be: cmpq   $0x0,0x1d0(%rdx)
  0x00007f19111097c9: jne    0x00007f19111097e2
  0x00007f19111097cb: mov    %rax,0x1d0(%rdx)
  0x00007f19111097d2: movq   $0x1,0x1d8(%rdx)
  0x00007f19111097dd: jmpq   0x00007f191110980e
  0x00007f19111097e2: cmpq   $0x0,0x1e0(%rdx)
  0x00007f19111097ed: jne    0x00007f1911109806
  0x00007f19111097ef: mov    %rax,0x1e0(%rdx)
  0x00007f19111097f6: movq   $0x1,0x1e8(%rdx)
  0x00007f1911109801: jmpq   0x00007f191110980e
  0x00007f1911109806: addq   $0x1,0x1c8(%rdx)
  0x00007f191110980e: movabs $0x7f190cd40168,%rdx  ;   {metadata(method data for {method} {0x00007f190cbd27b8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f1911109818: mov    0xdc(%rdx),%esi
  0x00007f191110981e: add    $0x8,%esi
  0x00007f1911109821: mov    %esi,0xdc(%rdx)
  0x00007f1911109827: movabs $0x7f190cbd27b8,%rdx  ;   {metadata({method} {0x00007f190cbd27b8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f1911109831: and    $0x7ffff8,%esi
  0x00007f1911109837: cmp    $0x0,%esi
  0x00007f191110983a: je     0x00007f1911109a29
  0x00007f1911109840: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007f191110984a: mov    0x60(%r15),%rax
  0x00007f191110984e: lea    0x18(%rax),%rdi
  0x00007f1911109852: cmp    0x70(%r15),%rdi
  0x00007f1911109856: ja     0x00007f1911109a40
  0x00007f191110985c: mov    %rdi,0x60(%r15)
  0x00007f1911109860: mov    0xa8(%rdx),%rcx
  0x00007f1911109867: mov    %rcx,(%rax)
  0x00007f191110986a: mov    %rdx,%rcx
  0x00007f191110986d: shr    $0x3,%rcx
  0x00007f1911109871: mov    %ecx,0x8(%rax)
  0x00007f1911109874: xor    %rcx,%rcx
  0x00007f1911109877: mov    %ecx,0xc(%rax)
  0x00007f191110987a: xor    %rcx,%rcx
  0x00007f191110987d: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007f1911109881: mov    0x78(%rsp),%rdx
  0x00007f1911109886: mov    0x10(%rdx),%ecx
  0x00007f1911109889: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007f191110988d: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007f1911109891: mov    %rax,%rdx
  0x00007f1911109894: movabs $0x7f190cd40168,%rsi  ;   {metadata(method data for {method} {0x00007f190cbd27b8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007f191110989e: addq   $0x1,0x108(%rsi)
  0x00007f19111098a6: mov    %rcx,%rdx
  0x00007f19111098a9: mov    $0x0,%ecx
  0x00007f19111098ae: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007f19111098b1: mov    %rax,0x90(%rsp)
  0x00007f19111098b9: nop
  0x00007f19111098ba: nop
  0x00007f19111098bb: nop
  0x00007f19111098bc: nop
  0x00007f19111098bd: nop
  0x00007f19111098be: nop
  0x00007f19111098bf: callq  0x00007f1911046020  ; OopMap{[136]=Oop [144]=Oop off=2148}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007f19111098c4: mov    0x88(%rsp),%rax
  0x00007f19111098cc: movabs $0x7f190cd3b130,%rdx  ;   {metadata(method data for {method} {0x00007f190cc736b8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f19111098d6: addq   $0x1,0x1f8(%rdx)
  0x00007f19111098de: mov    0x90(%rsp),%rdx
  0x00007f19111098e6: mov    0x88(%rsp),%rsi    ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x00007f19111098ee: nop
  0x00007f19111098ef: callq  0x00007f1911046020  ; OopMap{[136]=Oop off=2196}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007f19111098f4: mov    0x88(%rsp),%rax
  0x00007f19111098fc: jmpq   0x00007f1911109a78
  0x00007f1911109901: mov    %rbx,0x8(%rsp)
  0x00007f1911109906: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191110990e: callq  0x00007f19110feaa0  ; OopMap{r8=Oop off=2227}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x00007f1911109913: jmpq   0x00007f19111090a7
  0x00007f1911109918: callq  0x00007f191106d4a0  ; OopMap{r8=Oop off=2237}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x00007f191110991d: jmpq   0x00007f1911109161
  0x00007f1911109922: callq  0x00007f191106e6c0  ; OopMap{r8=Oop rax=Oop off=2247}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x00007f1911109927: mov    %rdx,0x8(%rsp)
  0x00007f191110992c: movq   $0xffffffffffffffff,(%rsp)
  0x00007f1911109934: callq  0x00007f19110feaa0  ; OopMap{r8=Oop rax=Oop off=2265}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x00007f1911109939: jmpq   0x00007f19111091ac
  0x00007f191110993e: nop
  0x00007f191110993f: callq  0x00007f1911046420  ; OopMap{[112]=Oop off=2276}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x00007f1911109944: jmpq   0x00007f1911109290
  0x00007f1911109949: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007f1911109953: mov    $0xa050f00,%eax
  0x00007f1911109958: callq  0x00007f19110fdaa0  ; OopMap{off=2301}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x00007f191110995d: jmpq   0x00007f19111092b0
  0x00007f1911109962: mov    %rdx,%rdx
  0x00007f1911109965: callq  0x00007f191106dda0  ; OopMap{off=2314}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x00007f191110996a: jmpq   0x00007f19111092f5
  0x00007f191110996f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007f1911109979: mov    $0xa050f00,%eax
  0x00007f191110997e: callq  0x00007f19110fdaa0  ; OopMap{rax=Oop off=2339}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x00007f1911109983: jmpq   0x00007f19111092f8
  0x00007f1911109988: mov    %rdx,%rdx
  0x00007f191110998b: callq  0x00007f191106dda0  ; OopMap{[136]=Oop off=2352}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x00007f1911109990: jmpq   0x00007f1911109341
  0x00007f1911109995: mov    %rbx,0x8(%rsp)
  0x00007f191110999a: movq   $0xffffffffffffffff,(%rsp)
  0x00007f19111099a2: callq  0x00007f19110feaa0  ; OopMap{[136]=Oop rax=Oop off=2375}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007f19111099a7: jmpq   0x00007f1911109388
  0x00007f19111099ac: mov    %rbx,0x8(%rsp)
  0x00007f19111099b1: movq   $0xffffffffffffffff,(%rsp)
  0x00007f19111099b9: callq  0x00007f19110feaa0  ; OopMap{[136]=Oop rax=Oop off=2398}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007f19111099be: jmpq   0x00007f19111093cf
  0x00007f19111099c3: mov    %rbx,0x8(%rsp)
  0x00007f19111099c8: movq   $0xffffffffffffffff,(%rsp)
  0x00007f19111099d0: callq  0x00007f19110feaa0  ; OopMap{[136]=Oop rax=Oop off=2421}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007f19111099d5: jmpq   0x00007f1911109416
  0x00007f19111099da: callq  0x00007f191106d4a0  ; OopMap{[136]=Oop r13=Oop off=2431}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007f19111099df: jmpq   0x00007f1911109495
  0x00007f19111099e4: mov    %rdx,0x8(%rsp)
  0x00007f19111099e9: movq   $0xffffffffffffffff,(%rsp)
  0x00007f19111099f1: callq  0x00007f19110feaa0  ; OopMap{[136]=Oop r13=Oop off=2454}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x00007f19111099f6: jmpq   0x00007f1911109577
  0x00007f19111099fb: mov    %rdx,0x8(%rsp)
  0x00007f1911109a00: movq   $0xffffffffffffffff,(%rsp)
  0x00007f1911109a08: callq  0x00007f19110feaa0  ; OopMap{[120]=Oop [136]=Oop off=2477}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x00007f1911109a0d: jmpq   0x00007f1911109660
  0x00007f1911109a12: mov    %rdx,0x8(%rsp)
  0x00007f1911109a17: movq   $0xffffffffffffffff,(%rsp)
  0x00007f1911109a1f: callq  0x00007f19110feaa0  ; OopMap{[120]=Oop [136]=Oop off=2500}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x00007f1911109a24: jmpq   0x00007f1911109750
  0x00007f1911109a29: mov    %rdx,0x8(%rsp)
  0x00007f1911109a2e: movq   $0xffffffffffffffff,(%rsp)
  0x00007f1911109a36: callq  0x00007f19110feaa0  ; OopMap{[120]=Oop [136]=Oop off=2523}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x00007f1911109a3b: jmpq   0x00007f1911109840
  0x00007f1911109a40: mov    %rdx,%rdx
  0x00007f1911109a43: callq  0x00007f191106dda0  ; OopMap{[120]=Oop [136]=Oop off=2536}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x00007f1911109a48: jmpq   0x00007f1911109881
  0x00007f1911109a4d: nop
  0x00007f1911109a4e: nop
  0x00007f1911109a4f: mov    0x2a8(%r15),%rax
  0x00007f1911109a56: movabs $0x0,%r10
  0x00007f1911109a60: mov    %r10,0x2a8(%r15)
  0x00007f1911109a67: movabs $0x0,%r10
  0x00007f1911109a71: mov    %r10,0x2b0(%r15)
  0x00007f1911109a78: add    $0xa0,%rsp
  0x00007f1911109a7f: pop    %rbp
  0x00007f1911109a80: jmpq   0x00007f191106f220  ;   {runtime_call}
  0x00007f1911109a85: hlt    
  0x00007f1911109a86: hlt    
  0x00007f1911109a87: hlt    
  0x00007f1911109a88: hlt    
  0x00007f1911109a89: hlt    
  0x00007f1911109a8a: hlt    
  0x00007f1911109a8b: hlt    
  0x00007f1911109a8c: hlt    
  0x00007f1911109a8d: hlt    
  0x00007f1911109a8e: hlt    
  0x00007f1911109a8f: hlt    
  0x00007f1911109a90: hlt    
  0x00007f1911109a91: hlt    
  0x00007f1911109a92: hlt    
  0x00007f1911109a93: hlt    
  0x00007f1911109a94: hlt    
  0x00007f1911109a95: hlt    
  0x00007f1911109a96: hlt    
  0x00007f1911109a97: hlt    
  0x00007f1911109a98: hlt    
  0x00007f1911109a99: hlt    
  0x00007f1911109a9a: hlt    
  0x00007f1911109a9b: hlt    
  0x00007f1911109a9c: hlt    
  0x00007f1911109a9d: hlt    
  0x00007f1911109a9e: hlt    
  0x00007f1911109a9f: hlt    
[Stub Code]
  0x00007f1911109aa0: nop                       ;   {no_reloc}
  0x00007f1911109aa1: nop
  0x00007f1911109aa2: nop
  0x00007f1911109aa3: nop
  0x00007f1911109aa4: nop
  0x00007f1911109aa5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f1911109aaf: jmpq   0x00007f1911109aaf  ;   {runtime_call}
  0x00007f1911109ab4: nop
  0x00007f1911109ab5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f1911109abf: jmpq   0x00007f1911109abf  ;   {runtime_call}
  0x00007f1911109ac4: nop
  0x00007f1911109ac5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f1911109acf: jmpq   0x00007f1911109acf  ;   {runtime_call}
  0x00007f1911109ad4: nop
  0x00007f1911109ad5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f1911109adf: jmpq   0x00007f1911109adf  ;   {runtime_call}
  0x00007f1911109ae4: nop
  0x00007f1911109ae5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f1911109aef: jmpq   0x00007f1911109aef  ;   {runtime_call}
  0x00007f1911109af4: nop
  0x00007f1911109af5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f1911109aff: jmpq   0x00007f1911109aff  ;   {runtime_call}
[Exception Handler]
  0x00007f1911109b04: callq  0x00007f191106c860  ;   {runtime_call}
  0x00007f1911109b09: mov    %rsp,-0x28(%rsp)
  0x00007f1911109b0e: sub    $0x80,%rsp
  0x00007f1911109b15: mov    %rax,0x78(%rsp)
  0x00007f1911109b1a: mov    %rcx,0x70(%rsp)
  0x00007f1911109b1f: mov    %rdx,0x68(%rsp)
  0x00007f1911109b24: mov    %rbx,0x60(%rsp)
  0x00007f1911109b29: mov    %rbp,0x50(%rsp)
  0x00007f1911109b2e: mov    %rsi,0x48(%rsp)
  0x00007f1911109b33: mov    %rdi,0x40(%rsp)
  0x00007f1911109b38: mov    %r8,0x38(%rsp)
  0x00007f1911109b3d: mov    %r9,0x30(%rsp)
  0x00007f1911109b42: mov    %r10,0x28(%rsp)
  0x00007f1911109b47: mov    %r11,0x20(%rsp)
  0x00007f1911109b4c: mov    %r12,0x18(%rsp)
  0x00007f1911109b51: mov    %r13,0x10(%rsp)
  0x00007f1911109b56: mov    %r14,0x8(%rsp)
  0x00007f1911109b5b: mov    %r15,(%rsp)
  0x00007f1911109b5f: movabs $0x7f192638cf36,%rdi  ;   {external_word}
  0x00007f1911109b69: movabs $0x7f1911109b09,%rsi  ;   {internal_word}
  0x00007f1911109b73: mov    %rsp,%rdx
  0x00007f1911109b76: and    $0xfffffffffffffff0,%rsp
  0x00007f1911109b7a: callq  0x00007f19260b8990  ;   {runtime_call}
  0x00007f1911109b7f: hlt    
[Deopt Handler Code]
  0x00007f1911109b80: movabs $0x7f1911109b80,%r10  ;   {section_word}
  0x00007f1911109b8a: push   %r10
  0x00007f1911109b8c: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f1911109b91: hlt    
  0x00007f1911109b92: hlt    
  0x00007f1911109b93: hlt    
  0x00007f1911109b94: hlt    
  0x00007f1911109b95: hlt    
  0x00007f1911109b96: hlt    
  0x00007f1911109b97: hlt    
<nmethod compile_id='2' compiler='C1' level='3' entry='0x00007f1911109060' size='4856' address='0x00007f1911108e50' relocation_offset='296' insts_offset='528' stub_offset='3152' scopes_data_offset='3472' scopes_pcs_offset='4096' dependencies_offset='4832' nul_chk_table_offset='4840' oops_offset='3400' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='256' iicount='256' stamp='0.080'/>
<writer thread='139746009892608'/>
<task_queued compile_id='5' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='384' backedge_count='1316' iicount='384' level='3' stamp='0.080' comment='tiered' hot_count='384'/>
[Loaded sun.misc.PostVMInitHook from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='139745421305600'/>
Decoding compiled method 0x00007f191110a190:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007f190cb5e000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
<writer thread='139746009892608'/>
[Loaded java.util.concurrent.atomic.AtomicBoolean from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='139745421305600'/>
  0x00007f191110a300: mov    0x8(%rsi),%r10d
  0x00007f191110a304: shl    $0x3,%r10
  0x00007f191110a308: cmp    %rax,%r10
  0x00007f191110a30b: jne    0x00007f1911045e20  ;   {runtime_call}
  0x00007f191110a311: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f191110a31c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f191110a320: mov    %eax,-0x14000(%rsp)
  0x00007f191110a327: push   %rbp
  0x00007f191110a328: sub    $0x30,%rsp
  0x00007f191110a32c: movabs $0x7f190cd21b50,%rax  ;   {metadata(method data for {method} {0x00007f190cb5e000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110a336: mov    0xdc(%rax),%edi
  0x00007f191110a33c: add    $0x8,%edi
  0x00007f191110a33f: mov    %edi,0xdc(%rax)
  0x00007f191110a345: movabs $0x7f190cb5e000,%rax  ;   {metadata({method} {0x00007f190cb5e000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110a34f: and    $0x1ff8,%edi
  0x00007f191110a355: cmp    $0x0,%edi
  0x00007f191110a358: je     0x00007f191110a491  ;*aload_0
                                                ; - java.lang.String::hashCode@0 (line 1466)

  0x00007f191110a35e: mov    0x10(%rsi),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x00007f191110a361: cmp    $0x0,%eax
  0x00007f191110a364: movabs $0x7f190cd21b50,%rdi  ;   {metadata(method data for {method} {0x00007f190cb5e000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110a36e: movabs $0x108,%rbx
  0x00007f191110a378: jne    0x00007f191110a388
  0x00007f191110a37e: movabs $0x118,%rbx
  0x00007f191110a388: mov    (%rdi,%rbx,1),%rdx
  0x00007f191110a38c: lea    0x1(%rdx),%rdx
  0x00007f191110a390: mov    %rdx,(%rdi,%rbx,1)
  0x00007f191110a394: jne    0x00007f191110a485  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x00007f191110a39a: mov    0xc(%rsi),%edi
  0x00007f191110a39d: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x00007f191110a3a1: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x00007f191110a4a8
  0x00007f191110a3a4: cmp    $0x0,%ebx
  0x00007f191110a3a7: movabs $0x7f190cd21b50,%rdx  ;   {metadata(method data for {method} {0x00007f190cb5e000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110a3b1: movabs $0x128,%rcx
  0x00007f191110a3bb: jle    0x00007f191110a3cb
  0x00007f191110a3c1: movabs $0x138,%rcx
  0x00007f191110a3cb: mov    (%rdx,%rcx,1),%r8
  0x00007f191110a3cf: lea    0x1(%r8),%r8
  0x00007f191110a3d3: mov    %r8,(%rdx,%rcx,1)
  0x00007f191110a3d7: jle    0x00007f191110a485  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x00007f191110a3dd: mov    $0x0,%edx
  0x00007f191110a3e2: jmpq   0x00007f191110a44a  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x00007f191110a3e7: nop
  0x00007f191110a3e8: movslq %edx,%rcx
  0x00007f191110a3eb: movzwl 0x10(%rdi,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x00007f191110a3f0: mov    %rax,%r8
  0x00007f191110a3f3: shl    $0x5,%eax
  0x00007f191110a3f6: sub    %r8d,%eax
  0x00007f191110a3f9: add    %ecx,%eax
  0x00007f191110a3fb: inc    %edx
  0x00007f191110a3fd: movabs $0x7f190cd21b50,%rcx  ;   {metadata(method data for {method} {0x00007f190cb5e000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110a407: mov    0xe0(%rcx),%r8d
  0x00007f191110a40e: add    $0x8,%r8d
  0x00007f191110a412: mov    %r8d,0xe0(%rcx)
  0x00007f191110a419: movabs $0x7f190cb5e000,%rcx  ;   {metadata({method} {0x00007f190cb5e000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110a423: and    $0xfff8,%r8d
  0x00007f191110a42a: cmp    $0x0,%r8d
  0x00007f191110a42e: je     0x00007f191110a4ad  ; OopMap{rdi=Oop rsi=Oop off=308}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x00007f191110a434: test   %eax,0x16389cc6(%rip)        # 0x00007f1927494100
                                                ;   {poll}
  0x00007f191110a43a: movabs $0x7f190cd21b50,%rcx  ;   {metadata(method data for {method} {0x00007f190cb5e000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110a444: incl   0x168(%rcx)        ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x00007f191110a44a: cmp    %ebx,%edx
  0x00007f191110a44c: movabs $0x7f190cd21b50,%rcx  ;   {metadata(method data for {method} {0x00007f190cb5e000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110a456: movabs $0x148,%r8
  0x00007f191110a460: jge    0x00007f191110a470
  0x00007f191110a466: movabs $0x158,%r8
  0x00007f191110a470: mov    (%rcx,%r8,1),%r9
  0x00007f191110a474: lea    0x1(%r9),%r9
  0x00007f191110a478: mov    %r9,(%rcx,%r8,1)
  0x00007f191110a47c: jl     0x00007f191110a3e8  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x00007f191110a482: mov    %eax,0x10(%rsi)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x00007f191110a485: add    $0x30,%rsp
  0x00007f191110a489: pop    %rbp
  0x00007f191110a48a: test   %eax,0x16389c70(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191110a490: retq   
  0x00007f191110a491: mov    %rax,0x8(%rsp)
  0x00007f191110a496: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191110a49e: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)
                                                ;   {runtime_call}
  0x00007f191110a4a3: jmpq   0x00007f191110a35e
  0x00007f191110a4a8: callq  0x00007f191106e6c0  ; OopMap{rsi=Oop rdi=Oop off=429}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x00007f191110a4ad: mov    %rcx,0x8(%rsp)
  0x00007f191110a4b2: movq   $0x2d,(%rsp)
  0x00007f191110a4ba: callq  0x00007f19110feaa0  ; OopMap{rdi=Oop rsi=Oop off=447}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)
                                                ;   {runtime_call}
  0x00007f191110a4bf: jmpq   0x00007f191110a434
  0x00007f191110a4c4: nop
  0x00007f191110a4c5: nop
  0x00007f191110a4c6: mov    0x2a8(%r15),%rax
  0x00007f191110a4cd: movabs $0x0,%r10
  0x00007f191110a4d7: mov    %r10,0x2a8(%r15)
  0x00007f191110a4de: movabs $0x0,%r10
  0x00007f191110a4e8: mov    %r10,0x2b0(%r15)
  0x00007f191110a4ef: add    $0x30,%rsp
  0x00007f191110a4f3: pop    %rbp
  0x00007f191110a4f4: jmpq   0x00007f191106f220  ;   {runtime_call}
  0x00007f191110a4f9: hlt    
  0x00007f191110a4fa: hlt    
  0x00007f191110a4fb: hlt    
  0x00007f191110a4fc: hlt    
  0x00007f191110a4fd: hlt    
  0x00007f191110a4fe: hlt    
  0x00007f191110a4ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007f191110a500: callq  0x00007f191106c860  ;   {no_reloc}
  0x00007f191110a505: mov    %rsp,-0x28(%rsp)
  0x00007f191110a50a: sub    $0x80,%rsp
  0x00007f191110a511: mov    %rax,0x78(%rsp)
  0x00007f191110a516: mov    %rcx,0x70(%rsp)
  0x00007f191110a51b: mov    %rdx,0x68(%rsp)
  0x00007f191110a520: mov    %rbx,0x60(%rsp)
  0x00007f191110a525: mov    %rbp,0x50(%rsp)
  0x00007f191110a52a: mov    %rsi,0x48(%rsp)
  0x00007f191110a52f: mov    %rdi,0x40(%rsp)
  0x00007f191110a534: mov    %r8,0x38(%rsp)
  0x00007f191110a539: mov    %r9,0x30(%rsp)
  0x00007f191110a53e: mov    %r10,0x28(%rsp)
  0x00007f191110a543: mov    %r11,0x20(%rsp)
  0x00007f191110a548: mov    %r12,0x18(%rsp)
  0x00007f191110a54d: mov    %r13,0x10(%rsp)
  0x00007f191110a552: mov    %r14,0x8(%rsp)
  0x00007f191110a557: mov    %r15,(%rsp)
  0x00007f191110a55b: movabs $0x7f192638cf36,%rdi  ;   {external_word}
  0x00007f191110a565: movabs $0x7f191110a505,%rsi  ;   {internal_word}
  0x00007f191110a56f: mov    %rsp,%rdx
  0x00007f191110a572: and    $0xfffffffffffffff0,%rsp
  0x00007f191110a576: callq  0x00007f19260b8990  ;   {runtime_call}
  0x00007f191110a57b: hlt    
[Deopt Handler Code]
  0x00007f191110a57c: movabs $0x7f191110a57c,%r10  ;   {section_word}
  0x00007f191110a586: push   %r10
  0x00007f191110a588: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f191110a58d: hlt    
  0x00007f191110a58e: hlt    
  0x00007f191110a58f: hlt    
<nmethod compile_id='4' compiler='C1' level='3' entry='0x00007f191110a300' size='1448' address='0x00007f191110a190' relocation_offset='296' insts_offset='368' stub_offset='880' scopes_data_offset='1032' scopes_pcs_offset='1152' dependencies_offset='1424' nul_chk_table_offset='1432' method='java/lang/String hashCode ()I' bytes='55' count='439' backedge_count='6779' iicount='439' stamp='0.082'/>
<writer thread='139746009892608'/>
[Loaded sun.usagetracker.UsageTrackerClient$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient$4 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient$3 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<task_queued compile_id='6' method='java/lang/String charAt (I)C' bytes='29' count='2304' iicount='2304' level='3' stamp='0.082' comment='tiered' hot_count='2304'/>
[Loaded java.io.FileOutputStream$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='139745421305600'/>
Decoding compiled method 0x00007f191110a750:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007f190cb5d618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f191110a8e0: mov    0x8(%rsi),%r10d
  0x00007f191110a8e4: shl    $0x3,%r10
  0x00007f191110a8e8: cmp    %rax,%r10
  0x00007f191110a8eb: jne    0x00007f1911045e20  ;   {runtime_call}
  0x00007f191110a8f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f191110a8fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f191110a900: mov    %eax,-0x14000(%rsp)
  0x00007f191110a907: push   %rbp
  0x00007f191110a908: sub    $0x30,%rsp
  0x00007f191110a90c: movabs $0x7f190cd47b10,%rax  ;   {metadata(method data for {method} {0x00007f190cb5d618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110a916: mov    0xdc(%rax),%edi
  0x00007f191110a91c: add    $0x8,%edi
  0x00007f191110a91f: mov    %edi,0xdc(%rax)
  0x00007f191110a925: movabs $0x7f190cb5d618,%rax  ;   {metadata({method} {0x00007f190cb5d618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110a92f: and    $0x1ff8,%edi
  0x00007f191110a935: cmp    $0x0,%edi
  0x00007f191110a938: je     0x00007f191110ad06  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 977)

  0x00007f191110a93e: cmp    %rdx,%rsi
  0x00007f191110a941: movabs $0x7f190cd47b10,%rax  ;   {metadata(method data for {method} {0x00007f190cb5d618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110a94b: movabs $0x108,%rdi
  0x00007f191110a955: jne    0x00007f191110a965
  0x00007f191110a95b: movabs $0x118,%rdi
  0x00007f191110a965: mov    (%rax,%rdi,1),%rbx
  0x00007f191110a969: lea    0x1(%rbx),%rbx
  0x00007f191110a96d: mov    %rbx,(%rax,%rdi,1)
  0x00007f191110a971: je     0x00007f191110acf5  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x00007f191110a977: cmp    $0x0,%rdx
  0x00007f191110a97b: jne    0x00007f191110a996
  0x00007f191110a97d: movabs $0x7f190cd47b10,%rbx  ;   {metadata(method data for {method} {0x00007f190cb5d618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110a987: orl    $0x100,0x120(%rbx)
  0x00007f191110a991: jmpq   0x00007f191110aa56
  0x00007f191110a996: movabs $0x7c00016d0,%rcx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007f191110a9a0: mov    0x8(%rdx),%edi
  0x00007f191110a9a3: shl    $0x3,%rdi
  0x00007f191110a9a7: cmp    %rdi,%rcx
  0x00007f191110a9aa: jne    0x00007f191110aa3a
  0x00007f191110a9b0: movabs $0x7f190cd47b10,%rbx  ;   {metadata(method data for {method} {0x00007f190cb5d618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110a9ba: mov    0x8(%rdx),%ecx
  0x00007f191110a9bd: shl    $0x3,%rcx
  0x00007f191110a9c1: cmp    0x130(%rbx),%rcx
  0x00007f191110a9c8: jne    0x00007f191110a9d7
  0x00007f191110a9ca: addq   $0x1,0x138(%rbx)
  0x00007f191110a9d2: jmpq   0x00007f191110aa5b
  0x00007f191110a9d7: cmp    0x140(%rbx),%rcx
  0x00007f191110a9de: jne    0x00007f191110a9ed
  0x00007f191110a9e0: addq   $0x1,0x148(%rbx)
  0x00007f191110a9e8: jmpq   0x00007f191110aa5b
  0x00007f191110a9ed: cmpq   $0x0,0x130(%rbx)
  0x00007f191110a9f8: jne    0x00007f191110aa11
  0x00007f191110a9fa: mov    %rcx,0x130(%rbx)
  0x00007f191110aa01: movq   $0x1,0x138(%rbx)
  0x00007f191110aa0c: jmpq   0x00007f191110aa5b
  0x00007f191110aa11: cmpq   $0x0,0x140(%rbx)
  0x00007f191110aa1c: jne    0x00007f191110aa35
  0x00007f191110aa1e: mov    %rcx,0x140(%rbx)
  0x00007f191110aa25: movq   $0x1,0x148(%rbx)
  0x00007f191110aa30: jmpq   0x00007f191110aa5b
  0x00007f191110aa35: jmpq   0x00007f191110aa5b
  0x00007f191110aa3a: movabs $0x7f190cd47b10,%rbx  ;   {metadata(method data for {method} {0x00007f190cb5d618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110aa44: subq   $0x1,0x128(%rbx)
  0x00007f191110aa4c: jmpq   0x00007f191110aa56
  0x00007f191110aa51: jmpq   0x00007f191110aa5b
  0x00007f191110aa56: xor    %rax,%rax
  0x00007f191110aa59: jmp    0x00007f191110aa65
  0x00007f191110aa5b: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x00007f191110aa65: cmp    $0x0,%eax
  0x00007f191110aa68: movabs $0x7f190cd47b10,%rax  ;   {metadata(method data for {method} {0x00007f190cb5d618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110aa72: movabs $0x158,%rdi
  0x00007f191110aa7c: je     0x00007f191110aa8c
  0x00007f191110aa82: movabs $0x168,%rdi
  0x00007f191110aa8c: mov    (%rax,%rdi,1),%rbx
  0x00007f191110aa90: lea    0x1(%rbx),%rbx
  0x00007f191110aa94: mov    %rbx,(%rax,%rdi,1)
  0x00007f191110aa98: je     0x00007f191110ace4  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 980)

  0x00007f191110aa9e: cmp    $0x0,%rdx
  0x00007f191110aaa2: jne    0x00007f191110aabd
  0x00007f191110aaa4: movabs $0x7f190cd47b10,%rbx  ;   {metadata(method data for {method} {0x00007f190cb5d618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110aaae: orl    $0x100,0x170(%rbx)
  0x00007f191110aab8: jmpq   0x00007f191110ab7d
  0x00007f191110aabd: movabs $0x7c00016d0,%rax  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007f191110aac7: mov    0x8(%rdx),%edi
  0x00007f191110aaca: shl    $0x3,%rdi
  0x00007f191110aace: cmp    %rdi,%rax
  0x00007f191110aad1: jne    0x00007f191110ab61
  0x00007f191110aad7: movabs $0x7f190cd47b10,%rbx  ;   {metadata(method data for {method} {0x00007f190cb5d618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110aae1: mov    0x8(%rdx),%eax
  0x00007f191110aae4: shl    $0x3,%rax
  0x00007f191110aae8: cmp    0x180(%rbx),%rax
  0x00007f191110aaef: jne    0x00007f191110aafe
  0x00007f191110aaf1: addq   $0x1,0x188(%rbx)
  0x00007f191110aaf9: jmpq   0x00007f191110ab7d
  0x00007f191110aafe: cmp    0x190(%rbx),%rax
  0x00007f191110ab05: jne    0x00007f191110ab14
  0x00007f191110ab07: addq   $0x1,0x198(%rbx)
  0x00007f191110ab0f: jmpq   0x00007f191110ab7d
  0x00007f191110ab14: cmpq   $0x0,0x180(%rbx)
  0x00007f191110ab1f: jne    0x00007f191110ab38
  0x00007f191110ab21: mov    %rax,0x180(%rbx)
  0x00007f191110ab28: movq   $0x1,0x188(%rbx)
  0x00007f191110ab33: jmpq   0x00007f191110ab7d
  0x00007f191110ab38: cmpq   $0x0,0x190(%rbx)
  0x00007f191110ab43: jne    0x00007f191110ab5c
  0x00007f191110ab45: mov    %rax,0x190(%rbx)
  0x00007f191110ab4c: movq   $0x1,0x198(%rbx)
  0x00007f191110ab57: jmpq   0x00007f191110ab7d
  0x00007f191110ab5c: jmpq   0x00007f191110ab7d
  0x00007f191110ab61: movabs $0x7f190cd47b10,%rbx  ;   {metadata(method data for {method} {0x00007f190cb5d618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110ab6b: subq   $0x1,0x178(%rbx)
  0x00007f191110ab73: jmpq   0x00007f191110ad1d
  0x00007f191110ab78: jmpq   0x00007f191110ab7d
  0x00007f191110ab7d: mov    %rdx,%rax          ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)

  0x00007f191110ab80: mov    0xc(%rsi),%esi
  0x00007f191110ab83: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x00007f191110ab87: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x00007f191110ad26
  0x00007f191110ab8a: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x00007f191110ad2b
  0x00007f191110ab8d: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x00007f191110ab91: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x00007f191110ad30
  0x00007f191110ab94: cmp    %ebx,%edi
  0x00007f191110ab96: movabs $0x7f190cd47b10,%rbx  ;   {metadata(method data for {method} {0x00007f190cb5d618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110aba0: movabs $0x1a8,%rdx
  0x00007f191110abaa: jne    0x00007f191110abba
  0x00007f191110abb0: movabs $0x1b8,%rdx
  0x00007f191110abba: mov    (%rbx,%rdx,1),%rcx
  0x00007f191110abbe: lea    0x1(%rcx),%rcx
  0x00007f191110abc2: mov    %rcx,(%rbx,%rdx,1)
  0x00007f191110abc6: jne    0x00007f191110ace4  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x00007f191110abcc: mov    $0x0,%ebx
  0x00007f191110abd1: jmpq   0x00007f191110ac7f  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 987)

  0x00007f191110abd6: xchg   %ax,%ax
  0x00007f191110abd8: movslq %ebx,%rdi
  0x00007f191110abdb: cmp    0xc(%rsi),%ebx
  0x00007f191110abde: jae    0x00007f191110ad35
  0x00007f191110abe4: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00007f191110abe9: movslq %ebx,%rcx
  0x00007f191110abec: cmp    0xc(%rax),%ebx
  0x00007f191110abef: jae    0x00007f191110ad3e
  0x00007f191110abf5: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00007f191110abfa: cmp    %ecx,%edi
  0x00007f191110abfc: movabs $0x7f190cd47b10,%rdi  ;   {metadata(method data for {method} {0x00007f190cb5d618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110ac06: movabs $0x1e8,%rcx
  0x00007f191110ac10: je     0x00007f191110ac20
  0x00007f191110ac16: movabs $0x1f8,%rcx
  0x00007f191110ac20: mov    (%rdi,%rcx,1),%r8
  0x00007f191110ac24: lea    0x1(%r8),%r8
  0x00007f191110ac28: mov    %r8,(%rdi,%rcx,1)
  0x00007f191110ac2c: jne    0x00007f191110acc2  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00007f191110ac32: inc    %ebx
  0x00007f191110ac34: movabs $0x7f190cd47b10,%rdi  ;   {metadata(method data for {method} {0x00007f190cb5d618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110ac3e: mov    0xe0(%rdi),%ecx
  0x00007f191110ac44: add    $0x8,%ecx
  0x00007f191110ac47: mov    %ecx,0xe0(%rdi)
  0x00007f191110ac4d: movabs $0x7f190cb5d618,%rdi  ;   {metadata({method} {0x00007f190cb5d618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110ac57: and    $0xfff8,%ecx
  0x00007f191110ac5d: cmp    $0x0,%ecx
  0x00007f191110ac60: je     0x00007f191110ad47  ; OopMap{rax=Oop rsi=Oop off=902}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x00007f191110ac66: test   %eax,0x16389494(%rip)        # 0x00007f1927494100
                                                ;   {poll}
  0x00007f191110ac6c: movabs $0x7f190cd47b10,%rdi  ;   {metadata(method data for {method} {0x00007f190cb5d618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110ac76: incl   0x208(%rdi)
  0x00007f191110ac7c: mov    %rdx,%rdi          ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x00007f191110ac7f: mov    %rdi,%rdx
  0x00007f191110ac82: dec    %edx
  0x00007f191110ac84: cmp    $0x0,%edi
  0x00007f191110ac87: movabs $0x7f190cd47b10,%rdi  ;   {metadata(method data for {method} {0x00007f190cb5d618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110ac91: movabs $0x1c8,%rcx
  0x00007f191110ac9b: je     0x00007f191110acab
  0x00007f191110aca1: movabs $0x1d8,%rcx
  0x00007f191110acab: mov    (%rdi,%rcx,1),%r8
  0x00007f191110acaf: lea    0x1(%r8),%r8
  0x00007f191110acb3: mov    %r8,(%rdi,%rcx,1)
  0x00007f191110acb7: je     0x00007f191110acd3
  0x00007f191110acbd: jmpq   0x00007f191110abd8  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x00007f191110acc2: mov    $0x0,%eax
  0x00007f191110acc7: add    $0x30,%rsp
  0x00007f191110accb: pop    %rbp
  0x00007f191110accc: test   %eax,0x1638942e(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191110acd2: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 989)

  0x00007f191110acd3: mov    $0x1,%eax
  0x00007f191110acd8: add    $0x30,%rsp
  0x00007f191110acdc: pop    %rbp
  0x00007f191110acdd: test   %eax,0x1638941d(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191110ace3: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 992)

  0x00007f191110ace4: mov    $0x0,%eax
  0x00007f191110ace9: add    $0x30,%rsp
  0x00007f191110aced: pop    %rbp
  0x00007f191110acee: test   %eax,0x1638940c(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191110acf4: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 995)

  0x00007f191110acf5: mov    $0x1,%eax
  0x00007f191110acfa: add    $0x30,%rsp
  0x00007f191110acfe: pop    %rbp
  0x00007f191110acff: test   %eax,0x163893fb(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191110ad05: retq   
  0x00007f191110ad06: mov    %rax,0x8(%rsp)
  0x00007f191110ad0b: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191110ad13: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop rdx=Oop off=1080}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x00007f191110ad18: jmpq   0x00007f191110a93e
  0x00007f191110ad1d: mov    %rdx,(%rsp)
  0x00007f191110ad21: callq  0x00007f19110fc780  ; OopMap{rsi=Oop off=1094}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x00007f191110ad26: callq  0x00007f191106e6c0  ; OopMap{rax=Oop rsi=Oop off=1099}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x00007f191110ad2b: callq  0x00007f191106e6c0  ; OopMap{rsi=Oop off=1104}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x00007f191110ad30: callq  0x00007f191106e6c0  ; OopMap{rsi=Oop rax=Oop off=1109}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x00007f191110ad35: mov    %rbx,(%rsp)
  0x00007f191110ad39: callq  0x00007f191106ed80  ; OopMap{rax=Oop rsi=Oop off=1118}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x00007f191110ad3e: mov    %rbx,(%rsp)
  0x00007f191110ad42: callq  0x00007f191106ed80  ; OopMap{rax=Oop rsi=Oop off=1127}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x00007f191110ad47: mov    %rdi,0x8(%rsp)
  0x00007f191110ad4c: movq   $0x4a,(%rsp)
  0x00007f191110ad54: callq  0x00007f19110feaa0  ; OopMap{rax=Oop rsi=Oop off=1145}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x00007f191110ad59: jmpq   0x00007f191110ac66
  0x00007f191110ad5e: nop
  0x00007f191110ad5f: nop
  0x00007f191110ad60: mov    0x2a8(%r15),%rax
  0x00007f191110ad67: movabs $0x0,%r10
  0x00007f191110ad71: mov    %r10,0x2a8(%r15)
  0x00007f191110ad78: movabs $0x0,%r10
  0x00007f191110ad82: mov    %r10,0x2b0(%r15)
  0x00007f191110ad89: add    $0x30,%rsp
  0x00007f191110ad8d: pop    %rbp
  0x00007f191110ad8e: jmpq   0x00007f191106f220  ;   {runtime_call}
  0x00007f191110ad93: hlt    
  0x00007f191110ad94: hlt    
  0x00007f191110ad95: hlt    
  0x00007f191110ad96: hlt    
  0x00007f191110ad97: hlt    
  0x00007f191110ad98: hlt    
  0x00007f191110ad99: hlt    
  0x00007f191110ad9a: hlt    
  0x00007f191110ad9b: hlt    
  0x00007f191110ad9c: hlt    
  0x00007f191110ad9d: hlt    
  0x00007f191110ad9e: hlt    
  0x00007f191110ad9f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f191110ada0: callq  0x00007f191106c860  ;   {no_reloc}
  0x00007f191110ada5: mov    %rsp,-0x28(%rsp)
  0x00007f191110adaa: sub    $0x80,%rsp
  0x00007f191110adb1: mov    %rax,0x78(%rsp)
  0x00007f191110adb6: mov    %rcx,0x70(%rsp)
  0x00007f191110adbb: mov    %rdx,0x68(%rsp)
  0x00007f191110adc0: mov    %rbx,0x60(%rsp)
  0x00007f191110adc5: mov    %rbp,0x50(%rsp)
  0x00007f191110adca: mov    %rsi,0x48(%rsp)
  0x00007f191110adcf: mov    %rdi,0x40(%rsp)
  0x00007f191110add4: mov    %r8,0x38(%rsp)
  0x00007f191110add9: mov    %r9,0x30(%rsp)
  0x00007f191110adde: mov    %r10,0x28(%rsp)
  0x00007f191110ade3: mov    %r11,0x20(%rsp)
  0x00007f191110ade8: mov    %r12,0x18(%rsp)
  0x00007f191110aded: mov    %r13,0x10(%rsp)
  0x00007f191110adf2: mov    %r14,0x8(%rsp)
  0x00007f191110adf7: mov    %r15,(%rsp)
  0x00007f191110adfb: movabs $0x7f192638cf36,%rdi  ;   {external_word}
  0x00007f191110ae05: movabs $0x7f191110ada5,%rsi  ;   {internal_word}
  0x00007f191110ae0f: mov    %rsp,%rdx
  0x00007f191110ae12: and    $0xfffffffffffffff0,%rsp
  0x00007f191110ae16: callq  0x00007f19260b8990  ;   {runtime_call}
  0x00007f191110ae1b: hlt    
[Deopt Handler Code]
  0x00007f191110ae1c: movabs $0x7f191110ae1c,%r10  ;   {section_word}
  0x00007f191110ae26: push   %r10
  0x00007f191110ae28: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f191110ae2d: hlt    
  0x00007f191110ae2e: hlt    
  0x00007f191110ae2f: hlt    
<nmethod compile_id='5' compiler='C1' level='3' entry='0x00007f191110a8e0' size='2504' address='0x00007f191110a750' relocation_offset='296' insts_offset='400' stub_offset='1616' scopes_data_offset='1768' scopes_pcs_offset='1984' dependencies_offset='2464' nul_chk_table_offset='2472' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='411' backedge_count='1418' iicount='411' stamp='0.085'/>
Decoding compiled method 0x00007f191110b150:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007f190cb5cdb0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f191110b2c0: mov    0x8(%rsi),%r10d
  0x00007f191110b2c4: shl    $0x3,%r10
  0x00007f191110b2c8: cmp    %rax,%r10
  0x00007f191110b2cb: jne    0x00007f1911045e20  ;   {runtime_call}
  0x00007f191110b2d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f191110b2dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f191110b2e0: mov    %eax,-0x14000(%rsp)
  0x00007f191110b2e7: push   %rbp
  0x00007f191110b2e8: sub    $0x30,%rsp
  0x00007f191110b2ec: mov    %rdx,%rdi
  0x00007f191110b2ef: movabs $0x7f190ccec720,%rax  ;   {metadata(method data for {method} {0x00007f190cb5cdb0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110b2f9: mov    0xdc(%rax),%edx
  0x00007f191110b2ff: add    $0x8,%edx
  0x00007f191110b302: mov    %edx,0xdc(%rax)
  0x00007f191110b308: movabs $0x7f190cb5cdb0,%rax  ;   {metadata({method} {0x00007f190cb5cdb0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110b312: and    $0x1ff8,%edx
  0x00007f191110b318: cmp    $0x0,%edx
  0x00007f191110b31b: je     0x00007f191110b3f6  ;*iload_1
                                                ; - java.lang.String::charAt@0 (line 657)

  0x00007f191110b321: cmp    $0x0,%edi
  0x00007f191110b324: movabs $0x7f190ccec720,%rax  ;   {metadata(method data for {method} {0x00007f190cb5cdb0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110b32e: movabs $0x108,%rdx
  0x00007f191110b338: jl     0x00007f191110b348
  0x00007f191110b33e: movabs $0x118,%rdx
  0x00007f191110b348: mov    (%rax,%rdx,1),%rbx
  0x00007f191110b34c: lea    0x1(%rbx),%rbx
  0x00007f191110b350: mov    %rbx,(%rax,%rdx,1)
  0x00007f191110b354: jl     0x00007f191110b3b6  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x00007f191110b35a: mov    0xc(%rsi),%eax
  0x00007f191110b35d: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x00007f191110b361: mov    0xc(%rax),%edx     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x00007f191110b40d
  0x00007f191110b364: cmp    %edx,%edi
  0x00007f191110b366: movabs $0x7f190ccec720,%rdx  ;   {metadata(method data for {method} {0x00007f190cb5cdb0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110b370: movabs $0x128,%rsi
  0x00007f191110b37a: jl     0x00007f191110b38a
  0x00007f191110b380: movabs $0x138,%rsi
  0x00007f191110b38a: mov    (%rdx,%rsi,1),%rbx
  0x00007f191110b38e: lea    0x1(%rbx),%rbx
  0x00007f191110b392: mov    %rbx,(%rdx,%rsi,1)
  0x00007f191110b396: jge    0x00007f191110b3b6  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x00007f191110b39c: movslq %edi,%rdi
  0x00007f191110b39f: movzwl 0x10(%rax,%rdi,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x00007f191110b3a4: and    $0xffff,%eax
  0x00007f191110b3aa: add    $0x30,%rsp
  0x00007f191110b3ae: pop    %rbp
  0x00007f191110b3af: test   %eax,0x16388d4b(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191110b3b5: retq                      ;*ireturn
                                                ; - java.lang.String::charAt@28 (line 660)

  0x00007f191110b3b6: xchg   %ax,%ax
  0x00007f191110b3b8: jmpq   0x00007f191110b421  ;   {no_reloc}
  0x00007f191110b3bd: add    %al,(%rax)
  0x00007f191110b3bf: add    %al,(%rax)
  0x00007f191110b3c1: add    %ch,%cl
  0x00007f191110b3c3: add    %al,%fs:(%rax)
  0x00007f191110b3c6: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)

  0x00007f191110b3c9: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00007f190cb5cdb0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110b3cc: and    %al,%bh
  0x00007f191110b3ce: (bad)  
  0x00007f191110b3cf: or     $0x19,%al
  0x00007f191110b3d1: jg     0x00007f191110b3d3
  0x00007f191110b3d3: add    %cl,-0x7d(%rax)
  0x00007f191110b3d6: xchg   %cl,0x1(%rax)
  0x00007f191110b3d9: add    %al,(%rax)
  0x00007f191110b3db: add    %ecx,-0x75(%rax)
  0x00007f191110b3de: xlat   %ds:(%rbx)
  0x00007f191110b3df: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)

  0x00007f191110b3e2: mov    %rax,0x20(%rsp)
  0x00007f191110b3e7: callq  0x00007f1911046020  ; OopMap{[32]=Oop off=300}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ;   {optimized virtual_call}
  0x00007f191110b3ec: mov    0x20(%rsp),%rax
  0x00007f191110b3f1: jmpq   0x00007f191110b460
  0x00007f191110b3f6: mov    %rax,0x8(%rsp)
  0x00007f191110b3fb: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191110b403: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop off=328}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ;   {runtime_call}
  0x00007f191110b408: jmpq   0x00007f191110b321
  0x00007f191110b40d: callq  0x00007f191106e6c0  ; OopMap{rax=Oop off=338}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x00007f191110b412: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007f191110b41c: mov    $0xa050f00,%eax
  0x00007f191110b421: callq  0x00007f19110fdaa0  ; OopMap{off=358}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x00007f191110b426: jmp    0x00007f191110b3b8
  0x00007f191110b428: nop
  0x00007f191110b429: nop
  0x00007f191110b42a: nop
  0x00007f191110b42b: mov    %rdx,%rdx
  0x00007f191110b42e: callq  0x00007f191106e1a0  ; OopMap{off=371}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x00007f191110b433: jmp    0x00007f191110b3c7
  0x00007f191110b435: nop
  0x00007f191110b436: nop
  0x00007f191110b437: mov    0x2a8(%r15),%rax
  0x00007f191110b43e: movabs $0x0,%r10
  0x00007f191110b448: mov    %r10,0x2a8(%r15)
  0x00007f191110b44f: movabs $0x0,%r10
  0x00007f191110b459: mov    %r10,0x2b0(%r15)
  0x00007f191110b460: add    $0x30,%rsp
  0x00007f191110b464: pop    %rbp
  0x00007f191110b465: jmpq   0x00007f191106f220  ;   {runtime_call}
  0x00007f191110b46a: hlt    
  0x00007f191110b46b: hlt    
  0x00007f191110b46c: hlt    
  0x00007f191110b46d: hlt    
  0x00007f191110b46e: hlt    
  0x00007f191110b46f: hlt    
  0x00007f191110b470: hlt    
  0x00007f191110b471: hlt    
  0x00007f191110b472: hlt    
  0x00007f191110b473: hlt    
  0x00007f191110b474: hlt    
  0x00007f191110b475: hlt    
  0x00007f191110b476: hlt    
  0x00007f191110b477: hlt    
  0x00007f191110b478: hlt    
  0x00007f191110b479: hlt    
  0x00007f191110b47a: hlt    
  0x00007f191110b47b: hlt    
  0x00007f191110b47c: hlt    
  0x00007f191110b47d: hlt    
  0x00007f191110b47e: hlt    
  0x00007f191110b47f: hlt    
[Stub Code]
  0x00007f191110b480: nop                       ;   {no_reloc}
  0x00007f191110b481: nop
  0x00007f191110b482: nop
  0x00007f191110b483: nop
  0x00007f191110b484: nop
  0x00007f191110b485: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191110b48f: jmpq   0x00007f191110b48f  ;   {runtime_call}
[Exception Handler]
  0x00007f191110b494: callq  0x00007f191106c860  ;   {runtime_call}
  0x00007f191110b499: mov    %rsp,-0x28(%rsp)
  0x00007f191110b49e: sub    $0x80,%rsp
  0x00007f191110b4a5: mov    %rax,0x78(%rsp)
  0x00007f191110b4aa: mov    %rcx,0x70(%rsp)
  0x00007f191110b4af: mov    %rdx,0x68(%rsp)
  0x00007f191110b4b4: mov    %rbx,0x60(%rsp)
  0x00007f191110b4b9: mov    %rbp,0x50(%rsp)
  0x00007f191110b4be: mov    %rsi,0x48(%rsp)
  0x00007f191110b4c3: mov    %rdi,0x40(%rsp)
  0x00007f191110b4c8: mov    %r8,0x38(%rsp)
  0x00007f191110b4cd: mov    %r9,0x30(%rsp)
  0x00007f191110b4d2: mov    %r10,0x28(%rsp)
  0x00007f191110b4d7: mov    %r11,0x20(%rsp)
  0x00007f191110b4dc: mov    %r12,0x18(%rsp)
  0x00007f191110b4e1: mov    %r13,0x10(%rsp)
  0x00007f191110b4e6: mov    %r14,0x8(%rsp)
  0x00007f191110b4eb: mov    %r15,(%rsp)
  0x00007f191110b4ef: movabs $0x7f192638cf36,%rdi  ;   {external_word}
  0x00007f191110b4f9: movabs $0x7f191110b499,%rsi  ;   {internal_word}
  0x00007f191110b503: mov    %rsp,%rdx
  0x00007f191110b506: and    $0xfffffffffffffff0,%rsp
  0x00007f191110b50a: callq  0x00007f19260b8990  ;   {runtime_call}
  0x00007f191110b50f: hlt    
[Deopt Handler Code]
  0x00007f191110b510: movabs $0x7f191110b510,%r10  ;   {section_word}
  0x00007f191110b51a: push   %r10
  0x00007f191110b51c: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f191110b521: hlt    
  0x00007f191110b522: hlt    
  0x00007f191110b523: hlt    
  0x00007f191110b524: hlt    
  0x00007f191110b525: hlt    
  0x00007f191110b526: hlt    
  0x00007f191110b527: hlt    
<nmethod compile_id='6' compiler='C1' level='3' entry='0x00007f191110b2c0' size='1376' address='0x00007f191110b150' relocation_offset='296' insts_offset='368' stub_offset='816' scopes_data_offset='992' scopes_pcs_offset='1096' dependencies_offset='1352' nul_chk_table_offset='1360' method='java/lang/String charAt (I)C' bytes='29' count='2566' iicount='2566' stamp='0.086'/>
<writer thread='139746009892608'/>
[Loaded sun.launcher.LauncherHelper from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
Decoding compiled method 0x00007f191110bad0:
Code:
[Entry Point]
  # {method} {0x00007f190cb72930} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x00007f191110bc40: mov    0x8(%rsi),%r10d
  0x00007f191110bc44: shl    $0x3,%r10
  0x00007f191110bc48: cmp    %r10,%rax
  0x00007f191110bc4b: je     0x00007f191110bc58
  0x00007f191110bc51: jmpq   0x00007f1911045e20  ;   {runtime_call}
  0x00007f191110bc56: xchg   %ax,%ax
[Verified Entry Point]
  0x00007f191110bc58: mov    %eax,-0x14000(%rsp)
  0x00007f191110bc5f: push   %rbp
  0x00007f191110bc60: mov    %rsp,%rbp
  0x00007f191110bc63: sub    $0x50,%rsp
  0x00007f191110bc67: mov    %r9,(%rsp)
  0x00007f191110bc6b: mov    %r8,%r9
  0x00007f191110bc6e: mov    %rcx,0x18(%rsp)
  0x00007f191110bc73: cmp    $0x0,%rcx
  0x00007f191110bc77: lea    0x18(%rsp),%r8
  0x00007f191110bc7c: cmove  0x18(%rsp),%r8
  0x00007f191110bc82: mov    %rdx,%rcx
  0x00007f191110bc85: mov    %rsi,0x8(%rsp)
  0x00007f191110bc8a: cmp    $0x0,%rsi
  0x00007f191110bc8e: lea    0x8(%rsp),%rdx
  0x00007f191110bc93: cmove  0x8(%rsp),%rdx
  0x00007f191110bc99: movabs $0x670b80c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007f191110bca3: mov    %r14,0x38(%rsp)
  0x00007f191110bca8: lea    0x38(%rsp),%r14
  0x00007f191110bcad: mov    %r14,%rsi          ; OopMap{[24]=Oop [8]=Oop [56]=Oop off=112}
  0x00007f191110bcb0: movabs $0x7f191110bcb0,%r10  ;   {section_word}
  0x00007f191110bcba: mov    %r10,0x1e0(%r15)
  0x00007f191110bcc1: mov    %rsp,0x1d8(%r15)
  0x00007f191110bcc8: cmpb   $0x0,0x1572c4d3(%rip)        # 0x00007f19268381a2
                                                ;   {external_word}
  0x00007f191110bccf: je     0x00007f191110bd13
  0x00007f191110bcd5: push   %rsi
  0x00007f191110bcd6: push   %rdx
  0x00007f191110bcd7: push   %rcx
  0x00007f191110bcd8: push   %r8
  0x00007f191110bcda: push   %r9
  0x00007f191110bcdc: movabs $0x7f190cb72930,%rsi  ;   {metadata({method} {0x00007f190cb72930} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00007f191110bce6: mov    %r15,%rdi
  0x00007f191110bce9: test   $0xf,%esp
  0x00007f191110bcef: je     0x00007f191110bd07
  0x00007f191110bcf5: sub    $0x8,%rsp
  0x00007f191110bcf9: callq  0x00007f1926243390  ;   {runtime_call}
  0x00007f191110bcfe: add    $0x8,%rsp
  0x00007f191110bd02: jmpq   0x00007f191110bd0c
  0x00007f191110bd07: callq  0x00007f1926243390  ;   {runtime_call}
  0x00007f191110bd0c: pop    %r9
  0x00007f191110bd0e: pop    %r8
  0x00007f191110bd10: pop    %rcx
  0x00007f191110bd11: pop    %rdx
  0x00007f191110bd12: pop    %rsi
  0x00007f191110bd13: lea    0x1f8(%r15),%rdi
  0x00007f191110bd1a: movl   $0x4,0x270(%r15)
  0x00007f191110bd25: callq  0x00007f1925fa4080  ;   {runtime_call}
  0x00007f191110bd2a: vzeroupper 
  0x00007f191110bd2d: movl   $0x5,0x270(%r15)
  0x00007f191110bd38: mov    %r15d,%ecx
  0x00007f191110bd3b: shr    $0x4,%ecx
  0x00007f191110bd3e: and    $0xffc,%ecx
  0x00007f191110bd44: movabs $0x7f1927493000,%r10  ;   {external_word}
  0x00007f191110bd4e: mov    %ecx,(%r10,%rcx,1)
  0x00007f191110bd52: cmpl   $0x0,0x1573bdc4(%rip)        # 0x00007f1926847b20
                                                ;   {external_word}
  0x00007f191110bd5c: jne    0x00007f191110bd70
  0x00007f191110bd62: cmpl   $0x0,0x30(%r15)
  0x00007f191110bd6a: je     0x00007f191110bd89
  0x00007f191110bd70: mov    %r15,%rdi
  0x00007f191110bd73: mov    %rsp,%r12
  0x00007f191110bd76: sub    $0x0,%rsp
  0x00007f191110bd7a: and    $0xfffffffffffffff0,%rsp
  0x00007f191110bd7e: callq  0x00007f19262f3960  ;   {runtime_call}
  0x00007f191110bd83: mov    %r12,%rsp
  0x00007f191110bd86: xor    %r12,%r12
  0x00007f191110bd89: movl   $0x8,0x270(%r15)
  0x00007f191110bd94: cmpl   $0x1,0x29c(%r15)
  0x00007f191110bd9f: je     0x00007f191110be27
  0x00007f191110bda5: cmpb   $0x0,0x1572c3f6(%rip)        # 0x00007f19268381a2
                                                ;   {external_word}
  0x00007f191110bdac: je     0x00007f191110bde2
  0x00007f191110bdb2: movabs $0x7f190cb72930,%rsi  ;   {metadata({method} {0x00007f190cb72930} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00007f191110bdbc: mov    %r15,%rdi
  0x00007f191110bdbf: test   $0xf,%esp
  0x00007f191110bdc5: je     0x00007f191110bddd
  0x00007f191110bdcb: sub    $0x8,%rsp
  0x00007f191110bdcf: callq  0x00007f1926243380  ;   {runtime_call}
  0x00007f191110bdd4: add    $0x8,%rsp
  0x00007f191110bdd8: jmpq   0x00007f191110bde2
  0x00007f191110bddd: callq  0x00007f1926243380  ;   {runtime_call}
  0x00007f191110bde2: movabs $0x0,%r10
  0x00007f191110bdec: mov    %r10,0x1d8(%r15)
  0x00007f191110bdf3: movabs $0x0,%r10
  0x00007f191110bdfd: mov    %r10,0x1e0(%r15)
  0x00007f191110be04: mov    0x38(%r15),%rcx
  0x00007f191110be08: movl   $0x0,0x100(%rcx)
  0x00007f191110be12: leaveq 
  0x00007f191110be13: cmpq   $0x0,0x8(%r15)
  0x00007f191110be1b: jne    0x00007f191110be22
  0x00007f191110be21: retq   
  0x00007f191110be22: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00007f191110be27: mov    %rsp,%r12
  0x00007f191110be2a: sub    $0x0,%rsp
  0x00007f191110be2e: and    $0xfffffffffffffff0,%rsp
  0x00007f191110be32: callq  0x00007f1926243360  ;   {runtime_call}
  0x00007f191110be37: mov    %r12,%rsp
  0x00007f191110be3a: xor    %r12,%r12
  0x00007f191110be3d: jmpq   0x00007f191110bda5
  0x00007f191110be42: hlt    
  0x00007f191110be43: hlt    
  0x00007f191110be44: hlt    
  0x00007f191110be45: hlt    
  0x00007f191110be46: hlt    
  0x00007f191110be47: hlt    
<nmethod compile_id='7' compile_kind='c2n' level='0' entry='0x00007f191110bc40' size='888' address='0x00007f191110bad0' relocation_offset='296' consts_offset='888' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='640' iicount='640' stamp='0.093'/>
[Loaded sun.net.util.URLUtil from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$3 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$Loader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.zip.ZipConstants from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.JavaUtilZipFileAccess from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<task_queued compile_id='8' method='java/lang/String indexOf (II)I' bytes='70' count='169' backedge_count='5120' iicount='169' level='3' stamp='0.094' comment='tiered' hot_count='169'/>
<task_queued compile_id='9' method='java/lang/String length ()I' bytes='6' count='512' iicount='512' level='3' stamp='0.094' comment='tiered' hot_count='512'/>
<task_queued compile_id='10' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='256' iicount='256' level='3' stamp='0.094' comment='tiered' hot_count='256'/>
<task_queued compile_id='11' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1664' iicount='1664' level='3' stamp='0.094' comment='tiered' hot_count='1664'/>
[Loaded sun.misc.URLClassPath$FileLoader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='139745421305600'/>
Decoding compiled method 0x00007f191110c290:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007f190cb5e180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f191110c420: mov    0x8(%rsi),%r10d
  0x00007f191110c424: shl    $0x3,%r10
  0x00007f191110c428: cmp    %rax,%r10
  0x00007f191110c42b: jne    0x00007f1911045e20  ;   {runtime_call}
  0x00007f191110c431: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f191110c43c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f191110c440: mov    %eax,-0x14000(%rsp)
  0x00007f191110c447: push   %rbp
  0x00007f191110c448: sub    $0x30,%rsp
  0x00007f191110c44c: movabs $0x7f190cd58ed0,%rax  ;   {metadata(method data for {method} {0x00007f190cb5e180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110c456: mov    0xdc(%rax),%edi
  0x00007f191110c45c: add    $0x8,%edi
  0x00007f191110c45f: mov    %edi,0xdc(%rax)
  0x00007f191110c465: movabs $0x7f190cb5e180,%rax  ;   {metadata({method} {0x00007f190cb5e180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110c46f: and    $0x1ff8,%edi
  0x00007f191110c475: cmp    $0x0,%edi
  0x00007f191110c478: je     0x00007f191110c681  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1546)

  0x00007f191110c47e: mov    0xc(%rsi),%eax
  0x00007f191110c481: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x00007f191110c485: mov    0xc(%rax),%edi     ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x00007f191110c698
  0x00007f191110c488: cmp    $0x0,%ecx
  0x00007f191110c48b: movabs $0x7f190cd58ed0,%rbx  ;   {metadata(method data for {method} {0x00007f190cb5e180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110c495: movabs $0x108,%r8
  0x00007f191110c49f: jge    0x00007f191110c4af
  0x00007f191110c4a5: movabs $0x118,%r8
  0x00007f191110c4af: mov    (%rbx,%r8,1),%r9
  0x00007f191110c4b3: lea    0x1(%r9),%r9
  0x00007f191110c4b7: mov    %r9,(%rbx,%r8,1)
  0x00007f191110c4bb: jge    0x00007f191110c4db  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x00007f191110c4c1: movabs $0x7f190cd58ed0,%rcx  ;   {metadata(method data for {method} {0x00007f190cb5e180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110c4cb: incl   0x128(%rcx)
  0x00007f191110c4d1: mov    $0x0,%ecx
  0x00007f191110c4d6: jmpq   0x00007f191110c513  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1548)

  0x00007f191110c4db: cmp    %edi,%ecx
  0x00007f191110c4dd: movabs $0x7f190cd58ed0,%rbx  ;   {metadata(method data for {method} {0x00007f190cb5e180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110c4e7: movabs $0x140,%r8
<writer thread='139746009892608'/>
[Loaded sun.misc.Resource from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='139745421305600'/>
  0x00007f191110c4f1: jl     0x00007f191110c501
  0x00007f191110c4f7: movabs $0x150,%r8
  0x00007f191110c501: mov    (%rbx,%r8,1),%r9
  0x00007f191110c505: lea    0x1(%r9),%r9
  0x00007f191110c509: mov    %r9,(%rbx,%r8,1)
  0x00007f191110c50d: jge    0x00007f191110c670  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x00007f191110c513: cmp    $0x10000,%edx
  0x00007f191110c519: movabs $0x7f190cd58ed0,%rbx  ;   {metadata(method data for {method} {0x00007f190cb5e180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110c523: movabs $0x160,%r8
  0x00007f191110c52d: jge    0x00007f191110c53d
  0x00007f191110c533: movabs $0x170,%r8
  0x00007f191110c53d: mov    (%rbx,%r8,1),%r9
  0x00007f191110c541: lea    0x1(%r9),%r9
  0x00007f191110c545: mov    %r9,(%rbx,%r8,1)
  0x00007f191110c549: jge    0x00007f191110c648
  0x00007f191110c54f: jmpq   0x00007f191110c5eb  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x00007f191110c554: nopl   0x0(%rax)
  0x00007f191110c558: movslq %ecx,%rsi
  0x00007f191110c55b: cmp    0xc(%rax),%ecx
  0x00007f191110c55e: jae    0x00007f191110c69d
  0x00007f191110c564: movzwl 0x10(%rax,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00007f191110c569: cmp    %edx,%esi
  0x00007f191110c56b: movabs $0x7f190cd58ed0,%rsi  ;   {metadata(method data for {method} {0x00007f190cb5e180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110c575: movabs $0x1a0,%rbx
  0x00007f191110c57f: jne    0x00007f191110c58f
  0x00007f191110c585: movabs $0x1b0,%rbx
  0x00007f191110c58f: mov    (%rsi,%rbx,1),%r8
  0x00007f191110c593: lea    0x1(%r8),%r8
  0x00007f191110c597: mov    %r8,(%rsi,%rbx,1)
  0x00007f191110c59b: je     0x00007f191110c628  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00007f191110c5a1: inc    %ecx
  0x00007f191110c5a3: movabs $0x7f190cd58ed0,%rsi  ;   {metadata(method data for {method} {0x00007f190cb5e180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110c5ad: mov    0xe0(%rsi),%ebx
  0x00007f191110c5b3: add    $0x8,%ebx
  0x00007f191110c5b6: mov    %ebx,0xe0(%rsi)
  0x00007f191110c5bc: movabs $0x7f190cb5e180,%rsi  ;   {metadata({method} {0x00007f190cb5e180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110c5c6: and    $0xfff8,%ebx
  0x00007f191110c5cc: cmp    $0x0,%ebx
  0x00007f191110c5cf: je     0x00007f191110c6a6  ; OopMap{rax=Oop off=437}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x00007f191110c5d5: test   %eax,0x16387b25(%rip)        # 0x00007f1927494100
                                                ;   {poll}
  0x00007f191110c5db: movabs $0x7f190cd58ed0,%rsi  ;   {metadata(method data for {method} {0x00007f190cb5e180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110c5e5: incl   0x1c0(%rsi)        ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x00007f191110c5eb: cmp    %edi,%ecx
  0x00007f191110c5ed: movabs $0x7f190cd58ed0,%rsi  ;   {metadata(method data for {method} {0x00007f190cb5e180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110c5f7: movabs $0x180,%rbx
  0x00007f191110c601: jge    0x00007f191110c611
  0x00007f191110c607: movabs $0x190,%rbx
  0x00007f191110c611: mov    (%rsi,%rbx,1),%r8
  0x00007f191110c615: lea    0x1(%r8),%r8
  0x00007f191110c619: mov    %r8,(%rsi,%rbx,1)
  0x00007f191110c61d: jge    0x00007f191110c637
  0x00007f191110c623: jmpq   0x00007f191110c558  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00007f191110c628: mov    %rcx,%rax
  0x00007f191110c62b: add    $0x30,%rsp
  0x00007f191110c62f: pop    %rbp
  0x00007f191110c630: test   %eax,0x16387aca(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191110c636: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@54 (line 1560)

  0x00007f191110c637: mov    $0xffffffff,%eax
  0x00007f191110c63c: add    $0x30,%rsp
  0x00007f191110c640: pop    %rbp
  0x00007f191110c641: test   %eax,0x16387ab9(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191110c647: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@62 (line 1563)

  0x00007f191110c648: mov    %rsi,%rdi
  0x00007f191110c64b: movabs $0x7f190cd58ed0,%rbx  ;   {metadata(method data for {method} {0x00007f190cb5e180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110c655: addq   $0x1,0x1d8(%rbx)
  0x00007f191110c65d: nop
  0x00007f191110c65e: nop
  0x00007f191110c65f: callq  0x00007f1911046020  ; OopMap{off=580}
                                                ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1565)
                                                ;   {optimized virtual_call}
  0x00007f191110c664: add    $0x30,%rsp
  0x00007f191110c668: pop    %rbp
  0x00007f191110c669: test   %eax,0x16387a91(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191110c66f: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@69 (line 1565)

  0x00007f191110c670: mov    $0xffffffff,%eax
  0x00007f191110c675: add    $0x30,%rsp
  0x00007f191110c679: pop    %rbp
  0x00007f191110c67a: test   %eax,0x16387a80(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191110c680: retq   
  0x00007f191110c681: mov    %rax,0x8(%rsp)
  0x00007f191110c686: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191110c68e: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop off=627}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)
                                                ;   {runtime_call}
  0x00007f191110c693: jmpq   0x00007f191110c47e
  0x00007f191110c698: callq  0x00007f191106e6c0  ; OopMap{rsi=Oop rax=Oop off=637}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x00007f191110c69d: mov    %rcx,(%rsp)
  0x00007f191110c6a1: callq  0x00007f191106ed80  ; OopMap{rax=Oop off=646}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x00007f191110c6a6: mov    %rsi,0x8(%rsp)
  0x00007f191110c6ab: movq   $0x3a,(%rsp)
  0x00007f191110c6b3: callq  0x00007f19110feaa0  ; OopMap{rax=Oop off=664}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)
                                                ;   {runtime_call}
  0x00007f191110c6b8: jmpq   0x00007f191110c5d5
  0x00007f191110c6bd: nop
  0x00007f191110c6be: nop
  0x00007f191110c6bf: mov    0x2a8(%r15),%rax
  0x00007f191110c6c6: movabs $0x0,%r10
  0x00007f191110c6d0: mov    %r10,0x2a8(%r15)
  0x00007f191110c6d7: movabs $0x0,%r10
  0x00007f191110c6e1: mov    %r10,0x2b0(%r15)
  0x00007f191110c6e8: add    $0x30,%rsp
  0x00007f191110c6ec: pop    %rbp
  0x00007f191110c6ed: jmpq   0x00007f191106f220  ;   {runtime_call}
  0x00007f191110c6f2: hlt    
  0x00007f191110c6f3: hlt    
  0x00007f191110c6f4: hlt    
  0x00007f191110c6f5: hlt    
  0x00007f191110c6f6: hlt    
  0x00007f191110c6f7: hlt    
  0x00007f191110c6f8: hlt    
  0x00007f191110c6f9: hlt    
  0x00007f191110c6fa: hlt    
  0x00007f191110c6fb: hlt    
  0x00007f191110c6fc: hlt    
  0x00007f191110c6fd: hlt    
  0x00007f191110c6fe: hlt    
  0x00007f191110c6ff: hlt    
[Stub Code]
  0x00007f191110c700: nop                       ;   {no_reloc}
  0x00007f191110c701: nop
  0x00007f191110c702: nop
  0x00007f191110c703: nop
  0x00007f191110c704: nop
  0x00007f191110c705: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191110c70f: jmpq   0x00007f191110c70f  ;   {runtime_call}
[Exception Handler]
  0x00007f191110c714: callq  0x00007f191106c860  ;   {runtime_call}
  0x00007f191110c719: mov    %rsp,-0x28(%rsp)
  0x00007f191110c71e: sub    $0x80,%rsp
  0x00007f191110c725: mov    %rax,0x78(%rsp)
  0x00007f191110c72a: mov    %rcx,0x70(%rsp)
  0x00007f191110c72f: mov    %rdx,0x68(%rsp)
  0x00007f191110c734: mov    %rbx,0x60(%rsp)
  0x00007f191110c739: mov    %rbp,0x50(%rsp)
  0x00007f191110c73e: mov    %rsi,0x48(%rsp)
  0x00007f191110c743: mov    %rdi,0x40(%rsp)
  0x00007f191110c748: mov    %r8,0x38(%rsp)
  0x00007f191110c74d: mov    %r9,0x30(%rsp)
  0x00007f191110c752: mov    %r10,0x28(%rsp)
  0x00007f191110c757: mov    %r11,0x20(%rsp)
  0x00007f191110c75c: mov    %r12,0x18(%rsp)
  0x00007f191110c761: mov    %r13,0x10(%rsp)
  0x00007f191110c766: mov    %r14,0x8(%rsp)
  0x00007f191110c76b: mov    %r15,(%rsp)
  0x00007f191110c76f: movabs $0x7f192638cf36,%rdi  ;   {external_word}
  0x00007f191110c779: movabs $0x7f191110c719,%rsi  ;   {internal_word}
  0x00007f191110c783: mov    %rsp,%rdx
  0x00007f191110c786: and    $0xfffffffffffffff0,%rsp
  0x00007f191110c78a: callq  0x00007f19260b8990  ;   {runtime_call}
  0x00007f191110c78f: hlt    
[Deopt Handler Code]
  0x00007f191110c790: movabs $0x7f191110c790,%r10  ;   {section_word}
  0x00007f191110c79a: push   %r10
  0x00007f191110c79c: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f191110c7a1: hlt    
  0x00007f191110c7a2: hlt    
  0x00007f191110c7a3: hlt    
  0x00007f191110c7a4: hlt    
  0x00007f191110c7a5: hlt    
  0x00007f191110c7a6: hlt    
  0x00007f191110c7a7: hlt    
<nmethod compile_id='8' compiler='C1' level='3' entry='0x00007f191110c420' size='1848' address='0x00007f191110c290' relocation_offset='296' insts_offset='400' stub_offset='1136' scopes_data_offset='1312' scopes_pcs_offset='1472' dependencies_offset='1824' nul_chk_table_offset='1832' method='java/lang/String indexOf (II)I' bytes='70' count='214' backedge_count='7331' iicount='214' stamp='0.097'/>
<writer thread='139746009892608'/>
[Loaded sun.misc.URLClassPath$FileLoader$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='139745421305600'/>
Decoding compiled method 0x00007f191110ca10:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007f190cb59480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f191110cb80: mov    0x8(%rsi),%r10d
  0x00007f191110cb84: shl    $0x3,%r10
  0x00007f191110cb88: cmp    %rax,%r10
  0x00007f191110cb8b: jne    0x00007f1911045e20  ;   {runtime_call}
  0x00007f191110cb91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f191110cb9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f191110cba0: mov    %eax,-0x14000(%rsp)
  0x00007f191110cba7: push   %rbp
  0x00007f191110cba8: sub    $0x30,%rsp
  0x00007f191110cbac: movabs $0x7f190cccf108,%rdi  ;   {metadata(method data for {method} {0x00007f190cb59480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f191110cbb6: mov    0xdc(%rdi),%ebx
  0x00007f191110cbbc: add    $0x8,%ebx
  0x00007f191110cbbf: mov    %ebx,0xdc(%rdi)
  0x00007f191110cbc5: movabs $0x7f190cb59480,%rdi
<writer thread='139746009892608'/>
[Loaded java.lang.Package from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='139745421305600'/>
                                                ;   {metadata({method} {0x00007f190cb59480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f191110cbcf: and    $0x1ff8,%ebx
  0x00007f191110cbd5: cmp    $0x0,%ebx
  0x00007f191110cbd8: je     0x00007f191110cbf7
  0x00007f191110cbde: mov    %rsi,%rdi          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x00007f191110cbe1: mov    %rsi,0x20(%rsp)
  0x00007f191110cbe6: callq  0x00007f191106e420  ; OopMap{[32]=Oop off=107}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x00007f191110cbeb: add    $0x30,%rsp
  0x00007f191110cbef: pop    %rbp
  0x00007f191110cbf0: test   %eax,0x1638750a(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191110cbf6: retq   
  0x00007f191110cbf7: mov    %rdi,0x8(%rsp)
  0x00007f191110cbfc: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191110cc04: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ;   {runtime_call}
  0x00007f191110cc09: jmp    0x00007f191110cbde
  0x00007f191110cc0b: nop
  0x00007f191110cc0c: nop
  0x00007f191110cc0d: mov    0x2a8(%r15),%rax
  0x00007f191110cc14: movabs $0x0,%r10
  0x00007f191110cc1e: mov    %r10,0x2a8(%r15)
  0x00007f191110cc25: movabs $0x0,%r10
  0x00007f191110cc2f: mov    %r10,0x2b0(%r15)
  0x00007f191110cc36: add    $0x30,%rsp
  0x00007f191110cc3a: pop    %rbp
  0x00007f191110cc3b: jmpq   0x00007f191106f220  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x00007f191110cc40: callq  0x00007f191106c860  ;   {no_reloc}
  0x00007f191110cc45: mov    %rsp,-0x28(%rsp)
  0x00007f191110cc4a: sub    $0x80,%rsp
  0x00007f191110cc51: mov    %rax,0x78(%rsp)
  0x00007f191110cc56: mov    %rcx,0x70(%rsp)
  0x00007f191110cc5b: mov    %rdx,0x68(%rsp)
  0x00007f191110cc60: mov    %rbx,0x60(%rsp)
  0x00007f191110cc65: mov    %rbp,0x50(%rsp)
  0x00007f191110cc6a: mov    %rsi,0x48(%rsp)
  0x00007f191110cc6f: mov    %rdi,0x40(%rsp)
  0x00007f191110cc74: mov    %r8,0x38(%rsp)
  0x00007f191110cc79: mov    %r9,0x30(%rsp)
  0x00007f191110cc7e: mov    %r10,0x28(%rsp)
  0x00007f191110cc83: mov    %r11,0x20(%rsp)
  0x00007f191110cc88: mov    %r12,0x18(%rsp)
  0x00007f191110cc8d: mov    %r13,0x10(%rsp)
  0x00007f191110cc92: mov    %r14,0x8(%rsp)
  0x00007f191110cc97: mov    %r15,(%rsp)
  0x00007f191110cc9b: movabs $0x7f192638cf36,%rdi  ;   {external_word}
  0x00007f191110cca5: movabs $0x7f191110cc45,%rsi  ;   {internal_word}
  0x00007f191110ccaf: mov    %rsp,%rdx
  0x00007f191110ccb2: and    $0xfffffffffffffff0,%rsp
  0x00007f191110ccb6: callq  0x00007f19260b8990  ;   {runtime_call}
  0x00007f191110ccbb: hlt    
[Deopt Handler Code]
  0x00007f191110ccbc: movabs $0x7f191110ccbc,%r10  ;   {section_word}
  0x00007f191110ccc6: push   %r10
  0x00007f191110ccc8: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f191110cccd: hlt    
  0x00007f191110ccce: hlt    
  0x00007f191110cccf: hlt    
<nmethod compile_id='11' compiler='C1' level='3' entry='0x00007f191110cb80' size='832' address='0x00007f191110ca10' relocation_offset='296' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='744' dependencies_offset='824' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1783' iicount='1783' stamp='0.097'/>
Decoding compiled method 0x00007f191110cd90:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007f190cb5cc60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f191110cf00: mov    0x8(%rsi),%r10d
  0x00007f191110cf04: shl    $0x3,%r10
  0x00007f191110cf08: cmp    %rax,%r10
  0x00007f191110cf0b: jne    0x00007f1911045e20  ;   {runtime_call}
  0x00007f191110cf11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f191110cf1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f191110cf20: mov    %eax,-0x14000(%rsp)
  0x00007f191110cf27: push   %rbp
  0x00007f191110cf28: sub    $0x30,%rsp
  0x00007f191110cf2c: movabs $0x7f190cd593e0,%rax  ;   {metadata(method data for {method} {0x00007f190cb5cc60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110cf36: mov    0xdc(%rax),%edi
  0x00007f191110cf3c: add    $0x8,%edi
  0x00007f191110cf3f: mov    %edi,0xdc(%rax)
  0x00007f191110cf45: movabs $0x7f190cb5cc60,%rax  
<writer thread='139746009892608'/>
[Loaded sun.nio.ByteBuffered from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='139745421305600'/>
;   {metadata({method} {0x00007f190cb5cc60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110cf4f: and    $0x1ff8,%edi
  0x00007f191110cf55: cmp    $0x0,%edi
  0x00007f191110cf58: je     0x00007f191110cf74  ;*aload_0
                                                ; - java.lang.String::length@0 (line 623)

  0x00007f191110cf5e: mov    0xc(%rsi),%eax
  0x00007f191110cf61: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x00007f191110cf65: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x00007f191110cf88
  0x00007f191110cf68: add    $0x30,%rsp
  0x00007f191110cf6c: pop    %rbp
  0x00007f191110cf6d: test   %eax,0x1638718d(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191110cf73: retq   
  0x00007f191110cf74: mov    %rax,0x8(%rsp)
  0x00007f191110cf79: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191110cf81: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop off=134}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ;   {runtime_call}
  0x00007f191110cf86: jmp    0x00007f191110cf5e
  0x00007f191110cf88: callq  0x00007f191106e6c0  ; OopMap{off=141}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x00007f191110cf8d: nop
  0x00007f191110cf8e: nop
  0x00007f191110cf8f: mov    0x2a8(%r15),%rax
  0x00007f191110cf96: movabs $0x0,%r10
  0x00007f191110cfa0: mov    %r10,0x2a8(%r15)
  0x00007f191110cfa7: movabs $0x0,%r10
  0x00007f191110cfb1: mov    %r10,0x2b0(%r15)
  0x00007f191110cfb8: add    $0x30,%rsp
  0x00007f191110cfbc: pop    %rbp
  0x00007f191110cfbd: jmpq   0x00007f191106f220  ;   {runtime_call}
  0x00007f191110cfc2: hlt    
  0x00007f191110cfc3: hlt    
  0x00007f191110cfc4: hlt    
  0x00007f191110cfc5: hlt    
  0x00007f191110cfc6: hlt    
  0x00007f191110cfc7: hlt    
  0x00007f191110cfc8: hlt    
  0x00007f191110cfc9: hlt    
  0x00007f191110cfca: hlt    
  0x00007f191110cfcb: hlt    
  0x00007f191110cfcc: hlt    
  0x00007f191110cfcd: hlt    
  0x00007f191110cfce: hlt    
  0x00007f191110cfcf: hlt    
  0x00007f191110cfd0: hlt    
  0x00007f191110cfd1: hlt    
  0x00007f191110cfd2: hlt    
  0x00007f191110cfd3: hlt    
  0x00007f191110cfd4: hlt    
  0x00007f191110cfd5: hlt    
  0x00007f191110cfd6: hlt    
  0x00007f191110cfd7: hlt    
  0x00007f191110cfd8: hlt    
  0x00007f191110cfd9: hlt    
  0x00007f191110cfda: hlt    
  0x00007f191110cfdb: hlt    
  0x00007f191110cfdc: hlt    
  0x00007f191110cfdd: hlt    
  0x00007f191110cfde: hlt    
  0x00007f191110cfdf: hlt    
[Exception Handler]
[Stub Code]
  0x00007f191110cfe0: callq  0x00007f191106c860  ;   {no_reloc}
  0x00007f191110cfe5: mov    %rsp,-0x28(%rsp)
  0x00007f191110cfea: sub    $0x80,%rsp
  0x00007f191110cff1: mov    %rax,0x78(%rsp)
  0x00007f191110cff6: mov    %rcx,0x70(%rsp)
  0x00007f191110cffb: mov    %rdx,0x68(%rsp)
  0x00007f191110d000: mov    %rbx,0x60(%rsp)
  0x00007f191110d005: mov    %rbp,0x50(%rsp)
  0x00007f191110d00a: mov    %rsi,0x48(%rsp)
  0x00007f191110d00f: mov    %rdi,0x40(%rsp)
  0x00007f191110d014: mov    %r8,0x38(%rsp)
  0x00007f191110d019: mov    %r9,0x30(%rsp)
  0x00007f191110d01e: mov    %r10,0x28(%rsp)
  0x00007f191110d023: mov    %r11,0x20(%rsp)
  0x00007f191110d028: mov    %r12,0x18(%rsp)
  0x00007f191110d02d: mov    %r13,0x10(%rsp)
  0x00007f191110d032: mov    %r14,0x8(%rsp)
  0x00007f191110d037: mov    %r15,(%rsp)
  0x00007f191110d03b: movabs $0x7f192638cf36,%rdi  ;   {external_word}
  0x00007f191110d045: movabs $0x7f191110cfe5,%rsi  ;   {internal_word}
  0x00007f191110d04f: mov    %rsp,%rdx
  0x00007f191110d052: and    $0xfffffffffffffff0,%rsp
  0x00007f191110d056: callq  0x00007f19260b8990  ;   {runtime_call}
  0x00007f191110d05b: hlt    
[Deopt Handler Code]
  0x00007f191110d05c: movabs $0x7f191110d05c,%r10  ;   {section_word}
  0x00007f191110d066: push   %r10
  0x00007f191110d068: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f191110d06d: hlt    
  0x00007f191110d06e: hlt    
  0x00007f191110d06f: hlt    
<nmethod compile_id='9' compiler='C1' level='3' entry='0x00007f191110cf00' size='920' address='0x00007f191110cd90' relocation_offset='296' insts_offset='368' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' nul_chk_table_offset='904' method='java/lang/String length ()I' bytes='6' count='679' iicount='679' stamp='0.098'/>
<writer thread='139746009892608'/>
[Loaded sun.misc.PerfCounter from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='139745421305600'/>
Decoding compiled method 0x00007f191110d150:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007f190cbcd6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lan
<writer thread='139746009892608'/>
[Loaded sun.misc.Perf$GetPerfAction from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='139745421305600'/>
g/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = int
  #           [sp+0xb0]  (sp of caller)
  0x00007f191110d2e0: mov    0x8(%rsi),%r10d
  0x00007f191110d2e4: shl    $0x3,%r10
  0x00007f191110d2e8: cmp    %rax,%r10
  0x00007f191110d2eb: jne    0x00007f1911045e20  ;   {runtime_call}
  0x00007f191110d2f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f191110d2fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f191110d300: mov    %eax,-0x14000(%rsp)
  0x00007f191110d307: push   %rbp
  0x00007f191110d308: sub    $0xa0,%rsp
  0x00007f191110d30f: movabs $0x7f190cd5f480,%rdi  ;   {metadata(method data for {method} {0x00007f190cbcd6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f191110d319: mov    0xdc(%rdi),%ebx
  0x00007f191110d31f: add    $0x8,%ebx
  0x00007f191110d322: mov    %ebx,0xdc(%rdi)
  0x00007f191110d328: movabs $0x7f190cbcd6a0,%rdi  ;   {metadata({method} {0x00007f190cbcd6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f191110d332: and    $0x1ff8,%ebx
  0x00007f191110d338: cmp    $0x0,%ebx
  0x00007f191110d33b: je     0x00007f191110d5ef  ;*iload_1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 123)

  0x00007f191110d341: mov    0x10(%rsi),%edi
  0x00007f191110d344: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x00007f191110d348: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x00007f191110d606
  0x00007f191110d34b: mov    %rdx,%rax
  0x00007f191110d34e: sub    %ebx,%eax
  0x00007f191110d350: cmp    $0x0,%eax
  0x00007f191110d353: movabs $0x7f190cd5f480,%rax  ;   {metadata(method data for {method} {0x00007f190cbcd6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f191110d35d: movabs $0x108,%rcx
  0x00007f191110d367: jle    0x00007f191110d377
  0x00007f191110d36d: movabs $0x118,%rcx
  0x00007f191110d377: mov    (%rax,%rcx,1),%r8
  0x00007f191110d37b: lea    0x1(%r8),%r8
  0x00007f191110d37f: mov    %r8,(%rax,%rcx,1)
  0x00007f191110d383: jle    0x00007f191110d5e0  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)

  0x00007f191110d389: mov    %ebx,0x78(%rsp)
  0x00007f191110d38d: mov    %rdi,0x80(%rsp)
  0x00007f191110d395: mov    %rsi,%rax
  0x00007f191110d398: movabs $0x7f190cd5f480,%rcx  ;   {metadata(method data for {method} {0x00007f190cbcd6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f191110d3a2: addq   $0x1,0x128(%rcx)
  0x00007f191110d3aa: mov    %rsi,%rax
  0x00007f191110d3ad: mov    %rax,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00007f191110d3b0: mov    %rax,0x88(%rsp)
  0x00007f191110d3b8: nop
  0x00007f191110d3b9: nop
  0x00007f191110d3ba: nop
  0x00007f191110d3bb: nop
  0x00007f191110d3bc: nop
  0x00007f191110d3bd: nop
  0x00007f191110d3be: nop
  0x00007f191110d3bf: callq  0x00007f1911046020  ; OopMap{[136]=Oop [128]=Oop off=228}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x00007f191110d3c4: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00007f191110d3c7: movabs $0x7f190cd5f480,%rbx  ;   {metadata(method data for {method} {0x00007f190cbcd6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f191110d3d1: addq   $0x1,0x138(%rbx)
  0x00007f191110d3d9: movabs $0x7f190cd5f820,%rbx  ;   {metadata(method data for {method} {0x00007f190cc72ef0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f191110d3e3: mov    0xdc(%rbx),%edx
  0x00007f191110d3e9: add    $0x8,%edx
  0x00007f191110d3ec: mov    %edx,0xdc(%rbx)
  0x00007f191110d3f2: movabs $0x7f190cc72ef0,%rbx  ;   {metadata({method} {0x00007f190cc72ef0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f191110d3fc: and    $0x7ffff8,%edx
  0x00007f191110d402: cmp    $0x0,%edx
  0x00007f191110d405: je     0x00007f191110d60b
  0x00007f191110d40b: mov    %r8,%rbx
  0x00007f191110d40e: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00007f191110d418: movslq %ebx,%rbx
  0x00007f191110d41b: mov    %rbx,%rdi
  0x00007f191110d41e: cmp    $0xffffff,%rbx
  0x00007f191110d425: ja     0x00007f191110d622
  0x00007f191110d42b: movabs $0x17,%rsi
  0x00007f191110d435: lea    (%rsi,%rbx,2),%rsi
  0x00007f191110d439: and    $0xfffffffffffffff8,%rsi
  0x00007f191110d43d: mov    0x60(%r15),%rax
  0x00007f191110d441: lea    (%rax,%rsi,1),%rsi
  0x00007f191110d445: cmp    0x70(%r15),%rsi
  0x00007f191110d449: ja     0x00007f191110d622
  0x00007f191110d44f: mov    %rsi,0x60(%r15)
  0x00007f191110d453: sub    %rax,%rsi
  0x00007f191110d456: movq   $0x1,(%rax)
  0x00007f191110d45d: mov    %rdx,%rcx
  0x00007f191110d460: shr    $0x3,%rcx
  0x00007f191110d464: mov    %ecx,0x8(%rax)
  0x00007f191110d467: mov    %ebx,0xc(%rax)
  0x00007f191110d46a: sub    $0x10,%rsi
  0x00007f191110d46e: je     0x00007f191110d485
  0x00007f191110d474: xor    %rbx,%rbx
  0x00007f191110d477: shr    $0x3,%rsi
  0x00007f191110d47b: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007f191110d480: dec    %rsi
  0x00007f191110d483: jne    0x00007f191110d47b  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00007f191110d485: movabs $0x7f190cd5f820,%rsi  ;   {metadata(method data for {method} {0x00007f190cc72ef0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f191110d48f: addq   $0x1,0x108(%rsi)
  0x00007f191110d497: movabs $0x7f190cd21ce8,%rsi  ;   {metadata(method data for {method} {0x00007f190cc4e7a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f191110d4a1: mov    0xdc(%rsi),%edx
  0x00007f191110d4a7: add    $0x8,%edx
  0x00007f191110d4aa: mov    %edx,0xdc(%rsi)
  0x00007f191110d4b0: movabs $0x7f190cc4e7a8,%rsi  ;   {metadata({method} {0x00007f190cc4e7a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f191110d4ba: and    $0x7ffff8,%edx
  0x00007f191110d4c0: cmp    $0x0,%edx
  0x00007f191110d4c3: je     0x00007f191110d62c
  0x00007f191110d4c9: mov    0x78(%rsp),%ebx
  0x00007f191110d4cd: cmp    %r8d,%ebx
  0x00007f191110d4d0: movabs $0x7f190cd21ce8,%rsi  ;   {metadata(method data for {method} {0x00007f190cc4e7a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f191110d4da: movabs $0x108,%rdx
  0x00007f191110d4e4: jg     0x00007f191110d4f4
  0x00007f191110d4ea: movabs $0x118,%rdx
  0x00007f191110d4f4: mov    (%rsi,%rdx,1),%rcx
  0x00007f191110d4f8: lea    0x1(%rcx),%rcx
  0x00007f191110d4fc: mov    %rcx,(%rsi,%rdx,1)
  0x00007f191110d500: jg     0x00007f191110d51b  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00007f191110d506: movabs $0x7f190cd21ce8,%rsi  ;   {metadata(method data for {method} {0x00007f190cc4e7a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f191110d510: incl   0x128(%rsi)
  0x00007f191110d516: jmpq   0x00007f191110d51e  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00007f191110d51b: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00007f191110d51e: mov    0x80(%rsp),%rdi
  0x00007f191110d526: movabs $0x7f190cd5f820,%rsi  ;   {metadata(method data for {method} {0x00007f190cc72ef0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f191110d530: addq   $0x1,0x118(%rsi)
  0x00007f191110d538: mov    %rdi,%rsi
  0x00007f191110d53b: mov    $0x0,%edx
  0x00007f191110d540: mov    %rax,%rcx
  0x00007f191110d543: mov    $0x0,%r8d
  0x00007f191110d549: mov    %rbx,%r9
  0x00007f191110d54c: mov    %rax,0x90(%rsp)
  0x00007f191110d554: lea    (%rdx,%r9,1),%rdi
  0x00007f191110d558: cmp    0xc(%rsi),%edi
  0x00007f191110d55b: ja     0x00007f191110d643
  0x00007f191110d561: lea    (%r8,%r9,1),%rdi
  0x00007f191110d565: cmp    0xc(%rcx),%edi
  0x00007f191110d568: ja     0x00007f191110d643
  0x00007f191110d56e: test   %r9d,%r9d
  0x00007f191110d571: jl     0x00007f191110d643
  0x00007f191110d577: je     0x00007f191110d5b3
  0x00007f191110d57d: movslq %edx,%rdx
  0x00007f191110d580: movslq %r8d,%r8
  0x00007f191110d583: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007f191110d588: lea    0x10(%rcx,%r8,2),%rsi
  0x00007f191110d58d: mov    %r9,%rdx
  0x00007f191110d590: test   $0xf,%esp
  0x00007f191110d596: je     0x00007f191110d5ae
  0x00007f191110d59c: sub    $0x8,%rsp
  0x00007f191110d5a0: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007f191110d5a5: add    $0x8,%rsp
  0x00007f191110d5a9: jmpq   0x00007f191110d5b3
  0x00007f191110d5ae: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00007f191110d5b3: mov    0x90(%rsp),%rax
  0x00007f191110d5bb: mov    0x88(%rsp),%rsi
  0x00007f191110d5c3: mov    %rax,%r10
  0x00007f191110d5c6: shr    $0x3,%r10
  0x00007f191110d5ca: mov    %r10d,0x10(%rsi)
  0x00007f191110d5ce: shr    $0x9,%rsi
  0x00007f191110d5d2: movabs $0x7f190d1ff000,%rdi
  0x00007f191110d5dc: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x00007f191110d5e0: add    $0xa0,%rsp
  0x00007f191110d5e7: pop    %rbp
  0x00007f191110d5e8: test   %eax,0x16386b12(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191110d5ee: retq   
  0x00007f191110d5ef: mov    %rdi,0x8(%rsp)
  0x00007f191110d5f4: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191110d5fc: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop off=801}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ;   {runtime_call}
  0x00007f191110d601: jmpq   0x00007f191110d341
  0x00007f191110d606: callq  0x00007f191106e6c0  ; OopMap{rsi=Oop rdi=Oop off=811}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x00007f191110d60b: mov    %rbx,0x8(%rsp)
  0x00007f191110d610: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191110d618: callq  0x00007f19110feaa0  ; OopMap{[136]=Oop [128]=Oop off=829}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00007f191110d61d: jmpq   0x00007f191110d40b
  0x00007f191110d622: callq  0x00007f191106d4a0  ; OopMap{[136]=Oop [128]=Oop off=839}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00007f191110d627: jmpq   0x00007f191110d485
  0x00007f191110d62c: mov    %rsi,0x8(%rsp)
  0x00007f191110d631: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191110d639: callq  0x00007f19110feaa0  ; OopMap{[136]=Oop [128]=Oop rax=Oop off=862}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00007f191110d63e: jmpq   0x00007f191110d4c9
  0x00007f191110d643: nop
  0x00007f191110d644: nop
  0x00007f191110d645: nop
  0x00007f191110d646: nop
  0x00007f191110d647: callq  0x00007f1911046420  ; OopMap{[136]=Oop [144]=Oop off=876}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {static_call}
  0x00007f191110d64c: jmpq   0x00007f191110d5b3
  0x00007f191110d651: nop
  0x00007f191110d652: nop
  0x00007f191110d653: mov    0x2a8(%r15),%rax
  0x00007f191110d65a: movabs $0x0,%r10
  0x00007f191110d664: mov    %r10,0x2a8(%r15)
  0x00007f191110d66b: movabs $0x0,%r10
  0x00007f191110d675: mov    %r10,0x2b0(%r15)
  0x00007f191110d67c: add    $0xa0,%rsp
  0x00007f191110d683: pop    %rbp
  0x00007f191110d684: jmpq   0x00007f191106f220  ;   {runtime_call}
  0x00007f191110d689: hlt    
  0x00007f191110d68a: hlt    
  0x00007f191110d68b: hlt    
  0x00007f191110d68c: hlt    
  0x00007f191110d68d: hlt    
  0x00007f191110d68e: hlt    
  0x00007f191110d68f: hlt    
  0x00007f191110d690: hlt    
  0x00007f191110d691: hlt    
  0x00007f191110d692: hlt    
  0x00007f191110d693: hlt    
  0x00007f191110d694: hlt    
  0x00007f191110d695: hlt    
  0x00007f191110d696: hlt    
  0x00007f191110d697: hlt    
  0x00007f191110d698: hlt    
  0x00007f191110d699: hlt    
  0x00007f191110d69a: hlt    
  0x00007f191110d69b: hlt    
  0x00007f191110d69c: hlt    
  0x00007f191110d69d: hlt    
  0x00007f191110d69e: hlt    
  0x00007f191110d69f: hlt    
[Stub Code]
  0x00007f191110d6a0: nop                       ;   {no_reloc}
  0x00007f191110d6a1: nop
  0x00007f191110d6a2: nop
  0x00007f191110d6a3: nop
  0x00007f191110d6a4: nop
  0x00007f191110d6a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191110d6af: jmpq   0x00007f191110d6af  ;   {runtime_call}
  0x00007f191110d6b4: nop
  0x00007f191110d6b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191110d6bf: jmpq   0x00007f191110d6bf  ;   {runtime_call}
[Exception Handler]
  0x00007f191110d6c4: callq  0x00007f191106c860  ;   {runtime_call}
  0x00007f191110d6c9: mov    %rsp,-0x28(%rsp)
  0x00007f191110d6ce: sub    $0x80,%rsp
  0x00007f191110d6d5: mov    %rax,0x78(%rsp)
  0x00007f191110d6da: mov    %rcx,0x70(%rsp)
  0x00007f191110d6df: mov    %rdx,0x68(%rsp)
  0x00007f191110d6e4: mov    %rbx,0x60(%rsp)
  0x00007f191110d6e9: mov    %rbp,0x50(%rsp)
  0x00007f191110d6ee: mov    %rsi,0x48(%rsp)
  0x00007f191110d6f3: mov    %rdi,0x40(%rsp)
  0x00007f191110d6f8: mov    %r8,0x38(%rsp)
  0x00007f191110d6fd: mov    %r9,0x30(%rsp)
  0x00007f191110d702: mov    %r10,0x28(%rsp)
  0x00007f191110d707: mov    %r11,0x20(%rsp)
  0x00007f191110d70c: mov    %r12,0x18(%rsp)
  0x00007f191110d711: mov    %r13,0x10(%rsp)
  0x00007f191110d716: mov    %r14,0x8(%rsp)
  0x00007f191110d71b: mov    %r15,(%rsp)
  0x00007f191110d71f: movabs $0x7f192638cf36,%rdi  ;   {external_word}
  0x00007f191110d729: movabs $0x7f191110d6c9,%rsi  ;   {internal_word}
  0x00007f191110d733: mov    %rsp,%rdx
  0x00007f191110d736: and    $0xfffffffffffffff0,%rsp
  0x00007f191110d73a: callq  0x00007f19260b8990  ;   {runtime_call}
  0x00007f191110d73f: hlt    
[Deopt Handler Code]
  0x00007f191110d740: movabs $0x7f191110d740,%r10  ;   {section_word}
  0x00007f191110d74a: push   %r10
  0x00007f191110d74c: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f191110d751: hlt    
  0x00007f191110d752: hlt    
  0x00007f191110d753: hlt    
  0x00007f191110d754: hlt    
  0x00007f191110d755: hlt    
  0x00007f191110d756: hlt    
  0x00007f191110d757: hlt    
<nmethod compile_id='10' compiler='C1' level='3' entry='0x00007f191110d2e0' size='2128' address='0x00007f191110d150' relocation_offset='296' insts_offset='400' stub_offset='1360' scopes_data_offset='1568' scopes_pcs_offset='1768' dependencies_offset='2104' nul_chk_table_offset='2112' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='335' iicount='335' stamp='0.099'/>
<writer thread='139746009892608'/>
[Loaded sun.misc.Perf from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.misc.PerfCounter$CoreCounters from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.nio.ch.DirectBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.MappedByteBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.DirectByteBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.LongBuffer from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.nio.DirectLongBufferU from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.PermissionCollection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.Permissions from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<task_queued compile_id='12' method='java/lang/String getChars (II[CI)V' bytes='62' count='256' iicount='256' level='3' stamp='0.101' comment='tiered' hot_count='256'/>
<task_queued compile_id='13' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='259' iicount='259' level='3' stamp='0.101' comment='tiered' hot_count='259'/>
<writer thread='139745421305600'/>
Decoding compiled method 0x00007f191110e1d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007f190cb5d208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;jav
<writer thread='139746009892608'/>
[Loaded java.net.URLConnection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='139745421305600'/>
a/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8:r8     = &apos;[C&apos;
  # parm3:    r9        = int
  #           [sp+0x70]  (sp of caller)
  0x00007f191110e380: mov    0x8(%rsi),%r10d
  0x00007f191110e384: shl    $0x3,%r10
  0x00007f191110e388: cmp    %rax,%r10
  0x00007f191110e38b: jne    0x00007f1911045e20  ;   {runtime_call}
  0x00007f191110e391: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f191110e39c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f191110e3a0: mov    %eax,-0x14000(%rsp)
  0x00007f191110e3a7: push   %rbp
  0x00007f191110e3a8: sub    $0x60,%rsp
  0x00007f191110e3ac: mov    %rdx,%rdi
  0x00007f191110e3af: movabs $0x7f190cd6fa80,%rdx  ;   {metadata(method data for {method} {0x00007f190cb5d208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110e3b9: mov    0xdc(%rdx),%ebx
  0x00007f191110e3bf: add    $0x8,%ebx
  0x00007f191110e3c2: mov    %ebx,0xdc(%rdx)
  0x00007f191110e3c8: movabs $0x7f190cb5d208,%rdx  ;   {metadata({method} {0x00007f190cb5d208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110e3d2: and    $0x1ff8,%ebx
  0x00007f191110e3d8: cmp    $0x0,%ebx
  0x00007f191110e3db: je     0x00007f191110e606  ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 817)

  0x00007f191110e3e1: cmp    $0x0,%edi
  0x00007f191110e3e4: movabs $0x7f190cd6fa80,%rdx  ;   {metadata(method data for {method} {0x00007f190cb5d208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110e3ee: movabs $0x108,%rbx
  0x00007f191110e3f8: jge    0x00007f191110e408
  0x00007f191110e3fe: movabs $0x118,%rbx
  0x00007f191110e408: mov    (%rdx,%rbx,1),%rax
  0x00007f191110e40c: lea    0x1(%rax),%rax
  0x00007f191110e410: mov    %rax,(%rdx,%rbx,1)
  0x00007f191110e414: jl     0x00007f191110e5c6  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x00007f191110e41a: mov    0xc(%rsi),%esi
  0x00007f191110e41d: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x00007f191110e421: mov    0xc(%rsi),%edx     ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x00007f191110e61d
  0x00007f191110e424: cmp    %edx,%ecx
  0x00007f191110e426: movabs $0x7f190cd6fa80,%rdx  ;   {metadata(method data for {method} {0x00007f190cb5d208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110e430: movabs $0x138,%rbx
  0x00007f191110e43a: jle    0x00007f191110e44a
  0x00007f191110e440: movabs $0x148,%rbx
  0x00007f191110e44a: mov    (%rdx,%rbx,1),%rax
  0x00007f191110e44e: lea    0x1(%rax),%rax
  0x00007f191110e452: mov    %rax,(%rdx,%rbx,1)
  0x00007f191110e456: jg     0x00007f191110e586  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x00007f191110e45c: cmp    %ecx,%edi
  0x00007f191110e45e: movabs $0x7f190cd6fa80,%rdx  ;   {metadata(method data for {method} {0x00007f190cb5d208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110e468: movabs $0x168,%rbx
  0x00007f191110e472: jle    0x00007f191110e482
  0x00007f191110e478: movabs $0x178,%rbx
  0x00007f191110e482: mov    (%rdx,%rbx,1),%rax
  0x00007f191110e486: lea    0x1(%rax),%rax
  0x00007f191110e48a: mov    %rax,(%rdx,%rbx,1)
  0x00007f191110e48e: jg     0x00007f191110e53c  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x00007f191110e494: movabs $0x7f190cd6fa80,%rdx  ;   {metadata(method data for {method} {0x00007f190cb5d208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110e49e: addq   $0x1,0x198(%rdx)
  0x00007f191110e4a6: mov    %rcx,%rbx
  0x00007f191110e4a9: sub    %edi,%ebx
  0x00007f191110e4ab: mov    %rdi,%rdx
  0x00007f191110e4ae: mov    %r8,%rcx
  0x00007f191110e4b1: mov    %r9,%r8
  0x00007f191110e4b4: mov    %rbx,%r9
  0x00007f191110e4b7: test   %rcx,%rcx
  0x00007f191110e4ba: je     0x00007f191110e622
  0x00007f191110e4c0: test   %edx,%edx
  0x00007f191110e4c2: jl     0x00007f191110e622
  0x00007f191110e4c8: test   %r8d,%r8d
  0x00007f191110e4cb: jl     0x00007f191110e622
  0x00007f191110e4d1: lea    (%rdx,%r9,1),%rdi
  0x00007f191110e4d5: cmp    0xc(%rsi),%edi
  0x00007f191110e4d8: ja     0x00007f191110e622
  0x00007f191110e4de: lea    (%r8,%r9,1),%rdi
  0x00007f191110e4e2: cmp    0xc(%rcx),%edi
  0x00007f191110e4e5: ja     0x00007f191110e622
  0x00007f191110e4eb: test   %r9d,%r9d
  0x00007f191110e4ee: jl     0x00007f191110e622
  0x00007f191110e4f4: je     0x00007f191110e530
  0x00007f191110e4fa: movslq %edx,%rdx
  0x00007f191110e4fd: movslq %r8d,%r8
  0x00007f191110e500: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007f191110e505: lea    0x10(%rcx,%r8,2),%rsi
  0x00007f191110e50a: mov    %r9,%rdx
  0x00007f191110e50d: test   $0xf,%esp
  0x00007f191110e513: je     0x00007f191110e52b
  0x00007f191110e519: sub    $0x8,%rsp
  0x00007f191110e51d: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x00007f191110e522: add    $0x8,%rsp
  0x00007f191110e526: jmpq   0x00007f191110e530
  0x00007f191110e52b: callq  Stub::jshort_arraycopy  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {runtime_call}
  0x00007f191110e530: add    $0x60,%rsp
  0x00007f191110e534: pop    %rbp
  0x00007f191110e535: test   %eax,0x16385bc5(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191110e53b: retq                      ;*return
                                                ; - java.lang.String::getChars@61 (line 827)

  0x00007f191110e53c: nopl   0x0(%rax)
  0x00007f191110e540: jmpq   0x00007f191110e640  ;   {no_reloc}
  0x00007f191110e545: add    %al,(%rax)
  0x00007f191110e547: add    %al,(%rax)
  0x00007f191110e549: add    %ch,%cl
  0x00007f191110e54b: sti    
  0x00007f191110e54c: add    %al,(%rax)
  0x00007f191110e54e: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@36 (line 824)

  0x00007f191110e551: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00007f190cb5d208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110e554: cmp    $0xd6,%dl
  0x00007f191110e557: or     $0x19,%al
  0x00007f191110e559: jg     0x00007f191110e55b
  0x00007f191110e55b: add    %cl,-0x7d(%rax)
  0x00007f191110e55e: xchg   %cl,0x1000001(%rax)
  0x00007f191110e564: sub    %edi,%ecx
  0x00007f191110e566: mov    %rcx,%rdx
  0x00007f191110e569: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)

  0x00007f191110e56c: mov    %rax,0x38(%rsp)
  0x00007f191110e571: nop
  0x00007f191110e572: nop
  0x00007f191110e573: nop
  0x00007f191110e574: nop
  0x00007f191110e575: nop
  0x00007f191110e576: nop
  0x00007f191110e577: callq  0x00007f1911046020  ; OopMap{[56]=Oop off=508}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x00007f191110e57c: mov    0x38(%rsp),%rax
  0x00007f191110e581: jmpq   0x00007f191110e6ce  ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x00007f191110e586: xchg   %ax,%ax
  0x00007f191110e588: jmpq   0x00007f191110e666  ;   {no_reloc}
  0x00007f191110e58d: add    %al,(%rax)
  0x00007f191110e58f: add    %al,(%rax)
  0x00007f191110e591: add    %ch,%cl
  0x00007f191110e593: flds   (%rax)
  0x00007f191110e595: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@22 (line 821)

  0x00007f191110e597: mov    %rax,%rdx
  0x00007f191110e59a: movabs $0x7f190cd6fa80,%rsi  ;   {metadata(method data for {method} {0x00007f190cb5d208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110e5a4: addq   $0x1,0x158(%rsi)
  0x00007f191110e5ac: mov    %rcx,%rdx
  0x00007f191110e5af: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)

  0x00007f191110e5b2: mov    %rax,0x40(%rsp)
  0x00007f191110e5b7: callq  0x00007f1911046020  ; OopMap{[64]=Oop off=572}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x00007f191110e5bc: mov    0x40(%rsp),%rax
  0x00007f191110e5c1: jmpq   0x00007f191110e6ce  ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x00007f191110e5c6: xchg   %ax,%ax
  0x00007f191110e5c8: jmpq   0x00007f191110e68c  ;   {no_reloc}
  0x00007f191110e5cd: add    %al,(%rax)
  0x00007f191110e5cf: add    %al,(%rax)
  0x00007f191110e5d1: add    %ch,%cl
  0x00007f191110e5d3: mov    $0x48000000,%edi   ;*new  ; - java.lang.String::getChars@4 (line 818)

  0x00007f191110e5d8: mov    %eax,%edx
  0x00007f191110e5da: movabs $0x7f190cd6fa80,%rsi  ;   {metadata(method data for {method} {0x00007f190cb5d208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110e5e4: addq   $0x1,0x128(%rsi)
  0x00007f191110e5ec: mov    %rdi,%rdx
  0x00007f191110e5ef: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)

  0x00007f191110e5f2: mov    %rax,0x48(%rsp)
  0x00007f191110e5f7: callq  0x00007f1911046020  ; OopMap{[72]=Oop off=636}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x00007f191110e5fc: mov    0x48(%rsp),%rax
  0x00007f191110e601: jmpq   0x00007f191110e6ce
  0x00007f191110e606: mov    %rdx,0x8(%rsp)
  0x00007f191110e60b: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191110e613: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop r8=Oop off=664}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x00007f191110e618: jmpq   0x00007f191110e3e1
  0x00007f191110e61d: callq  0x00007f191106e6c0  ; OopMap{r8=Oop rsi=Oop off=674}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x00007f191110e622: nop
  0x00007f191110e623: nop
  0x00007f191110e624: nop
  0x00007f191110e625: nop
  0x00007f191110e626: nop
  0x00007f191110e627: callq  0x00007f1911046420  ; OopMap{off=684}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x00007f191110e62c: jmpq   0x00007f191110e530
  0x00007f191110e631: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007f191110e63b: mov    $0xa050f00,%eax
  0x00007f191110e640: callq  0x00007f19110fdaa0  ; OopMap{off=709}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x00007f191110e645: jmpq   0x00007f191110e540
  0x00007f191110e64a: mov    %rdx,%rdx
  0x00007f191110e64d: callq  0x00007f191106e1a0  ; OopMap{off=722}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x00007f191110e652: jmpq   0x00007f191110e54f
  0x00007f191110e657: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007f191110e661: mov    $0xa050f00,%eax
  0x00007f191110e666: callq  0x00007f19110fdaa0  ; OopMap{off=747}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x00007f191110e66b: jmpq   0x00007f191110e588
  0x00007f191110e670: mov    %rdx,%rdx
  0x00007f191110e673: callq  0x00007f191106e1a0  ; OopMap{off=760}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x00007f191110e678: jmpq   0x00007f191110e597
  0x00007f191110e67d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007f191110e687: mov    $0xa050f00,%eax
  0x00007f191110e68c: callq  0x00007f19110fdaa0  ; OopMap{off=785}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x00007f191110e691: jmpq   0x00007f191110e5c8
  0x00007f191110e696: mov    %rdx,%rdx
  0x00007f191110e699: callq  0x00007f191106e1a0  ; OopMap{off=798}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x00007f191110e69e: jmpq   0x00007f191110e5d7
  0x00007f191110e6a3: nop
  0x00007f191110e6a4: nop
  0x00007f191110e6a5: mov    0x2a8(%r15),%rax
  0x00007f191110e6ac: movabs $0x0,%r10
  0x00007f191110e6b6: mov    %r10,0x2a8(%r15)
  0x00007f191110e6bd: movabs $0x0,%r10
  0x00007f191110e6c7: mov    %r10,0x2b0(%r15)
  0x00007f191110e6ce: add    $0x60,%rsp
  0x00007f191110e6d2: pop    %rbp
  0x00007f191110e6d3: jmpq   0x00007f191106f220  ;   {runtime_call}
  0x00007f191110e6d8: hlt    
  0x00007f191110e6d9: hlt    
  0x00007f191110e6da: hlt    
  0x00007f191110e6db: hlt    
  0x00007f191110e6dc: hlt    
  0x00007f191110e6dd: hlt    
  0x00007f191110e6de: hlt    
  0x00007f191110e6df: hlt    
[Stub Code]
  0x00007f191110e6e0: nop                       ;   {no_reloc}
  0x00007f191110e6e1: nop
  0x00007f191110e6e2: nop
  0x00007f191110e6e3: nop
  0x00007f191110e6e4: nop
  0x00007f191110e6e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191110e6ef: jmpq   0x00007f191110e6ef  ;   {runtime_call}
  0x00007f191110e6f4: nop
  0x00007f191110e6f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191110e6ff: jmpq   0x00007f191110e6ff  ;   {runtime_call}
  0x00007f191110e704: nop
  0x00007f191110e705: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191110e70f: jmpq   0x00007f191110e70f  ;   {runtime_call}
  0x00007f191110e714: nop
  0x00007f191110e715: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191110e71f: jmpq   0x00007f191110e71f  ;   {runtime_call}
[Exception Handler]
  0x00007f191110e724: callq  0x00007f191106c860  ;   {runtime_call}
  0x00007f191110e729: mov    %rsp,-0x28(%rsp)
  0x00007f191110e72e: sub    $0x80,%rsp
  0x00007f191110e735: mov    %rax,0x78(%rsp)
  0x00007f191110e73a: mov    %rcx,0x70(%rsp)
  0x00007f191110e73f: mov    %rdx,0x68(%rsp)
  0x00007f191110e744: mov    %rbx,0x60(%rsp)
  0x00007f191110e749: mov    %rbp,0x50(%rsp)
  0x00007f191110e74e: mov    %rsi,0x48(%rsp)
  0x00007f191110e753: mov    %rdi,0x40(%rsp)
  0x00007f191110e758: mov    %r8,0x38(%rsp)
  0x00007f191110e75d: mov    %r9,0x30(%rsp)
  0x00007f191110e762: mov    %r10,0x28(%rsp)
  0x00007f191110e767: mov    %r11,0x20(%rsp)
  0x00007f191110e76c: mov    %r12,0x18(%rsp)
  0x00007f191110e771: mov    %r13,0x10(%rsp)
  0x00007f191110e776: mov    %r14,0x8(%rsp)
  0x00007f191110e77b: mov    %r15,(%rsp)
  0x00007f191110e77f: movabs $0x7f192638cf36,%rdi  ;   {external_word}
  0x00007f191110e789: movabs $0x7f191110e729,%rsi  ;   {internal_word}
  0x00007f191110e793: mov    %rsp,%rdx
  0x00007f191110e796: and    $0xfffffffffffffff0,%rsp
  0x00007f191110e79a: callq  0x00007f19260b8990  ;   {runtime_call}
  0x00007f191110e79f: hlt    
[Deopt Handler Code]
  0x00007f191110e7a0: movabs $0x7f191110e7a0,%r10  ;   {section_word}
  0x00007f191110e7aa: push   %r10
  0x00007f191110e7ac: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f191110e7b1: hlt    
  0x00007f191110e7b2: hlt    
  0x00007f191110e7b3: hlt    
  0x00007f191110e7b4: hlt    
  0x00007f191110e7b5: hlt    
  0x00007f191110e7b6: hlt    
  0x00007f191110e7b7: hlt    
<nmethod compile_id='12' compiler='C1' level='3' entry='0x00007f191110e380' size='2256' address='0x00007f191110e1d0' relocation_offset='296' insts_offset='432' stub_offset='1296' scopes_data_offset='1520' scopes_pcs_offset='1752' dependencies_offset='2232' nul_chk_table_offset='2240' method='java/lang/String getChars (II[CI)V' bytes='62' count='260' iicount='260' stamp='0.102'/>
<writer thread='139746009892608'/>
[Loaded sun.net.www.URLConnection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.FileURLConnection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded sun.net.www.MessageHeader from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FilePermission from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.io.FilePermission$1 from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='139745421305600'/>
Decoding compiled method 0x00007f191110ead0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007f190cbcdff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0xf0]  (sp of caller)
  0x00007f191110eca0: mov    0x8(%rsi),%r10d
  0x00007f191110eca4: shl    $0x3,%r10
  0x00007f191110eca8: cmp    %rax,%r10
  0x00007f191110ecab: jne    0x00007f1911045e20  ;   {runtime_call}
  0x00007f191110ecb1: data16 data16 
<writer thread='139746009892608'/>
[Loaded java.io.FilePermissionCollection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='139745421305600'/>
nopw 0x0(%rax,%rax,1)
  0x00007f191110ecbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f191110ecc0: mov    %eax,-0x14000(%rsp)
  0x00007f191110ecc7: push   %rbp
  0x00007f191110ecc8: sub    $0xe0,%rsp
  0x00007f191110eccf: mov    %rsi,0xb8(%rsp)
  0x00007f191110ecd7: movabs $0x7f190cd3ff58,%rdi  ;   {metadata(method data for {method} {0x00007f190cbcdff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f191110ece1: mov    0xdc(%rdi),%ebx
  0x00007f191110ece7: add    $0x8,%ebx
  0x00007f191110ecea: mov    %ebx,0xdc(%rdi)
  0x00007f191110ecf0: movabs $0x7f190cbcdff8,%rdi  ;   {metadata({method} {0x00007f190cbcdff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f191110ecfa: and    $0x1ff8,%ebx
  0x00007f191110ed00: cmp    $0x0,%ebx
  0x00007f191110ed03: je     0x00007f191110f233  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x00007f191110ed09: cmp    $0x0,%rdx
  0x00007f191110ed0d: movabs $0x7f190cd3ff58,%rdi  ;   {metadata(method data for {method} {0x00007f190cbcdff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f191110ed17: movabs $0x108,%rbx
  0x00007f191110ed21: jne    0x00007f191110ed31
  0x00007f191110ed27: movabs $0x118,%rbx
  0x00007f191110ed31: mov    (%rdi,%rbx,1),%rax
  0x00007f191110ed35: lea    0x1(%rax),%rax
  0x00007f191110ed39: mov    %rax,(%rdi,%rbx,1)
  0x00007f191110ed3d: je     0x00007f191110f203  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x00007f191110ed43: cmp    (%rdx),%rax        ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x00007f191110f24a
  0x00007f191110ed46: mov    %rdx,%rdi
  0x00007f191110ed49: movabs $0x7f190cd3ff58,%rbx  ;   {metadata(method data for {method} {0x00007f190cbcdff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f191110ed53: mov    0x8(%rdi),%edi
  0x00007f191110ed56: shl    $0x3,%rdi
  0x00007f191110ed5a: cmp    0x140(%rbx),%rdi
  0x00007f191110ed61: jne    0x00007f191110ed70
  0x00007f191110ed63: addq   $0x1,0x148(%rbx)
  0x00007f191110ed6b: jmpq   0x00007f191110edd6
  0x00007f191110ed70: cmp    0x150(%rbx),%rdi
  0x00007f191110ed77: jne    0x00007f191110ed86
  0x00007f191110ed79: addq   $0x1,0x158(%rbx)
  0x00007f191110ed81: jmpq   0x00007f191110edd6
  0x00007f191110ed86: cmpq   $0x0,0x140(%rbx)
  0x00007f191110ed91: jne    0x00007f191110edaa
  0x00007f191110ed93: mov    %rdi,0x140(%rbx)
  0x00007f191110ed9a: movq   $0x1,0x148(%rbx)
  0x00007f191110eda5: jmpq   0x00007f191110edd6
  0x00007f191110edaa: cmpq   $0x0,0x150(%rbx)
  0x00007f191110edb5: jne    0x00007f191110edce
  0x00007f191110edb7: mov    %rdi,0x150(%rbx)
  0x00007f191110edbe: movq   $0x1,0x158(%rbx)
  0x00007f191110edc9: jmpq   0x00007f191110edd6
  0x00007f191110edce: addq   $0x1,0x138(%rbx)
  0x00007f191110edd6: movabs $0x7f190cd593e0,%rdi  ;   {metadata(method data for {method} {0x00007f190cb5cc60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110ede0: mov    0xdc(%rdi),%ebx
  0x00007f191110ede6: add    $0x8,%ebx
  0x00007f191110ede9: mov    %ebx,0xdc(%rdi)
  0x00007f191110edef: movabs $0x7f190cb5cc60,%rdi  ;   {metadata({method} {0x00007f190cb5cc60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110edf9: and    $0x7ffff8,%ebx
  0x00007f191110edff: cmp    $0x0,%ebx
  0x00007f191110ee02: je     0x00007f191110f24f
  0x00007f191110ee08: mov    0xc(%rdx),%edi
  0x00007f191110ee0b: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x00007f191110ee0f: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x00007f191110f266
  0x00007f191110ee12: mov    %edi,0xac(%rsp)
  0x00007f191110ee19: mov    0xc(%rsi),%ebx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x00007f191110ee1c: add    %edi,%ebx
  0x00007f191110ee1e: mov    %rsi,%rax
  0x00007f191110ee21: movabs $0x7f190cd3ff58,%rcx  ;   {metadata(method data for {method} {0x00007f190cbcdff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f191110ee2b: addq   $0x1,0x168(%rcx)
  0x00007f191110ee33: movabs $0x7f190cd5f480,%rax  ;   {metadata(method data for {method} {0x00007f190cbcd6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f191110ee3d: mov    0xdc(%rax),%ecx
  0x00007f191110ee43: add    $0x8,%ecx
  0x00007f191110ee46: mov    %ecx,0xdc(%rax)
  0x00007f191110ee4c: movabs $0x7f190cbcd6a0,%rax  ;   {metadata({method} {0x00007f190cbcd6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f191110ee56: and    $0x7ffff8,%ecx
  0x00007f191110ee5c: cmp    $0x0,%ecx
  0x00007f191110ee5f: je     0x00007f191110f26b
  0x00007f191110ee65: mov    0x10(%rsi),%eax
  0x00007f191110ee68: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007f191110ee6c: mov    0xc(%rax),%ecx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x00007f191110f282
  0x00007f191110ee6f: mov    %rbx,%r8
  0x00007f191110ee72: sub    %ecx,%r8d
  0x00007f191110ee75: cmp    $0x0,%r8d
  0x00007f191110ee79: movabs $0x7f190cd5f480,%r8  ;   {metadata(method data for {method} {0x00007f190cbcd6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f191110ee83: movabs $0x108,%r9
  0x00007f191110ee8d: jle    0x00007f191110ee9d
  0x00007f191110ee93: movabs $0x118,%r9
  0x00007f191110ee9d: mov    (%r8,%r9,1),%r11
  0x00007f191110eea1: lea    0x1(%r11),%r11
  0x00007f191110eea5: mov    %r11,(%r8,%r9,1)
  0x00007f191110eea9: jg     0x00007f191110eebc  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007f191110eeaf: mov    %rdx,0xc0(%rsp)
  0x00007f191110eeb7: jmpq   0x00007f191110f11b  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007f191110eebc: mov    %ecx,0xa8(%rsp)
  0x00007f191110eec3: mov    %rax,0xb0(%rsp)
  0x00007f191110eecb: mov    %rdx,0xc0(%rsp)
  0x00007f191110eed3: mov    %rsi,%r8
  0x00007f191110eed6: movabs $0x7f190cd5f480,%r9  ;   {metadata(method data for {method} {0x00007f190cbcd6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f191110eee0: addq   $0x1,0x128(%r9)
  0x00007f191110eee8: mov    %rbx,%rdx
  0x00007f191110eeeb: mov    %rsi,%rbx
  0x00007f191110eeee: mov    %rbx,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007f191110eef1: nop
  0x00007f191110eef2: nop
  0x00007f191110eef3: nop
  0x00007f191110eef4: nop
  0x00007f191110eef5: nop
  0x00007f191110eef6: nop
  0x00007f191110eef7: callq  0x00007f1911046020  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=604}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x00007f191110eefc: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007f191110eeff: movabs $0x7f190cd5f480,%rbx  ;   {metadata(method data for {method} {0x00007f190cbcd6a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f191110ef09: addq   $0x1,0x138(%rbx)
  0x00007f191110ef11: movabs $0x7f190cd5f820,%rbx  ;   {metadata(method data for {method} {0x00007f190cc72ef0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f191110ef1b: mov    0xdc(%rbx),%edx
  0x00007f191110ef21: add    $0x8,%edx
  0x00007f191110ef24: mov    %edx,0xdc(%rbx)
  0x00007f191110ef2a: movabs $0x7f190cc72ef0,%rbx  ;   {metadata({method} {0x00007f190cc72ef0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f191110ef34: and    $0x7ffff8,%edx
  0x00007f191110ef3a: cmp    $0x0,%edx
  0x00007f191110ef3d: je     0x00007f191110f287
  0x00007f191110ef43: mov    %r8,%rbx
  0x00007f191110ef46: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00007f191110ef50: movslq %ebx,%rbx
  0x00007f191110ef53: mov    %rbx,%rdi
  0x00007f191110ef56: cmp    $0xffffff,%rbx
  0x00007f191110ef5d: ja     0x00007f191110f29e
  0x00007f191110ef63: movabs $0x17,%rsi
  0x00007f191110ef6d: lea    (%rsi,%rbx,2),%rsi
  0x00007f191110ef71: and    $0xfffffffffffffff8,%rsi
  0x00007f191110ef75: mov    0x60(%r15),%rax
  0x00007f191110ef79: lea    (%rax,%rsi,1),%rsi
  0x00007f191110ef7d: cmp    0x70(%r15),%rsi
  0x00007f191110ef81: ja     0x00007f191110f29e
  0x00007f191110ef87: mov    %rsi,0x60(%r15)
  0x00007f191110ef8b: sub    %rax,%rsi
  0x00007f191110ef8e: movq   $0x1,(%rax)
  0x00007f191110ef95: mov    %rdx,%rcx
  0x00007f191110ef98: shr    $0x3,%rcx
  0x00007f191110ef9c: mov    %ecx,0x8(%rax)
  0x00007f191110ef9f: mov    %ebx,0xc(%rax)
  0x00007f191110efa2: sub    $0x10,%rsi
  0x00007f191110efa6: je     0x00007f191110efbd
  0x00007f191110efac: xor    %rbx,%rbx
  0x00007f191110efaf: shr    $0x3,%rsi
  0x00007f191110efb3: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007f191110efb8: dec    %rsi
  0x00007f191110efbb: jne    0x00007f191110efb3  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007f191110efbd: movabs $0x7f190cd5f820,%rsi  ;   {metadata(method data for {method} {0x00007f190cc72ef0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f191110efc7: addq   $0x1,0x108(%rsi)
  0x00007f191110efcf: movabs $0x7f190cd21ce8,%rsi  ;   {metadata(method data for {method} {0x00007f190cc4e7a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f191110efd9: mov    0xdc(%rsi),%edx
  0x00007f191110efdf: add    $0x8,%edx
  0x00007f191110efe2: mov    %edx,0xdc(%rsi)
  0x00007f191110efe8: movabs $0x7f190cc4e7a8,%rsi  ;   {metadata({method} {0x00007f190cc4e7a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f191110eff2: and    $0x7ffff8,%edx
  0x00007f191110eff8: cmp    $0x0,%edx
  0x00007f191110effb: je     0x00007f191110f2a8
  0x00007f191110f001: mov    0xa8(%rsp),%ecx
  0x00007f191110f008: cmp    %r8d,%ecx
  0x00007f191110f00b: movabs $0x7f190cd21ce8,%rsi  ;   {metadata(method data for {method} {0x00007f190cc4e7a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f191110f015: movabs $0x108,%rdx
  0x00007f191110f01f: jg     0x00007f191110f02f
  0x00007f191110f025: movabs $0x118,%rdx
  0x00007f191110f02f: mov    (%rsi,%rdx,1),%r9
  0x00007f191110f033: lea    0x1(%r9),%r9
  0x00007f191110f037: mov    %r9,(%rsi,%rdx,1)
  0x00007f191110f03b: jg     0x00007f191110f059  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007f191110f041: movabs $0x7f190cd21ce8,%rsi  ;   {metadata(method data for {method} {0x00007f190cc4e7a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007f191110f04b: incl   0x128(%rsi)
  0x00007f191110f051: mov    %rcx,%r9
  0x00007f191110f054: jmpq   0x00007f191110f05c  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007f191110f059: mov    %r8,%r9            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007f191110f05c: mov    0xb0(%rsp),%rsi
  0x00007f191110f064: movabs $0x7f190cd5f820,%rdx  ;   {metadata(method data for {method} {0x00007f190cc72ef0} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007f191110f06e: addq   $0x1,0x118(%rdx)
  0x00007f191110f076: mov    $0x0,%edx
  0x00007f191110f07b: mov    %rax,%rcx
  0x00007f191110f07e: mov    $0x0,%r8d
  0x00007f191110f084: mov    %rax,0xc8(%rsp)
  0x00007f191110f08c: lea    (%rdx,%r9,1),%rdi
  0x00007f191110f090: cmp    0xc(%rsi),%edi
  0x00007f191110f093: ja     0x00007f191110f2bf
  0x00007f191110f099: lea    (%r8,%r9,1),%rdi
  0x00007f191110f09d: cmp    0xc(%rcx),%edi
  0x00007f191110f0a0: ja     0x00007f191110f2bf
  0x00007f191110f0a6: test   %r9d,%r9d
  0x00007f191110f0a9: jl     0x00007f191110f2bf
  0x00007f191110f0af: je     0x00007f191110f0eb
  0x00007f191110f0b5: movslq %edx,%rdx
  0x00007f191110f0b8: movslq %r8d,%r8
  0x00007f191110f0bb: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007f191110f0c0: lea    0x10(%rcx,%r8,2),%rsi
  0x00007f191110f0c5: mov    %r9,%rdx
  0x00007f191110f0c8: test   $0xf,%esp
  0x00007f191110f0ce: je     0x00007f191110f0e6
  0x00007f191110f0d4: sub    $0x8,%rsp
  0x00007f191110f0d8: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007f191110f0dd: add    $0x8,%rsp
  0x00007f191110f0e1: jmpq   0x00007f191110f0eb
  0x00007f191110f0e6: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007f191110f0eb: mov    0xc8(%rsp),%rax
  0x00007f191110f0f3: mov    0xb8(%rsp),%rsi
  0x00007f191110f0fb: mov    %rax,%r10
  0x00007f191110f0fe: shr    $0x3,%r10
  0x00007f191110f102: mov    %r10d,0x10(%rsi)
  0x00007f191110f106: mov    %rsi,%rdx
  0x00007f191110f109: shr    $0x9,%rdx
  0x00007f191110f10d: movabs $0x7f190d1ff000,%rcx
  0x00007f191110f117: movb   $0x0,(%rdx,%rcx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007f191110f11b: mov    0xac(%rsp),%ebx
  0x00007f191110f122: mov    0xc0(%rsp),%rdi
  0x00007f191110f12a: mov    0x10(%rsi),%r8d
  0x00007f191110f12e: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x00007f191110f132: mov    0xc(%rsi),%r9d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x00007f191110f136: mov    %rdi,%rdx
  0x00007f191110f139: movabs $0x7f190cd3ff58,%rcx  ;   {metadata(method data for {method} {0x00007f190cbcdff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f191110f143: mov    0x8(%rdx),%edx
  0x00007f191110f146: shl    $0x3,%rdx
  0x00007f191110f14a: cmp    0x180(%rcx),%rdx
  0x00007f191110f151: jne    0x00007f191110f160
  0x00007f191110f153: addq   $0x1,0x188(%rcx)
  0x00007f191110f15b: jmpq   0x00007f191110f1c6
  0x00007f191110f160: cmp    0x190(%rcx),%rdx
  0x00007f191110f167: jne    0x00007f191110f176
  0x00007f191110f169: addq   $0x1,0x198(%rcx)
  0x00007f191110f171: jmpq   0x00007f191110f1c6
  0x00007f191110f176: cmpq   $0x0,0x180(%rcx)
  0x00007f191110f181: jne    0x00007f191110f19a
  0x00007f191110f183: mov    %rdx,0x180(%rcx)
  0x00007f191110f18a: movq   $0x1,0x188(%rcx)
  0x00007f191110f195: jmpq   0x00007f191110f1c6
  0x00007f191110f19a: cmpq   $0x0,0x190(%rcx)
  0x00007f191110f1a5: jne    0x00007f191110f1be
  0x00007f191110f1a7: mov    %rdx,0x190(%rcx)
  0x00007f191110f1ae: movq   $0x1,0x198(%rcx)
  0x00007f191110f1b9: jmpq   0x00007f191110f1c6
  0x00007f191110f1be: addq   $0x1,0x178(%rcx)
  0x00007f191110f1c6: mov    $0x0,%edx
  0x00007f191110f1cb: mov    %rbx,%rcx
  0x00007f191110f1ce: mov    %rdi,%rsi          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x00007f191110f1d1: nop
  0x00007f191110f1d2: nop
  0x00007f191110f1d3: nop
  0x00007f191110f1d4: nop
  0x00007f191110f1d5: nop
  0x00007f191110f1d6: nop
  0x00007f191110f1d7: callq  0x00007f1911046020  ; OopMap{[184]=Oop off=1340}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x00007f191110f1dc: mov    0xb8(%rsp),%rsi
  0x00007f191110f1e4: mov    0xc(%rsi),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x00007f191110f1e7: add    0xac(%rsp),%eax
  0x00007f191110f1ee: mov    %eax,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x00007f191110f1f1: mov    %rsi,%rax
  0x00007f191110f1f4: add    $0xe0,%rsp
  0x00007f191110f1fb: pop    %rbp
  0x00007f191110f1fc: test   %eax,0x16384efe(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191110f202: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x00007f191110f203: mov    %rsi,%rdi
  0x00007f191110f206: movabs $0x7f190cd3ff58,%rbx  ;   {metadata(method data for {method} {0x00007f190cbcdff8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007f191110f210: addq   $0x1,0x128(%rbx)
  0x00007f191110f218: nop
  0x00007f191110f219: nop
  0x00007f191110f21a: nop
  0x00007f191110f21b: nop
  0x00007f191110f21c: nop
  0x00007f191110f21d: nop
  0x00007f191110f21e: nop
  0x00007f191110f21f: callq  0x00007f1911046020  ; OopMap{off=1412}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x00007f191110f224: add    $0xe0,%rsp
  0x00007f191110f22b: pop    %rbp
  0x00007f191110f22c: test   %eax,0x16384ece(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191110f232: retq   
  0x00007f191110f233: mov    %rdi,0x8(%rsp)
  0x00007f191110f238: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191110f240: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1445}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x00007f191110f245: jmpq   0x00007f191110ed09
  0x00007f191110f24a: callq  0x00007f191106e6c0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1455}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00007f191110f24f: mov    %rdi,0x8(%rsp)
  0x00007f191110f254: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191110f25c: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1473}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00007f191110f261: jmpq   0x00007f191110ee08
  0x00007f191110f266: callq  0x00007f191106e6c0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1483}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00007f191110f26b: mov    %rax,0x8(%rsp)
  0x00007f191110f270: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191110f278: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1501}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007f191110f27d: jmpq   0x00007f191110ee65
  0x00007f191110f282: callq  0x00007f191106e6c0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop rax=Oop off=1511}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007f191110f287: mov    %rbx,0x8(%rsp)
  0x00007f191110f28c: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191110f294: callq  0x00007f19110feaa0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1529}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007f191110f299: jmpq   0x00007f191110ef43
  0x00007f191110f29e: callq  0x00007f191106d4a0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1539}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007f191110f2a3: jmpq   0x00007f191110efbd
  0x00007f191110f2a8: mov    %rsi,0x8(%rsp)
  0x00007f191110f2ad: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191110f2b5: callq  0x00007f19110feaa0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1562}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007f191110f2ba: jmpq   0x00007f191110f001
  0x00007f191110f2bf: callq  0x00007f1911046420  ; OopMap{[184]=Oop [192]=Oop [200]=Oop off=1572}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x00007f191110f2c4: jmpq   0x00007f191110f0eb
  0x00007f191110f2c9: nop
  0x00007f191110f2ca: nop
  0x00007f191110f2cb: mov    0x2a8(%r15),%rax
  0x00007f191110f2d2: movabs $0x0,%r10
  0x00007f191110f2dc: mov    %r10,0x2a8(%r15)
  0x00007f191110f2e3: movabs $0x0,%r10
  0x00007f191110f2ed: mov    %r10,0x2b0(%r15)
  0x00007f191110f2f4: add    $0xe0,%rsp
  0x00007f191110f2fb: pop    %rbp
  0x00007f191110f2fc: jmpq   0x00007f191106f220  ;   {runtime_call}
  0x00007f191110f301: hlt    
  0x00007f191110f302: hlt    
  0x00007f191110f303: hlt    
  0x00007f191110f304: hlt    
  0x00007f191110f305: hlt    
  0x00007f191110f306: hlt    
  0x00007f191110f307: hlt    
  0x00007f191110f308: hlt    
  0x00007f191110f309: hlt    
  0x00007f191110f30a: hlt    
  0x00007f191110f30b: hlt    
  0x00007f191110f30c: hlt    
  0x00007f191110f30d: hlt    
  0x00007f191110f30e: hlt    
  0x00007f191110f30f: hlt    
  0x00007f191110f310: hlt    
  0x00007f191110f311: hlt    
  0x00007f191110f312: hlt    
  0x00007f191110f313: hlt    
  0x00007f191110f314: hlt    
  0x00007f191110f315: hlt    
  0x00007f191110f316: hlt    
  0x00007f191110f317: hlt    
  0x00007f191110f318: hlt    
  0x00007f191110f319: hlt    
  0x00007f191110f31a: hlt    
  0x00007f191110f31b: hlt    
  0x00007f191110f31c: hlt    
  0x00007f191110f31d: hlt    
  0x00007f191110f31e: hlt    
  0x00007f191110f31f: hlt    
[Stub Code]
  0x00007f191110f320: nop                       ;   {no_reloc}
  0x00007f191110f321: nop
  0x00007f191110f322: nop
  0x00007f191110f323: nop
  0x00007f191110f324: nop
  0x00007f191110f325: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191110f32f: jmpq   0x00007f191110f32f  ;   {runtime_call}
  0x00007f191110f334: nop
  0x00007f191110f335: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191110f33f: jmpq   0x00007f191110f33f  ;   {runtime_call}
  0x00007f191110f344: nop
  0x00007f191110f345: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191110f34f: jmpq   0x00007f191110f34f  ;   {runtime_call}
  0x00007f191110f354: nop
  0x00007f191110f355: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191110f35f: jmpq   0x00007f191110f35f  ;   {runtime_call}
[Exception Handler]
  0x00007f191110f364: callq  0x00007f191106c860  ;   {runtime_call}
  0x00007f191110f369: mov    %rsp,-0x28(%rsp)
  0x00007f191110f36e: sub    $0x80,%rsp
  0x00007f191110f375: mov    %rax,0x78(%rsp)
  0x00007f191110f37a: mov    %rcx,0x70(%rsp)
  0x00007f191110f37f: mov    %rdx,0x68(%rsp)
  0x00007f191110f384: mov    %rbx,0x60(%rsp)
  0x00007f191110f389: mov    %rbp,0x50(%rsp)
  0x00007f191110f38e: mov    %rsi,0x48(%rsp)
  0x00007f191110f393: mov    %rdi,0x40(%rsp)
  0x00007f191110f398: mov    %r8,0x38(%rsp)
  0x00007f191110f39d: mov    %r9,0x30(%rsp)
  0x00007f191110f3a2: mov    %r10,0x28(%rsp)
  0x00007f191110f3a7: mov    %r11,0x20(%rsp)
  0x00007f191110f3ac: mov    %r12,0x18(%rsp)
  0x00007f191110f3b1: mov    %r13,0x10(%rsp)
  0x00007f191110f3b6: mov    %r14,0x8(%rsp)
  0x00007f191110f3bb: mov    %r15,(%rsp)
  0x00007f191110f3bf: movabs $0x7f192638cf36,%rdi  ;   {external_word}
  0x00007f191110f3c9: movabs $0x7f191110f369,%rsi  ;   {internal_word}
  0x00007f191110f3d3: mov    %rsp,%rdx
  0x00007f191110f3d6: and    $0xfffffffffffffff0,%rsp
  0x00007f191110f3da: callq  0x00007f19260b8990  ;   {runtime_call}
  0x00007f191110f3df: hlt    
[Deopt Handler Code]
  0x00007f191110f3e0: movabs $0x7f191110f3e0,%r10  ;   {section_word}
  0x00007f191110f3ea: push   %r10
  0x00007f191110f3ec: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f191110f3f1: hlt    
  0x00007f191110f3f2: hlt    
  0x00007f191110f3f3: hlt    
  0x00007f191110f3f4: hlt    
  0x00007f191110f3f5: hlt    
  0x00007f191110f3f6: hlt    
  0x00007f191110f3f7: hlt    
<nmethod compile_id='13' compiler='C1' level='3' entry='0x00007f191110eca0' size='3456' address='0x00007f191110ead0' relocation_offset='296' insts_offset='464' stub_offset='2128' scopes_data_offset='2384' scopes_pcs_offset='2792' dependencies_offset='3416' nul_chk_table_offset='3424' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='263' iicount='263' stamp='0.119'/>
<writer thread='139746009892608'/>
[Loaded java.security.AllPermission from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.UnresolvedPermission from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.security.BasicPermissionCollection from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded com.github.marschall.charsequences.ParseUuidCompilation from file:/home/marschall/git/charsequences/target/test-classes/]
[Loaded sun.launcher.LauncherHelper$FXHelper from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Class$MethodArray from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Void from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded com.github.marschall.charsequences.CharSequences from file:/home/marschall/git/charsequences/target/classes/]
[Loaded java.lang.AssertionError from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<task_queued compile_id='14' method='java/lang/String indexOf (I)I' bytes='7' count='256' iicount='256' level='3' stamp='0.121' comment='tiered' hot_count='256'/>
[Loaded java.lang.NumberFormatException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ForwardingNode from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='139745421305600'/>
Decoding compiled method 0x00007f191110f890:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007f190cb5e098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
<writer thread='139746009892608'/>
[Loaded java.lang.IndexOutOfBoundsException from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='139745421305600'/>
  0x00007f191110fa00: mov    0x8(%rsi),%r10d
  0x00007f191110fa04: shl    $0x3,%r10
  0x00007f191110fa08: cmp    %rax,%r10
  0x00007f191110fa0b: jne    0x00007f1911045e20  ;   {runtime_call}
  0x00007f191110fa11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f191110fa1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f191110fa20: mov    %eax,-0x14000(%rsp)
  0x00007f191110fa27: push   %rbp
  0x00007f191110fa28: sub    $0x30,%rsp
  0x00007f191110fa2c: movabs $0x7f190cd86238,%rcx  ;   {metadata(method data for {method} {0x00007f190cb5e098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110fa36: mov    0xdc(%rcx),%edi
  0x00007f191110fa3c: add    $0x8,%edi
  0x00007f191110fa3f: mov    %edi,0xdc(%rcx)
  0x00007f191110fa45: movabs $0x7f190cb5e098,%rcx  ;   {metadata({method} {0x00007f190cb5e098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110fa4f: and    $0x1ff8,%edi
  0x00007f191110fa55: cmp    $0x0,%edi
  0x00007f191110fa58: je     0x00007f191110fb08  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x00007f191110fa5e: mov    %rsi,%rcx
  0x00007f191110fa61: movabs $0x7f190cd86238,%rdi  ;   {metadata(method data for {method} {0x00007f190cb5e098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00007f191110fa6b: mov    0x8(%rcx),%ecx
  0x00007f191110fa6e: shl    $0x3,%rcx
  0x00007f191110fa72: cmp    0x110(%rdi),%rcx
  0x00007f191110fa79: jne    0x00007f191110fa88
  0x00007f191110fa7b: addq   $0x1,0x118(%rdi)
  0x00007f191110fa83: jmpq   0x00007f191110faee
  0x00007f191110fa88: cmp    0x120(%rdi),%rcx
  0x00007f191110fa8f: jne    0x00007f191110fa9e
  0x00007f191110fa91: addq   $0x1,0x128(%rdi)
  0x00007f191110fa99: jmpq   0x00007f191110faee
  0x00007f191110fa9e: cmpq   $0x0,0x110(%rdi)
  0x00007f191110faa9: jne    0x00007f191110fac2
  0x00007f191110faab: mov    %rcx,0x110(%rdi)
  0x00007f191110fab2: movq   $0x1,0x118(%rdi)
  0x00007f191110fabd: jmpq   0x00007f191110faee
  0x00007f191110fac2: cmpq   $0x0,0x120(%rdi)
  0x00007f191110facd: jne    0x00007f191110fae6
  0x00007f191110facf: mov    %rcx,0x120(%rdi)
  0x00007f191110fad6: movq   $0x1,0x128(%rdi)
  0x00007f191110fae1: jmpq   0x00007f191110faee
  0x00007f191110fae6: addq   $0x1,0x108(%rdi)
  0x00007f191110faee: mov    $0x0,%ecx          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x00007f191110faf3: nop
  0x00007f191110faf4: nop
  0x00007f191110faf5: nop
  0x00007f191110faf6: nop
  0x00007f191110faf7: callq  0x00007f1911046020  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x00007f191110fafc: add    $0x30,%rsp
  0x00007f191110fb00: pop    %rbp
  0x00007f191110fb01: test   %eax,0x163845f9(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191110fb07: retq   
  0x00007f191110fb08: mov    %rcx,0x8(%rsp)
  0x00007f191110fb0d: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191110fb15: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x00007f191110fb1a: jmpq   0x00007f191110fa5e
  0x00007f191110fb1f: nop
  0x00007f191110fb20: nop
  0x00007f191110fb21: mov    0x2a8(%r15),%rax
  0x00007f191110fb28: movabs $0x0,%r10
  0x00007f191110fb32: mov    %r10,0x2a8(%r15)
  0x00007f191110fb39: movabs $0x0,%r10
  0x00007f191110fb43: mov    %r10,0x2b0(%r15)
  0x00007f191110fb4a: add    $0x30,%rsp
  0x00007f191110fb4e: pop    %rbp
  0x00007f191110fb4f: jmpq   0x00007f191106f220  ;   {runtime_call}
  0x00007f191110fb54: hlt    
  0x00007f191110fb55: hlt    
  0x00007f191110fb56: hlt    
  0x00007f191110fb57: hlt    
  0x00007f191110fb58: hlt    
  0x00007f191110fb59: hlt    
  0x00007f191110fb5a: hlt    
  0x00007f191110fb5b: hlt    
  0x00007f191110fb5c: hlt    
  0x00007f191110fb5d: hlt    
  0x00007f191110fb5e: hlt    
  0x00007f191110fb5f: hlt    
[Stub Code]
  0x00007f191110fb60: nop                       ;   {no_reloc}
  0x00007f191110fb61: nop
  0x00007f191110fb62: nop
  0x00007f191110fb63: nop
  0x00007f191110fb64: nop
  0x00007f191110fb65: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191110fb6f: jmpq   0x00007f191110fb6f  ;   {runtime_call}
[Exception Handler]
  0x00007f191110fb74: callq  0x00007f191106c860  ;   {runtime_call}
  0x00007f191110fb79: mov    %rsp,-0x28(%rsp)
  0x00007f191110fb7e: sub    $0x80,%rsp
  0x00007f191110fb85: mov    %rax,0x78(%rsp)
  0x00007f191110fb8a: mov    %rcx,0x70(%rsp)
  0x00007f191110fb8f: mov    %rdx,0x68(%rsp)
  0x00007f191110fb94: mov    %rbx,0x60(%rsp)
  0x00007f191110fb99: mov    %rbp,0x50(%rsp)
  0x00007f191110fb9e: mov    %rsi,0x48(%rsp)
  0x00007f191110fba3: mov    %rdi,0x40(%rsp)
  0x00007f191110fba8: mov    %r8,0x38(%rsp)
  0x00007f191110fbad: mov    %r9,0x30(%rsp)
  0x00007f191110fbb2: mov    %r10,0x28(%rsp)
  0x00007f191110fbb7: mov    %r11,0x20(%rsp)
  0x00007f191110fbbc: mov    %r12,0x18(%rsp)
  0x00007f191110fbc1: mov    %r13,0x10(%rsp)
  0x00007f191110fbc6: mov    %r14,0x8(%rsp)
  0x00007f191110fbcb: mov    %r15,(%rsp)
  0x00007f191110fbcf: movabs $0x7f192638cf36,%rdi  ;   {external_word}
  0x00007f191110fbd9: movabs $0x7f191110fb79,%rsi  ;   {internal_word}
  0x00007f191110fbe3: mov    %rsp,%rdx
  0x00007f191110fbe6: and    $0xfffffffffffffff0,%rsp
  0x00007f191110fbea: callq  0x00007f19260b8990  ;   {runtime_call}
  0x00007f191110fbef: hlt    
[Deopt Handler Code]
  0x00007f191110fbf0: movabs $0x7f191110fbf0,%r10  ;   {section_word}
  0x00007f191110fbfa: push   %r10
  0x00007f191110fbfc: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f191110fc01: hlt    
  0x00007f191110fc02: hlt    
  0x00007f191110fc03: hlt    
  0x00007f191110fc04: hlt    
  0x00007f191110fc05: hlt    
  0x00007f191110fc06: hlt    
  0x00007f191110fc07: hlt    
<nmethod compile_id='14' compiler='C1' level='3' entry='0x00007f191110fa00' size='1040' address='0x00007f191110f890' relocation_offset='296' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String indexOf (I)I' bytes='7' count='263' iicount='263' stamp='0.122'/>
<writer thread='139746009892608'/>
[Loaded java.util.UUID from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<task_queued compile_id='15' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='59' count='256' iicount='256' level='3' stamp='0.122' comment='tiered' hot_count='256'/>
<task_queued compile_id='16' method='java/lang/String charAt (I)C' bytes='29' count='5632' iicount='5632' stamp='0.123' comment='tiered' hot_count='5632'/>
<writer thread='139745421305600'/>
Decoding compiled method 0x00007f191110fcd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f190cf5b460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;
  # parm0:    rsi       = char
  #           [sp+0x40]  (sp of caller)
  0x00007f191110fe60: mov    %eax,-0x14000(%rsp)
  0x00007f191110fe67: push   %rbp
  0x00007f191110fe68: sub    $0x30,%rsp
  0x00007f191110fe6c: movabs $0x7f190cf5b8d8,%rax  ;   {metadata(method data for {method} {0x00007f190cf5b460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f191110fe76: mov    0xdc(%rax),%edx
  0x00007f191110fe7c: add    $0x8,%edx
  0x00007f191110fe7f: mov    %edx,0xdc(%rax)
  0x00007f191110fe85: movabs $0x7f190cf5b460,%rax  ;   {metadata({method} {0x00007f190cf5b460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f191110fe8f: and    $0x1ff8,%edx
  0x00007f191110fe95: cmp    $0x0,%edx
  0x00007f191110fe98: je     0x00007f19111100a6  ;*iload_0
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@0 (line 496)

  0x00007f191110fe9e: cmp    $0x30,%esi
  0x00007f191110fea1: movabs $0x7f190cf5b8d8,%rax  ;   {metadata(method data for {method} {0x00007f190cf5b460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f191110feab: movabs $0x108,%rdx
  0x00007f191110feb5: jl     0x00007f191110fec5
  0x00007f191110febb: movabs $0x118,%rdx
  0x00007f191110fec5: mov    (%rax,%rdx,1),%rdi
  0x00007f191110fec9: lea    0x1(%rdi),%rdi
  0x00007f191110fecd: mov    %rdi,(%rax,%rdx,1)
  0x00007f191110fed1: jl     0x00007f191110ff10  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)

  0x00007f191110fed7: cmp    $0x39,%esi
  0x00007f191110feda: movabs $0x7f190cf5b8d8,%rax  ;   {metadata(method data for {method} {0x00007f190cf5b460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f191110fee4: movabs $0x128,%rdx
  0x00007f191110feee: jg     0x00007f191110fefe
  0x00007f191110fef4: movabs $0x138,%rdx
  0x00007f191110fefe: mov    (%rax,%rdx,1),%rdi
  0x00007f191110ff02: lea    0x1(%rdi),%rdi
  0x00007f191110ff06: mov    %rdi,(%rax,%rdx,1)
  0x00007f191110ff0a: jle    0x00007f1911110018  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)

  0x00007f191110ff10: cmp    $0x61,%esi
  0x00007f191110ff13: movabs $0x7f190cf5b8d8,%rax  ;   {metadata(method data for {method} {0x00007f190cf5b460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f191110ff1d: movabs $0x148,%rdx
  0x00007f191110ff27: jl     0x00007f191110ff37
  0x00007f191110ff2d: movabs $0x158,%rdx
  0x00007f191110ff37: mov    (%rax,%rdx,1),%rdi
  0x00007f191110ff3b: lea    0x1(%rdi),%rdi
  0x00007f191110ff3f: mov    %rdi,(%rax,%rdx,1)
  0x00007f191110ff43: jl     0x00007f191110ff82  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)

  0x00007f191110ff49: cmp    $0x66,%esi
  0x00007f191110ff4c: movabs $0x7f190cf5b8d8,%rax  ;   {metadata(method data for {method} {0x00007f190cf5b460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f191110ff56: movabs $0x168,%rdx
  0x00007f191110ff60: jg     0x00007f191110ff70
  0x00007f191110ff66: movabs $0x178,%rdx
  0x00007f191110ff70: mov    (%rax,%rdx,1),%rdi
  0x00007f191110ff74: lea    0x1(%rdi),%rdi
  0x00007f191110ff78: mov    %rdi,(%rax,%rdx,1)
  0x00007f191110ff7c: jle    0x00007f1911110006  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)

  0x00007f191110ff82: cmp    $0x41,%esi
  0x00007f191110ff85: movabs $0x7f190cf5b8d8,%rax  ;   {metadata(method data for {method} {0x00007f190cf5b460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f191110ff8f: movabs $0x188,%rdx
  0x00007f191110ff99: jl     0x00007f191110ffa9
  0x00007f191110ff9f: movabs $0x198,%rdx
  0x00007f191110ffa9: mov    (%rax,%rdx,1),%rdi
  0x00007f191110ffad: lea    0x1(%rdi),%rdi
  0x00007f191110ffb1: mov    %rdi,(%rax,%rdx,1)
  0x00007f191110ffb5: jl     0x00007f191111002a  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@37 (line 505)

  0x00007f191110ffbb: cmp    $0x46,%esi
  0x00007f191110ffbe: movabs $0x7f190cf5b8d8,%rax  ;   {metadata(method data for {method} {0x00007f190cf5b460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f191110ffc8: movabs $0x1a8,%rdx
  0x00007f191110ffd2: jg     0x00007f191110ffe2
  0x00007f191110ffd8: movabs $0x1b8,%rdx
  0x00007f191110ffe2: mov    (%rax,%rdx,1),%rdi
  0x00007f191110ffe6: lea    0x1(%rdi),%rdi
  0x00007f191110ffea: mov    %rdi,(%rax,%rdx,1)
  0x00007f191110ffee: jg     0x00007f191111002a  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@43 (line 505)

  0x00007f191110fff4: sub    $0x37,%esi
  0x00007f191110fff7: mov    %rsi,%rax
  0x00007f191110fffa: add    $0x30,%rsp
  0x00007f191110fffe: pop    %rbp
  0x00007f191110ffff: test   %eax,0x163840fb(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f1911110005: retq                      ;*ireturn
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@50 (line 509)

  0x00007f1911110006: sub    $0x57,%esi
  0x00007f1911110009: mov    %rsi,%rax
  0x00007f191111000c: add    $0x30,%rsp
  0x00007f1911110010: pop    %rbp
  0x00007f1911110011: test   %eax,0x163840e9(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f1911110017: retq                      ;*ireturn
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@33 (line 503)

  0x00007f1911110018: sub    $0x30,%esi
  0x00007f191111001b: mov    %rsi,%rax
  0x00007f191111001e: add    $0x30,%rsp
  0x00007f1911110022: pop    %rbp
  0x00007f1911110023: test   %eax,0x163840d7(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f1911110029: retq                      ;*ireturn
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@16 (line 497)

  0x00007f191111002a: nopw   0x0(%rax,%rax,1)
  0x00007f1911110030: jmpq   0x00007f19111100cc  ;   {no_reloc}
  0x00007f1911110035: add    %al,(%rax)
  0x00007f1911110037: add    %al,(%rax)
  0x00007f1911110039: add    %cl,-0x75(%rcx)
  0x00007f191111003c: rex.RXB (bad) 
  0x00007f191111003e: lea    0x20(%rax),%rdi
  0x00007f1911110042: cmp    0x70(%r15),%rdi
  0x00007f1911110046: ja     0x00007f19111100d6
  0x00007f191111004c: mov    %rdi,0x60(%r15)
  0x00007f1911110050: mov    0xa8(%rdx),%rcx
  0x00007f1911110057: mov    %rcx,(%rax)
  0x00007f191111005a: mov    %rdx,%rcx
  0x00007f191111005d: shr    $0x3,%rcx
  0x00007f1911110061: mov    %ecx,0x8(%rax)
  0x00007f1911110064: xor    %rcx,%rcx
  0x00007f1911110067: mov    %ecx,0xc(%rax)
  0x00007f191111006a: xor    %rcx,%rcx
  0x00007f191111006d: mov    %rcx,0x10(%rax)
  0x00007f1911110071: mov    %rcx,0x18(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::hexDigit@51 (line 511)

  0x00007f1911110075: mov    %rax,%rsi
  0x00007f1911110078: movabs $0x7f190cf5b8d8,%rdi  ;   {metadata(method data for {method} {0x00007f190cf5b460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911110082: addq   $0x1,0x1c8(%rdi)
  0x00007f191111008a: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@55 (line 511)

  0x00007f191111008d: mov    %rax,0x20(%rsp)
  0x00007f1911110092: nop
  0x00007f1911110093: nop
  0x00007f1911110094: nop
  0x00007f1911110095: nop
  0x00007f1911110096: nop
  0x00007f1911110097: callq  0x00007f1911046020  ; OopMap{[32]=Oop off=572}
                                                ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@55 (line 511)
                                                ;   {optimized virtual_call}
  0x00007f191111009c: mov    0x20(%rsp),%rax
  0x00007f19111100a1: jmpq   0x00007f191111010b
  0x00007f19111100a6: mov    %rax,0x8(%rsp)
  0x00007f19111100ab: movq   $0xffffffffffffffff,(%rsp)
  0x00007f19111100b3: callq  0x00007f19110feaa0  ; OopMap{off=600}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@-1 (line 496)
                                                ;   {runtime_call}
  0x00007f19111100b8: jmpq   0x00007f191110fe9e
  0x00007f19111100bd: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007f19111100c7: mov    $0xa050f00,%eax
  0x00007f19111100cc: callq  0x00007f19110fdaa0  ; OopMap{off=625}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::hexDigit@51 (line 511)
                                                ;   {runtime_call}
  0x00007f19111100d1: jmpq   0x00007f1911110030
  0x00007f19111100d6: mov    %rdx,%rdx
  0x00007f19111100d9: callq  0x00007f191106dda0  ; OopMap{off=638}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::hexDigit@51 (line 511)
                                                ;   {runtime_call}
  0x00007f19111100de: jmp    0x00007f1911110075
  0x00007f19111100e0: nop
  0x00007f19111100e1: nop
  0x00007f19111100e2: mov    0x2a8(%r15),%rax
  0x00007f19111100e9: movabs $0x0,%r10
  0x00007f19111100f3: mov    %r10,0x2a8(%r15)
  0x00007f19111100fa: movabs $0x0,%r10
  0x00007f1911110104: mov    %r10,0x2b0(%r15)
  0x00007f191111010b: add    $0x30,%rsp
  0x00007f191111010f: pop    %rbp
  0x00007f1911110110: jmpq   0x00007f191106f220  ;   {runtime_call}
  0x00007f1911110115: hlt    
  0x00007f1911110116: hlt    
  0x00007f1911110117: hlt    
  0x00007f1911110118: hlt    
  0x00007f1911110119: hlt    
  0x00007f191111011a: hlt    
  0x00007f191111011b: hlt    
  0x00007f191111011c: hlt    
  0x00007f191111011d: hlt    
  0x00007f191111011e: hlt    
  0x00007f191111011f: hlt    
[Stub Code]
  0x00007f1911110120: nop                       ;   {no_reloc}
  0x00007f1911110121: nop
  0x00007f1911110122: nop
  0x00007f1911110123: nop
  0x00007f1911110124: nop
  0x00007f1911110125: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191111012f: jmpq   0x00007f191111012f  ;   {runtime_call}
[Exception Handler]
  0x00007f1911110134: callq  0x00007f191106c860  ;   {runtime_call}
  0x00007f1911110139: mov    %rsp,-0x28(%rsp)
  0x00007f191111013e: sub    $0x80,%rsp
  0x00007f1911110145: mov    %rax,0x78(%rsp)
  0x00007f191111014a: mov    %rcx,0x70(%rsp)
  0x00007f191111014f: mov    %rdx,0x68(%rsp)
  0x00007f1911110154: mov    %rbx,0x60(%rsp)
  0x00007f1911110159: mov    %rbp,0x50(%rsp)
  0x00007f191111015e: mov    %rsi,0x48(%rsp)
  0x00007f1911110163: mov    %rdi,0x40(%rsp)
  0x00007f1911110168: mov    %r8,0x38(%rsp)
  0x00007f191111016d: mov    %r9,0x30(%rsp)
  0x00007f1911110172: mov    %r10,0x28(%rsp)
  0x00007f1911110177: mov    %r11,0x20(%rsp)
  0x00007f191111017c: mov    %r12,0x18(%rsp)
  0x00007f1911110181: mov    %r13,0x10(%rsp)
  0x00007f1911110186: mov    %r14,0x8(%rsp)
  0x00007f191111018b: mov    %r15,(%rsp)
  0x00007f191111018f: movabs $0x7f192638cf36,%rdi  ;   {external_word}
  0x00007f1911110199: movabs $0x7f1911110139,%rsi  ;   {internal_word}
  0x00007f19111101a3: mov    %rsp,%rdx
  0x00007f19111101a6: and    $0xfffffffffffffff0,%rsp
  0x00007f19111101aa: callq  0x00007f19260b8990  ;   {runtime_call}
  0x00007f19111101af: hlt    
[Deopt Handler Code]
  0x00007f19111101b0: movabs $0x7f19111101b0,%r10  ;   {section_word}
  0x00007f19111101ba: push   %r10
  0x00007f19111101bc: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f19111101c1: hlt    
  0x00007f19111101c2: hlt    
  0x00007f19111101c3: hlt    
  0x00007f19111101c4: hlt    
  0x00007f19111101c5: hlt    
  0x00007f19111101c6: hlt    
  0x00007f19111101c7: hlt    
<nmethod compile_id='15' compiler='C1' level='3' entry='0x00007f191110fe60' size='1688' address='0x00007f191110fcd0' relocation_offset='296' insts_offset='400' stub_offset='1104' scopes_data_offset='1288' scopes_pcs_offset='1392' dependencies_offset='1680' oops_offset='1272' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='59' count='4064' iicount='4064' stamp='0.124'/>
<writer thread='139746009892608'/>
<task_queued compile_id='17' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='276' count='128' backedge_count='4064' iicount='128' level='3' stamp='0.124' comment='tiered' hot_count='128'/>
<task_queued compile_id='18' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='59' count='5632' iicount='5632' stamp='0.124' comment='tiered' hot_count='5632'/>
<writer thread='139745423410944'/>
Decoding compiled method 0x00007f1911115cd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f190cf5b460} &apos;hexDigit&apos; &apos;(C)I&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;
  # parm0:    rsi       = char
  #           [sp+0x30]  (sp of caller)
  0x00007f1911115e20: mov    %eax,-0x14000(%rsp)
  0x00007f1911115e27: push   %rbp
  0x00007f1911115e28: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@-1 (line 496)

  0x00007f1911115e2c: cmp    $0x30,%esi
  0x00007f1911115e2f: jl     0x00007f1911115e58  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)

  0x00007f1911115e31: cmp    $0x39,%esi
  0x00007f1911115e34: jle    0x00007f1911115e47  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)

  0x00007f1911115e36: cmp    $0x61,%esi
  0x00007f1911115e39: jl     0x00007f1911115e6d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)

  0x00007f1911115e3b: cmp    $0x66,%esi
  0x00007f1911115e3e: jg     0x00007f1911115e81  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)

  0x00007f1911115e40: mov    %esi,%eax
  0x00007f1911115e42: add    $0xffffffa9,%eax   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)

  0x00007f1911115e45: jmp    0x00007f1911115e4c
  0x00007f1911115e47: mov    %esi,%eax
  0x00007f1911115e49: add    $0xffffffd0,%eax   ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@-1 (line 496)

  0x00007f1911115e4c: add    $0x20,%rsp
  0x00007f1911115e50: pop    %rbp
  0x00007f1911115e51: test   %eax,0x1637e1a9(%rip)        # 0x00007f1927494000
                                                ;   {poll_return}
  0x00007f1911115e57: retq   
  0x00007f1911115e58: mov    %esi,(%rsp)
  0x00007f1911115e5b: mov    $0xffffff65,%esi
  0x00007f1911115e60: data16 xchg %ax,%ax
  0x00007f1911115e63: callq  0x00007f19110051a0  ; OopMap{off=72}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ;   {runtime_call}
  0x00007f1911115e68: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ;   {runtime_call}
  0x00007f1911115e6d: mov    %esi,(%rsp)
  0x00007f1911115e70: mov    $0xffffff65,%esi
  0x00007f1911115e75: xchg   %ax,%ax
  0x00007f1911115e77: callq  0x00007f19110051a0  ; OopMap{off=92}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ;   {runtime_call}
  0x00007f1911115e7c: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ;   {runtime_call}
  0x00007f1911115e81: mov    %esi,(%rsp)
  0x00007f1911115e84: mov    $0xffffff65,%esi
  0x00007f1911115e89: xchg   %ax,%ax
  0x00007f1911115e8b: callq  0x00007f19110051a0  ; OopMap{off=112}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ;   {runtime_call}
  0x00007f1911115e90: callq  0x00007f192619fa20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ;   {runtime_call}
  0x00007f1911115e95: hlt    
  0x00007f1911115e96: hlt    
  0x00007f1911115e97: hlt    
  0x00007f1911115e98: hlt    
  0x00007f1911115e99: hlt    
  0x00007f1911115e9a: hlt    
  0x00007f1911115e9b: hlt    
  0x00007f1911115e9c: hlt    
  0x00007f1911115e9d: hlt    
  0x00007f1911115e9e: hlt    
  0x00007f1911115e9f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f1911115ea0: jmpq   0x00007f191106c760  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f1911115ea5: callq  0x00007f1911115eaa
  0x00007f1911115eaa: subq   $0x5,(%rsp)
  0x00007f1911115eaf: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f1911115eb4: hlt    
  0x00007f1911115eb5: hlt    
  0x00007f1911115eb6: hlt    
  0x00007f1911115eb7: hlt    
<nmethod compile_id='18' compiler='C2' level='4' entry='0x00007f1911115e20' size='832' address='0x00007f1911115cd0' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='504' scopes_pcs_offset='584' dependencies_offset='824' oops_offset='488' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='59' count='5632' iicount='5632' stamp='0.125'/>
<make_not_entrant thread='139745423410944' compile_id='15' compiler='C1' level='3' stamp='0.125'/>
<writer thread='139745421305600'/>
Decoding compiled method 0x00007f1911116050:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/CharSequence&apos;
  #           [sp+0xf0]  (sp of caller)
  0x00007f19111163a0: mov    %eax,-0x14000(%rsp)
  0x00007f19111163a7: push   %rbp
  0x00007f19111163a8: sub    $0xe0,%rsp
  0x00007f19111163af: mov    %rsi,0x68(%rsp)
  0x00007f19111163b4: movabs $0x7f190cf5c028,%rdi  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f19111163be: mov    0xdc(%rdi),%ebx
  0x00007f19111163c4: add    $0x8,%ebx
  0x00007f19111163c7: mov    %ebx,0xdc(%rdi)
  0x00007f19111163cd: movabs $0x7f190cf5b2a8,%rdi  ;   {metadata({method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f19111163d7: and    $0x1ff8,%ebx
  0x00007f19111163dd: cmp    $0x0,%ebx
  0x00007f19111163e0: je     0x00007f1911117651  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@0 (line 455)

  0x00007f19111163e6: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00007f1911117668
  0x00007f19111163e9: mov    %rsi,%rdi
  0x00007f19111163ec: movabs $0x7f190cf5c028,%rbx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f19111163f6: mov    0x8(%rdi),%edi
  0x00007f19111163f9: shl    $0x3,%rdi
  0x00007f19111163fd: cmp    0x110(%rbx),%rdi
  0x00007f1911116404: jne    0x00007f1911116413
  0x00007f1911116406: addq   $0x1,0x118(%rbx)
  0x00007f191111640e: jmpq   0x00007f1911116479
  0x00007f1911116413: cmp    0x120(%rbx),%rdi
  0x00007f191111641a: jne    0x00007f1911116429
  0x00007f191111641c: addq   $0x1,0x128(%rbx)
  0x00007f1911116424: jmpq   0x00007f1911116479
  0x00007f1911116429: cmpq   $0x0,0x110(%rbx)
  0x00007f1911116434: jne    0x00007f191111644d
  0x00007f1911116436: mov    %rdi,0x110(%rbx)
  0x00007f191111643d: movq   $0x1,0x118(%rbx)
  0x00007f1911116448: jmpq   0x00007f1911116479
  0x00007f191111644d: cmpq   $0x0,0x120(%rbx)
  0x00007f1911116458: jne    0x00007f1911116471
  0x00007f191111645a: mov    %rdi,0x120(%rbx)
  0x00007f1911116461: movq   $0x1,0x128(%rbx)
  0x00007f191111646c: jmpq   0x00007f1911116479
  0x00007f1911116471: addq   $0x1,0x108(%rbx)
  0x00007f1911116479: mov    %rsi,%rdi
  0x00007f191111647c: mov    %rdi,%rsi          ;*invokeinterface length
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)

  0x00007f191111647f: nop
  0x00007f1911116480: nop
  0x00007f1911116481: nop
  0x00007f1911116482: nop
  0x00007f1911116483: nop
  0x00007f1911116484: nop
  0x00007f1911116485: movabs $0xffffffffffffffff,%rax
  0x00007f191111648f: callq  0x00007f1911046220  ; OopMap{[104]=Oop off=244}
                                                ;*invokeinterface length
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ;   {virtual_call}
  0x00007f1911116494: cmp    $0x24,%eax
  0x00007f1911116497: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f19111164a1: movabs $0x138,%rsi
  0x00007f19111164ab: je     0x00007f19111164bb
  0x00007f19111164b1: movabs $0x148,%rsi
  0x00007f19111164bb: mov    (%rdx,%rsi,1),%rdi
  0x00007f19111164bf: lea    0x1(%rdi),%rdi
  0x00007f19111164c3: mov    %rdi,(%rdx,%rsi,1)
  0x00007f19111164c7: jne    0x00007f19111173d9  ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@8 (line 455)

  0x00007f19111164cd: mov    0x68(%rsp),%rsi
  0x00007f19111164d2: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f19111164dc: mov    0x8(%rsi),%esi
  0x00007f19111164df: shl    $0x3,%rsi
  0x00007f19111164e3: cmp    0x170(%rdx),%rsi
  0x00007f19111164ea: jne    0x00007f19111164f9
  0x00007f19111164ec: addq   $0x1,0x178(%rdx)
  0x00007f19111164f4: jmpq   0x00007f191111655f
  0x00007f19111164f9: cmp    0x180(%rdx),%rsi
  0x00007f1911116500: jne    0x00007f191111650f
  0x00007f1911116502: addq   $0x1,0x188(%rdx)
  0x00007f191111650a: jmpq   0x00007f191111655f
  0x00007f191111650f: cmpq   $0x0,0x170(%rdx)
  0x00007f191111651a: jne    0x00007f1911116533
  0x00007f191111651c: mov    %rsi,0x170(%rdx)
  0x00007f1911116523: movq   $0x1,0x178(%rdx)
  0x00007f191111652e: jmpq   0x00007f191111655f
  0x00007f1911116533: cmpq   $0x0,0x180(%rdx)
  0x00007f191111653e: jne    0x00007f1911116557
  0x00007f1911116540: mov    %rsi,0x180(%rdx)
  0x00007f1911116547: movq   $0x1,0x188(%rdx)
  0x00007f1911116552: jmpq   0x00007f191111655f
  0x00007f1911116557: addq   $0x1,0x168(%rdx)
  0x00007f191111655f: mov    $0x8,%edx
  0x00007f1911116564: mov    0x68(%rsp),%rsi    ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@19 (line 458)

  0x00007f1911116569: nop
  0x00007f191111656a: nop
  0x00007f191111656b: nop
  0x00007f191111656c: nop
  0x00007f191111656d: movabs $0xffffffffffffffff,%rax
  0x00007f1911116577: callq  0x00007f1911046220  ; OopMap{[104]=Oop off=476}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@19 (line 458)
                                                ;   {virtual_call}
  0x00007f191111657c: cmp    $0x2d,%eax
  0x00007f191111657f: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116589: movabs $0x198,%rsi
  0x00007f1911116593: jne    0x00007f19111165a3
  0x00007f1911116599: movabs $0x1a8,%rsi
  0x00007f19111165a3: mov    (%rdx,%rsi,1),%rdi
  0x00007f19111165a7: lea    0x1(%rdi),%rdi
  0x00007f19111165ab: mov    %rdi,(%rdx,%rsi,1)
  0x00007f19111165af: jne    0x00007f191111715e  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@26 (line 458)

  0x00007f19111165b5: mov    0x68(%rsp),%rsi
  0x00007f19111165ba: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f19111165c4: mov    0x8(%rsi),%esi
  0x00007f19111165c7: shl    $0x3,%rsi
  0x00007f19111165cb: cmp    0x1c0(%rdx),%rsi
  0x00007f19111165d2: jne    0x00007f19111165e1
  0x00007f19111165d4: addq   $0x1,0x1c8(%rdx)
  0x00007f19111165dc: jmpq   0x00007f1911116647
  0x00007f19111165e1: cmp    0x1d0(%rdx),%rsi
  0x00007f19111165e8: jne    0x00007f19111165f7
  0x00007f19111165ea: addq   $0x1,0x1d8(%rdx)
  0x00007f19111165f2: jmpq   0x00007f1911116647
  0x00007f19111165f7: cmpq   $0x0,0x1c0(%rdx)
  0x00007f1911116602: jne    0x00007f191111661b
  0x00007f1911116604: mov    %rsi,0x1c0(%rdx)
  0x00007f191111660b: movq   $0x1,0x1c8(%rdx)
  0x00007f1911116616: jmpq   0x00007f1911116647
  0x00007f191111661b: cmpq   $0x0,0x1d0(%rdx)
  0x00007f1911116626: jne    0x00007f191111663f
  0x00007f1911116628: mov    %rsi,0x1d0(%rdx)
  0x00007f191111662f: movq   $0x1,0x1d8(%rdx)
  0x00007f191111663a: jmpq   0x00007f1911116647
  0x00007f191111663f: addq   $0x1,0x1b8(%rdx)
  0x00007f1911116647: mov    $0xd,%edx
  0x00007f191111664c: mov    0x68(%rsp),%rsi    ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@32 (line 458)

  0x00007f1911116651: nop
  0x00007f1911116652: nop
  0x00007f1911116653: nop
  0x00007f1911116654: nop
  0x00007f1911116655: movabs $0xffffffffffffffff,%rax
  0x00007f191111665f: callq  0x00007f1911046220  ; OopMap{[104]=Oop off=708}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@32 (line 458)
                                                ;   {virtual_call}
  0x00007f1911116664: cmp    $0x2d,%eax
  0x00007f1911116667: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116671: movabs $0x1e8,%rsi
  0x00007f191111667b: jne    0x00007f191111668b
  0x00007f1911116681: movabs $0x1f8,%rsi
  0x00007f191111668b: mov    (%rdx,%rsi,1),%rdi
  0x00007f191111668f: lea    0x1(%rdi),%rdi
  0x00007f1911116693: mov    %rdi,(%rdx,%rsi,1)
  0x00007f1911116697: jne    0x00007f191111715e  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@39 (line 458)

  0x00007f191111669d: mov    0x68(%rsp),%rsi
  0x00007f19111166a2: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f19111166ac: mov    0x8(%rsi),%esi
  0x00007f19111166af: shl    $0x3,%rsi
  0x00007f19111166b3: cmp    0x210(%rdx),%rsi
  0x00007f19111166ba: jne    0x00007f19111166c9
  0x00007f19111166bc: addq   $0x1,0x218(%rdx)
  0x00007f19111166c4: jmpq   0x00007f191111672f
  0x00007f19111166c9: cmp    0x220(%rdx),%rsi
  0x00007f19111166d0: jne    0x00007f19111166df
  0x00007f19111166d2: addq   $0x1,0x228(%rdx)
  0x00007f19111166da: jmpq   0x00007f191111672f
  0x00007f19111166df: cmpq   $0x0,0x210(%rdx)
  0x00007f19111166ea: jne    0x00007f1911116703
  0x00007f19111166ec: mov    %rsi,0x210(%rdx)
  0x00007f19111166f3: movq   $0x1,0x218(%rdx)
  0x00007f19111166fe: jmpq   0x00007f191111672f
  0x00007f1911116703: cmpq   $0x0,0x220(%rdx)
  0x00007f191111670e: jne    0x00007f1911116727
  0x00007f1911116710: mov    %rsi,0x220(%rdx)
  0x00007f1911116717: movq   $0x1,0x228(%rdx)
  0x00007f1911116722: jmpq   0x00007f191111672f
  0x00007f1911116727: addq   $0x1,0x208(%rdx)
  0x00007f191111672f: mov    $0x12,%edx
  0x00007f1911116734: mov    0x68(%rsp),%rsi    ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@45 (line 458)

  0x00007f1911116739: nop
  0x00007f191111673a: nop
  0x00007f191111673b: nop
  0x00007f191111673c: nop
  0x00007f191111673d: movabs $0xffffffffffffffff,%rax
  0x00007f1911116747: callq  0x00007f1911046220  ; OopMap{[104]=Oop off=940}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@45 (line 458)
                                                ;   {virtual_call}
  0x00007f191111674c: cmp    $0x2d,%eax
  0x00007f191111674f: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116759: movabs $0x238,%rsi
  0x00007f1911116763: jne    0x00007f1911116773
  0x00007f1911116769: movabs $0x248,%rsi
  0x00007f1911116773: mov    (%rdx,%rsi,1),%rdi
  0x00007f1911116777: lea    0x1(%rdi),%rdi
  0x00007f191111677b: mov    %rdi,(%rdx,%rsi,1)
  0x00007f191111677f: jne    0x00007f191111715e  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@52 (line 458)

  0x00007f1911116785: mov    0x68(%rsp),%rsi
  0x00007f191111678a: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116794: mov    0x8(%rsi),%esi
  0x00007f1911116797: shl    $0x3,%rsi
  0x00007f191111679b: cmp    0x260(%rdx),%rsi
  0x00007f19111167a2: jne    0x00007f19111167b1
  0x00007f19111167a4: addq   $0x1,0x268(%rdx)
  0x00007f19111167ac: jmpq   0x00007f1911116817
  0x00007f19111167b1: cmp    0x270(%rdx),%rsi
  0x00007f19111167b8: jne    0x00007f19111167c7
  0x00007f19111167ba: addq   $0x1,0x278(%rdx)
  0x00007f19111167c2: jmpq   0x00007f1911116817
  0x00007f19111167c7: cmpq   $0x0,0x260(%rdx)
  0x00007f19111167d2: jne    0x00007f19111167eb
  0x00007f19111167d4: mov    %rsi,0x260(%rdx)
  0x00007f19111167db: movq   $0x1,0x268(%rdx)
  0x00007f19111167e6: jmpq   0x00007f1911116817
  0x00007f19111167eb: cmpq   $0x0,0x270(%rdx)
  0x00007f19111167f6: jne    0x00007f191111680f
  0x00007f19111167f8: mov    %rsi,0x270(%rdx)
  0x00007f19111167ff: movq   $0x1,0x278(%rdx)
  0x00007f191111680a: jmpq   0x00007f1911116817
  0x00007f191111680f: addq   $0x1,0x258(%rdx)
  0x00007f1911116817: mov    $0x17,%edx
  0x00007f191111681c: mov    0x68(%rsp),%rsi    ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@58 (line 458)

  0x00007f1911116821: nop
  0x00007f1911116822: nop
  0x00007f1911116823: nop
  0x00007f1911116824: nop
  0x00007f1911116825: movabs $0xffffffffffffffff,%rax
  0x00007f191111682f: callq  0x00007f1911046220  ; OopMap{[104]=Oop off=1172}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@58 (line 458)
                                                ;   {virtual_call}
  0x00007f1911116834: cmp    $0x2d,%eax
  0x00007f1911116837: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116841: movabs $0x288,%rsi
  0x00007f191111684b: je     0x00007f191111685b
  0x00007f1911116851: movabs $0x298,%rsi
  0x00007f191111685b: mov    (%rdx,%rsi,1),%rdi
  0x00007f191111685f: lea    0x1(%rdi),%rdi
  0x00007f1911116863: mov    %rdi,(%rdx,%rsi,1)
  0x00007f1911116867: jne    0x00007f191111715e  ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@65 (line 458)

  0x00007f191111686d: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116877: incl   0x2b8(%rdx)
  0x00007f191111687d: mov    $0x0,%edi
  0x00007f1911116882: movabs $0x0,%rbx
  0x00007f191111688c: jmpq   0x00007f191111697d  ;*goto
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@80 (line 465)

  0x00007f1911116891: nopl   0x0(%rax)
  0x00007f1911116898: mov    %rsi,%rdx
  0x00007f191111689b: movabs $0x7f190cf5c028,%rax  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f19111168a5: mov    0x8(%rdx),%edx
  0x00007f19111168a8: shl    $0x3,%rdx
  0x00007f19111168ac: cmp    0x2d8(%rax),%rdx
  0x00007f19111168b3: jne    0x00007f19111168c2
  0x00007f19111168b5: addq   $0x1,0x2e0(%rax)
  0x00007f19111168bd: jmpq   0x00007f1911116928
  0x00007f19111168c2: cmp    0x2e8(%rax),%rdx
  0x00007f19111168c9: jne    0x00007f19111168d8
  0x00007f19111168cb: addq   $0x1,0x2f0(%rax)
  0x00007f19111168d3: jmpq   0x00007f1911116928
  0x00007f19111168d8: cmpq   $0x0,0x2d8(%rax)
  0x00007f19111168e3: jne    0x00007f19111168fc
  0x00007f19111168e5: mov    %rdx,0x2d8(%rax)
  0x00007f19111168ec: movq   $0x1,0x2e0(%rax)
  0x00007f19111168f7: jmpq   0x00007f1911116928
  0x00007f19111168fc: cmpq   $0x0,0x2e8(%rax)
  0x00007f1911116907: jne    0x00007f1911116920
  0x00007f1911116909: mov    %rdx,0x2e8(%rax)
  0x00007f1911116910: movq   $0x1,0x2f0(%rax)
  0x00007f191111691b: jmpq   0x00007f1911116928
  0x00007f1911116920: addq   $0x1,0x2d0(%rax)
  0x00007f1911116928: mov    %rdi,%rdx
  0x00007f191111692b: mov    %rsi,%rax
  0x00007f191111692e: mov    %rax,%rsi          ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)

  0x00007f1911116931: mov    %edi,0x78(%rsp)
  0x00007f1911116935: movabs $0xffffffffffffffff,%rax
  0x00007f191111693f: callq  0x00007f1911046220  ; OopMap{[104]=Oop off=1444}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)
                                                ;   {virtual_call}
  0x00007f1911116944: movabs $0x7f190cf5c028,%rsi  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f191111694e: addq   $0x1,0x300(%rsi)
  0x00007f1911116956: mov    %rax,%rsi          ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f1911116959: nop
  0x00007f191111695a: nop
  0x00007f191111695b: nop
  0x00007f191111695c: nop
  0x00007f191111695d: nop
  0x00007f191111695e: nop
  0x00007f191111695f: callq  0x00007f1911046420  ; OopMap{[104]=Oop off=1476}
                                                ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ;   {static_call}
  0x00007f1911116964: mov    $0x4,%ecx
  0x00007f1911116969: mov    0x70(%rsp),%rbx
  0x00007f191111696e: shl    %cl,%rbx
  0x00007f1911116971: movslq %eax,%rax
  0x00007f1911116974: or     %rax,%rbx
  0x00007f1911116977: mov    0x78(%rsp),%edi
  0x00007f191111697b: inc    %edi
  0x00007f191111697d: mov    %rbx,0x70(%rsp)
  0x00007f1911116982: mov    0x68(%rsp),%rsi
  0x00007f1911116987: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116991: mov    0xe0(%rdx),%eax
  0x00007f1911116997: add    $0x8,%eax
  0x00007f191111699a: mov    %eax,0xe0(%rdx)
  0x00007f19111169a0: movabs $0x7f190cf5b2a8,%rdx  ;   {metadata({method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f19111169aa: and    $0xfff8,%eax
  0x00007f19111169b0: cmp    $0x0,%eax
  0x00007f19111169b3: je     0x00007f191111766d  ; OopMap{rsi=Oop [104]=Oop off=1561}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@111 (line 465)

  0x00007f19111169b9: test   %eax,0x1637d741(%rip)        # 0x00007f1927494100
                                                ;   {poll}
  0x00007f19111169bf: cmp    $0x8,%edi
  0x00007f19111169c2: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f19111169cc: movabs $0x310,%rax
  0x00007f19111169d6: jl     0x00007f19111169e6
  0x00007f19111169dc: movabs $0x320,%rax
  0x00007f19111169e6: mov    (%rdx,%rax,1),%rcx
  0x00007f19111169ea: lea    0x1(%rcx),%rcx
  0x00007f19111169ee: mov    %rcx,(%rdx,%rax,1)
  0x00007f19111169f2: jl     0x00007f1911116898  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@111 (line 465)

  0x00007f19111169f8: mov    0x70(%rsp),%rbx
  0x00007f19111169fd: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116a07: incl   0x330(%rdx)
  0x00007f1911116a0d: mov    $0x9,%edi
  0x00007f1911116a12: jmpq   0x00007f1911116b00  ;*goto
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@118 (line 469)

  0x00007f1911116a17: nop
  0x00007f1911116a18: mov    %rsi,%rdx
  0x00007f1911116a1b: movabs $0x7f190cf5c028,%rax  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116a25: mov    0x8(%rdx),%edx
  0x00007f1911116a28: shl    $0x3,%rdx
  0x00007f1911116a2c: cmp    0x350(%rax),%rdx
  0x00007f1911116a33: jne    0x00007f1911116a42
  0x00007f1911116a35: addq   $0x1,0x358(%rax)
  0x00007f1911116a3d: jmpq   0x00007f1911116aa8
  0x00007f1911116a42: cmp    0x360(%rax),%rdx
  0x00007f1911116a49: jne    0x00007f1911116a58
  0x00007f1911116a4b: addq   $0x1,0x368(%rax)
  0x00007f1911116a53: jmpq   0x00007f1911116aa8
  0x00007f1911116a58: cmpq   $0x0,0x350(%rax)
  0x00007f1911116a63: jne    0x00007f1911116a7c
  0x00007f1911116a65: mov    %rdx,0x350(%rax)
  0x00007f1911116a6c: movq   $0x1,0x358(%rax)
  0x00007f1911116a77: jmpq   0x00007f1911116aa8
  0x00007f1911116a7c: cmpq   $0x0,0x360(%rax)
  0x00007f1911116a87: jne    0x00007f1911116aa0
  0x00007f1911116a89: mov    %rdx,0x360(%rax)
  0x00007f1911116a90: movq   $0x1,0x368(%rax)
  0x00007f1911116a9b: jmpq   0x00007f1911116aa8
  0x00007f1911116aa0: addq   $0x1,0x348(%rax)
  0x00007f1911116aa8: mov    %rdi,%rdx
  0x00007f1911116aab: mov    %rsi,%rax
  0x00007f1911116aae: mov    %rax,%rsi          ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)

  0x00007f1911116ab1: mov    %edi,0x7c(%rsp)
  0x00007f1911116ab5: movabs $0xffffffffffffffff,%rax
  0x00007f1911116abf: callq  0x00007f1911046220  ; OopMap{[104]=Oop off=1828}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)
                                                ;   {virtual_call}
  0x00007f1911116ac4: movabs $0x7f190cf5c028,%rsi  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116ace: addq   $0x1,0x378(%rsi)
  0x00007f1911116ad6: mov    %rax,%rsi          ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f1911116ad9: nop
  0x00007f1911116ada: nop
  0x00007f1911116adb: nop
  0x00007f1911116adc: nop
  0x00007f1911116add: nop
  0x00007f1911116ade: nop
  0x00007f1911116adf: callq  0x00007f1911046420  ; OopMap{[104]=Oop off=1860}
                                                ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ;   {static_call}
  0x00007f1911116ae4: mov    $0x4,%ecx
  0x00007f1911116ae9: mov    0x80(%rsp),%rbx
  0x00007f1911116af1: shl    %cl,%rbx
  0x00007f1911116af4: movslq %eax,%rax
  0x00007f1911116af7: or     %rax,%rbx
  0x00007f1911116afa: mov    0x7c(%rsp),%edi
  0x00007f1911116afe: inc    %edi
  0x00007f1911116b00: mov    %rbx,0x80(%rsp)
  0x00007f1911116b08: mov    0x68(%rsp),%rsi
  0x00007f1911116b0d: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116b17: mov    0xe0(%rdx),%eax
  0x00007f1911116b1d: add    $0x8,%eax
  0x00007f1911116b20: mov    %eax,0xe0(%rdx)
  0x00007f1911116b26: movabs $0x7f190cf5b2a8,%rdx  ;   {metadata({method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116b30: and    $0xfff8,%eax
  0x00007f1911116b36: cmp    $0x0,%eax
  0x00007f1911116b39: je     0x00007f1911117684  ; OopMap{rsi=Oop [104]=Oop off=1951}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@149 (line 469)

  0x00007f1911116b3f: test   %eax,0x1637d5bb(%rip)        # 0x00007f1927494100
                                                ;   {poll}
  0x00007f1911116b45: cmp    $0xd,%edi
  0x00007f1911116b48: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116b52: movabs $0x388,%rax
  0x00007f1911116b5c: jl     0x00007f1911116b6c
  0x00007f1911116b62: movabs $0x398,%rax
  0x00007f1911116b6c: mov    (%rdx,%rax,1),%rcx
  0x00007f1911116b70: lea    0x1(%rcx),%rcx
  0x00007f1911116b74: mov    %rcx,(%rdx,%rax,1)
  0x00007f1911116b78: jl     0x00007f1911116a18  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@149 (line 469)

  0x00007f1911116b7e: mov    0x80(%rsp),%rbx
  0x00007f1911116b86: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116b90: incl   0x3a8(%rdx)
  0x00007f1911116b96: mov    $0xe,%edi
  0x00007f1911116b9b: jmpq   0x00007f1911116c93  ;*goto
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@156 (line 473)

  0x00007f1911116ba0: mov    %rsi,%rdx
  0x00007f1911116ba3: movabs $0x7f190cf5c028,%rax  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116bad: mov    0x8(%rdx),%edx
  0x00007f1911116bb0: shl    $0x3,%rdx
  0x00007f1911116bb4: cmp    0x3c8(%rax),%rdx
  0x00007f1911116bbb: jne    0x00007f1911116bca
  0x00007f1911116bbd: addq   $0x1,0x3d0(%rax)
  0x00007f1911116bc5: jmpq   0x00007f1911116c30
  0x00007f1911116bca: cmp    0x3d8(%rax),%rdx
  0x00007f1911116bd1: jne    0x00007f1911116be0
  0x00007f1911116bd3: addq   $0x1,0x3e0(%rax)
  0x00007f1911116bdb: jmpq   0x00007f1911116c30
  0x00007f1911116be0: cmpq   $0x0,0x3c8(%rax)
  0x00007f1911116beb: jne    0x00007f1911116c04
  0x00007f1911116bed: mov    %rdx,0x3c8(%rax)
  0x00007f1911116bf4: movq   $0x1,0x3d0(%rax)
  0x00007f1911116bff: jmpq   0x00007f1911116c30
  0x00007f1911116c04: cmpq   $0x0,0x3d8(%rax)
  0x00007f1911116c0f: jne    0x00007f1911116c28
  0x00007f1911116c11: mov    %rdx,0x3d8(%rax)
  0x00007f1911116c18: movq   $0x1,0x3e0(%rax)
  0x00007f1911116c23: jmpq   0x00007f1911116c30
  0x00007f1911116c28: addq   $0x1,0x3c0(%rax)
  0x00007f1911116c30: mov    %rdi,%rdx
  0x00007f1911116c33: mov    %rsi,%rax
  0x00007f1911116c36: mov    %rax,%rsi          ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)

  0x00007f1911116c39: mov    %edi,0x90(%rsp)
  0x00007f1911116c40: nop
  0x00007f1911116c41: nop
  0x00007f1911116c42: nop
  0x00007f1911116c43: nop
  0x00007f1911116c44: nop
  0x00007f1911116c45: movabs $0xffffffffffffffff,%rax
  0x00007f1911116c4f: callq  0x00007f1911046220  ; OopMap{[104]=Oop off=2228}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)
                                                ;   {virtual_call}
  0x00007f1911116c54: movabs $0x7f190cf5c028,%rsi  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116c5e: addq   $0x1,0x3f0(%rsi)
  0x00007f1911116c66: mov    %rax,%rsi          ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f1911116c69: nop
  0x00007f1911116c6a: nop
  0x00007f1911116c6b: nop
  0x00007f1911116c6c: nop
  0x00007f1911116c6d: nop
  0x00007f1911116c6e: nop
  0x00007f1911116c6f: callq  0x00007f1911046420  ; OopMap{[104]=Oop off=2260}
                                                ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ;   {static_call}
  0x00007f1911116c74: mov    $0x4,%ecx
  0x00007f1911116c79: mov    0x88(%rsp),%rbx
  0x00007f1911116c81: shl    %cl,%rbx
  0x00007f1911116c84: movslq %eax,%rax
  0x00007f1911116c87: or     %rax,%rbx
  0x00007f1911116c8a: mov    0x90(%rsp),%edi
  0x00007f1911116c91: inc    %edi
  0x00007f1911116c93: mov    %rbx,0x88(%rsp)
  0x00007f1911116c9b: mov    0x68(%rsp),%rsi
  0x00007f1911116ca0: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116caa: mov    0xe0(%rdx),%eax
  0x00007f1911116cb0: add    $0x8,%eax
  0x00007f1911116cb3: mov    %eax,0xe0(%rdx)
  0x00007f1911116cb9: movabs $0x7f190cf5b2a8,%rdx  ;   {metadata({method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116cc3: and    $0xfff8,%eax
  0x00007f1911116cc9: cmp    $0x0,%eax
  0x00007f1911116ccc: je     0x00007f191111769b  ; OopMap{rsi=Oop [104]=Oop off=2354}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@187 (line 473)

  0x00007f1911116cd2: test   %eax,0x1637d428(%rip)        # 0x00007f1927494100
                                                ;   {poll}
  0x00007f1911116cd8: cmp    $0x12,%edi
  0x00007f1911116cdb: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116ce5: movabs $0x400,%rax
  0x00007f1911116cef: jl     0x00007f1911116cff
  0x00007f1911116cf5: movabs $0x410,%rax
  0x00007f1911116cff: mov    (%rdx,%rax,1),%rcx
  0x00007f1911116d03: lea    0x1(%rcx),%rcx
  0x00007f1911116d07: mov    %rcx,(%rdx,%rax,1)
  0x00007f1911116d0b: jl     0x00007f1911116ba0  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@187 (line 473)

  0x00007f1911116d11: mov    0x88(%rsp),%rbx
  0x00007f1911116d19: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116d23: incl   0x420(%rdx)
  0x00007f1911116d29: mov    $0x13,%edi
  0x00007f1911116d2e: movabs $0x0,%rax
  0x00007f1911116d38: mov    %rax,0x98(%rsp)
  0x00007f1911116d40: mov    %rbx,0x88(%rsp)
  0x00007f1911116d48: jmpq   0x00007f1911116e4e  ;*goto
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@194 (line 479)

  0x00007f1911116d4d: data16 xchg %ax,%ax
  0x00007f1911116d50: mov    %rsi,%rdx
  0x00007f1911116d53: movabs $0x7f190cf5c028,%rcx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116d5d: mov    0x8(%rdx),%edx
  0x00007f1911116d60: shl    $0x3,%rdx
  0x00007f1911116d64: cmp    0x440(%rcx),%rdx
  0x00007f1911116d6b: jne    0x00007f1911116d7a
  0x00007f1911116d6d: addq   $0x1,0x448(%rcx)
  0x00007f1911116d75: jmpq   0x00007f1911116de0
  0x00007f1911116d7a: cmp    0x450(%rcx),%rdx
  0x00007f1911116d81: jne    0x00007f1911116d90
  0x00007f1911116d83: addq   $0x1,0x458(%rcx)
  0x00007f1911116d8b: jmpq   0x00007f1911116de0
  0x00007f1911116d90: cmpq   $0x0,0x440(%rcx)
  0x00007f1911116d9b: jne    0x00007f1911116db4
  0x00007f1911116d9d: mov    %rdx,0x440(%rcx)
  0x00007f1911116da4: movq   $0x1,0x448(%rcx)
  0x00007f1911116daf: jmpq   0x00007f1911116de0
  0x00007f1911116db4: cmpq   $0x0,0x450(%rcx)
  0x00007f1911116dbf: jne    0x00007f1911116dd8
  0x00007f1911116dc1: mov    %rdx,0x450(%rcx)
  0x00007f1911116dc8: movq   $0x1,0x458(%rcx)
  0x00007f1911116dd3: jmpq   0x00007f1911116de0
  0x00007f1911116dd8: addq   $0x1,0x438(%rcx)
  0x00007f1911116de0: mov    %rdi,%rdx
  0x00007f1911116de3: mov    %rsi,%rcx
  0x00007f1911116de6: mov    %rcx,%rsi          ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)

  0x00007f1911116de9: mov    %edi,0x94(%rsp)
  0x00007f1911116df0: nop
  0x00007f1911116df1: nop
  0x00007f1911116df2: nop
  0x00007f1911116df3: nop
  0x00007f1911116df4: nop
  0x00007f1911116df5: movabs $0xffffffffffffffff,%rax
  0x00007f1911116dff: callq  0x00007f1911046220  ; OopMap{[104]=Oop off=2660}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)
                                                ;   {virtual_call}
  0x00007f1911116e04: movabs $0x7f190cf5c028,%rsi  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116e0e: addq   $0x1,0x468(%rsi)
  0x00007f1911116e16: mov    %rax,%rsi          ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f1911116e19: nop
  0x00007f1911116e1a: nop
  0x00007f1911116e1b: nop
  0x00007f1911116e1c: nop
  0x00007f1911116e1d: nop
  0x00007f1911116e1e: nop
  0x00007f1911116e1f: callq  0x00007f1911046420  ; OopMap{[104]=Oop off=2692}
                                                ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ;   {static_call}
  0x00007f1911116e24: mov    $0x4,%ecx
  0x00007f1911116e29: mov    0x98(%rsp),%rdx
  0x00007f1911116e31: shl    %cl,%rdx
  0x00007f1911116e34: movslq %eax,%rax
  0x00007f1911116e37: or     %rax,%rdx
  0x00007f1911116e3a: mov    0x94(%rsp),%edi
  0x00007f1911116e41: inc    %edi
  0x00007f1911116e43: mov    %rdx,%rax          ;*iload
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@221 (line 479)

  0x00007f1911116e46: mov    %rax,0x98(%rsp)
  0x00007f1911116e4e: mov    0x68(%rsp),%rsi
  0x00007f1911116e53: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116e5d: mov    0xe0(%rdx),%ecx
  0x00007f1911116e63: add    $0x8,%ecx
  0x00007f1911116e66: mov    %ecx,0xe0(%rdx)
  0x00007f1911116e6c: movabs $0x7f190cf5b2a8,%rdx  ;   {metadata({method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116e76: and    $0xfff8,%ecx
  0x00007f1911116e7c: cmp    $0x0,%ecx
  0x00007f1911116e7f: je     0x00007f19111176b2  ; OopMap{rsi=Oop [104]=Oop off=2789}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@225 (line 479)

  0x00007f1911116e85: test   %eax,0x1637d275(%rip)        # 0x00007f1927494100
                                                ;   {poll}
  0x00007f1911116e8b: cmp    $0x17,%edi
  0x00007f1911116e8e: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116e98: movabs $0x478,%rcx
  0x00007f1911116ea2: jl     0x00007f1911116eb2
  0x00007f1911116ea8: movabs $0x488,%rcx
  0x00007f1911116eb2: mov    (%rdx,%rcx,1),%r8
  0x00007f1911116eb6: lea    0x1(%r8),%r8
  0x00007f1911116eba: mov    %r8,(%rdx,%rcx,1)
  0x00007f1911116ebe: jl     0x00007f1911116d50  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@225 (line 479)

  0x00007f1911116ec4: mov    0x98(%rsp),%rax
  0x00007f1911116ecc: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116ed6: incl   0x498(%rdx)
  0x00007f1911116edc: mov    $0x18,%edi
  0x00007f1911116ee1: mov    %rax,0xa0(%rsp)
  0x00007f1911116ee9: jmpq   0x00007f1911116fee  ;*goto
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@232 (line 483)

  0x00007f1911116eee: xchg   %ax,%ax
  0x00007f1911116ef0: mov    %rsi,%rdx
  0x00007f1911116ef3: movabs $0x7f190cf5c028,%rbx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116efd: mov    0x8(%rdx),%edx
  0x00007f1911116f00: shl    $0x3,%rdx
  0x00007f1911116f04: cmp    0x4b8(%rbx),%rdx
  0x00007f1911116f0b: jne    0x00007f1911116f1a
  0x00007f1911116f0d: addq   $0x1,0x4c0(%rbx)
  0x00007f1911116f15: jmpq   0x00007f1911116f80
  0x00007f1911116f1a: cmp    0x4c8(%rbx),%rdx
  0x00007f1911116f21: jne    0x00007f1911116f30
  0x00007f1911116f23: addq   $0x1,0x4d0(%rbx)
  0x00007f1911116f2b: jmpq   0x00007f1911116f80
  0x00007f1911116f30: cmpq   $0x0,0x4b8(%rbx)
  0x00007f1911116f3b: jne    0x00007f1911116f54
  0x00007f1911116f3d: mov    %rdx,0x4b8(%rbx)
  0x00007f1911116f44: movq   $0x1,0x4c0(%rbx)
  0x00007f1911116f4f: jmpq   0x00007f1911116f80
  0x00007f1911116f54: cmpq   $0x0,0x4c8(%rbx)
  0x00007f1911116f5f: jne    0x00007f1911116f78
  0x00007f1911116f61: mov    %rdx,0x4c8(%rbx)
  0x00007f1911116f68: movq   $0x1,0x4d0(%rbx)
  0x00007f1911116f73: jmpq   0x00007f1911116f80
  0x00007f1911116f78: addq   $0x1,0x4b0(%rbx)
  0x00007f1911116f80: mov    %rdi,%rdx
  0x00007f1911116f83: mov    %rsi,%rbx
  0x00007f1911116f86: mov    %rbx,%rsi          ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)

  0x00007f1911116f89: mov    %edi,0xa8(%rsp)
  0x00007f1911116f90: nop
  0x00007f1911116f91: nop
  0x00007f1911116f92: nop
  0x00007f1911116f93: nop
  0x00007f1911116f94: nop
  0x00007f1911116f95: movabs $0xffffffffffffffff,%rax
  0x00007f1911116f9f: callq  0x00007f1911046220  ; OopMap{[104]=Oop off=3076}
                                                ;*invokeinterface charAt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)
                                                ;   {virtual_call}
  0x00007f1911116fa4: movabs $0x7f190cf5c028,%rsi  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116fae: addq   $0x1,0x4e0(%rsi)
  0x00007f1911116fb6: mov    %rax,%rsi          ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f1911116fb9: nop
  0x00007f1911116fba: nop
  0x00007f1911116fbb: nop
  0x00007f1911116fbc: nop
  0x00007f1911116fbd: nop
  0x00007f1911116fbe: nop
  0x00007f1911116fbf: callq  0x00007f1911046420  ; OopMap{[104]=Oop off=3108}
                                                ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ;   {static_call}
  0x00007f1911116fc4: mov    $0x4,%ecx
  0x00007f1911116fc9: mov    0xa0(%rsp),%rdx
  0x00007f1911116fd1: shl    %cl,%rdx
  0x00007f1911116fd4: movslq %eax,%rax
  0x00007f1911116fd7: or     %rax,%rdx
  0x00007f1911116fda: mov    0xa8(%rsp),%edi
  0x00007f1911116fe1: inc    %edi
  0x00007f1911116fe3: mov    %rdx,%rbx          ;*iload
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@259 (line 483)

  0x00007f1911116fe6: mov    %rbx,0xa0(%rsp)
  0x00007f1911116fee: mov    0x68(%rsp),%rsi
  0x00007f1911116ff3: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911116ffd: mov    0xe0(%rdx),%ebx
  0x00007f1911117003: add    $0x8,%ebx
  0x00007f1911117006: mov    %ebx,0xe0(%rdx)
  0x00007f191111700c: movabs $0x7f190cf5b2a8,%rdx  ;   {metadata({method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911117016: and    $0xfff8,%ebx
  0x00007f191111701c: cmp    $0x0,%ebx
  0x00007f191111701f: je     0x00007f19111176c9  ; OopMap{rsi=Oop [104]=Oop off=3205}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@263 (line 483)

  0x00007f1911117025: test   %eax,0x1637d0d5(%rip)        # 0x00007f1927494100
                                                ;   {poll}
  0x00007f191111702b: cmp    $0x24,%edi
  0x00007f191111702e: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911117038: movabs $0x4f0,%rbx
  0x00007f1911117042: jl     0x00007f1911117052
  0x00007f1911117048: movabs $0x500,%rbx
  0x00007f1911117052: mov    (%rdx,%rbx,1),%rcx
  0x00007f1911117056: lea    0x1(%rcx),%rcx
  0x00007f191111705a: mov    %rcx,(%rdx,%rbx,1)
  0x00007f191111705e: jl     0x00007f1911116ef0  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@263 (line 483)

  0x00007f1911117064: mov    0xa0(%rsp),%rbx
  0x00007f191111706c: mov    0x88(%rsp),%r8
  0x00007f1911117074: movabs $0x7c00434f0,%rdx  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007f191111707e: mov    0x60(%r15),%rax
  0x00007f1911117082: lea    0x20(%rax),%rdi
  0x00007f1911117086: cmp    0x70(%r15),%rdi
  0x00007f191111708a: ja     0x00007f19111176e0
  0x00007f1911117090: mov    %rdi,0x60(%r15)
  0x00007f1911117094: mov    0xa8(%rdx),%rcx
  0x00007f191111709b: mov    %rcx,(%rax)
  0x00007f191111709e: mov    %rdx,%rcx
  0x00007f19111170a1: shr    $0x3,%rcx
  0x00007f19111170a5: mov    %ecx,0x8(%rax)
  0x00007f19111170a8: xor    %rcx,%rcx
  0x00007f19111170ab: mov    %ecx,0xc(%rax)
  0x00007f19111170ae: xor    %rcx,%rcx
  0x00007f19111170b1: mov    %rcx,0x10(%rax)
  0x00007f19111170b5: mov    %rcx,0x18(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@266 (line 488)

  0x00007f19111170b9: mov    %rax,%rdx
  0x00007f19111170bc: movabs $0x7f190cf5c028,%rsi  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f19111170c6: addq   $0x1,0x510(%rsi)
  0x00007f19111170ce: movabs $0x7f190cd88820,%rdx  ;   {metadata(method data for {method} {0x00007f190cd875d0} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007f19111170d8: mov    0xdc(%rdx),%esi
  0x00007f19111170de: add    $0x8,%esi
  0x00007f19111170e1: mov    %esi,0xdc(%rdx)
  0x00007f19111170e7: movabs $0x7f190cd875d0,%rdx  ;   {metadata({method} {0x00007f190cd875d0} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007f19111170f1: and    $0x7ffff8,%esi
  0x00007f19111170f7: cmp    $0x0,%esi
  0x00007f19111170fa: je     0x00007f19111176ed
  0x00007f1911117100: mov    %rax,%rdx
  0x00007f1911117103: movabs $0x7f190cd88820,%rsi  ;   {metadata(method data for {method} {0x00007f190cd875d0} &apos;&lt;init&gt;&apos; &apos;(JJ)V&apos; in &apos;java/util/UUID&apos;)}
  0x00007f191111710d: addq   $0x1,0x108(%rsi)
  0x00007f1911117115: movabs $0x7f190cccf108,%rdx  ;   {metadata(method data for {method} {0x00007f190cb59480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f191111711f: mov    0xdc(%rdx),%esi
  0x00007f1911117125: add    $0x8,%esi
  0x00007f1911117128: mov    %esi,0xdc(%rdx)
  0x00007f191111712e: movabs $0x7f190cb59480,%rdx  ;   {metadata({method} {0x00007f190cb59480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f1911117138: and    $0x7ffff8,%esi
  0x00007f191111713e: cmp    $0x0,%esi
  0x00007f1911117141: je     0x00007f1911117704
  0x00007f1911117147: mov    %r8,0x10(%rax)     ;*putfield mostSigBits
                                                ; - java.util.UUID::&lt;init&gt;@6 (line 129)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@272 (line 488)

  0x00007f191111714b: mov    %rbx,0x18(%rax)    ;*putfield leastSigBits
                                                ; - java.util.UUID::&lt;init&gt;@11 (line 130)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@272 (line 488)

  0x00007f191111714f: add    $0xe0,%rsp
  0x00007f1911117156: pop    %rbp
  0x00007f1911117157: test   %eax,0x1637cfa3(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191111715d: retq                      ;*areturn
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@275 (line 488)

  0x00007f191111715e: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911117168: addq   $0x1,0x2a8(%rdx)
  0x00007f1911117170: movabs $0x7f190cf5c588,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f191111717a: mov    0xdc(%rdx),%esi
  0x00007f1911117180: add    $0x8,%esi
  0x00007f1911117183: mov    %esi,0xdc(%rdx)
  0x00007f1911117189: movabs $0x7f190cf5b380,%rdx  ;   {metadata({method} {0x00007f190cf5b380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911117193: and    $0x7ffff8,%esi
  0x00007f1911117199: cmp    $0x0,%esi
  0x00007f191111719c: je     0x00007f191111771b
  0x00007f19111171a2: nopw   0x0(%rax,%rax,1)
  0x00007f19111171a8: jmpq   0x00007f1911117741  ;   {no_reloc}
  0x00007f19111171ad: add    %al,(%rax)
  0x00007f19111171af: add    %al,(%rax)
  0x00007f19111171b1: add    %cl,-0x75(%rcx)
  0x00007f19111171b4: rex.RXB (bad) 
  0x00007f19111171b6: lea    0x20(%rax),%rdi
  0x00007f19111171ba: cmp    0x70(%r15),%rdi
  0x00007f19111171be: ja     0x00007f191111774b
  0x00007f19111171c4: mov    %rdi,0x60(%r15)
  0x00007f19111171c8: mov    0xa8(%rdx),%rcx
  0x00007f19111171cf: mov    %rcx,(%rax)
  0x00007f19111171d2: mov    %rdx,%rcx
  0x00007f19111171d5: shr    $0x3,%rcx
  0x00007f19111171d9: mov    %ecx,0x8(%rax)
  0x00007f19111171dc: xor    %rcx,%rcx
  0x00007f19111171df: mov    %ecx,0xc(%rax)
  0x00007f19111171e2: xor    %rcx,%rcx
  0x00007f19111171e5: mov    %rcx,0x10(%rax)
  0x00007f19111171e9: mov    %rcx,0x18(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@0 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)

  0x00007f19111171ed: data16 xchg %ax,%ax
  0x00007f19111171f0: jmpq   0x00007f1911117767  ;   {no_reloc}
  0x00007f19111171f5: add    %al,(%rax)
  0x00007f19111171f7: add    %al,(%rax)
  0x00007f19111171f9: add    %cl,-0x77(%rax)
  0x00007f19111171fc: test   %ah,(%rax,%rdi,4)
  0x00007f19111171ff: add    %al,(%rax)
  0x00007f1911117201: add    %ch,%cl
  0x00007f1911117203: pushq  $0x5
  0x00007f1911117205: add    %al,(%rax)         ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@4 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)

  0x00007f1911117207: mov    %rax,%rdx
  0x00007f191111720a: movabs $0x7f190cf5c588,%rsi  ;   {metadata(method data for {method} {0x00007f190cf5b380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911117214: addq   $0x1,0x108(%rsi)
  0x00007f191111721c: movabs $0x67108a410,%rdx  ;   {oop(&quot;Invalid UUID string: &quot;)}
  0x00007f1911117226: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@10 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)

  0x00007f1911117229: mov    %rax,0xb0(%rsp)
  0x00007f1911117231: nop
  0x00007f1911117232: nop
  0x00007f1911117233: nop
  0x00007f1911117234: nop
  0x00007f1911117235: nop
  0x00007f1911117236: nop
  0x00007f1911117237: callq  0x00007f1911046020  ; OopMap{[104]=Oop [176]=Oop [184]=Oop off=3740}
                                                ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@10 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {optimized virtual_call}
  0x00007f191111723c: mov    0xb0(%rsp),%rax
  0x00007f1911117244: movabs $0x7f190cf5c588,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f191111724e: mov    0x8(%rax),%eax
  0x00007f1911117251: shl    $0x3,%rax
  0x00007f1911117255: cmp    0x120(%rdx),%rax
  0x00007f191111725c: jne    0x00007f191111726b
  0x00007f191111725e: addq   $0x1,0x128(%rdx)
  0x00007f1911117266: jmpq   0x00007f19111172d1
  0x00007f191111726b: cmp    0x130(%rdx),%rax
  0x00007f1911117272: jne    0x00007f1911117281
  0x00007f1911117274: addq   $0x1,0x138(%rdx)
  0x00007f191111727c: jmpq   0x00007f19111172d1
  0x00007f1911117281: cmpq   $0x0,0x120(%rdx)
  0x00007f191111728c: jne    0x00007f19111172a5
  0x00007f191111728e: mov    %rax,0x120(%rdx)
  0x00007f1911117295: movq   $0x1,0x128(%rdx)
  0x00007f19111172a0: jmpq   0x00007f19111172d1
  0x00007f19111172a5: cmpq   $0x0,0x130(%rdx)
  0x00007f19111172b0: jne    0x00007f19111172c9
  0x00007f19111172b2: mov    %rax,0x130(%rdx)
  0x00007f19111172b9: movq   $0x1,0x138(%rdx)
  0x00007f19111172c4: jmpq   0x00007f19111172d1
  0x00007f19111172c9: addq   $0x1,0x118(%rdx)
  0x00007f19111172d1: mov    0x68(%rsp),%rdx
  0x00007f19111172d6: mov    0xb0(%rsp),%rsi    ;*invokevirtual append
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@14 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)

  0x00007f19111172de: nop
  0x00007f19111172df: nop
  0x00007f19111172e0: nop
  0x00007f19111172e1: nop
  0x00007f19111172e2: nop
  0x00007f19111172e3: nop
  0x00007f19111172e4: nop
  0x00007f19111172e5: movabs $0xffffffffffffffff,%rax
  0x00007f19111172ef: callq  0x00007f1911046220  ; OopMap{[184]=Oop off=3924}
                                                ;*invokevirtual append
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@14 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {virtual_call}
  0x00007f19111172f4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00007f191111777e
  0x00007f19111172f7: mov    %rax,%rsi
  0x00007f19111172fa: movabs $0x7f190cf5c588,%rdi  ;   {metadata(method data for {method} {0x00007f190cf5b380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911117304: mov    0x8(%rsi),%esi
  0x00007f1911117307: shl    $0x3,%rsi
  0x00007f191111730b: cmp    0x150(%rdi),%rsi
  0x00007f1911117312: jne    0x00007f1911117321
  0x00007f1911117314: addq   $0x1,0x158(%rdi)
  0x00007f191111731c: jmpq   0x00007f1911117387
  0x00007f1911117321: cmp    0x160(%rdi),%rsi
  0x00007f1911117328: jne    0x00007f1911117337
  0x00007f191111732a: addq   $0x1,0x168(%rdi)
  0x00007f1911117332: jmpq   0x00007f1911117387
  0x00007f1911117337: cmpq   $0x0,0x150(%rdi)
  0x00007f1911117342: jne    0x00007f191111735b
  0x00007f1911117344: mov    %rsi,0x150(%rdi)
  0x00007f191111734b: movq   $0x1,0x158(%rdi)
  0x00007f1911117356: jmpq   0x00007f1911117387
  0x00007f191111735b: cmpq   $0x0,0x160(%rdi)
  0x00007f1911117366: jne    0x00007f191111737f
  0x00007f1911117368: mov    %rsi,0x160(%rdi)
  0x00007f191111736f: movq   $0x1,0x168(%rdi)
  0x00007f191111737a: jmpq   0x00007f1911117387
  0x00007f191111737f: addq   $0x1,0x148(%rdi)
  0x00007f1911117387: mov    %rax,%rsi          ;*invokevirtual toString
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@17 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)

  0x00007f191111738a: nop
  0x00007f191111738b: nop
  0x00007f191111738c: nop
  0x00007f191111738d: movabs $0xffffffffffffffff,%rax
  0x00007f1911117397: callq  0x00007f1911046220  ; OopMap{[184]=Oop off=4092}
                                                ;*invokevirtual toString
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@17 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {virtual_call}
  0x00007f191111739c: mov    0xb8(%rsp),%rdx
  0x00007f19111173a4: movabs $0x7f190cf5c588,%rsi  ;   {metadata(method data for {method} {0x00007f190cf5b380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f19111173ae: addq   $0x1,0x178(%rsi)
  0x00007f19111173b6: mov    %rax,%rdx
  0x00007f19111173b9: mov    0xb8(%rsp),%rsi    ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@20 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)

  0x00007f19111173c1: nop
  0x00007f19111173c2: nop
  0x00007f19111173c3: nop
  0x00007f19111173c4: nop
  0x00007f19111173c5: nop
  0x00007f19111173c6: nop
  0x00007f19111173c7: callq  0x00007f1911046020  ; OopMap{[184]=Oop off=4140}
                                                ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@20 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {optimized virtual_call}
  0x00007f19111173cc: mov    0xb8(%rsp),%rax
  0x00007f19111173d4: jmpq   0x00007f1911117816  ;*athrow
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@72 (line 459)

  0x00007f19111173d9: movabs $0x7f190cf5c028,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f19111173e3: addq   $0x1,0x158(%rdx)
  0x00007f19111173eb: movabs $0x7f190cf5c588,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f19111173f5: mov    0xdc(%rdx),%edi
  0x00007f19111173fb: add    $0x8,%edi
  0x00007f19111173fe: mov    %edi,0xdc(%rdx)
  0x00007f1911117404: movabs $0x7f190cf5b380,%rdx  ;   {metadata({method} {0x00007f190cf5b380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f191111740e: and    $0x7ffff8,%edi
  0x00007f1911117414: cmp    $0x0,%edi
  0x00007f1911117417: je     0x00007f1911117783
  0x00007f191111741d: data16 xchg %ax,%ax
  0x00007f1911117420: jmpq   0x00007f19111177a9  ;   {no_reloc}
  0x00007f1911117425: add    %al,(%rax)
  0x00007f1911117427: add    %al,(%rax)
  0x00007f1911117429: add    %cl,-0x75(%rcx)
  0x00007f191111742c: rex.RXB (bad) 
  0x00007f191111742e: lea    0x20(%rax),%rdi
  0x00007f1911117432: cmp    0x70(%r15),%rdi
  0x00007f1911117436: ja     0x00007f19111177b3
  0x00007f191111743c: mov    %rdi,0x60(%r15)
  0x00007f1911117440: mov    0xa8(%rdx),%rcx
  0x00007f1911117447: mov    %rcx,(%rax)
  0x00007f191111744a: mov    %rdx,%rcx
  0x00007f191111744d: shr    $0x3,%rcx
  0x00007f1911117451: mov    %ecx,0x8(%rax)
  0x00007f1911117454: xor    %rcx,%rcx
  0x00007f1911117457: mov    %ecx,0xc(%rax)
  0x00007f191111745a: xor    %rcx,%rcx
  0x00007f191111745d: mov    %rcx,0x10(%rax)
  0x00007f1911117461: mov    %rcx,0x18(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@0 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)

  0x00007f1911117465: data16 xchg %ax,%ax
  0x00007f1911117468: jmpq   0x00007f19111177cf  ;   {no_reloc}
  0x00007f191111746d: add    %al,(%rax)
  0x00007f191111746f: add    %al,(%rax)
  0x00007f1911117471: add    %cl,-0x77(%rax)
  0x00007f1911117474: test   %ah,(%rax,%rcx,8)
  0x00007f1911117477: add    %al,(%rax)
  0x00007f1911117479: add    %ch,%cl
  0x00007f191111747b: pop    %rdx
  0x00007f191111747c: add    (%rax),%eax
  0x00007f191111747e: add    %cl,-0x75(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@4 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)

  0x00007f1911117481: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00007f190cf5b380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911117484: mov    %al,%ch
  0x00007f1911117486: cmc    
  0x00007f1911117487: or     $0x19,%al
  0x00007f1911117489: jg     0x00007f191111748b
  0x00007f191111748b: add    %cl,-0x7d(%rax)
  0x00007f191111748e: xchg   %cl,(%rax)
  0x00007f1911117490: add    %eax,(%rax)
  0x00007f1911117492: add    %al,(%rcx)
  0x00007f1911117494: movabs $0x67108a410,%rdx  ;   {oop(&quot;Invalid UUID string: &quot;)}
  0x00007f191111749e: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@10 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)

  0x00007f19111174a1: mov    %rax,0xc0(%rsp)
  0x00007f19111174a9: nop
  0x00007f19111174aa: nop
  0x00007f19111174ab: nop
  0x00007f19111174ac: nop
  0x00007f19111174ad: nop
  0x00007f19111174ae: nop
  0x00007f19111174af: callq  0x00007f1911046020  ; OopMap{[192]=Oop [200]=Oop [104]=Oop off=4372}
                                                ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@10 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {optimized virtual_call}
  0x00007f19111174b4: mov    0xc0(%rsp),%rax
  0x00007f19111174bc: movabs $0x7f190cf5c588,%rdx  ;   {metadata(method data for {method} {0x00007f190cf5b380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f19111174c6: mov    0x8(%rax),%eax
  0x00007f19111174c9: shl    $0x3,%rax
  0x00007f19111174cd: cmp    0x120(%rdx),%rax
  0x00007f19111174d4: jne    0x00007f19111174e3
  0x00007f19111174d6: addq   $0x1,0x128(%rdx)
  0x00007f19111174de: jmpq   0x00007f1911117549
  0x00007f19111174e3: cmp    0x130(%rdx),%rax
  0x00007f19111174ea: jne    0x00007f19111174f9
  0x00007f19111174ec: addq   $0x1,0x138(%rdx)
  0x00007f19111174f4: jmpq   0x00007f1911117549
  0x00007f19111174f9: cmpq   $0x0,0x120(%rdx)
  0x00007f1911117504: jne    0x00007f191111751d
  0x00007f1911117506: mov    %rax,0x120(%rdx)
  0x00007f191111750d: movq   $0x1,0x128(%rdx)
  0x00007f1911117518: jmpq   0x00007f1911117549
  0x00007f191111751d: cmpq   $0x0,0x130(%rdx)
  0x00007f1911117528: jne    0x00007f1911117541
  0x00007f191111752a: mov    %rax,0x130(%rdx)
  0x00007f1911117531: movq   $0x1,0x138(%rdx)
  0x00007f191111753c: jmpq   0x00007f1911117549
  0x00007f1911117541: addq   $0x1,0x118(%rdx)
  0x00007f1911117549: mov    0x68(%rsp),%rdx
  0x00007f191111754e: mov    0xc0(%rsp),%rsi    ;*invokevirtual append
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@14 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)

  0x00007f1911117556: nop
  0x00007f1911117557: nop
  0x00007f1911117558: nop
  0x00007f1911117559: nop
  0x00007f191111755a: nop
  0x00007f191111755b: nop
  0x00007f191111755c: nop
  0x00007f191111755d: movabs $0xffffffffffffffff,%rax
  0x00007f1911117567: callq  0x00007f1911046220  ; OopMap{[200]=Oop off=4556}
                                                ;*invokevirtual append
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@14 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {virtual_call}
  0x00007f191111756c: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00007f19111177e6
  0x00007f191111756f: mov    %rax,%rsi
  0x00007f1911117572: movabs $0x7f190cf5c588,%rdi  ;   {metadata(method data for {method} {0x00007f190cf5b380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f191111757c: mov    0x8(%rsi),%esi
  0x00007f191111757f: shl    $0x3,%rsi
  0x00007f1911117583: cmp    0x150(%rdi),%rsi
  0x00007f191111758a: jne    0x00007f1911117599
  0x00007f191111758c: addq   $0x1,0x158(%rdi)
  0x00007f1911117594: jmpq   0x00007f19111175ff
  0x00007f1911117599: cmp    0x160(%rdi),%rsi
  0x00007f19111175a0: jne    0x00007f19111175af
  0x00007f19111175a2: addq   $0x1,0x168(%rdi)
  0x00007f19111175aa: jmpq   0x00007f19111175ff
  0x00007f19111175af: cmpq   $0x0,0x150(%rdi)
  0x00007f19111175ba: jne    0x00007f19111175d3
  0x00007f19111175bc: mov    %rsi,0x150(%rdi)
  0x00007f19111175c3: movq   $0x1,0x158(%rdi)
  0x00007f19111175ce: jmpq   0x00007f19111175ff
  0x00007f19111175d3: cmpq   $0x0,0x160(%rdi)
  0x00007f19111175de: jne    0x00007f19111175f7
  0x00007f19111175e0: mov    %rsi,0x160(%rdi)
  0x00007f19111175e7: movq   $0x1,0x168(%rdi)
  0x00007f19111175f2: jmpq   0x00007f19111175ff
  0x00007f19111175f7: addq   $0x1,0x148(%rdi)
  0x00007f19111175ff: mov    %rax,%rsi          ;*invokevirtual toString
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@17 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)

  0x00007f1911117602: nop
  0x00007f1911117603: nop
  0x00007f1911117604: nop
  0x00007f1911117605: movabs $0xffffffffffffffff,%rax
  0x00007f191111760f: callq  0x00007f1911046220  ; OopMap{[200]=Oop off=4724}
                                                ;*invokevirtual toString
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@17 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {virtual_call}
  0x00007f1911117614: mov    0xc8(%rsp),%rdx
  0x00007f191111761c: movabs $0x7f190cf5c588,%rsi  ;   {metadata(method data for {method} {0x00007f190cf5b380} &apos;invalidUuid&apos; &apos;(Ljava/lang/CharSequence;)Ljava/lang/IllegalArgumentException;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;)}
  0x00007f1911117626: addq   $0x1,0x178(%rsi)
  0x00007f191111762e: mov    %rax,%rdx
  0x00007f1911117631: mov    0xc8(%rsp),%rsi    ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@20 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)

  0x00007f1911117639: nop
  0x00007f191111763a: nop
  0x00007f191111763b: nop
  0x00007f191111763c: nop
  0x00007f191111763d: nop
  0x00007f191111763e: nop
  0x00007f191111763f: callq  0x00007f1911046020  ; OopMap{[200]=Oop off=4772}
                                                ;*invokespecial &lt;init&gt;
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@20 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {optimized virtual_call}
  0x00007f1911117644: mov    0xc8(%rsp),%rax
  0x00007f191111764c: jmpq   0x00007f1911117816
  0x00007f1911117651: mov    %rdi,0x8(%rsp)
  0x00007f1911117656: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191111765e: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop [104]=Oop off=4803}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@-1 (line 455)
                                                ;   {runtime_call}
  0x00007f1911117663: jmpq   0x00007f19111163e6
  0x00007f1911117668: callq  0x00007f191106e6c0  ; OopMap{rsi=Oop [104]=Oop off=4813}
                                                ;*invokeinterface length
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ;   {runtime_call}
  0x00007f191111766d: mov    %rdx,0x8(%rsp)
  0x00007f1911117672: movq   $0x6f,(%rsp)
  0x00007f191111767a: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop [104]=Oop off=4831}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@111 (line 465)
                                                ;   {runtime_call}
  0x00007f191111767f: jmpq   0x00007f19111169b9
  0x00007f1911117684: mov    %rdx,0x8(%rsp)
  0x00007f1911117689: movq   $0x95,(%rsp)
  0x00007f1911117691: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop [104]=Oop off=4854}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@149 (line 469)
                                                ;   {runtime_call}
  0x00007f1911117696: jmpq   0x00007f1911116b3f
  0x00007f191111769b: mov    %rdx,0x8(%rsp)
  0x00007f19111176a0: movq   $0xbb,(%rsp)
  0x00007f19111176a8: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop [104]=Oop off=4877}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@187 (line 473)
                                                ;   {runtime_call}
  0x00007f19111176ad: jmpq   0x00007f1911116cd2
  0x00007f19111176b2: mov    %rdx,0x8(%rsp)
  0x00007f19111176b7: movq   $0xe1,(%rsp)
  0x00007f19111176bf: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop [104]=Oop off=4900}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@225 (line 479)
                                                ;   {runtime_call}
  0x00007f19111176c4: jmpq   0x00007f1911116e85
  0x00007f19111176c9: mov    %rdx,0x8(%rsp)
  0x00007f19111176ce: movq   $0x107,(%rsp)
  0x00007f19111176d6: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop [104]=Oop off=4923}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@263 (line 483)
                                                ;   {runtime_call}
  0x00007f19111176db: jmpq   0x00007f1911117025
  0x00007f19111176e0: mov    %rdx,%rdx
  0x00007f19111176e3: callq  0x00007f191106dda0  ; OopMap{off=4936}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@266 (line 488)
                                                ;   {runtime_call}
  0x00007f19111176e8: jmpq   0x00007f19111170b9
  0x00007f19111176ed: mov    %rdx,0x8(%rsp)
  0x00007f19111176f2: movq   $0xffffffffffffffff,(%rsp)
  0x00007f19111176fa: callq  0x00007f19110feaa0  ; OopMap{rax=Oop off=4959}
                                                ;*synchronization entry
                                                ; - java.util.UUID::&lt;init&gt;@-1 (line 128)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@272 (line 488)
                                                ;   {runtime_call}
  0x00007f19111176ff: jmpq   0x00007f1911117100
  0x00007f1911117704: mov    %rdx,0x8(%rsp)
  0x00007f1911117709: movq   $0xffffffffffffffff,(%rsp)
  0x00007f1911117711: callq  0x00007f19110feaa0  ; OopMap{rax=Oop off=4982}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.UUID::&lt;init&gt;@1 (line 128)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@272 (line 488)
                                                ;   {runtime_call}
  0x00007f1911117716: jmpq   0x00007f1911117147
  0x00007f191111771b: mov    %rdx,0x8(%rsp)
  0x00007f1911117720: movq   $0xffffffffffffffff,(%rsp)
  0x00007f1911117728: callq  0x00007f19110feaa0  ; OopMap{[104]=Oop off=5005}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@-1 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {runtime_call}
  0x00007f191111772d: jmpq   0x00007f19111171a2
  0x00007f1911117732: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007f191111773c: mov    $0xa050f00,%eax
  0x00007f1911117741: callq  0x00007f19110fdaa0  ; OopMap{[104]=Oop off=5030}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@0 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {runtime_call}
  0x00007f1911117746: jmpq   0x00007f19111171a8
  0x00007f191111774b: mov    %rdx,%rdx
  0x00007f191111774e: callq  0x00007f191106dda0  ; OopMap{[104]=Oop off=5043}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@0 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {runtime_call}
  0x00007f1911117753: jmpq   0x00007f19111171ed
  0x00007f1911117758: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007f1911117762: mov    $0xa050f00,%eax
  0x00007f1911117767: callq  0x00007f19110fdaa0  ; OopMap{[104]=Oop rax=Oop off=5068}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@4 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {runtime_call}
  0x00007f191111776c: jmpq   0x00007f19111171f0
  0x00007f1911117771: mov    %rdx,%rdx
  0x00007f1911117774: callq  0x00007f191106e1a0  ; OopMap{[104]=Oop [184]=Oop off=5081}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@4 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {runtime_call}
  0x00007f1911117779: jmpq   0x00007f1911117207
  0x00007f191111777e: callq  0x00007f191106e6c0  ; OopMap{[184]=Oop rax=Oop off=5091}
                                                ;*invokevirtual toString
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@17 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@69 (line 459)
                                                ;   {runtime_call}
  0x00007f1911117783: mov    %rdx,0x8(%rsp)
  0x00007f1911117788: movq   $0xffffffffffffffff,(%rsp)
  0x00007f1911117790: callq  0x00007f19110feaa0  ; OopMap{[104]=Oop off=5109}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@-1 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {runtime_call}
  0x00007f1911117795: jmpq   0x00007f191111741d
  0x00007f191111779a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007f19111177a4: mov    $0xa050f00,%eax
  0x00007f19111177a9: callq  0x00007f19110fdaa0  ; OopMap{[104]=Oop off=5134}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@0 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {runtime_call}
  0x00007f19111177ae: jmpq   0x00007f1911117420
  0x00007f19111177b3: mov    %rdx,%rdx
  0x00007f19111177b6: callq  0x00007f191106dda0  ; OopMap{[104]=Oop off=5147}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@0 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {runtime_call}
  0x00007f19111177bb: jmpq   0x00007f1911117465
  0x00007f19111177c0: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007f19111177ca: mov    $0xa050f00,%eax
  0x00007f19111177cf: callq  0x00007f19110fdaa0  ; OopMap{[104]=Oop rax=Oop off=5172}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@4 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {runtime_call}
  0x00007f19111177d4: jmpq   0x00007f1911117468
  0x00007f19111177d9: mov    %rdx,%rdx
  0x00007f19111177dc: callq  0x00007f191106e1a0  ; OopMap{[104]=Oop [200]=Oop off=5185}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::invalidUuid@4 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {runtime_call}
  0x00007f19111177e1: jmpq   0x00007f191111747f
  0x00007f19111177e6: callq  0x00007f191106e6c0  ; OopMap{[200]=Oop rax=Oop off=5195}
                                                ;*invokevirtual toString
                                                ; - com.github.marschall.charsequences.CharSequences::invalidUuid@17 (line 492)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@12 (line 456)
                                                ;   {runtime_call}
  0x00007f19111177eb: nop
  0x00007f19111177ec: nop
  0x00007f19111177ed: mov    0x2a8(%r15),%rax
  0x00007f19111177f4: movabs $0x0,%r10
  0x00007f19111177fe: mov    %r10,0x2a8(%r15)
  0x00007f1911117805: movabs $0x0,%r10
  0x00007f191111780f: mov    %r10,0x2b0(%r15)
  0x00007f1911117816: add    $0xe0,%rsp
  0x00007f191111781d: pop    %rbp
  0x00007f191111781e: jmpq   0x00007f191106f220  ;   {runtime_call}
  0x00007f1911117823: hlt    
  0x00007f1911117824: hlt    
  0x00007f1911117825: hlt    
  0x00007f1911117826: hlt    
  0x00007f1911117827: hlt    
  0x00007f1911117828: hlt    
  0x00007f1911117829: hlt    
  0x00007f191111782a: hlt    
  0x00007f191111782b: hlt    
  0x00007f191111782c: hlt    
  0x00007f191111782d: hlt    
  0x00007f191111782e: hlt    
  0x00007f191111782f: hlt    
  0x00007f1911117830: hlt    
  0x00007f1911117831: hlt    
  0x00007f1911117832: hlt    
  0x00007f1911117833: hlt    
  0x00007f1911117834: hlt    
  0x00007f1911117835: hlt    
  0x00007f1911117836: hlt    
  0x00007f1911117837: hlt    
  0x00007f1911117838: hlt    
  0x00007f1911117839: hlt    
  0x00007f191111783a: hlt    
  0x00007f191111783b: hlt    
  0x00007f191111783c: hlt    
  0x00007f191111783d: hlt    
  0x00007f191111783e: hlt    
  0x00007f191111783f: hlt    
[Stub Code]
  0x00007f1911117840: nop                       ;   {no_reloc}
  0x00007f1911117841: nop
  0x00007f1911117842: nop
  0x00007f1911117843: nop
  0x00007f1911117844: nop
  0x00007f1911117845: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191111784f: jmpq   0x00007f191111784f  ;   {runtime_call}
  0x00007f1911117854: nop
  0x00007f1911117855: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191111785f: jmpq   0x00007f191111785f  ;   {runtime_call}
  0x00007f1911117864: nop
  0x00007f1911117865: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191111786f: jmpq   0x00007f191111786f  ;   {runtime_call}
  0x00007f1911117874: nop
  0x00007f1911117875: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191111787f: jmpq   0x00007f191111787f  ;   {runtime_call}
  0x00007f1911117884: nop
  0x00007f1911117885: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191111788f: jmpq   0x00007f191111788f  ;   {runtime_call}
  0x00007f1911117894: nop
  0x00007f1911117895: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191111789f: jmpq   0x00007f191111789f  ;   {runtime_call}
  0x00007f19111178a4: nop
  0x00007f19111178a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f19111178af: jmpq   0x00007f19111178af  ;   {runtime_call}
  0x00007f19111178b4: nop
  0x00007f19111178b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f19111178bf: jmpq   0x00007f19111178bf  ;   {runtime_call}
  0x00007f19111178c4: nop
  0x00007f19111178c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f19111178cf: jmpq   0x00007f19111178cf  ;   {runtime_call}
  0x00007f19111178d4: nop
  0x00007f19111178d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f19111178df: jmpq   0x00007f19111178df  ;   {runtime_call}
  0x00007f19111178e4: nop
  0x00007f19111178e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f19111178ef: jmpq   0x00007f19111178ef  ;   {runtime_call}
  0x00007f19111178f4: nop
  0x00007f19111178f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f19111178ff: jmpq   0x00007f19111178ff  ;   {runtime_call}
  0x00007f1911117904: nop
  0x00007f1911117905: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191111790f: jmpq   0x00007f191111790f  ;   {runtime_call}
  0x00007f1911117914: nop
  0x00007f1911117915: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191111791f: jmpq   0x00007f191111791f  ;   {runtime_call}
  0x00007f1911117924: nop
  0x00007f1911117925: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191111792f: jmpq   0x00007f191111792f  ;   {runtime_call}
  0x00007f1911117934: nop
  0x00007f1911117935: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191111793f: jmpq   0x00007f191111793f  ;   {runtime_call}
  0x00007f1911117944: nop
  0x00007f1911117945: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191111794f: jmpq   0x00007f191111794f  ;   {runtime_call}
  0x00007f1911117954: nop
  0x00007f1911117955: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191111795f: jmpq   0x00007f191111795f  ;   {runtime_call}
  0x00007f1911117964: nop
  0x00007f1911117965: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191111796f: jmpq   0x00007f191111796f  ;   {runtime_call}
  0x00007f1911117974: nop
  0x00007f1911117975: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191111797f: jmpq   0x00007f191111797f  ;   {runtime_call}
  0x00007f1911117984: nop
  0x00007f1911117985: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191111798f: jmpq   0x00007f191111798f  ;   {runtime_call}
  0x00007f1911117994: nop
  0x00007f1911117995: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191111799f: jmpq   0x00007f191111799f  ;   {runtime_call}
  0x00007f19111179a4: nop
  0x00007f19111179a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f19111179af: jmpq   0x00007f19111179af  ;   {runtime_call}
[Exception Handler]
  0x00007f19111179b4: callq  0x00007f191106c860  ;   {runtime_call}
  0x00007f19111179b9: mov    %rsp,-0x28(%rsp)
  0x00007f19111179be: sub    $0x80,%rsp
  0x00007f19111179c5: mov    %rax,0x78(%rsp)
  0x00007f19111179ca: mov    %rcx,0x70(%rsp)
  0x00007f19111179cf: mov    %rdx,0x68(%rsp)
  0x00007f19111179d4: mov    %rbx,0x60(%rsp)
  0x00007f19111179d9: mov    %rbp,0x50(%rsp)
  0x00007f19111179de: mov    %rsi,0x48(%rsp)
  0x00007f19111179e3: mov    %rdi,0x40(%rsp)
  0x00007f19111179e8: mov    %r8,0x38(%rsp)
  0x00007f19111179ed: mov    %r9,0x30(%rsp)
  0x00007f19111179f2: mov    %r10,0x28(%rsp)
  0x00007f19111179f7: mov    %r11,0x20(%rsp)
  0x00007f19111179fc: mov    %r12,0x18(%rsp)
  0x00007f1911117a01: mov    %r13,0x10(%rsp)
  0x00007f1911117a06: mov    %r14,0x8(%rsp)
  0x00007f1911117a0b: mov    %r15,(%rsp)
  0x00007f1911117a0f: movabs $0x7f192638cf36,%rdi  ;   {external_word}
  0x00007f1911117a19: movabs $0x7f19111179b9,%rsi  ;   {internal_word}
  0x00007f1911117a23: mov    %rsp,%rdx
  0x00007f1911117a26: and    $0xfffffffffffffff0,%rsp
  0x00007f1911117a2a: callq  0x00007f19260b8990  ;   {runtime_call}
  0x00007f1911117a2f: hlt    
[Deopt Handler Code]
  0x00007f1911117a30: movabs $0x7f1911117a30,%r10  ;   {section_word}
  0x00007f1911117a3a: push   %r10
  0x00007f1911117a3c: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f1911117a41: hlt    
  0x00007f1911117a42: hlt    
  0x00007f1911117a43: hlt    
  0x00007f1911117a44: hlt    
  0x00007f1911117a45: hlt    
  0x00007f1911117a46: hlt    
  0x00007f1911117a47: hlt    
<nmethod compile_id='17' compiler='C1' level='3' entry='0x00007f19111163a0' size='9600' address='0x00007f1911116050' relocation_offset='296' insts_offset='848' stub_offset='6128' scopes_data_offset='6688' scopes_pcs_offset='7928' dependencies_offset='9560' nul_chk_table_offset='9568' oops_offset='6648' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='276' count='255' backedge_count='8160' iicount='255' stamp='0.136'/>
<writer thread='139745424463616'/>
Decoding compiled method 0x00007f19111129d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007f190cb5cdb0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x00007f1911112b20: mov    0x8(%rsi),%r10d
  0x00007f1911112b24: shl    $0x3,%r10
  0x00007f1911112b28: cmp    %r10,%rax
  0x00007f1911112b2b: jne    0x00007f1911045e20  ;   {runtime_call}
  0x00007f1911112b31: data16 xchg %ax,%ax
  0x00007f1911112b34: nopl   0x0(%rax,%rax,1)
  0x00007f1911112b3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f1911112b40: mov    %eax,-0x14000(%rsp)
  0x00007f1911112b47: push   %rbp
  0x00007f1911112b48: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x00007f1911112b4c: test   %edx,%edx
  0x00007f1911112b4e: jl     0x00007f1911112b8d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x00007f1911112b50: mov    0xc(%rsi),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x00007f1911112b54: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x00007f1911112bbd
  0x00007f1911112b59: cmp    %ebp,%edx
  0x00007f1911112b5b: jge    0x00007f1911112ba5  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x00007f1911112b5d: cmp    %ebp,%edx
  0x00007f1911112b5f: jae    0x00007f1911112b77
  0x00007f1911112b61: shl    $0x3,%r10
  0x00007f1911112b65: movzwl 0x10(%r10,%rdx,2),%eax
  0x00007f1911112b6b: add    $0x20,%rsp
  0x00007f1911112b6f: pop    %rbp
  0x00007f1911112b70: test   %eax,0x1638148a(%rip)        # 0x00007f1927494000
                                                ;   {poll_return}
  0x00007f1911112b76: retq   
  0x00007f1911112b77: mov    $0xffffffe4,%esi
  0x00007f1911112b7c: mov    %edx,%ebp
  0x00007f1911112b7e: mov    %r10d,(%rsp)
  0x00007f1911112b82: nop
  0x00007f1911112b83: callq  0x00007f19110051a0  ; OopMap{[0]=NarrowOop off=104}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x00007f1911112b88: callq  0x00007f192619fa20  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x00007f1911112b8d: mov    %rsi,%rbp
  0x00007f1911112b90: mov    %edx,0x4(%rsp)
  0x00007f1911112b94: mov    $0xffffff65,%esi
  0x00007f1911112b99: xchg   %ax,%ax
  0x00007f1911112b9b: callq  0x00007f19110051a0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x00007f1911112ba0: callq  0x00007f192619fa20  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x00007f1911112ba5: mov    %rsi,(%rsp)
  0x00007f1911112ba9: mov    %edx,0xc(%rsp)
  0x00007f1911112bad: mov    $0xffffff65,%esi
  0x00007f1911112bb2: nop
  0x00007f1911112bb3: callq  0x00007f19110051a0  ; OopMap{[0]=Oop off=152}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x00007f1911112bb8: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x00007f1911112bbd: mov    $0xfffffff6,%esi
  0x00007f1911112bc2: nop
  0x00007f1911112bc3: callq  0x00007f19110051a0  ; OopMap{off=168}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x00007f1911112bc8: callq  0x00007f192619fa20  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x00007f1911112bcd: hlt    
  0x00007f1911112bce: hlt    
  0x00007f1911112bcf: hlt    
  0x00007f1911112bd0: hlt    
  0x00007f1911112bd1: hlt    
  0x00007f1911112bd2: hlt    
  0x00007f1911112bd3: hlt    
  0x00007f1911112bd4: hlt    
  0x00007f1911112bd5: hlt    
  0x00007f1911112bd6: hlt    
  0x00007f1911112bd7: hlt    
  0x00007f1911112bd8: hlt    
  0x00007f1911112bd9: hlt    
  0x00007f1911112bda: hlt    
  0x00007f1911112bdb: hlt    
  0x00007f1911112bdc: hlt    
  0x00007f1911112bdd: hlt    
  0x00007f1911112bde: hlt    
  0x00007f1911112bdf: hlt    
[Exception Handler]
[Stub Code]
  0x00007f1911112be0: jmpq   0x00007f191106c760  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f1911112be5: callq  0x00007f1911112bea
  0x00007f1911112bea: subq   $0x5,(%rsp)
  0x00007f1911112bef: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f1911112bf4: hlt    
  0x00007f1911112bf5: hlt    
  0x00007f1911112bf6: hlt    
  0x00007f1911112bf7: hlt    
<nmethod compile_id='16' compiler='C2' level='4' entry='0x00007f1911112b20' size='928' address='0x00007f19111129d0' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='664' dependencies_offset='904' nul_chk_table_offset='912' method='java/lang/String charAt (I)C' bytes='29' count='13097' iicount='13097' stamp='0.136'/>
<make_not_entrant thread='139745424463616' compile_id='6' compiler='C1' level='3' stamp='0.136'/>
<writer thread='139746009892608'/>
<task_queued compile_id='19' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='256' iicount='256' level='3' stamp='0.136' comment='tiered' hot_count='256'/>
Decoding compiled method 0x00007f1911112650:
Code:
[Entry Point]
  # {method} {0x00007f190cb729c8} &apos;identityHashCode&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f19111127c0: mov    0x8(%rsi),%r10d
  0x00007f19111127c4: shl    $0x3,%r10
  0x00007f19111127c8: cmp    %r10,%rax
  0x00007f19111127cb: je     0x00007f19111127d8
  0x00007f19111127d1: jmpq   0x00007f1911045e20  ;   {runtime_call}
  0x00007f19111127d6: xchg   %ax,%ax
[Verified Entry Point]
  0x00007f19111127d8: mov    %eax,-0x14000(%rsp)
  0x00007f19111127df: push   %rbp
  0x00007f19111127e0: mov    %rsp,%rbp
  0x00007f19111127e3: sub    $0x40,%rsp
  0x00007f19111127e7: mov    %rsi,(%rsp)
  0x00007f19111127eb: cmp    $0x0,%rsi
  0x00007f19111127ef: lea    (%rsp),%rdx
  0x00007f19111127f3: cmove  (%rsp),%rdx
  0x00007f19111127f8: movabs $0x670b80c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007f1911112802: mov    %r14,0x30(%rsp)
  0x00007f1911112807: lea    0x30(%rsp),%r14
  0x00007f191111280c: mov    %r14,%rsi          ; OopMap{[0]=Oop [48]=Oop off=79}
  0x00007f191111280f: movabs $0x7f191111280f,%r10  ;   {section_word}
  0x00007f1911112819: mov    %r10,0x1e0(%r15)
  0x00007f1911112820: mov    %rsp,0x1d8(%r15)
  0x00007f1911112827: cmpb   $0x0,0x15725974(%rip)        # 0x00007f19268381a2
                                                ;   {external_word}
  0x00007f191111282e: je     0x00007f1911112868
  0x00007f1911112834: push   %rsi
  0x00007f1911112835: push   %rdx
  0x00007f1911112836: movabs $0x7f190cb729c8,%rsi  ;   {metadata({method} {0x00007f190cb729c8} &apos;identityHashCode&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/lang/System&apos;)}
  0x00007f1911112840: mov    %r15,%rdi
  0x00007f1911112843: test   $0xf,%esp
  0x00007f1911112849: je     0x00007f1911112861
  0x00007f191111284f: sub    $0x8,%rsp
  0x00007f1911112853: callq  0x00007f1926243390  ;   {runtime_call}
  0x00007f1911112858: add    $0x8,%rsp
  0x00007f191111285c: jmpq   0x00007f1911112866
  0x00007f1911112861: callq  0x00007f1926243390  ;   {runtime_call}
  0x00007f1911112866: pop    %rdx
  0x00007f1911112867: pop    %rsi
  0x00007f1911112868: lea    0x1f8(%r15),%rdi
  0x00007f191111286f: movl   $0x4,0x270(%r15)
  0x00007f191111287a: callq  0x00007f1924f44cc0  ;   {runtime_call}
  0x00007f191111287f: vzeroupper 
  0x00007f1911112882: movl   $0x5,0x270(%r15)
  0x00007f191111288d: mov    %r15d,%ecx
  0x00007f1911112890: shr    $0x4,%ecx
  0x00007f1911112893: and    $0xffc,%ecx
  0x00007f1911112899: movabs $0x7f1927493000,%r10  ;   {external_word}
  0x00007f19111128a3: mov    %ecx,(%r10,%rcx,1)
  0x00007f19111128a7: cmpl   $0x0,0x1573526f(%rip)        # 0x00007f1926847b20
                                                ;   {external_word}
  0x00007f19111128b1: jne    0x00007f19111128c5
  0x00007f19111128b7: cmpl   $0x0,0x30(%r15)
  0x00007f19111128bf: je     0x00007f19111128e6
  0x00007f19111128c5: mov    %rax,-0x8(%rbp)
  0x00007f19111128c9: mov    %r15,%rdi
  0x00007f19111128cc: mov    %rsp,%r12
  0x00007f19111128cf: sub    $0x0,%rsp
  0x00007f19111128d3: and    $0xfffffffffffffff0,%rsp
  0x00007f19111128d7: callq  0x00007f19262f3960  ;   {runtime_call}
  0x00007f19111128dc: mov    %r12,%rsp
  0x00007f19111128df: xor    %r12,%r12
  0x00007f19111128e2: mov    -0x8(%rbp),%rax
  0x00007f19111128e6: movl   $0x8,0x270(%r15)
  0x00007f19111128f1: cmpl   $0x1,0x29c(%r15)
  0x00007f19111128fc: je     0x00007f191111298c
  0x00007f1911112902: cmpb   $0x0,0x15725899(%rip)        # 0x00007f19268381a2
                                                ;   {external_word}
  0x00007f1911112909: je     0x00007f1911112947
  0x00007f191111290f: mov    %rax,-0x8(%rbp)
  0x00007f1911112913: movabs $0x7f190cb729c8,%rsi  ;   {metadata({method} {0x00007f190cb729c8} &apos;identityHashCode&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/lang/System&apos;)}
  0x00007f191111291d: mov    %r15,%rdi
  0x00007f1911112920: test   $0xf,%esp
  0x00007f1911112926: je     0x00007f191111293e
  0x00007f191111292c: sub    $0x8,%rsp
  0x00007f1911112930: callq  0x00007f1926243380  ;   {runtime_call}
  0x00007f1911112935: add    $0x8,%rsp
  0x00007f1911112939: jmpq   0x00007f1911112943
  0x00007f191111293e: callq  0x00007f1926243380  ;   {runtime_call}
  0x00007f1911112943: mov    -0x8(%rbp),%rax
  0x00007f1911112947: movabs $0x0,%r10
  0x00007f1911112951: mov    %r10,0x1d8(%r15)
  0x00007f1911112958: movabs $0x0,%r10
  0x00007f1911112962: mov    %r10,0x1e0(%r15)
  0x00007f1911112969: mov    0x38(%r15),%rcx
  0x00007f191111296d: movl   $0x0,0x100(%rcx)
  0x00007f1911112977: leaveq 
  0x00007f1911112978: cmpq   $0x0,0x8(%r15)
  0x00007f1911112980: jne    0x00007f1911112987
  0x00007f1911112986: retq   
  0x00007f1911112987: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00007f191111298c: mov    %rax,-0x8(%rbp)
  0x00007f1911112990: mov    %rsp,%r12
  0x00007f1911112993: sub    $0x0,%rsp
  0x00007f1911112997: and    $0xfffffffffffffff0,%rsp
  0x00007f191111299b: callq  0x00007f1926243360  ;   {runtime_call}
  0x00007f19111129a0: mov    %r12,%rsp
  0x00007f19111129a3: xor    %r12,%r12
  0x00007f19111129a6: mov    -0x8(%rbp),%rax
  0x00007f19111129aa: jmpq   0x00007f1911112902
  0x00007f19111129af: hlt    
<nmethod compile_id='20' compile_kind='c2n' level='0' entry='0x00007f19111127c0' size='864' address='0x00007f1911112650' relocation_offset='296' consts_offset='864' insts_offset='368' method='java/lang/System identityHashCode (Ljava/lang/Object;)I' bytes='0' count='256' iicount='256' stamp='0.137'/>
<writer thread='139745421305600'/>
Decoding compiled method 0x00007f1911112290:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007f190cf59428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f1911112400: mov    0x8(%rsi),%r10d
  0x00007f1911112404: shl    $0x3,%r10
  0x00007f1911112408: cmp    %rax,%r10
  0x00007f191111240b: jne    0x00007f1911045e20  ;   {runtime_call}
  0x00007f1911112411: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f191111241c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f1911112420: mov    %eax,-0x14000(%rsp)
  0x00007f1911112427: push   %rbp
  0x00007f1911112428: sub    $0x30,%rsp
  0x00007f191111242c: movabs $0x7f190cf5c750,%rdi  ;   {metadata(method data for {method} {0x00007f190cf59428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f1911112436: mov    0xdc(%rdi),%ebx
  0x00007f191111243c: add    $0x8,%ebx
  0x00007f191111243f: mov    %ebx,0xdc(%rdi)
  0x00007f1911112445: movabs $0x7f190cf59428,%rdi  ;   {metadata({method} {0x00007f190cf59428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f191111244f: and    $0x1ff8,%ebx
  0x00007f1911112455: cmp    $0x0,%ebx
  0x00007f1911112458: je     0x00007f1911112490  ;*ldc
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@0 (line 21)

  0x00007f191111245e: movabs $0x7f190cf5c750,%rsi  ;   {metadata(method data for {method} {0x00007f190cf59428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f1911112468: addq   $0x1,0x108(%rsi)
  0x00007f1911112470: movabs $0x670be7490,%rsi  ;*invokestatic uuidFromCharSequence
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {oop(&quot;ba226cf7-d156-4b18-a78a-094736208cc9&quot;)}
  0x00007f191111247a: nop
  0x00007f191111247b: nop
  0x00007f191111247c: nop
  0x00007f191111247d: nop
  0x00007f191111247e: nop
  0x00007f191111247f: callq  0x00007f1911046420  ; OopMap{off=132}
                                                ;*invokestatic uuidFromCharSequence
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {static_call}
  0x00007f1911112484: add    $0x30,%rsp
  0x00007f1911112488: pop    %rbp
  0x00007f1911112489: test   %eax,0x16381c71(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191111248f: retq   
  0x00007f1911112490: mov    %rdi,0x8(%rsp)
  0x00007f1911112495: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191111249d: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop off=162}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@-1 (line 21)
                                                ;   {runtime_call}
  0x00007f19111124a2: jmp    0x00007f191111245e
  0x00007f19111124a4: nop
  0x00007f19111124a5: nop
  0x00007f19111124a6: mov    0x2a8(%r15),%rax
  0x00007f19111124ad: movabs $0x0,%r10
  0x00007f19111124b7: mov    %r10,0x2a8(%r15)
  0x00007f19111124be: movabs $0x0,%r10
  0x00007f19111124c8: mov    %r10,0x2b0(%r15)
  0x00007f19111124cf: add    $0x30,%rsp
  0x00007f19111124d3: pop    %rbp
  0x00007f19111124d4: jmpq   0x00007f191106f220  ;   {runtime_call}
  0x00007f19111124d9: hlt    
  0x00007f19111124da: hlt    
  0x00007f19111124db: hlt    
  0x00007f19111124dc: hlt    
  0x00007f19111124dd: hlt    
  0x00007f19111124de: hlt    
  0x00007f19111124df: hlt    
[Stub Code]
  0x00007f19111124e0: nop                       ;   {no_reloc}
  0x00007f19111124e1: nop
  0x00007f19111124e2: nop
  0x00007f19111124e3: nop
  0x00007f19111124e4: nop
  0x00007f19111124e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f19111124ef: jmpq   0x00007f19111124ef  ;   {runtime_call}
[Exception Handler]
  0x00007f19111124f4: callq  0x00007f191106c860  ;   {runtime_call}
  0x00007f19111124f9: mov    %rsp,-0x28(%rsp)
  0x00007f19111124fe: sub    $0x80,%rsp
  0x00007f1911112505: mov    %rax,0x78(%rsp)
  0x00007f191111250a: mov    %rcx,0x70(%rsp)
  0x00007f191111250f: mov    %rdx,0x68(%rsp)
  0x00007f1911112514: mov    %rbx,0x60(%rsp)
  0x00007f1911112519: mov    %rbp,0x50(%rsp)
  0x00007f191111251e: mov    %rsi,0x48(%rsp)
  0x00007f1911112523: mov    %rdi,0x40(%rsp)
  0x00007f1911112528: mov    %r8,0x38(%rsp)
  0x00007f191111252d: mov    %r9,0x30(%rsp)
  0x00007f1911112532: mov    %r10,0x28(%rsp)
  0x00007f1911112537: mov    %r11,0x20(%rsp)
  0x00007f191111253c: mov    %r12,0x18(%rsp)
  0x00007f1911112541: mov    %r13,0x10(%rsp)
  0x00007f1911112546: mov    %r14,0x8(%rsp)
  0x00007f191111254b: mov    %r15,(%rsp)
  0x00007f191111254f: movabs $0x7f192638cf36,%rdi  ;   {external_word}
  0x00007f1911112559: movabs $0x7f19111124f9,%rsi  ;   {internal_word}
  0x00007f1911112563: mov    %rsp,%rdx
  0x00007f1911112566: and    $0xfffffffffffffff0,%rsp
  0x00007f191111256a: callq  0x00007f19260b8990  ;   {runtime_call}
  0x00007f191111256f: hlt    
[Deopt Handler Code]
  0x00007f1911112570: movabs $0x7f1911112570,%r10  ;   {section_word}
  0x00007f191111257a: push   %r10
  0x00007f191111257c: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f1911112581: hlt    
  0x00007f1911112582: hlt    
  0x00007f1911112583: hlt    
  0x00007f1911112584: hlt    
  0x00007f1911112585: hlt    
  0x00007f1911112586: hlt    
  0x00007f1911112587: hlt    
<nmethod compile_id='19' compiler='C1' level='3' entry='0x00007f1911112400' size='912' address='0x00007f1911112290' relocation_offset='296' insts_offset='368' stub_offset='592' scopes_data_offset='776' scopes_pcs_offset='808' dependencies_offset='904' oops_offset='760' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='704' iicount='704' stamp='0.137'/>
<writer thread='139746009892608'/>
<task_queued compile_id='21' method='java/lang/String length ()I' bytes='6' count='1536' iicount='1536' level='1' stamp='0.137' comment='tiered' hot_count='1536'/>
<task_queued compile_id='22' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='276' count='814' backedge_count='28831' iicount='814' stamp='0.137' comment='tiered' hot_count='814'/>
<writer thread='139745421305600'/>
Decoding compiled method 0x00007f1911111f50:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007f190cb5cc60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f19111120a0: mov    0x8(%rsi),%r10d
  0x00007f19111120a4: shl    $0x3,%r10
  0x00007f19111120a8: cmp    %rax,%r10
  0x00007f19111120ab: jne    0x00007f1911045e20  ;   {runtime_call}
  0x00007f19111120b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f19111120bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f19111120c0: mov    %eax,-0x14000(%rsp)
  0x00007f19111120c7: push   %rbp
  0x00007f19111120c8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.String::length@0 (line 623)

  0x00007f19111120cc: mov    0xc(%rsi),%eax
  0x00007f19111120cf: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x00007f19111120d3: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x00007f19111120e2
  0x00007f19111120d6: add    $0x30,%rsp
  0x00007f19111120da: pop    %rbp
  0x00007f19111120db: test   %eax,0x1638201f(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f19111120e1: retq   
  0x00007f19111120e2: callq  0x00007f191106e6c0  ; OopMap{off=71}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x00007f19111120e7: nop
  0x00007f19111120e8: nop
  0x00007f19111120e9: mov    0x2a8(%r15),%rax
  0x00007f19111120f0: movabs $0x0,%r10
  0x00007f19111120fa: mov    %r10,0x2a8(%r15)
  0x00007f1911112101: movabs $0x0,%r10
  0x00007f191111210b: mov    %r10,0x2b0(%r15)
  0x00007f1911112112: add    $0x30,%rsp
  0x00007f1911112116: pop    %rbp
  0x00007f1911112117: jmpq   0x00007f191106f220  ;   {runtime_call}
  0x00007f191111211c: hlt    
  0x00007f191111211d: hlt    
  0x00007f191111211e: hlt    
  0x00007f191111211f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f1911112120: callq  0x00007f191106c860  ;   {no_reloc}
  0x00007f1911112125: mov    %rsp,-0x28(%rsp)
  0x00007f191111212a: sub    $0x80,%rsp
  0x00007f1911112131: mov    %rax,0x78(%rsp)
  0x00007f1911112136: mov    %rcx,0x70(%rsp)
  0x00007f191111213b: mov    %rdx,0x68(%rsp)
  0x00007f1911112140: mov    %rbx,0x60(%rsp)
  0x00007f1911112145: mov    %rbp,0x50(%rsp)
  0x00007f191111214a: mov    %rsi,0x48(%rsp)
  0x00007f191111214f: mov    %rdi,0x40(%rsp)
  0x00007f1911112154: mov    %r8,0x38(%rsp)
  0x00007f1911112159: mov    %r9,0x30(%rsp)
  0x00007f191111215e: mov    %r10,0x28(%rsp)
  0x00007f1911112163: mov    %r11,0x20(%rsp)
  0x00007f1911112168: mov    %r12,0x18(%rsp)
  0x00007f191111216d: mov    %r13,0x10(%rsp)
  0x00007f1911112172: mov    %r14,0x8(%rsp)
  0x00007f1911112177: mov    %r15,(%rsp)
  0x00007f191111217b: movabs $0x7f192638cf36,%rdi  ;   {external_word}
  0x00007f1911112185: movabs $0x7f1911112125,%rsi  ;   {internal_word}
  0x00007f191111218f: mov    %rsp,%rdx
  0x00007f1911112192: and    $0xfffffffffffffff0,%rsp
  0x00007f1911112196: callq  0x00007f19260b8990  ;   {runtime_call}
  0x00007f191111219b: hlt    
[Deopt Handler Code]
  0x00007f191111219c: movabs $0x7f191111219c,%r10  ;   {section_word}
  0x00007f19111121a6: push   %r10
  0x00007f19111121a8: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f19111121ad: hlt    
  0x00007f19111121ae: hlt    
  0x00007f19111121af: hlt    
<nmethod compile_id='21' compiler='C1' level='1' entry='0x00007f19111120a0' size='768' address='0x00007f1911111f50' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='648' dependencies_offset='744' nul_chk_table_offset='752' method='java/lang/String length ()I' bytes='6' count='2929' iicount='2929' stamp='0.138'/>
<make_not_entrant thread='139745421305600' compile_id='9' compiler='C1' level='3' stamp='0.138'/>
<writer thread='139746009892608'/>
<task_queued compile_id='23' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='5376' iicount='5376' stamp='0.140' comment='tiered' hot_count='5376'/>
<writer thread='139745423410944'/>
Decoding compiled method 0x00007f1911118610:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007f190cf59428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f19111187c0: mov    0x8(%rsi),%r10d
  0x00007f19111187c4: shl    $0x3,%r10
  0x00007f19111187c8: cmp    %r10,%rax
  0x00007f19111187cb: jne    0x00007f1911045e20  ;   {runtime_call}
  0x00007f19111187d1: data16 xchg %ax,%ax
  0x00007f19111187d4: nopl   0x0(%rax,%rax,1)
  0x00007f19111187dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f19111187e0: mov    %eax,-0x14000(%rsp)
  0x00007f19111187e7: push   %rbp
  0x00007f19111187e8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@-1 (line 21)

  0x00007f19111187ec: movabs $0x670be74a8,%r9   ;   {oop([C)}
  0x00007f19111187f6: movzwl 0x20(%r9),%ebp     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@19 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111187fb: cmp    $0x2d,%ebp
  0x00007f19111187fe: jne    0x00007f1911118e71  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@26 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118804: movzwl 0x2a(%r9),%ebp     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@32 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118809: cmp    $0x2d,%ebp
  0x00007f191111880c: jne    0x00007f1911118e81  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@39 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118812: movzwl 0x34(%r9),%ebp     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@45 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118817: cmp    $0x2d,%ebp
  0x00007f191111881a: jne    0x00007f1911118e91  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@52 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118820: movzwl 0x3e(%r9),%ebp     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@58 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118825: cmp    $0x2d,%ebp
  0x00007f1911118828: jne    0x00007f1911118f5d  ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@65 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f191111882e: movzwl 0x10(%r9),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118833: xor    %edx,%edx
  0x00007f1911118835: cmp    $0x30,%r11d
  0x00007f1911118839: jl     0x00007f1911118ea1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f191111883f: cmp    $0x39,%r11d
  0x00007f1911118843: jle    0x00007f191111885f  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118845: cmp    $0x61,%r11d
  0x00007f1911118849: jl     0x00007f1911118f8d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f191111884f: cmp    $0x66,%r11d
  0x00007f1911118853: jg     0x00007f1911119049  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118859: add    $0xffffffa9,%r11d  ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f191111885d: jmp    0x00007f1911118863
  0x00007f191111885f: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118863: movslq %r11d,%r10         ;*i2l  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@101 (line 467)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118866: mov    $0x1,%ecx
  0x00007f191111886b: xor    %r8d,%r8d
  0x00007f191111886e: jmp    0x00007f1911118886
  0x00007f1911118870: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118874: movslq %r11d,%r11
  0x00007f1911118877: shl    $0x4,%r10
  0x00007f191111887b: or     %r11,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@102 (line 467)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f191111887e: add    $0x2,%ecx          ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 465)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118881: cmp    $0x7,%ecx
  0x00007f1911118884: jge    0x00007f19111188f5  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@83 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118886: movzwl 0x10(%r9,%rcx,2),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f191111888c: cmp    $0x30,%edi
  0x00007f191111888f: jl     0x00007f1911118db5  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118895: cmp    $0x39,%edi
  0x00007f1911118898: jle    0x00007f19111188b1  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f191111889a: cmp    $0x61,%edi
  0x00007f191111889d: jl     0x00007f1911118e29  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111188a3: cmp    $0x66,%edi
  0x00007f19111188a6: jg     0x00007f1911118e4d  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111188ac: add    $0xffffffa9,%edi   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111188af: jmp    0x00007f19111188b4
  0x00007f19111188b1: add    $0xffffffd0,%edi   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111188b4: movzwl 0x12(%r9,%rcx,2),%r11d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111188ba: mov    %ecx,%edx
  0x00007f19111188bc: inc    %edx               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 465)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111188be: movslq %edi,%rbx
  0x00007f19111188c1: shl    $0x4,%r10
  0x00007f19111188c5: or     %rbx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@102 (line 467)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111188c8: cmp    $0x30,%r11d
  0x00007f19111188cc: jl     0x00007f1911118dba  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111188d2: cmp    $0x39,%r11d
  0x00007f19111188d6: jle    0x00007f1911118870  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111188d8: cmp    $0x61,%r11d
  0x00007f19111188dc: jl     0x00007f1911118e2e  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111188e2: cmp    $0x66,%r11d
  0x00007f19111188e6: jg     0x00007f1911118e52  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111188ec: add    $0xffffffa9,%r11d  ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111188f0: jmpq   0x00007f1911118874
  0x00007f19111188f5: cmp    $0x8,%ecx
  0x00007f19111188f8: jge    0x00007f1911118941
  0x00007f19111188fa: xchg   %ax,%ax            ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@83 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111188fc: movzwl 0x10(%r9,%rcx,2),%r11d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118902: cmp    $0x30,%r11d
  0x00007f1911118906: jl     0x00007f1911118dbc  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f191111890c: cmp    $0x39,%r11d
  0x00007f1911118910: jle    0x00007f191111892c  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118912: cmp    $0x61,%r11d
  0x00007f1911118916: jl     0x00007f1911118e30  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f191111891c: cmp    $0x66,%r11d
  0x00007f1911118920: jg     0x00007f1911118e54  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118926: add    $0xffffffa9,%r11d  ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f191111892a: jmp    0x00007f1911118930
  0x00007f191111892c: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118930: movslq %r11d,%r11
  0x00007f1911118933: shl    $0x4,%r10
  0x00007f1911118937: or     %r11,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@102 (line 467)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f191111893a: inc    %ecx               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 465)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f191111893c: cmp    $0x8,%ecx
  0x00007f191111893f: jl     0x00007f19111188fc  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@121 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118941: movzwl 0x22(%r9),%ebx     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118946: cmp    $0x30,%ebx
  0x00007f1911118949: jl     0x00007f1911118ea9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f191111894f: cmp    $0x39,%ebx
  0x00007f1911118952: jle    0x00007f191111896b  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118954: cmp    $0x61,%ebx
  0x00007f1911118957: jl     0x00007f1911118f95  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f191111895d: cmp    $0x66,%ebx
  0x00007f1911118960: jg     0x00007f1911119051  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118966: add    $0xffffffa9,%ebx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118969: jmp    0x00007f191111896e
  0x00007f191111896b: add    $0xffffffd0,%ebx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f191111896e: movzwl 0x24(%r9),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118973: shl    $0x4,%r10
  0x00007f1911118977: movslq %ebx,%rcx
  0x00007f191111897a: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 471)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f191111897d: cmp    $0x30,%r11d
  0x00007f1911118981: jl     0x00007f1911118ebc  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118987: cmp    $0x39,%r11d
  0x00007f191111898b: jle    0x00007f19111189a7  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f191111898d: cmp    $0x61,%r11d
  0x00007f1911118991: jl     0x00007f1911118fa8  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118997: cmp    $0x66,%r11d
  0x00007f191111899b: jg     0x00007f1911119064  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111189a1: add    $0xffffffa9,%r11d  ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111189a5: jmp    0x00007f19111189ab
  0x00007f19111189a7: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111189ab: movzwl 0x26(%r9),%ebx     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111189b0: shl    $0x4,%r10
  0x00007f19111189b4: movslq %r11d,%r11
  0x00007f19111189b7: or     %r11,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 471)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111189ba: cmp    $0x30,%ebx
  0x00007f19111189bd: jl     0x00007f1911118eb1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111189c3: cmp    $0x39,%ebx
  0x00007f19111189c6: jle    0x00007f19111189df  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111189c8: cmp    $0x61,%ebx
  0x00007f19111189cb: jl     0x00007f1911118f9d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111189d1: cmp    $0x66,%ebx
  0x00007f19111189d4: jg     0x00007f1911119059  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111189da: add    $0xffffffa9,%ebx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111189dd: jmp    0x00007f19111189e2
  0x00007f19111189df: add    $0xffffffd0,%ebx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111189e2: movzwl 0x28(%r9),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111189e7: shl    $0x4,%r10
  0x00007f19111189eb: movslq %ebx,%rcx
  0x00007f19111189ee: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 471)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111189f1: cmp    $0x30,%r11d
  0x00007f19111189f5: jl     0x00007f1911118ec4  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f19111189fb: cmp    $0x39,%r11d
  0x00007f19111189ff: jle    0x00007f1911118a1b  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a01: cmp    $0x61,%r11d
  0x00007f1911118a05: jl     0x00007f1911118fb0  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a0b: cmp    $0x66,%r11d
  0x00007f1911118a0f: jg     0x00007f191111906c  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a15: add    $0xffffffa9,%r11d  ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a19: jmp    0x00007f1911118a1f
  0x00007f1911118a1b: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a1f: movzwl 0x2c(%r9),%ecx     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a24: shl    $0x4,%r10
  0x00007f1911118a28: movslq %r11d,%r11
  0x00007f1911118a2b: or     %r11,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 471)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a2e: cmp    $0x30,%ecx
  0x00007f1911118a31: jl     0x00007f1911118ee5  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a37: cmp    $0x39,%ecx
  0x00007f1911118a3a: jle    0x00007f1911118a53  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a3c: cmp    $0x61,%ecx
  0x00007f1911118a3f: jl     0x00007f1911118fd1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a45: cmp    $0x66,%ecx
  0x00007f1911118a48: jg     0x00007f191111908d  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a4e: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a51: jmp    0x00007f1911118a56
  0x00007f1911118a53: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a56: movzwl 0x2e(%r9),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a5b: shl    $0x4,%r10
  0x00007f1911118a5f: movslq %ecx,%rcx
  0x00007f1911118a62: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 475)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a65: cmp    $0x30,%r11d
  0x00007f1911118a69: jl     0x00007f1911118ef8  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a6f: cmp    $0x39,%r11d
  0x00007f1911118a73: jle    0x00007f1911118a8f  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a75: cmp    $0x61,%r11d
  0x00007f1911118a79: jl     0x00007f1911118fe4  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a7f: cmp    $0x66,%r11d
  0x00007f1911118a83: jg     0x00007f19111190a0  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a89: add    $0xffffffa9,%r11d  ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a8d: jmp    0x00007f1911118a93
  0x00007f1911118a8f: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a93: movzwl 0x30(%r9),%ecx     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118a98: shl    $0x4,%r10
  0x00007f1911118a9c: movslq %r11d,%r11
  0x00007f1911118a9f: or     %r11,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 475)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118aa2: cmp    $0x30,%ecx
  0x00007f1911118aa5: jl     0x00007f1911118eed  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118aab: cmp    $0x39,%ecx
  0x00007f1911118aae: jle    0x00007f1911118ac7  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118ab0: cmp    $0x61,%ecx
  0x00007f1911118ab3: jl     0x00007f1911118fd9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118ab9: cmp    $0x66,%ecx
  0x00007f1911118abc: jg     0x00007f1911119095  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118ac2: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118ac5: jmp    0x00007f1911118aca
  0x00007f1911118ac7: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118aca: movzwl 0x32(%r9),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118acf: shl    $0x4,%r10
  0x00007f1911118ad3: movslq %ecx,%rcx
  0x00007f1911118ad6: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 475)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118ad9: cmp    $0x30,%r11d
  0x00007f1911118add: jl     0x00007f1911118f00  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118ae3: cmp    $0x39,%r11d
  0x00007f1911118ae7: jle    0x00007f1911118b03  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118ae9: cmp    $0x61,%r11d
  0x00007f1911118aed: jl     0x00007f1911118fec  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118af3: cmp    $0x66,%r11d
  0x00007f1911118af7: jg     0x00007f19111190a8  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118afd: add    $0xffffffa9,%r11d  ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b01: jmp    0x00007f1911118b07
  0x00007f1911118b03: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b07: movzwl 0x36(%r9),%ecx     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b0c: shl    $0x4,%r10
  0x00007f1911118b10: movslq %r11d,%r11
  0x00007f1911118b13: or     %r11,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 475)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b16: cmp    $0x30,%ecx
  0x00007f1911118b19: jl     0x00007f1911118f21  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b1f: cmp    $0x39,%ecx
  0x00007f1911118b22: jle    0x00007f1911118b3b  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b24: cmp    $0x61,%ecx
  0x00007f1911118b27: jl     0x00007f191111900d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b2d: cmp    $0x66,%ecx
  0x00007f1911118b30: jg     0x00007f19111190c9  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b36: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b39: jmp    0x00007f1911118b3e
  0x00007f1911118b3b: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b3e: movzwl 0x38(%r9),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b43: movslq %ecx,%r8           ;*i2l  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@215 (line 481)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b46: cmp    $0x30,%r11d
  0x00007f1911118b4a: jl     0x00007f1911118f32  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b50: cmp    $0x39,%r11d
  0x00007f1911118b54: jle    0x00007f1911118b70  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b56: cmp    $0x61,%r11d
  0x00007f1911118b5a: jl     0x00007f191111901e  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b60: cmp    $0x66,%r11d
  0x00007f1911118b64: jg     0x00007f19111190da  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b6a: add    $0xffffffa9,%r11d  ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b6e: jmp    0x00007f1911118b74
  0x00007f1911118b70: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b74: movzwl 0x3a(%r9),%ecx     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b79: movslq %r11d,%r11
  0x00007f1911118b7c: shl    $0x4,%r8
  0x00007f1911118b80: or     %r11,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 481)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b83: cmp    $0x30,%ecx
  0x00007f1911118b86: jl     0x00007f1911118f28  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b8c: cmp    $0x39,%ecx
  0x00007f1911118b8f: jle    0x00007f1911118ba8  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b91: cmp    $0x61,%ecx
  0x00007f1911118b94: jl     0x00007f1911119014  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118b9a: cmp    $0x66,%ecx
  0x00007f1911118b9d: jg     0x00007f19111190d0  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118ba3: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118ba6: jmp    0x00007f1911118bab
  0x00007f1911118ba8: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118bab: movzwl 0x3c(%r9),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118bb0: movslq %ecx,%rcx
  0x00007f1911118bb3: shl    $0x4,%r8
  0x00007f1911118bb7: or     %rcx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 481)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118bba: cmp    $0x30,%r11d
  0x00007f1911118bbe: jl     0x00007f1911118f39  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118bc4: cmp    $0x39,%r11d
  0x00007f1911118bc8: jle    0x00007f1911118be4  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118bca: cmp    $0x61,%r11d
  0x00007f1911118bce: jl     0x00007f1911119025  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118bd4: cmp    $0x66,%r11d
  0x00007f1911118bd8: jg     0x00007f19111190e1  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118bde: add    $0xffffffa9,%r11d  ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118be2: jmp    0x00007f1911118be8
  0x00007f1911118be4: add    $0xffffffd0,%r11d  ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118be8: movzwl 0x40(%r9),%ecx     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {no_reloc}
  0x00007f1911118bed: movslq %r11d,%r11
  0x00007f1911118bf0: shl    $0x4,%r8
  0x00007f1911118bf4: or     %r11,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 481)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118bf7: mov    $0x18,%edi
  0x00007f1911118bfc: cmp    $0x30,%ecx
  0x00007f1911118bff: jl     0x00007f1911118d92  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118c05: cmp    $0x39,%ecx
  0x00007f1911118c08: jle    0x00007f1911118c21  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118c0a: cmp    $0x61,%ecx
  0x00007f1911118c0d: jl     0x00007f1911118dde  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118c13: cmp    $0x66,%ecx
  0x00007f1911118c16: jg     0x00007f1911118e06  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118c1c: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118c1f: jmp    0x00007f1911118c24
  0x00007f1911118c21: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118c24: movslq %ecx,%r11
  0x00007f1911118c27: shl    $0x4,%r8
  0x00007f1911118c2b: or     %r11,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 485)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118c2e: mov    $0x19,%r11d
  0x00007f1911118c34: jmp    0x00007f1911118c57
  0x00007f1911118c36: data16 nopw 0x0(%rax,%rax,1)
  0x00007f1911118c40: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118c43: movslq %ecx,%rcx
  0x00007f1911118c46: shl    $0x4,%r8
  0x00007f1911118c4a: or     %rcx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 485)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118c4d: add    $0x2,%r11d         ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@256 (line 483)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118c51: cmp    $0x23,%r11d
  0x00007f1911118c55: jge    0x00007f1911118cbf  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@235 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118c57: movzwl 0x10(%r9,%r11,2),%ebx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118c5d: cmp    $0x30,%ebx
  0x00007f1911118c60: jl     0x00007f1911118d8d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118c66: cmp    $0x39,%ebx
  0x00007f1911118c69: jle    0x00007f1911118c82  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118c6b: cmp    $0x61,%ebx
  0x00007f1911118c6e: jl     0x00007f1911118dd9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118c74: cmp    $0x66,%ebx
  0x00007f1911118c77: jg     0x00007f1911118e01  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118c7d: add    $0xffffffa9,%ebx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118c80: jmp    0x00007f1911118c85
  0x00007f1911118c82: add    $0xffffffd0,%ebx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118c85: movzwl 0x12(%r9,%r11,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118c8b: mov    %r11d,%edi
  0x00007f1911118c8e: inc    %edi               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@256 (line 483)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118c90: movslq %ebx,%rbx
  0x00007f1911118c93: shl    $0x4,%r8
  0x00007f1911118c97: or     %rbx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 485)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118c9a: cmp    $0x30,%ecx
  0x00007f1911118c9d: jl     0x00007f1911118d92  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118ca3: cmp    $0x39,%ecx
  0x00007f1911118ca6: jle    0x00007f1911118c40  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118ca8: cmp    $0x61,%ecx
  0x00007f1911118cab: jl     0x00007f1911118dde  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118cb1: cmp    $0x66,%ecx
  0x00007f1911118cb4: jg     0x00007f1911118e06  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118cba: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118cbd: jmp    0x00007f1911118c43
  0x00007f1911118cbf: cmp    $0x24,%r11d
  0x00007f1911118cc3: jge    0x00007f1911118d13
  0x00007f1911118cc5: data16 xchg %ax,%ax       ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@235 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118cc8: cmp    $0x24,%r11d
  0x00007f1911118ccc: jge    0x00007f1911118f6d  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118cd2: movzwl 0x10(%r9,%r11,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118cd8: cmp    $0x30,%ecx
  0x00007f1911118cdb: jl     0x00007f1911118d95  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118ce1: cmp    $0x39,%ecx
  0x00007f1911118ce4: jle    0x00007f1911118cfd  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118ce6: cmp    $0x61,%ecx
  0x00007f1911118ce9: jl     0x00007f1911118de1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118cef: cmp    $0x66,%ecx
  0x00007f1911118cf2: jg     0x00007f1911118e09  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118cf8: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118cfb: jmp    0x00007f1911118d00
  0x00007f1911118cfd: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118d00: movslq %ecx,%rcx
  0x00007f1911118d03: shl    $0x4,%r8
  0x00007f1911118d07: or     %rcx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 485)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118d0a: inc    %r11d              ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@256 (line 483)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118d0d: cmp    $0x24,%r11d
  0x00007f1911118d11: jl     0x00007f1911118cc8  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@263 (line 483)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118d13: mov    0x60(%r15),%rax
  0x00007f1911118d17: mov    %rax,%r11
  0x00007f1911118d1a: add    $0x20,%r11
  0x00007f1911118d1e: cmp    0x70(%r15),%r11
  0x00007f1911118d22: jae    0x00007f1911118d6b
  0x00007f1911118d24: mov    %r11,0x60(%r15)
  0x00007f1911118d28: prefetchw 0xc0(%r11)
  0x00007f1911118d30: mov    $0xf800869e,%r11d  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007f1911118d36: shl    $0x3,%r11
  0x00007f1911118d3a: mov    0xa8(%r11),%r11
  0x00007f1911118d41: mov    %r11,(%rax)
  0x00007f1911118d44: movl   $0xf800869e,0x8(%rax)  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007f1911118d4b: mov    %r12d,0xc(%rax)
  0x00007f1911118d4f: mov    %r12,0x10(%rax)
  0x00007f1911118d53: mov    %r12,0x18(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@266 (line 488)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118d57: mov    %r10,0x10(%rax)    ;*putfield mostSigBits
                                                ; - java.util.UUID::&lt;init&gt;@6 (line 129)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@272 (line 488)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118d5b: mov    %r8,0x18(%rax)     ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@-1 (line 455)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)

  0x00007f1911118d5f: add    $0x30,%rsp
  0x00007f1911118d63: pop    %rbp
  0x00007f1911118d64: test   %eax,0x1637b296(%rip)        # 0x00007f1927494000
                                                ;   {poll_return}
  0x00007f1911118d6a: retq   
  0x00007f1911118d6b: mov    %r10,(%rsp)
  0x00007f1911118d6f: mov    %r8,%rbp
  0x00007f1911118d72: movabs $0x7c00434f0,%rsi  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007f1911118d7c: data16 xchg %ax,%ax
  0x00007f1911118d7f: callq  0x00007f191106c6a0  ; OopMap{off=1476}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@266 (line 488)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118d84: mov    %rbp,%r8
  0x00007f1911118d87: mov    (%rsp),%r10
  0x00007f1911118d8b: jmp    0x00007f1911118d57
  0x00007f1911118d8d: mov    %ebx,%ecx
  0x00007f1911118d8f: mov    %r11d,%edi
  0x00007f1911118d92: mov    %edi,%r11d
  0x00007f1911118d95: mov    $0xffffff65,%esi
  0x00007f1911118d9a: mov    %r10,%rbp
  0x00007f1911118d9d: mov    %r8,(%rsp)
  0x00007f1911118da1: mov    %r11d,0x8(%rsp)
  0x00007f1911118da6: mov    %ecx,0x10(%rsp)
  0x00007f1911118daa: nop
  0x00007f1911118dab: callq  0x00007f19110051a0  ; OopMap{off=1520}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118db0: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118db5: mov    %ecx,%edx
  0x00007f1911118db7: mov    %edi,%r11d
  0x00007f1911118dba: mov    %edx,%ecx
  0x00007f1911118dbc: mov    $0xffffff65,%esi
  0x00007f1911118dc1: mov    %r10,%rbp
  0x00007f1911118dc4: mov    %ecx,(%rsp)
  0x00007f1911118dc7: mov    %r11d,0x8(%rsp)
  0x00007f1911118dcc: data16 xchg %ax,%ax
  0x00007f1911118dcf: callq  0x00007f19110051a0  ; OopMap{off=1556}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118dd4: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118dd9: mov    %ebx,%ecx
  0x00007f1911118ddb: mov    %r11d,%edi
  0x00007f1911118dde: mov    %edi,%r11d
  0x00007f1911118de1: mov    $0xffffff65,%esi
  0x00007f1911118de6: mov    %r10,%rbp
  0x00007f1911118de9: mov    %r8,(%rsp)
  0x00007f1911118ded: mov    %r11d,0x8(%rsp)
  0x00007f1911118df2: mov    %ecx,0x10(%rsp)
  0x00007f1911118df6: nop
  0x00007f1911118df7: callq  0x00007f19110051a0  ; OopMap{off=1596}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118dfc: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118e01: mov    %ebx,%ecx
  0x00007f1911118e03: mov    %r11d,%edi
  0x00007f1911118e06: mov    %edi,%r11d
  0x00007f1911118e09: mov    $0xffffff65,%esi
  0x00007f1911118e0e: mov    %r10,%rbp
  0x00007f1911118e11: mov    %r8,(%rsp)
  0x00007f1911118e15: mov    %r11d,0x8(%rsp)
  0x00007f1911118e1a: mov    %ecx,0x10(%rsp)
  0x00007f1911118e1e: nop
  0x00007f1911118e1f: callq  0x00007f19110051a0  ; OopMap{off=1636}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118e24: callq  0x00007f192619fa20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118e29: mov    %ecx,%edx
  0x00007f1911118e2b: mov    %edi,%r11d
  0x00007f1911118e2e: mov    %edx,%ecx
  0x00007f1911118e30: mov    $0xffffff65,%esi
  0x00007f1911118e35: mov    %r10,%rbp
  0x00007f1911118e38: mov    %ecx,(%rsp)
  0x00007f1911118e3b: mov    %r11d,0x8(%rsp)
  0x00007f1911118e40: data16 xchg %ax,%ax
  0x00007f1911118e43: callq  0x00007f19110051a0  ; OopMap{off=1672}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118e48: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118e4d: mov    %ecx,%edx
  0x00007f1911118e4f: mov    %edi,%r11d
  0x00007f1911118e52: mov    %edx,%ecx
  0x00007f1911118e54: mov    $0xffffff65,%esi
  0x00007f1911118e59: mov    %r10,%rbp
  0x00007f1911118e5c: mov    %ecx,(%rsp)
  0x00007f1911118e5f: mov    %r11d,0x8(%rsp)
  0x00007f1911118e64: data16 xchg %ax,%ax
  0x00007f1911118e67: callq  0x00007f19110051a0  ; OopMap{off=1708}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118e6c: callq  0x00007f192619fa20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118e71: mov    $0xffffff65,%esi
  0x00007f1911118e76: nop
  0x00007f1911118e77: callq  0x00007f19110051a0  ; OopMap{off=1724}
                                                ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@26 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118e7c: callq  0x00007f192619fa20  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@26 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118e81: mov    $0xffffff65,%esi
  0x00007f1911118e86: nop
  0x00007f1911118e87: callq  0x00007f19110051a0  ; OopMap{off=1740}
                                                ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@39 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118e8c: callq  0x00007f192619fa20  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@39 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118e91: mov    $0xffffff65,%esi
  0x00007f1911118e96: nop
  0x00007f1911118e97: callq  0x00007f19110051a0  ; OopMap{off=1756}
                                                ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@52 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118e9c: callq  0x00007f192619fa20  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@52 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118ea1: xor    %r10d,%r10d
  0x00007f1911118ea4: jmpq   0x00007f1911118dba
  0x00007f1911118ea9: mov    $0x9,%r8d
  0x00007f1911118eaf: jmp    0x00007f1911118eb7
  0x00007f1911118eb1: mov    $0xb,%r8d
  0x00007f1911118eb7: mov    %ebx,%r11d
  0x00007f1911118eba: jmp    0x00007f1911118eca
  0x00007f1911118ebc: mov    $0xa,%r8d
  0x00007f1911118ec2: jmp    0x00007f1911118eca
  0x00007f1911118ec4: mov    $0xc,%r8d
  0x00007f1911118eca: mov    $0xffffff65,%esi
  0x00007f1911118ecf: mov    %r10,%rbp
  0x00007f1911118ed2: mov    %r8d,(%rsp)
  0x00007f1911118ed6: mov    %r11d,0x8(%rsp)
  0x00007f1911118edb: callq  0x00007f19110051a0  ; OopMap{off=1824}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118ee0: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118ee5: mov    $0xe,%r9d
  0x00007f1911118eeb: jmp    0x00007f1911118ef3
  0x00007f1911118eed: mov    $0x10,%r9d
  0x00007f1911118ef3: mov    %ecx,%r11d
  0x00007f1911118ef6: jmp    0x00007f1911118f06
  0x00007f1911118ef8: mov    $0xf,%r9d
  0x00007f1911118efe: jmp    0x00007f1911118f06
  0x00007f1911118f00: mov    $0x11,%r9d
  0x00007f1911118f06: mov    $0xffffff65,%esi
  0x00007f1911118f0b: mov    %r10,%rbp
  0x00007f1911118f0e: mov    %r9d,(%rsp)
  0x00007f1911118f12: mov    %r11d,0x8(%rsp)
  0x00007f1911118f17: callq  0x00007f19110051a0  ; OopMap{off=1884}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118f1c: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118f21: mov    $0x13,%ebx
  0x00007f1911118f26: jmp    0x00007f1911118f2d
  0x00007f1911118f28: mov    $0x15,%ebx
  0x00007f1911118f2d: mov    %ecx,%r11d
  0x00007f1911118f30: jmp    0x00007f1911118f3e
  0x00007f1911118f32: mov    $0x14,%ebx
  0x00007f1911118f37: jmp    0x00007f1911118f3e
  0x00007f1911118f39: mov    $0x16,%ebx
  0x00007f1911118f3e: mov    $0xffffff65,%esi
  0x00007f1911118f43: mov    %r10,%rbp
  0x00007f1911118f46: mov    %r8,(%rsp)
  0x00007f1911118f4a: mov    %ebx,0x8(%rsp)
  0x00007f1911118f4e: mov    %r11d,0x10(%rsp)
  0x00007f1911118f53: callq  0x00007f19110051a0  ; OopMap{off=1944}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118f58: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118f5d: mov    $0xffffff65,%esi
  0x00007f1911118f62: nop
  0x00007f1911118f63: callq  0x00007f19110051a0  ; OopMap{off=1960}
                                                ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@65 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118f68: callq  0x00007f192619fa20  ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@65 (line 458)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118f6d: mov    $0xffffff65,%esi
  0x00007f1911118f72: mov    %r10,%rbp
  0x00007f1911118f75: mov    %r8,(%rsp)
  0x00007f1911118f79: mov    %r11d,0xc(%rsp)
  0x00007f1911118f7e: mov    %r11d,0x10(%rsp)
  0x00007f1911118f83: callq  0x00007f19110051a0  ; OopMap{off=1992}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118f88: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118f8d: xor    %r10d,%r10d
  0x00007f1911118f90: jmpq   0x00007f1911118e2e
  0x00007f1911118f95: mov    $0x9,%r9d
  0x00007f1911118f9b: jmp    0x00007f1911118fa3
  0x00007f1911118f9d: mov    $0xb,%r9d
  0x00007f1911118fa3: mov    %ebx,%r11d
  0x00007f1911118fa6: jmp    0x00007f1911118fb6
  0x00007f1911118fa8: mov    $0xa,%r9d
  0x00007f1911118fae: jmp    0x00007f1911118fb6
  0x00007f1911118fb0: mov    $0xc,%r9d
  0x00007f1911118fb6: mov    $0xffffff65,%esi
  0x00007f1911118fbb: mov    %r10,%rbp
  0x00007f1911118fbe: mov    %r9d,(%rsp)
  0x00007f1911118fc2: mov    %r11d,0x8(%rsp)
  0x00007f1911118fc7: callq  0x00007f19110051a0  ; OopMap{off=2060}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118fcc: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911118fd1: mov    $0xe,%r9d
  0x00007f1911118fd7: jmp    0x00007f1911118fdf
  0x00007f1911118fd9: mov    $0x10,%r9d
  0x00007f1911118fdf: mov    %ecx,%r11d
  0x00007f1911118fe2: jmp    0x00007f1911118ff2
  0x00007f1911118fe4: mov    $0xf,%r9d
  0x00007f1911118fea: jmp    0x00007f1911118ff2
  0x00007f1911118fec: mov    $0x11,%r9d
  0x00007f1911118ff2: mov    $0xffffff65,%esi
  0x00007f1911118ff7: mov    %r10,%rbp
  0x00007f1911118ffa: mov    %r9d,(%rsp)
  0x00007f1911118ffe: mov    %r11d,0x8(%rsp)
  0x00007f1911119003: callq  0x00007f19110051a0  ; OopMap{off=2120}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911119008: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f191111900d: mov    $0x13,%ebx
  0x00007f1911119012: jmp    0x00007f1911119019
  0x00007f1911119014: mov    $0x15,%ebx
  0x00007f1911119019: mov    %ecx,%r11d
  0x00007f191111901c: jmp    0x00007f191111902a
  0x00007f191111901e: mov    $0x14,%ebx
  0x00007f1911119023: jmp    0x00007f191111902a
  0x00007f1911119025: mov    $0x16,%ebx
  0x00007f191111902a: mov    $0xffffff65,%esi
  0x00007f191111902f: mov    %r10,%rbp
  0x00007f1911119032: mov    %r8,(%rsp)
  0x00007f1911119036: mov    %ebx,0x8(%rsp)
  0x00007f191111903a: mov    %r11d,0x10(%rsp)
  0x00007f191111903f: callq  0x00007f19110051a0  ; OopMap{off=2180}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911119044: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911119049: xor    %r10d,%r10d
  0x00007f191111904c: jmpq   0x00007f1911118e52
  0x00007f1911119051: mov    $0x9,%r9d
  0x00007f1911119057: jmp    0x00007f191111905f
  0x00007f1911119059: mov    $0xb,%r9d
  0x00007f191111905f: mov    %ebx,%r11d
  0x00007f1911119062: jmp    0x00007f1911119072
  0x00007f1911119064: mov    $0xa,%r9d
  0x00007f191111906a: jmp    0x00007f1911119072
  0x00007f191111906c: mov    $0xc,%r9d
  0x00007f1911119072: mov    $0xffffff65,%esi
  0x00007f1911119077: mov    %r10,%rbp
  0x00007f191111907a: mov    %r9d,(%rsp)
  0x00007f191111907e: mov    %r11d,0x8(%rsp)
  0x00007f1911119083: callq  0x00007f19110051a0  ; OopMap{off=2248}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911119088: callq  0x00007f192619fa20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f191111908d: mov    $0xe,%r9d
  0x00007f1911119093: jmp    0x00007f191111909b
  0x00007f1911119095: mov    $0x10,%r9d
  0x00007f191111909b: mov    %ecx,%r11d
  0x00007f191111909e: jmp    0x00007f19111190ae
  0x00007f19111190a0: mov    $0xf,%r9d
  0x00007f19111190a6: jmp    0x00007f19111190ae
  0x00007f19111190a8: mov    $0x11,%r9d
  0x00007f19111190ae: mov    $0xffffff65,%esi
  0x00007f19111190b3: mov    %r10,%rbp
  0x00007f19111190b6: mov    %r9d,(%rsp)
  0x00007f19111190ba: mov    %r11d,0x8(%rsp)
  0x00007f19111190bf: callq  0x00007f19110051a0  ; OopMap{off=2308}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f19111190c4: callq  0x00007f192619fa20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f19111190c9: mov    $0x13,%ebx
  0x00007f19111190ce: jmp    0x00007f19111190d5
  0x00007f19111190d0: mov    $0x15,%ebx
  0x00007f19111190d5: mov    %ecx,%r11d
  0x00007f19111190d8: jmp    0x00007f19111190e6
  0x00007f19111190da: mov    $0x14,%ebx
  0x00007f19111190df: jmp    0x00007f19111190e6
  0x00007f19111190e1: mov    $0x16,%ebx
  0x00007f19111190e6: mov    $0xffffff65,%esi
  0x00007f19111190eb: mov    %r10,%rbp
  0x00007f19111190ee: mov    %r8,(%rsp)
  0x00007f19111190f2: mov    %ebx,0x8(%rsp)
  0x00007f19111190f6: mov    %r11d,0x10(%rsp)
  0x00007f19111190fb: callq  0x00007f19110051a0  ; OopMap{off=2368}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911119100: callq  0x00007f192619fa20  ;*new
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@266 (line 488)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ;   {runtime_call}
  0x00007f1911119105: mov    %rax,%rsi
  0x00007f1911119108: add    $0x30,%rsp
  0x00007f191111910c: pop    %rbp
  0x00007f191111910d: jmpq   0x00007f191106f4e0  ;   {runtime_call}
  0x00007f1911119112: hlt    
  0x00007f1911119113: hlt    
  0x00007f1911119114: hlt    
  0x00007f1911119115: hlt    
  0x00007f1911119116: hlt    
  0x00007f1911119117: hlt    
  0x00007f1911119118: hlt    
  0x00007f1911119119: hlt    
  0x00007f191111911a: hlt    
  0x00007f191111911b: hlt    
  0x00007f191111911c: hlt    
  0x00007f191111911d: hlt    
  0x00007f191111911e: hlt    
  0x00007f191111911f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f1911119120: jmpq   0x00007f191106c760  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f1911119125: callq  0x00007f191111912a
  0x00007f191111912a: subq   $0x5,(%rsp)
  0x00007f191111912f: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f1911119134: hlt    
  0x00007f1911119135: hlt    
  0x00007f1911119136: hlt    
  0x00007f1911119137: hlt    
<nmethod compile_id='23' compiler='C2' level='4' entry='0x00007f19111187c0' size='7496' address='0x00007f1911118610' relocation_offset='296' insts_offset='432' stub_offset='2832' scopes_data_offset='2928' scopes_pcs_offset='3816' dependencies_offset='7464' handler_table_offset='7472' oops_offset='2856' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='60415' iicount='60415' stamp='0.184'/>
<make_not_entrant thread='139745423410944' compile_id='19' compiler='C1' level='3' stamp='0.184'/>
<writer thread='139746009892608'/>
<task_queued compile_id='24' compile_kind='osr' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='60416' iicount='1' osr_bci='9' level='3' stamp='0.184' comment='tiered' hot_count='60416'/>
<writer thread='139745421305600'/>
Decoding compiled method 0x00007f1911112f50:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;
  0x00007f1911113100: mov    0x8(%rsi),%r10d
  0x00007f1911113104: shl    $0x3,%r10
  0x00007f1911113108: cmp    %rax,%r10
  0x00007f191111310b: jne    0x00007f1911045e20  ;   {runtime_call}
  0x00007f1911113111: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f191111311c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f1911113120: mov    %eax,-0x14000(%rsp)
  0x00007f1911113127: push   %rbp
  0x00007f1911113128: sub    $0x50,%rsp
  0x00007f191111312c: movabs $0x7f190cf5c8a8,%rdi  ;   {metadata(method data for {method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f1911113136: mov    0xdc(%rdi),%ebx
  0x00007f191111313c: add    $0x8,%ebx
  0x00007f191111313f: mov    %ebx,0xdc(%rdi)
  0x00007f1911113145: movabs $0x7f190cf59370,%rdi  ;   {metadata({method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f191111314f: and    $0x1ff8,%ebx
  0x00007f1911113155: cmp    $0x0,%ebx
  0x00007f1911113158: je     0x00007f1911113428  ;*aload_0
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@0 (line 9)

  0x00007f191111315e: mov    %rsi,%rdi
  0x00007f1911113161: movabs $0x7f190cf5c8a8,%rbx  ;   {metadata(method data for {method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f191111316b: addq   $0x1,0x108(%rbx)
  0x00007f1911113173: movabs $0x7f190cccf108,%rdi  ;   {metadata(method data for {method} {0x00007f190cb59480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f191111317d: mov    0xdc(%rdi),%ebx
  0x00007f1911113183: add    $0x8,%ebx
  0x00007f1911113186: mov    %ebx,0xdc(%rdi)
  0x00007f191111318c: movabs $0x7f190cb59480,%rdi  ;   {metadata({method} {0x00007f190cb59480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f1911113196: and    $0x7ffff8,%ebx
  0x00007f191111319c: cmp    $0x0,%ebx
  0x00007f191111319f: je     0x00007f191111343f
  0x00007f19111131a5: movabs $0x7f190cf5c8a8,%rdi  ;   {metadata(method data for {method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f19111131af: incl   0x118(%rdi)
  0x00007f19111131b5: mov    $0x0,%edi          ;*goto
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@6 (line 11)

  0x00007f19111131ba: nopw   0x0(%rax,%rax,1)
  0x00007f19111131c0: movabs $0x7f190cf5c8a8,%rbx  ;   {metadata(method data for {method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f19111131ca: mov    0xe0(%rbx),%eax
  0x00007f19111131d0: add    $0x8,%eax
  0x00007f19111131d3: mov    %eax,0xe0(%rbx)
  0x00007f19111131d9: movabs $0x7f190cf59370,%rbx  ;   {metadata({method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f19111131e3: and    $0xfff8,%eax
  0x00007f19111131e9: cmp    $0x0,%eax
  0x00007f19111131ec: je     0x00007f1911113456  ; OopMap{rsi=Oop off=242}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)

  0x00007f19111131f2: test   %eax,0x16380f08(%rip)        # 0x00007f1927494100
                                                ;   {poll}
  0x00007f19111131f8: cmp    $0xf4240,%edi
  0x00007f19111131fe: movabs $0x7f190cf5c8a8,%rbx  ;   {metadata(method data for {method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f1911113208: movabs $0x1c0,%rax
  0x00007f1911113212: jl     0x00007f1911113222
  0x00007f1911113218: movabs $0x1d0,%rax
  0x00007f1911113222: mov    (%rbx,%rax,1),%rdx
  0x00007f1911113226: lea    0x1(%rdx),%rdx
  0x00007f191111322a: mov    %rdx,(%rbx,%rax,1)
  0x00007f191111322e: jge    0x00007f19111133e4  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)

  0x00007f1911113234: mov    %edi,0x2c(%rsp)
  0x00007f1911113238: cmp    (%rsi),%rax        ;*invokevirtual parse
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ; implicit exception: dispatches to 0x00007f191111346d
  0x00007f191111323b: mov    %rsi,%rbx
  0x00007f191111323e: movabs $0x7f190cf5c8a8,%rax  ;   {metadata(method data for {method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f1911113248: movabs $0x7c0060028,%r10  ;   {metadata(&apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f1911113252: mov    %r10,0x138(%rax)
  0x00007f1911113259: addq   $0x1,0x140(%rax)
  0x00007f1911113261: movabs $0x7f190cf5c750,%rbx  ;   {metadata(method data for {method} {0x00007f190cf59428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f191111326b: mov    0xdc(%rbx),%eax
  0x00007f1911113271: add    $0x8,%eax
  0x00007f1911113274: mov    %eax,0xdc(%rbx)
  0x00007f191111327a: movabs $0x7f190cf59428,%rbx  ;   {metadata({method} {0x00007f190cf59428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f1911113284: and    $0x7ffff8,%eax
  0x00007f191111328a: cmp    $0x0,%eax
  0x00007f191111328d: je     0x00007f1911113472
  0x00007f1911113293: movabs $0x7f190cf5c750,%rbx  ;   {metadata(method data for {method} {0x00007f190cf59428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f191111329d: addq   $0x1,0x108(%rbx)
  0x00007f19111132a5: mov    %rsi,0x38(%rsp)
  0x00007f19111132aa: movabs $0x670be7490,%rsi  ;*invokestatic uuidFromCharSequence
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {oop(&quot;ba226cf7-d156-4b18-a78a-094736208cc9&quot;)}
  0x00007f19111132b4: nop
  0x00007f19111132b5: nop
  0x00007f19111132b6: nop
  0x00007f19111132b7: callq  0x00007f1911046420  ; OopMap{[56]=Oop off=444}
                                                ;*invokestatic uuidFromCharSequence
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {static_call}
  0x00007f19111132bc: movabs $0x7f190cf5c8a8,%rsi  ;   {metadata(method data for {method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f19111132c6: addq   $0x1,0x160(%rsi)
  0x00007f19111132ce: mov    %rax,%rsi          ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)

  0x00007f19111132d1: nop
  0x00007f19111132d2: nop
  0x00007f19111132d3: nop
  0x00007f19111132d4: nop
  0x00007f19111132d5: nop
  0x00007f19111132d6: nop
  0x00007f19111132d7: callq  0x00007f1911046420  ; OopMap{[56]=Oop off=476}
                                                ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)
                                                ;   {static_call}
  0x00007f19111132dc: cmp    $0x1,%eax
  0x00007f19111132df: movabs $0x7f190cf5c8a8,%rdx  ;   {metadata(method data for {method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f19111132e9: movabs $0x170,%rsi
  0x00007f19111132f3: jne    0x00007f1911113303
  0x00007f19111132f9: movabs $0x180,%rsi
  0x00007f1911113303: mov    (%rdx,%rsi,1),%rdi
  0x00007f1911113307: lea    0x1(%rdi),%rdi
  0x00007f191111330b: mov    %rdi,(%rdx,%rsi,1)
  0x00007f191111330f: jne    0x00007f19111133d4  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@19 (line 13)

  0x00007f1911113315: movabs $0x670b80c78,%rdx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007f191111331f: mov    0x6c(%rdx),%esi
  0x00007f1911113322: shl    $0x3,%rsi          ;*getstatic out
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@22 (line 14)

  0x00007f1911113326: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00007f1911113489
  0x00007f1911113329: mov    %rsi,%rdx
  0x00007f191111332c: movabs $0x7f190cf5c8a8,%rdi  ;   {metadata(method data for {method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f1911113336: mov    0x8(%rdx),%edx
  0x00007f1911113339: shl    $0x3,%rdx
  0x00007f191111333d: cmp    0x198(%rdi),%rdx
  0x00007f1911113344: jne    0x00007f1911113353
  0x00007f1911113346: addq   $0x1,0x1a0(%rdi)
  0x00007f191111334e: jmpq   0x00007f19111133b9
  0x00007f1911113353: cmp    0x1a8(%rdi),%rdx
  0x00007f191111335a: jne    0x00007f1911113369
  0x00007f191111335c: addq   $0x1,0x1b0(%rdi)
  0x00007f1911113364: jmpq   0x00007f19111133b9
  0x00007f1911113369: cmpq   $0x0,0x198(%rdi)
  0x00007f1911113374: jne    0x00007f191111338d
  0x00007f1911113376: mov    %rdx,0x198(%rdi)
  0x00007f191111337d: movq   $0x1,0x1a0(%rdi)
  0x00007f1911113388: jmpq   0x00007f19111133b9
  0x00007f191111338d: cmpq   $0x0,0x1a8(%rdi)
  0x00007f1911113398: jne    0x00007f19111133b1
  0x00007f191111339a: mov    %rdx,0x1a8(%rdi)
  0x00007f19111133a1: movq   $0x1,0x1b0(%rdi)
  0x00007f19111133ac: jmpq   0x00007f19111133b9
  0x00007f19111133b1: addq   $0x1,0x190(%rdi)
  0x00007f19111133b9: movabs $0x670c199e0,%rdx  ;*invokevirtual println
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {oop(&quot;X&quot;)}
  0x00007f19111133c3: nop
  0x00007f19111133c4: nop
  0x00007f19111133c5: movabs $0xffffffffffffffff,%rax
  0x00007f19111133cf: callq  0x00007f1911046220  ; OopMap{[56]=Oop off=724}
                                                ;*invokevirtual println
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {virtual_call}
  0x00007f19111133d4: mov    0x2c(%rsp),%edi
  0x00007f19111133d8: mov    0x38(%rsp),%rsi
  0x00007f19111133dd: inc    %edi
  0x00007f19111133df: jmpq   0x00007f19111131c0  ;*iload_1
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@33 (line 11)

  0x00007f19111133e4: add    $0x50,%rsp
  0x00007f19111133e8: pop    %rbp
  0x00007f19111133e9: test   %eax,0x16380d11(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f19111133ef: retq                      ;*return
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@39 (line 18)

  0x00007f19111133f0: mov    %eax,-0x14000(%rsp)
  0x00007f19111133f7: push   %rbp
  0x00007f19111133f8: sub    $0x50,%rsp
  0x00007f19111133fc: mov    0x10(%rsi),%rbx
  0x00007f1911113400: mov    0x8(%rsi),%eax
  0x00007f1911113403: mov    %rsi,%rdi
  0x00007f1911113406: mov    %rbx,0x30(%rsp)
  0x00007f191111340b: mov    %eax,0x28(%rsp)
  0x00007f191111340f: callq  0x00007f1926242d80  ;   {runtime_call}
  0x00007f1911113414: mov    0x28(%rsp),%eax
  0x00007f1911113418: mov    %rax,%rdi
  0x00007f191111341b: mov    0x30(%rsp),%rbx
  0x00007f1911113420: mov    %rbx,%rsi
  0x00007f1911113423: jmpq   0x00007f1911113234
  0x00007f1911113428: mov    %rdi,0x8(%rsp)
  0x00007f191111342d: movq   $0xffffffffffffffff,(%rsp)
  0x00007f1911113435: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop off=826}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@-1 (line 9)
                                                ;   {runtime_call}
  0x00007f191111343a: jmpq   0x00007f191111315e
  0x00007f191111343f: mov    %rdi,0x8(%rsp)
  0x00007f1911113444: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191111344c: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop off=849}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@1 (line 9)
                                                ;   {runtime_call}
  0x00007f1911113451: jmpq   0x00007f19111131a5
  0x00007f1911113456: mov    %rbx,0x8(%rsp)
  0x00007f191111345b: movq   $0x24,(%rsp)
  0x00007f1911113463: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop off=872}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)
                                                ;   {runtime_call}
  0x00007f1911113468: jmpq   0x00007f19111131f2
  0x00007f191111346d: callq  0x00007f191106e6c0  ; OopMap{rsi=Oop off=882}
                                                ;*invokevirtual parse
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {runtime_call}
  0x00007f1911113472: mov    %rbx,0x8(%rsp)
  0x00007f1911113477: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191111347f: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop off=900}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@-1 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {runtime_call}
  0x00007f1911113484: jmpq   0x00007f1911113293
  0x00007f1911113489: callq  0x00007f191106e6c0  ; OopMap{[56]=Oop rsi=Oop off=910}
                                                ;*invokevirtual println
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {runtime_call}
  0x00007f191111348e: nop
  0x00007f191111348f: nop
  0x00007f1911113490: mov    0x2a8(%r15),%rax
  0x00007f1911113497: movabs $0x0,%r10
  0x00007f19111134a1: mov    %r10,0x2a8(%r15)
  0x00007f19111134a8: movabs $0x0,%r10
  0x00007f19111134b2: mov    %r10,0x2b0(%r15)
  0x00007f19111134b9: add    $0x50,%rsp
  0x00007f19111134bd: pop    %rbp
  0x00007f19111134be: jmpq   0x00007f191106f220  ;   {runtime_call}
  0x00007f19111134c3: hlt    
  0x00007f19111134c4: hlt    
  0x00007f19111134c5: hlt    
  0x00007f19111134c6: hlt    
  0x00007f19111134c7: hlt    
  0x00007f19111134c8: hlt    
  0x00007f19111134c9: hlt    
  0x00007f19111134ca: hlt    
  0x00007f19111134cb: hlt    
  0x00007f19111134cc: hlt    
  0x00007f19111134cd: hlt    
  0x00007f19111134ce: hlt    
  0x00007f19111134cf: hlt    
  0x00007f19111134d0: hlt    
  0x00007f19111134d1: hlt    
  0x00007f19111134d2: hlt    
  0x00007f19111134d3: hlt    
  0x00007f19111134d4: hlt    
  0x00007f19111134d5: hlt    
  0x00007f19111134d6: hlt    
  0x00007f19111134d7: hlt    
  0x00007f19111134d8: hlt    
  0x00007f19111134d9: hlt    
  0x00007f19111134da: hlt    
  0x00007f19111134db: hlt    
  0x00007f19111134dc: hlt    
  0x00007f19111134dd: hlt    
  0x00007f19111134de: hlt    
  0x00007f19111134df: hlt    
[Stub Code]
  0x00007f19111134e0: nop                       ;   {no_reloc}
  0x00007f19111134e1: nop
  0x00007f19111134e2: nop
  0x00007f19111134e3: nop
  0x00007f19111134e4: nop
  0x00007f19111134e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f19111134ef: jmpq   0x00007f19111134ef  ;   {runtime_call}
  0x00007f19111134f4: nop
  0x00007f19111134f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f19111134ff: jmpq   0x00007f19111134ff  ;   {runtime_call}
  0x00007f1911113504: nop
  0x00007f1911113505: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191111350f: jmpq   0x00007f191111350f  ;   {runtime_call}
[Exception Handler]
  0x00007f1911113514: callq  0x00007f191106c860  ;   {runtime_call}
  0x00007f1911113519: mov    %rsp,-0x28(%rsp)
  0x00007f191111351e: sub    $0x80,%rsp
  0x00007f1911113525: mov    %rax,0x78(%rsp)
  0x00007f191111352a: mov    %rcx,0x70(%rsp)
  0x00007f191111352f: mov    %rdx,0x68(%rsp)
  0x00007f1911113534: mov    %rbx,0x60(%rsp)
  0x00007f1911113539: mov    %rbp,0x50(%rsp)
  0x00007f191111353e: mov    %rsi,0x48(%rsp)
  0x00007f1911113543: mov    %rdi,0x40(%rsp)
  0x00007f1911113548: mov    %r8,0x38(%rsp)
  0x00007f191111354d: mov    %r9,0x30(%rsp)
  0x00007f1911113552: mov    %r10,0x28(%rsp)
  0x00007f1911113557: mov    %r11,0x20(%rsp)
  0x00007f191111355c: mov    %r12,0x18(%rsp)
  0x00007f1911113561: mov    %r13,0x10(%rsp)
  0x00007f1911113566: mov    %r14,0x8(%rsp)
  0x00007f191111356b: mov    %r15,(%rsp)
  0x00007f191111356f: movabs $0x7f192638cf36,%rdi  ;   {external_word}
  0x00007f1911113579: movabs $0x7f1911113519,%rsi  ;   {internal_word}
  0x00007f1911113583: mov    %rsp,%rdx
  0x00007f1911113586: and    $0xfffffffffffffff0,%rsp
  0x00007f191111358a: callq  0x00007f19260b8990  ;   {runtime_call}
  0x00007f191111358f: hlt    
[Deopt Handler Code]
  0x00007f1911113590: movabs $0x7f1911113590,%r10  ;   {section_word}
  0x00007f191111359a: push   %r10
  0x00007f191111359c: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f19111135a1: hlt    
  0x00007f19111135a2: hlt    
  0x00007f19111135a3: hlt    
  0x00007f19111135a4: hlt    
  0x00007f19111135a5: hlt    
  0x00007f19111135a6: hlt    
  0x00007f19111135a7: hlt    
<nmethod compile_id='24' compile_kind='osr' compiler='C1' level='3' entry='0x00007f1911113100' size='2264' address='0x00007f1911112f50' relocation_offset='296' insts_offset='432' stub_offset='1424' scopes_data_offset='1664' scopes_pcs_offset='1864' dependencies_offset='2232' nul_chk_table_offset='2240' oops_offset='1624' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='91884' iicount='1' stamp='0.186'/>
<writer thread='139745424463616'/>
Decoding compiled method 0x00007f191111b890:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f190cf5b2a8} &apos;uuidFromCharSequence&apos; &apos;(Ljava/lang/CharSequence;)Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/CharSequences&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/CharSequence&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f191111ba80: mov    %eax,-0x14000(%rsp)
  0x00007f191111ba87: push   %rbp
  0x00007f191111ba88: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@-1 (line 455)

  0x00007f191111ba8c: mov    %rsi,%r13
  0x00007f191111ba8f: mov    0x8(%rsi),%r11d    ; implicit exception: dispatches to 0x00007f191111c771
  0x00007f191111ba93: cmp    $0xf80002da,%r11d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007f191111ba9a: jne    0x00007f191111c281  ;*invokeinterface length
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)

  0x00007f191111baa0: mov    0xc(%r13),%r9d     ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)

  0x00007f191111baa4: mov    0xc(%r12,%r9,8),%r11d  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ; implicit exception: dispatches to 0x00007f191111c781
  0x00007f191111baa9: cmp    $0x24,%r11d
  0x00007f191111baad: jne    0x00007f191111c42d  ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@8 (line 455)

  0x00007f191111bab3: cmp    $0x8,%r11d
  0x00007f191111bab7: jle    0x00007f191111c445  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@19 (line 458)

  0x00007f191111babd: cmp    $0x17,%r11d
  0x00007f191111bac1: jbe    0x00007f191111c295
  0x00007f191111bac7: movzwl 0x20(%r12,%r9,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@19 (line 458)

  0x00007f191111bacd: cmp    $0x2d,%ebp
  0x00007f191111bad0: jne    0x00007f191111c325  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@26 (line 458)

  0x00007f191111bad6: cmp    $0xd,%r11d
  0x00007f191111bada: jle    0x00007f191111c45d  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@32 (line 458)

  0x00007f191111bae0: movzwl 0x2a(%r12,%r9,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@32 (line 458)

  0x00007f191111bae6: cmp    $0x2d,%ebp
  0x00007f191111bae9: jne    0x00007f191111c339  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@39 (line 458)

  0x00007f191111baef: cmp    $0x12,%r11d
  0x00007f191111baf3: jle    0x00007f191111c475  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@45 (line 458)

  0x00007f191111baf9: movzwl 0x34(%r12,%r9,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@45 (line 458)

  0x00007f191111baff: cmp    $0x2d,%ebp
  0x00007f191111bb02: jne    0x00007f191111c34d  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@52 (line 458)

  0x00007f191111bb08: cmp    $0x17,%r11d
  0x00007f191111bb0c: jle    0x00007f191111c48d  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@58 (line 458)

  0x00007f191111bb12: movzwl 0x3e(%r12,%r9,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@58 (line 458)

  0x00007f191111bb18: cmp    $0x2d,%ebp
  0x00007f191111bb1b: jne    0x00007f191111c4a5  ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@65 (line 458)

  0x00007f191111bb21: test   %r11d,%r11d
  0x00007f191111bb24: jbe    0x00007f191111c2ad
  0x00007f191111bb2a: cmp    $0x7,%r11d
  0x00007f191111bb2e: jbe    0x00007f191111c2ad  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@83 (line 466)

  0x00007f191111bb34: xor    %edi,%edi
  0x00007f191111bb36: test   %r11d,%r11d
  0x00007f191111bb39: jle    0x00007f191111c4b9  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)

  0x00007f191111bb3f: movzwl 0x10(%r12,%r9,8),%ebx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)

  0x00007f191111bb45: cmp    $0x30,%ebx
  0x00007f191111bb48: jl     0x00007f191111c361  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bb4e: cmp    $0x39,%ebx
  0x00007f191111bb51: jle    0x00007f191111bb6a  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bb53: cmp    $0x61,%ebx
  0x00007f191111bb56: jl     0x00007f191111c5d9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bb5c: cmp    $0x66,%ebx
  0x00007f191111bb5f: jg     0x00007f191111c6a5  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bb65: add    $0xffffffa9,%ebx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bb68: jmp    0x00007f191111bb6d
  0x00007f191111bb6a: add    $0xffffffd0,%ebx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bb6d: movslq %ebx,%r10          ;*i2l  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@101 (line 467)

  0x00007f191111bb70: lea    (%r12,%r9,8),%rax
  0x00007f191111bb74: mov    $0x1,%edi
  0x00007f191111bb79: mov    $0x80000000,%edx
  0x00007f191111bb7e: mov    $0x8,%r8d
  0x00007f191111bb84: cmp    %r8d,%r11d
  0x00007f191111bb87: mov    %r11d,%ecx
  0x00007f191111bb8a: cmovg  %r8d,%ecx
  0x00007f191111bb8e: mov    %ecx,%esi
  0x00007f191111bb90: dec    %esi
  0x00007f191111bb92: cmp    %esi,%ecx
  0x00007f191111bb94: cmovl  %edx,%esi
  0x00007f191111bb97: cmp    $0x1,%esi
  0x00007f191111bb9a: jle    0x00007f191111bc25
  0x00007f191111bba0: xor    %r8d,%r8d
  0x00007f191111bba3: jmp    0x00007f191111bbc4
  0x00007f191111bba5: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f191111bbb0: add    $0xffffffd0,%ebx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bbb3: shl    $0x4,%r10
  0x00007f191111bbb7: movslq %ebx,%rcx
  0x00007f191111bbba: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@102 (line 467)

  0x00007f191111bbbd: add    $0x2,%edi          ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 465)

  0x00007f191111bbc0: cmp    %esi,%edi
  0x00007f191111bbc2: jge    0x00007f191111bc28  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@83 (line 466)

  0x00007f191111bbc4: movzwl 0x10(%rax,%rdi,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)

  0x00007f191111bbc9: cmp    $0x30,%ecx
  0x00007f191111bbcc: jl     0x00007f191111c1bd  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bbd2: cmp    $0x39,%ecx
  0x00007f191111bbd5: jle    0x00007f191111bbee  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bbd7: cmp    $0x61,%ecx
  0x00007f191111bbda: jl     0x00007f191111c239  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bbe0: cmp    $0x66,%ecx
  0x00007f191111bbe3: jg     0x00007f191111c25d  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bbe9: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bbec: jmp    0x00007f191111bbf1
  0x00007f191111bbee: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bbf1: movzwl 0x12(%rax,%rdi,2),%ebx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)

  0x00007f191111bbf6: shl    $0x4,%r10
  0x00007f191111bbfa: movslq %ecx,%rcx
  0x00007f191111bbfd: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@102 (line 467)

  0x00007f191111bc00: cmp    $0x30,%ebx
  0x00007f191111bc03: jl     0x00007f191111c1c1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bc09: cmp    $0x39,%ebx
  0x00007f191111bc0c: jle    0x00007f191111bbb0  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bc0e: cmp    $0x61,%ebx
  0x00007f191111bc11: jl     0x00007f191111c23d  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bc17: cmp    $0x66,%ebx
  0x00007f191111bc1a: jg     0x00007f191111c261  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bc20: add    $0xffffffa9,%ebx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bc23: jmp    0x00007f191111bbb3
  0x00007f191111bc25: xor    %r8d,%r8d
  0x00007f191111bc28: cmp    $0x8,%edi
  0x00007f191111bc2b: jge    0x00007f191111bc77
  0x00007f191111bc2d: data16 xchg %ax,%ax       ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@83 (line 466)

  0x00007f191111bc30: cmp    %r11d,%edi
  0x00007f191111bc33: jge    0x00007f191111c4bc  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)

  0x00007f191111bc39: movzwl 0x10(%rax,%rdi,2),%ebx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)

  0x00007f191111bc3e: cmp    $0x30,%ebx
  0x00007f191111bc41: jl     0x00007f191111c1c3  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bc47: cmp    $0x39,%ebx
  0x00007f191111bc4a: jle    0x00007f191111bc63  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bc4c: cmp    $0x61,%ebx
  0x00007f191111bc4f: jl     0x00007f191111c23f  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bc55: cmp    $0x66,%ebx
  0x00007f191111bc58: jg     0x00007f191111c263  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bc5e: add    $0xffffffa9,%ebx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bc61: jmp    0x00007f191111bc66
  0x00007f191111bc63: add    $0xffffffd0,%ebx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)

  0x00007f191111bc66: movslq %ebx,%rcx
  0x00007f191111bc69: shl    $0x4,%r10
  0x00007f191111bc6d: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@102 (line 467)

  0x00007f191111bc70: inc    %edi               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 465)

  0x00007f191111bc72: cmp    $0x8,%edi
  0x00007f191111bc75: jl     0x00007f191111bc30
  0x00007f191111bc77: cmp    $0x9,%r11d
  0x00007f191111bc7b: jbe    0x00007f191111c2c1
  0x00007f191111bc81: cmp    $0xc,%r11d
  0x00007f191111bc85: jbe    0x00007f191111c2c1  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@121 (line 470)

  0x00007f191111bc8b: cmp    $0x9,%r11d
  0x00007f191111bc8f: jle    0x00007f191111c4e1  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)

  0x00007f191111bc95: movzwl 0x22(%r12,%r9,8),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)

  0x00007f191111bc9b: cmp    $0x30,%ecx
  0x00007f191111bc9e: jl     0x00007f191111c369  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bca4: cmp    $0x39,%ecx
  0x00007f191111bca7: jle    0x00007f191111bcc0  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bca9: cmp    $0x61,%ecx
  0x00007f191111bcac: jl     0x00007f191111c5e1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bcb2: cmp    $0x66,%ecx
  0x00007f191111bcb5: jg     0x00007f191111c6ad  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bcbb: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bcbe: jmp    0x00007f191111bcc3
  0x00007f191111bcc0: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bcc3: movslq %ecx,%rcx
  0x00007f191111bcc6: shl    $0x4,%r10
  0x00007f191111bcca: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 471)

  0x00007f191111bccd: cmp    $0xa,%r11d
  0x00007f191111bcd1: jle    0x00007f191111c4e9  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)

  0x00007f191111bcd7: movzwl 0x24(%r12,%r9,8),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)

  0x00007f191111bcdd: cmp    $0x30,%ecx
  0x00007f191111bce0: jl     0x00007f191111c371  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bce6: cmp    $0x39,%ecx
  0x00007f191111bce9: jle    0x00007f191111bd02  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bceb: cmp    $0x61,%ecx
  0x00007f191111bcee: jl     0x00007f191111c5e9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bcf4: cmp    $0x66,%ecx
  0x00007f191111bcf7: jg     0x00007f191111c6b5  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bcfd: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bd00: jmp    0x00007f191111bd05
  0x00007f191111bd02: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bd05: shl    $0x4,%r10
  0x00007f191111bd09: movslq %ecx,%rcx
  0x00007f191111bd0c: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 471)

  0x00007f191111bd0f: cmp    $0xb,%r11d
  0x00007f191111bd13: jle    0x00007f191111c4f1  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)

  0x00007f191111bd19: movzwl 0x26(%r12,%r9,8),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)

  0x00007f191111bd1f: cmp    $0x30,%ecx
  0x00007f191111bd22: jl     0x00007f191111c379  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bd28: cmp    $0x39,%ecx
  0x00007f191111bd2b: jle    0x00007f191111bd44  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bd2d: cmp    $0x61,%ecx
  0x00007f191111bd30: jl     0x00007f191111c5f1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bd36: cmp    $0x66,%ecx
  0x00007f191111bd39: jg     0x00007f191111c6bd  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bd3f: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bd42: jmp    0x00007f191111bd47
  0x00007f191111bd44: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bd47: shl    $0x4,%r10
  0x00007f191111bd4b: movslq %ecx,%rcx
  0x00007f191111bd4e: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 471)

  0x00007f191111bd51: cmp    $0xc,%r11d
  0x00007f191111bd55: jle    0x00007f191111c4f9  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)

  0x00007f191111bd5b: movzwl 0x28(%r12,%r9,8),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)

  0x00007f191111bd61: cmp    $0x30,%ecx
  0x00007f191111bd64: jl     0x00007f191111c381  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bd6a: cmp    $0x39,%ecx
  0x00007f191111bd6d: jle    0x00007f191111bd86  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bd6f: cmp    $0x61,%ecx
  0x00007f191111bd72: jl     0x00007f191111c5f9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bd78: cmp    $0x66,%ecx
  0x00007f191111bd7b: jg     0x00007f191111c6c5  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bd81: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bd84: jmp    0x00007f191111bd89
  0x00007f191111bd86: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)

  0x00007f191111bd89: shl    $0x4,%r10
  0x00007f191111bd8d: movslq %ecx,%rcx
  0x00007f191111bd90: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@140 (line 471)

  0x00007f191111bd93: cmp    $0xe,%r11d
  0x00007f191111bd97: jbe    0x00007f191111c2d9
  0x00007f191111bd9d: cmp    $0x11,%r11d
  0x00007f191111bda1: jbe    0x00007f191111c2d9  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@159 (line 474)

  0x00007f191111bda7: cmp    $0xe,%r11d
  0x00007f191111bdab: jle    0x00007f191111c525  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)

  0x00007f191111bdb1: movzwl 0x2c(%r12,%r9,8),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)

  0x00007f191111bdb7: cmp    $0x30,%edi
  0x00007f191111bdba: jl     0x00007f191111c3a9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111bdc0: cmp    $0x39,%edi
  0x00007f191111bdc3: jle    0x00007f191111bddc  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111bdc5: cmp    $0x61,%edi
  0x00007f191111bdc8: jl     0x00007f191111c621  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111bdce: cmp    $0x66,%edi
  0x00007f191111bdd1: jg     0x00007f191111c6ed  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111bdd7: add    $0xffffffa9,%edi   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111bdda: jmp    0x00007f191111bddf
  0x00007f191111bddc: add    $0xffffffd0,%edi   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111bddf: movslq %edi,%rcx
  0x00007f191111bde2: shl    $0x4,%r10
  0x00007f191111bde6: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 475)

  0x00007f191111bde9: cmp    $0xf,%r11d
  0x00007f191111bded: jle    0x00007f191111c52d  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)

  0x00007f191111bdf3: movzwl 0x2e(%r12,%r9,8),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)

  0x00007f191111bdf9: cmp    $0x30,%edi
  0x00007f191111bdfc: jl     0x00007f191111c3b1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111be02: cmp    $0x39,%edi
  0x00007f191111be05: jle    0x00007f191111be1e  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111be07: cmp    $0x61,%edi
  0x00007f191111be0a: jl     0x00007f191111c629  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111be10: cmp    $0x66,%edi
  0x00007f191111be13: jg     0x00007f191111c6f5  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111be19: add    $0xffffffa9,%edi   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111be1c: jmp    0x00007f191111be21
  0x00007f191111be1e: add    $0xffffffd0,%edi   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111be21: shl    $0x4,%r10
  0x00007f191111be25: movslq %edi,%rcx
  0x00007f191111be28: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 475)

  0x00007f191111be2b: cmp    $0x10,%r11d
  0x00007f191111be2f: jle    0x00007f191111c535  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)

  0x00007f191111be35: movzwl 0x30(%r12,%r9,8),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)

  0x00007f191111be3b: cmp    $0x30,%edi
  0x00007f191111be3e: jl     0x00007f191111c3b9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111be44: cmp    $0x39,%edi
  0x00007f191111be47: jle    0x00007f191111be60  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111be49: cmp    $0x61,%edi
  0x00007f191111be4c: jl     0x00007f191111c631  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111be52: cmp    $0x66,%edi
  0x00007f191111be55: jg     0x00007f191111c6fd  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111be5b: add    $0xffffffa9,%edi   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111be5e: jmp    0x00007f191111be63
  0x00007f191111be60: add    $0xffffffd0,%edi   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111be63: shl    $0x4,%r10
  0x00007f191111be67: movslq %edi,%rcx
  0x00007f191111be6a: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 475)

  0x00007f191111be6d: cmp    $0x11,%r11d
  0x00007f191111be71: jle    0x00007f191111c53d  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)

  0x00007f191111be77: movzwl 0x32(%r12,%r9,8),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)

  0x00007f191111be7d: cmp    $0x30,%edi
  0x00007f191111be80: jl     0x00007f191111c3c1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111be86: cmp    $0x39,%edi
  0x00007f191111be89: jle    0x00007f191111bea2  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111be8b: cmp    $0x61,%edi
  0x00007f191111be8e: jl     0x00007f191111c639  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ;   {no_reloc}
  0x00007f191111be94: cmp    $0x66,%edi
  0x00007f191111be97: jg     0x00007f191111c705  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111be9d: add    $0xffffffa9,%edi   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111bea0: jmp    0x00007f191111bea5
  0x00007f191111bea2: add    $0xffffffd0,%edi   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)

  0x00007f191111bea5: movslq %edi,%rcx
  0x00007f191111bea8: shl    $0x4,%r10
  0x00007f191111beac: or     %rcx,%r10          ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@178 (line 475)

  0x00007f191111beaf: cmp    $0x13,%r11d
  0x00007f191111beb3: jbe    0x00007f191111c2f1
  0x00007f191111beb9: cmp    $0x16,%r11d
  0x00007f191111bebd: jbe    0x00007f191111c2f1  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@197 (line 480)

  0x00007f191111bec3: cmp    $0x13,%r11d
  0x00007f191111bec7: jle    0x00007f191111c569  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)

  0x00007f191111becd: movzwl 0x36(%r12,%r9,8),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)

  0x00007f191111bed3: cmp    $0x30,%edi
  0x00007f191111bed6: jl     0x00007f191111c3e9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bedc: cmp    $0x39,%edi
  0x00007f191111bedf: jle    0x00007f191111bef8  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bee1: cmp    $0x61,%edi
  0x00007f191111bee4: jl     0x00007f191111c661  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111beea: cmp    $0x66,%edi
  0x00007f191111beed: jg     0x00007f191111c72d  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bef3: add    $0xffffffa9,%edi   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bef6: jmp    0x00007f191111befb
  0x00007f191111bef8: add    $0xffffffd0,%edi   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111befb: movslq %edi,%r8           ;*i2l  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@215 (line 481)

  0x00007f191111befe: cmp    $0x14,%r11d
  0x00007f191111bf02: jle    0x00007f191111c571  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)

  0x00007f191111bf08: movzwl 0x38(%r12,%r9,8),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)

  0x00007f191111bf0e: cmp    $0x30,%edi
  0x00007f191111bf11: jl     0x00007f191111c3f1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bf17: cmp    $0x39,%edi
  0x00007f191111bf1a: jle    0x00007f191111bf33  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bf1c: cmp    $0x61,%edi
  0x00007f191111bf1f: jl     0x00007f191111c669  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bf25: cmp    $0x66,%edi
  0x00007f191111bf28: jg     0x00007f191111c735  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bf2e: add    $0xffffffa9,%edi   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bf31: jmp    0x00007f191111bf36
  0x00007f191111bf33: add    $0xffffffd0,%edi   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bf36: shl    $0x4,%r8
  0x00007f191111bf3a: movslq %edi,%rcx
  0x00007f191111bf3d: or     %rcx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 481)

  0x00007f191111bf40: cmp    $0x15,%r11d
  0x00007f191111bf44: jle    0x00007f191111c579  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)

  0x00007f191111bf4a: movzwl 0x3a(%r12,%r9,8),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)

  0x00007f191111bf50: cmp    $0x30,%edi
  0x00007f191111bf53: jl     0x00007f191111c3f9  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bf59: cmp    $0x39,%edi
  0x00007f191111bf5c: jle    0x00007f191111bf75  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bf5e: cmp    $0x61,%edi
  0x00007f191111bf61: jl     0x00007f191111c671  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bf67: cmp    $0x66,%edi
  0x00007f191111bf6a: jg     0x00007f191111c73d  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bf70: add    $0xffffffa9,%edi   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bf73: jmp    0x00007f191111bf78
  0x00007f191111bf75: add    $0xffffffd0,%edi   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bf78: shl    $0x4,%r8
  0x00007f191111bf7c: movslq %edi,%rcx
  0x00007f191111bf7f: or     %rcx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 481)

  0x00007f191111bf82: cmp    $0x16,%r11d
  0x00007f191111bf86: jle    0x00007f191111c581  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)

  0x00007f191111bf8c: movzwl 0x3c(%r12,%r9,8),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)

  0x00007f191111bf92: cmp    $0x30,%edi
  0x00007f191111bf95: jl     0x00007f191111c401  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bf9b: cmp    $0x39,%edi
  0x00007f191111bf9e: jle    0x00007f191111bfb7  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bfa0: cmp    $0x61,%edi
  0x00007f191111bfa3: jl     0x00007f191111c679  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bfa9: cmp    $0x66,%edi
  0x00007f191111bfac: jg     0x00007f191111c745  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bfb2: add    $0xffffffa9,%edi   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bfb5: jmp    0x00007f191111bfba
  0x00007f191111bfb7: add    $0xffffffd0,%edi   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)

  0x00007f191111bfba: shl    $0x4,%r8
  0x00007f191111bfbe: movslq %edi,%rcx
  0x00007f191111bfc1: or     %rcx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@216 (line 481)

  0x00007f191111bfc4: cmp    $0x18,%r11d
  0x00007f191111bfc8: jbe    0x00007f191111c309
  0x00007f191111bfce: cmp    $0x23,%r11d
  0x00007f191111bfd2: jbe    0x00007f191111c309  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@235 (line 484)

  0x00007f191111bfd8: mov    $0x18,%edi
  0x00007f191111bfdd: cmp    $0x18,%r11d
  0x00007f191111bfe1: jle    0x00007f191111c5b1  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)

  0x00007f191111bfe7: movzwl 0x40(%r12,%r9,8),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)

  0x00007f191111bfed: cmp    $0x30,%ecx
  0x00007f191111bff0: jl     0x00007f191111c19a  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111bff6: cmp    $0x39,%ecx
  0x00007f191111bff9: jle    0x00007f191111c012  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111bffb: cmp    $0x61,%ecx
  0x00007f191111bffe: jl     0x00007f191111c1e7  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c004: cmp    $0x66,%ecx
  0x00007f191111c007: jg     0x00007f191111c213  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c00d: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c010: jmp    0x00007f191111c015
  0x00007f191111c012: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c015: movslq %ecx,%r9
  0x00007f191111c018: shl    $0x4,%r8
  0x00007f191111c01c: or     %r9,%r8            ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 485)

  0x00007f191111c01f: mov    $0x24,%r9d
  0x00007f191111c025: cmp    %r9d,%r11d
  0x00007f191111c028: mov    %r11d,%ebx
  0x00007f191111c02b: cmovg  %r9d,%ebx
  0x00007f191111c02f: mov    %ebx,%r9d
  0x00007f191111c032: dec    %r9d
  0x00007f191111c035: cmp    %r9d,%ebx
  0x00007f191111c038: cmovl  %edx,%r9d
  0x00007f191111c03c: mov    $0x19,%edi
  0x00007f191111c041: cmp    $0x19,%r9d
  0x00007f191111c045: jg     0x00007f191111c119
  0x00007f191111c04b: cmp    $0x24,%edi
  0x00007f191111c04e: jge    0x00007f191111c097  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@235 (line 484)

  0x00007f191111c050: cmp    %r11d,%edi
  0x00007f191111c053: jge    0x00007f191111c5b1  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)

  0x00007f191111c059: movzwl 0x10(%rax,%rdi,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)

  0x00007f191111c05e: cmp    $0x30,%ecx
  0x00007f191111c061: jl     0x00007f191111c19a  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c067: cmp    $0x39,%ecx
  0x00007f191111c06a: jle    0x00007f191111c083  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c06c: cmp    $0x61,%ecx
  0x00007f191111c06f: jl     0x00007f191111c1e7  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c075: cmp    $0x66,%ecx
  0x00007f191111c078: jg     0x00007f191111c213  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c07e: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c081: jmp    0x00007f191111c086
  0x00007f191111c083: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c086: movslq %ecx,%r9
  0x00007f191111c089: shl    $0x4,%r8
  0x00007f191111c08d: or     %r9,%r8            ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 485)

  0x00007f191111c090: inc    %edi               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@256 (line 483)

  0x00007f191111c092: cmp    $0x24,%edi
  0x00007f191111c095: jl     0x00007f191111c050  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@263 (line 483)

  0x00007f191111c097: mov    0x60(%r15),%rax
  0x00007f191111c09b: mov    %rax,%r11
  0x00007f191111c09e: add    $0x20,%r11
  0x00007f191111c0a2: cmp    0x70(%r15),%r11
  0x00007f191111c0a6: jae    0x00007f191111c172
  0x00007f191111c0ac: mov    %r11,0x60(%r15)
  0x00007f191111c0b0: prefetchw 0xc0(%r11)
  0x00007f191111c0b8: mov    $0xf800869e,%r9d   ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007f191111c0be: movabs $0x0,%r11
  0x00007f191111c0c8: lea    (%r11,%r9,8),%r11
  0x00007f191111c0cc: mov    0xa8(%r11),%r11
  0x00007f191111c0d3: mov    %r11,(%rax)
  0x00007f191111c0d6: movl   $0xf800869e,0x8(%rax)  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007f191111c0dd: mov    %r12d,0xc(%rax)
  0x00007f191111c0e1: mov    %r12,0x10(%rax)
  0x00007f191111c0e5: mov    %r12,0x18(%rax)    ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@266 (line 488)

  0x00007f191111c0e9: mov    %r10,0x10(%rax)    ;*putfield mostSigBits
                                                ; - java.util.UUID::&lt;init&gt;@6 (line 129)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@272 (line 488)

  0x00007f191111c0ed: mov    %r8,0x18(%rax)     ;*synchronization entry
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@-1 (line 455)

  0x00007f191111c0f1: add    $0x40,%rsp
  0x00007f191111c0f5: pop    %rbp
  0x00007f191111c0f6: test   %eax,0x16377f04(%rip)        # 0x00007f1927494000
                                                ;   {poll_return}
  0x00007f191111c0fc: retq   
  0x00007f191111c0fd: data16 xchg %ax,%ax
  0x00007f191111c100: add    $0xffffffd0,%ecx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c103: movslq %ecx,%rcx
  0x00007f191111c106: shl    $0x4,%r8
  0x00007f191111c10a: or     %rcx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 485)

  0x00007f191111c10d: add    $0x2,%edi          ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@256 (line 483)

  0x00007f191111c110: cmp    %r9d,%edi
  0x00007f191111c113: jge    0x00007f191111c04b  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@235 (line 484)

  0x00007f191111c119: movzwl 0x10(%rax,%rdi,2),%edx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)

  0x00007f191111c11e: cmp    $0x30,%edx
  0x00007f191111c121: jl     0x00007f191111c194  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c123: cmp    $0x39,%edx
  0x00007f191111c126: jle    0x00007f191111c13f  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c128: cmp    $0x61,%edx
  0x00007f191111c12b: jl     0x00007f191111c1e1  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c131: cmp    $0x66,%edx
  0x00007f191111c134: jg     0x00007f191111c20d  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c13a: add    $0xffffffa9,%edx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c13d: jmp    0x00007f191111c142
  0x00007f191111c13f: add    $0xffffffd0,%edx   ;*invokestatic hexDigit
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c142: movzwl 0x12(%rax,%rdi,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)

  0x00007f191111c147: shl    $0x4,%r8
  0x00007f191111c14b: movslq %edx,%rbx
  0x00007f191111c14e: or     %rbx,%r8           ;*lor  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@254 (line 485)

  0x00007f191111c151: cmp    $0x30,%ecx
  0x00007f191111c154: jl     0x00007f191111c198  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c156: cmp    $0x39,%ecx
  0x00007f191111c159: jle    0x00007f191111c100  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@9 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c15b: cmp    $0x61,%ecx
  0x00007f191111c15e: jl     0x00007f191111c1e5  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c164: cmp    $0x66,%ecx
  0x00007f191111c167: jg     0x00007f191111c211  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c16d: add    $0xffffffa9,%ecx   ;*isub
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@32 (line 503)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)

  0x00007f191111c170: jmp    0x00007f191111c103
  0x00007f191111c172: mov    %r10,(%rsp)
  0x00007f191111c176: mov    %r8,%rbp
  0x00007f191111c179: movabs $0x7c00434f0,%rsi  ;   {metadata(&apos;java/util/UUID&apos;)}
  0x00007f191111c183: callq  0x00007f191106c6a0  ; OopMap{off=1800}
                                                ;*new  ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@266 (line 488)
                                                ;   {runtime_call}
  0x00007f191111c188: mov    %rbp,%r8
  0x00007f191111c18b: mov    (%rsp),%r10
  0x00007f191111c18f: jmpq   0x00007f191111c0e9
  0x00007f191111c194: mov    %edx,%ecx
  0x00007f191111c196: jmp    0x00007f191111c19a
  0x00007f191111c198: inc    %edi               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@256 (line 483)

  0x00007f191111c19a: mov    $0xffffff65,%esi
  0x00007f191111c19f: mov    %r10,%rbp
  0x00007f191111c1a2: mov    %r8,(%rsp)
  0x00007f191111c1a6: mov    %edi,0x8(%rsp)
  0x00007f191111c1aa: mov    %ecx,0x10(%rsp)
  0x00007f191111c1ae: mov    %r13,0x18(%rsp)
  0x00007f191111c1b3: callq  0x00007f19110051a0  ; OopMap{[24]=Oop off=1848}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ;   {runtime_call}
  0x00007f191111c1b8: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ;   {runtime_call}
  0x00007f191111c1bd: mov    %ecx,%ebx
  0x00007f191111c1bf: jmp    0x00007f191111c1c3
  0x00007f191111c1c1: inc    %edi               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 465)

  0x00007f191111c1c3: mov    $0xffffff65,%esi
  0x00007f191111c1c8: mov    %r10,%rbp
  0x00007f191111c1cb: mov    %edi,(%rsp)
  0x00007f191111c1ce: mov    %r13,0x8(%rsp)
  0x00007f191111c1d3: mov    %ebx,0x10(%rsp)
  0x00007f191111c1d7: callq  0x00007f19110051a0  ; OopMap{[8]=Oop off=1884}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ;   {runtime_call}
  0x00007f191111c1dc: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ;   {runtime_call}
  0x00007f191111c1e1: mov    %edx,%ecx
  0x00007f191111c1e3: jmp    0x00007f191111c1e7
  0x00007f191111c1e5: inc    %edi               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@256 (line 483)

  0x00007f191111c1e7: mov    $0xffffff65,%esi
  0x00007f191111c1ec: mov    %r10,%rbp
  0x00007f191111c1ef: mov    %r8,(%rsp)
  0x00007f191111c1f3: mov    %edi,0x8(%rsp)
  0x00007f191111c1f7: mov    %ecx,0x10(%rsp)
  0x00007f191111c1fb: mov    %r13,0x18(%rsp)
  0x00007f191111c200: data16 xchg %ax,%ax
  0x00007f191111c203: callq  0x00007f19110051a0  ; OopMap{[24]=Oop off=1928}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ;   {runtime_call}
  0x00007f191111c208: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ;   {runtime_call}
  0x00007f191111c20d: mov    %edx,%ecx
  0x00007f191111c20f: jmp    0x00007f191111c213
  0x00007f191111c211: inc    %edi               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@256 (line 483)

  0x00007f191111c213: mov    $0xffffff65,%esi
  0x00007f191111c218: mov    %r10,%rbp
  0x00007f191111c21b: mov    %r8,(%rsp)
  0x00007f191111c21f: mov    %edi,0x8(%rsp)
  0x00007f191111c223: mov    %ecx,0x10(%rsp)
  0x00007f191111c227: mov    %r13,0x18(%rsp)
  0x00007f191111c22c: data16 xchg %ax,%ax
  0x00007f191111c22f: callq  0x00007f19110051a0  ; OopMap{[24]=Oop off=1972}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ;   {runtime_call}
  0x00007f191111c234: callq  0x00007f192619fa20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@243 (line 484)
                                                ;   {runtime_call}
  0x00007f191111c239: mov    %ecx,%ebx
  0x00007f191111c23b: jmp    0x00007f191111c23f
  0x00007f191111c23d: inc    %edi               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 465)

  0x00007f191111c23f: mov    $0xffffff65,%esi
  0x00007f191111c244: mov    %r10,%rbp
  0x00007f191111c247: mov    %edi,(%rsp)
  0x00007f191111c24a: mov    %r13,0x8(%rsp)
  0x00007f191111c24f: mov    %ebx,0x10(%rsp)
  0x00007f191111c253: callq  0x00007f19110051a0  ; OopMap{[8]=Oop off=2008}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ;   {runtime_call}
  0x00007f191111c258: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ;   {runtime_call}
  0x00007f191111c25d: mov    %ecx,%ebx
  0x00007f191111c25f: jmp    0x00007f191111c263
  0x00007f191111c261: inc    %edi               ;*iinc
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@104 (line 465)

  0x00007f191111c263: mov    $0xffffff65,%esi
  0x00007f191111c268: mov    %r10,%rbp
  0x00007f191111c26b: mov    %edi,(%rsp)
  0x00007f191111c26e: mov    %r13,0x8(%rsp)
  0x00007f191111c273: mov    %ebx,0x10(%rsp)
  0x00007f191111c277: callq  0x00007f19110051a0  ; OopMap{[8]=Oop off=2044}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ;   {runtime_call}
  0x00007f191111c27c: callq  0x00007f192619fa20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@91 (line 466)
                                                ;   {runtime_call}
  0x00007f191111c281: mov    $0xffffffde,%esi
  0x00007f191111c286: mov    %r13,%rbp
  0x00007f191111c289: xchg   %ax,%ax
  0x00007f191111c28b: callq  0x00007f19110051a0  ; OopMap{rbp=Oop off=2064}
                                                ;*invokeinterface length
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ;   {runtime_call}
  0x00007f191111c290: callq  0x00007f192619fa20  ;*invokeinterface length
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ;   {runtime_call}
  0x00007f191111c295: mov    $0xffffffe4,%esi
  0x00007f191111c29a: mov    %r13,%rbp
  0x00007f191111c29d: mov    %r9d,(%rsp)
  0x00007f191111c2a1: xchg   %ax,%ax
  0x00007f191111c2a3: callq  0x00007f19110051a0  ; OopMap{rbp=Oop [0]=NarrowOop off=2088}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@19 (line 458)
                                                ;   {runtime_call}
  0x00007f191111c2a8: callq  0x00007f192619fa20  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@19 (line 458)
                                                ;   {runtime_call}
  0x00007f191111c2ad: mov    $0xffffff86,%esi
  0x00007f191111c2b2: mov    %r13,%rbp
  0x00007f191111c2b5: xchg   %ax,%ax
  0x00007f191111c2b7: callq  0x00007f19110051a0  ; OopMap{rbp=Oop off=2108}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@83 (line 466)
                                                ;   {runtime_call}
  0x00007f191111c2bc: callq  0x00007f192619fa20  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@83 (line 466)
                                                ;   {runtime_call}
  0x00007f191111c2c1: mov    $0xffffff86,%esi
  0x00007f191111c2c6: mov    %r10,%rbp
  0x00007f191111c2c9: mov    %r13,(%rsp)
  0x00007f191111c2cd: xchg   %ax,%ax
  0x00007f191111c2cf: callq  0x00007f19110051a0  ; OopMap{[0]=Oop off=2132}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@121 (line 470)
                                                ;   {runtime_call}
  0x00007f191111c2d4: callq  0x00007f192619fa20  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@121 (line 470)
                                                ;   {runtime_call}
  0x00007f191111c2d9: mov    $0xffffff86,%esi
  0x00007f191111c2de: mov    %r10,%rbp
  0x00007f191111c2e1: mov    %r13,(%rsp)
  0x00007f191111c2e5: xchg   %ax,%ax
  0x00007f191111c2e7: callq  0x00007f19110051a0  ; OopMap{[0]=Oop off=2156}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@159 (line 474)
                                                ;   {runtime_call}
  0x00007f191111c2ec: callq  0x00007f192619fa20  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@159 (line 474)
                                                ;   {runtime_call}
  0x00007f191111c2f1: mov    $0xffffff86,%esi
  0x00007f191111c2f6: mov    %r10,%rbp
  0x00007f191111c2f9: mov    %r13,(%rsp)
  0x00007f191111c2fd: xchg   %ax,%ax
  0x00007f191111c2ff: callq  0x00007f19110051a0  ; OopMap{[0]=Oop off=2180}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@197 (line 480)
                                                ;   {runtime_call}
  0x00007f191111c304: callq  0x00007f192619fa20  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@197 (line 480)
                                                ;   {runtime_call}
  0x00007f191111c309: mov    $0xffffff86,%esi
  0x00007f191111c30e: mov    %r10,%rbp
  0x00007f191111c311: mov    %r8,(%rsp)
  0x00007f191111c315: mov    %r13,0x8(%rsp)
  0x00007f191111c31a: nop
  0x00007f191111c31b: callq  0x00007f19110051a0  ; OopMap{[8]=Oop off=2208}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@235 (line 484)
                                                ;   {runtime_call}
  0x00007f191111c320: callq  0x00007f192619fa20  ;*aload_0
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@235 (line 484)
                                                ;   {runtime_call}
  0x00007f191111c325: mov    $0xffffff65,%esi
  0x00007f191111c32a: mov    %r13,(%rsp)
  0x00007f191111c32e: nop
  0x00007f191111c32f: callq  0x00007f19110051a0  ; OopMap{[0]=Oop off=2228}
                                                ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@26 (line 458)
                                                ;   {runtime_call}
  0x00007f191111c334: callq  0x00007f192619fa20  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@26 (line 458)
                                                ;   {runtime_call}
  0x00007f191111c339: mov    $0xffffff65,%esi
  0x00007f191111c33e: mov    %r13,(%rsp)
  0x00007f191111c342: nop
  0x00007f191111c343: callq  0x00007f19110051a0  ; OopMap{[0]=Oop off=2248}
                                                ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@39 (line 458)
                                                ;   {runtime_call}
  0x00007f191111c348: callq  0x00007f192619fa20  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@39 (line 458)
                                                ;   {runtime_call}
  0x00007f191111c34d: mov    $0xffffff65,%esi
  0x00007f191111c352: mov    %r13,(%rsp)
  0x00007f191111c356: nop
  0x00007f191111c357: callq  0x00007f19110051a0  ; OopMap{[0]=Oop off=2268}
                                                ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@52 (line 458)
                                                ;   {runtime_call}
  0x00007f191111c35c: callq  0x00007f192619fa20  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@52 (line 458)
                                                ;   {runtime_call}
  0x00007f191111c361: xor    %r10d,%r10d
  0x00007f191111c364: jmpq   0x00007f191111c1c3
  0x00007f191111c369: mov    $0x9,%r8d
  0x00007f191111c36f: jmp    0x00007f191111c387
  0x00007f191111c371: mov    $0xa,%r8d
  0x00007f191111c377: jmp    0x00007f191111c387
  0x00007f191111c379: mov    $0xb,%r8d
  0x00007f191111c37f: jmp    0x00007f191111c387
  0x00007f191111c381: mov    $0xc,%r8d
  0x00007f191111c387: mov    $0xffffff65,%esi
  0x00007f191111c38c: mov    %r10,%rbp
  0x00007f191111c38f: mov    %r13,(%rsp)
  0x00007f191111c393: mov    %r8d,0x8(%rsp)
  0x00007f191111c398: mov    %ecx,0x10(%rsp)
  0x00007f191111c39c: data16 xchg %ax,%ax
  0x00007f191111c39f: callq  0x00007f19110051a0  ; OopMap{[0]=Oop off=2340}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ;   {runtime_call}
  0x00007f191111c3a4: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ;   {runtime_call}
  0x00007f191111c3a9: mov    $0xe,%r8d
  0x00007f191111c3af: jmp    0x00007f191111c3c7
  0x00007f191111c3b1: mov    $0xf,%r8d
  0x00007f191111c3b7: jmp    0x00007f191111c3c7
  0x00007f191111c3b9: mov    $0x10,%r8d
  0x00007f191111c3bf: jmp    0x00007f191111c3c7
  0x00007f191111c3c1: mov    $0x11,%r8d
  0x00007f191111c3c7: mov    $0xffffff65,%esi
  0x00007f191111c3cc: mov    %r10,%rbp
  0x00007f191111c3cf: mov    %r13,(%rsp)
  0x00007f191111c3d3: mov    %r8d,0x8(%rsp)
  0x00007f191111c3d8: mov    %edi,0x10(%rsp)
  0x00007f191111c3dc: data16 xchg %ax,%ax
  0x00007f191111c3df: callq  0x00007f19110051a0  ; OopMap{[0]=Oop off=2404}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ;   {runtime_call}
  0x00007f191111c3e4: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ;   {runtime_call}
  0x00007f191111c3e9: mov    $0x13,%r11d
  0x00007f191111c3ef: jmp    0x00007f191111c407
  0x00007f191111c3f1: mov    $0x14,%r11d
  0x00007f191111c3f7: jmp    0x00007f191111c407
  0x00007f191111c3f9: mov    $0x15,%r11d
  0x00007f191111c3ff: jmp    0x00007f191111c407
  0x00007f191111c401: mov    $0x16,%r11d
  0x00007f191111c407: mov    $0xffffff65,%esi
  0x00007f191111c40c: mov    %r10,%rbp
  0x00007f191111c40f: mov    %r8,(%rsp)
  0x00007f191111c413: mov    %r13,0x8(%rsp)
  0x00007f191111c418: mov    %r11d,0x10(%rsp)
  0x00007f191111c41d: mov    %edi,0x18(%rsp)
  0x00007f191111c421: xchg   %ax,%ax
  0x00007f191111c423: callq  0x00007f19110051a0  ; OopMap{[8]=Oop off=2472}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ;   {runtime_call}
  0x00007f191111c428: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@3 (line 496)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ;   {runtime_call}
  0x00007f191111c42d: mov    $0xffffff65,%esi
  0x00007f191111c432: mov    %r13,%rbp
  0x00007f191111c435: mov    %r11d,(%rsp)
  0x00007f191111c439: xchg   %ax,%ax
  0x00007f191111c43b: callq  0x00007f19110051a0  ; OopMap{rbp=Oop off=2496}
                                                ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@8 (line 455)
                                                ;   {runtime_call}
  0x00007f191111c440: callq  0x00007f192619fa20  ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@8 (line 455)
                                                ;   {runtime_call}
  0x00007f191111c445: mov    $0xffffff65,%esi
  0x00007f191111c44a: mov    %r13,(%rsp)
  0x00007f191111c44e: mov    %r11d,0x8(%rsp)
  0x00007f191111c453: callq  0x00007f19110051a0  ; OopMap{[0]=Oop off=2520}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@19 (line 458)
                                                ;   {runtime_call}
  0x00007f191111c458: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@19 (line 458)
                                                ;   {runtime_call}
  0x00007f191111c45d: mov    $0xffffff65,%esi
  0x00007f191111c462: mov    %r13,(%rsp)
  0x00007f191111c466: mov    %r11d,0x8(%rsp)
  0x00007f191111c46b: callq  0x00007f19110051a0  ; OopMap{[0]=Oop off=2544}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@32 (line 458)
                                                ;   {runtime_call}
  0x00007f191111c470: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@32 (line 458)
                                                ;   {runtime_call}
  0x00007f191111c475: mov    $0xffffff65,%esi
  0x00007f191111c47a: mov    %r13,(%rsp)
  0x00007f191111c47e: mov    %r11d,0x8(%rsp)
  0x00007f191111c483: callq  0x00007f19110051a0  ; OopMap{[0]=Oop off=2568}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@45 (line 458)
                                                ;   {runtime_call}
  0x00007f191111c488: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@45 (line 458)
                                                ;   {runtime_call}
  0x00007f191111c48d: mov    $0xffffff65,%esi
  0x00007f191111c492: mov    %r13,(%rsp)
  0x00007f191111c496: mov    %r11d,0x8(%rsp)
  0x00007f191111c49b: callq  0x00007f19110051a0  ; OopMap{[0]=Oop off=2592}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@58 (line 458)
                                                ;   {runtime_call}
  0x00007f191111c4a0: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@58 (line 458)
                                                ;   {runtime_call}
  0x00007f191111c4a5: mov    $0xffffff65,%esi
  0x00007f191111c4aa: mov    %r13,(%rsp)
  0x00007f191111c4ae: nop
  0x00007f191111c4af: callq  0x00007f19110051a0  ; OopMap{[0]=Oop off=2612}
                                                ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@65 (line 458)
                                                ;   {runtime_call}
  0x00007f191111c4b4: callq  0x00007f192619fa20  ;*if_icmpeq
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@65 (line 458)
                                                ;   {runtime_call}
  0x00007f191111c4b9: xor    %r10d,%r10d
  0x00007f191111c4bc: mov    $0xffffff65,%esi
  0x00007f191111c4c1: mov    %r10,%rbp
  0x00007f191111c4c4: mov    %edi,0x4(%rsp)
  0x00007f191111c4c8: mov    %edi,0x8(%rsp)
  0x00007f191111c4cc: mov    %r13,0x18(%rsp)
  0x00007f191111c4d1: mov    %r11d,0xc(%rsp)
  0x00007f191111c4d6: nop
  0x00007f191111c4d7: callq  0x00007f19110051a0  ; OopMap{[24]=Oop off=2652}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)
                                                ;   {runtime_call}
  0x00007f191111c4dc: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@86 (line 466)
                                                ;   {runtime_call}
  0x00007f191111c4e1: mov    $0x9,%r8d
  0x00007f191111c4e7: jmp    0x00007f191111c4ff
  0x00007f191111c4e9: mov    $0xa,%r8d
  0x00007f191111c4ef: jmp    0x00007f191111c4ff
  0x00007f191111c4f1: mov    $0xb,%r8d
  0x00007f191111c4f7: jmp    0x00007f191111c4ff
  0x00007f191111c4f9: mov    $0xc,%r8d
  0x00007f191111c4ff: mov    $0xffffff65,%esi
  0x00007f191111c504: mov    %r10,%rbp
  0x00007f191111c507: mov    %r13,0x10(%rsp)
  0x00007f191111c50c: mov    %r8d,0xc(%rsp)
  0x00007f191111c511: mov    %r8d,0x18(%rsp)
  0x00007f191111c516: mov    %r11d,0x1c(%rsp)
  0x00007f191111c51b: callq  0x00007f19110051a0  ; OopMap{[16]=Oop off=2720}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)
                                                ;   {runtime_call}
  0x00007f191111c520: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@124 (line 470)
                                                ;   {runtime_call}
  0x00007f191111c525: mov    $0xe,%r8d
  0x00007f191111c52b: jmp    0x00007f191111c543
  0x00007f191111c52d: mov    $0xf,%r8d
  0x00007f191111c533: jmp    0x00007f191111c543
  0x00007f191111c535: mov    $0x10,%r8d
  0x00007f191111c53b: jmp    0x00007f191111c543
  0x00007f191111c53d: mov    $0x11,%r8d
  0x00007f191111c543: mov    $0xffffff65,%esi
  0x00007f191111c548: mov    %r10,%rbp
  0x00007f191111c54b: mov    %r13,0x10(%rsp)
  0x00007f191111c550: mov    %r8d,0xc(%rsp)
  0x00007f191111c555: mov    %r8d,0x18(%rsp)
  0x00007f191111c55a: mov    %r11d,0x1c(%rsp)
  0x00007f191111c55f: callq  0x00007f19110051a0  ; OopMap{[16]=Oop off=2788}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)
                                                ;   {runtime_call}
  0x00007f191111c564: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@162 (line 474)
                                                ;   {runtime_call}
  0x00007f191111c569: mov    $0x13,%r9d
  0x00007f191111c56f: jmp    0x00007f191111c587
  0x00007f191111c571: mov    $0x14,%r9d
  0x00007f191111c577: jmp    0x00007f191111c587
  0x00007f191111c579: mov    $0x15,%r9d
  0x00007f191111c57f: jmp    0x00007f191111c587
  0x00007f191111c581: mov    $0x16,%r9d
  0x00007f191111c587: mov    $0xffffff65,%esi
  0x00007f191111c58c: mov    %r10,%rbp
  0x00007f191111c58f: mov    %r8,(%rsp)
  0x00007f191111c593: mov    %r13,0x18(%rsp)
  0x00007f191111c598: mov    %r9d,0x14(%rsp)
  0x00007f191111c59d: mov    %r9d,0x20(%rsp)
  0x00007f191111c5a2: mov    %r11d,0x24(%rsp)
  0x00007f191111c5a7: callq  0x00007f19110051a0  ; OopMap{[24]=Oop off=2860}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)
                                                ;   {runtime_call}
  0x00007f191111c5ac: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@200 (line 480)
                                                ;   {runtime_call}
  0x00007f191111c5b1: mov    $0xffffff65,%esi
  0x00007f191111c5b6: mov    %r10,%rbp
  0x00007f191111c5b9: mov    %r8,(%rsp)
  0x00007f191111c5bd: mov    %edi,0xc(%rsp)
  0x00007f191111c5c1: mov    %edi,0x10(%rsp)
  0x00007f191111c5c5: mov    %r13,0x20(%rsp)
  0x00007f191111c5ca: mov    %r11d,0x14(%rsp)
  0x00007f191111c5cf: callq  0x00007f19110051a0  ; OopMap{[32]=Oop off=2900}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)
                                                ;   {runtime_call}
  0x00007f191111c5d4: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@238 (line 484)
                                                ;   {runtime_call}
  0x00007f191111c5d9: xor    %r10d,%r10d
  0x00007f191111c5dc: jmpq   0x00007f191111c23f
  0x00007f191111c5e1: mov    $0x9,%r11d
  0x00007f191111c5e7: jmp    0x00007f191111c5ff
  0x00007f191111c5e9: mov    $0xa,%r11d
  0x00007f191111c5ef: jmp    0x00007f191111c5ff
  0x00007f191111c5f1: mov    $0xb,%r11d
  0x00007f191111c5f7: jmp    0x00007f191111c5ff
  0x00007f191111c5f9: mov    $0xc,%r11d
  0x00007f191111c5ff: mov    $0xffffff65,%esi
  0x00007f191111c604: mov    %r10,%rbp
  0x00007f191111c607: mov    %r13,(%rsp)
  0x00007f191111c60b: mov    %r11d,0x8(%rsp)
  0x00007f191111c610: mov    %ecx,0x10(%rsp)
  0x00007f191111c614: data16 xchg %ax,%ax
  0x00007f191111c617: callq  0x00007f19110051a0  ; OopMap{[0]=Oop off=2972}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ;   {runtime_call}
  0x00007f191111c61c: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ;   {runtime_call}
  0x00007f191111c621: mov    $0xe,%r11d
  0x00007f191111c627: jmp    0x00007f191111c63f
  0x00007f191111c629: mov    $0xf,%r11d
  0x00007f191111c62f: jmp    0x00007f191111c63f
  0x00007f191111c631: mov    $0x10,%r11d
  0x00007f191111c637: jmp    0x00007f191111c63f
  0x00007f191111c639: mov    $0x11,%r11d
  0x00007f191111c63f: mov    $0xffffff65,%esi
  0x00007f191111c644: mov    %r10,%rbp
  0x00007f191111c647: mov    %r13,(%rsp)
  0x00007f191111c64b: mov    %r11d,0x8(%rsp)
  0x00007f191111c650: mov    %edi,0x10(%rsp)
  0x00007f191111c654: data16 xchg %ax,%ax
  0x00007f191111c657: callq  0x00007f19110051a0  ; OopMap{[0]=Oop off=3036}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ;   {runtime_call}
  0x00007f191111c65c: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ;   {runtime_call}
  0x00007f191111c661: mov    $0x13,%r11d
  0x00007f191111c667: jmp    0x00007f191111c67f
  0x00007f191111c669: mov    $0x14,%r11d
  0x00007f191111c66f: jmp    0x00007f191111c67f
  0x00007f191111c671: mov    $0x15,%r11d
  0x00007f191111c677: jmp    0x00007f191111c67f
  0x00007f191111c679: mov    $0x16,%r11d
  0x00007f191111c67f: mov    $0xffffff65,%esi
  0x00007f191111c684: mov    %r10,%rbp
  0x00007f191111c687: mov    %r8,(%rsp)
  0x00007f191111c68b: mov    %r13,0x8(%rsp)
  0x00007f191111c690: mov    %r11d,0x10(%rsp)
  0x00007f191111c695: mov    %edi,0x18(%rsp)
  0x00007f191111c699: xchg   %ax,%ax
  0x00007f191111c69b: callq  0x00007f19110051a0  ; OopMap{[8]=Oop off=3104}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ;   {runtime_call}
  0x00007f191111c6a0: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@20 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ;   {runtime_call}
  0x00007f191111c6a5: xor    %r10d,%r10d
  0x00007f191111c6a8: jmpq   0x00007f191111c263
  0x00007f191111c6ad: mov    $0x9,%r8d
  0x00007f191111c6b3: jmp    0x00007f191111c6cb
  0x00007f191111c6b5: mov    $0xa,%r8d
  0x00007f191111c6bb: jmp    0x00007f191111c6cb
  0x00007f191111c6bd: mov    $0xb,%r8d
  0x00007f191111c6c3: jmp    0x00007f191111c6cb
  0x00007f191111c6c5: mov    $0xc,%r8d
  0x00007f191111c6cb: mov    $0xffffff65,%esi
  0x00007f191111c6d0: mov    %r10,%rbp
  0x00007f191111c6d3: mov    %r13,(%rsp)
  0x00007f191111c6d7: mov    %r8d,0x8(%rsp)
  0x00007f191111c6dc: mov    %ecx,0x10(%rsp)
  0x00007f191111c6e0: data16 xchg %ax,%ax
  0x00007f191111c6e3: callq  0x00007f19110051a0  ; OopMap{[0]=Oop off=3176}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ;   {runtime_call}
  0x00007f191111c6e8: callq  0x00007f192619fa20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@129 (line 470)
                                                ;   {runtime_call}
  0x00007f191111c6ed: mov    $0xe,%r8d
  0x00007f191111c6f3: jmp    0x00007f191111c70b
  0x00007f191111c6f5: mov    $0xf,%r8d
  0x00007f191111c6fb: jmp    0x00007f191111c70b
  0x00007f191111c6fd: mov    $0x10,%r8d
  0x00007f191111c703: jmp    0x00007f191111c70b
  0x00007f191111c705: mov    $0x11,%r8d
  0x00007f191111c70b: mov    $0xffffff65,%esi
  0x00007f191111c710: mov    %r10,%rbp
  0x00007f191111c713: mov    %r13,(%rsp)
  0x00007f191111c717: mov    %r8d,0x8(%rsp)
  0x00007f191111c71c: mov    %edi,0x10(%rsp)
  0x00007f191111c720: data16 xchg %ax,%ax
  0x00007f191111c723: callq  0x00007f19110051a0  ; OopMap{[0]=Oop off=3240}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ;   {runtime_call}
  0x00007f191111c728: callq  0x00007f192619fa20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@167 (line 474)
                                                ;   {runtime_call}
  0x00007f191111c72d: mov    $0x13,%r11d
  0x00007f191111c733: jmp    0x00007f191111c74b
  0x00007f191111c735: mov    $0x14,%r11d
  0x00007f191111c73b: jmp    0x00007f191111c74b
  0x00007f191111c73d: mov    $0x15,%r11d
  0x00007f191111c743: jmp    0x00007f191111c74b
  0x00007f191111c745: mov    $0x16,%r11d
  0x00007f191111c74b: mov    $0xffffff65,%esi
  0x00007f191111c750: mov    %r10,%rbp
  0x00007f191111c753: mov    %r8,(%rsp)
  0x00007f191111c757: mov    %r13,0x8(%rsp)
  0x00007f191111c75c: mov    %r11d,0x10(%rsp)
  0x00007f191111c761: mov    %edi,0x18(%rsp)
  0x00007f191111c765: xchg   %ax,%ax
  0x00007f191111c767: callq  0x00007f19110051a0  ; OopMap{[8]=Oop off=3308}
                                                ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ;   {runtime_call}
  0x00007f191111c76c: callq  0x00007f192619fa20  ;*if_icmpgt
                                                ; - com.github.marschall.charsequences.CharSequences::hexDigit@26 (line 499)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@205 (line 480)
                                                ;   {runtime_call}
  0x00007f191111c771: mov    $0xfffffff6,%esi
  0x00007f191111c776: nop
  0x00007f191111c777: callq  0x00007f19110051a0  ; OopMap{off=3324}
                                                ;*invokeinterface length
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ;   {runtime_call}
  0x00007f191111c77c: callq  0x00007f192619fa20  ;*invokeinterface length
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ;   {runtime_call}
  0x00007f191111c781: mov    $0xfffffff6,%esi
  0x00007f191111c786: nop
  0x00007f191111c787: callq  0x00007f19110051a0  ; OopMap{off=3340}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@1 (line 455)
                                                ;   {runtime_call}
  0x00007f191111c78c: callq  0x00007f192619fa20  ;*new
                                                ; - com.github.marschall.charsequences.CharSequences::uuidFromCharSequence@266 (line 488)
                                                ;   {runtime_call}
  0x00007f191111c791: mov    %rax,%rsi
  0x00007f191111c794: add    $0x40,%rsp
  0x00007f191111c798: pop    %rbp
  0x00007f191111c799: jmpq   0x00007f191106f4e0  ;   {runtime_call}
  0x00007f191111c79e: hlt    
  0x00007f191111c79f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f191111c7a0: jmpq   0x00007f191106c760  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f191111c7a5: callq  0x00007f191111c7aa
  0x00007f191111c7aa: subq   $0x5,(%rsp)
  0x00007f191111c7af: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f191111c7b4: hlt    
  0x00007f191111c7b5: hlt    
  0x00007f191111c7b6: hlt    
  0x00007f191111c7b7: hlt    
<nmethod compile_id='22' compiler='C2' level='4' entry='0x00007f191111ba80' size='10304' address='0x00007f191111b890' relocation_offset='296' insts_offset='496' stub_offset='3856' scopes_data_offset='3944' scopes_pcs_offset='5528' dependencies_offset='10248' handler_table_offset='10256' nul_chk_table_offset='10280' oops_offset='3880' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='276' count='60415' backedge_count='2234080' iicount='60415' stamp='0.233'/>
<make_not_entrant thread='139745424463616' compile_id='17' compiler='C1' level='3' stamp='0.233'/>
<writer thread='139746009892608'/>
<task_queued compile_id='25' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='92602' iicount='1' level='3' stamp='0.233' comment='tiered' hot_count='1'/>
<writer thread='139745421305600'/>
Decoding compiled method 0x00007f191111b050:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007f191111b200: mov    0x8(%rsi),%r10d
  0x00007f191111b204: shl    $0x3,%r10
  0x00007f191111b208: cmp    %rax,%r10
  0x00007f191111b20b: jne    0x00007f1911045e20  ;   {runtime_call}
  0x00007f191111b211: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f191111b21c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f191111b220: mov    %eax,-0x14000(%rsp)
  0x00007f191111b227: push   %rbp
  0x00007f191111b228: sub    $0x40,%rsp
  0x00007f191111b22c: mov    %rsi,0x30(%rsp)
  0x00007f191111b231: movabs $0x7f190cf5c8a8,%rdi  ;   {metadata(method data for {method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f191111b23b: mov    0xdc(%rdi),%ebx
  0x00007f191111b241: add    $0x8,%ebx
  0x00007f191111b244: mov    %ebx,0xdc(%rdi)
  0x00007f191111b24a: movabs $0x7f190cf59370,%rdi  ;   {metadata({method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f191111b254: and    $0x1ff8,%ebx
  0x00007f191111b25a: cmp    $0x0,%ebx
  0x00007f191111b25d: je     0x00007f191111b4d7  ;*aload_0
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@0 (line 9)

  0x00007f191111b263: mov    %rsi,%rdi
  0x00007f191111b266: movabs $0x7f190cf5c8a8,%rbx  ;   {metadata(method data for {method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f191111b270: addq   $0x1,0x108(%rbx)
  0x00007f191111b278: movabs $0x7f190cccf108,%rdi  ;   {metadata(method data for {method} {0x00007f190cb59480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f191111b282: mov    0xdc(%rdi),%ebx
  0x00007f191111b288: add    $0x8,%ebx
  0x00007f191111b28b: mov    %ebx,0xdc(%rdi)
  0x00007f191111b291: movabs $0x7f190cb59480,%rdi  ;   {metadata({method} {0x00007f190cb59480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007f191111b29b: and    $0x7ffff8,%ebx
  0x00007f191111b2a1: cmp    $0x0,%ebx
  0x00007f191111b2a4: je     0x00007f191111b4ee
  0x00007f191111b2aa: movabs $0x7f190cf5c8a8,%rdi  ;   {metadata(method data for {method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f191111b2b4: incl   0x118(%rdi)
  0x00007f191111b2ba: mov    $0x0,%edi
  0x00007f191111b2bf: jmpq   0x00007f191111b457  ;*goto
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@6 (line 11)

  0x00007f191111b2c4: nopl   0x0(%rax)
  0x00007f191111b2c8: mov    %edi,0x28(%rsp)
  0x00007f191111b2cc: mov    %rsi,%rbx
  0x00007f191111b2cf: movabs $0x7f190cf5c8a8,%rax  ;   {metadata(method data for {method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f191111b2d9: addq   $0x1,0x140(%rax)
  0x00007f191111b2e1: movabs $0x7f190cf5c750,%rbx  ;   {metadata(method data for {method} {0x00007f190cf59428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f191111b2eb: mov    0xdc(%rbx),%eax
  0x00007f191111b2f1: add    $0x8,%eax
  0x00007f191111b2f4: mov    %eax,0xdc(%rbx)
  0x00007f191111b2fa: movabs $0x7f190cf59428,%rbx  ;   {metadata({method} {0x00007f190cf59428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f191111b304: and    $0x7ffff8,%eax
  0x00007f191111b30a: cmp    $0x0,%eax
  0x00007f191111b30d: je     0x00007f191111b505
  0x00007f191111b313: movabs $0x7f190cf5c750,%rbx  ;   {metadata(method data for {method} {0x00007f190cf59428} &apos;parse&apos; &apos;()Ljava/util/UUID;&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f191111b31d: addq   $0x1,0x108(%rbx)
  0x00007f191111b325: movabs $0x670be7490,%rsi  ;*invokestatic uuidFromCharSequence
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {oop(&quot;ba226cf7-d156-4b18-a78a-094736208cc9&quot;)}
  0x00007f191111b32f: callq  0x00007f1911046420  ; OopMap{[48]=Oop off=308}
                                                ;*invokestatic uuidFromCharSequence
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@2 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {static_call}
  0x00007f191111b334: movabs $0x7f190cf5c8a8,%rsi  ;   {metadata(method data for {method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f191111b33e: addq   $0x1,0x160(%rsi)
  0x00007f191111b346: mov    %rax,%rsi          ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)

  0x00007f191111b349: nop
  0x00007f191111b34a: nop
  0x00007f191111b34b: nop
  0x00007f191111b34c: nop
  0x00007f191111b34d: nop
  0x00007f191111b34e: nop
  0x00007f191111b34f: callq  0x00007f1911046420  ; OopMap{[48]=Oop off=340}
                                                ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)
                                                ;   {static_call}
  0x00007f191111b354: cmp    $0x1,%eax
  0x00007f191111b357: movabs $0x7f190cf5c8a8,%rdx  ;   {metadata(method data for {method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f191111b361: movabs $0x170,%rsi
  0x00007f191111b36b: jne    0x00007f191111b37b
  0x00007f191111b371: movabs $0x180,%rsi
  0x00007f191111b37b: mov    (%rdx,%rsi,1),%rdi
  0x00007f191111b37f: lea    0x1(%rdi),%rdi
  0x00007f191111b383: mov    %rdi,(%rdx,%rsi,1)
  0x00007f191111b387: jne    0x00007f191111b44c  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@19 (line 13)

  0x00007f191111b38d: movabs $0x670b80c78,%rdx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007f191111b397: mov    0x6c(%rdx),%esi
  0x00007f191111b39a: shl    $0x3,%rsi          ;*getstatic out
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@22 (line 14)

  0x00007f191111b39e: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00007f191111b51c
  0x00007f191111b3a1: mov    %rsi,%rdx
  0x00007f191111b3a4: movabs $0x7f190cf5c8a8,%rdi  ;   {metadata(method data for {method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f191111b3ae: mov    0x8(%rdx),%edx
  0x00007f191111b3b1: shl    $0x3,%rdx
  0x00007f191111b3b5: cmp    0x198(%rdi),%rdx
  0x00007f191111b3bc: jne    0x00007f191111b3cb
  0x00007f191111b3be: addq   $0x1,0x1a0(%rdi)
  0x00007f191111b3c6: jmpq   0x00007f191111b431
  0x00007f191111b3cb: cmp    0x1a8(%rdi),%rdx
  0x00007f191111b3d2: jne    0x00007f191111b3e1
  0x00007f191111b3d4: addq   $0x1,0x1b0(%rdi)
  0x00007f191111b3dc: jmpq   0x00007f191111b431
  0x00007f191111b3e1: cmpq   $0x0,0x198(%rdi)
  0x00007f191111b3ec: jne    0x00007f191111b405
  0x00007f191111b3ee: mov    %rdx,0x198(%rdi)
  0x00007f191111b3f5: movq   $0x1,0x1a0(%rdi)
  0x00007f191111b400: jmpq   0x00007f191111b431
  0x00007f191111b405: cmpq   $0x0,0x1a8(%rdi)
  0x00007f191111b410: jne    0x00007f191111b429
  0x00007f191111b412: mov    %rdx,0x1a8(%rdi)
  0x00007f191111b419: movq   $0x1,0x1b0(%rdi)
  0x00007f191111b424: jmpq   0x00007f191111b431
  0x00007f191111b429: addq   $0x1,0x190(%rdi)
  0x00007f191111b431: movabs $0x670c199e0,%rdx  ;*invokevirtual println
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {oop(&quot;X&quot;)}
  0x00007f191111b43b: nop
  0x00007f191111b43c: nop
  0x00007f191111b43d: movabs $0xffffffffffffffff,%rax
  0x00007f191111b447: callq  0x00007f1911046220  ; OopMap{[48]=Oop off=588}
                                                ;*invokevirtual println
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {virtual_call}
  0x00007f191111b44c: mov    0x28(%rsp),%edi
  0x00007f191111b450: inc    %edi
  0x00007f191111b452: mov    0x30(%rsp),%rsi
  0x00007f191111b457: movabs $0x7f190cf5c8a8,%rbx  ;   {metadata(method data for {method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f191111b461: mov    0xe0(%rbx),%eax
  0x00007f191111b467: add    $0x8,%eax
  0x00007f191111b46a: mov    %eax,0xe0(%rbx)
  0x00007f191111b470: movabs $0x7f190cf59370,%rbx  ;   {metadata({method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f191111b47a: and    $0xfff8,%eax
  0x00007f191111b480: cmp    $0x0,%eax
  0x00007f191111b483: je     0x00007f191111b521  ; OopMap{rsi=Oop [48]=Oop off=649}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)

  0x00007f191111b489: test   %eax,0x16378c71(%rip)        # 0x00007f1927494100
                                                ;   {poll}
  0x00007f191111b48f: cmp    $0xf4240,%edi
  0x00007f191111b495: movabs $0x7f190cf5c8a8,%rbx  ;   {metadata(method data for {method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f191111b49f: movabs $0x1c0,%rax
  0x00007f191111b4a9: jl     0x00007f191111b4b9
  0x00007f191111b4af: movabs $0x1d0,%rax
  0x00007f191111b4b9: mov    (%rbx,%rax,1),%rdx
  0x00007f191111b4bd: lea    0x1(%rdx),%rdx
  0x00007f191111b4c1: mov    %rdx,(%rbx,%rax,1)
  0x00007f191111b4c5: jl     0x00007f191111b2c8  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)

  0x00007f191111b4cb: add    $0x40,%rsp
  0x00007f191111b4cf: pop    %rbp
  0x00007f191111b4d0: test   %eax,0x16378c2a(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191111b4d6: retq   
  0x00007f191111b4d7: mov    %rdi,0x8(%rsp)
  0x00007f191111b4dc: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191111b4e4: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop [48]=Oop off=745}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@-1 (line 9)
                                                ;   {runtime_call}
  0x00007f191111b4e9: jmpq   0x00007f191111b263
  0x00007f191111b4ee: mov    %rdi,0x8(%rsp)
  0x00007f191111b4f3: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191111b4fb: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop [48]=Oop off=768}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@1 (line 9)
                                                ;   {runtime_call}
  0x00007f191111b500: jmpq   0x00007f191111b2aa
  0x00007f191111b505: mov    %rbx,0x8(%rsp)
  0x00007f191111b50a: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191111b512: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop [48]=Oop off=791}
                                                ;*synchronization entry
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::parse@-1 (line 21)
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {runtime_call}
  0x00007f191111b517: jmpq   0x00007f191111b313
  0x00007f191111b51c: callq  0x00007f191106e6c0  ; OopMap{[48]=Oop rsi=Oop off=801}
                                                ;*invokevirtual println
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@27 (line 14)
                                                ;   {runtime_call}
  0x00007f191111b521: mov    %rbx,0x8(%rsp)
  0x00007f191111b526: movq   $0x24,(%rsp)
  0x00007f191111b52e: callq  0x00007f19110feaa0  ; OopMap{rsi=Oop [48]=Oop off=819}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)
                                                ;   {runtime_call}
  0x00007f191111b533: jmpq   0x00007f191111b489
  0x00007f191111b538: nop
  0x00007f191111b539: nop
  0x00007f191111b53a: mov    0x2a8(%r15),%rax
  0x00007f191111b541: movabs $0x0,%r10
  0x00007f191111b54b: mov    %r10,0x2a8(%r15)
  0x00007f191111b552: movabs $0x0,%r10
  0x00007f191111b55c: mov    %r10,0x2b0(%r15)
  0x00007f191111b563: add    $0x40,%rsp
  0x00007f191111b567: pop    %rbp
  0x00007f191111b568: jmpq   0x00007f191106f220  ;   {runtime_call}
  0x00007f191111b56d: hlt    
  0x00007f191111b56e: hlt    
  0x00007f191111b56f: hlt    
  0x00007f191111b570: hlt    
  0x00007f191111b571: hlt    
  0x00007f191111b572: hlt    
  0x00007f191111b573: hlt    
  0x00007f191111b574: hlt    
  0x00007f191111b575: hlt    
  0x00007f191111b576: hlt    
  0x00007f191111b577: hlt    
  0x00007f191111b578: hlt    
  0x00007f191111b579: hlt    
  0x00007f191111b57a: hlt    
  0x00007f191111b57b: hlt    
  0x00007f191111b57c: hlt    
  0x00007f191111b57d: hlt    
  0x00007f191111b57e: hlt    
  0x00007f191111b57f: hlt    
[Stub Code]
  0x00007f191111b580: nop                       ;   {no_reloc}
  0x00007f191111b581: nop
  0x00007f191111b582: nop
  0x00007f191111b583: nop
  0x00007f191111b584: nop
  0x00007f191111b585: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191111b58f: jmpq   0x00007f191111b58f  ;   {runtime_call}
  0x00007f191111b594: nop
  0x00007f191111b595: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191111b59f: jmpq   0x00007f191111b59f  ;   {runtime_call}
  0x00007f191111b5a4: nop
  0x00007f191111b5a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f191111b5af: jmpq   0x00007f191111b5af  ;   {runtime_call}
[Exception Handler]
  0x00007f191111b5b4: callq  0x00007f191106c860  ;   {runtime_call}
  0x00007f191111b5b9: mov    %rsp,-0x28(%rsp)
  0x00007f191111b5be: sub    $0x80,%rsp
  0x00007f191111b5c5: mov    %rax,0x78(%rsp)
  0x00007f191111b5ca: mov    %rcx,0x70(%rsp)
  0x00007f191111b5cf: mov    %rdx,0x68(%rsp)
  0x00007f191111b5d4: mov    %rbx,0x60(%rsp)
  0x00007f191111b5d9: mov    %rbp,0x50(%rsp)
  0x00007f191111b5de: mov    %rsi,0x48(%rsp)
  0x00007f191111b5e3: mov    %rdi,0x40(%rsp)
  0x00007f191111b5e8: mov    %r8,0x38(%rsp)
  0x00007f191111b5ed: mov    %r9,0x30(%rsp)
  0x00007f191111b5f2: mov    %r10,0x28(%rsp)
  0x00007f191111b5f7: mov    %r11,0x20(%rsp)
  0x00007f191111b5fc: mov    %r12,0x18(%rsp)
  0x00007f191111b601: mov    %r13,0x10(%rsp)
  0x00007f191111b606: mov    %r14,0x8(%rsp)
  0x00007f191111b60b: mov    %r15,(%rsp)
  0x00007f191111b60f: movabs $0x7f192638cf36,%rdi  ;   {external_word}
  0x00007f191111b619: movabs $0x7f191111b5b9,%rsi  ;   {internal_word}
  0x00007f191111b623: mov    %rsp,%rdx
  0x00007f191111b626: and    $0xfffffffffffffff0,%rsp
  0x00007f191111b62a: callq  0x00007f19260b8990  ;   {runtime_call}
  0x00007f191111b62f: hlt    
[Deopt Handler Code]
  0x00007f191111b630: movabs $0x7f191111b630,%r10  ;   {section_word}
  0x00007f191111b63a: push   %r10
  0x00007f191111b63c: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f191111b641: hlt    
  0x00007f191111b642: hlt    
  0x00007f191111b643: hlt    
  0x00007f191111b644: hlt    
  0x00007f191111b645: hlt    
  0x00007f191111b646: hlt    
  0x00007f191111b647: hlt    
<nmethod compile_id='25' compiler='C1' level='3' entry='0x00007f191111b200' size='2080' address='0x00007f191111b050' relocation_offset='296' insts_offset='432' stub_offset='1328' scopes_data_offset='1568' scopes_pcs_offset='1752' dependencies_offset='2056' nul_chk_table_offset='2064' oops_offset='1528' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='131486' iicount='1' stamp='0.235'/>
<writer thread='139746009892608'/>
<task_queued compile_id='26' compile_kind='osr' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='134586' iicount='1' osr_bci='9' stamp='0.235' comment='tiered' hot_count='134586'/>
<writer thread='139745424463616'/>
Decoding compiled method 0x00007f1911110550:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f190cf59370} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;
  0x00007f19111106c0: callq  0x00007f192619fa20  ;   {runtime_call}
  0x00007f19111106c5: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f19111106d0: mov    %eax,-0x14000(%rsp)
  0x00007f19111106d7: push   %rbp
  0x00007f19111106d8: sub    $0x20,%rsp
  0x00007f19111106dc: mov    0x8(%rsi),%r10d
  0x00007f19111106e0: mov    %r10d,(%rsp)
  0x00007f19111106e4: mov    0x10(%rsi),%rbp
  0x00007f19111106e8: mov    %rsi,%rdi
  0x00007f19111106eb: movabs $0x7f1926242d80,%r10
  0x00007f19111106f5: callq  *%r10
  0x00007f19111106f8: mov    0x8(%rbp),%r10d    ; implicit exception: dispatches to 0x00007f19111107b7
  0x00007f19111106fc: cmp    $0xf800c005,%r10d  ;   {metadata(&apos;com/github/marschall/charsequences/ParseUuidCompilation&apos;)}
  0x00007f1911110703: jne    0x00007f1911110796  ;*aload_0
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@9 (line 12)

  0x00007f1911110709: jmp    0x00007f1911110734
  0x00007f191111070b: mov    %rax,%rsi
  0x00007f191111070e: nop
  0x00007f191111070f: callq  0x00007f1911046420  ; OopMap{rbp=Oop off=84}
                                                ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)
                                                ;   {static_call}
  0x00007f1911110714: cmp    $0x1,%eax
  0x00007f1911110717: je     0x00007f1911110791
  0x00007f191111071d: data16 xchg %ax,%ax       ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)

  0x00007f1911110720: mov    (%rsp),%r10d
  0x00007f1911110724: inc    %r10d              ;*iinc
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@30 (line 11)

  0x00007f1911110727: mov    %r10d,(%rsp)
  0x00007f191111072b: cmp    $0xf4240,%r10d
  0x00007f1911110732: jge    0x00007f1911110781  ;*aload_0
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@9 (line 12)

  0x00007f1911110734: mov    %rbp,%rsi
  0x00007f1911110737: callq  0x00007f1911046020  ; OopMap{rbp=Oop off=124}
                                                ;*invokevirtual parse
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)
                                                ;   {optimized virtual_call}
  0x00007f191111073c: test   %rax,%rax
  0x00007f191111073f: je     0x00007f1911110720
  0x00007f1911110741: mov    (%rax),%r10
  0x00007f1911110744: mov    %r10,%r11
  0x00007f1911110747: and    $0x7,%r11
  0x00007f191111074b: cmp    $0x1,%r11
  0x00007f191111074f: jne    0x00007f191111070b
  0x00007f1911110751: shr    $0x8,%r10
  0x00007f1911110755: mov    %r10d,%r11d
  0x00007f1911110758: and    $0x7fffffff,%r11d
  0x00007f191111075f: test   %r11d,%r11d
  0x00007f1911110762: je     0x00007f191111070b
  0x00007f1911110764: cmp    $0x1,%r11d
  0x00007f1911110768: jne    0x00007f1911110720  ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)

  0x00007f191111076a: mov    $0xffffff65,%esi
  0x00007f191111076f: mov    %r11d,0x4(%rsp)
  0x00007f1911110774: data16 xchg %ax,%ax
  0x00007f1911110777: callq  0x00007f19110051a0  ; OopMap{rbp=Oop off=188}
                                                ;*if_icmpne
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@19 (line 13)
                                                ;   {runtime_call}
  0x00007f191111077c: callq  0x00007f192619fa20  ;*if_icmpne
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@19 (line 13)
                                                ;   {runtime_call}
  0x00007f1911110781: mov    $0xffffff65,%esi
  0x00007f1911110786: nop
  0x00007f1911110787: callq  0x00007f19110051a0  ; OopMap{rbp=Oop off=204}
                                                ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)
                                                ;   {runtime_call}
  0x00007f191111078c: callq  0x00007f192619fa20  ;*if_icmplt
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@36 (line 11)
                                                ;   {runtime_call}
  0x00007f1911110791: mov    %eax,%r11d
  0x00007f1911110794: jmp    0x00007f191111076a
  0x00007f1911110796: mov    $0xffffff9d,%esi
  0x00007f191111079b: callq  0x00007f19110051a0  ; OopMap{rbp=Oop off=224}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@9 (line 12)
                                                ;   {runtime_call}
  0x00007f19111107a0: callq  0x00007f192619fa20  ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)
                                                ;   {runtime_call}
  0x00007f19111107a5: mov    %rax,%rsi
  0x00007f19111107a8: jmp    0x00007f19111107ad  ;*invokevirtual parse
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@10 (line 12)

  0x00007f19111107aa: mov    %rax,%rsi          ;*invokestatic identityHashCode
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@15 (line 13)

  0x00007f19111107ad: add    $0x20,%rsp
  0x00007f19111107b1: pop    %rbp
  0x00007f19111107b2: jmpq   0x00007f191106f4e0  ;   {runtime_call}
  0x00007f19111107b7: mov    $0xffffff86,%esi
  0x00007f19111107bc: mov    (%rsp),%ebp
  0x00007f19111107bf: callq  0x00007f19110051a0  ; OopMap{off=260}
                                                ;*aload_0
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@9 (line 12)
                                                ;   {runtime_call}
  0x00007f19111107c4: callq  0x00007f192619fa20  ;*aload_0
                                                ; - com.github.marschall.charsequences.ParseUuidCompilation::&lt;init&gt;@9 (line 12)
                                                ;   {runtime_call}
  0x00007f19111107c9: hlt    
  0x00007f19111107ca: hlt    
  0x00007f19111107cb: hlt    
  0x00007f19111107cc: hlt    
  0x00007f19111107cd: hlt    
  0x00007f19111107ce: hlt    
  0x00007f19111107cf: hlt    
  0x00007f19111107d0: hlt    
  0x00007f19111107d1: hlt    
  0x00007f19111107d2: hlt    
  0x00007f19111107d3: hlt    
  0x00007f19111107d4: hlt    
  0x00007f19111107d5: hlt    
  0x00007f19111107d6: hlt    
  0x00007f19111107d7: hlt    
  0x00007f19111107d8: hlt    
  0x00007f19111107d9: hlt    
  0x00007f19111107da: hlt    
  0x00007f19111107db: hlt    
  0x00007f19111107dc: hlt    
  0x00007f19111107dd: hlt    
  0x00007f19111107de: hlt    
  0x00007f19111107df: hlt    
[Stub Code]
  0x00007f19111107e0: movabs $0x0,%rbx          ;   {no_reloc}
  0x00007f19111107ea: jmpq   0x00007f19111107ea  ;   {runtime_call}
  0x00007f19111107ef: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f19111107f9: jmpq   0x00007f19111107f9  ;   {runtime_call}
[Exception Handler]
  0x00007f19111107fe: jmpq   0x00007f191106c760  ;   {runtime_call}
[Deopt Handler Code]
  0x00007f1911110803: callq  0x00007f1911110808
  0x00007f1911110808: subq   $0x5,(%rsp)
  0x00007f191111080d: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f1911110812: hlt    
  0x00007f1911110813: hlt    
  0x00007f1911110814: hlt    
  0x00007f1911110815: hlt    
  0x00007f1911110816: hlt    
  0x00007f1911110817: hlt    
<nmethod compile_id='26' compile_kind='osr' compiler='C2' level='4' entry='0x00007f19111106c0' size='1224' address='0x00007f1911110550' relocation_offset='296' insts_offset='368' stub_offset='656' scopes_data_offset='744' scopes_pcs_offset='848' dependencies_offset='1152' handler_table_offset='1160' nul_chk_table_offset='1208' oops_offset='712' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='155373' iicount='1' stamp='0.238'/>
<make_not_entrant thread='139745424463616' compile_id='24' compile_kind='osr' compiler='C1' level='3' stamp='0.238'/>
<writer thread='139746009892608'/>
<uncommon_trap thread='139746009892608' reason='unstable_if' action='reinterpret' compile_id='26' compile_kind='osr' compiler='C2' level='4' stamp='0.295'>
<jvms bci='36' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='160186' iicount='1'/>
</uncommon_trap>
<make_not_entrant thread='139746009892608' compile_id='26' compile_kind='osr' compiler='C2' level='4' stamp='0.295'/>
<task_queued compile_id='27' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='256' iicount='256' level='3' stamp='0.295' comment='tiered' hot_count='256'/>
[Loaded java.lang.Shutdown from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
[Loaded java.lang.Shutdown$Lock from /home/marschall/bin/java/jdk1.8.0_144/jre/lib/rt.jar]
<writer thread='139745421305600'/>
Decoding compiled method 0x00007f191111ad10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f190cb72778} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007f191111ae60: mov    %eax,-0x14000(%rsp)
<writer thread='139745432000256'/>
<destroy_vm stamp='0.295'/>
<writer thread='139745421305600'/>

  0x00007f191111ae67: push   %rbp
  0x00007f191111ae68: sub    $0x30,%rsp
  0x00007f191111ae6c: movabs $0x7f190cd88e48,%rax  ;   {metadata(method data for {method} {0x00007f190cb72778} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00007f191111ae76: mov    0xdc(%rax),%esi
  0x00007f191111ae7c: add    $0x8,%esi
  0x00007f191111ae7f: mov    %esi,0xdc(%rax)
  0x00007f191111ae85: movabs $0x7f190cb72778,%rax  ;   {metadata({method} {0x00007f190cb72778} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00007f191111ae8f: and    $0x1ff8,%esi
  0x00007f191111ae95: cmp    $0x0,%esi
  0x00007f191111ae98: je     0x00007f191111aebb
  0x00007f191111ae9e: movabs $0x670b80c78,%rax  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007f191111aea8: mov    0x74(%rax),%eax
  0x00007f191111aeab: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x00007f191111aeaf: add    $0x30,%rsp
  0x00007f191111aeb3: pop    %rbp
  0x00007f191111aeb4: test   %eax,0x16379246(%rip)        # 0x00007f1927494100
                                                ;   {poll_return}
  0x00007f191111aeba: retq   
  0x00007f191111aebb: mov    %rax,0x8(%rsp)
  0x00007f191111aec0: movq   $0xffffffffffffffff,(%rsp)
  0x00007f191111aec8: callq  0x00007f19110feaa0  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x00007f191111aecd: jmp    0x00007f191111ae9e
  0x00007f191111aecf: nop
  0x00007f191111aed0: nop
  0x00007f191111aed1: mov    0x2a8(%r15),%rax
  0x00007f191111aed8: movabs $0x0,%r10
  0x00007f191111aee2: mov    %r10,0x2a8(%r15)
  0x00007f191111aee9: movabs $0x0,%r10
  0x00007f191111aef3: mov    %r10,0x2b0(%r15)
  0x00007f191111aefa: add    $0x30,%rsp
  0x00007f191111aefe: pop    %rbp
  0x00007f191111aeff: jmpq   0x00007f191106f220  ;   {runtime_call}
  0x00007f191111af04: hlt    
  0x00007f191111af05: hlt    
  0x00007f191111af06: hlt    
  0x00007f191111af07: hlt    
  0x00007f191111af08: hlt    
  0x00007f191111af09: hlt    
  0x00007f191111af0a: hlt    
  0x00007f191111af0b: hlt    
  0x00007f191111af0c: hlt    
  0x00007f191111af0d: hlt    
  0x00007f191111af0e: hlt    
  0x00007f191111af0f: hlt    
  0x00007f191111af10: hlt    
  0x00007f191111af11: hlt    
  0x00007f191111af12: hlt    
  0x00007f191111af13: hlt    
  0x00007f191111af14: hlt    
  0x00007f191111af15: hlt    
  0x00007f191111af16: hlt    
  0x00007f191111af17: hlt    
  0x00007f191111af18: hlt    
  0x00007f191111af19: hlt    
  0x00007f191111af1a: hlt    
  0x00007f191111af1b: hlt    
  0x00007f191111af1c: hlt    
  0x00007f191111af1d: hlt    
  0x00007f191111af1e: hlt    
  0x00007f191111af1f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f191111af20: callq  0x00007f191106c860  ;   {no_reloc}
  0x00007f191111af25: mov    %rsp,-0x28(%rsp)
  0x00007f191111af2a: sub    $0x80,%rsp
  0x00007f191111af31: mov    %rax,0x78(%rsp)
  0x00007f191111af36: mov    %rcx,0x70(%rsp)
  0x00007f191111af3b: mov    %rdx,0x68(%rsp)
  0x00007f191111af40: mov    %rbx,0x60(%rsp)
  0x00007f191111af45: mov    %rbp,0x50(%rsp)
  0x00007f191111af4a: mov    %rsi,0x48(%rsp)
  0x00007f191111af4f: mov    %rdi,0x40(%rsp)
  0x00007f191111af54: mov    %r8,0x38(%rsp)
  0x00007f191111af59: mov    %r9,0x30(%rsp)
  0x00007f191111af5e: mov    %r10,0x28(%rsp)
  0x00007f191111af63: mov    %r11,0x20(%rsp)
  0x00007f191111af68: mov    %r12,0x18(%rsp)
  0x00007f191111af6d: mov    %r13,0x10(%rsp)
  0x00007f191111af72: mov    %r14,0x8(%rsp)
  0x00007f191111af77: mov    %r15,(%rsp)
  0x00007f191111af7b: movabs $0x7f192638cf36,%rdi  ;   {external_word}
  0x00007f191111af85: movabs $0x7f191111af25,%rsi  ;   {internal_word}
  0x00007f191111af8f: mov    %rsp,%rdx
  0x00007f191111af92: and    $0xfffffffffffffff0,%rsp
  0x00007f191111af96: callq  0x00007f19260b8990  ;   {runtime_call}
  0x00007f191111af9b: hlt    
[Deopt Handler Code]
  0x00007f191111af9c: movabs $0x7f191111af9c,%r10  ;   {section_word}
  0x00007f191111afa6: push   %r10
  0x00007f191111afa8: jmpq   0x00007f19110473c0  ;   {runtime_call}
  0x00007f191111afad: hlt    
  0x00007f191111afae: hlt    
  0x00007f191111afaf: hlt    
<nmethod compile_id='27' compiler='C1' level='3' entry='0x00007f191111ae60' size='768' address='0x00007f191111ad10' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='696' dependencies_offset='760' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='257' iicount='257' stamp='0.296'/>
<tty_done stamp='0.296'/>
</tty>
<compilation_log thread='139745421305600'>
<start_compile_thread name='C1 CompilerThread3' thread='139745421305600' process='4299' stamp='0.063'/>
<task compile_id='3' method='java/lang/Math min (II)I' bytes='11' count='640' iicount='640' level='3' stamp='0.064'>
<phase name='buildIR' stamp='0.064'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/Math' flags='17'/>
<method id='833' holder='832' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='640'/>
<parse method='833'  stamp='0.064'>
<parse_done stamp='0.064'/>
</parse>
<phase name='optimize_blocks' stamp='0.064'>
<phase_done name='optimize_blocks' stamp='0.064'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.064'>
<phase_done name='rangeCheckElimination' stamp='0.064'/>
</phase>
<phase name='optimize_null_checks' stamp='0.064'>
<phase_done name='optimize_null_checks' stamp='0.064'/>
</phase>
<phase_done name='buildIR' stamp='0.064'/>
</phase>
<phase name='emit_lir' stamp='0.064'>
<phase name='lirGeneration' stamp='0.064'>
<phase_done name='lirGeneration' stamp='0.064'/>
</phase>
<phase name='linearScan' stamp='0.064'>
<phase_done name='linearScan' stamp='0.064'/>
</phase>
<phase_done name='emit_lir' stamp='0.064'/>
</phase>
<phase name='codeemit' stamp='0.064'>
<phase_done name='codeemit' stamp='0.064'/>
</phase>
<phase name='codeinstall' stamp='0.064'>
<phase_done name='codeinstall' stamp='0.071'/>
</phase>
<code_cache total_blobs='217' nmethods='1' adapters='132' free_code_cache='250609664'/>
<task_done success='1' nmsize='400' count='640' stamp='0.071'/>
</task>
<task compile_id='1' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='256' iicount='256' level='3' stamp='0.071'>
<phase name='buildIR' stamp='0.071'>
<type id='724' name='void'/>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' iicount='256'/>
<parse method='832'  stamp='0.071'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='834' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='1548'/>
<call method='834' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<parse_done stamp='0.071'/>
</parse>
<bc code='183' bci='13'/>
<klass id='836' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='837' holder='836' name='&lt;init&gt;' return='724' arguments='722' unloaded='1'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='30'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='65'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='75'/>
<klass id='839' name='java/util/Arrays' flags='1'/>
<method id='840' holder='839' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' iicount='256'/>
<call method='840' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.071'/>
</parse>
<phase name='optimize_blocks' stamp='0.071'>
<phase_done name='optimize_blocks' stamp='0.071'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.071'>
<phase_done name='rangeCheckElimination' stamp='0.071'/>
</phase>
<phase name='optimize_null_checks' stamp='0.071'>
<phase_done name='optimize_null_checks' stamp='0.071'/>
</phase>
<phase_done name='buildIR' stamp='0.071'/>
</phase>
<phase name='emit_lir' stamp='0.071'>
<phase name='lirGeneration' stamp='0.071'>
<phase_done name='lirGeneration' stamp='0.072'/>
</phase>
<phase name='linearScan' stamp='0.072'>
<phase_done name='linearScan' stamp='0.072'/>
</phase>
<phase_done name='emit_lir' stamp='0.072'/>
</phase>
<phase name='codeemit' stamp='0.072'>
<phase_done name='codeemit' stamp='0.072'/>
</phase>
<phase name='codeinstall' stamp='0.072'>
<phase_done name='codeinstall' stamp='0.074'/>
</phase>
<code_cache total_blobs='219' nmethods='2' adapters='133' free_code_cache='250606400'/>
<task_done success='1' nmsize='1272' count='256' inlined_bytes='1' stamp='0.074'/>
</task>
<task compile_id='2' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='256' iicount='256' level='3' stamp='0.074'>
<phase name='buildIR' stamp='0.074'>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='832' name='java/util/Arrays' flags='1'/>
<method id='833' holder='832' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' iicount='256'/>
<parse method='833'  stamp='0.074'>
<bc code='183' bci='16'/>
<type id='724' name='void'/>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<method id='836' holder='795' name='&lt;init&gt;' return='724' flags='1' bytes='7' iicount='80'/>
<call method='836' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='3'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='838' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='80'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='840' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='1552'/>
<call method='840' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='840'>
<parse_done stamp='0.074'/>
</parse>
<parse_done stamp='0.074'/>
</parse>
<parse_done stamp='0.074'/>
</parse>
<bc code='182' bci='20'/>
<method id='842' holder='795' name='append' return='795' arguments='722' flags='1' bytes='8' iicount='1'/>
<call method='842' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<bc code='183' bci='2'/>
<method id='844' holder='793' name='append' return='793' arguments='722' flags='1' bytes='62' iicount='1'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.074'/>
</parse>
<bc code='182' bci='25'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='847' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' iicount='131'/>
<call method='847' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='183' bci='2'/>
<method id='849' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' iicount='131'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.075'/>
</parse>
<bc code='182' bci='29'/>
<call method='842' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<bc code='183' bci='2'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.075'/>
</parse>
<bc code='182' bci='32'/>
<method id='851' holder='795' name='toString' return='730' flags='1' bytes='17' iicount='80'/>
<call method='851' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='183' bci='13'/>
<method id='853' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' compile_id='1' compiler='C1' level='3' iicount='256'/>
<call method='853' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.075'/>
</parse>
<bc code='183' bci='35'/>
<klass id='835' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='855' holder='835' name='&lt;init&gt;' return='724' arguments='730' flags='1' bytes='6' iicount='1'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='857' name='java/lang/Math' flags='17'/>
<method id='858' holder='857' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='3' compiler='C1' level='3' iicount='640'/>
<call method='858' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<parse_done stamp='0.075'/>
</parse>
<bc code='184' bci='57'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='860' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' iicount='596'/>
<call method='860' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.075'/>
</parse>
<phase name='optimize_blocks' stamp='0.075'>
<phase_done name='optimize_blocks' stamp='0.075'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.075'>
<phase_done name='rangeCheckElimination' stamp='0.075'/>
</phase>
<phase name='optimize_null_checks' stamp='0.075'>
<phase_done name='optimize_null_checks' stamp='0.075'/>
</phase>
<phase_done name='buildIR' stamp='0.075'/>
</phase>
<phase name='emit_lir' stamp='0.075'>
<phase name='lirGeneration' stamp='0.075'>
<phase_done name='lirGeneration' stamp='0.075'/>
</phase>
<phase name='linearScan' stamp='0.075'>
<phase_done name='linearScan' stamp='0.075'/>
</phase>
<phase_done name='emit_lir' stamp='0.075'/>
</phase>
<phase name='codeemit' stamp='0.075'>
<phase_done name='codeemit' stamp='0.075'/>
</phase>
<phase name='codeinstall' stamp='0.075'>
<phase_done name='codeinstall' stamp='0.080'/>
</phase>
<code_cache total_blobs='223' nmethods='3' adapters='135' free_code_cache='250568320'/>
<task_done success='1' nmsize='2872' count='256' inlined_bytes='72' stamp='0.080'/>
</task>
<task compile_id='4' method='java/lang/String hashCode ()I' bytes='55' count='437' backedge_count='6739' iicount='437' level='3' stamp='0.080'>
<phase name='buildIR' stamp='0.080'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='hashCode' return='722' flags='1' bytes='55' iicount='438'/>
<parse method='832'  stamp='0.080'>
<parse_done stamp='0.080'/>
</parse>
<phase name='optimize_blocks' stamp='0.080'>
<phase_done name='optimize_blocks' stamp='0.080'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.080'>
<phase_done name='rangeCheckElimination' stamp='0.080'/>
</phase>
<phase name='optimize_null_checks' stamp='0.080'>
<phase_done name='optimize_null_checks' stamp='0.080'/>
</phase>
<phase_done name='buildIR' stamp='0.080'/>
</phase>
<phase name='emit_lir' stamp='0.080'>
<phase name='lirGeneration' stamp='0.080'>
<phase_done name='lirGeneration' stamp='0.080'/>
</phase>
<phase name='linearScan' stamp='0.080'>
<phase_done name='linearScan' stamp='0.080'/>
</phase>
<phase_done name='emit_lir' stamp='0.080'/>
</phase>
<phase name='codeemit' stamp='0.080'>
<phase_done name='codeemit' stamp='0.080'/>
</phase>
<phase name='codeinstall' stamp='0.080'>
<phase_done name='codeinstall' stamp='0.082'/>
</phase>
<code_cache total_blobs='224' nmethods='4' adapters='135' free_code_cache='250566848'/>
<task_done success='1' nmsize='656' count='444' backedge_count='6876' stamp='0.082'/>
</task>
<task compile_id='5' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='411' backedge_count='1418' iicount='411' level='3' stamp='0.082'>
<phase name='buildIR' stamp='0.082'>
<type id='716' name='boolean'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='equals' return='716' arguments='729' flags='1' bytes='81' iicount='411'/>
<parse method='832'  stamp='0.083'>
<parse_done stamp='0.083'/>
</parse>
<phase name='optimize_blocks' stamp='0.083'>
<phase_done name='optimize_blocks' stamp='0.083'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.083'>
<phase_done name='rangeCheckElimination' stamp='0.083'/>
</phase>
<phase name='optimize_null_checks' stamp='0.083'>
<phase_done name='optimize_null_checks' stamp='0.083'/>
</phase>
<phase_done name='buildIR' stamp='0.083'/>
</phase>
<phase name='emit_lir' stamp='0.083'>
<phase name='lirGeneration' stamp='0.083'>
<phase_done name='lirGeneration' stamp='0.083'/>
</phase>
<phase name='linearScan' stamp='0.083'>
<phase_done name='linearScan' stamp='0.083'/>
</phase>
<phase_done name='emit_lir' stamp='0.083'/>
</phase>
<phase name='codeemit' stamp='0.083'>
<phase_done name='codeemit' stamp='0.083'/>
</phase>
<phase name='codeinstall' stamp='0.083'>
<phase_done name='codeinstall' stamp='0.085'/>
</phase>
<code_cache total_blobs='225' nmethods='5' adapters='135' free_code_cache='250564288'/>
<task_done success='1' nmsize='1360' count='411' backedge_count='1418' stamp='0.085'/>
</task>
<task compile_id='6' method='java/lang/String charAt (I)C' bytes='29' count='2566' iicount='2566' level='3' stamp='0.085'>
<phase name='buildIR' stamp='0.085'>
<type id='717' name='char'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' iicount='2566'/>
<parse method='832'  stamp='0.085'>
<bc code='183' bci='18'/>
<type id='724' name='void'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='835' holder='834' name='&lt;init&gt;' return='724' arguments='722' unloaded='1'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.085'/>
</parse>
<phase name='optimize_blocks' stamp='0.085'>
<phase_done name='optimize_blocks' stamp='0.085'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.085'>
<phase_done name='rangeCheckElimination' stamp='0.085'/>
</phase>
<phase name='optimize_null_checks' stamp='0.085'>
<phase_done name='optimize_null_checks' stamp='0.085'/>
</phase>
<phase_done name='buildIR' stamp='0.085'/>
</phase>
<phase name='emit_lir' stamp='0.085'>
<phase name='lirGeneration' stamp='0.085'>
<phase_done name='lirGeneration' stamp='0.085'/>
</phase>
<phase name='linearScan' stamp='0.085'>
<phase_done name='linearScan' stamp='0.085'/>
</phase>
<phase_done name='emit_lir' stamp='0.085'/>
</phase>
<phase name='codeemit' stamp='0.085'>
<phase_done name='codeemit' stamp='0.085'/>
</phase>
<phase name='codeinstall' stamp='0.085'>
<phase_done name='codeinstall' stamp='0.086'/>
</phase>
<code_cache total_blobs='226' nmethods='6' adapters='135' free_code_cache='250562880'/>
<task_done success='1' nmsize='616' count='2566' stamp='0.086'/>
</task>
<task compile_id='8' method='java/lang/String indexOf (II)I' bytes='70' count='170' backedge_count='5200' iicount='170' level='3' stamp='0.094'>
<phase name='buildIR' stamp='0.094'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' iicount='171'/>
<parse method='832'  stamp='0.094'>
<bc code='183' bci='66'/>
<method id='834' holder='730' name='indexOfSupplementary' return='722' arguments='722 722' flags='2' bytes='71' iicount='1'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.094'/>
</parse>
<phase name='optimize_blocks' stamp='0.094'>
<phase_done name='optimize_blocks' stamp='0.094'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.094'>
<phase_done name='rangeCheckElimination' stamp='0.094'/>
</phase>
<phase name='optimize_null_checks' stamp='0.094'>
<phase_done name='optimize_null_checks' stamp='0.094'/>
</phase>
<phase_done name='buildIR' stamp='0.094'/>
</phase>
<phase name='emit_lir' stamp='0.094'>
<phase name='lirGeneration' stamp='0.094'>
<phase_done name='lirGeneration' stamp='0.094'/>
</phase>
<phase name='linearScan' stamp='0.094'>
<phase_done name='linearScan' stamp='0.094'/>
</phase>
<phase_done name='emit_lir' stamp='0.094'/>
</phase>
<phase name='codeemit' stamp='0.094'>
<phase_done name='codeemit' stamp='0.094'/>
</phase>
<phase name='codeinstall' stamp='0.094'>
<phase_done name='codeinstall' stamp='0.097'/>
</phase>
<code_cache total_blobs='232' nmethods='8' adapters='139' free_code_cache='250557952'/>
<task_done success='1' nmsize='904' count='214' backedge_count='7331' stamp='0.097'/>
</task>
<task compile_id='11' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1781' iicount='1781' level='3' stamp='0.097'>
<phase name='buildIR' stamp='0.097'>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='832' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='1781'/>
<parse method='832'  stamp='0.097'>
<parse_done stamp='0.097'/>
</parse>
<phase name='optimize_blocks' stamp='0.097'>
<phase_done name='optimize_blocks' stamp='0.097'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.097'>
<phase_done name='rangeCheckElimination' stamp='0.097'/>
</phase>
<phase name='optimize_null_checks' stamp='0.097'>
<phase_done name='optimize_null_checks' stamp='0.097'/>
</phase>
<phase_done name='buildIR' stamp='0.097'/>
</phase>
<phase name='emit_lir' stamp='0.097'>
<phase name='lirGeneration' stamp='0.097'>
<phase_done name='lirGeneration' stamp='0.097'/>
</phase>
<phase name='linearScan' stamp='0.097'>
<phase_done name='linearScan' stamp='0.097'/>
</phase>
<phase_done name='emit_lir' stamp='0.097'/>
</phase>
<phase name='codeemit' stamp='0.097'>
<phase_done name='codeemit' stamp='0.097'/>
</phase>
<phase name='codeinstall' stamp='0.097'>
<phase_done name='codeinstall' stamp='0.097'/>
</phase>
<code_cache total_blobs='233' nmethods='9' adapters='139' free_code_cache='250557056'/>
<task_done success='1' nmsize='336' count='1783' stamp='0.097'/>
</task>
<task compile_id='9' method='java/lang/String length ()I' bytes='6' count='677' iicount='677' level='3' stamp='0.097'>
<phase name='buildIR' stamp='0.097'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='length' return='722' flags='1' bytes='6' iicount='677'/>
<parse method='832'  stamp='0.097'>
<parse_done stamp='0.097'/>
</parse>
<phase name='optimize_blocks' stamp='0.097'>
<phase_done name='optimize_blocks' stamp='0.097'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.097'>
<phase_done name='rangeCheckElimination' stamp='0.097'/>
</phase>
<phase name='optimize_null_checks' stamp='0.097'>
<phase_done name='optimize_null_checks' stamp='0.097'/>
</phase>
<phase_done name='buildIR' stamp='0.097'/>
</phase>
<phase name='emit_lir' stamp='0.097'>
<phase name='lirGeneration' stamp='0.097'>
<phase_done name='lirGeneration' stamp='0.097'/>
</phase>
<phase name='linearScan' stamp='0.097'>
<phase_done name='linearScan' stamp='0.097'/>
</phase>
<phase_done name='emit_lir' stamp='0.097'/>
</phase>
<phase name='codeemit' stamp='0.097'>
<phase_done name='codeemit' stamp='0.097'/>
</phase>
<phase name='codeinstall' stamp='0.097'>
<phase_done name='codeinstall' stamp='0.098'/>
</phase>
<code_cache total_blobs='234' nmethods='10' adapters='139' free_code_cache='250556096'/>
<task_done success='1' nmsize='368' count='679' stamp='0.098'/>
</task>
<task compile_id='10' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='335' iicount='335' level='3' stamp='0.098'>
<phase name='buildIR' stamp='0.098'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='832' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='335'/>
<parse method='832'  stamp='0.098'>
<bc code='183' bci='17'/>
<method id='834' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='165'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='836' name='java/util/Arrays' flags='1'/>
<method id='837' holder='836' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='170'/>
<call method='837' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='837'>
<bc code='184' bci='11'/>
<klass id='839' name='java/lang/Math' flags='17'/>
<method id='840' holder='839' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='3' compiler='C1' level='3' iicount='843'/>
<call method='840' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='840'>
<parse_done stamp='0.098'/>
</parse>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='842' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='7' compile_kind='c2n' level='0' iicount='640'/>
<call method='842' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.098'/>
</parse>
<parse_done stamp='0.098'/>
</parse>
<phase name='optimize_blocks' stamp='0.098'>
<phase_done name='optimize_blocks' stamp='0.098'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.098'>
<phase_done name='rangeCheckElimination' stamp='0.098'/>
</phase>
<phase name='optimize_null_checks' stamp='0.098'>
<phase_done name='optimize_null_checks' stamp='0.098'/>
</phase>
<phase_done name='buildIR' stamp='0.098'/>
</phase>
<phase name='emit_lir' stamp='0.098'>
<phase name='lirGeneration' stamp='0.098'>
<phase_done name='lirGeneration' stamp='0.098'/>
</phase>
<phase name='linearScan' stamp='0.098'>
<phase_done name='linearScan' stamp='0.098'/>
</phase>
<phase_done name='emit_lir' stamp='0.098'/>
</phase>
<phase name='codeemit' stamp='0.098'>
<phase_done name='codeemit' stamp='0.098'/>
</phase>
<phase name='codeinstall' stamp='0.098'>
<phase_done name='codeinstall' stamp='0.099'/>
</phase>
<code_cache total_blobs='235' nmethods='11' adapters='139' free_code_cache='250553920'/>
<task_done success='1' nmsize='1144' count='335' inlined_bytes='30' stamp='0.099'/>
</task>
<task compile_id='12' method='java/lang/String getChars (II[CI)V' bytes='62' count='258' iicount='258' level='3' stamp='0.101'>
<phase name='buildIR' stamp='0.101'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' iicount='258'/>
<parse method='832'  stamp='0.101'>
<bc code='183' bci='9'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='835' holder='834' name='&lt;init&gt;' return='724' arguments='722' unloaded='1'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='43'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='58'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='836' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='7' compile_kind='c2n' level='0' iicount='640'/>
<call method='836' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.101'/>
</parse>
<phase name='optimize_blocks' stamp='0.101'>
<phase_done name='optimize_blocks' stamp='0.101'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.101'>
<phase_done name='rangeCheckElimination' stamp='0.101'/>
</phase>
<phase name='optimize_null_checks' stamp='0.101'>
<phase_done name='optimize_null_checks' stamp='0.101'/>
</phase>
<phase_done name='buildIR' stamp='0.101'/>
</phase>
<phase name='emit_lir' stamp='0.101'>
<phase name='lirGeneration' stamp='0.101'>
<phase_done name='lirGeneration' stamp='0.101'/>
</phase>
<phase name='linearScan' stamp='0.101'>
<phase_done name='linearScan' stamp='0.101'/>
</phase>
<phase_done name='emit_lir' stamp='0.101'/>
</phase>
<phase name='codeemit' stamp='0.101'>
<phase_done name='codeemit' stamp='0.101'/>
</phase>
<phase name='codeinstall' stamp='0.101'>
<phase_done name='codeinstall' stamp='0.102'/>
</phase>
<code_cache total_blobs='240' nmethods='12' adapters='143' free_code_cache='250549568'/>
<task_done success='1' nmsize='1080' count='260' stamp='0.102'/>
</task>
<task compile_id='13' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='260' iicount='260' level='3' stamp='0.102'>
<phase name='buildIR' stamp='0.102'>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' iicount='260'/>
<parse method='832'  stamp='0.103'>
<bc code='183' bci='5'/>
<method id='834' holder='793' name='appendNull' return='793' flags='2' bytes='56' iicount='1'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<type id='722' name='int'/>
<method id='836' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='9' compiler='C1' level='3' iicount='688'/>
<call method='836' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<parse_done stamp='0.103'/>
</parse>
<bc code='183' bci='21'/>
<type id='724' name='void'/>
<method id='838' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' compile_id='10' compiler='C1' level='3' iicount='344'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='17'/>
<method id='840' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='170'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='842' name='java/util/Arrays' flags='1'/>
<method id='843' holder='842' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='175'/>
<call method='843' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='843'>
<bc code='184' bci='11'/>
<klass id='845' name='java/lang/Math' flags='17'/>
<method id='846' holder='845' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='3' compiler='C1' level='3' iicount='856'/>
<call method='846' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<parse_done stamp='0.103'/>
</parse>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='848' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='7' compile_kind='c2n' level='0' iicount='640'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.103'/>
</parse>
<parse_done stamp='0.103'/>
</parse>
<bc code='182' bci='35'/>
<method id='850' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' compile_id='12' compiler='C1' level='3' iicount='260'/>
<call method='850' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.103'/>
</parse>
<phase name='optimize_blocks' stamp='0.103'>
<phase_done name='optimize_blocks' stamp='0.103'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.103'>
<phase_done name='rangeCheckElimination' stamp='0.103'/>
</phase>
<phase name='optimize_null_checks' stamp='0.103'>
<phase_done name='optimize_null_checks' stamp='0.103'/>
</phase>
<phase_done name='buildIR' stamp='0.103'/>
</phase>
<phase name='emit_lir' stamp='0.103'>
<phase name='lirGeneration' stamp='0.103'>
<phase_done name='lirGeneration' stamp='0.103'/>
</phase>
<phase name='linearScan' stamp='0.103'>
<phase_done name='linearScan' stamp='0.103'/>
</phase>
<phase_done name='emit_lir' stamp='0.103'/>
</phase>
<phase name='codeemit' stamp='0.103'>
<phase_done name='codeemit' stamp='0.103'/>
</phase>
<phase name='codeinstall' stamp='0.103'>
<phase_done name='codeinstall' stamp='0.119'/>
</phase>
<code_cache total_blobs='241' nmethods='13' adapters='143' free_code_cache='250546048'/>
<task_done success='1' nmsize='1880' count='263' inlined_bytes='63' stamp='0.119'/>
</task>
<task compile_id='14' method='java/lang/String indexOf (I)I' bytes='7' count='260' iicount='260' level='3' stamp='0.121'>
<phase name='buildIR' stamp='0.121'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722' flags='1' bytes='7' iicount='260'/>
<parse method='832'  stamp='0.121'>
<bc code='182' bci='3'/>
<method id='834' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' compile_id='8' compiler='C1' level='3' iicount='266'/>
<call method='834' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.121'/>
</parse>
<phase name='optimize_blocks' stamp='0.121'>
<phase_done name='optimize_blocks' stamp='0.121'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.121'>
<phase_done name='rangeCheckElimination' stamp='0.121'/>
</phase>
<phase name='optimize_null_checks' stamp='0.121'>
<phase_done name='optimize_null_checks' stamp='0.121'/>
</phase>
<phase_done name='buildIR' stamp='0.121'/>
</phase>
<phase name='emit_lir' stamp='0.121'>
<phase name='lirGeneration' stamp='0.121'>
<phase_done name='lirGeneration' stamp='0.121'/>
</phase>
<phase name='linearScan' stamp='0.121'>
<phase_done name='linearScan' stamp='0.121'/>
</phase>
<phase_done name='emit_lir' stamp='0.121'/>
</phase>
<phase name='codeemit' stamp='0.121'>
<phase_done name='codeemit' stamp='0.121'/>
</phase>
<phase name='codeinstall' stamp='0.121'>
<phase_done name='codeinstall' stamp='0.122'/>
</phase>
<code_cache total_blobs='242' nmethods='14' adapters='143' free_code_cache='250544960'/>
<task_done success='1' nmsize='520' count='263' stamp='0.122'/>
</task>
<task compile_id='15' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='59' count='492' iicount='494' level='3' stamp='0.122'>
<phase name='buildIR' stamp='0.122'>
<type id='722' name='int'/>
<type id='717' name='char'/>
<klass id='832' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='833' holder='832' name='hexDigit' return='722' arguments='717' flags='8' bytes='59' iicount='517'/>
<parse method='833'  stamp='0.122'>
<bc code='183' bci='55'/>
<type id='724' name='void'/>
<klass id='835' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='836' holder='835' name='&lt;init&gt;' return='724' flags='1' bytes='5' iicount='1'/>
<call method='836' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.123'/>
</parse>
<phase name='optimize_blocks' stamp='0.123'>
<phase_done name='optimize_blocks' stamp='0.123'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.123'>
<phase_done name='rangeCheckElimination' stamp='0.123'/>
</phase>
<phase name='optimize_null_checks' stamp='0.123'>
<phase_done name='optimize_null_checks' stamp='0.123'/>
</phase>
<phase_done name='buildIR' stamp='0.123'/>
</phase>
<phase name='emit_lir' stamp='0.123'>
<phase name='lirGeneration' stamp='0.123'>
<phase_done name='lirGeneration' stamp='0.123'/>
</phase>
<phase name='linearScan' stamp='0.123'>
<phase_done name='linearScan' stamp='0.123'/>
</phase>
<phase_done name='emit_lir' stamp='0.123'/>
</phase>
<phase name='codeemit' stamp='0.123'>
<phase_done name='codeemit' stamp='0.123'/>
</phase>
<phase name='codeinstall' stamp='0.123'>
<phase_done name='codeinstall' stamp='0.124'/>
</phase>
<code_cache total_blobs='243' nmethods='15' adapters='143' free_code_cache='250543232'/>
<task_done success='1' nmsize='872' count='4064' stamp='0.124'/>
</task>
<task compile_id='17' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='276' count='128' backedge_count='4064' iicount='128' level='3' stamp='0.124'>
<phase name='buildIR' stamp='0.124'>
<klass id='834' name='java/util/UUID' flags='17'/>
<klass id='833' name='java/lang/CharSequence' flags='1537'/>
<klass id='832' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='835' holder='832' name='uuidFromCharSequence' return='834' arguments='833' flags='9' bytes='276' iicount='128'/>
<parse method='835'  stamp='0.124'>
<bc code='185' bci='1'/>
<type id='722' name='int'/>
<method id='837' holder='833' name='length' return='722' flags='1025' bytes='0' iicount='1'/>
<call method='837' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='12'/>
<klass id='838' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='839' holder='832' name='invalidUuid' return='838' arguments='833' flags='10' bytes='24' iicount='1'/>
<call method='839' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='839'>
<bc code='183' bci='10'/>
<type id='724' name='void'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='841' name='java/lang/StringBuilder' unloaded='1'/>
<method id='843' holder='841' name='&lt;init&gt;' return='724' arguments='730' unloaded='1'/>
<call method='843' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='844' holder='841' name='append' return='841' arguments='729' unloaded='1'/>
<call method='844' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='17'/>
<method id='845' holder='841' name='toString' return='730' unloaded='1'/>
<call method='845' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='20'/>
<method id='846' holder='838' name='&lt;init&gt;' return='724' arguments='730' flags='1' bytes='6' iicount='1'/>
<call method='846' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.124'/>
</parse>
<bc code='185' bci='19'/>
<type id='717' name='char'/>
<method id='848' holder='833' name='charAt' return='717' arguments='722' flags='1025' bytes='0' iicount='1'/>
<call method='848' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='185' bci='32'/>
<call method='848' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='185' bci='45'/>
<call method='848' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='185' bci='58'/>
<call method='848' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='272'/>
<type id='723' name='long'/>
<method id='849' holder='834' name='&lt;init&gt;' return='724' arguments='723 723' flags='1' bytes='15' iicount='175'/>
<call method='849' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='183' bci='1'/>
<method id='851' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='11' compiler='C1' level='3' iicount='2220'/>
<call method='851' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<parse_done stamp='0.124'/>
</parse>
<parse_done stamp='0.124'/>
</parse>
<bc code='185' bci='238'/>
<call method='848' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='243'/>
<method id='853' holder='832' name='hexDigit' return='722' arguments='717' flags='8' bytes='59' compile_id='15' compiler='C1' level='3' iicount='5632'/>
<call method='853' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='185' bci='200'/>
<call method='848' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='205'/>
<call method='853' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='185' bci='162'/>
<call method='848' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='167'/>
<call method='853' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='185' bci='124'/>
<call method='848' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='129'/>
<call method='853' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='185' bci='86'/>
<call method='848' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='91'/>
<call method='853' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='69'/>
<call method='839' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='839'>
<bc code='183' bci='10'/>
<call method='843' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='14'/>
<call method='844' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='17'/>
<call method='845' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='20'/>
<call method='846' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.125'/>
</parse>
<parse_done stamp='0.125'/>
</parse>
<phase name='optimize_blocks' stamp='0.125'>
<phase_done name='optimize_blocks' stamp='0.125'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.125'>
<phase_done name='rangeCheckElimination' stamp='0.125'/>
</phase>
<phase name='optimize_null_checks' stamp='0.125'>
<phase_done name='optimize_null_checks' stamp='0.125'/>
</phase>
<phase_done name='buildIR' stamp='0.125'/>
</phase>
<phase name='emit_lir' stamp='0.125'>
<phase name='lirGeneration' stamp='0.125'>
<phase_done name='lirGeneration' stamp='0.125'/>
</phase>
<phase name='linearScan' stamp='0.125'>
<phase_done name='linearScan' stamp='0.125'/>
</phase>
<phase_done name='emit_lir' stamp='0.125'/>
</phase>
<phase name='codeemit' stamp='0.125'>
<phase_done name='codeemit' stamp='0.125'/>
</phase>
<phase name='codeinstall' stamp='0.125'>
<phase_done name='codeinstall' stamp='0.136'/>
</phase>
<code_cache total_blobs='247' nmethods='17' adapters='143' free_code_cache='250521216'/>
<task_done success='1' nmsize='5800' count='255' backedge_count='8160' inlined_bytes='64' stamp='0.136'/>
</task>
<task compile_id='19' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='256' iicount='256' level='3' stamp='0.136'>
<phase name='buildIR' stamp='0.136'>
<klass id='833' name='java/util/UUID' flags='17'/>
<klass id='832' name='com/github/marschall/charsequences/ParseUuidCompilation' flags='1'/>
<method id='834' holder='832' name='parse' return='833' flags='0' bytes='6' iicount='256'/>
<parse method='834'  stamp='0.136'>
<bc code='184' bci='2'/>
<klass id='838' name='java/lang/CharSequence' flags='1537'/>
<klass id='837' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='839' holder='837' name='uuidFromCharSequence' return='833' arguments='838' flags='9' bytes='276' compile_id='17' compiler='C1' level='3' iicount='256'/>
<call method='839' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.136'/>
</parse>
<phase name='optimize_blocks' stamp='0.136'>
<phase_done name='optimize_blocks' stamp='0.136'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.136'>
<phase_done name='rangeCheckElimination' stamp='0.136'/>
</phase>
<phase name='optimize_null_checks' stamp='0.136'>
<phase_done name='optimize_null_checks' stamp='0.136'/>
</phase>
<phase_done name='buildIR' stamp='0.136'/>
</phase>
<phase name='emit_lir' stamp='0.136'>
<phase name='lirGeneration' stamp='0.136'>
<phase_done name='lirGeneration' stamp='0.136'/>
</phase>
<phase name='linearScan' stamp='0.136'>
<phase_done name='linearScan' stamp='0.136'/>
</phase>
<phase_done name='emit_lir' stamp='0.136'/>
</phase>
<phase name='codeemit' stamp='0.136'>
<phase_done name='codeemit' stamp='0.136'/>
</phase>
<phase name='codeinstall' stamp='0.136'>
<phase_done name='codeinstall' stamp='0.137'/>
</phase>
<code_cache total_blobs='248' nmethods='20' adapters='143' free_code_cache='250529856'/>
<task_done success='1' nmsize='392' count='704' stamp='0.137'/>
</task>
<task compile_id='21' method='java/lang/String length ()I' bytes='6' count='1556' iicount='1557' level='1' stamp='0.137'>
<phase name='buildIR' stamp='0.137'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='9' compiler='C1' level='3' iicount='1577'/>
<parse method='832'  stamp='0.137'>
<parse_done stamp='0.137'/>
</parse>
<phase name='optimize_blocks' stamp='0.137'>
<phase_done name='optimize_blocks' stamp='0.137'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.137'>
<phase_done name='rangeCheckElimination' stamp='0.137'/>
</phase>
<phase name='optimize_null_checks' stamp='0.137'>
<phase_done name='optimize_null_checks' stamp='0.137'/>
</phase>
<phase_done name='buildIR' stamp='0.137'/>
</phase>
<phase name='emit_lir' stamp='0.137'>
<phase name='lirGeneration' stamp='0.137'>
<phase_done name='lirGeneration' stamp='0.137'/>
</phase>
<phase name='linearScan' stamp='0.137'>
<phase_done name='linearScan' stamp='0.137'/>
</phase>
<phase_done name='emit_lir' stamp='0.137'/>
</phase>
<phase name='codeemit' stamp='0.137'>
<phase_done name='codeemit' stamp='0.137'/>
</phase>
<phase name='codeinstall' stamp='0.137'>
<phase_done name='codeinstall' stamp='0.138'/>
</phase>
<code_cache total_blobs='249' nmethods='21' adapters='143' free_code_cache='250529024'/>
<task_done success='1' nmsize='272' count='2929' stamp='0.138'/>
</task>
<task compile_id='24' compile_kind='osr' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='60494' iicount='1' osr_bci='9' level='3' stamp='0.184'>
<phase name='buildIR' stamp='0.184'>
<type id='724' name='void'/>
<klass id='832' name='com/github/marschall/charsequences/ParseUuidCompilation' flags='1'/>
<method id='833' holder='832' name='&lt;init&gt;' return='724' flags='1' bytes='40' iicount='1'/>
<parse method='833'  stamp='0.184'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='835' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='11' compiler='C1' level='3' iicount='62460'/>
<call method='835' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='177' bci='0'/>
<dependency type='leaf_type' ctxk='832'/>
<parse_done stamp='0.184'/>
</parse>
<bc code='182' bci='10'/>
<klass id='837' name='java/util/UUID' flags='17'/>
<method id='838' holder='832' name='parse' return='837' flags='0' bytes='6' compile_id='23' compiler='C2' level='4' iicount='60415'/>
<call method='838' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='832' x='838'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='832'/>
<parse method='838'>
<bc code='184' bci='2'/>
<klass id='842' name='java/lang/CharSequence' flags='1537'/>
<klass id='841' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='843' holder='841' name='uuidFromCharSequence' return='837' arguments='842' flags='9' bytes='276' compile_id='17' compiler='C1' level='3' iicount='60415'/>
<call method='843' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.184'/>
</parse>
<bc code='184' bci='15'/>
<type id='722' name='int'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='845' holder='735' name='identityHashCode' return='722' arguments='729' flags='265' bytes='0' compile_id='20' compile_kind='c2n' level='0' iicount='256'/>
<call method='845' instr='invokestatic'/>
<inline_fail reason='native method'/>
<bc code='182' bci='27'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='846' name='java/io/PrintStream' unloaded='1'/>
<method id='849' holder='846' name='println' return='724' arguments='730' unloaded='1'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.184'/>
</parse>
<phase name='optimize_blocks' stamp='0.184'>
<phase_done name='optimize_blocks' stamp='0.184'/>
</phase>
<phase name='optimize_null_checks' stamp='0.184'>
<phase_done name='optimize_null_checks' stamp='0.184'/>
</phase>
<phase_done name='buildIR' stamp='0.184'/>
</phase>
<phase name='emit_lir' stamp='0.184'>
<phase name='lirGeneration' stamp='0.184'>
<phase_done name='lirGeneration' stamp='0.184'/>
</phase>
<phase name='linearScan' stamp='0.184'>
<phase_done name='linearScan' stamp='0.184'/>
</phase>
<phase_done name='emit_lir' stamp='0.184'/>
</phase>
<phase name='codeemit' stamp='0.184'>
<phase_done name='codeemit' stamp='0.184'/>
</phase>
<phase name='codeinstall' stamp='0.184'>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='unique_concrete_method' ctxk='832' x='838'/>
<phase_done name='codeinstall' stamp='0.186'/>
</phase>
<code_cache total_blobs='253' nmethods='23' adapters='143' free_code_cache='250504448'/>
<task_done success='1' nmsize='1192' count='1' backedge_count='92175' inlined_bytes='7' stamp='0.186'/>
</task>
<task compile_id='25' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='92602' iicount='1' level='3' stamp='0.233'>
<phase name='buildIR' stamp='0.233'>
<type id='724' name='void'/>
<klass id='832' name='com/github/marschall/charsequences/ParseUuidCompilation' flags='1'/>
<method id='833' holder='832' name='&lt;init&gt;' return='724' flags='1' bytes='40' iicount='1'/>
<parse method='833'  stamp='0.233'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='835' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='11' compiler='C1' level='3' iicount='62460'/>
<call method='835' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='177' bci='0'/>
<dependency type='leaf_type' ctxk='832'/>
<parse_done stamp='0.233'/>
</parse>
<bc code='182' bci='10'/>
<klass id='837' name='java/util/UUID' flags='17'/>
<method id='838' holder='832' name='parse' return='837' flags='0' bytes='6' compile_id='23' compiler='C2' level='4' iicount='61996'/>
<call method='838' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='832'/>
<parse method='838'>
<bc code='184' bci='2'/>
<klass id='842' name='java/lang/CharSequence' flags='1537'/>
<klass id='841' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='843' holder='841' name='uuidFromCharSequence' return='837' arguments='842' flags='9' bytes='276' compile_id='22' compiler='C2' level='4' iicount='60415'/>
<call method='843' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.233'/>
</parse>
<bc code='184' bci='15'/>
<type id='722' name='int'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='845' holder='735' name='identityHashCode' return='722' arguments='729' flags='265' bytes='0' compile_id='20' compile_kind='c2n' level='0' iicount='256'/>
<call method='845' instr='invokestatic'/>
<inline_fail reason='native method'/>
<bc code='182' bci='27'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='846' name='java/io/PrintStream' flags='1'/>
<method id='849' holder='846' name='println' return='724' arguments='730' unloaded='1'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.233'/>
</parse>
<phase name='optimize_blocks' stamp='0.233'>
<phase_done name='optimize_blocks' stamp='0.233'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.233'>
<phase_done name='rangeCheckElimination' stamp='0.233'/>
</phase>
<phase name='optimize_null_checks' stamp='0.233'>
<phase_done name='optimize_null_checks' stamp='0.233'/>
</phase>
<phase_done name='buildIR' stamp='0.233'/>
</phase>
<phase name='emit_lir' stamp='0.233'>
<phase name='lirGeneration' stamp='0.233'>
<phase_done name='lirGeneration' stamp='0.233'/>
</phase>
<phase name='linearScan' stamp='0.233'>
<phase_done name='linearScan' stamp='0.233'/>
</phase>
<phase_done name='emit_lir' stamp='0.233'/>
</phase>
<phase name='codeemit' stamp='0.233'>
<phase_done name='codeemit' stamp='0.233'/>
</phase>
<phase name='codeinstall' stamp='0.233'>
<dependency type='leaf_type' ctxk='832'/>
<phase_done name='codeinstall' stamp='0.235'/>
</phase>
<code_cache total_blobs='253' nmethods='25' adapters='143' free_code_cache='250506688'/>
<task_done success='1' nmsize='1096' count='1' backedge_count='131698' inlined_bytes='7' stamp='0.235'/>
</task>
<fragment>
<![CDATA[
<task compile_id='27' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='257' iicount='257' level='3' stamp='0.295'>
<phase name='buildIR' stamp='0.295'>
<klass id='741' name='java/lang/SecurityManager' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='832' holder='735' name='getSecurityManager' return='741' flags='9' bytes='4' iicount='257'/>
<parse method='832'  stamp='0.295'>
<parse_done stamp='0.295'/>
</parse>
<phase name='optimize_blocks' stamp='0.295'>
<phase_done name='optimize_blocks' stamp='0.295'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.295'>
<phase_done name='rangeCheckElimination' stamp='0.295'/>
</phase>
<phase name='optimize_null_checks' stamp='0.295'>
<phase_done name='optimize_null_checks' stamp='0.295'/>
</phase>
<phase_done name='buildIR' stamp='0.295'/>
</phase>
<phase name='emit_lir' stamp='0.295'>
<phase name='lirGeneration' stamp='0.295'>
<phase_done name='lirGeneration' stamp='0.295'/>
</phase>
<phase name='linearScan' stamp='0.295'>
<phase_done name='linearScan' stamp='0.295'/>
</phase>
<phase_done name='emit_lir' stamp='0.295'/>
</phase>
<phase name='codeemit' stamp='0.295'>
<phase_done name='codeemit' stamp='0.295'/>
</phase>
<phase name='codeinstall' stamp='0.295'>
]]>
</fragment>
</compilation_log>
<compilation_log thread='139745422358272'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread2' thread='139745422358272' process='4299' stamp='0.063'/>
]]>
</fragment>
</compilation_log>
<compilation_log thread='139745423410944'>
<start_compile_thread name='C2 CompilerThread1' thread='139745423410944' process='4299' stamp='0.063'/>
<task compile_id='18' method='com/github/marschall/charsequences/CharSequences hexDigit (C)I' bytes='59' count='5632' iicount='5632' stamp='0.124'>
<phase name='parse' nodes='3' live='3' stamp='0.124'>
<type id='722' name='int'/>
<type id='717' name='char'/>
<klass id='832' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='833' holder='832' name='hexDigit' return='722' arguments='717' flags='8' bytes='59' compile_id='15' compiler='C1' level='3' iicount='5632'/>
<klass id='835' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='833' bci='51' reason='unloaded' action='reinterpret' index='172' klass='835'/>
<parse method='833' uses='5632' stamp='0.124'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='5631' cnt='5631' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='1760' not_taken='3871' cnt='5631' prob='0.312555'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='78' live='73' memory='31896' stamp='0.124'/>
</parse>
<phase_done name='parse' nodes='79' live='51' stamp='0.124'/>
</phase>
<phase name='optimizer' nodes='79' live='51' stamp='0.124'>
<phase name='ccp' nodes='79' live='50' stamp='0.124'>
<phase_done name='ccp' nodes='79' live='50' stamp='0.124'/>
</phase>
<phase name='idealLoop' nodes='79' live='50' stamp='0.124'>
<phase_done name='idealLoop' nodes='79' live='50' stamp='0.125'/>
</phase>
<phase_done name='optimizer' nodes='81' live='52' stamp='0.125'/>
</phase>
<phase name='matcher' nodes='81' live='52' stamp='0.125'>
<phase_done name='matcher' nodes='52' live='52' stamp='0.125'/>
</phase>
<phase name='regalloc' nodes='67' live='67' stamp='0.125'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='78' live='72' stamp='0.125'/>
</phase>
<phase name='output' nodes='78' live='72' stamp='0.125'>
<phase_done name='output' nodes='91' live='80' stamp='0.125'/>
</phase>
<code_cache total_blobs='247' nmethods='16' adapters='143' free_code_cache='250525504'/>
<task_done success='1' nmsize='152' count='5632' stamp='0.125'/>
</task>
<task compile_id='23' method='com/github/marschall/charsequences/ParseUuidCompilation parse ()Ljava/util/UUID;' bytes='6' count='5398' iicount='5398' stamp='0.140'>
<phase name='parse' nodes='3' live='3' stamp='0.140'>
<klass id='833' name='java/util/UUID' flags='17'/>
<klass id='832' name='com/github/marschall/charsequences/ParseUuidCompilation' flags='1'/>
<method id='834' holder='832' name='parse' return='833' flags='0' bytes='6' compile_id='19' compiler='C1' level='3' iicount='5426'/>
<parse method='834' uses='5426' stamp='0.140'>
<bc code='184' bci='2'/>
<klass id='838' name='java/lang/CharSequence' flags='1537'/>
<klass id='837' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='839' holder='837' name='uuidFromCharSequence' return='833' arguments='838' flags='9' bytes='276' compile_id='17' compiler='C1' level='3' iicount='5546'/>
<call method='839' count='5210' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='5425' stamp='0.140'>
<bc code='185' bci='1'/>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='722' name='int'/>
<method id='847' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='21' compiler='C1' level='1' iicount='2929'/>
<dependency type='unique_concrete_method' ctxk='730' x='847'/>
<call method='847' count='6411' prof_factor='0.978182' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='847' uses='6271' stamp='0.142'>
<parse_done nodes='53' live='52' memory='27744' stamp='0.142'/>
</parse>
<bc code='159' bci='8'/>
<branch target_bci='16' taken='6411' not_taken='0' cnt='6411' prob='always'/>
<bc code='185' bci='19'/>
<type id='717' name='char'/>
<method id='850' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='16' compiler='C2' level='4' iicount='13097'/>
<dependency type='unique_concrete_method' ctxk='730' x='850'/>
<call method='850' count='7340' prof_factor='0.978182' inline='1'/>
<klass id='851' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='850' bci='13' reason='unloaded' action='reinterpret' index='6' klass='851'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='7180' stamp='0.142'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='13097' cnt='13097' prob='never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='13097' not_taken='0' cnt='13097' prob='always'/>
<bc code='52' bci='27'/>
<observe that='!need_range_check'/>
<parse_done nodes='104' live='102' memory='35376' stamp='0.142'/>
</parse>
<bc code='160' bci='26'/>
<branch target_bci='68' taken='0' not_taken='7340' cnt='7340' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='185' bci='32'/>
<dependency type='unique_concrete_method' ctxk='730' x='850'/>
<call method='850' count='7340' prof_factor='0.978182' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='7180' stamp='0.142'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='13097' cnt='13097' prob='never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='13097' not_taken='0' cnt='13097' prob='always'/>
<bc code='52' bci='27'/>
<observe that='!need_range_check'/>
<parse_done nodes='156' live='152' memory='45728' stamp='0.142'/>
</parse>
<bc code='160' bci='39'/>
<branch target_bci='68' taken='0' not_taken='7340' cnt='7340' prob='never'/>
<uncommon_trap bci='39' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='185' bci='45'/>
<dependency type='unique_concrete_method' ctxk='730' x='850'/>
<call method='850' count='7340' prof_factor='0.978182' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='7180' stamp='0.142'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='13097' cnt='13097' prob='never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='13097' not_taken='0' cnt='13097' prob='always'/>
<bc code='52' bci='27'/>
<observe that='!need_range_check'/>
<parse_done nodes='206' live='200' memory='52576' stamp='0.142'/>
</parse>
<bc code='160' bci='52'/>
<branch target_bci='68' taken='0' not_taken='7340' cnt='7340' prob='never'/>
<uncommon_trap bci='52' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='185' bci='58'/>
<dependency type='unique_concrete_method' ctxk='730' x='850'/>
<call method='850' count='7340' prof_factor='0.978182' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='7180' stamp='0.142'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='13097' cnt='13097' prob='never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='13097' not_taken='0' cnt='13097' prob='always'/>
<bc code='52' bci='27'/>
<observe that='!need_range_check'/>
<parse_done nodes='256' live='248' memory='59920' stamp='0.142'/>
</parse>
<bc code='159' bci='65'/>
<branch target_bci='73' taken='7340' not_taken='0' cnt='7340' prob='always'/>
<uncommon_trap bci='65' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='111'/>
<branch target_bci='83' taken='58720' not_taken='7340' cnt='7340' prob='0.888889'/>
<uncommon_trap bci='83' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='83' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='86'/>
<dependency type='unique_concrete_method' ctxk='730' x='850'/>
<call method='850' count='58720' prof_factor='0.978182' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='57439' stamp='0.142'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='13097' cnt='13097' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='13097' not_taken='0' cnt='13097' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='384' live='369' memory='88360' stamp='0.142'/>
</parse>
<bc code='184' bci='91'/>
<method id='844' holder='837' name='hexDigit' return='722' arguments='717' flags='8' bytes='59' compile_id='18' compiler='C2' level='4' iicount='5632'/>
<call method='844' count='58720' prof_factor='0.978182' inline='1'/>
<klass id='842' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='844' bci='51' reason='unloaded' action='reinterpret' index='172' klass='842'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='57439' stamp='0.142'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='5632' cnt='5632' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='1760' not_taken='3872' cnt='5632' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='450' live='430' memory='98984' stamp='0.142'/>
</parse>
<bc code='161' bci='111'/>
<branch target_bci='83' taken='58720' not_taken='7340' cnt='66060' prob='0.888889'/>
<bc code='161' bci='149'/>
<branch target_bci='121' taken='29360' not_taken='7340' cnt='7340' prob='0.8'/>
<uncommon_trap bci='121' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='121' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='124'/>
<dependency type='unique_concrete_method' ctxk='730' x='850'/>
<call method='850' count='29360' prof_factor='0.978182' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='28719' stamp='0.143'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='13097' cnt='13097' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='13097' not_taken='0' cnt='13097' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='576' live='550' memory='131304' stamp='0.143'/>
</parse>
<bc code='184' bci='129'/>
<call method='844' count='29360' prof_factor='0.978182' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='28719' stamp='0.143'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='5632' cnt='5632' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='1760' not_taken='3872' cnt='5632' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='635' live='604' memory='140280' stamp='0.143'/>
</parse>
<bc code='161' bci='149'/>
<branch target_bci='121' taken='29360' not_taken='7340' cnt='36700' prob='0.8'/>
<bc code='161' bci='187'/>
<branch target_bci='159' taken='29360' not_taken='7340' cnt='7340' prob='0.8'/>
<uncommon_trap bci='159' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='159' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='162'/>
<dependency type='unique_concrete_method' ctxk='730' x='850'/>
<call method='850' count='29360' prof_factor='0.978182' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='28719' stamp='0.143'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='13097' cnt='13097' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='13097' not_taken='0' cnt='13097' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='760' live='723' memory='160008' stamp='0.143'/>
</parse>
<bc code='184' bci='167'/>
<call method='844' count='29360' prof_factor='0.978182' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='28719' stamp='0.143'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='5632' cnt='5632' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='1760' not_taken='3872' cnt='5632' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='819' live='777' memory='169272' stamp='0.143'/>
</parse>
<bc code='161' bci='187'/>
<branch target_bci='159' taken='29360' not_taken='7340' cnt='36700' prob='0.8'/>
<bc code='161' bci='225'/>
<branch target_bci='197' taken='29360' not_taken='7340' cnt='7340' prob='0.8'/>
<uncommon_trap bci='197' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='197' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='200'/>
<dependency type='unique_concrete_method' ctxk='730' x='850'/>
<call method='850' count='29360' prof_factor='0.978182' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='28719' stamp='0.143'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='13097' cnt='13097' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='13097' not_taken='0' cnt='13097' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='944' live='896' memory='189704' stamp='0.143'/>
</parse>
<bc code='184' bci='205'/>
<call method='844' count='29360' prof_factor='0.978182' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='28719' stamp='0.143'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='5632' cnt='5632' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='1760' not_taken='3872' cnt='5632' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='1003' live='950' memory='199040' stamp='0.143'/>
</parse>
<bc code='161' bci='225'/>
<branch target_bci='197' taken='29360' not_taken='7340' cnt='36700' prob='0.8'/>
<bc code='161' bci='263'/>
<branch target_bci='235' taken='88080' not_taken='7340' cnt='7340' prob='0.923077'/>
<uncommon_trap bci='235' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='235' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='238'/>
<dependency type='unique_concrete_method' ctxk='730' x='850'/>
<call method='850' count='88080' prof_factor='0.978182' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='86158' stamp='0.143'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='13097' cnt='13097' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='13097' not_taken='0' cnt='13097' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='1128' live='1069' memory='247648' stamp='0.143'/>
</parse>
<bc code='184' bci='243'/>
<call method='844' count='88080' prof_factor='0.978182' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='86158' stamp='0.143'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='5632' cnt='5632' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='1760' not_taken='3872' cnt='5632' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='1187' live='1123' memory='256528' stamp='0.143'/>
</parse>
<bc code='161' bci='263'/>
<branch target_bci='235' taken='88080' not_taken='7340' cnt='95420' prob='0.923077'/>
<bc code='183' bci='272'/>
<type id='724' name='void'/>
<type id='723' name='long'/>
<method id='845' holder='833' name='&lt;init&gt;' return='724' arguments='723 723' flags='1' bytes='15' iicount='5722'/>
<call method='845' count='7340' prof_factor='0.978182' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='7180' stamp='0.143'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='854' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='11' compiler='C1' level='3' iicount='12836'/>
<call method='854' count='10637' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='854' uses='10637' stamp='0.143'>
<parse_done nodes='1261' live='1196' memory='269496' stamp='0.143'/>
</parse>
<parse_done nodes='1273' live='1207' memory='271272' stamp='0.143'/>
</parse>
<parse_done nodes='1273' live='1206' memory='271400' stamp='0.143'/>
</parse>
<parse_done nodes='1275' live='1207' memory='272280' stamp='0.143'/>
</parse>
<phase_done name='parse' nodes='1277' live='632' stamp='0.144'/>
</phase>
<phase name='optimizer' nodes='1277' live='632' stamp='0.144'>
<phase name='idealLoop' nodes='1283' live='573' stamp='0.144'>
<loop_tree>
<loop idx='1293' >
</loop>
<loop idx='1299' >
</loop>
<loop idx='1305' >
</loop>
<loop idx='1311' >
</loop>
<loop idx='1317' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1325' live='456' stamp='0.144'/>
</phase>
<phase name='escapeAnalysis' nodes='1325' live='456' stamp='0.144'>
<phase name='connectionGraph' nodes='1327' live='458' stamp='0.144'>
<phase_done name='connectionGraph' nodes='1327' live='458' stamp='0.144'/>
</phase>
<phase_done name='escapeAnalysis' nodes='1327' live='458' stamp='0.144'/>
</phase>
<phase name='idealLoop' nodes='1327' live='458' stamp='0.144'>
<loop_tree>
<loop idx='1293' inner_loop='1' >
</loop>
<loop idx='1299' inner_loop='1' >
</loop>
<loop idx='1305' inner_loop='1' >
</loop>
<loop idx='1311' inner_loop='1' >
</loop>
<loop idx='1317' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1341' live='453' stamp='0.145'/>
</phase>
<phase name='idealLoop' nodes='1341' live='453' stamp='0.145'>
<loop_tree>
<loop idx='1498' inner_loop='1' main_loop='1498' >
</loop>
<loop idx='1556' inner_loop='1' >
</loop>
<loop idx='1614' inner_loop='1' >
</loop>
<loop idx='1684' inner_loop='1' >
</loop>
<loop idx='1917' inner_loop='1' main_loop='1917' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2001' live='953' stamp='0.145'/>
</phase>
<phase name='idealLoop' nodes='2001' live='953' stamp='0.145'>
<loop_tree>
<loop idx='1429' inner_loop='1' pre_loop='1293' >
</loop>
<loop idx='1498' inner_loop='1' main_loop='1498' >
</loop>
<loop idx='1363' inner_loop='1' post_loop='1293' >
</loop>
<loop idx='2041' inner_loop='1' >
</loop>
<loop idx='2142' inner_loop='1' >
</loop>
<loop idx='2254' inner_loop='1' >
</loop>
<loop idx='1823' inner_loop='1' pre_loop='1317' >
</loop>
<loop idx='1917' inner_loop='1' main_loop='1917' >
</loop>
<loop idx='1747' inner_loop='1' post_loop='1317' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2382' live='1178' stamp='0.146'/>
</phase>
<phase name='ccp' nodes='2382' live='1178' stamp='0.147'>
<phase_done name='ccp' nodes='2382' live='1178' stamp='0.147'/>
</phase>
<phase name='idealLoop' nodes='2383' live='1178' stamp='0.147'>
<loop_tree>
<loop idx='1429' inner_loop='1' pre_loop='1293' >
</loop>
<loop idx='1498' inner_loop='1' main_loop='1498' >
</loop>
<loop idx='1363' inner_loop='1' post_loop='1293' >
</loop>
<loop idx='1823' inner_loop='1' pre_loop='1317' >
</loop>
<loop idx='1917' inner_loop='1' main_loop='1917' >
</loop>
<loop idx='1747' inner_loop='1' post_loop='1317' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2389' live='1097' stamp='0.150'/>
</phase>
<phase name='idealLoop' nodes='2389' live='1097' stamp='0.150'>
<loop_tree>
<loop idx='1429' inner_loop='1' pre_loop='1293' >
</loop>
<loop idx='1498' inner_loop='1' main_loop='1498' >
</loop>
<loop idx='1363' inner_loop='1' post_loop='1293' >
</loop>
<loop idx='1823' inner_loop='1' pre_loop='1317' >
</loop>
<loop idx='1917' inner_loop='1' main_loop='1917' >
</loop>
<loop idx='1747' inner_loop='1' post_loop='1317' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2390' live='1031' stamp='0.151'/>
</phase>
<phase_done name='optimizer' nodes='2466' live='1084' stamp='0.151'/>
</phase>
<phase name='matcher' nodes='2466' live='1084' stamp='0.151'>
<phase_done name='matcher' nodes='1041' live='1041' stamp='0.156'/>
</phase>
<phase name='regalloc' nodes='1394' live='1394' stamp='0.156'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='1588' live='1516' stamp='0.160'/>
</phase>
<phase name='output' nodes='1588' live='1516' stamp='0.160'>
<phase_done name='output' nodes='1686' live='1538' stamp='0.160'/>
</phase>
<dependency type='unique_concrete_method' ctxk='730' x='847'/>
<dependency type='unique_concrete_method' ctxk='730' x='850'/>
<code_cache total_blobs='252' nmethods='22' adapters='143' free_code_cache='250510720'/>
<task_done success='1' nmsize='2424' count='60415' inlined_bytes='854' stamp='0.184'/>
</task>
</compilation_log>
<compilation_log thread='139745424463616'>
<start_compile_thread name='C2 CompilerThread0' thread='139745424463616' process='4299' stamp='0.060'/>
<task compile_id='16' method='java/lang/String charAt (I)C' bytes='29' count='5742' iicount='5746' stamp='0.123'>
<phase name='parse' nodes='3' live='3' stamp='0.123'>
<type id='717' name='char'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='6' compiler='C1' level='3' iicount='5859'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='832' bci='13' reason='unloaded' action='reinterpret' index='6' klass='834'/>
<parse method='832' uses='5859' stamp='0.124'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='5853' cnt='5853' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='5853' not_taken='0' cnt='5853' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='102' live='97' memory='35040' stamp='0.124'/>
</parse>
<phase_done name='parse' nodes='103' live='63' stamp='0.124'/>
</phase>
<phase name='optimizer' nodes='103' live='63' stamp='0.124'>
<phase name='ccp' nodes='103' live='63' stamp='0.124'>
<phase_done name='ccp' nodes='103' live='63' stamp='0.124'/>
</phase>
<phase name='idealLoop' nodes='103' live='63' stamp='0.124'>
<phase_done name='idealLoop' nodes='103' live='63' stamp='0.124'/>
</phase>
<phase_done name='optimizer' nodes='107' live='63' stamp='0.124'/>
</phase>
<phase name='matcher' nodes='107' live='63' stamp='0.124'>
<phase_done name='matcher' nodes='55' live='55' stamp='0.124'/>
</phase>
<phase name='regalloc' nodes='70' live='69' stamp='0.125'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='80' live='75' stamp='0.125'/>
</phase>
<phase name='output' nodes='80' live='75' stamp='0.125'>
<phase_done name='output' nodes='94' live='86' stamp='0.125'/>
</phase>
<code_cache total_blobs='247' nmethods='18' adapters='143' free_code_cache='250526336'/>
<task_done success='1' nmsize='216' count='13097' stamp='0.136'/>
</task>
<task compile_id='22' method='com/github/marschall/charsequences/CharSequences uuidFromCharSequence (Ljava/lang/CharSequence;)Ljava/util/UUID;' bytes='276' count='822' backedge_count='29154' iicount='823' stamp='0.137'>
<phase name='parse' nodes='3' live='3' stamp='0.137'>
<klass id='834' name='java/util/UUID' flags='17'/>
<klass id='833' name='java/lang/CharSequence' flags='1537'/>
<klass id='832' name='com/github/marschall/charsequences/CharSequences' flags='17'/>
<method id='835' holder='832' name='uuidFromCharSequence' return='834' arguments='833' flags='9' bytes='276' compile_id='17' compiler='C1' level='3' iicount='846'/>
<parse method='835' uses='846' stamp='0.138'>
<bc code='185' bci='1'/>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='722' name='int'/>
<method id='837' holder='833' name='length' return='722' flags='1025' bytes='0' iicount='1'/>
<call method='837' count='755' prof_factor='1' virtual='1' inline='1' receiver='730' receiver_count='755'/>
<method id='843' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='21' compiler='C1' level='1' iicount='2929'/>
<call method='843' count='755' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='1' klass='730'/>
<uncommon_trap bci='1' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='1' reason='class_check' action='maybe_recompile' comment='monomorphic vcall checkcast'/>
<parse method='843' uses='755' stamp='0.138'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='88' live='84' memory='34376' stamp='0.138'/>
</parse>
<bc code='159' bci='8'/>
<branch target_bci='16' taken='755' not_taken='0' cnt='755' prob='always'/>
<uncommon_trap bci='8' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='185' bci='19'/>
<type id='717' name='char'/>
<method id='845' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='16' compiler='C2' level='4' iicount='13097'/>
<dependency type='unique_concrete_method' ctxk='730' x='845'/>
<call method='845' count='755' prof_factor='1' inline='1'/>
<klass id='846' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='845' bci='13' reason='unloaded' action='reinterpret' index='6' klass='846'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='755' stamp='0.138'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='13097' cnt='13097' prob='never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='13097' not_taken='0' cnt='13097' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='174' live='166' memory='48992' stamp='0.138'/>
</parse>
<bc code='160' bci='26'/>
<branch target_bci='68' taken='0' not_taken='755' cnt='755' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='185' bci='32'/>
<dependency type='unique_concrete_method' ctxk='730' x='845'/>
<call method='845' count='755' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='755' stamp='0.138'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='13097' cnt='13097' prob='never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='13097' not_taken='0' cnt='13097' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='255' live='243' memory='59728' stamp='0.138'/>
</parse>
<bc code='160' bci='39'/>
<branch target_bci='68' taken='0' not_taken='755' cnt='755' prob='never'/>
<uncommon_trap bci='39' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='185' bci='45'/>
<dependency type='unique_concrete_method' ctxk='730' x='845'/>
<call method='845' count='755' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='755' stamp='0.138'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='13097' cnt='13097' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='13097' not_taken='0' cnt='13097' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='345' live='328' memory='79744' stamp='0.138'/>
</parse>
<bc code='160' bci='52'/>
<branch target_bci='68' taken='0' not_taken='755' cnt='755' prob='never'/>
<uncommon_trap bci='52' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='185' bci='58'/>
<dependency type='unique_concrete_method' ctxk='730' x='845'/>
<call method='845' count='755' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='755' stamp='0.138'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='13097' cnt='13097' prob='never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='13097' not_taken='0' cnt='13097' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='425' live='404' memory='91600' stamp='0.139'/>
</parse>
<bc code='159' bci='65'/>
<branch target_bci='73' taken='755' not_taken='0' cnt='755' prob='always'/>
<uncommon_trap bci='65' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='111'/>
<branch target_bci='83' taken='6040' not_taken='755' cnt='755' prob='0.888889'/>
<uncommon_trap bci='83' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='83' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='86'/>
<dependency type='unique_concrete_method' ctxk='730' x='845'/>
<call method='845' count='6040' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='6040' stamp='0.139'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='13097' cnt='13097' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='13097' not_taken='0' cnt='13097' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='569' live='540' memory='127568' stamp='0.139'/>
</parse>
<bc code='184' bci='91'/>
<method id='841' holder='832' name='hexDigit' return='722' arguments='717' flags='8' bytes='59' compile_id='18' compiler='C2' level='4' iicount='5632'/>
<call method='841' count='6040' prof_factor='1' inline='1'/>
<klass id='839' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='841' bci='51' reason='unloaded' action='reinterpret' index='172' klass='839'/>
<inline_success reason='inline (hot)'/>
<parse method='841' uses='6040' stamp='0.139'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='5632' cnt='5632' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='1760' not_taken='3872' cnt='5632' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='635' live='601' memory='137704' stamp='0.139'/>
</parse>
<bc code='161' bci='111'/>
<branch target_bci='83' taken='6040' not_taken='755' cnt='6795' prob='0.888889'/>
<bc code='161' bci='149'/>
<branch target_bci='121' taken='3018' not_taken='754' cnt='755' prob='0.800106'/>
<uncommon_trap bci='121' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='121' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='124'/>
<dependency type='unique_concrete_method' ctxk='730' x='845'/>
<call method='845' count='3018' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='3018' stamp='0.139'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='13097' cnt='13097' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='13097' not_taken='0' cnt='13097' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='777' live='736' memory='158792' stamp='0.139'/>
</parse>
<bc code='184' bci='129'/>
<call method='841' count='3018' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='841' uses='3018' stamp='0.139'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='5632' cnt='5632' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='1760' not_taken='3872' cnt='5632' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='836' live='790' memory='169008' stamp='0.139'/>
</parse>
<bc code='161' bci='149'/>
<branch target_bci='121' taken='3018' not_taken='754' cnt='3772' prob='0.800106'/>
<bc code='161' bci='187'/>
<branch target_bci='159' taken='3016' not_taken='754' cnt='754' prob='0.8'/>
<uncommon_trap bci='159' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='159' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='162'/>
<dependency type='unique_concrete_method' ctxk='730' x='845'/>
<call method='845' count='3016' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='3016' stamp='0.139'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='13097' cnt='13097' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='13097' not_taken='0' cnt='13097' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='977' live='924' memory='190592' stamp='0.139'/>
</parse>
<bc code='184' bci='167'/>
<call method='841' count='3016' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='841' uses='3016' stamp='0.139'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='5632' cnt='5632' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='1760' not_taken='3872' cnt='5632' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='1036' live='978' memory='225064' stamp='0.139'/>
</parse>
<bc code='161' bci='187'/>
<branch target_bci='159' taken='3016' not_taken='754' cnt='3770' prob='0.8'/>
<bc code='161' bci='225'/>
<branch target_bci='197' taken='3016' not_taken='754' cnt='754' prob='0.8'/>
<uncommon_trap bci='197' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='197' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='200'/>
<dependency type='unique_concrete_method' ctxk='730' x='845'/>
<call method='845' count='3016' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='3016' stamp='0.139'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='13097' cnt='13097' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='13097' not_taken='0' cnt='13097' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='1177' live='1112' memory='250688' stamp='0.139'/>
</parse>
<bc code='184' bci='205'/>
<call method='841' count='3016' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='841' uses='3016' stamp='0.139'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='5632' cnt='5632' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='1760' not_taken='3872' cnt='5632' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='1236' live='1166' memory='259936' stamp='0.139'/>
</parse>
<bc code='161' bci='225'/>
<branch target_bci='197' taken='3016' not_taken='754' cnt='3770' prob='0.8'/>
<bc code='161' bci='263'/>
<branch target_bci='235' taken='9048' not_taken='754' cnt='754' prob='0.923077'/>
<uncommon_trap bci='235' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='235' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='185' bci='238'/>
<dependency type='unique_concrete_method' ctxk='730' x='845'/>
<call method='845' count='9048' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='9048' stamp='0.139'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='13097' cnt='13097' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='13097' not_taken='0' cnt='13097' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='1377' live='1300' memory='281256' stamp='0.139'/>
</parse>
<bc code='184' bci='243'/>
<call method='841' count='9048' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='841' uses='9048' stamp='0.139'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='0' not_taken='5632' cnt='5632' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='9'/>
<branch target_bci='17' taken='1760' not_taken='3872' cnt='5632' prob='0.3125'/>
<bc code='161' bci='20'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='20' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='26'/>
<branch target_bci='34' taken='0' not_taken='1760' cnt='1760' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='1436' live='1354' memory='290616' stamp='0.139'/>
</parse>
<bc code='161' bci='263'/>
<branch target_bci='235' taken='9048' not_taken='754' cnt='9802' prob='0.923077'/>
<bc code='183' bci='272'/>
<type id='724' name='void'/>
<type id='723' name='long'/>
<method id='842' holder='834' name='&lt;init&gt;' return='724' arguments='723 723' flags='1' bytes='15' iicount='2097'/>
<call method='842' count='754' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='754' stamp='0.140'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='849' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='11' compiler='C1' level='3' iicount='6666'/>
<call method='849' count='4466' prof_factor='0.359561' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='1606' stamp='0.140'>
<parse_done nodes='1509' live='1426' memory='303024' stamp='0.140'/>
</parse>
<parse_done nodes='1521' live='1437' memory='304864' stamp='0.140'/>
</parse>
<parse_done nodes='1521' live='1436' memory='304992' stamp='0.140'/>
</parse>
<phase_done name='parse' nodes='1523' live='819' stamp='0.140'/>
</phase>
<phase name='optimizer' nodes='1523' live='819' stamp='0.140'>
<phase name='idealLoop' nodes='1552' live='717' stamp='0.140'>
<loop_tree>
<loop idx='1562' >
</loop>
<loop idx='1568' >
</loop>
<loop idx='1574' >
</loop>
<loop idx='1580' >
</loop>
<loop idx='1586' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1593' live='654' stamp='0.141'/>
</phase>
<phase name='escapeAnalysis' nodes='1593' live='654' stamp='0.141'>
<phase name='connectionGraph' nodes='1594' live='655' stamp='0.141'>
<phase_done name='connectionGraph' nodes='1594' live='655' stamp='0.141'/>
</phase>
<phase_done name='escapeAnalysis' nodes='1594' live='655' stamp='0.141'/>
</phase>
<phase name='idealLoop' nodes='1594' live='655' stamp='0.141'>
<loop_tree>
<loop idx='1562' inner_loop='1' >
</loop>
<loop idx='1568' inner_loop='1' >
</loop>
<loop idx='1574' inner_loop='1' >
</loop>
<loop idx='1580' inner_loop='1' >
</loop>
<loop idx='1586' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1594' live='619' stamp='0.141'/>
</phase>
<phase name='idealLoop' nodes='1594' live='619' stamp='0.141'>
<loop_tree>
<loop idx='1562' inner_loop='1' >
</loop>
<loop idx='1568' inner_loop='1' >
</loop>
<loop idx='1574' inner_loop='1' >
</loop>
<loop idx='1580' inner_loop='1' >
</loop>
<loop idx='1586' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1725' live='650' stamp='0.141'/>
</phase>
<phase name='idealLoop' nodes='1725' live='650' stamp='0.141'>
<loop_tree>
<loop idx='1918' inner_loop='1' main_loop='1918' >
</loop>
<loop idx='1984' inner_loop='1' >
</loop>
<loop idx='2054' inner_loop='1' >
</loop>
<loop idx='2133' inner_loop='1' >
</loop>
<loop idx='2368' inner_loop='1' main_loop='2368' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2451' live='1177' stamp='0.149'/>
</phase>
<phase name='ccp' nodes='2451' live='1177' stamp='0.149'>
<phase_done name='ccp' nodes='2451' live='1177' stamp='0.149'/>
</phase>
<phase name='idealLoop' nodes='2454' live='1169' stamp='0.149'>
<loop_tree>
<loop idx='1825' inner_loop='1' pre_loop='1562' >
</loop>
<loop idx='1918' inner_loop='1' main_loop='1918' >
</loop>
<loop idx='1749' inner_loop='1' post_loop='1562' >
</loop>
<loop idx='2506' inner_loop='1' >
</loop>
<loop idx='2624' inner_loop='1' >
</loop>
<loop idx='2753' inner_loop='1' >
</loop>
<loop idx='2278' inner_loop='1' pre_loop='1586' >
</loop>
<loop idx='2368' inner_loop='1' main_loop='2368' >
</loop>
<loop idx='2203' inner_loop='1' post_loop='1586' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2959' live='1441' stamp='0.153'/>
</phase>
<phase name='idealLoop' nodes='2959' live='1441' stamp='0.153'>
<loop_tree>
<loop idx='1825' inner_loop='1' pre_loop='1562' >
</loop>
<loop idx='1918' inner_loop='1' main_loop='1918' >
</loop>
<loop idx='1749' inner_loop='1' post_loop='1562' >
</loop>
<loop idx='2278' inner_loop='1' pre_loop='1586' >
</loop>
<loop idx='2368' inner_loop='1' main_loop='2368' >
</loop>
<loop idx='2203' inner_loop='1' post_loop='1586' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2959' live='1376' stamp='0.154'/>
</phase>
<phase name='idealLoop' nodes='2959' live='1376' stamp='0.154'>
<loop_tree>
<loop idx='1825' inner_loop='1' pre_loop='1562' >
</loop>
<loop idx='1918' inner_loop='1' main_loop='1918' >
</loop>
<loop idx='1749' inner_loop='1' post_loop='1562' >
</loop>
<loop idx='2278' inner_loop='1' pre_loop='1586' >
</loop>
<loop idx='2368' inner_loop='1' main_loop='2368' >
</loop>
<loop idx='2203' inner_loop='1' post_loop='1586' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2984' live='1337' stamp='0.155'/>
</phase>
<phase_done name='optimizer' nodes='3077' live='1406' stamp='0.155'/>
</phase>
<phase name='matcher' nodes='3077' live='1406' stamp='0.155'>
<phase_done name='matcher' nodes='1353' live='1353' stamp='0.156'/>
</phase>
<phase name='regalloc' nodes='1834' live='1832' stamp='0.156'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='2144' live='2019' stamp='0.161'/>
</phase>
<phase name='output' nodes='2144' live='2019' stamp='0.161'>
<phase_done name='output' nodes='2269' live='2054' stamp='0.184'/>
</phase>
<dependency type='unique_concrete_method' ctxk='730' x='845'/>
<code_cache total_blobs='253' nmethods='24' adapters='143' free_code_cache='250503424'/>
<task_done success='1' nmsize='3384' count='60415' backedge_count='2234080' inlined_bytes='572' stamp='0.233'/>
</task>
<task compile_id='26' compile_kind='osr' method='com/github/marschall/charsequences/ParseUuidCompilation &lt;init&gt; ()V' bytes='40' count='1' backedge_count='134681' iicount='1' osr_bci='9' stamp='0.235'>
<phase name='parse' nodes='3' live='3' stamp='0.235'>
<type id='724' name='void'/>
<klass id='832' name='com/github/marschall/charsequences/ParseUuidCompilation' flags='1'/>
<method id='833' holder='832' name='&lt;init&gt;' return='724' flags='1' bytes='40' compile_id='25' compiler='C1' level='3' iicount='1'/>
<klass id='839' name='java/io/PrintStream' flags='1'/>
<uncommon_trap method='833' bci='27' reason='unloaded' action='reinterpret' index='32' klass='839'/>
<parse method='833' uses='1' osr_bci='9' stamp='0.235'>
<uncommon_trap method='833' bci='27' reason='unloaded' action='reinterpret' index='32' klass='839'/>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='leaf_type' ctxk='832'/>
<uncommon_trap bci='9' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='9' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='9' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='10'/>
<klass id='836' name='java/util/UUID' flags='17'/>
<method id='837' holder='832' name='parse' return='836' flags='0' bytes='6' compile_id='23' compiler='C2' level='4' iicount='103002'/>
<dependency type='unique_concrete_method' ctxk='832' x='837'/>
<call method='837' count='42390' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a big method'/>
<direct_call bci='10'/>
<uncommon_trap bci='10' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='15'/>
<type id='722' name='int'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='838' holder='735' name='identityHashCode' return='722' arguments='729' flags='265' bytes='0' compile_id='20' compile_kind='c2n' level='0' iicount='256'/>
<call method='838' count='42389' prof_factor='1' inline='1'/>
<intrinsic id='_identityHashCode' nodes='46'/>
<bc code='160' bci='19'/>
<branch target_bci='30' taken='42389' not_taken='0' cnt='42389' prob='always'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='36'/>
<branch target_bci='9' taken='42389' not_taken='0' cnt='42389' prob='always'/>
<uncommon_trap bci='36' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='216' live='210' memory='53624' stamp='0.236'/>
</parse>
<phase_done name='parse' nodes='217' live='160' stamp='0.236'/>
</phase>
<phase name='optimizer' nodes='217' live='160' stamp='0.236'>
<phase name='idealLoop' nodes='226' live='154' stamp='0.236'>
<loop_tree>
<loop idx='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='260' live='162' stamp='0.236'/>
</phase>
<phase name='idealLoop' nodes='260' live='162' stamp='0.236'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='265' live='159' stamp='0.236'/>
</phase>
<phase name='idealLoop' nodes='265' live='159' stamp='0.236'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='265' live='159' stamp='0.236'/>
</phase>
<phase name='ccp' nodes='265' live='159' stamp='0.236'>
<phase_done name='ccp' nodes='265' live='159' stamp='0.236'/>
</phase>
<phase name='idealLoop' nodes='266' live='156' stamp='0.236'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='284' live='150' stamp='0.236'/>
</phase>
<phase name='idealLoop' nodes='284' live='150' stamp='0.236'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='284' live='134' stamp='0.236'/>
</phase>
<phase name='idealLoop' nodes='284' live='134' stamp='0.236'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='284' live='134' stamp='0.236'/>
</phase>
<phase_done name='optimizer' nodes='287' live='134' stamp='0.236'/>
</phase>
<phase name='matcher' nodes='287' live='134' stamp='0.236'>
<phase_done name='matcher' nodes='125' live='125' stamp='0.236'/>
</phase>
<phase name='regalloc' nodes='166' live='165' stamp='0.236'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='196' live='181' stamp='0.237'/>
</phase>
<phase name='output' nodes='196' live='181' stamp='0.237'>
<phase_done name='output' nodes='215' live='192' stamp='0.237'/>
</phase>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='unique_concrete_method' ctxk='832' x='837'/>
<code_cache total_blobs='255' nmethods='26' adapters='143' free_code_cache='250500032'/>
<task_done success='1' nmsize='344' count='1' backedge_count='155510' stamp='0.238'/>
</task>
</compilation_log>
<hotspot_log_done stamp='0.296'/>
</hotspot_log>
